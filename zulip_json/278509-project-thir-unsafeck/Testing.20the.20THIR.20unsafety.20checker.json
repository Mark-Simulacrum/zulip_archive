[
    {
        "content": "<p>There currently aren't any THIR-unsafeck-specific bug tracked on the repo. What can we do to try to find some more?</p>\n<ul>\n<li>Is it too early to do any sort of crater run?<ul>\n<li>IIRC there is an option to do smaller crater runs that don't run on every crate in <a href=\"http://crates.io\">crates.io</a>?</li>\n<li>The lang team might also be interested in some of the results regarding <a href=\"https://github.com/rust-lang/rust/issues/80059\">#80059</a> (<code>let _ = *ptr;</code>) and <a href=\"https://github.com/rust-lang/rust/issues/87520\">#87520</a> (safe and unsafe union patterns)</li>\n</ul>\n</li>\n<li>The <code>-Z thir-unsafeck</code> flag is still described as unsound. Should this still be the case now that the implementation is complete?</li>\n<li>Should we ask people to test <code>-Z thir-unsafeck</code> on their code?<ul>\n<li>Could start here on Zulip, maybe IRLO</li>\n<li>Maybe this is a bad time to do it with the 2021 edition coming up</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> any opinion or advice?</p>",
        "id": 250298879,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629675490
    },
    {
        "content": "<blockquote>\n<p>The -Z thir-unsafeck flag is still described as unsound. Should this still be the case now that the implementation is complete?</p>\n</blockquote>\n<p>yea, we should not emit the incomplete warning anymore.</p>",
        "id": 250338260,
        "sender_full_name": "oli",
        "timestamp": 1629718091
    },
    {
        "content": "<p>wrt your other questions, I think the right way forward is to do a full <code>check</code> crater run, then people don't have to try it out themselves and we get some good data</p>",
        "id": 250338297,
        "sender_full_name": "oli",
        "timestamp": 1629718128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/278509-project-thir-unsafeck/topic/Testing.20the.20THIR.20unsafety.20checker/near/250338260\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The -Z thir-unsafeck flag is still described as unsound. Should this still be the case now that the implementation is complete?</p>\n</blockquote>\n<p>yea, we should not emit the incomplete warning anymore.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> filed <a href=\"https://github.com/rust-lang/rust/issues/88259\">#88259</a>.<br>\n(It's not an incomplete feature so there was no warnings, but the description for the flag wrote \"this is unsound\")</p>",
        "id": 250347558,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629723596
    },
    {
        "content": "<p>right... so... if you want we can start a crater run, just open a PR that enables the feature unconditionally and we can use that PR to do a crater run.</p>",
        "id": 250353532,
        "sender_full_name": "oli",
        "timestamp": 1629726385
    },
    {
        "content": "<p>We can use <a href=\"https://github.com/rust-lang/rust/issues/87710\">#87710</a> if I rebase it on master</p>",
        "id": 250353619,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629726434
    },
    {
        "content": "<p>Rebased</p>",
        "id": 250353807,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629726522
    },
    {
        "content": "<p>CI failure is intriguing though, looks like this doesn't emit a warning with MIR unsafeck:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">unsf</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">unsf</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Even though this compiles:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">unsf</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">unsf</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 250357094,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629727938
    },
    {
        "content": "<p>I wanted to find bugs in the THIR unsafeck, not the MIR one! <a href=\"https://github.com/rust-lang/rust/issues/88260\">#88260</a></p>",
        "id": 250359794,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629729075
    },
    {
        "content": "<p>Makes me want to have a <code>fixed-by-thir-unsafeck</code> label <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 250359979,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629729156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">Léo Lanteri Thauvin</span> <a href=\"#narrow/stream/278509-project-thir-unsafeck/topic/Testing.20the.20THIR.20unsafety.20checker/near/250359979\">said</a>:</p>\n<blockquote>\n<p>Makes me want to have a <code>fixed-by-thir-unsafeck</code> label <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>\n</blockquote>\n<p>added ^^</p>",
        "id": 250369844,
        "sender_full_name": "oli",
        "timestamp": 1629733432
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79735\">#79735</a> should get tagged with that</p>",
        "id": 250390652,
        "sender_full_name": "Smittyvb",
        "timestamp": 1629742859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> my impression is that there are still sound outstanding \"questions\" for lang team, right?</p>",
        "id": 250634288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629904585
    },
    {
        "content": "<p>I'd like to work with you on preparing a PR that amends the Rust reference here</p>",
        "id": 250634304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629904600
    },
    {
        "content": "<p>and settling some of those rules</p>",
        "id": 250634312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629904606
    },
    {
        "content": "<p>My impression was that the lang team would like to have more data</p>",
        "id": 250634348,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629904622
    },
    {
        "content": "<p>Especially for <a href=\"https://github.com/rust-lang/rust/issues/87520\">#87520</a></p>",
        "id": 250634412,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629904668
    },
    {
        "content": "<p>(<a href=\"#narrow/stream/213817-t-lang/topic/union.20field.20semantics.20and.20safety/near/248264702\">https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/union.20field.20semantics.20and.20safety/near/248264702</a>)</p>",
        "id": 250635332,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1629905090
    },
    {
        "content": "<p>Results for the crater run are out</p>",
        "id": 250841800,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630012693
    },
    {
        "content": "<p>But it hasn't produced any genuine results which makes me suspicious</p>",
        "id": 250841843,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630012720
    },
    {
        "content": "<p>Actually no build failed due to E0133 (<code>rg E0133</code> yields no results in the <code>error</code> logs from crater)</p>",
        "id": 250842226,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630012916
    },
    {
        "content": "<p>Oh wait \"error\" is test errors, isn't it?</p>",
        "id": 250854803,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630019212
    },
    {
        "content": "<p>Yeah I need \"build-fail\" <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 250854856,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630019260
    },
    {
        "content": "<p>Every failed build has the same number of <code>E0133</code>s except <code>germanespinosa/rustafaridb</code> going from 14 to 10</p>",
        "id": 250855318,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630019546
    },
    {
        "content": "<p>We get from</p>\n<div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n[INFO] [stdout]   --&gt; src/log.rs:16:26\n[INFO] [stdout]    |\n[INFO] [stdout] 16 |         if let Some(s) = log_sender\n[INFO] [stdout]    |                          ^^^^^^^^^^ use of mutable static\n[INFO] [stdout]    |\n[INFO] [stdout]    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n[INFO] [stdout]\n[INFO] [stdout]\n[INFO] [stdout] error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n[INFO] [stdout]   --&gt; src/log.rs:16:16\n[INFO] [stdout]    |\n[INFO] [stdout] 16 |         if let Some(s) = log_sender\n[INFO] [stdout]    |                ^^^^^^^ use of mutable static\n[INFO] [stdout]    |\n[INFO] [stdout]    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n[INFO] [stdout]\n[INFO] [stdout]\n[INFO] [stdout] error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n[INFO] [stdout]   --&gt; src/log.rs:16:21\n[INFO] [stdout]    |\n[INFO] [stdout] 16 |         if let Some(s) = log_sender\n[INFO] [stdout]    |                     ^ use of mutable static\n[INFO] [stdout]    |\n[INFO] [stdout]    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n</code></pre></div>\n<p>to just a single error</p>\n<div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n[INFO] [stdout]   --&gt; src/log.rs:16:26\n[INFO] [stdout]    |\n[INFO] [stdout] 16 |         if let Some(s) = log_sender\n[INFO] [stdout]    |                          ^^^^^^^^^^ use of mutable static\n[INFO] [stdout]    |\n[INFO] [stdout]    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n</code></pre></div>\n<p>which is an improvement</p>",
        "id": 250855715,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1630019807
    }
]