[
    {
        "content": "<p>hello, Zulip!<br>\ni'm interested in helping contribute to this project, will this be too complicated for a mere mortal like me? (i've only touched the standard library tests, once)</p>",
        "id": 229601368,
        "sender_full_name": "danii",
        "timestamp": 1615350168
    },
    {
        "content": "<p>I think the biggest problem is conflicts with <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> 's work. There were a few ideas spawned off in the eager THIR PR that I think can be pursued in parallel. One thing that could be looked into as a separate project would be the deduplication of pattern building. We currently build patterns twice, but there's no reason to actually do so, and I don't know what's the status on that. So the first step would be to analyze that</p>",
        "id": 229633110,
        "sender_full_name": "oli",
        "timestamp": 1615371545
    },
    {
        "content": "<p>even so, please coordinate with <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> on anything before starting to work on  something, as I don't know what they already have in the pipeline</p>",
        "id": 229633188,
        "sender_full_name": "oli",
        "timestamp": 1615371595
    },
    {
        "content": "<p>I've opened a few issues in the <a href=\"https://github.com/rust-lang/project-thir-unsafeck\">project-thir-unsafeck</a> which can be used to assign work</p>",
        "id": 229634945,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1615372482
    },
    {
        "content": "<p>But everything is blocked on <a href=\"https://github.com/rust-lang/rust/issues/82495\">#82495</a> right now</p>",
        "id": 229635030,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1615372524
    },
    {
        "content": "<p>Feel free to take a look at the open issues and see if you can find something you're interested in working on</p>",
        "id": 229635177,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1615372599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"340105\">@danii</span> if you're still interested in contributing, here are a few notes:</p>\n<ul>\n<li>if you've never worked on the compiler before, I think you could start with <a href=\"https://github.com/rust-lang/project-thir-unsafeck/issues/6\">project-thir-unsafeck#6</a>, which is about updating and improving the documentation of the compiler. This should give you some context to then be able to write code</li>\n<li>I've just opened <a href=\"https://github.com/rust-lang/rust/issues/83129\">#83129</a>, which, if merged, will make it possible to implement the THIR unsafety checker as incremental steps: just take a type of unsafe operation (I like to refer to the list <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_middle/mir/query.rs.html#55-119\">here</a>), add it to the unsafeck and file a PR</li>\n<li>as <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> was saying, there is also <a href=\"https://github.com/rust-lang/project-thir-unsafeck/issues/4\">project-thir-unsafeck#4</a> which seems more complex to me, but I haven't yet completely grasped how exhaustiveness checking works. I'd like to maybe extract it to its own module as a first step</li>\n</ul>\n<p>If any of this is unclear feel free to ping me :)</p>",
        "id": 230272581,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1615759637
    }
]