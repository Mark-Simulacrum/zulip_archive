[
    {
        "content": "<p>I think there's something interesting going on when the default nightly is the same as one of the range it's trying to bisect</p>",
        "id": 185205771,
        "sender_full_name": "lqd",
        "timestamp": 1578571886
    },
    {
        "content": "<p>I'm on <code>rustc 1.42.0-nightly (ef92009c1 2020-01-06)</code> it has the default name <code>nightly</code> in rustup (nightly-x86_64-unknown-linux-gnu)</p>",
        "id": 185205863,
        "sender_full_name": "lqd",
        "timestamp": 1578571956
    },
    {
        "content": "<p>when trying to bisect something where the end range was also 2020-01-06 cargo-bisect-rustc kept saying the end range does not reproduce the regression</p>",
        "id": 185205897,
        "sender_full_name": "lqd",
        "timestamp": 1578571994
    },
    {
        "content": "<p>even though it does when testing manually or via --script</p>",
        "id": 185205907,
        "sender_full_name": "lqd",
        "timestamp": 1578572004
    },
    {
        "content": "<p>turns out there was an error running the command</p>",
        "id": 185205917,
        "sender_full_name": "lqd",
        "timestamp": 1578572021
    },
    {
        "content": "<p>the problem seems to be that cargo-bisect-rustc was using its \"bisector\" nightly name</p>",
        "id": 185205987,
        "sender_full_name": "lqd",
        "timestamp": 1578572059
    },
    {
        "content": "<p>which it hadn't installed since the default nightly has the same date</p>",
        "id": 185206005,
        "sender_full_name": "lqd",
        "timestamp": 1578572072
    },
    {
        "content": "<p>it passed the toolchain via the env<code>RUSTUP_TOOLCHAIN: bisector-nightly-2020-01-06-x86_64-unknown-linux-gnu</code> and rustup failed with <code>error: toolchain 'bisector-nightly-2020-01-06-x86_64-unknown-linux-gnu' is not installed</code></p>",
        "id": 185206170,
        "sender_full_name": "lqd",
        "timestamp": 1578572213
    },
    {
        "content": "<p>all these errors happen inside cargo-bisect-rustc, for the user it's just </p>\n<div class=\"codehilite\"><pre><span></span>verifying the end of the range reproduces the regression\ntested nightly-2020-01-06, got No\n</pre></div>",
        "id": 185206276,
        "sender_full_name": "lqd",
        "timestamp": 1578572289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> can you fill an issue? or well a PR would be even better :)</p>",
        "id": 185214240,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1578578795
    },
    {
        "content": "<p>lol nice try :p</p>",
        "id": 185214253,
        "sender_full_name": "lqd",
        "timestamp": 1578578818
    },
    {
        "content": "<p>:P</p>",
        "id": 185214275,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1578578839
    },
    {
        "content": "<p>I'll try to file an issue later yeah</p>",
        "id": 185214283,
        "sender_full_name": "lqd",
        "timestamp": 1578578846
    },
    {
        "content": "<p>I didn't fix it locally, only worked around it by changing the bounds on my bisection and it didn't fall on the nightly date again so it succeeded</p>",
        "id": 185214324,
        "sender_full_name": "lqd",
        "timestamp": 1578578880
    },
    {
        "content": "<p>I can try to fix it but I'll need to try one of your homemade beers if/when I ever visit Montevideo :p</p>",
        "id": 185214629,
        "sender_full_name": "lqd",
        "timestamp": 1578579075
    },
    {
        "content": "<p>for that you would need to implement <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/40\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/40\">cargo-bisect-rustc#40</a></p>",
        "id": 185215119,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1578579444
    },
    {
        "content": "<p>and I can even take one bottle for you to All Hands if you're attending</p>",
        "id": 185215392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1578579608
    },
    {
        "content": "<p>(unsure about All Hands tbh)</p>",
        "id": 185215601,
        "sender_full_name": "lqd",
        "timestamp": 1578579730
    },
    {
        "content": "<p>(and yeah using the GH API would be nice :)</p>",
        "id": 185215643,
        "sender_full_name": "lqd",
        "timestamp": 1578579770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215267\">@Andrés Margalef</span> and/or <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> were after that one :)</p>",
        "id": 185215801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1578579870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> did you ever file an issue about this? I am encountering it too; it is super confusing.</p>",
        "id": 187682174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581111061
    },
    {
        "content": "<p>sorry I may have forgotten to do it (very confusing yeah, I think I spent quite a while to see this was the reason bisection didn't work on my example)</p>",
        "id": 187682632,
        "sender_full_name": "lqd",
        "timestamp": 1581111412
    },
    {
        "content": "<p>indeed. It seems entirely acccidental that cargo-bisect-rustc works at all when one has <code>rustup default nightly</code></p>",
        "id": 187684589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581112976
    },
    {
        "content": "<p>will take a look at this next week :)</p>",
        "id": 187693903,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581122646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thoughts on <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/45\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/45\">https://github.com/rust-lang/cargo-bisect-rustc/pull/45</a> ? cc <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 187814660,
        "sender_full_name": "lqd",
        "timestamp": 1581341302
    },
    {
        "content": "<p>/me will casually return to waiting for delicious Uruguayan artisan craft beers from Santiago <em>whistles</em> :)</p>",
        "id": 187814834,
        "sender_full_name": "lqd",
        "timestamp": 1581341452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I’m not really around today but yeah that seems good. Although, shouldn’t you get the name from the installation rather than using “nighly”?</p>",
        "id": 187816737,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581342840
    },
    {
        "content": "<p>I don't yet know how to do that but sure why not</p>",
        "id": 187817140,
        "sender_full_name": "lqd",
        "timestamp": 1581343107
    },
    {
        "content": "<blockquote>\n<p>why not</p>\n</blockquote>\n<p>some more thoughts about that are in the PR comments; I don't know we can have non-standard names for existing channels, and the question could even be \"shouldn't we actually avoid using a +name since this is about the default toolchain\"</p>",
        "id": 187822011,
        "sender_full_name": "lqd",
        "timestamp": 1581346350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> sorry, but yesterday I wasn't really around, just got your ping and answered from my phone</p>",
        "id": 187922028,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581435148
    },
    {
        "content": "<p>I agree with the latest comment <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has made</p>",
        "id": 187922047,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581435157
    },
    {
        "content": "<p>I'd just do rustup link for the default nightly and leave the logic as it was</p>",
        "id": 187922128,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581435212
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 187944586,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581449062
    },
    {
        "content": "<p>honestly I don't even understand how cargo-bisect-rustc is installing and uninstalling the downloaded toolchains as it doesn't seem to call <code>rustup</code> ? Linking requires a path to the installed toolchain, which I don't think rustup provides, so the path will also be OS-dependent IIUC and it won't just be calling a shell command like </p>\n<div class=\"codehilite\"><pre><span></span>rustup toolchain link bisector-details ~/.rustup/toolchains/`rustup default | awk &#39;{ print $1 }&#39;`\n</pre></div>\n\n\n<p>(at least I don't think users can also override the <code>.rustup</code> name, but I'm not sure). </p>\n<p>That seems less interesting than just downloading the one nightly you already have and make biseection work for people on nightly by default ?</p>",
        "id": 188000074,
        "sender_full_name": "lqd",
        "timestamp": 1581505676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> why do you say it doesn't seem to be calling <code>rustup</code> ? It may be slightly obscured, but I thought I tracked that down</p>",
        "id": 188018749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581520578
    },
    {
        "content": "<p>oh, wait, maybe it just downloads and unpacks the tarballs itself...</p>",
        "id": 188019165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581520856
    },
    {
        "content": "<p>yes</p>",
        "id": 188019222,
        "sender_full_name": "lqd",
        "timestamp": 1581520894
    },
    {
        "content": "<p>there's mention of a fallback as well</p>",
        "id": 188019240,
        "sender_full_name": "lqd",
        "timestamp": 1581520919
    },
    {
        "content": "<p>but that is definitely weird to not use <code>rustup</code> while at the same time leverage the <code>rustup</code> system (the <code>cargo +version ...</code> stuff)</p>",
        "id": 188019348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581520979
    },
    {
        "content": "<p>I saw no rustup cmds to install/uninstall, only unpacking the tarball and deleting the tmp folder, so that's why I asked</p>",
        "id": 188019474,
        "sender_full_name": "lqd",
        "timestamp": 1581521047
    },
    {
        "content": "<p>is it magically guessing the right directory name to unpack the tarball into such that rustup will then use that directory?</p>",
        "id": 188019519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581521086
    },
    {
        "content": "<p>when I was working on the tool I had the same doubts</p>",
        "id": 188019702,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581521181
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can help us here :)</p>",
        "id": 188019712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581521191
    },
    {
        "content": "<p>rustup cannot currently download from CI</p>",
        "id": 188019754,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521215
    },
    {
        "content": "<p>rustup's <code>+version</code> support, to my knowledge, essentially just looks like <code>~/.rustup/toolchains/&lt;version&gt;</code></p>",
        "id": 188019811,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521242
    },
    {
        "content": "<p>you mean cargo-bisect-rustc is downloading the toolchains in the rustup toolchain folder ?</p>",
        "id": 188019917,
        "sender_full_name": "lqd",
        "timestamp": 1581521282
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you mean <code>rustup</code> \"can't\" because it doesn't have something like <a href=\"https://github.com/kennytm/rustup-toolchain-install-master\" target=\"_blank\" title=\"https://github.com/kennytm/rustup-toolchain-install-master\">kennytm's rustup-toolchain-install-master</a> built into it?</p>",
        "id": 188019930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581521287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> right, yes</p>",
        "id": 188019936,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521294
    },
    {
        "content": "<p>that tool does the same thing bisect does afaik, i.e., puts a directory inside rustup</p>",
        "id": 188019958,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521307
    },
    {
        "content": "<p><a href=\"https://github.com/kennytm/rustup-toolchain-install-master/blob/master/src/main.rs#L403-L410\" target=\"_blank\" title=\"https://github.com/kennytm/rustup-toolchain-install-master/blob/master/src/main.rs#L403-L410\">https://github.com/kennytm/rustup-toolchain-install-master/blob/master/src/main.rs#L403-L410</a></p>",
        "id": 188020002,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521346
    },
    {
        "content": "<p>ok so they are \"installed\" in the sense that <code>rustup toolchain list</code> is essentially <code>ls ~/.rustup/toolchains\n</code></p>",
        "id": 188020004,
        "sender_full_name": "lqd",
        "timestamp": 1581521348
    },
    {
        "content": "<p>yes</p>",
        "id": 188020010,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521355
    },
    {
        "content": "<p>ok that clears things up a bit thanks</p>",
        "id": 188020049,
        "sender_full_name": "lqd",
        "timestamp": 1581521386
    },
    {
        "content": "<p>it would be nicer if tools like this could throw such products into a subdirectory</p>",
        "id": 188020115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581521404
    },
    {
        "content": "<p>e.g. <code>~/.rustup/toolchains/bisections/...</code>; but i guess if they use a nice naming convention then that is good enough.</p>",
        "id": 188020210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581521488
    },
    {
        "content": "<p>yeah, that would be better</p>",
        "id": 188020314,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521542
    },
    {
        "content": "<p>but I think rustup doesn't support that today</p>",
        "id": 188020327,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521549
    },
    {
        "content": "<p>realistically I've long wanted to upstream the CI stuff into rustup (e.g., at well-known <code>ci-sha</code>)</p>",
        "id": 188020348,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521566
    },
    {
        "content": "<p>and then bisect would just do <code>rustup install ci-sha</code> and everything would be nice</p>",
        "id": 188020362,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521578
    },
    {
        "content": "<p>But I really don't have the will to dig into that when what we have today mostly works :)</p>",
        "id": 188020415,
        "sender_full_name": "simulacrum",
        "timestamp": 1581521624
    },
    {
        "content": "<p><del>so making the default nightly's <code>rustup_name</code> return what <code>rustup default</code> returns seems more \"natural\" than using <code>rustup link</code> and <code>rustup toolchain uninstall</code> just for this one nightly ?</del> actually, meh, I won't have much more time to dedicate to this for a while</p>",
        "id": 188025500,
        "sender_full_name": "lqd",
        "timestamp": 1581524253
    },
    {
        "content": "<p>i just put up <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/55\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/55\">cargo-bisect-rustc#55</a> which tries to resolve this in the way that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> described.</p>",
        "id": 188761907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582310794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/55\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/55\">cargo-bisect-rustc#55</a> merged</p>",
        "id": 188939865,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1582560779
    }
]