[
    {
        "content": "<p>Moving this to a new thread from <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/release.20a.20new.20version\" title=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/release.20a.20new.20version\">Release New Version</a> so that we can continue the conversation</p>\n<p>pnkfelix said: </p>\n<blockquote>\n<p>wishes we had a test suite.</p>\n</blockquote>\n<p>pnkfelix said: </p>\n<blockquote>\n<p>actually I guess it wouldn't be that hard to make a test suite, if we're willing to use --end for all the tests, and just cross our finges that the behavior without --end does not break.</p>\n</blockquote>\n<p>Chris Simpkins said: </p>\n<blockquote>\n<p>I've been thinking through how to approach this. The commit level rustc caches expire at the 167 day mark so the tests covering this part of the source would need to be updated periodically.</p>\n</blockquote>\n<p>pnkfelix said:</p>\n<blockquote>\n<p>hmm. that is a good point.<br>\nwe might at least be able to make the update process relatively painless, by using rustversion and #[rustc_error]...</p>\n</blockquote>",
        "id": 189047981,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1582656138
    },
    {
        "content": "<p>another option would be to just not attempt to test the commit level caches... :(</p>",
        "id": 189052512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582659271
    },
    {
        "content": "<p>or maybe we could find out if we could ... \"bless\" certain commits to live beyond the 167 day expiration period, solely for the purpose of supporting the test suite? That might be the simplest option here...</p>",
        "id": 189052596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582659335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any thought on the latter approach?</p>",
        "id": 189052620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582659354
    },
    {
        "content": "<p>I'd just test on nightlies for now, blessing is possible but a bit painful i think</p>",
        "id": 189053274,
        "sender_full_name": "simulacrum",
        "timestamp": 1582659773
    },
    {
        "content": "<p>Or just updated the test once a year ish</p>",
        "id": 189053477,
        "sender_full_name": "simulacrum",
        "timestamp": 1582659912
    },
    {
        "content": "<p>Which might be reasonable</p>",
        "id": 189053487,
        "sender_full_name": "simulacrum",
        "timestamp": 1582659922
    },
    {
        "content": "<p>To test new things</p>",
        "id": 189053501,
        "sender_full_name": "simulacrum",
        "timestamp": 1582659933
    },
    {
        "content": "<p>wouldn't it would need to be roughly twice a year? (365 / 167 \\approx 2?)</p>",
        "id": 189053860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582660169
    },
    {
        "content": "<p>(and really this is the kind of thing where you need to round up, not down. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>  so ⌈365/167⌉ = 3 ...</p>",
        "id": 189054087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582660278
    },
    {
        "content": "<p>nonetheless, updating the tests three times a year probably <em>is</em> better than blessing some random commits</p>",
        "id": 189054161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582660313
    },
    {
        "content": "<p>We just need to make sure that there is at least one good regression every six months...  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 189059440,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1582663574
    },
    {
        "content": "<p>yes, I would personally lean towards updating the test I think for now at least, long-term I think we may want to eventually have commit artifacts stick around even longer -- e.g., we'd preserve every 5th commit after 167 days</p>",
        "id": 189064518,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667097
    },
    {
        "content": "<p>one note: we could \"fake\" commit bisection in theory for the tests</p>",
        "id": 189065085,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667472
    },
    {
        "content": "<p>i.e., we separately test that we can download commits for example</p>",
        "id": 189065097,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667481
    },
    {
        "content": "<p>but then for the actual test of commit bisection we provide a custom \"url generator\" or \"downloader\" impl that actually downloads nightlies behind the back of the commit bisection</p>",
        "id": 189065127,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667510
    },
    {
        "content": "<p>which are, at least in theory, \"just\" sparse commits</p>",
        "id": 189065194,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667536
    },
    {
        "content": "<p>i.e. everything's a rollup</p>",
        "id": 189065203,
        "sender_full_name": "simulacrum",
        "timestamp": 1582667541
    },
    {
        "content": "<p>Could we mock the regression check part of execution with a handful of strategically designed executables in a repository that is designed to have a series of git commits in a ‘nightly’ and a roll up PR.  ‘rustc’ could even be scripts that just spit out the proper exit status codes and stderr messages for the tests.</p>",
        "id": 189070808,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1582672194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/189064518\" title=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/189064518\">said</a>:</p>\n<blockquote>\n<p>yes, I would personally lean towards updating the test I think for now at least, long-term I think we may want to eventually have commit artifacts stick around even longer -- e.g., we'd preserve every 5th commit after 167 days</p>\n</blockquote>\n<p>Or maybe go with a exponentially decaying archive: after 167 days, keep the 2nd, 4th, 8th, 16th, 32nd, ... commits</p>",
        "id": 189084620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582690059
    },
    {
        "content": "<p>(I am mostly kidding; we're keeping the nightlies anyway)</p>",
        "id": 189084666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582690088
    },
    {
        "content": "<p>((and hopefully someone will keep paying for that expanding storage in perpetuity ....))</p>",
        "id": 189084693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582690160
    },
    {
        "content": "<p>yeah, I think the main reason we've not done it is it's somewhat non-trivial to do and not really worthwhile</p>",
        "id": 189116011,
        "sender_full_name": "simulacrum",
        "timestamp": 1582725834
    },
    {
        "content": "<p>okay after poking around a bit, I found a crate <a href=\"https://crates.io/crates/rustversion\" target=\"_blank\" title=\"https://crates.io/crates/rustversion\">rustversion</a> that used a <code>build.rs</code> script to inspect the rustc version. I tried using that crate directly, but it takes too long to repeatedly compile it and its depedencies during bisection. But the strategy itself is <em>easily</em> adapted.</p>",
        "id": 189537108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583183479
    },
    {
        "content": "<p>I hope to have a PR with some demo tests up in a bit.</p>",
        "id": 189537168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583183512
    },
    {
        "content": "<p>It looks like this is a \"stable\" ICE for testing? <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> =&gt; <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=30d4e67ce98fb868270b4796f9ad077e\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=30d4e67ce98fb868270b4796f9ad077e\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=30d4e67ce98fb868270b4796f9ad077e</a></p>",
        "id": 189983149,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583609685
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/189537108\" title=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/189537108\">said</a>:</p>\n<blockquote>\n<p>okay after poking around a bit, I found a crate <a href=\"https://crates.io/crates/rustversion\" target=\"_blank\" title=\"https://crates.io/crates/rustversion\">rustversion</a> that used a <code>build.rs</code> script to inspect the rustc version. I tried using that crate directly, but it takes too long to repeatedly compile it and its depedencies during bisection. But the strategy itself is <em>easily</em> adapted.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Do you have more details about how you intend to approach this?</p>",
        "id": 190906255,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1584476755
    },
    {
        "content": "<p>Yeah i have a demo in a branch</p>",
        "id": 190971803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1584534081
    },
    {
        "content": "<p>sorry that I didn't follow up about this</p>",
        "id": 193094478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586203770
    },
    {
        "content": "<p>here is the branch with WIP demo: <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/compare/master...pnkfelix:add-cli-test-frameworkl?expand=1\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/compare/master...pnkfelix:add-cli-test-frameworkl?expand=1\">https://github.com/rust-lang/cargo-bisect-rustc/compare/master...pnkfelix:add-cli-test-frameworkl?expand=1</a></p>",
        "id": 193094498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586203783
    },
    {
        "content": "<p>No worries!  Will check it out Felix.  Thanks</p>",
        "id": 193097788,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1586205187
    },
    {
        "content": "<p>@t-compiler/cargo-bisect-rustc Picking up the conversation on bisect-rustc testing again in light of the discussion in <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Searched.20date.20range.20misreported.20.2382\">https://rust-lang.zulipchat.com/#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Searched.20date.20range.20misreported.20.2382</a>.   Is there time/interest to pitch in on an effort to refactor the bisect-rustc source, broaden test support, and review PR's with these changes?</p>",
        "id": 197299207,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589299580
    },
    {
        "content": "<p>I might be willing to try to revive that branch I made</p>",
        "id": 197324778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589311036
    },
    {
        "content": "<p>let me see if I can allocate time to do this today</p>",
        "id": 197415094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589377832
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/88\">https://github.com/rust-lang/cargo-bisect-rustc/pull/88</a></p>",
        "id": 197495702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589417119
    },
    {
        "content": "<p>Added GNU/Linux, macOS, Win GH Actions CI workflows in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/90\">https://github.com/rust-lang/cargo-bisect-rustc/pull/90</a></p>",
        "id": 197649378,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589520086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> looks good, should we merge this now or wait for <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/89\">cargo-bisect-rustc#89</a> ?</p>",
        "id": 197694338,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589550954
    },
    {
        "content": "<p>also about <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/89\">cargo-bisect-rustc#89</a> we can temporarily fix on our side by adding that dependency bump in our <code>Cargo.toml</code></p>",
        "id": 197694534,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589551024
    },
    {
        "content": "<p>I think that it may be helpful for <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  to work on his CI testing PR.  That was the goal at least... <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>.  As long as Felix doesn't mind, I think that we can merge it</p>",
        "id": 197694549,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589551030
    },
    {
        "content": "<p>yeah my main concern is <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/issues/89\">cargo-bisect-rustc#89</a> won't this make all the future PRs fail unless the PR is to fix that problem?</p>",
        "id": 197694648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589551079
    },
    {
        "content": "<p>Fix just submitted in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/91\">https://github.com/rust-lang/cargo-bisect-rustc/pull/91</a></p>",
        "id": 197695126,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589551276
    },
    {
        "content": "<p>both merged</p>",
        "id": 197695328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589551357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/197695126\">said</a>:</p>\n<blockquote>\n<p>Fix just submitted in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/91\">https://github.com/rust-lang/cargo-bisect-rustc/pull/91</a></p>\n</blockquote>\n<p>I guess it's better to make the bump in <code>Cargo.toml</code> but anyway, if they will fix this on console we would need to later revert the <code>Cargo.toml</code> change so ... meh</p>",
        "id": 197695450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589551416
    },
    {
        "content": "<p>I'm sorry that I haven't been following everything that's been going on, but: did <code>--regress=ice</code> support break at some point in the past month or so?</p>",
        "id": 197711099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589557514
    },
    {
        "content": "<p>I'm a little surprised by the behavior I'm seeing from <code>cargo-bisect-rustc</code> on one of my test cases, and I thought I should do some sanity checking first...</p>",
        "id": 197711175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589557546
    },
    {
        "content": "<p>hmm I wonder if this is due to <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/78\">https://github.com/rust-lang/cargo-bisect-rustc/pull/78</a> ...</p>",
        "id": 197711445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589557651
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> maybe ...</p>",
        "id": 197713346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558521
    },
    {
        "content": "<p>do you have the app you're trying available?</p>",
        "id": 197713399,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558533
    },
    {
        "content": "<p>if you have I can test it out</p>",
        "id": 197713408,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558537
    },
    {
        "content": "<p>and fix the issues we may be hitting</p>",
        "id": 197713447,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558553
    },
    {
        "content": "<p>the app is the \"eventually_ice\" test from <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/88\">https://github.com/rust-lang/cargo-bisect-rustc/pull/88</a></p>",
        "id": 197713707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558673
    },
    {
        "content": "<p>the basic problem</p>",
        "id": 197713720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558678
    },
    {
        "content": "<p>is that <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/78\">https://github.com/rust-lang/cargo-bisect-rustc/pull/78</a> assumes that  error code 101 suffices to identify ICE's</p>",
        "id": 197713766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558697
    },
    {
        "content": "<p>and that is... bogus?</p>",
        "id": 197713778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558702
    },
    {
        "content": "<p>namely, I think even normal compiler errors return error code 101 from cargo?</p>",
        "id": 197713813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558716
    },
    {
        "content": "<p>basically, I <em>think</em> that any crate that has a \"normal error\" on version A of rustc, and an ICE on version B of rustc, will fail when you try to run <code>--regress=ice</code></p>",
        "id": 197714007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558789
    },
    {
        "content": "<p>because now cargo-bisect-rustc is incorrectly thinking that version A causes an ICE, and thus reports that the start commit is not allowed to reproduce the regression.</p>",
        "id": 197714058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558821
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, do you have a fix for this or we should just revert?</p>",
        "id": 197714107,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558846
    },
    {
        "content": "<p>I think the easy fix is to resume processing stderr for the cases where we are getting an error code</p>",
        "id": 197714116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558848
    },
    {
        "content": "<p>but the main issue is that other kinds of crashes still need to be identified</p>",
        "id": 197714232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558884
    },
    {
        "content": "<p>let me see what I can do</p>",
        "id": 197714248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558895
    },
    {
        "content": "<p>eh, simplest maybe to just revert it</p>",
        "id": 197714311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558932
    },
    {
        "content": "<p>land my test</p>",
        "id": 197714318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558936
    },
    {
        "content": "<p>and then see about re-adding the functionality of <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/78\">https://github.com/rust-lang/cargo-bisect-rustc/pull/78</a> in a way that does not break my test</p>",
        "id": 197714378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589558959
    },
    {
        "content": "<p>do you want me to do this, I meant, revert and explain in the PR?</p>",
        "id": 197714428,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558985
    },
    {
        "content": "<p>I'll take care of it</p>",
        "id": 197714495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589559007
    },
    {
        "content": "<p>I'll make it part of the PR that adds my test</p>",
        "id": 197714515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589559019
    },
    {
        "content": "<p>ok, it's not a problem for me but <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 197714525,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589559025
    },
    {
        "content": "<p>cool, going to work a bit on pre-prioritization automation then :)</p>",
        "id": 197714544,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589559043
    },
    {
        "content": "<p>unless you think there is a strong reason to make the revert part of a separate PR?</p>",
        "id": 197714545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589559043
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 197714560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589559052
    },
    {
        "content": "<p>hmm. Glacier seems to think that normal errors will non-101 (and non-zero) error codes.</p>",
        "id": 197719381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589561089
    },
    {
        "content": "<p>I wonder if this is something where rustc produces non-101 but cargo produces 101?</p>",
        "id": 197719717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589561248
    },
    {
        "content": "<p>What is the issue with rustfmt Felix?</p>",
        "id": 197728835,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589565408
    },
    {
        "content": "<p><del>Also, do we want to push the Windows build fix today or wait on the ICE definition to be addressed?</del> Pushed as v0.5.1</p>",
        "id": 197730626,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1589566181
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/197728835\">said</a>:</p>\n<blockquote>\n<p>What is the issue with rustfmt Felix?</p>\n</blockquote>\n<p>It is some bug with how it deals with <code>mod inner { mod file1; mod file2; }</code> within <del>a #[test]</del> the <code>tests/</code> directory for a crate</p>",
        "id": 197960688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589819524
    },
    {
        "content": "<p>Its already logged as an issue on the <code>rustfmt</code> repository</p>",
        "id": 197960725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589819540
    },
    {
        "content": "<p>(and I linked to it from my PR; its <a href=\"https://github.com/rust-lang/rustfmt/issues/3794\">rust-lang/rustfmt#3794</a> )</p>",
        "id": 197960885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1589819619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> push the ICE definition changes (revert recent ICE definition changes) in a separate PR/new release before we merge the testing updates? <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/88/commits/7bd1ec404ff28377f2bfd2652fa86edea997f7e0\">https://github.com/rust-lang/cargo-bisect-rustc/pull/88/commits/7bd1ec404ff28377f2bfd2652fa86edea997f7e0</a></p>",
        "id": 198543256,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590253131
    },
    {
        "content": "<p>Yeah <span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> let’s do that, given i cannot figure out why my PR is currently otherwise blocked</p>",
        "id": 198555857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590274714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/198555857\">said</a>:</p>\n<blockquote>\n<p>Yeah <span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> let’s do that, given i cannot figure out why my PR is currently otherwise blocked</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/94\">https://github.com/rust-lang/cargo-bisect-rustc/pull/94</a></p>",
        "id": 198602575,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590358153
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/198602575\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/198555857\">said</a>:</p>\n<blockquote>\n<p>Yeah <span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> let’s do that, given i cannot figure out why my PR is currently otherwise blocked</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/94\">https://github.com/rust-lang/cargo-bisect-rustc/pull/94</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> OK to merge and release this?</p>",
        "id": 198775406,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590505531
    },
    {
        "content": "<p>I hit merge just a minute or two ago. I'm cool with a release</p>",
        "id": 198775519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505565
    },
    {
        "content": "<p>I may or may not have time to look into the CLI testing PR's issues today. Not sure how best to deal with some random reqwest issue...</p>",
        "id": 198775594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/198775519\">said</a>:</p>\n<blockquote>\n<p>I hit merge just a minute or two ago. I'm cool with a release</p>\n</blockquote>\n<p>Ha!  Sorry, I didn't check my notifications before I asked... Apologies</p>",
        "id": 198775616,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590505599
    },
    {
        "content": "<p>no prob, it was super recent</p>",
        "id": 198775639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505607
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/217417-t-compiler.2Fcargo-bisect-rustc/topic/Testing/near/198775594\">said</a>:</p>\n<blockquote>\n<p>I may or may not have time to look into the CLI testing PR's issues today. Not sure how best to deal with some random reqwest issue...</p>\n</blockquote>\n<p>I need to spend some time with your source to understand what you are doing with the tests.  I'm afraid that I am not much help right now b/c I don't understand it</p>",
        "id": 198775992,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590505756
    },
    {
        "content": "<p>I understand that</p>",
        "id": 198776025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505771
    },
    {
        "content": "<p>I tried to outline the two strategies in the commit message (or was it the PR description) ... but if anything in the outline itself is unclear, please do ask questions</p>",
        "id": 198776148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505808
    },
    {
        "content": "<p>otherwise if its about the source itself, I'll admit that that is/was a little obtuse at times.</p>",
        "id": 198776183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505824
    },
    {
        "content": "<p>at least, I knew that even I myself had to work a little bit to remember how it worked</p>",
        "id": 198776204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505835
    },
    {
        "content": "<p>We'll need to figure out how to maintain the source that needs to be updated too.</p>",
        "id": 198776216,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590505840
    },
    {
        "content": "<p>it would be good to have some way to track <em>when</em> that source is going to expire</p>",
        "id": 198776270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505863
    },
    {
        "content": "<p>and replace it with something else ahead of time</p>",
        "id": 198776290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590505870
    },
    {
        "content": "<p>Yes, possible to have a ~quarterly cadence of a good ICE example from compiler meetings that we can use for the updates?</p>",
        "id": 198776492,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590505949
    },
    {
        "content": "<p>If compiler meeting is not appropriate for tracking this, I'd be happy to add it to my personal calendar and will do my best™ . This is a less reliable approach. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 198779187,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1590506887
    },
    {
        "content": "<p>hmm. Interesting question of who should be in charge of this. I suspect its not currently part of the T-compiler charter, as much as I'd like it to be</p>",
        "id": 198781332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590507717
    },
    {
        "content": "<p>but I certainly will be willing to put it on my calendar as well. :)</p>",
        "id": 198781399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590507729
    }
]