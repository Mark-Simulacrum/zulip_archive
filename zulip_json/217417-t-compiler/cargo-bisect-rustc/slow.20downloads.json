[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> as an experiment, or really, to keep myself occupied, I tried doing some manual bisection  while cargo-bisect-rustc ran</p>",
        "id": 188673876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230015
    },
    {
        "content": "<p>and in the process of doing my own bisection, I had to run <code>rustup update ...</code></p>",
        "id": 188673894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230031
    },
    {
        "content": "<p>and I was a little surprised when it seemed like I was able to get the nightlies for my own bisection faster that way than <code>cargo-bisect-rustc</code> was doing itself.</p>",
        "id": 188673928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230062
    },
    {
        "content": "<p>now to be fair, this was a <em>totally</em> not scientific test. I wasn't even doing the race on different computers, so the two ongoing processes were of course stealing time and network bandwidth from eachother</p>",
        "id": 188673980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230105
    },
    {
        "content": "<p>but I am still curious: Would you expect <code>cargo-bisect-rustc</code>'s download system to be significantly slower than that of <code>rustp</code>? Does the manner in which <code>cargo-bisect-rustc</code> is downloading its CI artifacts have some bottleneck I'm not aware of?</p>",
        "id": 188674077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230167
    },
    {
        "content": "<p>(hmm I just thought of one potential reason that my setup could be slowing things down... I was running <code>cargo-bisect-rustc</code> inside of an Emacs shell, but my own bisection in a normal terminal. I <em>know</em> the Emacs shell can slow down interactive terminal stuff. I really should re-do the experiment outside of Emacs. That, and/or add a way to tell <code>cargo-bisect-rustc</code> not to include the progress bars and whatnot.)</p>",
        "id": 188674479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582230481
    },
    {
        "content": "<p>We use reqwest 0.9 (should probably update to async/await 0.10, I guess).</p>",
        "id": 188676261,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231853
    },
    {
        "content": "<p>I think rustup uses curl, which might have better support for some features (e.g., maybe HTTP 3 or something crazy like that?)</p>",
        "id": 188676335,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231900
    },
    {
        "content": "<p>but the terminal thing seems more likely</p>",
        "id": 188676351,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231909
    },
    {
        "content": "<p>at least in theory bisect and rustup should be about on par</p>",
        "id": 188676360,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231917
    },
    {
        "content": "<p>yeah I wont file an issue until i've gathered actual data</p>",
        "id": 188676366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582231922
    },
    {
        "content": "<p>in a more scientific manner</p>",
        "id": 188676410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582231930
    },
    {
        "content": "<p>one difference (though I hesitate to suggest it) is that rustup presumably has libcurl ... as the User-Agent</p>",
        "id": 188676450,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231952
    },
    {
        "content": "<p>whereas we have something adhoc or nothing at all</p>",
        "id": 188676462,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231958
    },
    {
        "content": "<p>so maybe Amazon (CloudFront) rate limits bisect as a result?</p>",
        "id": 188676483,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231972
    },
    {
        "content": "<p>that'd be pretty sad</p>",
        "id": 188676487,
        "sender_full_name": "simulacrum",
        "timestamp": 1582231975
    }
]