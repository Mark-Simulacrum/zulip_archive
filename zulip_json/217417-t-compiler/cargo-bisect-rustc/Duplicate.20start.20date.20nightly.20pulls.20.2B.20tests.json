[
    {
        "content": "<p>When I run bisect-rustc with a start and end date range, I am seeing two pulls of the start nightly to confirm that the regression is not reproduced at the beginning of the date range <em>when there is no regression at the start date</em>: </p>\n<div class=\"codehilite\"><pre><span></span>checking nightly-2019-07-01\nstd for x86_64-unknown-linux-gnu: 61.49 MB / 61.49 MB [=========================================] 100.00 % 12.52 MB/s\nuninstalling nightly-2019-07-01\nverifying the start of the range does not reproduce the regression\nstd for x86_64-unknown-linux-gnu: 61.49 MB / 61.49 MB [=========================================] 100.00 % 13.48 MB/s\nuninstalling nightly-2019-07-01\ntested nightly-2019-07-01, got No\nconfirmed the start of the range does not reproduce the regression\n\n[ ... ]\n</pre></div>\n\n\n<p>I think that this is duplicating the build as well.</p>\n<p>It looks like the first run is in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/main.rs#L1067-L1079\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/main.rs#L1067-L1079\">this block</a> of <code>bisect_nightlies</code> and the second is in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/least_satisfying.rs#L22-L27\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/least_satisfying.rs#L22-L27\">this block</a> of <code>least_satisfying</code>.</p>\n<p>The start range check appears to be required in <code>least_satisfying</code> for calls from <code>bisect_ci</code> and <code>bisect_ci_between</code>.  And it appears that the start range check is also required in the <code>bisect_nightly</code> loop to support the logic there.  Thoughts about the addition of a boolean <code>skip_start_check</code> parameter on <code>least_satisfying</code> to prevent <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/least_satisfying.rs#L21-L27\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/8f1132148f76d7e6e4176d1d49f472e865439a48/src/least_satisfying.rs#L21-L27\">this block</a> from being executed on the nightly bisect runs only?</p>",
        "id": 188026372,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581524773
    },
    {
        "content": "<p>Fix for this issue submitted in <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/62\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/62\">https://github.com/rust-lang/cargo-bisect-rustc/pull/62</a></p>",
        "id": 189189132,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1582782939
    },
    {
        "content": "<p>I refactored <a href=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/62\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo-bisect-rustc/pull/62\">https://github.com/rust-lang/cargo-bisect-rustc/pull/62</a> based on Santiago's review.  This now addresses duplicated code in the nightly and CI Toolchain testing and fixes the duplicated download/install/test of the start range nightly check when <code>--start</code> is specified on the CL.  I also cleaned up the std stream reporting during execution so that it is easier to understand what nightly / commit is being tested and the result at that nightly/commit.   Let me know what you think.</p>",
        "id": 190021095,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583688277
    }
]