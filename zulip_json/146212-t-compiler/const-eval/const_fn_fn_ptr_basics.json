[
    {
        "content": "<p>What is the status of the <code>const_fn_fn_ptr_basics</code> feature? I see that it's marked as unstable. Is there more that needs to be implemented, or is there anything blocking stabilization?</p>",
        "id": 268760091,
        "sender_full_name": "eholk",
        "timestamp": 1642713862
    },
    {
        "content": "<p>Hmm... do we have a tracking issue for that? Can't find it on mobile</p>",
        "id": 268818628,
        "sender_full_name": "oli",
        "timestamp": 1642758824
    },
    {
        "content": "<p>Maybe this <a href=\"https://github.com/rust-lang/rust/issues/63997\">https://github.com/rust-lang/rust/issues/63997</a> (\"Tracking issue for const fn pointers\")?</p>",
        "id": 268833651,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642767370
    },
    {
        "content": "<p>ah yea... the lang team basically said I need to open a PR that allows function pointers in const fn without making them callable and then we can FCP that</p>",
        "id": 268837488,
        "sender_full_name": "oli",
        "timestamp": 1642769433
    },
    {
        "content": "<p>I should have more time for such things next week</p>",
        "id": 268837513,
        "sender_full_name": "oli",
        "timestamp": 1642769449
    },
    {
        "content": "<p>Sounds good. I can probably lend some cycles to help if you need them!</p>",
        "id": 268873464,
        "sender_full_name": "eholk",
        "timestamp": 1642785571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span>  - I spent a little bit of time today poking at different test cases, and it seems like we might have pretty close to the behavior we want already. Here are a couple of playground links with examples:</p>\n<ul>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=640938f255c5ee28e4d149495a1f12b3\">Function pointers can't be called in const code</a></li>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=664f29be0b63efe5e3af18cc9d88beac\">Can create and pass function pointers in const code</a></li>\n</ul>\n<p>Are there more cases that are still missing?</p>",
        "id": 269657385,
        "sender_full_name": "eholk",
        "timestamp": 1643326335
    },
    {
        "content": "<p>The error message in the first case could be a little better though...</p>",
        "id": 269657457,
        "sender_full_name": "eholk",
        "timestamp": 1643326383
    },
    {
        "content": "<p>The error message may be better soon, there's a PR in flight for it</p>",
        "id": 269707905,
        "sender_full_name": "oli",
        "timestamp": 1643361898
    },
    {
        "content": "<p>But yes, we just need to \"stabilize\" the feature. I just want to do this together with trait objects and trait bounds, which need a tiny bit of care.</p>",
        "id": 269708172,
        "sender_full_name": "oli",
        "timestamp": 1643362016
    },
    {
        "content": "<p>Ah, great! What's left with trait bounds? Is it something you'd like help on?</p>",
        "id": 269776604,
        "sender_full_name": "eholk",
        "timestamp": 1643392953
    },
    {
        "content": "<p>(I have a colleague who's eager to use these features, so if I can help move them towards stabilization I'd be happy to!)</p>",
        "id": 269776667,
        "sender_full_name": "eholk",
        "timestamp": 1643392975
    },
    {
        "content": "<p>Cool, basically most of the work is making a PR that stabilizes all the features and removes all the feature checks. I just remember that we had something redundant in trait bound checks that may be annoying to remove. Feel free to give it a go and even open a partial PR. I do recommend tackling one feature gate per commit though, as it will make rebasing easier if you get merge conflicts in the ui tests</p>",
        "id": 269784466,
        "sender_full_name": "oli",
        "timestamp": 1643396068
    },
    {
        "content": "<p>It might be good to go ahead and do the stabilizations at the same time but in separate PRs rather than trying to FCP them together. Or do you explicitly want them FCP'd together <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> ?</p>",
        "id": 269786855,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643396936
    },
    {
        "content": "<p>Yea, together, they are all gated for the same reason... we wanted them to mean something different in const fn, and now we just want to treat them like we treat them in const items</p>",
        "id": 269789501,
        "sender_full_name": "oli",
        "timestamp": 1643398163
    },
    {
        "content": "<p>What does this feature enable? The tracking issue is the generic const fn one last I checked.</p>",
        "id": 269807580,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643406636
    },
    {
        "content": "<p><code>const_fn_fn_ptr_basics</code> lets you pass around function pointers in const code, you just can't call them. I'm not sure what <code>const_fn_trait_bounds</code> does yet.</p>",
        "id": 269815773,
        "sender_full_name": "eholk",
        "timestamp": 1643411153
    },
    {
        "content": "<p>I see no reason that shouldn't be allowed on stable.</p>",
        "id": 269834207,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643426727
    },
    {
        "content": "<p>I got some time to work on this today. I still need to update tests, but here's what I've got for a stabilization PR: <a href=\"https://github.com/eholk/rust/commit/02856253eaeb6d29afd073a7e5e716d22ec481af\">https://github.com/eholk/rust/commit/02856253eaeb6d29afd073a7e5e716d22ec481af</a></p>",
        "id": 271214712,
        "sender_full_name": "eholk",
        "timestamp": 1644367081
    },
    {
        "content": "<p>A once-over on mobile, but the diff looks good.</p>",
        "id": 271222486,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1644373467
    },
    {
        "content": "<p>I've got most of the tests working now, but I'm stumped on <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/consts/min_const_fn/allow_const_fn_ptr.rs\">https://github.com/rust-lang/rust/blob/master/src/test/ui/consts/min_const_fn/allow_const_fn_ptr.rs</a></p>",
        "id": 271326772,
        "sender_full_name": "eholk",
        "timestamp": 1644431793
    },
    {
        "content": "<p>The stderr from the test is currently:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: module has missing stability attribute\n  --&gt; /home/ericholk/repo/rust/src/test/ui/consts/min_const_fn/allow_const_fn_ptr.rs:1:1\n   |\nLL | / #![feature(rustc_attrs, staged_api, rustc_allow_const_fn_unstable)]\nLL | |\nLL | | #[stable(feature = &quot;rust1&quot;, since = &quot;1.0.0&quot;)]\nLL | | #[rustc_const_stable(since=&quot;1.0.0&quot;, feature = &quot;mep&quot;)]\n...  |\nLL | |\nLL | | fn main() {}\n   | |____________^\n\nerror: aborting due to previous error\n</code></pre></div>",
        "id": 271326838,
        "sender_full_name": "eholk",
        "timestamp": 1644431833
    },
    {
        "content": "<p>I removed the three lines that contain <code>const_fn_fn_ptr_basics</code>, but I'm not sure how to add the missing stability attribute.</p>",
        "id": 271326925,
        "sender_full_name": "eholk",
        "timestamp": 1644431878
    },
    {
        "content": "<p>More generally, I'm not sure what this test is supposed to be testing.</p>",
        "id": 271326993,
        "sender_full_name": "eholk",
        "timestamp": 1644431890
    },
    {
        "content": "<p>Reads to me like the test is for the use of <code>#[rustc_allow_const_fn_unstable(const_fn_fn_ptr_basics)]</code> which (I think) allows the standard library to use this feature in stable apis even without requiring the calling code to have the feature enabled. If we're stabilizing the feature, then I don't think we need this test anymore.</p>",
        "id": 271327751,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1644432236
    },
    {
        "content": "<p>sounds good. I'll delete it then!</p>",
        "id": 271327835,
        "sender_full_name": "eholk",
        "timestamp": 1644432259
    },
    {
        "content": "<p>alright, I just put up the pull request: <a href=\"https://github.com/rust-lang/rust/pull/93827\">https://github.com/rust-lang/rust/pull/93827</a></p>",
        "id": 271330089,
        "sender_full_name": "eholk",
        "timestamp": 1644433216
    },
    {
        "content": "<p>I noticed <a href=\"https://github.com/rust-lang/rust/issues/93706\">#93706</a> says there still needs to be a documentation PR. Does anyone know the state of that or what's needed?</p>",
        "id": 271330226,
        "sender_full_name": "eholk",
        "timestamp": 1644433264
    },
    {
        "content": "<p>Awesome! Looked over it and it lgtm. If you want you can also throw const_impl_trait out in the same PR.</p>\n<p>Wrt documentation, all that needs updating is the reference in  <a href=\"https://doc.rust-lang.org/stable/reference/const_eval.html?highlight=Const#const-functions\">https://doc.rust-lang.org/stable/reference/const_eval.html?highlight=Const#const-functions</a></p>",
        "id": 271402495,
        "sender_full_name": "oli",
        "timestamp": 1644483442
    },
    {
        "content": "<p>Please also remove <code>ops::ty::DynTrait</code> as well as <code>ops::ty::TraitBoundNotConst</code>. <code>dyn</code> should be part of the stabilization and the latter was obsolete after I introduced <code>~const</code>.</p>",
        "id": 271406639,
        "sender_full_name": "fee1-dead",
        "timestamp": 1644485966
    }
]