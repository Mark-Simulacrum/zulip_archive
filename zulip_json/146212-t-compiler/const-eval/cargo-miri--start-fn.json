[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> <span class=\"user-mention\" data-user-id=\"132769\">@Andrew Poelstra</span> I am wondering if we can remove the footgun of forgetting to pass <code>-- -Zmiri-start-fn</code> to <code>cargo miri</code>, which leads to memory leaks errors because TLS wasn't initialized (and maybe there are other errors?). I see several options, but I am not sure which one I like most:</p>\n<ul>\n<li>Kill <code>-Zmiri-start-fn</code> and instead auto-detect if we have a libstd with all the MIR (looking up some monomorphic function and seeing if it got MIR). That would be most convenient and it matches the state we used to have before the <code>start_fn</code> lang item got polymorphic.</li>\n<li>Always pass <code>-Zmiri-start-fn</code> from <code>cargo miri</code>. Forces people to get a libstd with full MIR, even if their code doesn't otherwise need it.</li>\n<li>Disable the leak check unless <code>-Zmiri-start-fn</code> is passed. Seems like a shame though, we have an entire test suite showing that the leak check works just fine there.</li>\n</ul>",
        "id": 136092642,
        "sender_full_name": "RalfJ",
        "timestamp": 1539930680
    },
    {
        "content": "<p>My tendency is with the first option, I have to say. Fewer flags always seem nice^^</p>",
        "id": 136092701,
        "sender_full_name": "RalfJ",
        "timestamp": 1539930797
    },
    {
        "content": "<p>first option sounds good. I nominate <code>rust_panic</code> as the canary</p>",
        "id": 136094366,
        "sender_full_name": "oli",
        "timestamp": 1539933479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> <a href=\"https://github.com/solson/miri/pull/488\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/488\">https://github.com/solson/miri/pull/488</a></p>",
        "id": 136096737,
        "sender_full_name": "RalfJ",
        "timestamp": 1539937076
    },
    {
        "content": "<p>\\o/</p>",
        "id": 136096878,
        "sender_full_name": "oli",
        "timestamp": 1539937227
    },
    {
        "content": "<p>that was fast :P</p>",
        "id": 136097064,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1539937483
    },
    {
        "content": "<p>On a related note... <span class=\"user-mention\" data-user-id=\"132769\">@Andrew Poelstra</span> so what do we do about <a href=\"https://github.com/solson/miri/pull/483\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/483\">https://github.com/solson/miri/pull/483</a> ? Do you still think we should tell the user to copy stuff around? I think we shouldn't. We should rather tell them to do <code>cargo clean</code>, and then <code>MIRI_SYSROOT=~/.xargo/HOST cargo miri</code>, and that should work without any copy.</p>",
        "id": 136097076,
        "sender_full_name": "RalfJ",
        "timestamp": 1539937503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132916\">@Christian Poveda</span> welcome to Zulip :D</p>",
        "id": 136097086,
        "sender_full_name": "RalfJ",
        "timestamp": 1539937513
    },
    {
        "content": "<p>ty :)</p>",
        "id": 136097102,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1539937532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> your two suggestions would become separate commits, so I am going to make them one commit manually instead</p>",
        "id": 136102696,
        "sender_full_name": "RalfJ",
        "timestamp": 1539944949
    },
    {
        "content": "<p>yea, the feature is cool, but not quite ready yet</p>",
        "id": 136102702,
        "sender_full_name": "oli",
        "timestamp": 1539944969
    },
    {
        "content": "<p><em>lol</em> when you work on rustc+miri and const validation tells you your miri sources contain a bad const^^</p>",
        "id": 136105747,
        "sender_full_name": "RalfJ",
        "timestamp": 1539949259
    },
    {
        "content": "<p>@RalfJ agreed, I should change the PR to recommend <code>cargo clean</code> rather than copying stuff around. That's much simpler</p>",
        "id": 136107698,
        "sender_full_name": "Andrew Poelstra",
        "timestamp": 1539951974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132769\">@Andrew Poelstra</span> also with <code>-Zmiri-start-fn</code> gone thinks are hopefully a bit better now</p>",
        "id": 136108324,
        "sender_full_name": "RalfJ",
        "timestamp": 1539952850
    },
    {
        "content": "<p>I think the biggest footgun left is not using the same toolchain for <code>xargo/build.sh</code> and <code>cargo miri</code>. Should probably be mentioned: \"If you get strange errors, try <code>cargo clean</code> and make sure you used the same toolchain for ...\"</p>",
        "id": 136108358,
        "sender_full_name": "RalfJ",
        "timestamp": 1539952896
    },
    {
        "content": "<p>I actually don't know what <code>-Zmiri-start-fn</code> does. I haven't able to build something without a MIR-enabled std to run <code>cargo miri</code> on it</p>",
        "id": 136108367,
        "sender_full_name": "Andrew Poelstra",
        "timestamp": 1539952907
    },
    {
        "content": "<p>Agreed -- even now sometimes I forget to set MIRI_SYSROOT and things break with \"cannot find std\". Now I know the correct response is <code>cargo clean</code> and then set MIRI_SYSROOT, but at first this was extremely confusing</p>",
        "id": 136108427,
        "sender_full_name": "Andrew Poelstra",
        "timestamp": 1539952950
    },
    {
        "content": "<p>so I'll update the README PR to say that</p>",
        "id": 136108440,
        "sender_full_name": "Andrew Poelstra",
        "timestamp": 1539952985
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 136108507,
        "sender_full_name": "RalfJ",
        "timestamp": 1539953074
    }
]