[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> So I wrote <a href=\"https://github.com/RalfJung/rust/commit/71badfdc94586c66f0c5bb570401a74b356c06e7\" target=\"_blank\" title=\"https://github.com/RalfJung/rust/commit/71badfdc94586c66f0c5bb570401a74b356c06e7\">https://github.com/RalfJung/rust/commit/71badfdc94586c66f0c5bb570401a74b356c06e7</a> because I realized (a) these assertions in <code>read_discriminant</code> can actually be violated (I have an example of an ICE here), and (b) this is yet another place where we made the wrong assumption that pointer values are never 0. Only in-bounds pointers are never 0. Unfortunately, fixing the latter leads to a build error in libstd...</p>\n<div class=\"codehilite\"><pre><span></span>error[E0080]: it is undefined behavior to use this value============&gt;  ] 28/29: std\n   --&gt; libstd/sys_common/thread_local.rs:254:5\n    |\n254 |     static DTORS: StaticKey = StaticKey::new(Some(run_dtors));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer at .dtor, but expected a valid enum discriminant\n    |\n    = note: The rules on what exactly is undefined behavior aren&#39;t clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n</pre></div>",
        "id": 147515706,
        "sender_full_name": "RalfJ",
        "timestamp": 1542016466
    },
    {
        "content": "<p>ah, this is a pointer to a function</p>",
        "id": 147515734,
        "sender_full_name": "RalfJ",
        "timestamp": 1542016526
    },
    {
        "content": "<p><code>check_bounds_ptr</code> should probably accept those at offset 0</p>",
        "id": 147515740,
        "sender_full_name": "RalfJ",
        "timestamp": 1542016539
    },
    {
        "content": "<p>Submitted as <a href=\"https://github.com/rust-lang/rust/pull/55894\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55894\">https://github.com/rust-lang/rust/pull/55894</a></p>",
        "id": 147516906,
        "sender_full_name": "RalfJ",
        "timestamp": 1542018224
    },
    {
        "content": "<p>looks good to me</p>",
        "id": 147517279,
        "sender_full_name": "oli",
        "timestamp": 1542018695
    },
    {
        "content": "<p>no need to address the missing test in this PR, so r=me with or without the test</p>",
        "id": 147517344,
        "sender_full_name": "oli",
        "timestamp": 1542018762
    }
]