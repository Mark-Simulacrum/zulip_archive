[
    {
        "content": "<p>I am try to make miri set RUST_LOG based on MIRI_LOG, so I don't have to always set both. However, I do not even understand how we can have two logging \"things\" in the same project, isn't that stuff supposed to be global? <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> any idea what is going on here?</p>",
        "id": 136834241,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974576
    },
    {
        "content": "<p>jop</p>",
        "id": 136834243,
        "sender_full_name": "oli",
        "timestamp": 1540974591
    },
    {
        "content": "<p>rustc uses a different <code>log</code> crate</p>",
        "id": 136834245,
        "sender_full_name": "oli",
        "timestamp": 1540974600
    },
    {
        "content": "<p>thus, different global statics</p>",
        "id": 136834286,
        "sender_full_name": "oli",
        "timestamp": 1540974607
    },
    {
        "content": "<p>Also miri contains some funny code to change the logging format, but rustc doesn't, so messages look very different depending on where they come from</p>",
        "id": 136834289,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974611
    },
    {
        "content": "<p>thus completely separate logging</p>",
        "id": 136834290,
        "sender_full_name": "oli",
        "timestamp": 1540974613
    },
    {
        "content": "<blockquote>\n<p>rustc uses a different <code>log</code> crate</p>\n</blockquote>\n<p>different crate? so <code>extern crate log;</code> is not the same thing for both?</p>",
        "id": 136834298,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974638
    },
    {
        "content": "<p>I wrote the funny miri code, feel free to nuke it, it's usefulness is not existing anymore</p>",
        "id": 136834299,
        "sender_full_name": "oli",
        "timestamp": 1540974641
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>rustc uses a different <code>log</code> crate</p>\n</blockquote>\n<p>different crate? so <code>extern crate log;</code> is not the same thing for both?</p>\n</blockquote>",
        "id": 136834307,
        "sender_full_name": "oli",
        "timestamp": 1540974658
    },
    {
        "content": "<p>yea</p>",
        "id": 136834308,
        "sender_full_name": "oli",
        "timestamp": 1540974660
    },
    {
        "content": "<p>woah. how that?</p>",
        "id": 136834320,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974666
    },
    {
        "content": "<p>\"it's complicated\" and I forget a lot of the details</p>",
        "id": 136834326,
        "sender_full_name": "oli",
        "timestamp": 1540974686
    },
    {
        "content": "<p>but it's a mess</p>",
        "id": 136834330,
        "sender_full_name": "oli",
        "timestamp": 1540974690
    },
    {
        "content": "<p><a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> <code>log</code> vs rustc-distributed <code>log</code></p>",
        "id": 136834333,
        "sender_full_name": "oli",
        "timestamp": 1540974704
    },
    {
        "content": "<p>sounds like it</p>",
        "id": 136834334,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974704
    },
    {
        "content": "<p>but okay I guess this means I need a hook on the rustc side to rebuild the logger, cant do it from miri</p>",
        "id": 136834338,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974718
    },
    {
        "content": "<p>we used to use the rustd <code>log</code>, but it caused all kinds of problems</p>",
        "id": 136834379,
        "sender_full_name": "oli",
        "timestamp": 1540974733
    },
    {
        "content": "<p>\"rebuild\"?</p>",
        "id": 136834383,
        "sender_full_name": "oli",
        "timestamp": 1540974744
    },
    {
        "content": "<p>we already are calling <code>rustc_driver::init_logger()</code></p>",
        "id": 136834385,
        "sender_full_name": "oli",
        "timestamp": 1540974757
    },
    {
        "content": "<p>I am changing <code>RUST_LOG</code> during execution</p>",
        "id": 136834445,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974889
    },
    {
        "content": "<p>but the change isnt picked up</p>",
        "id": 136834446,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974895
    },
    {
        "content": "<p>so I need to to reread the config</p>",
        "id": 136834448,
        "sender_full_name": "RalfJ",
        "timestamp": 1540974900
    },
    {
        "content": "<p>yea, just call <code>rustc_driver::init_logger()</code> I think</p>",
        "id": 136834513,
        "sender_full_name": "oli",
        "timestamp": 1540974968
    },
    {
        "content": "<p>or make the change before the first call to it</p>",
        "id": 136834515,
        "sender_full_name": "oli",
        "timestamp": 1540974976
    },
    {
        "content": "<p>I want to do the change late so that it applies to as little of rustc's own stuff as possible</p>",
        "id": 136835220,
        "sender_full_name": "RalfJ",
        "timestamp": 1540976179
    },
    {
        "content": "<p>though with the query-based architecture, that's kind of hard</p>",
        "id": 136835221,
        "sender_full_name": "RalfJ",
        "timestamp": 1540976189
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>thread &#39;main&#39; panicked at &#39;env_logger::init should not be called after logger initialized: SetLoggerError(())&#39;, libcore/result.rs:1009:5\n</pre></div>\n\n\n<p>:(</p>",
        "id": 136835411,
        "sender_full_name": "RalfJ",
        "timestamp": 1540976495
    },
    {
        "content": "<p>uhm</p>",
        "id": 136835726,
        "sender_full_name": "oli",
        "timestamp": 1540976766
    },
    {
        "content": "<p>just don't call it at program start</p>",
        "id": 136835729,
        "sender_full_name": "oli",
        "timestamp": 1540976774
    },
    {
        "content": "<p>but then we will get no logging at all for that even if we want to, right?</p>",
        "id": 136835736,
        "sender_full_name": "RalfJ",
        "timestamp": 1540976817
    },
    {
        "content": "<p>or make it <code>if env::var(\"RUST_LOG\") { rustc_driver::init_logger() }</code></p>",
        "id": 136835747,
        "sender_full_name": "oli",
        "timestamp": 1540976834
    },
    {
        "content": "<p>and create a second <code>RUST_LATE_LOG</code> for miri to turn it on later if <code>RUST_LOG</code> wasn't already specified</p>",
        "id": 136835751,
        "sender_full_name": "oli",
        "timestamp": 1540976859
    },
    {
        "content": "<p>(and convert the env var from <code>RUST_LATE_LOG</code> to <code>RUST_LOG</code> then)</p>",
        "id": 136835769,
        "sender_full_name": "oli",
        "timestamp": 1540976881
    },
    {
        "content": "<p>Hm. For now I just do the setting a bit earlier</p>",
        "id": 136836199,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977449
    },
    {
        "content": "<p>with all these queries, we wouldn't get a clean separation between the miri execution and the CTFE executions anyway, right?</p>",
        "id": 136836229,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977473
    },
    {
        "content": "<p>the latter can happen arbitrarily late</p>",
        "id": 136836266,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977484
    },
    {
        "content": "<p>so we'd have to switch every time we fire a query, or so...</p>",
        "id": 136836274,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977499
    },
    {
        "content": "<p>hmm... I think we're late enough in the process for that not to happen</p>",
        "id": 136836376,
        "sender_full_name": "oli",
        "timestamp": 1540977612
    },
    {
        "content": "<p>maybe a few times</p>",
        "id": 136836383,
        "sender_full_name": "oli",
        "timestamp": 1540977618
    },
    {
        "content": "<p>once the <code>collector</code> is done, there should be little that we need that hasn't already been cached</p>",
        "id": 136836411,
        "sender_full_name": "oli",
        "timestamp": 1540977658
    },
    {
        "content": "<p><code>collector</code>? where is that done?</p>",
        "id": 136836488,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977759
    },
    {
        "content": "<p>for now I got this: <a href=\"https://github.com/solson/miri/pull/502/files\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/502/files\">https://github.com/solson/miri/pull/502/files</a></p>",
        "id": 136836531,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977837
    },
    {
        "content": "<p>part of the compiler steps. It's basically the driving force behind everything</p>",
        "id": 136836595,
        "sender_full_name": "oli",
        "timestamp": 1540977912
    },
    {
        "content": "<p>I mean, where in <code>src/bin/miri.rs</code> is that done?</p>",
        "id": 136836666,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977986
    },
    {
        "content": "<p>as in, where would then be a good place to initialize logging? :D</p>",
        "id": 136836670,
        "sender_full_name": "RalfJ",
        "timestamp": 1540977999
    },
    {
        "content": "<p>oh, I'd init logging where the miri interpretation is triggered</p>",
        "id": 136836689,
        "sender_full_name": "oli",
        "timestamp": 1540978041
    },
    {
        "content": "<p>so in <a href=\"https://github.com/solson/miri/pull/502/files#diff-c3d602c5c8035a16699ce9c015bfeceaR113\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/502/files#diff-c3d602c5c8035a16699ce9c015bfeceaR113\">https://github.com/solson/miri/pull/502/files#diff-c3d602c5c8035a16699ce9c015bfeceaR113</a></p>",
        "id": 136836788,
        "sender_full_name": "oli",
        "timestamp": 1540978112
    },
    {
        "content": "<p>that seems to work, great :)</p>",
        "id": 136837956,
        "sender_full_name": "RalfJ",
        "timestamp": 1540979540
    }
]