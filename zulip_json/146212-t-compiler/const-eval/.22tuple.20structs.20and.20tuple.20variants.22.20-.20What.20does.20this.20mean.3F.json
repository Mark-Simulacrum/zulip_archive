[
    {
        "content": "<p>I am preparing a PR that would make <code>ops::FnCallNonConst</code> contain a DefId to improve the diagnostic.</p>\n<p>I realized that we kind of just ignore the second part of the error message: \"calls in {}s are limited to constant functions, tuple structs and tuple variants\" - We obviously allow Struct-structs and Unit-structs, as well as Unit/Struct variants now. Could this be some sort of a historical artifact?</p>",
        "id": 260105721,
        "sender_full_name": "fee1-dead",
        "timestamp": 1635930616
    },
    {
        "content": "<p>You can't call a struct/unit structs as a function</p>",
        "id": 260110274,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1635933313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/.22tuple.20structs.20and.20tuple.20variants.22.20-.20What.20does.20this.20mean.3F/near/260110274\">said</a>:</p>\n<blockquote>\n<p>You can't call a struct/unit structs as a function</p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> ah, that answered the question, this is allowed in const contexts:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">a</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 260110710,
        "sender_full_name": "fee1-dead",
        "timestamp": 1635933562
    }
]