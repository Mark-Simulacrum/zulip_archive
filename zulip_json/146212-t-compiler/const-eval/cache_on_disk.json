[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> I see a new <code>cache_on_disk</code> method for each query... do you think we should use that to not cache <code>const_eval_raw</code>, or some such thing?</p>",
        "id": 146854795,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497018
    },
    {
        "content": "<p>seems like not caching is even the default oO</p>",
        "id": 146854811,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497040
    },
    {
        "content": "<p>;)</p>",
        "id": 146854817,
        "sender_full_name": "oli",
        "timestamp": 1541497045
    },
    {
        "content": "<p>but the const queries both get cached</p>",
        "id": 146854818,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497047
    },
    {
        "content": "<p>huh</p>",
        "id": 146854822,
        "sender_full_name": "oli",
        "timestamp": 1541497054
    },
    {
        "content": "<p>how can you tell?</p>",
        "id": 146854828,
        "sender_full_name": "oli",
        "timestamp": 1541497075
    },
    {
        "content": "<p>because they both have an explicit implementation of that method to return <code>true</code>^^</p>",
        "id": 146854873,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497091
    },
    {
        "content": "<p>looking at librustc/ty/query/config.rs</p>",
        "id": 146854886,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497102
    },
    {
        "content": "<p>(what I really set out to do was change const_eval_raw to return an allocation, not a <code>ConstValue</code>)</p>",
        "id": 146854892,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497126
    },
    {
        "content": "<p><span class=\"emoji emoji-2764\" title=\"heart\">:heart:</span></p>",
        "id": 146854915,
        "sender_full_name": "oli",
        "timestamp": 1541497179
    },
    {
        "content": "<p>maybe do these things in separate PRs though</p>",
        "id": 146854962,
        "sender_full_name": "oli",
        "timestamp": 1541497208
    },
    {
        "content": "<p>If statics referring to other statics are very common, then not caching <code>const_eval_raw</code> could be bad</p>",
        "id": 146854981,
        "sender_full_name": "oli",
        "timestamp": 1541497270
    },
    {
        "content": "<p>especially for large statics</p>",
        "id": 146854983,
        "sender_full_name": "oli",
        "timestamp": 1541497275
    },
    {
        "content": "<p>What are you trying to achieve by not caching <code>const_eval_raw</code>?</p>",
        "id": 146855037,
        "sender_full_name": "oli",
        "timestamp": 1541497347
    },
    {
        "content": "<p>(note that <code>&amp;'tcx Allocation</code> is already deduplicated, so the memory footprint should be minimal)</p>",
        "id": 146855043,
        "sender_full_name": "oli",
        "timestamp": 1541497392
    },
    {
        "content": "<p>yeah not going to touch the caching here</p>",
        "id": 146855122,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497535
    },
    {
        "content": "<blockquote>\n<p>What are you trying to achieve by not caching <code>const_eval_raw</code>?</p>\n</blockquote>\n<p>dunno, save space?^^</p>",
        "id": 146855126,
        "sender_full_name": "RalfJ",
        "timestamp": 1541497548
    }
]