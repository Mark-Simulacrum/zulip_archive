[
    {
        "content": "<p>How do I unset a boolean <code>-Z</code> flag? <code>=0</code> does not work...</p>",
        "id": 147747695,
        "sender_full_name": "RalfJ",
        "timestamp": 1542294245
    },
    {
        "content": "<p>uh, I don't think you can</p>",
        "id": 147747738,
        "sender_full_name": "oli",
        "timestamp": 1542294286
    },
    {
        "content": "<p>wtf</p>",
        "id": 147747796,
        "sender_full_name": "RalfJ",
        "timestamp": 1542294352
    },
    {
        "content": "<p>that's an odd restriction^^</p>",
        "id": 147747801,
        "sender_full_name": "RalfJ",
        "timestamp": 1542294356
    },
    {
        "content": "<p>well... you can just <em>not</em> specify the flag ;)</p>",
        "id": 147747877,
        "sender_full_name": "oli",
        "timestamp": 1542294395
    },
    {
        "content": "<p>not if other passes already add it earlier in the list of flags</p>",
        "id": 147749115,
        "sender_full_name": "RalfJ",
        "timestamp": 1542295280
    },
    {
        "content": "<p>you can filter out the flag from the <code>Vec</code> of flags</p>",
        "id": 147749399,
        "sender_full_name": "oli",
        "timestamp": 1542295493
    },
    {
        "content": "<p>all I had was <code>// compile-flags:</code> to add more flags</p>",
        "id": 147749566,
        "sender_full_name": "RalfJ",
        "timestamp": 1542295627
    },
    {
        "content": "<p>but actually I found a way to entirely avoid this</p>",
        "id": 147749576,
        "sender_full_name": "RalfJ",
        "timestamp": 1542295634
    },
    {
        "content": "<p>(see the UCG stream for the evil example that lets me avoid multiple compilation units where some dont do retagging.^^)</p>",
        "id": 147749590,
        "sender_full_name": "RalfJ",
        "timestamp": 1542295657
    },
    {
        "content": "<p>so, never mind.</p>",
        "id": 147749593,
        "sender_full_name": "RalfJ",
        "timestamp": 1542295658
    }
]