[
    {
        "content": "<p>Are there any current blockers to making <code>slice::from_raw_parts</code> (and the mut verison) into a const fn?</p>",
        "id": 196031848,
        "sender_full_name": "Lokathor",
        "timestamp": 1588392477
    },
    {
        "content": "<p>stabilizing it as const fn is blocked on allowing <code>transmute</code> or <code>union</code> field accesses in const fn</p>",
        "id": 196036306,
        "sender_full_name": "oli",
        "timestamp": 1588400073
    },
    {
        "content": "<p>but you can make it const behind a feature gate I believe</p>",
        "id": 196036311,
        "sender_full_name": "oli",
        "timestamp": 1588400086
    },
    {
        "content": "<p>Well i think the transmute path would be UB technically i suppose, so the union field version would be the one.</p>",
        "id": 196066378,
        "sender_full_name": "Lokathor",
        "timestamp": 1588447806
    },
    {
        "content": "<p>neither works outside the standard library since slice pointer memory layout is unspecified, but this function is implemented in libcore so it's fine either way</p>",
        "id": 196066832,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1588448435
    },
    {
        "content": "<p>I'm aware. I meant even within libcore.</p>",
        "id": 196068196,
        "sender_full_name": "Lokathor",
        "timestamp": 1588450371
    },
    {
        "content": "<p>Why would the transmute be UB in libcore? It's libcore, it can do whatever it wants.</p>",
        "id": 196068862,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1588451455
    },
    {
        "content": "<p>ahhhh, FatPtr&lt;T&gt; is repr(C), i forgot. nevermind me.</p>",
        "id": 196070197,
        "sender_full_name": "Lokathor",
        "timestamp": 1588453798
    }
]