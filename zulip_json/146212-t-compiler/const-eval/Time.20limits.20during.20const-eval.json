[
    {
        "content": "<p>With  <code>if</code> available on nightly, and <code>loop</code> soon to follow, it's now feasible for users to write <code>const</code> initializers that will run for a noticeable amount of time. We should discuss if/how we want to limit the amount of time spent during const-eval by default. I described one possible configuration mechanism in <a href=\"https://github.com/rust-lang/rust/issues/67217\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67217\">#67217</a>, along with the set of defaults I would like to see.</p>",
        "id": 183307468,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1576188087
    },
    {
        "content": "<p>As I mention in the comments, I would like to have some way for the user to disable the infinite loop detector in the short-term, although I no longer think we need to block <a href=\"https://github.com/rust-lang/rust/issues/67216\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67216\">#67216</a> on it. It would be cool if we could decide on the interface for configuring time limits for const-eval relatively soon, and use that in the short-term to disable the loop detector, but it's not necessary. As I mentioned elsewhere, we could use a <code>-Z</code> flag for this temporarily.</p>",
        "id": 183307968,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1576188393
    },
    {
        "content": "<p>An alternative to a configurable limit is to have a fixed limit that controls a <code>long_running_const_eval</code> lint. If you allow the lint, the infinite loop detector is disabled, and no limits are imposed on const-eval. If the lint is set to warn (the default), a warning will appear after const-eval has run to the limit, and the infinite loop detector will start to trigger. If the lint is set to deny, reaching the fixed limit is a hard error.</p>",
        "id": 183308150,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1576188558
    },
    {
        "content": "<p>TBH, I am not convinced the snapshot-based infinite loop detector is a good idea. IMO something simple like a basic-block-counter should be sufficient. But I won't block people if they want to go overboard with design here. ;)</p>",
        "id": 183447295,
        "sender_full_name": "RalfJ",
        "timestamp": 1576339963
    },
    {
        "content": "<p>However I'm afraid having both a fancy snapshot-based detector and a simple counter that interact in complex ways will be quite confusing.</p>",
        "id": 183447310,
        "sender_full_name": "RalfJ",
        "timestamp": 1576339986
    },
    {
        "content": "<p>yea, I just thought the snapshot loop detector was a great idea for UX, but it's so much stuff for little gain...</p>",
        "id": 183447398,
        "sender_full_name": "oli",
        "timestamp": 1576340103
    },
    {
        "content": "<p>I'm fine with scrapping it</p>",
        "id": 183447405,
        "sender_full_name": "oli",
        "timestamp": 1576340114
    },
    {
        "content": "<p>I'm gonna open a PR removing the loop detector after <a href=\"https://github.com/rust-lang/rust/issues/67260\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67260\">#67260</a> gets merged.</p>",
        "id": 183588492,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1576528958
    },
    {
        "content": "<p>I think this is the right move, but I'm also feeling bad because you put so much work into it.</p>",
        "id": 184067188,
        "sender_full_name": "RalfJ",
        "timestamp": 1577044608
    }
]