[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> when I locally build your sanity query PR, compiling stage1 compiler artifacts fails...</p>",
        "id": 136532914,
        "sender_full_name": "RalfJ",
        "timestamp": 1540542364
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>thread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, libcore/option.rs:355:21rustc-demangle, rustc(build.rs)\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.31.0-dev running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C opt-level=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `rustc`.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</pre></div>",
        "id": 136532922,
        "sender_full_name": "RalfJ",
        "timestamp": 1540542385
    },
    {
        "content": "<p>do you have a backtrace?</p>",
        "id": 136532923,
        "sender_full_name": "oli",
        "timestamp": 1540542398
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: rustc::util::common::panic_hook\n             at librustc/util/common.rs:51\n   5: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:480\n   6: std::panicking::continue_panic_fmt\n             at libstd/panicking.rs:390\n   7: rust_begin_unwind\n             at libstd/panicking.rs:325\n   8: core::panicking::panic_fmt\n             at libcore/panicking.rs:77\n   9: core::panicking::panic\n             at libcore/panicking.rs:52\n  10: rustc_typeck::check::wfcheck::check_impl_item\n             at ./libcore/macros.rs:20\n             at librustc_typeck/check/wfcheck.rs:172\n  11: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors&lt;&#39;tcx&gt; for rustc::ty::query::queries::check_impl_item_well_formed&lt;&#39;tcx&gt;&gt;::compute\n             at librustc/ty/query/plumbing.rs:826\n  12: rustc::ty::context::tls::with_context\n             at librustc/dep_graph/graph.rs:275\n             at librustc/ty/context.rs:2018\n             at librustc/ty/context.rs:1957\n             at librustc/ty/context.rs:2017\n             at librustc/dep_graph/graph.rs:274\n             at librustc/ty/context.rs:2102\n             at librustc/ty/context.rs:2093\n             at librustc/ty/context.rs:2102\n  13: rustc::dep_graph::graph::DepGraph::with_task_impl\n             at librustc/dep_graph/graph.rs:268\n  14: rustc::ty::context::tls::with_related_context\n             at librustc/dep_graph/graph.rs:208\n             at librustc/ty/query/plumbing.rs:550\n             at librustc/ty/query/plumbing.rs:208\n             at librustc/ty/context.rs:2018\n             at librustc/ty/context.rs:1957\n             at librustc/ty/context.rs:2017\n             at librustc/ty/query/plumbing.rs:207\n             at librustc/ty/context.rs:2118\n             at librustc/ty/context.rs:2102\n             at librustc/ty/context.rs:2093\n             at librustc/ty/context.rs:2102\n             at librustc/ty/context.rs:2113\n  15: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::force_query_with_job\n             at librustc/ty/query/plumbing.rs:197\n             at librustc/ty/query/plumbing.rs:543\n  16: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::force_query\n             at librustc/ty/query/plumbing.rs:621\n  17: rustc::ty::query::plumbing::force_from_dep_node\n             at librustc/ty/query/plumbing.rs:1199\n</pre></div>",
        "id": 136532936,
        "sender_full_name": "RalfJ",
        "timestamp": 1540542431
    },
    {
        "content": "<p>seems like its an <code>unwrap</code> at <code>wfcheck.rs:172</code></p>",
        "id": 136532941,
        "sender_full_name": "RalfJ",
        "timestamp": 1540542445
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/check/wfcheck.rs#L172\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/check/wfcheck.rs#L172\">https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/check/wfcheck.rs#L172</a></p>",
        "id": 136532996,
        "sender_full_name": "oli",
        "timestamp": 1540542515
    },
    {
        "content": "<p>O_o</p>",
        "id": 136532997,
        "sender_full_name": "oli",
        "timestamp": 1540542520
    },
    {
        "content": "<p>doesn't happen for me</p>",
        "id": 136533167,
        "sender_full_name": "oli",
        "timestamp": 1540542809
    },
    {
        "content": "<p>maybe I don't have test_miri on</p>",
        "id": 136533171,
        "sender_full_name": "oli",
        "timestamp": 1540542821
    },
    {
        "content": "<p>do you have the full backtrace with the query stack on the bottom?</p>",
        "id": 136533228,
        "sender_full_name": "oli",
        "timestamp": 1540542883
    },
    {
        "content": "<p>I do have test-miri on indeed. not sure why that would make a difference here?</p>",
        "id": 136533351,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543059
    },
    {
        "content": "<p>query stack is mixed with fancy cargo output...</p>\n<div class=\"codehilite\"><pre><span></span>query stack during panic:\n   Compiling unreachable v1.0.0\n#0 [check_impl_item_well_formed] processing `std`                     ] 30/110: rustc(build.rs), fmt_macros, rustc-serialize, rustc_platform_intrinsics, crossbeam-utils, log, arrayvec, unreachable\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\n</pre></div>",
        "id": 136533357,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543080
    },
    {
        "content": "<p>So I'm thinking it could have to do with <code>always-encode-mir</code>, because parts of the compiler just don't cope well with having MIR available for everything. I think there are still parts that place some semantic value into the return value of <code>is_mir_available</code></p>",
        "id": 136533502,
        "sender_full_name": "oli",
        "timestamp": 1540543216
    },
    {
        "content": "<p>but I have no clue how that could be during <code>collect</code></p>",
        "id": 136533512,
        "sender_full_name": "oli",
        "timestamp": 1540543242
    },
    {
        "content": "<p>I'll do some debugging...</p>",
        "id": 136533525,
        "sender_full_name": "oli",
        "timestamp": 1540543260
    },
    {
        "content": "<p>nope I do have <code>test-miri = true</code></p>",
        "id": 136533703,
        "sender_full_name": "oli",
        "timestamp": 1540543502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> I have no clue what's going on, I can't repro</p>",
        "id": 136533709,
        "sender_full_name": "oli",
        "timestamp": 1540543516
    },
    {
        "content": "<p>do you have the full stacktrace so I can give a more educated guess?</p>",
        "id": 136533714,
        "sender_full_name": "oli",
        "timestamp": 1540543530
    },
    {
        "content": "<p>sure but its just tons of query stuff</p>",
        "id": 136533887,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543749
    },
    {
        "content": "<p>and it is too long for zulip...^^</p>",
        "id": 136533897,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543776
    },
    {
        "content": "<p>gist it?</p>",
        "id": 136533899,
        "sender_full_name": "oli",
        "timestamp": 1540543782
    },
    {
        "content": "<p><a href=\"https://paste.debian.net/1049096/\" target=\"_blank\" title=\"https://paste.debian.net/1049096/\">https://paste.debian.net/1049096/</a></p>",
        "id": 136533901,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543788
    },
    {
        "content": "<p>gists need a filename and a description</p>",
        "id": 136533913,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543796
    },
    {
        "content": "<p>I always find that offputting</p>",
        "id": 136533915,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543800
    },
    {
        "content": "<p>I will delete <code>build/*/stage*</code>, see if it makes a difference. you could try the same^^</p>",
        "id": 136533968,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543844
    },
    {
        "content": "<p>here is my <code>config.toml</code>:</p>\n<div class=\"codehilite\"><pre><span></span>[llvm]\nassertions = true\nninja = true\n[build]\nsubmodules = false\n[rust]\ndebug-assertions = true\ndebuginfo-lines = true\nincremental = true\ntest-miri = true\ndeny-warnings = false\n</pre></div>",
        "id": 136533997,
        "sender_full_name": "RalfJ",
        "timestamp": 1540543897
    },
    {
        "content": "<p>according to the stacktrace it's a call to <code>Instance::resolve</code>: <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/monomorphize/collector.rs#L1072\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/monomorphize/collector.rs#L1072\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/monomorphize/collector.rs#L1072</a></p>",
        "id": 136534090,
        "sender_full_name": "oli",
        "timestamp": 1540544036
    },
    {
        "content": "<p>for the start lang item !?</p>",
        "id": 136534119,
        "sender_full_name": "oli",
        "timestamp": 1540544043
    },
    {
        "content": "<p>it gets weirder: <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/ty/instance.rs#L186\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/ty/instance.rs#L186\">https://github.com/rust-lang/rust/blob/master/src/librustc/ty/instance.rs#L186</a></p>",
        "id": 136534182,
        "sender_full_name": "oli",
        "timestamp": 1540544148
    },
    {
        "content": "<p>stage 1 tests ran through successfully</p>",
        "id": 136534931,
        "sender_full_name": "oli",
        "timestamp": 1540545200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> odly I cannot reproduce either after clearing the <code>stage*</code> directories</p>",
        "id": 136535389,
        "sender_full_name": "RalfJ",
        "timestamp": 1540545973
    },
    {
        "content": "<p>incremental bug I guess?</p>",
        "id": 136535393,
        "sender_full_name": "oli",
        "timestamp": 1540545986
    },
    {
        "content": "<p>possible...</p>",
        "id": 136535395,
        "sender_full_name": "RalfJ",
        "timestamp": 1540545993
    },
    {
        "content": "<p>Wheee! took two months, but the PR has been merged!</p>",
        "id": 136547695,
        "sender_full_name": "oli",
        "timestamp": 1540561457
    },
    {
        "content": "<p>I should just stop implementing features and just do refactorings</p>",
        "id": 136547712,
        "sender_full_name": "oli",
        "timestamp": 1540561487
    },
    {
        "content": "<p>it even only conflicted with one PR</p>",
        "id": 136547846,
        "sender_full_name": "oli",
        "timestamp": 1540561589
    },
    {
        "content": "<p>ah no, bors is just slow. it broke 1/3rd of the queue or so</p>",
        "id": 136548503,
        "sender_full_name": "oli",
        "timestamp": 1540562216
    },
    {
        "content": "<p>yeah it did^^</p>",
        "id": 136692842,
        "sender_full_name": "RalfJ",
        "timestamp": 1540803739
    },
    {
        "content": "<p>but I am happy to see it landed :) sanity++</p>",
        "id": 136692906,
        "sender_full_name": "RalfJ",
        "timestamp": 1540803874
    },
    {
        "content": "<blockquote>\n<p>incremental bug I guess?</p>\n</blockquote>\n<p>now seeing the same bug again. I still don't know how to reproduce it though...</p>",
        "id": 136692992,
        "sender_full_name": "RalfJ",
        "timestamp": 1540804027
    },
    {
        "content": "<p>with another PR, that is</p>",
        "id": 136693002,
        "sender_full_name": "RalfJ",
        "timestamp": 1540804044
    },
    {
        "content": "<p>I guess I will have to disable incremental again :(</p>",
        "id": 136693303,
        "sender_full_name": "RalfJ",
        "timestamp": 1540804444
    },
    {
        "content": "<p>did you clean before you changed branches?</p>",
        "id": 136693626,
        "sender_full_name": "oli",
        "timestamp": 1540804957
    },
    {
        "content": "<p>no, why would I?</p>",
        "id": 136695086,
        "sender_full_name": "RalfJ",
        "timestamp": 1540806770
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/issues/55463\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55463\">https://github.com/rust-lang/rust/issues/55463</a></p>",
        "id": 136695263,
        "sender_full_name": "RalfJ",
        "timestamp": 1540807081
    },
    {
        "content": "<p>I always clean before I rebuild after a branch change as I have not been able to build rustc reliably otherwise</p>",
        "id": 136695470,
        "sender_full_name": "oli",
        "timestamp": 1540807307
    },
    {
        "content": "<p>mostly these have been duplicate crate errors during testing</p>",
        "id": 136695556,
        "sender_full_name": "oli",
        "timestamp": 1540807420
    },
    {
        "content": "<p>without incremental I rarely have problems</p>",
        "id": 136695605,
        "sender_full_name": "RalfJ",
        "timestamp": 1540807462
    }
]