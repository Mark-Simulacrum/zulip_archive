[
    {
        "content": "<p>Are there any reservations with making <a href=\"https://github.com/rust-lang/rust/issues/73394\">https://github.com/rust-lang/rust/issues/73394</a> const? Since ref-to-raw casts are already const, I think we can just make that part of the same feature gate as the non-const version.</p>",
        "id": 201476141,
        "sender_full_name": "RalfJ",
        "timestamp": 1592656692
    },
    {
        "content": "<p>The macro doesn't need anything for making it const, the body of the macro is the important part</p>",
        "id": 201476338,
        "sender_full_name": "oli",
        "timestamp": 1592657050
    },
    {
        "content": "<p>So if the expanded code contains something non-const, then that needs to be made const, yes</p>",
        "id": 201476339,
        "sender_full_name": "oli",
        "timestamp": 1592657069
    },
    {
        "content": "<p>so basically, we'd just have to allow <code>AddrOf</code> in const if the (normal non-const) feature gate is on?</p>",
        "id": 201476581,
        "sender_full_name": "RalfJ",
        "timestamp": 1592657535
    },
    {
        "content": "<p>yea</p>",
        "id": 201476642,
        "sender_full_name": "oli",
        "timestamp": 1592657670
    },
    {
        "content": "<p>lol looks like <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> already did that as part of their initial implementation :)</p>",
        "id": 201527803,
        "sender_full_name": "RalfJ",
        "timestamp": 1592734279
    },
    {
        "content": "<p>:)</p>",
        "id": 201527806,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1592734300
    },
    {
        "content": "<p>Well, new things are const unless an error is added for them.</p>",
        "id": 201527850,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1592734341
    }
]