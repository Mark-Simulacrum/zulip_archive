[
    {
        "content": "<p>I'm opening this topic to keep my questions about <a href=\"https://github.com/rust-lang/miri/issues/756\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/issues/756\">https://github.com/rust-lang/miri/issues/756</a> in the same place :P</p>",
        "id": 174198947,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1566885550
    },
    {
        "content": "<p>I know that the error when trying to access <code>environ</code> is created here: <a href=\"https://github.com/rust-lang/miri/blob/master/src/machine.rs#L251\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/blob/master/src/machine.rs#L251\">https://github.com/rust-lang/miri/blob/master/src/machine.rs#L251</a></p>",
        "id": 174199449,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1566886312
    },
    {
        "content": "<p>But I'm not sure how to actually write to that location before hand.</p>",
        "id": 174199498,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1566886335
    },
    {
        "content": "<p>you'll need to add more arguments</p>",
        "id": 174208417,
        "sender_full_name": "oli",
        "timestamp": 1566895614
    },
    {
        "content": "<p>where do you want to store the location?</p>",
        "id": 174208436,
        "sender_full_name": "oli",
        "timestamp": 1566895629
    },
    {
        "content": "<p><code>MemoryExtra</code>?</p>",
        "id": 174208438,
        "sender_full_name": "oli",
        "timestamp": 1566895633
    },
    {
        "content": "<blockquote>\n<p>where do you want to store the location?</p>\n</blockquote>\n<p>\"in the correct place\", I think memory extra would be ok</p>",
        "id": 174229240,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1566912977
    },
    {
        "content": "<p>yea, then I guess add an <code>&amp;MemoryExtra</code> arg to the function</p>",
        "id": 174229665,
        "sender_full_name": "oli",
        "timestamp": 1566913202
    },
    {
        "content": "<p>Will do</p>",
        "id": 174230507,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1566913750
    },
    {
        "content": "<p>After some hacks here and there I was able to allocate the environment variables and the <code>environ</code> pointer as specified in <a href=\"http://man7.org/linux/man-pages/man7/environ.7.html\" target=\"_blank\" title=\"http://man7.org/linux/man-pages/man7/environ.7.html\">http://man7.org/linux/man-pages/man7/environ.7.html</a> with the null at the end and everything</p>",
        "id": 174372539,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005461
    },
    {
        "content": "<p>However when I try to run this example </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">env</span>::<span class=\"n\">vars_os</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{:?}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>i get an alignment error <a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/os.rs#L440\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/os.rs#L440\">here</a> </p>\n<div class=\"codehilite\"><pre><span></span>error[E0080]: Miri evaluation error: tried to access memory with alignment 1, but alignment 8 is required\n   --&gt; /home/christian/Workspace/contrib/rust/src/libstd/sys/unix/os.rs:440:41\n    |\n440 |         while environ != ptr::null() &amp;&amp; *environ != ptr::null() {\n    |                                         ^^^^^^^^ Miri evaluation error: tried to access memory with alignment 1, but alignment 8 is required\n    |\n    = note: inside call to `std::sys::unix::os::env` at /home/christian/Workspace/contrib/rust/src/libstd/env.rs:143:21\n</pre></div>",
        "id": 174372636,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005512
    },
    {
        "content": "<p>well... <code>environ()</code> yields <code>*mut *const *const c_char</code>: <a href=\"https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421\">https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421</a></p>",
        "id": 174372932,
        "sender_full_name": "oli",
        "timestamp": 1567005679
    },
    {
        "content": "<p>the outer allocation containing the pointers needs to be pointer aligned</p>",
        "id": 174372947,
        "sender_full_name": "oli",
        "timestamp": 1567005692
    },
    {
        "content": "<p>wait that's three pointers?</p>",
        "id": 174372968,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005706
    },
    {
        "content": "<p>the first one points to the <code>environ</code> static</p>",
        "id": 174372986,
        "sender_full_name": "oli",
        "timestamp": 1567005720
    },
    {
        "content": "<p>like <code>***char</code>?!?</p>",
        "id": 174373045,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005734
    },
    {
        "content": "<p>essentially</p>",
        "id": 174373056,
        "sender_full_name": "oli",
        "timestamp": 1567005743
    },
    {
        "content": "<p>oh shit</p>",
        "id": 174373064,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005746
    },
    {
        "content": "<p>I stopped at two pointers</p>",
        "id": 174373076,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005755
    },
    {
        "content": "<p>ty I'll fix it</p>",
        "id": 174373079,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005758
    },
    {
        "content": "<p>the <code>environ</code> static is a <code>Vec&lt;String&gt;</code> essentially</p>",
        "id": 174373087,
        "sender_full_name": "oli",
        "timestamp": 1567005765
    },
    {
        "content": "<p>uh</p>",
        "id": 174373096,
        "sender_full_name": "oli",
        "timestamp": 1567005768
    },
    {
        "content": "<p>wiat</p>",
        "id": 174373097,
        "sender_full_name": "oli",
        "timestamp": 1567005769
    },
    {
        "content": "<p>yes</p>",
        "id": 174373111,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005776
    },
    {
        "content": "<p><code>environ</code>'s type is just <code>**char</code></p>",
        "id": 174373114,
        "sender_full_name": "oli",
        "timestamp": 1567005779
    },
    {
        "content": "<p>yes that's what I thought</p>",
        "id": 174373132,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005791
    },
    {
        "content": "<p>but the alignment needs to be pointer-alignment</p>",
        "id": 174373171,
        "sender_full_name": "oli",
        "timestamp": 1567005819
    },
    {
        "content": "<p>because the <code>environ</code> var contains pointers</p>",
        "id": 174373182,
        "sender_full_name": "oli",
        "timestamp": 1567005828
    },
    {
        "content": "<p>only what is being pointed at may be <code>u8</code> aligned</p>",
        "id": 174373198,
        "sender_full_name": "oli",
        "timestamp": 1567005841
    },
    {
        "content": "<p>are you taking into account that before the line that errors they already did <code>let environ = *environ</code>?</p>",
        "id": 174373294,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005875
    },
    {
        "content": "<p>so <code>environ</code> should be <code>*char</code> and <code>*environ</code> should be <code>char</code> which has 1 byte alignment i think</p>",
        "id": 174373381,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005937
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/os.rs#L438\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/os.rs#L438\">https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/os.rs#L438</a></p>",
        "id": 174373497,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567005992
    },
    {
        "content": "<blockquote>\n<p>well... <code>environ()</code> yields <code>*mut *const *const c_char</code>: <a href=\"https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421\">https://github.com/rust-lang/rust/blob/ac21131f7859836cd3fcb39231c0162fd892d960/src/libstd/sys/unix/os.rs#L421</a></p>\n</blockquote>\n<p>but this would mean I have to alloc a pointer to my current <code>environ</code> that is just a <code>**char</code>, is that right?</p>",
        "id": 174373601,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567006055
    },
    {
        "content": "<p>uh</p>",
        "id": 174376137,
        "sender_full_name": "oli",
        "timestamp": 1567007571
    },
    {
        "content": "<p>I'm confused</p>",
        "id": 174376140,
        "sender_full_name": "oli",
        "timestamp": 1567007573
    },
    {
        "content": "<p>so <code>environ</code> is an allocation containing an array of pointers pointing to allocations of null terminated strings</p>",
        "id": 174376213,
        "sender_full_name": "oli",
        "timestamp": 1567007640
    },
    {
        "content": "<p>yes</p>",
        "id": 174376373,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567007720
    },
    {
        "content": "<p>and that array of pointers is also null terminated</p>",
        "id": 174376854,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008008
    },
    {
        "content": "<p>yes but it's the wrong alignment</p>",
        "id": 174376874,
        "sender_full_name": "oli",
        "timestamp": 1567008017
    },
    {
        "content": "<p>I made it work</p>",
        "id": 174376891,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008031
    },
    {
        "content": "<p>you were right</p>",
        "id": 174376895,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008034
    },
    {
        "content": "<p>XD</p>",
        "id": 174376896,
        "sender_full_name": "oli",
        "timestamp": 1567008035
    },
    {
        "content": "<p>I need a third pointer</p>",
        "id": 174376898,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008037
    },
    {
        "content": "<p>:P</p>",
        "id": 174376899,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008040
    },
    {
        "content": "<p>needed*</p>",
        "id": 174376902,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008042
    },
    {
        "content": "<p>uh</p>",
        "id": 174376910,
        "sender_full_name": "oli",
        "timestamp": 1567008047
    },
    {
        "content": "<p>why? IDK</p>",
        "id": 174376943,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008069
    },
    {
        "content": "<p>but it worked</p>",
        "id": 174376948,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008071
    },
    {
        "content": "<p>but in fact that makes things easier</p>",
        "id": 174377222,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008238
    },
    {
        "content": "<p>The good thing is that now I know what other changes I need to write it properly</p>",
        "id": 174377288,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008259
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/h95cdR2ra0EnjsusO2EeD146/Screenshot-from-2019-08-28-11-04-47.png\" target=\"_blank\" title=\"Screenshot-from-2019-08-28-11-04-47.png\">Screenshot-from-2019-08-28-11-04-47.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/h95cdR2ra0EnjsusO2EeD146/Screenshot-from-2019-08-28-11-04-47.png\" target=\"_blank\" title=\"Screenshot-from-2019-08-28-11-04-47.png\"><img src=\"/user_uploads/4715/h95cdR2ra0EnjsusO2EeD146/Screenshot-from-2019-08-28-11-04-47.png\"></a></div>",
        "id": 174377349,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008311
    },
    {
        "content": "<p>I had to disable stacked borrows to make it work because <code>find_foreign_static</code> returns an <code>Allocation&lt;(),()&gt;</code></p>",
        "id": 174377642,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008542
    },
    {
        "content": "<p>can you add more details? Not sure why stacked borrows needs to be disabled for this</p>",
        "id": 174378233,
        "sender_full_name": "oli",
        "timestamp": 1567008931
    },
    {
        "content": "<p>oh, it's hardcoded to those generic params?</p>",
        "id": 174378274,
        "sender_full_name": "oli",
        "timestamp": 1567008958
    },
    {
        "content": "<p>I guess you need to fiddle through the appropriate params</p>",
        "id": 174378324,
        "sender_full_name": "oli",
        "timestamp": 1567008969
    },
    {
        "content": "<p>yes</p>",
        "id": 174378325,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008971
    },
    {
        "content": "<p>well  not harcoded</p>",
        "id": 174378335,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008984
    },
    {
        "content": "<p>those are the default for <code>Allocation</code></p>",
        "id": 174378343,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567008991
    },
    {
        "content": "<p>yea</p>",
        "id": 174378350,
        "sender_full_name": "oli",
        "timestamp": 1567008994
    },
    {
        "content": "<p>but like you need to change rustc</p>",
        "id": 174378357,
        "sender_full_name": "oli",
        "timestamp": 1567009000
    },
    {
        "content": "<p><code>Allocation&lt;Tag = (), Extra =()&gt;</code></p>",
        "id": 174378358,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567009000
    },
    {
        "content": "<p>Yes yes</p>",
        "id": 174378373,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567009009
    },
    {
        "content": "<p>No way I'm going to push this code, Ralf would kill me, it is horrible hahahah</p>",
        "id": 174378390,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567009026
    },
    {
        "content": "<p>XD</p>",
        "id": 174382567,
        "sender_full_name": "oli",
        "timestamp": 1567012243
    },
    {
        "content": "<p>Ralf driven development</p>",
        "id": 174382587,
        "sender_full_name": "oli",
        "timestamp": 1567012265
    },
    {
        "content": "<p>Let me show you some of my magic:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">memory_extra</span><span class=\"p\">.</span><span class=\"n\">env_alloc</span><span class=\"p\">.</span><span class=\"n\">as_ref</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Allocation</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">bytes</span>: <span class=\"nc\">alloc</span><span class=\"p\">.</span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">relocations</span>: <span class=\"nc\">Relocations</span>::<span class=\"n\">from_presorted</span><span class=\"p\">(</span><span class=\"n\">alloc</span><span class=\"p\">.</span><span class=\"n\">relocations</span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">))</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">((),</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">))).</span><span class=\"n\">collect</span>::<span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">()),</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">undef_mask</span>: <span class=\"nc\">alloc</span><span class=\"p\">.</span><span class=\"n\">undef_mask</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">align</span>: <span class=\"nc\">alloc</span><span class=\"p\">.</span><span class=\"n\">align</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">mutability</span>: <span class=\"nc\">alloc</span><span class=\"p\">.</span><span class=\"n\">mutability</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">extra</span>: <span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">alloc</span><span class=\"w\"></span>\n</pre></div>",
        "id": 174390500,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567018101
    },
    {
        "content": "<p>Untaging Done Wrong™</p>",
        "id": 174390547,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567018132
    },
    {
        "content": "<p><span aria-label=\"no entry\" class=\"emoji emoji-26d4\" role=\"img\" title=\"no entry\">:no_entry:</span></p>",
        "id": 174390958,
        "sender_full_name": "oli",
        "timestamp": 1567018401
    },
    {
        "content": "<p>Solving this tagging thing is driving me nuts.</p>",
        "id": 174391118,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567018502
    },
    {
        "content": "<p>So, the output of <code>Machine::find_foreign_static</code> is tagged in <code>Memory::get_static_alloc</code>. I changed <code>get_static_alloc</code> inside rust so it doesn't tag the output of <code>find_foreign_static</code>. But now I need to tag <a href=\"https://github.com/rust-lang/miri/blob/master/src/machine.rs#L256\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/blob/master/src/machine.rs#L256\">this</a> allocation inside miri. Any ideas?</p>",
        "id": 174391504,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567018738
    },
    {
        "content": "<p>Uh... call tag_allocation ?</p>",
        "id": 174393407,
        "sender_full_name": "oli",
        "timestamp": 1567020137
    },
    {
        "content": "<p>Not sure if all info is available to do so</p>",
        "id": 174393430,
        "sender_full_name": "oli",
        "timestamp": 1567020166
    },
    {
        "content": "<p>Nope I dont have an alloc_id</p>",
        "id": 174393704,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567020364
    },
    {
        "content": "<p>But I think I can leave it untagged, let me see</p>",
        "id": 174393719,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567020372
    },
    {
        "content": "<p>I mean, tagged with <code>Tag::Untagged</code></p>",
        "id": 174393740,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567020394
    },
    {
        "content": "<p>Oh lol, the problem is not the tagging, is the extra</p>",
        "id": 174394683,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567021114
    },
    {
        "content": "<p>Ah, that impls Default I think</p>",
        "id": 174395657,
        "sender_full_name": "oli",
        "timestamp": 1567021826
    },
    {
        "content": "<p>So just call Default::default()</p>",
        "id": 174395675,
        "sender_full_name": "oli",
        "timestamp": 1567021839
    },
    {
        "content": "<p>At the end the thing is that I have an <code>Allocation&lt;Tag, ()&gt;</code> and I need an <code>Allocation&lt;Tag, AllocExtra&gt;</code> but I wanted to add the <code>alloc_extra</code> with a method instead of destructuring the allocation itself D:</p>",
        "id": 174395850,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567022018
    },
    {
        "content": "<p>I could do that by changing the <code>Allocation</code> impl</p>",
        "id": 174396109,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567022256
    },
    {
        "content": "<p>Add a <code>map_extra</code> method</p>",
        "id": 174397361,
        "sender_full_name": "oli",
        "timestamp": 1567023354
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 174397423,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567023387
    },
    {
        "content": "<p>I was thinking about changing <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc/mir/interpret/allocation.rs.html#84\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc/mir/interpret/allocation.rs.html#84\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc/mir/interpret/allocation.rs.html#84</a> for</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">Tag</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Extra</span>: <span class=\"nb\">Default</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Allocation</span><span class=\"o\">&lt;</span><span class=\"n\">Tag</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Extra</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">..</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 174397479,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567023443
    },
    {
        "content": "<p>but if you think the method is better I will</p>",
        "id": 174397487,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567023458
    },
    {
        "content": "<p>Oh heh</p>",
        "id": 174397855,
        "sender_full_name": "oli",
        "timestamp": 1567023747
    },
    {
        "content": "<p>Go right ahead</p>",
        "id": 174397860,
        "sender_full_name": "oli",
        "timestamp": 1567023751
    },
    {
        "content": "<p>Uff...</p>",
        "id": 174398153,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567023993
    },
    {
        "content": "<p>it seems I broke something with all the tagging</p>",
        "id": 174398158,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567024000
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0080]: Miri evaluation error: no item granting write access to tag &lt;17&gt; found in borrow stack\n   --&gt; /home/christian/Workspace/contrib/rust/src/libstd/sys/unix/thread.rs:307:9\n    |\n307 |         PAGE_SIZE = os::page_size();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Miri evaluation error: no item granting write access to tag &lt;17&gt; found in borrow stack\n    |\n    = note: inside call to `std::sys::unix::thread::guard::init` at /home/christian/Workspace/contrib/rust/src/libstd/rt.rs:33:26\n    = note: inside call to `std::rt::lang_start_internal` at /home/christian/Workspace/contrib/rust/src/libstd/rt.rs:64:5\n    = note: inside call to `std::rt::lang_start::&lt;()&gt;`\n</pre></div>",
        "id": 174398222,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567024069
    },
    {
        "content": "<p>:D</p>",
        "id": 174398228,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567024074
    },
    {
        "content": "<p>It seems I need to properly tag the statics in miri</p>",
        "id": 174398365,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567024163
    },
    {
        "content": "<blockquote>\n<p>so <code>environ</code> is an allocation containing an array of pointers pointing to allocations of null terminated strings</p>\n</blockquote>\n<p>no, environ is a ptr-sized allocation containing a pointer to an allocation containing a null-terminated array of pointers to null-terminated strings.</p>",
        "id": 174428009,
        "sender_full_name": "RalfJ",
        "timestamp": 1567060689
    },
    {
        "content": "<p>and that array of pointers is also null-terminated</p>",
        "id": 174428024,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567060731
    },
    {
        "content": "<p>indeed</p>",
        "id": 174428032,
        "sender_full_name": "RalfJ",
        "timestamp": 1567060743
    },
    {
        "content": "<p>also see <a href=\"https://github.com/rust-lang/rust/pull/63951#issuecomment-525921663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/63951#issuecomment-525921663\">https://github.com/rust-lang/rust/pull/63951#issuecomment-525921663</a></p>",
        "id": 174428107,
        "sender_full_name": "RalfJ",
        "timestamp": 1567060821
    },
    {
        "content": "<p>I just don't like the laziness aspect of that very much... the static should always exist, not just when it is used the first time</p>",
        "id": 174428147,
        "sender_full_name": "RalfJ",
        "timestamp": 1567060888
    },
    {
        "content": "<p>the trouble is that unlike the other statics we handle lazily, this one actually changes^^</p>",
        "id": 174428154,
        "sender_full_name": "RalfJ",
        "timestamp": 1567060905
    },
    {
        "content": "<p>Too many pointers...</p>",
        "id": 174429020,
        "sender_full_name": "oli",
        "timestamp": 1567062070
    },
    {
        "content": "<p>Maybe we need a Serializer impl for Memory so we can use serde to just make rust datastructures become const memory</p>",
        "id": 174429048,
        "sender_full_name": "oli",
        "timestamp": 1567062121
    },
    {
        "content": "<p>lol</p>",
        "id": 174429886,
        "sender_full_name": "RalfJ",
        "timestamp": 1567063115
    },
    {
        "content": "<p>Well idk I made it work but I had to disable like half of the stacked borrows check to do so</p>",
        "id": 174434167,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567067724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>, your suggestion of adding the <code>AllocId</code> to <code>find_foreign_static</code>should be enough to solve the stacked borrows conflicts?</p>",
        "id": 174434296,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567067839
    },
    {
        "content": "<p>it worked <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span> <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span></p>",
        "id": 174471521,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567097626
    },
    {
        "content": "<blockquote>\n<p>it worked <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span> <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span></p>\n</blockquote>\n<p>awesome :D</p>",
        "id": 174471594,
        "sender_full_name": "RalfJ",
        "timestamp": 1567097683
    },
    {
        "content": "<p>let me fix the docs</p>",
        "id": 174471604,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567097694
    },
    {
        "content": "<p>Oh wait, it actually didnt :(</p>",
        "id": 174471858,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567097901
    },
    {
        "content": "<p>I ran the wrong file with miri D:</p>",
        "id": 174471876,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567097909
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0080]: Miri evaluation error: trying to reborrow for Unique, but parent tag &lt;1363&gt; does not have an appropriate item in the borrow stack\n   --&gt; /home/christian/Workspace/contrib/rust/src/libstd/sys/unix/os.rs:423:5\n    |\n423 |     &amp;mut environ\n    |     ^^^^^^^^^^^^ Miri evaluation error: trying to reborrow for Unique, but parent tag &lt;1363&gt; does not have an appropriate item in the borrow stack\n    |\n    = note: inside call to `std::sys::unix::os::environ` at /home/christian/Workspace/contrib/rust/src/libstd/sys/unix/os.rs:438:28\n    = note: inside call to `std::sys::unix::os::env` at /home/christian/Workspace/contrib/rust/src/libstd/env.rs:143:21\n</pre></div>",
        "id": 174472072,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567098055
    },
    {
        "content": "<p>I think I'm going to read <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>'s blog before trying to change more stuff</p>",
        "id": 174472473,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567098362
    },
    {
        "content": "<p>Should I commit the changes adding the <code>AllocId</code> to <code>find_foreign_static</code>?</p>",
        "id": 174472613,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567098477
    },
    {
        "content": "<blockquote>\n<p>I think I'm going to read <span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span>'s blog before trying to change more stuff</p>\n</blockquote>\n<p>I dont think that'll help</p>",
        "id": 174478367,
        "sender_full_name": "RalfJ",
        "timestamp": 1567102338
    },
    {
        "content": "<p>you are not doing crazy aliasing here, you are just not tracking the pointer povenance properly <em>somewhere</em></p>",
        "id": 174478384,
        "sender_full_name": "RalfJ",
        "timestamp": 1567102352
    },
    {
        "content": "<p>I'm doing the allocations in the same way as for <code>argv</code> but using <code>MemoryKind::Env</code> instead</p>",
        "id": 174479353,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567103020
    },
    {
        "content": "<p>Any Ideas on how can I debug this in a better way?</p>",
        "id": 174484728,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567106996
    },
    {
        "content": "<p>Can you upload the code? Hard to make guesses in a blackbox manner</p>",
        "id": 174487335,
        "sender_full_name": "oli",
        "timestamp": 1567108926
    },
    {
        "content": "<p>Sure</p>",
        "id": 174487354,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567108935
    },
    {
        "content": "<p><a href=\"https://github.com/christianpoveda/miri/commit/529af9b6333b7c0403cc1fb88bc3772729fc09f1\" target=\"_blank\" title=\"https://github.com/christianpoveda/miri/commit/529af9b6333b7c0403cc1fb88bc3772729fc09f1\">https://github.com/christianpoveda/miri/commit/529af9b6333b7c0403cc1fb88bc3772729fc09f1</a></p>",
        "id": 174487531,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567109083
    }
]