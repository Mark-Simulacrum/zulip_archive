[
    {
        "content": "<p>I'm not quite sure how to proceed for <a href=\"https://github.com/rust-lang/rust/issues/56985\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56985\">#56985</a>. On the one hand, we want function pointers (which have no backing allocation) to be treated as a zst allocation (so offsetting is only ok by zero) on the other hand we want to detect pointers to dead allocations</p>",
        "id": 152328544,
        "sender_full_name": "oli",
        "timestamp": 1545397195
    },
    {
        "content": "<p>I can do the full checking for that, but it seems that this would duplicate a lot of code from the <code>Memory::get</code> path</p>",
        "id": 152328611,
        "sender_full_name": "oli",
        "timestamp": 1545397223
    },
    {
        "content": "<p><code>get</code> could return an <code>Option&lt;&amp;Allocation&gt;</code>, with <code>None</code> representing a ZST without backing allocation?</p>",
        "id": 152335707,
        "sender_full_name": "RalfJ",
        "timestamp": 1545404207
    },
    {
        "content": "<p>hm no that'll also not be good</p>",
        "id": 152382612,
        "sender_full_name": "RalfJ",
        "timestamp": 1545470332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span>  what about extending <code>get_size_and_align</code> to also take a flag whether the allocation must be live?</p>",
        "id": 152382620,
        "sender_full_name": "RalfJ",
        "timestamp": 1545470356
    },
    {
        "content": "<p>yea that seems the most reasonable course of action</p>",
        "id": 152391035,
        "sender_full_name": "oli",
        "timestamp": 1545488842
    },
    {
        "content": "<p>I mean it essentially resolves to the \"full manual checking\" but with some deduplication</p>",
        "id": 152391037,
        "sender_full_name": "oli",
        "timestamp": 1545488875
    },
    {
        "content": "<p>yeah, it should actually not introduce new duplicates, just better use the existing ones ;)</p>",
        "id": 152392236,
        "sender_full_name": "RalfJ",
        "timestamp": 1545491070
    }
]