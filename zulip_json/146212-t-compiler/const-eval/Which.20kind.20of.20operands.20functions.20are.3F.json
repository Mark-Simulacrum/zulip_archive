[
    {
        "content": "<p>I'm trying to follow the execution of a function from a call terminator on MIR (<a href=\"https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc_mir/interpret/terminator.rs#L77\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc_mir/interpret/terminator.rs#L77\">https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc_mir/interpret/terminator.rs#L77</a>) and I wanted to know which kind of operands (<a href=\"https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc/mir/mod.rs#L2113\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc/mir/mod.rs#L2113\">https://github.com/rust-lang/rust/blob/f058741a679062202697144daebd05e1b0d6d747/src/librustc/mir/mod.rs#L2113</a>) functions are</p>",
        "id": 160837661,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1552611587
    },
    {
        "content": "<p>I assume functions declared with <code>fn () {...}</code> are just constants?</p>",
        "id": 160838830,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1552612979
    },
    {
        "content": "<p>Yes</p>",
        "id": 160853103,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1552634983
    },
    {
        "content": "<p>On which stage rustc stores functions to be called later?</p>",
        "id": 160880689,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1552660693
    },
    {
        "content": "<p>What do you mean by \"stores functions\"?</p>",
        "id": 160880767,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1552660770
    },
    {
        "content": "<p>Well right now I understand that in order to evaluate a function, const-eval adds a new frame to the stack with a reference to the MIR of the function. Where are the representations of functions stored to be retrieved?</p>",
        "id": 160881487,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1552661277
    },
    {
        "content": "<p>The MIR for the function is stored in a side table in the <code>TyCtxt</code> which is accessed by <code>DefId</code>. The query you're probably most interested in is <code>tcx.mir_const()</code> <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/struct.TyCtxt.html#method.mir_const\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/struct.TyCtxt.html#method.mir_const\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/struct.TyCtxt.html#method.mir_const</a></p>",
        "id": 160883253,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1552662460
    },
    {
        "content": "<p>Const eval actually uses the <code>optimized_mir</code> query. <code>mir_const</code> is only for const qualification</p>",
        "id": 160885410,
        "sender_full_name": "oli",
        "timestamp": 1552663925
    },
    {
        "content": "<p>Oops. Thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 160886369,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1552664578
    },
    {
        "content": "<p>Ok now I've got weekend reading material, thank you :D</p>",
        "id": 160961335,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1552759860
    }
]