[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> so about <a href=\"https://github.com/rust-lang/rust/pull/55142\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55142\">https://github.com/rust-lang/rust/pull/55142</a>...</p>",
        "id": 135957117,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764335
    },
    {
        "content": "<p>I can make this into a <code>bug!</code> if you want. Not sure why we'd want an ICE there but well^^</p>",
        "id": 135957132,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764353
    },
    {
        "content": "<p>Looking at <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=e75c6dc3f500490e032fff4266bd8682\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=e75c6dc3f500490e032fff4266bd8682\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=e75c6dc3f500490e032fff4266bd8682</a>, it seems that even before <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>'s patch, we don't actually get a <code>GetDiscriminant</code> for empty enums</p>",
        "id": 135957146,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764398
    },
    {
        "content": "<p>Well. I don't think it's an ICE. It is literally unreachable code.</p>",
        "id": 135957188,
        "sender_full_name": "oli",
        "timestamp": 1539764405
    },
    {
        "content": "<p>though I think with the changes around <code>!</code> patterns that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and I have been planning, that might change</p>",
        "id": 135957197,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764418
    },
    {
        "content": "<p>I agree it is likely unreachable currently, but that is an artifact of how we generate MIR</p>",
        "id": 135957204,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764433
    },
    {
        "content": "<p>and there is perfectly reasonable MIR that reaches this</p>",
        "id": 135957206,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764441
    },
    {
        "content": "<p>just rustc never produces it</p>",
        "id": 135957215,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764449
    },
    {
        "content": "<p>You'd still need to be able to create a value of uninhabited type to get here</p>",
        "id": 135957216,
        "sender_full_name": "oli",
        "timestamp": 1539764451
    },
    {
        "content": "<p>but I think we should produce it</p>",
        "id": 135957221,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764459
    },
    {
        "content": "<p>true, but without validation that's not hard</p>",
        "id": 135957228,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764469
    },
    {
        "content": "<p>won't we error out before even getting here?</p>",
        "id": 135957232,
        "sender_full_name": "oli",
        "timestamp": 1539764485
    },
    {
        "content": "<p>only through validation</p>",
        "id": 135957237,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764492
    },
    {
        "content": "<p>I hope</p>",
        "id": 135957238,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764493
    },
    {
        "content": "<p>this is another instance of my pet peeve: enums with 0 variants are not special</p>",
        "id": 135957246,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764501
    },
    {
        "content": "<p>just the \"is this a valid discriminant\" check cannot succeed</p>",
        "id": 135957251,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764513
    },
    {
        "content": "<p>but it doesnt have to fail any other way than a bad discriminant for a 5-variant enum does</p>",
        "id": 135957289,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764525
    },
    {
        "content": "<p>ok. I remember we used to have some code about erroring out when encountering uninhabited locals</p>",
        "id": 135957298,
        "sender_full_name": "oli",
        "timestamp": 1539764528
    },
    {
        "content": "<p>yeah we did, and we killed it, and I am happy about that</p>",
        "id": 135957304,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764540
    },
    {
        "content": "<p>at least I couldnt find it any more^^</p>",
        "id": 135957308,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764557
    },
    {
        "content": "<p>ok, I agree that fewer special cases are good</p>",
        "id": 135957309,
        "sender_full_name": "oli",
        "timestamp": 1539764557
    },
    {
        "content": "<p>I'm just unhappy that we don't have a test case for this path</p>",
        "id": 135957314,
        "sender_full_name": "oli",
        "timestamp": 1539764573
    },
    {
        "content": "<p>which we can't have, since rustc just bails out</p>",
        "id": 135957326,
        "sender_full_name": "oli",
        "timestamp": 1539764586
    },
    {
        "content": "<p>that's also a good way to put it, yes</p>",
        "id": 135957341,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764632
    },
    {
        "content": "<p>yeah, well... that's <a href=\"https://github.com/solson/miri/issues/196\" target=\"_blank\" title=\"https://github.com/solson/miri/issues/196\">https://github.com/solson/miri/issues/196</a></p>",
        "id": 135957390,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764649
    },
    {
        "content": "<p>lol the MIR of this code: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c</a></p>",
        "id": 135957396,
        "sender_full_name": "oli",
        "timestamp": 1539764678
    },
    {
        "content": "<p>brb, getting into the dead spot</p>",
        "id": 135957402,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764697
    },
    {
        "content": "<blockquote>\n<p>lol the MIR of this code: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=fad502214672640ae55156215fa77f5c</a></p>\n</blockquote>\n<p>yeah that makes lots of sense actually</p>",
        "id": 135957427,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764741
    },
    {
        "content": "<p><code>match x { _ =&gt; ... }</code> is equivalent to <code>let _ = x; ...</code></p>",
        "id": 135957429,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764752
    },
    {
        "content": "<p>it is not supposed to inspect the discriminant</p>",
        "id": 135957447,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764762
    },
    {
        "content": "<p>so its not even UB, without validity</p>",
        "id": 135957473,
        "sender_full_name": "RalfJ",
        "timestamp": 1539764768
    }
]