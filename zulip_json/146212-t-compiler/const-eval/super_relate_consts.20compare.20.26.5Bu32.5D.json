[
    {
        "content": "<p>Working on <a href=\"https://github.com/rust-lang/rust/issues/73727\">https://github.com/rust-lang/rust/issues/73727</a> I get an ICE in <code>super_relate_consts</code> as comparing  <code>ConstValue::ByRef</code> for references is not yet implemented.</p>",
        "id": 202185969,
        "sender_full_name": "lcnr",
        "timestamp": 1593264218
    },
    {
        "content": "<p>I think the general idea here is to recursively walk the reference tree and compare any non reference types as normal</p>",
        "id": 202186045,
        "sender_full_name": "lcnr",
        "timestamp": 1593264321
    },
    {
        "content": "<p>How can I interpret the allocation behind the <code>ConstValue</code> of <code>&amp;[]</code> as <code>[]</code>?</p>",
        "id": 202186124,
        "sender_full_name": "lcnr",
        "timestamp": 1593264426
    },
    {
        "content": "<p>A slightly simpler case is <code>&amp;'static u32</code>, which currently has the same ICE</p>",
        "id": 202186138,
        "sender_full_name": "lcnr",
        "timestamp": 1593264458
    },
    {
        "content": "<p>where I would like to interpret the allocations as <code>u32</code>  (ConstKind::Value) and compare them</p>",
        "id": 202186197,
        "sender_full_name": "lcnr",
        "timestamp": 1593264520
    },
    {
        "content": "<p>ah, probably <code>Allocation::read_scalar</code> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 202186302,
        "sender_full_name": "lcnr",
        "timestamp": 1593264654
    },
    {
        "content": "<p>there might be already code which does this to implement match patterns <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> let's hope that I can reuse that here</p>",
        "id": 202186649,
        "sender_full_name": "lcnr",
        "timestamp": 1593265116
    },
    {
        "content": "<p>there's <code>const_deref</code>, but we should not fix such ICEs imo unless we go full integer tree constants as per <a href=\"https://github.com/rust-lang/rust/issues/70889\">https://github.com/rust-lang/rust/issues/70889</a></p>",
        "id": 202227796,
        "sender_full_name": "oli",
        "timestamp": 1593335418
    },
    {
        "content": "<p>I think I'll prioritize doing that work as so much stuff is blocked on it</p>",
        "id": 202227798,
        "sender_full_name": "oli",
        "timestamp": 1593335433
    }
]