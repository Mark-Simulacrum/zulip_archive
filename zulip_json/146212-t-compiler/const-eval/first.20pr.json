[
    {
        "content": "<p>Hello, I'm making my first PR, to make more traits in core const.</p>",
        "id": 257453446,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634166723
    },
    {
        "content": "<p>Would something like that be merged under unstable const, if it uses an unstable feature? <a href=\"https://github.com/rust-lang/rfcs/pull/2632\">Using RFC 2632</a><br>\nI'm also considering making the default functions of PartialEq,PartialOrd,Eq,Ord const, so it's possible to implement them const on foreign types, would this be OK considering the syntax for this is currently only temporary?</p>",
        "id": 257453609,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634166823
    },
    {
        "content": "<p>but 2632 was closed, not merged</p>",
        "id": 257460723,
        "sender_full_name": "cuviper",
        "timestamp": 1634171676
    },
    {
        "content": "<p>There's already uses of it in std, for example, const_num_from_num</p>",
        "id": 257460816,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634171753
    },
    {
        "content": "<p>hmm, weird</p>",
        "id": 257460953,
        "sender_full_name": "cuviper",
        "timestamp": 1634171850
    },
    {
        "content": "<p>(ref: pr <a href=\"https://github.com/rust-lang/rust/issues/86840\">#86840</a>, tracking <a href=\"https://github.com/rust-lang/rust/issues/87852\">#87852</a>)</p>",
        "id": 257461065,
        "sender_full_name": "cuviper",
        "timestamp": 1634171934
    },
    {
        "content": "<p>I think this may be the reincarnation of the closed one, perhaps<br>\n<a href=\"https://github.com/rust-lang/rust/issues/67792\">https://github.com/rust-lang/rust/issues/67792</a></p>",
        "id": 257461133,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634171991
    },
    {
        "content": "<p>I'm surprised that these were added without input from T-libs / T-libs-api, AFAICS</p>",
        "id": 257461247,
        "sender_full_name": "cuviper",
        "timestamp": 1634172057
    },
    {
        "content": "<p>especially since it's a <em>provisional</em> implementation of the closed RFC</p>",
        "id": 257461270,
        "sender_full_name": "cuviper",
        "timestamp": 1634172074
    },
    {
        "content": "<p>(but still <code>rustc_const_unstable</code>, at least)</p>",
        "id": 257461286,
        "sender_full_name": "cuviper",
        "timestamp": 1634172091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"443191\">@AlexApps99</span> please ask in <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a>, and with a more descriptive topic name</p>",
        "id": 257461549,
        "sender_full_name": "cuviper",
        "timestamp": 1634172272
    },
    {
        "content": "<p>I'm on T-libs, but not T-libs-api, and I feel like that team should at least weigh in</p>",
        "id": 257461578,
        "sender_full_name": "cuviper",
        "timestamp": 1634172294
    },
    {
        "content": "<p>Sure, thanks</p>",
        "id": 257462237,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634172795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/first.20pr/near/257461578\">said</a>:</p>\n<blockquote>\n<p>I'm on T-libs, but not T-libs-api, and I feel like that team should at least weigh in</p>\n</blockquote>\n<p>apologies. I overextended the \"feel free to make functions unstably const without pinging T-libs\" into \"make everything unstably const without a ping\". I'll make sure we properly talk about this before further changes</p>",
        "id": 257494822,
        "sender_full_name": "oli",
        "timestamp": 1634198418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> that's a very subjective call, and maybe I'm overreacting, but it feels different to me when it depends on an experimental language feature. If others still say it's fine, then go ahead.</p>",
        "id": 257562102,
        "sender_full_name": "cuviper",
        "timestamp": 1634228104
    },
    {
        "content": "<p>It was a wrong call is what I'm trying to say</p>",
        "id": 257562455,
        "sender_full_name": "oli",
        "timestamp": 1634228228
    },
    {
        "content": "<p>I just totally didn't think about it</p>",
        "id": 257562482,
        "sender_full_name": "oli",
        "timestamp": 1634228239
    },
    {
        "content": "<p>just plain making new const fns is rather low risk, using trait bounds on const stuff is... unclear, so we should definitely talk about it and possibly back out of things</p>",
        "id": 257562657,
        "sender_full_name": "oli",
        "timestamp": 1634228310
    },
    {
        "content": "<p>you're not overreacting, we have teams and procedures for the very reason of not breaking stable things and not accidentally stabilizing things</p>",
        "id": 257562716,
        "sender_full_name": "oli",
        "timestamp": 1634228340
    },
    {
        "content": "<p>ok, thanks!</p>",
        "id": 257564208,
        "sender_full_name": "cuviper",
        "timestamp": 1634228955
    },
    {
        "content": "<p>there's a PR up now: <a href=\"https://github.com/rust-lang/rust/pull/89876\">https://github.com/rust-lang/rust/pull/89876</a><br>\nand a zulip thread: <a href=\"#narrow/stream/219381-t-libs/topic/Const.20std.3A.3Aops.20traits.20PR\">https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/Const.20std.3A.3Aops.20traits.20PR</a></p>\n<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> should we FCP the PR or what would be the best way to kick off the discussion?</p>",
        "id": 258342963,
        "sender_full_name": "oli",
        "timestamp": 1634724807
    },
    {
        "content": "<p>I tried to raise it for the t-libs-api meeting</p>",
        "id": 258407164,
        "sender_full_name": "cuviper",
        "timestamp": 1634750341
    }
]