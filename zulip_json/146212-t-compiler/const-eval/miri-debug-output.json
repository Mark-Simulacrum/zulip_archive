[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> I'd like to improve readability of our debug traces at least a bit. I want to have a trace that shows all statements, and prints the current function whenever that changes. I see several options:</p>\n<ul>\n<li>Put that information on <code>debug!</code>, so the way to get that trace is <code>RUST_LOG=rustc_mir::interpret=debug</code>. That means everything more detailed must go into <code>trace!</code>. This is what I kind of assumed we'd do so far, so some of my previous PRs have already downgraded some <code>debug!</code> to <code>trace!</code>. There are 4 of them left.</li>\n<li>Put that information on <code>info!</code>, so the env var is <code>RUST_LOG=rustc_mir::interpret=info</code>. However, <code>info!</code> doesn't get compiled away, so that would introduce some (1 or 2 per machine step) conditional checks into the miri engine.</li>\n<li>Put that information on a dedicated \"channel\" or whatever they call them, e.g. say we have them all in <code>step</code>, and make the env var <code>RUST_LOG=rustc_mir::interpret::step=debug</code>. The trouble here is that <code>push_stack_frame</code> and <code>pop_stack_frame</code> are in <code>eval_context</code>.</li>\n</ul>\n<p>What do you think?</p>",
        "id": 135959397,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767326
    },
    {
        "content": "<p>I still tend towards the first thing: <code>debug!</code> is what everybody doing miri debugging ought to find useful, <code>trace!</code> then can be enabled only on a dedicated module to get even more details there</p>",
        "id": 135959432,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767397
    },
    {
        "content": "<p>I don't think <code>RUST_LOG</code> gives us the kind of tracing capabilities we really want. Changing the levels by their modules is too large grained</p>",
        "id": 135959485,
        "sender_full_name": "oli",
        "timestamp": 1539767420
    },
    {
        "content": "<p>I'm fine with going the <code>debug!</code> route</p>",
        "id": 135959516,
        "sender_full_name": "oli",
        "timestamp": 1539767489
    },
    {
        "content": "<p>basically this won't include memory dumps anymore I presume?</p>",
        "id": 135959525,
        "sender_full_name": "oli",
        "timestamp": 1539767506
    },
    {
        "content": "<p>yeah memory dumps are already not on <code>debug!</code></p>",
        "id": 135959587,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767567
    },
    {
        "content": "<p>they could also be a hell of a lot more useful, often I have no clue why it is dumping what</p>",
        "id": 135959598,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767583
    },
    {
        "content": "<p>but that's more complicated^^</p>",
        "id": 135959605,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767588
    },
    {
        "content": "<p>yea :D</p>",
        "id": 135959609,
        "sender_full_name": "oli",
        "timestamp": 1539767597
    },
    {
        "content": "<p>this is what I mean: <a href=\"https://github.com/RalfJung/rust/commit/21f80dab7c2457677c0f2094e78054309131340e\" target=\"_blank\" title=\"https://github.com/RalfJung/rust/commit/21f80dab7c2457677c0f2094e78054309131340e\">https://github.com/RalfJung/rust/commit/21f80dab7c2457677c0f2094e78054309131340e</a></p>",
        "id": 135959679,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767674
    },
    {
        "content": "<p>in some minutes I'll copy-paste you an example of how it looks like</p>",
        "id": 135959689,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767694
    },
    {
        "content": "<p>oh wow, yes I've wanted that \"continuing\" message so much!</p>",
        "id": 135959804,
        "sender_full_name": "oli",
        "timestamp": 1539767789
    },
    {
        "content": "<p>btw, are these indentation changes actually doing anything?</p>",
        "id": 135959832,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767831
    },
    {
        "content": "<p>if yes, I can't see it^^</p>",
        "id": 135959837,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767835
    },
    {
        "content": "<p>I mean these: <code>::log_settings::settings().indentation -= 1;</code></p>",
        "id": 135959849,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767856
    },
    {
        "content": "<p>oh lol. this ICEs in the <code>to_string</code>...</p>",
        "id": 135959939,
        "sender_full_name": "RalfJ",
        "timestamp": 1539767985
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error: internal compiler error: librustc/util/ppaux.rs:310: finding type for DefId(4/0:2175 ~ alloc[af40]::vec[0]), encountered def-id DefId(4/0:0 ~ alloc[af40]) with no parent\n</pre></div>",
        "id": 135960000,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> so... how do I print an instance nicely without panicking the compiler?^^</p>",
        "id": 135960124,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768224
    },
    {
        "content": "<p>O_o</p>",
        "id": 135960169,
        "sender_full_name": "oli",
        "timestamp": 1539768247
    },
    {
        "content": "<p>the indentation changes don't work in the miri engine</p>",
        "id": 135960178,
        "sender_full_name": "oli",
        "timestamp": 1539768266
    },
    {
        "content": "<p>panic is here: <a href=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L310\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L310\">https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L310</a></p>",
        "id": 135960190,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768291
    },
    {
        "content": "<p>can you try debug printing the instance's Def?</p>",
        "id": 135960194,
        "sender_full_name": "oli",
        "timestamp": 1539768300
    },
    {
        "content": "<p>it's probably not a regular def</p>",
        "id": 135960208,
        "sender_full_name": "oli",
        "timestamp": 1539768311
    },
    {
        "content": "<p>maybe a closure or something</p>",
        "id": 135960212,
        "sender_full_name": "oli",
        "timestamp": 1539768316
    },
    {
        "content": "<p>isn't that what is shows in the panic? will do</p>",
        "id": 135960214,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768320
    },
    {
        "content": "<p>but even so, it should probably not panic :D</p>",
        "id": 135960231,
        "sender_full_name": "oli",
        "timestamp": 1539768358
    },
    {
        "content": "<p>^^</p>",
        "id": 135960286,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768391
    },
    {
        "content": "<p>huh... <code>alloc</code> obviously has no parent, it's the crate root</p>",
        "id": 135960288,
        "sender_full_name": "oli",
        "timestamp": 1539768393
    },
    {
        "content": "<p>And <code>DefId(4/0:2175 ~ alloc[af40]::vec[0])</code> seems to be what it wants to print?</p>",
        "id": 135960307,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768420
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L293\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L293\">https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L293</a> seems wrong</p>",
        "id": 135960320,
        "sender_full_name": "oli",
        "timestamp": 1539768441
    },
    {
        "content": "<p>we should not try to get the parent of a crate root</p>",
        "id": 135960327,
        "sender_full_name": "oli",
        "timestamp": 1539768468
    },
    {
        "content": "<p>^^</p>",
        "id": 135960375,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768486
    },
    {
        "content": "<p>but what should we do instead?</p>",
        "id": 135960377,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768490
    },
    {
        "content": "<p>something is wrong here... why do you have an instance that points to a module?</p>",
        "id": 135960388,
        "sender_full_name": "oli",
        "timestamp": 1539768540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> the def is <code>Item(DefId(4/1:2606 ~ alloc[af40]::vec[0]::{{impl}}[150]::{{constant}}[0]))</code></p>",
        "id": 135960677,
        "sender_full_name": "RalfJ",
        "timestamp": 1539768906
    },
    {
        "content": "<p>Hm. How did we end up with that other output then?</p>",
        "id": 135961003,
        "sender_full_name": "oli",
        "timestamp": 1539769382
    },
    {
        "content": "<p>Do you have a stacktrace?</p>",
        "id": 135961009,
        "sender_full_name": "oli",
        "timestamp": 1539769393
    },
    {
        "content": "<p>that's from printing it</p>",
        "id": 135961010,
        "sender_full_name": "RalfJ",
        "timestamp": 1539769400
    },
    {
        "content": "<p>no I don't :/ for now I'll just not do the debug printing for the topmost stack frame...^^ this is blocking me debugging stacked borrows so I wanted it to just go away.<br>\nI'll build a 2nd compiler but it'll take a bit.</p>",
        "id": 135961022,
        "sender_full_name": "RalfJ",
        "timestamp": 1539769438
    },
    {
        "content": "<p>It's probably when printing the part the path which corresponds to the <code>vec</code></p>",
        "id": 135961063,
        "sender_full_name": "oli",
        "timestamp": 1539769488
    },
    {
        "content": "<p>well it's walking up the parent relationship, so it might have started anywhere</p>",
        "id": 135961143,
        "sender_full_name": "RalfJ",
        "timestamp": 1539769597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> here's your backtrace:</p>\n<div class=\"codehilite\"><pre><span></span>error: internal compiler error: librustc/util/ppaux.rs:310: finding type for DefId(4/0:2175 ~ alloc[af40]::vec[0]), encountered def-id DefId(4/0:0 ~ alloc[af40]) with no parent\n\nthread &#39;main&#39; panicked at &#39;Box&lt;Any&gt;&#39;, librustc_errors/lib.rs:599:9\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: rustc::util::common::panic_hook\n             at librustc/util/common.rs:51\n   5: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:480\n   6: std::panicking::begin_panic\n             at /home/r/src/rust/rustc.2/src/libstd/panicking.rs:410\n   7: rustc_errors::Handler::bug\n             at librustc_errors/lib.rs:599\n   8: rustc::ty::context::tls::with_opt::{{closure}}\n             at librustc/util/bug.rs:46\n             at librustc/ty/context.rs:2160\n   9: rustc::ty::context::tls::with_context_opt\n             at librustc/ty/context.rs:2097\n  10: rustc::ty::context::tls::with_opt\n             at librustc/ty/context.rs:2160\n  11: rustc::util::bug::opt_span_bug_fmt\n             at librustc/util/bug.rs:42\n  12: rustc::util::bug::bug_fmt\n             at librustc/util/bug.rs:22\n  13: rustc::util::ppaux::PrintContext::parameterized::{{closure}}::{{closure}}\n             at librustc/util/ppaux.rs:310\n  14: rustc::ty::context::tls::with\n             at /home/r/src/rust/rustc.2/src/libcore/option.rs:396\n             at librustc/util/ppaux.rs:309\n             at librustc/ty/context.rs:2152\n             at librustc/ty/context.rs:2106\n             at librustc/ty/context.rs:2097\n             at librustc/ty/context.rs:2106\n             at librustc/ty/context.rs:2152\n  15: rustc::util::ppaux::PrintContext::parameterized\n             at librustc/util/ppaux.rs:273\n  16: rustc::util::ppaux::PrintContext::parameterized\n             at librustc/util/ppaux.rs:264\n  17: rustc::util::ppaux::PrintContext::parameterized\n             at librustc/util/ppaux.rs:264\n  18: rustc::util::ppaux::parameterized\n             at librustc/util/ppaux.rs:571\n  19: &lt;rustc::ty::instance::Instance&lt;&#39;tcx&gt; as core::fmt::Display&gt;::fmt\n             at librustc/ty/instance.rs:120\n  20: core::fmt::write\n             at libcore/fmt/mod.rs:1102\n             at libcore/fmt/mod.rs:1049\n  21: &lt;core::fmt::Arguments&lt;&#39;_&gt; as core::fmt::Debug&gt;::fmt\n             at libcore/fmt/mod.rs:447\n             at libcore/fmt/mod.rs:440\n  22: core::fmt::write\n             at libcore/fmt/mod.rs:1102\n             at libcore/fmt/mod.rs:1049\n  23: std::io::Write::write_fmt\n             at /home/r/src/rust/rustc.2/src/libstd/io/mod.rs:1139\n  24: env_logger::Format::into_boxed_fn::{{closure}}\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.5.12/src/lib.rs:357\n  25: &lt;std::thread::local::LocalKey&lt;T&gt;&gt;::with\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.5.12/src/lib.rs:858\n             at /home/r/src/rust/rustc.2/src/libstd/thread/local.rs:300\n             at /home/r/src/rust/rustc.2/src/libstd/thread/local.rs:254\n  26: &lt;env_logger::Logger as log::Log&gt;::log\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.5.12/src/lib.rs:829\n  27: log::__private_api_log\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.4/src/lib.rs:1232\n  28: &lt;rustc_mir::interpret::eval_context::EvalContext&lt;&#39;a, &#39;mir, &#39;tcx, M&gt;&gt;::push_stack_frame\n             at librustc_mir/interpret/eval_context.rs:499\n  29: rustc_mir::const_eval::eval_body_using_ecx\n             at librustc_mir/const_eval.rs:187\n  30: rustc_mir::const_eval::const_eval_provider\n             at librustc_mir/const_eval.rs:159\n             at librustc_mir/const_eval.rs:559\n  31: rustc::ty::query::__query_compute::const_eval\n             at librustc/ty/query/plumbing.rs:834\n             at librustc/ty/query/plumbing.rs:796\n  32: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors&lt;&#39;tcx&gt; for rustc::ty::query::queries::const_eval&lt;&#39;tcx&gt;&gt;::compute\n             at librustc/ty/query/plumbing.rs:826\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\n             at librustc/dep_graph/graph.rs:342\n  34: rustc::ty::context::tls::with_related_context\n             at librustc/dep_graph/graph.rs:208\n             at librustc/ty/query/plumbing.rs:550\n             at librustc/ty/query/plumbing.rs:208\n             at librustc/ty/context.rs:2022\n             at librustc/ty/context.rs:1961\n             at librustc/ty/context.rs:2021\n             at librustc/ty/query/plumbing.rs:207\n             at librustc/ty/context.rs:2122\n             at librustc/ty/context.rs:2106\n             at librustc/ty/context.rs:2097\n             at librustc/ty/context.rs:2106\n             at librustc/ty/context.rs:2117\n  35: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::force_query_with_job\n             at librustc/ty/query/plumbing.rs:197\n             at librustc/ty/query/plumbing.rs:543\n  36: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::get_query\n             at librustc/ty/query/plumbing.rs:383\n             at librustc/ty/query/plumbing.rs:629\n             at librustc/ty/query/plumbing.rs:640\n  37: &lt;rustc::traits::project::AssociatedTypeNormalizer&lt;&#39;a, &#39;b, &#39;gcx, &#39;tcx&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_const\n             at librustc/ty/query/plumbing.rs:888\n             at librustc/ty/query/plumbing.rs:881\n             at librustc/traits/project.rs:451\n  38: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::super_fold_with\n             at librustc/ty/structural_impls.rs:1186\n             at librustc/ty/structural_impls.rs:855\n  39: &lt;rustc::traits::project::AssociatedTypeNormalizer&lt;&#39;a, &#39;b, &#39;gcx, &#39;tcx&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_ty\n             at librustc/traits/project.rs:367\n  40: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::super_fold_with\n             at librustc/ty/structural_impls.rs:894\n             at librustc/ty/structural_impls.rs:866\n  41: &lt;rustc::traits::project::AssociatedTypeNormalizer&lt;&#39;a, &#39;b, &#39;gcx, &#39;tcx&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_ty\n             at librustc/traits/project.rs:367\n  42: &lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter\n             at librustc/ty/structural_impls.rs:894\n             at librustc/ty/subst.rs:146\n             at librustc/ty/fold.rs:58\n             at librustc/ty/subst.rs:310\n             at /home/r/src/rust/rustc.2/src/libcore/ops/function.rs:286\n             at /home/r/src/rust/rustc.2/src/libcore/option.rs:424\n             at /home/r/src/rust/rustc.2/src/libcore/iter/mod.rs:1394\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs:1238\n             at /home/r/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs:1222\n  43: rustc::ty::fold::TypeFoldable::fold_with\n             at /home/r/src/rust/rustc.2/src/libcore/iter/iterator.rs:1415\n             at librustc/ty/subst.rs:310\n             at librustc/ty/fold.rs:58\n  44: rustc::traits::project::normalize_with_depth\n             at librustc/macros.rs:327\n             at librustc/ty/fold.rs:58\n             at librustc/traits/project.rs:345\n             at librustc/traits/project.rs:304\n  45: rustc::traits::select::SelectionContext::match_impl\n             at librustc/traits/select.rs:3504\n  46: rustc::infer::InferCtxt::probe\n             at librustc/traits/select.rs:1981\n             at librustc/traits/select.rs:556\n             at librustc/infer/mod.rs:854\n  47: rustc::ty::trait_def::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::for_each_relevant_impl\n             at librustc/traits/select.rs:556\n             at librustc/traits/select.rs:1980\n             at librustc/ty/trait_def.rs:137\n  48: rustc::traits::select::SelectionContext::assemble_candidates_from_impls\n             at librustc/traits/select.rs:1976\n  49: rustc::traits::select::SelectionContext::assemble_candidates\n             at librustc/traits/select.rs:1636\n  50: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\n             at librustc/traits/select.rs:1326\n</pre></div>",
        "id": 135964824,
        "sender_full_name": "RalfJ",
        "timestamp": 1539774832
    },
    {
        "content": "<p>that kind of makes sense... starting at <a href=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L571\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L571\">https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L571</a> we walk up 2 levels through <a href=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L264\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L264\">https://github.com/rust-lang/rust/blob/9d7f0da367bae7587ed0ef69bd4384392099fc9e/src/librustc/util/ppaux.rs#L264</a>, and then we are at the <code>vec</code> module</p>",
        "id": 135964976,
        "sender_full_name": "RalfJ",
        "timestamp": 1539775025
    },
    {
        "content": "<blockquote>\n<p>Changing the levels by their modules is too large grained</p>\n</blockquote>\n<p>Can't you make up your own \"modules\" for logging?</p>",
        "id": 135972211,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539782555
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>debug!(target: &quot;statements&quot;, &quot;New position: x: {}, y: {}&quot;, pos.x, pos.y);\n</pre></div>",
        "id": 135972244,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539782617
    },
    {
        "content": "<p>huh?</p>",
        "id": 135972650,
        "sender_full_name": "oli",
        "timestamp": 1539782983
    },
    {
        "content": "<p>I didn't know that</p>",
        "id": 135972652,
        "sender_full_name": "oli",
        "timestamp": 1539782986
    },
    {
        "content": "<p>ooh, neat, I also did not know that</p>",
        "id": 135973018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539783276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> is that then scoped inside the module, or is this the full target name?</p>",
        "id": 135973357,
        "sender_full_name": "RalfJ",
        "timestamp": 1539783636
    },
    {
        "content": "<p>IIRC it's the full name, but I'm not 100% sure</p>",
        "id": 135973443,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539783730
    },
    {
        "content": "<p>This is in the 3rd paragraph of <a href=\"https://docs.rs/log/0.4.5/log/index.html\" target=\"_blank\" title=\"https://docs.rs/log/0.4.5/log/index.html\">the docs</a>, y'all <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span> </p>\n<blockquote>\n<p>A log request consists of a <em>target</em>, a <em>level</em>, and a <em>body</em>. A target is a string which defaults to the module path of the location of the log request, though that default may be overridden. Logger implementations typically use the target to filter requests based on some user configuration.</p>\n</blockquote>",
        "id": 135973527,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539783828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I cant use this excuse any more, but for a long while I didnt have any idea which crate these macros are even coming from^^</p>",
        "id": 135973805,
        "sender_full_name": "RalfJ",
        "timestamp": 1539784066
    },
    {
        "content": "<p>it's not like that's clear, when you just look at some rustc code</p>",
        "id": 135973808,
        "sender_full_name": "RalfJ",
        "timestamp": 1539784074
    },
    {
        "content": "<p>I guess that's a subtle benefit of making macros imported like the rest of the code, should be easier to track!</p>",
        "id": 135973995,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539784228
    },
    {
        "content": "<p>who reads docs</p>",
        "id": 135974037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784298
    },
    {
        "content": "<p>yeah, I've been enjoying the new \"friendly absolute paths\" so much, and I now find I always write <code>log::debug!(..)</code></p>",
        "id": 135974084,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784324
    },
    {
        "content": "<p>what I <em>really</em> want are \"indentation levels\" -- does \"stock <code>log</code>\" support <em>those</em> yet?</p>",
        "id": 135974094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784346
    },
    {
        "content": "<p>I was looking at slog recently</p>",
        "id": 135974096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784350
    },
    {
        "content": "<p>it..might be nice? I can't 100% tell. I like the idea of structured data</p>",
        "id": 135974103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784361
    },
    {
        "content": "<p>My usual excuse is \"I've been using <em>X</em> crate from before they had docs\", that earns extra street cred.</p>",
        "id": 135974111,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539784369
    },
    {
        "content": "<p>Structured logs are wonderful, especially when you have multiple threads and a big system (I used it to debug some concurrency issues in a Rails app recently).</p>\n<p>The big problem is that you really want a tool to help view them in the most effective manner.</p>",
        "id": 135974214,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539784478
    },
    {
        "content": "<p>funny that you say that, miri actually has some code to increase and decrease indentation levels when stack frames come and go, but I think it doesnt do anything any more since the move into rustc</p>",
        "id": 135974218,
        "sender_full_name": "RalfJ",
        "timestamp": 1539784481
    },
    {
        "content": "<p>and it was useless before, because the indentation was <em>after</em> the variable-length module names, so it wasnt actually visible on the screen</p>",
        "id": 135974238,
        "sender_full_name": "RalfJ",
        "timestamp": 1539784500
    },
    {
        "content": "<p>e.g. I want less to have a button for \"show all log lines from the same thread the cursor is on\"</p>",
        "id": 135974271,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539784530
    },
    {
        "content": "<blockquote>\n<p>My usual excuse is \"I've been using <em>X</em> crate from before they had docs\", that earns extra street cred.</p>\n</blockquote>\n<p>I think in this case \"I've been using <code>debug!</code> since it was a keyword\" would apply</p>",
        "id": 135974361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784628
    },
    {
        "content": "<p>oh btw I just discovered the most <strong>amazing</strong> thing</p>",
        "id": 135974367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784640
    },
    {
        "content": "<p>I've yet to use it though :)</p>",
        "id": 135974368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784643
    },
    {
        "content": "<p>if you run <code>rr replay -a -M</code> then every stdout/err output line is stamped with a tid and an rr event number; then you can do <code>rr replay -g</code> to jump to that event number</p>",
        "id": 135974376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784663
    },
    {
        "content": "<p>I've been dying to try this to get a \"stamped log\"</p>",
        "id": 135974378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784668
    },
    {
        "content": "<p>although debugging the compiler is .. iffy</p>",
        "id": 135974423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539784685
    },
    {
        "content": "<p>I wrote the <code>log_settings</code> crate for logging with indentation levels</p>",
        "id": 135977127,
        "sender_full_name": "oli",
        "timestamp": 1539787587
    },
    {
        "content": "<p>works together with the regular <code>log</code> crate without any effort in crates that don't want/need/know about it</p>",
        "id": 135977160,
        "sender_full_name": "oli",
        "timestamp": 1539787632
    },
    {
        "content": "<p>oh, I had no idea it was an add-on crate^^</p>",
        "id": 135977928,
        "sender_full_name": "RalfJ",
        "timestamp": 1539788369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> any thoughts on the backtrace at <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/subject/miri-debug-output/near/135964824\" title=\"#narrow/stream/146212-t-compiler.2Fconst-eval/subject/miri-debug-output/near/135964824\">https://rust-lang.zulipchat.com/#narrow/stream/146212-t-compiler.2Fconst-eval/subject/miri-debug-output/near/135964824</a> ?</p>",
        "id": 135977947,
        "sender_full_name": "RalfJ",
        "timestamp": 1539788401
    },
    {
        "content": "<p>Yea, that code is super weird. There's a condition basically saying \"if you have a printable name, use that, else recurse to the parent\" <a href=\"https://github.com/rust-lang/rust/blob/1dceaddfbe163e2d916c904b98923342730ba970/src/librustc/util/ppaux.rs#L258\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/1dceaddfbe163e2d916c904b98923342730ba970/src/librustc/util/ppaux.rs#L258\">https://github.com/rust-lang/rust/blob/1dceaddfbe163e2d916c904b98923342730ba970/src/librustc/util/ppaux.rs#L258</a></p>",
        "id": 135978616,
        "sender_full_name": "oli",
        "timestamp": 1539788941
    },
    {
        "content": "<p>yes</p>",
        "id": 135978629,
        "sender_full_name": "RalfJ",
        "timestamp": 1539788958
    },
    {
        "content": "<p>no idea why that makes sense</p>",
        "id": 135978630,
        "sender_full_name": "RalfJ",
        "timestamp": 1539788962
    },
    {
        "content": "<p>but in case of constants it seemingly doesnt^^</p>",
        "id": 135978634,
        "sender_full_name": "RalfJ",
        "timestamp": 1539788969
    },
    {
        "content": "<p>maybe it's an associated constant?</p>",
        "id": 135978720,
        "sender_full_name": "oli",
        "timestamp": 1539789036
    },
    {
        "content": "<p>well, its value seems to be 25</p>",
        "id": 135978819,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789141
    },
    {
        "content": "<p>can't see any 25 in that module though...</p>",
        "id": 135978876,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789236
    },
    {
        "content": "<p>unless it's the <code>array_impls!</code></p>",
        "id": 135978945,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789279
    },
    {
        "content": "<p>there are a lot of these constants being computed</p>",
        "id": 135979016,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789360
    },
    {
        "content": "<p>not sure why that only happens when the <code>vec!</code> macro is used though?</p>",
        "id": 135979069,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789378
    },
    {
        "content": "<p>yeah, there are 66 constants like this</p>",
        "id": 135979216,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789582
    },
    {
        "content": "<p>that matches the impls for sizes <code>0..=32</code>, 2 impls for each size</p>",
        "id": 135979233,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789599
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> it's not an assoc const, it's... an array length?</p>",
        "id": 135979300,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789622
    },
    {
        "content": "<p>O_o well... that's probably it. Noone ever tried to print the path of an array length...</p>",
        "id": 135979346,
        "sender_full_name": "oli",
        "timestamp": 1539789697
    },
    {
        "content": "<p>Since they have no name, they go into the <code>None</code> arm, which is wrong</p>",
        "id": 135979390,
        "sender_full_name": "oli",
        "timestamp": 1539789725
    },
    {
        "content": "<p>we should invent a name like <code>LEN</code> for it</p>",
        "id": 135979394,
        "sender_full_name": "oli",
        "timestamp": 1539789734
    },
    {
        "content": "<p>where would that happen?</p>",
        "id": 135979418,
        "sender_full_name": "RalfJ",
        "timestamp": 1539789770
    },
    {
        "content": "<p>I'd assume in <code>get_opt_name</code></p>",
        "id": 135979502,
        "sender_full_name": "oli",
        "timestamp": 1539789888
    },
    {
        "content": "<p>but I haven't checked</p>",
        "id": 135979508,
        "sender_full_name": "oli",
        "timestamp": 1539789897
    },
    {
        "content": "<p>I guess that would be <code>AnonConst</code></p>",
        "id": 135979778,
        "sender_full_name": "RalfJ",
        "timestamp": 1539790196
    },
    {
        "content": "<p>but not all <code>AnonConst</code> might be array lengths?</p>",
        "id": 135979781,
        "sender_full_name": "RalfJ",
        "timestamp": 1539790201
    },
    {
        "content": "<blockquote>\n<p>I wrote the <code>log_settings</code> crate for logging with indentation levels</p>\n</blockquote>\n<p>nice, I will take a look</p>",
        "id": 135979857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539790222
    }
]