[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>. Continuing from <a href=\"https://github.com/rust-lang/rust/pull/66654#issuecomment-559253377\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66654#issuecomment-559253377\">this comment</a>, don't I want to check the <code>LocalInfo</code> for the local in <code>&amp;*_2</code> to see if it is a pointer to a static?</p>",
        "id": 182060516,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574890453
    },
    {
        "content": "<p>There's no <code>Constant</code> involved in <code>Rvalue::Ref</code> to call <code>check_static_ptr</code> on</p>",
        "id": 182060569,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574890515
    },
    {
        "content": "<p>Please don't do that except to change diagnostic messages (yes, there are cases where I have done that, but please don't add more).</p>",
        "id": 182060572,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574890518
    },
    {
        "content": "<p>Is there a reason that this is different to</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">X</span>: <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182060696,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574890669
    },
    {
        "content": "<p>Well I understand that it's a hack, but is there an alternative? I suppose we could try to justify not const-checking references to a <code>static</code> at all.  It's good that the <code>static mut</code> case is still getting const-checked, but I'm not actually sure why <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span>.</p>",
        "id": 182060773,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574890715
    },
    {
        "content": "<p>If <code>3</code> was instead <code>Cell::new(3)</code> it would be different.</p>",
        "id": 182060994,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574890888
    },
    {
        "content": "<p>I guess that you could move the <code>is_mutating_use</code> check up in <code>visit_projection_elem</code> in <code>validation.rs</code></p>",
        "id": 182061065,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574890952
    },
    {
        "content": "<p>It results in extras errors in quite a few tests though.</p>",
        "id": 182061093,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574891000
    },
    {
        "content": "<p>Is there a reason that the type of the pointer to an AllocId for a <code>static</code> is a reference and not a raw pointer?</p>",
        "id": 182061412,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891335
    },
    {
        "content": "<p>That's the reason we still const-check static muts. Accesses to them go through a <code>*mut</code>.</p>",
        "id": 182061460,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891381
    },
    {
        "content": "<p>It's a reference so that it can be safety checked correctly.</p>",
        "id": 182061572,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574891457
    },
    {
        "content": "<p>(without special casing)</p>",
        "id": 182061587,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574891469
    },
    {
        "content": "<p>I guess because access to a <code>static mut</code> must always be in unsafe, and we do unsafety checking on the MIR</p>",
        "id": 182061592,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891472
    },
    {
        "content": "<p>I think we need to replicate the code you added that checks for <code>LocalInfo::StaticRef</code> in <code>visit_projection_elem</code> in <code>visit_rvalue</code> since we discard the <code>Deref</code> projection for things that look like reborrows.</p>",
        "id": 182061810,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891660
    },
    {
        "content": "<p>To avoid changing behavior</p>",
        "id": 182061825,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891672
    },
    {
        "content": "<p>OK</p>",
        "id": 182061838,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574891698
    },
    {
        "content": "<p>Once again, I understand you want this to go away in the long term, but not having it changes behavior now that we don't rely on <code>HasInteriorMut</code>.</p>",
        "id": 182061854,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891716
    },
    {
        "content": "<p>I'll have a talk with <span class=\"user-group-mention\" data-user-group-id=\"1916\">@WG-const-eval</span> about whether we need to const-check accesses to <code>static</code>s at all, in which case we may be able to remove it.</p>",
        "id": 182061919,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1574891765
    }
]