[
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>, I wanted to better understand why do we evaluate required_consts in 2 different ways in different parts of the code</p>",
        "id": 239666687,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621548493
    },
    {
        "content": "<p>we do <a href=\"https://github.com/rust-lang/rust/blob/9a3214e9be41a5d50ae6ba9bb8422dcc2cb10473/compiler/rustc_codegen_ssa/src/mir/mod.rs#L192\">https://github.com/rust-lang/rust/blob/9a3214e9be41a5d50ae6ba9bb8422dcc2cb10473/compiler/rustc_codegen_ssa/src/mir/mod.rs#L192</a> and <a href=\"https://github.com/rust-lang/rust/blob/9a3214e9be41a5d50ae6ba9bb8422dcc2cb10473/compiler/rustc_mir/src/interpret/eval_context.rs#L692\">https://github.com/rust-lang/rust/blob/9a3214e9be41a5d50ae6ba9bb8422dcc2cb10473/compiler/rustc_mir/src/interpret/eval_context.rs#L692</a></p>",
        "id": 239666720,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621548516
    },
    {
        "content": "<p>and I'm probably the one that implemented that but I don't remember anymore, lol</p>",
        "id": 239666778,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621548553
    },
    {
        "content": "<p>I meant, besides what the comments say that in one case it could error and in the other it can't, I'm trying to understand how much those things diverge and if they should really diverge</p>",
        "id": 239666864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621548607
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"189540\" href=\"/#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/evaluate.20require_consts\">#t-compiler/wg-mir-opt &gt; evaluate require_consts</a> by <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span></p>",
        "id": 239672853,
        "sender_full_name": "Notification Bot",
        "timestamp": 1621552061
    },
    {
        "content": "<p>well the second one does monomorphization, but I guess I'd expect the first one doing something similar to what's done to the first one in regard <code>Unevaluated</code> consts?</p>",
        "id": 239673349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621552314
    },
    {
        "content": "<p>All constants in <code>required_consts</code> are <code>Unevaluated</code> I think. It lists all constants that are required to succeed evaluation after monomorphization. The code in cg_ssa checks this during codegen. The code in rustc_mir checks this during const eval.</p>",
        "id": 239724265,
        "sender_full_name": "bjorn3",
        "timestamp": 1621590715
    },
    {
        "content": "<p>yeah, all are <code>Unevaluated</code>, I was wondering mainly about why those evaluations differ that much but <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> told me that they eval for different representation which make sense :)</p>",
        "id": 239771119,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1621611792
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/require_consts.20evaluation.20on.20mir.20vs.20codegen/near/239666864\">said</a>:</p>\n<blockquote>\n<p>I meant, besides what the comments say that in one case it could error and in the other it can't, I'm trying to understand how much those things diverge and if they should really diverge</p>\n</blockquote>\n<p>it can error in both cases though...</p>",
        "id": 239867617,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684261
    },
    {
        "content": "<p>but yeah the representation is the main difference... though if you follow the method chains a bit they should bottom out at the same thing</p>",
        "id": 239867638,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684303
    },
    {
        "content": "<p>miri and codegen both have helper functions to evaluate consts, called <code>mir_const_to_op</code> and <code>eval_mir_constant</code> respectively</p>",
        "id": 239867681,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684330
    },
    {
        "content": "<p>hm, actually they don't -- Miri/CTFE calls <code>eval_to_allocation</code> but codegen calls <code>eval_to_const_value_raw</code></p>",
        "id": 239867803,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684485
    },
    {
        "content": "<p>Miri/CTFE could go through <code>eval_to_const_value_raw</code> I guess but the other path was easier^^</p>",
        "id": 239867811,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684503
    },
    {
        "content": "<p>for codegen, <code>eval_to_const_value_raw</code> is what you want so that you dont end up creating allocations for literals like <code>42u32</code></p>",
        "id": 239867829,
        "sender_full_name": "RalfJ",
        "timestamp": 1621684517
    },
    {
        "content": "<p>I see :)</p>",
        "id": 240660222,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1622235768
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/require_consts.20evaluation.20on.20mir.20vs.20codegen/near/239867811\">said</a>:</p>\n<blockquote>\n<p>Miri/CTFE could go through <code>eval_to_const_value_raw</code> I guess but the other path was easier^^</p>\n</blockquote>\n<p>are you suggesting to try to make this change?</p>",
        "id": 240660240,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1622235785
    },
    {
        "content": "<p>I'm honestly not sure of all the code flows here currently (it's a bit of a mess), but I suggest we wait until after the valtree change before cleaning that up</p>",
        "id": 240695442,
        "sender_full_name": "RalfJ",
        "timestamp": 1622284297
    },
    {
        "content": "<p>what/where is the valtree change?</p>",
        "id": 240699864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1622291446
    },
    {
        "content": "<p>some older notes on valtrees: <a href=\"https://hackmd.io/Qvrj_eOFTkCHZrhJ7f1ItA\">https://hackmd.io/Qvrj_eOFTkCHZrhJ7f1ItA</a></p>",
        "id": 240700599,
        "sender_full_name": "RalfJ",
        "timestamp": 1622292522
    },
    {
        "content": "<p>oli's latest PR: <a href=\"https://github.com/rust-lang/rust/pull/83234\">https://github.com/rust-lang/rust/pull/83234</a></p>",
        "id": 240700604,
        "sender_full_name": "RalfJ",
        "timestamp": 1622292535
    }
]