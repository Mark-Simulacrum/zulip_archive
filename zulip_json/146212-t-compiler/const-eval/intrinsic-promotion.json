[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  there's now <a href=\"https://github.com/rust-lang/rust/pull/61493\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61493\">https://github.com/rust-lang/rust/pull/61493</a></p>",
        "id": 167208755,
        "sender_full_name": "oli",
        "timestamp": 1559580359
    },
    {
        "content": "<p>Fyi, I will rebase my pr today and address things that you've commented over. <a href=\"https://github.com/rust-lang/rust/pull/61835\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61835\">https://github.com/rust-lang/rust/pull/61835</a></p>",
        "id": 168287420,
        "sender_full_name": "vertexclique",
        "timestamp": 1560754968
    },
    {
        "content": "<p>Hi all, I will get back to this PR asap. (if there is no problem blocking it)</p>",
        "id": 174348601,
        "sender_full_name": "vertexclique",
        "timestamp": 1566986806
    },
    {
        "content": "<p>cool</p>",
        "id": 174351133,
        "sender_full_name": "oli",
        "timestamp": 1566989684
    },
    {
        "content": "<p>note that a bunch of stuff changed in the background and is changing (there are a few open PRs)</p>",
        "id": 174351137,
        "sender_full_name": "oli",
        "timestamp": 1566989698
    },
    {
        "content": "<p>so doing it in the smallest possible steps would be good to not cause much churn</p>",
        "id": 174351151,
        "sender_full_name": "oli",
        "timestamp": 1566989717
    },
    {
        "content": "<p>Can somebody explain to me about \"promotion\" and \"evaluability\" in this context? If I understand correctly, promotion is enabling/disabling evaluability for specific function(in this context's case some instrinsics) in <code>const</code> context when <code>const</code> declaration happens. Is it correct? What is more correct? I am lost in terms.</p>",
        "id": 174859127,
        "sender_full_name": "vertexclique",
        "timestamp": 1567583513
    },
    {
        "content": "<p>Promotion is generating an unnameable static from runtime code</p>",
        "id": 174864296,
        "sender_full_name": "oli",
        "timestamp": 1567588331
    },
    {
        "content": "<p>Evaluability is whether some piece of code can be processed by const eval</p>",
        "id": 174864333,
        "sender_full_name": "oli",
        "timestamp": 1567588387
    },
    {
        "content": "<p>Promotion requires evaluability but is much stronger</p>",
        "id": 174864345,
        "sender_full_name": "oli",
        "timestamp": 1567588410
    },
    {
        "content": "<p>Intrinsics should never be promotable, but can be evaluable</p>",
        "id": 174864367,
        "sender_full_name": "oli",
        "timestamp": 1567588437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223879\">@vertexclique</span> also see <a href=\"https://github.com/rust-rfcs/const-eval/\" target=\"_blank\" title=\"https://github.com/rust-rfcs/const-eval/\">https://github.com/rust-rfcs/const-eval/</a></p>",
        "id": 175747609,
        "sender_full_name": "RalfJ",
        "timestamp": 1568551965
    },
    {
        "content": "<p>but the documents there are still being worked on</p>",
        "id": 175747610,
        "sender_full_name": "RalfJ",
        "timestamp": 1568551971
    },
    {
        "content": "<p>in particular we are <a href=\"https://github.com/rust-rfcs/const-eval/pull/27#issuecomment-526082204\" target=\"_blank\" title=\"https://github.com/rust-rfcs/const-eval/pull/27#issuecomment-526082204\">looking for some terminology</a></p>",
        "id": 175747618,
        "sender_full_name": "RalfJ",
        "timestamp": 1568551992
    },
    {
        "content": "<p>and I got no feedback at all on that my proposal there :/<br>\n<span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> any comments?</p>",
        "id": 175747620,
        "sender_full_name": "RalfJ",
        "timestamp": 1568552005
    },
    {
        "content": "<p>I think I need to take a look at this change and refactor things again?<br>\n<a href=\"https://github.com/rust-lang/rust/pull/64683\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64683\">https://github.com/rust-lang/rust/pull/64683</a></p>",
        "id": 176348808,
        "sender_full_name": "vertexclique",
        "timestamp": 1569226928
    },
    {
        "content": "<p>Should I wait for the merge or rebase later?</p>",
        "id": 176348833,
        "sender_full_name": "vertexclique",
        "timestamp": 1569226955
    },
    {
        "content": "<p>That PR is blocked on your changes, so... :D</p>",
        "id": 176441476,
        "sender_full_name": "oli",
        "timestamp": 1569312706
    },
    {
        "content": "<p>OOF my bad. <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 176443568,
        "sender_full_name": "vertexclique",
        "timestamp": 1569314772
    },
    {
        "content": "<p>I have reopened the PR. Solved conflicts.</p>",
        "id": 176450819,
        "sender_full_name": "vertexclique",
        "timestamp": 1569321179
    },
    {
        "content": "<p>Last time const_transmute feature gate was ignored at the caller site.</p>",
        "id": 176450857,
        "sender_full_name": "vertexclique",
        "timestamp": 1569321229
    },
    {
        "content": "<p>I don't know how to fix that rn. I am adding the tests.</p>",
        "id": 176450905,
        "sender_full_name": "vertexclique",
        "timestamp": 1569321251
    },
    {
        "content": "<p>I am at work btw. Will look at your comments <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 176469741,
        "sender_full_name": "vertexclique",
        "timestamp": 1569335875
    },
    {
        "content": "<p>no pressure. That's what we have github for, async communication</p>",
        "id": 176470655,
        "sender_full_name": "oli",
        "timestamp": 1569336413
    },
    {
        "content": "<p>I have a problem with <code>const_transmute</code>. I have removed that feature from active. Should I move it to removed? How I can disable it because</p>\n<div class=\"codehilite\"><pre><span></span>#[rustc_const_unstable(feature = &quot;const_transmute&quot;)]\n</pre></div>\n\n\n<p>is creating problem on compilation and makes const_transmute tests fail.<br>\nLong story short  I want to reenable const_transmute gate that we had disabled before.</p>",
        "id": 176824400,
        "sender_full_name": "vertexclique",
        "timestamp": 1569673763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> any idea on this?</p>",
        "id": 176824402,
        "sender_full_name": "vertexclique",
        "timestamp": 1569673788
    },
    {
        "content": "<p>you should remove it entirely I think? The <code>rustc_const_unstable</code> will generate its own feature gate names</p>",
        "id": 176824453,
        "sender_full_name": "oli",
        "timestamp": 1569673845
    },
    {
        "content": "<blockquote>\n<p>is creating problem on compilation and makes const_transmute tests fail.</p>\n</blockquote>\n<p>Do you have the errors at hand?</p>",
        "id": 176824462,
        "sender_full_name": "oli",
        "timestamp": 1569673870
    },
    {
        "content": "<p>recompiling now I will write here.</p>",
        "id": 176824468,
        "sender_full_name": "vertexclique",
        "timestamp": 1569673895
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>thread &#39;rustc&#39; panicked at &#39;assertion failed: !self.tcx.is_const_fn(def_id)&#39;, src/librustc_mir/transform/qualify_consts.rs:1286:29\nstack backtrace:\n</pre></div>\n\n\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 176825246,
        "sender_full_name": "vertexclique",
        "timestamp": 1569675324
    },
    {
        "content": "<p>this is caused by early return to not check that const fn for intrinsics</p>",
        "id": 176825317,
        "sender_full_name": "vertexclique",
        "timestamp": 1569675459
    },
    {
        "content": "<p>oh, just swap the condition</p>",
        "id": 176825490,
        "sender_full_name": "oli",
        "timestamp": 1569675730
    },
    {
        "content": "<p>we want to check now that the intrinsic is \"const fn\"</p>",
        "id": 176825500,
        "sender_full_name": "oli",
        "timestamp": 1569675758
    },
    {
        "content": "<p>transmute tests are getting compiled. sigh</p>",
        "id": 176827782,
        "sender_full_name": "vertexclique",
        "timestamp": 1569680155
    },
    {
        "content": "<p>Also changed my local test to what <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> commented.</p>",
        "id": 176827826,
        "sender_full_name": "vertexclique",
        "timestamp": 1569680185
    },
    {
        "content": "<p>uh</p>",
        "id": 176827894,
        "sender_full_name": "oli",
        "timestamp": 1569680312
    },
    {
        "content": "<p>sorry</p>",
        "id": 176827896,
        "sender_full_name": "oli",
        "timestamp": 1569680313
    },
    {
        "content": "<p>I should have been clearer</p>",
        "id": 176827897,
        "sender_full_name": "oli",
        "timestamp": 1569680318
    },
    {
        "content": "<p>swap the assert!</p>",
        "id": 176827899,
        "sender_full_name": "oli",
        "timestamp": 1569680323
    },
    {
        "content": "<p>I want the assert to trigger if we call an intrinsic that is not in the list</p>",
        "id": 176827907,
        "sender_full_name": "oli",
        "timestamp": 1569680345
    },
    {
        "content": "<p>I've negated the assert before but it gives ice.</p>",
        "id": 176829116,
        "sender_full_name": "vertexclique",
        "timestamp": 1569682540
    },
    {
        "content": "<p>I've tried again. It gave ice again. Seems like there is a usage for both transmute and other intrinsics in the codebase.</p>",
        "id": 176829164,
        "sender_full_name": "vertexclique",
        "timestamp": 1569682613
    },
    {
        "content": "<p>you can print more info on the assert</p>",
        "id": 176829174,
        "sender_full_name": "oli",
        "timestamp": 1569682638
    },
    {
        "content": "<p>e.g. <code>tcx.item_name(def_id)</code> or so</p>",
        "id": 176829179,
        "sender_full_name": "oli",
        "timestamp": 1569682652
    },
    {
        "content": "<p><code>assert!(condition, \"{}\", tcx.item_name(def_id))</code></p>",
        "id": 176829225,
        "sender_full_name": "oli",
        "timestamp": 1569682690
    },
    {
        "content": "<p>oh ok so we expect it. _gets enlightened_</p>",
        "id": 176829227,
        "sender_full_name": "vertexclique",
        "timestamp": 1569682697
    },
    {
        "content": "<p>this way you see which intrinsic it is and can add it to the list</p>",
        "id": 176829228,
        "sender_full_name": "oli",
        "timestamp": 1569682707
    },
    {
        "content": "<p>ok thanks let me check.</p>",
        "id": 176829234,
        "sender_full_name": "vertexclique",
        "timestamp": 1569682742
    },
    {
        "content": "<p>we want <code>is_const_fn</code> to return true for whitelisted intrinsics, so the assert should trigger, but I don't know why it's triggering for you</p>",
        "id": 176829239,
        "sender_full_name": "oli",
        "timestamp": 1569682753
    },
    {
        "content": "<p>It is <code>mem::size_of </code> but it is in platform intrinsics list.</p>",
        "id": 176829688,
        "sender_full_name": "vertexclique",
        "timestamp": 1569683523
    },
    {
        "content": "<p>huh?</p>",
        "id": 176829814,
        "sender_full_name": "oli",
        "timestamp": 1569683787
    },
    {
        "content": "<p>it should be a normal intrinsic</p>",
        "id": 176829822,
        "sender_full_name": "oli",
        "timestamp": 1569683805
    },
    {
        "content": "<p>can you push the full code so I can have a look?</p>",
        "id": 176829830,
        "sender_full_name": "oli",
        "timestamp": 1569683832
    },
    {
        "content": "<p>recompiling now I got you wrong when you said swap the condition. I negated the <code>is_const_intrinsic</code>, you already have commented on that.</p>",
        "id": 176829839,
        "sender_full_name": "vertexclique",
        "timestamp": 1569683860
    },
    {
        "content": "<p>yes in a sec.</p>",
        "id": 176829845,
        "sender_full_name": "vertexclique",
        "timestamp": 1569683877
    },
    {
        "content": "<p>pushed. btw even match arm has RustIntrinsic pattern I got: <code>intrinsic 'maxnumf32' is not in whitelist</code>.</p>",
        "id": 176831103,
        "sender_full_name": "vertexclique",
        "timestamp": 1569686159
    },
    {
        "content": "<p>+ maxnumf32/f64 and more aren't in const intrinsics whitelist</p>",
        "id": 176831442,
        "sender_full_name": "vertexclique",
        "timestamp": 1569686781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I might have interpreted you wrong again. scratching my head here.</p>",
        "id": 176839546,
        "sender_full_name": "vertexclique",
        "timestamp": 1569701178
    },
    {
        "content": "<p>had no time to debug what is happening in the branch.</p>",
        "id": 177461057,
        "sender_full_name": "vertexclique",
        "timestamp": 1570367817
    }
]