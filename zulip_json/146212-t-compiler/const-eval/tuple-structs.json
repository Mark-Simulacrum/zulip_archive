[
    {
        "content": "<p>Is there any reason why tuple struct constructors aren't treated as <code>const fn</code>s or was this overlooked?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">B</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">R</span>: <span class=\"kt\">i32</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*&amp;</span><span class=\"n\">f</span><span class=\"p\">)();</span><span class=\"w\"> </span><span class=\"c1\">// OK</span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">S</span>: <span class=\"nc\">B</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*&amp;</span><span class=\"n\">B</span><span class=\"p\">)();</span><span class=\"w\"> </span><span class=\"c1\">// ERROR</span>\n</pre></div>",
        "id": 136071165,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1539896110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> seems reasonable that we could make them <code>const fn</code>, I think. What about enum constructors?</p>",
        "id": 136092102,
        "sender_full_name": "RalfJ",
        "timestamp": 1539929665
    },
    {
        "content": "<p>huh... that seems like a bug, that should definitely work, considering that <code>B()</code> works. I think the issue is that our function call code explicitly checks for calls to the tuple struct constructor instead of just checking the zst type. <code>const T: B = (B, B).1();</code> also does not work</p>",
        "id": 136094328,
        "sender_full_name": "oli",
        "timestamp": 1539933408
    }
]