[
    {
        "content": "<p>The issue tracker always leads me to believe that wg-const-eval has a mountain of work on their plate (assuming that this also includes const generics?) - is there anywhere I can jump in and help?</p>",
        "id": 209986487,
        "sender_full_name": "davidtwco",
        "timestamp": 1600079109
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1916\">@WG-const-eval</span></p>",
        "id": 209986495,
        "sender_full_name": "davidtwco",
        "timestamp": 1600079122
    },
    {
        "content": "<p>Depends on your experience level. In GitHub, I'd filter issues by one <code>A-*</code> label, and one <code>E-*</code> label.</p>",
        "id": 209989559,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1600081275
    },
    {
        "content": "<p>Yes, const-eval includes const generics and also const fn. <a href=\"https://github.com/rust-lang/rust/labels/A-const-eval\">https://github.com/rust-lang/rust/labels/A-const-eval</a><br>\nOne thing that's usually easy to do regardless of level of experience: Look for tests to add.<br>\nThere are also const generic diagnostics issues which should be easier to handle.</p>",
        "id": 209992760,
        "sender_full_name": "Jubilee",
        "timestamp": 1600083495
    },
    {
        "content": "<p>I've got a reasonable amount of experience and have contributed before - I wouldn't say I'm new.</p>\n<p>I often find that when looking at ICEs that if you have a background in that area of the compiler or the ongoing work that there ends up being a few underlying problems and that those are the things that the working group are focusing on - if there's something like that which a member of the working group could point me towards, that's what I'm looking for.</p>",
        "id": 209996507,
        "sender_full_name": "davidtwco",
        "timestamp": 1600086224
    },
    {
        "content": "<p>aaah~<br>\nWell this is what lcnr's working on, ish. <a href=\"https://github.com/rust-lang/compiler-team/issues/340\">https://github.com/rust-lang/compiler-team/issues/340</a><br>\nand const wf is part of <a href=\"https://github.com/rust-lang/rust/labels/F-min_const_generics\">https://github.com/rust-lang/rust/labels/F-min_const_generics</a></p>",
        "id": 209996812,
        "sender_full_name": "Jubilee",
        "timestamp": 1600086436
    },
    {
        "content": "<p>which is, well, why I did say</p>\n<blockquote>\n<p>add tests, a lot of tests</p>\n</blockquote>\n<p>but I'm sure lcnr will have more guidance eventually.</p>",
        "id": 209997365,
        "sender_full_name": "Jubilee",
        "timestamp": 1600086754
    },
    {
        "content": "<p>Oh, relevant: <a href=\"https://github.com/rust-lang/rust/labels/const-generics-blocking\">https://github.com/rust-lang/rust/labels/const-generics-blocking</a></p>",
        "id": 210026587,
        "sender_full_name": "Jubilee",
        "timestamp": 1600099368
    },
    {
        "content": "<p>const wf is not part of <code>min_const_generics</code></p>",
        "id": 210026615,
        "sender_full_name": "lcnr",
        "timestamp": 1600099380
    },
    {
        "content": "<p>that's something which is probably still far into the future</p>",
        "id": 210026658,
        "sender_full_name": "lcnr",
        "timestamp": 1600099392
    },
    {
        "content": "<p>oh OK, I got confused by the listed items on the post.</p>",
        "id": 210026691,
        "sender_full_name": "Jubilee",
        "timestamp": 1600099404
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74878\">https://github.com/rust-lang/rust/issues/74878</a> </p>\n<blockquote>\n<p>const wf (generic params in associated consts)</p>\n</blockquote>\n<p>The person who posted this certainly listed it under... Hey wait... <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 210026852,
        "sender_full_name": "Jubilee",
        "timestamp": 1600099457
    },
    {
        "content": "<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 210026918,
        "sender_full_name": "lcnr",
        "timestamp": 1600099483
    },
    {
        "content": "<p>you mean</p>\n<blockquote>\n<ul>\n<li>[ ] const wf (generic params in associated consts)</li>\n</ul>\n</blockquote>\n<p>?</p>",
        "id": 210026958,
        "sender_full_name": "lcnr",
        "timestamp": 1600099500
    },
    {
        "content": "<p>yes.</p>",
        "id": 210026985,
        "sender_full_name": "Jubilee",
        "timestamp": 1600099509
    },
    {
        "content": "<p>that's something else, it's about allowing</p>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;const N: usize&gt; Foo&lt;N&gt; {\n    const ASSOC: usize = N - 2;\n}\n</code></pre></div>",
        "id": 210027276,
        "sender_full_name": "lcnr",
        "timestamp": 1600099645
    },
    {
        "content": "<p>which mostly requires some lang adjacent discussion</p>",
        "id": 210027328,
        "sender_full_name": "lcnr",
        "timestamp": 1600099670
    },
    {
        "content": "<p>I think we already discussed this in <code>const-eval</code> before and decided that we want to allow this</p>",
        "id": 210027416,
        "sender_full_name": "lcnr",
        "timestamp": 1600099698
    },
    {
        "content": "<p>but that wasn't really definitive to my knowledge</p>",
        "id": 210027429,
        "sender_full_name": "lcnr",
        "timestamp": 1600099705
    },
    {
        "content": "<p>Ahhh.</p>",
        "id": 210027564,
        "sender_full_name": "Jubilee",
        "timestamp": 1600099777
    },
    {
        "content": "<p>re: ICE and where to find them</p>\n<p>I can only speak about const generics here, but const generics (or the lack there of) really likes to cause ICE on missing subst (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c433dd953983388d37a2b8347a0cc233\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c433dd953983388d37a2b8347a0cc233</a>)</p>",
        "id": 210028060,
        "sender_full_name": "lcnr",
        "timestamp": 1600100013
    },
    {
        "content": "<p>This is because <code>min_const_generics</code> is just one giant bodge which just happens to work fairly well</p>",
        "id": 210028316,
        "sender_full_name": "lcnr",
        "timestamp": 1600100113
    },
    {
        "content": "<p>ah yes, The Art of the Bodge.</p>",
        "id": 210028682,
        "sender_full_name": "Jubilee",
        "timestamp": 1600100288
    },
    {
        "content": "<p>truely</p>",
        "id": 210028700,
        "sender_full_name": "lcnr",
        "timestamp": 1600100298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  There's also the skills-map around const-eval and maybe that let's you find some areas that are better suited for your experience (btw, your work on polymorphization is amazing). I can't find the link to it, but maybe <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> or <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> can...</p>",
        "id": 210030170,
        "sender_full_name": "pachi",
        "timestamp": 1600101058
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> if you want some somewhat interesting <code>min_const_generics</code> work, we probably have to forbid lifetimes in anonymous constants to fix issues like <a href=\"https://github.com/rust-lang/rust/issues/75323\">https://github.com/rust-lang/rust/issues/75323</a> (which are about half of the remaining <code>const-generics-blocking</code> issues</p>",
        "id": 210030185,
        "sender_full_name": "lcnr",
        "timestamp": 1600101062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210030185\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> if you want some somewhat interesting <code>min_const_generics</code> work, we probably have to forbid lifetimes in anonymous constants to fix issues like <a href=\"https://github.com/rust-lang/rust/issues/75323\">https://github.com/rust-lang/rust/issues/75323</a> (which are about half of the remaining <code>const-generics-blocking</code> issues</p>\n</blockquote>\n<p>I'll look into this, thanks!</p>",
        "id": 210030260,
        "sender_full_name": "davidtwco",
        "timestamp": 1600101111
    },
    {
        "content": "<p>And there is <a href=\"https://github.com/rust-lang/rust/issues/61486\">https://github.com/rust-lang/rust/issues/61486</a> which is something you probably already have some experience by now</p>",
        "id": 210030424,
        "sender_full_name": "lcnr",
        "timestamp": 1600101174
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 210030481,
        "sender_full_name": "lcnr",
        "timestamp": 1600101203
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210030424\">said</a>:</p>\n<blockquote>\n<p>And there is <a href=\"https://github.com/rust-lang/rust/issues/61486\">https://github.com/rust-lang/rust/issues/61486</a> which is something you probably already have some experience by now</p>\n</blockquote>\n<p>I saw this, but it looked like it wasn't blocked on implementation, but rather what to do.</p>",
        "id": 210030482,
        "sender_full_name": "davidtwco",
        "timestamp": 1600101204
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> that's not something I am too familiar with, so I didn't spend too much time looking at this. I only know that it's blocking</p>",
        "id": 210030647,
        "sender_full_name": "lcnr",
        "timestamp": 1600101278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  there's also a bunch of stuff <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> and me plan to do around how consts are represented in the rest of the compiler, which we could use help with. see <a href=\"https://github.com/rust-lang/rust/issues/72396\">this issue</a> and <a href=\"https://hackmd.io/Qvrj_eOFTkCHZrhJ7f1ItA\">this hackmd</a> for some of my overall plan there. <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> would know best though about what the next est thing to implement would be.</p>",
        "id": 210033449,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102767
    },
    {
        "content": "<p>awesome, I'll give that a read</p>",
        "id": 210033500,
        "sender_full_name": "davidtwco",
        "timestamp": 1600102793
    },
    {
        "content": "<p>oh and there's a recently accepted RFC looking for someone to implement it :)</p>",
        "id": 210033637,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102836
    },
    {
        "content": "<p>won't valtree really help with fixing <a href=\"https://github.com/rust-lang/rust/issues/61486\">#61486</a></p>",
        "id": 210033661,
        "sender_full_name": "lcnr",
        "timestamp": 1600102848
    },
    {
        "content": "<p>that would be my personal favorite thing for someone to pick up actually, let me find the links</p>",
        "id": 210033672,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102852
    },
    {
        "content": "<p><code>const</code> blocks?</p>",
        "id": 210033706,
        "sender_full_name": "lcnr",
        "timestamp": 1600102865
    },
    {
        "content": "<p>yes, here: <a href=\"https://github.com/rust-lang/rust/issues/76001\">https://github.com/rust-lang/rust/issues/76001</a></p>",
        "id": 210033724,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210033661\">said</a>:</p>\n<blockquote>\n<p>won't valtree really help with fixing <a href=\"https://github.com/rust-lang/rust/issues/61486\">#61486</a></p>\n</blockquote>\n<p>yeah looks like it. though \"we will allow arbitrary structural_match types\" depends on figuring out what exactly that means, I think. that would be <a href=\"https://github.com/rust-lang/rust/issues/74446\">#74446</a>.</p>",
        "id": 210033907,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102939
    },
    {
        "content": "<p>but I think having valtrees implemented will help a lot with figuring out what \"structural match\" means. I think the two ought to be closely related.</p>",
        "id": 210033957,
        "sender_full_name": "RalfJ",
        "timestamp": 1600102964
    },
    {
        "content": "<p>thought spastorino was into that?</p>",
        "id": 210035045,
        "sender_full_name": "Jubilee",
        "timestamp": 1600103450
    },
    {
        "content": "<p>re val tree</p>\n<blockquote>\n<p>Honestly at this point I’d really like to settle on “some answer” regarding the semantics of constants in match patterns and not try to maintain the “structural eq limbo” we’ve been living in. It’d be good to collect some notes on the current status and maybe have a lang team design meeting to walk over them?</p>\n</blockquote>\n<p>^ this</p>",
        "id": 210035053,
        "sender_full_name": "lcnr",
        "timestamp": 1600103454
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210035045\">said</a>:</p>\n<blockquote>\n<p>thought spastorino was into that?</p>\n</blockquote>\n<p>they mentioned that they want to work on it on github iirc</p>",
        "id": 210035233,
        "sender_full_name": "lcnr",
        "timestamp": 1600103535
    },
    {
        "content": "<p>I would expect this RFC to be somewhat straightforward to implement, so I am not sure if there is something to do in parallel there</p>",
        "id": 210035380,
        "sender_full_name": "lcnr",
        "timestamp": 1600103615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210035380\">said</a>:</p>\n<blockquote>\n<p>I would expect this RFC to be somewhat straightforward to implement, so I am not sure if there is something to do in parallel there</p>\n</blockquote>\n<p>it certainly would not be straight-forward for me, and anyway I don't have the time, so any help would be appreciated</p>",
        "id": 210035542,
        "sender_full_name": "RalfJ",
        "timestamp": 1600103692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210035045\">said</a>:</p>\n<blockquote>\n<p>thought spastorino was into that?</p>\n</blockquote>\n<p>which one, const expressions or valtrees?</p>",
        "id": 210035839,
        "sender_full_name": "RalfJ",
        "timestamp": 1600103844
    },
    {
        "content": "<p>oh, valtrees, right, they self-assigned</p>",
        "id": 210035877,
        "sender_full_name": "RalfJ",
        "timestamp": 1600103865
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210035839\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210035045\">said</a>:</p>\n<blockquote>\n<p>thought spastorino was into that?</p>\n</blockquote>\n<p>which one, const expressions or valtrees?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76001#issuecomment-685160202\">https://github.com/rust-lang/rust/issues/76001#issuecomment-685160202</a></p>",
        "id": 210035878,
        "sender_full_name": "davidtwco",
        "timestamp": 1600103865
    },
    {
        "content": "<p>Cc <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 210035945,
        "sender_full_name": "RalfJ",
        "timestamp": 1600103889
    },
    {
        "content": "<p>maybe they can need help, not sure what the current status is</p>",
        "id": 210035954,
        "sender_full_name": "RalfJ",
        "timestamp": 1600103898
    },
    {
        "content": "<p>hey, yes I'm starting to go over <a href=\"https://github.com/rust-lang/rust/issues/76001\">#76001</a></p>",
        "id": 210036115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600103965
    },
    {
        "content": "<blockquote>\n<p>it certainly would not be straight-forward for me</p>\n</blockquote>\n<p>yeah, straightforward might have been the wrong word here. I meant to say that I expect this to have a fairly rigid sequence of steps for which it probably is not easy to work in parallel. I would expect this to go something like that, where each of the steps only really makes sense once the previous step has been implemented:</p>\n<p>implement parsing to an AnonConst -&gt; lower AnonConst -&gt; fix ICE by updating the different visitors -&gt; lower further -&gt; update <code>type_of</code> and <code>generics_of</code> -&gt; add <code>ConstEvaluatable</code> predicate for these constants -&gt; <em>mir building</em> (which I don't know too much about, so it might be already necessary at an earlier point) -&gt; <em>hopefully</em> done</p>",
        "id": 210037894,
        "sender_full_name": "lcnr",
        "timestamp": 1600104869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210030185\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> if you want some somewhat interesting <code>min_const_generics</code> work, we probably have to forbid lifetimes in anonymous constants to fix issues like <a href=\"https://github.com/rust-lang/rust/issues/75323\">https://github.com/rust-lang/rust/issues/75323</a> (which are about half of the remaining <code>const-generics-blocking</code> issues</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76739\">#76739</a> - not the most happy with it, but it appears to do the job.</p>",
        "id": 210121821,
        "sender_full_name": "davidtwco",
        "timestamp": 1600172956
    },
    {
        "content": "<p>I personally would also really like to delegate <a href=\"https://github.com/rust-lang/rust/issues/70753#issuecomment-691672808\">https://github.com/rust-lang/rust/issues/70753#issuecomment-691672808</a> to someone else, so if either <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> or anyone else wants to look into this I would be quite thankful.</p>\n<p>While I can somewhat mentor this issue, I do expect that some familiarity with the compiler helps, so I wouldn't recommend this as one of the first issues to work on</p>",
        "id": 210906994,
        "sender_full_name": "lcnr",
        "timestamp": 1600796965
    },
    {
        "content": "<p>I can throw looking into this on the to-do list  but I might not get to it that quickly.</p>",
        "id": 210907187,
        "sender_full_name": "davidtwco",
        "timestamp": 1600797031
    },
    {
        "content": "<p>nice <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>  then I will keep this on my backlog until the other blocking issues are fixed here</p>",
        "id": 210907410,
        "sender_full_name": "lcnr",
        "timestamp": 1600797126
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> I've taken a look at that issue and the previous attempts to resolve it. I don't think I'm going to make an attempt at fixing it. I don't have a good intution for what would be considered as increasing technical debt (as much as I'd like to) so it seems likely that whatever work I do here wouldn't land.</p>",
        "id": 211608936,
        "sender_full_name": "davidtwco",
        "timestamp": 1601379511
    },
    {
        "content": "<p>that's unfortunate, but I see where you are coming from. Might be worth for me to really dig into this myself in the next weeks</p>",
        "id": 211669564,
        "sender_full_name": "lcnr",
        "timestamp": 1601406544
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210030424\">said</a>:</p>\n<blockquote>\n<p>And there is <a href=\"https://github.com/rust-lang/rust/issues/61486\">https://github.com/rust-lang/rust/issues/61486</a> which is something you probably already have some experience by now</p>\n</blockquote>\n<p>Didn't see this thread before now, but I started one about this topic here: <a href=\"#narrow/stream/131828-t-compiler/topic/Value.20mangling.20for.20integral.20primitive.20data.20types\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Value.20mangling.20for.20integral.20primitive.20data.20types</a></p>",
        "id": 212075943,
        "sender_full_name": "varkor",
        "timestamp": 1601646263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/available.20work/near/210906994\">said</a>:</p>\n<blockquote>\n<p>I personally would also really like to delegate <a href=\"https://github.com/rust-lang/rust/issues/70753#issuecomment-691672808\">https://github.com/rust-lang/rust/issues/70753#issuecomment-691672808</a> to someone else, so if either <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> or anyone else wants to look into this I would be quite thankful.</p>\n<p>While I can somewhat mentor this issue, I do expect that some familiarity with the compiler helps, so I wouldn't recommend this as one of the first issues to work on</p>\n</blockquote>\n<p>I was hoping to look into this at the weekend if no-one has done so by then.</p>",
        "id": 212075977,
        "sender_full_name": "varkor",
        "timestamp": 1601646283
    }
]