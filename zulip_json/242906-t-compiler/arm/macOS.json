[
    {
        "content": "<p>Heads up — I've created <a href=\"https://github.com/rust-lang/rust/issues/73908\">a tracking issue for macOS + ARM support</a>.</p>\n<p>I'm working towards a blog post that will be more public-facing, but now that the issue exists, I'm sure people will find it.</p>",
        "id": 202523387,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593568935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> hey! I happen to have access to a macOS+ARM box, and it... sort of works. :) I'd love to hear your suggestions about getting it working more than I have gotten it so far.</p>",
        "id": 202523903,
        "sender_full_name": "André Arko",
        "timestamp": 1593569530
    },
    {
        "content": "<p>Neat! I'll be honest and say that I'll _mostly_ be coordinating things. My LLVM knowledge is limited, and I've only helped out with one \"non-standard\" architecture before. However, I've got some thoughts, which I'll type up in a new thread...</p>",
        "id": 202524002,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593569721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> updated the checklist a bit :)</p>",
        "id": 202539464,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593589297
    },
    {
        "content": "<p>Thank you. I wasn't sure of how much you said before we wanted to make more public, so I erred on the side of caution. This is going to be the best tracking issue you ever saw.</p>",
        "id": 202556362,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593602015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> achieving tier 3 support is probably just adding the target information to rustc</p>",
        "id": 202557207,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593602766
    },
    {
        "content": "<p>we don't guarantee anything for tier 3, we just have <em>something</em> in the codebase</p>",
        "id": 202557219,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593602784
    },
    {
        "content": "<p>See the progress in macOS initial cross-compile.</p>",
        "id": 202557312,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593602874
    },
    {
        "content": "<p>Already discovered that libc needs to be updated.</p>",
        "id": 202557363,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593602890
    },
    {
        "content": "<p>but: </p>\n<blockquote>\n<p>Tier 3 platforms are those which the Rust codebase has support for, but which are not built or tested automatically, and may not work.</p>\n</blockquote>",
        "id": 202557460,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593602969
    },
    {
        "content": "<p>well yeah it depends how you interpret support :P</p>",
        "id": 202557479,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593602998
    },
    {
        "content": "<p>technically just adding a target definition to it could be support, it just doesn't work :P</p>",
        "id": 202557543,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593603020
    },
    {
        "content": "<p>So that's the first step :-) We aren't there yet, so we haven't reached tier 3.</p>",
        "id": 202557544,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593603020
    },
    {
        "content": "<p>yep</p>",
        "id": 202557549,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593603027
    },
    {
        "content": "<p>my comment was more of \"we should move some steps to tier 2\"</p>",
        "id": 202557566,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593603038
    },
    {
        "content": "<p>I'd rather not make the tiers any more meaningless.</p>",
        "id": 202557575,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593603047
    },
    {
        "content": "<p>To me, tier 3 is \"rustc did something basic on the target platform once\". For AVR, that'd be a blink the LEDs kind of thing. for this case, I could see it as maybe a cross-compiled \"hello world\" (or even simpler, something that sets the exit status, for example)</p>",
        "id": 202557871,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593603314
    },
    {
        "content": "<p>tier 2 is \"rustc continues to do something basic\" — aka has CI . In this case, I think it also means that rustc and cargo run natively</p>",
        "id": 202557993,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593603407
    },
    {
        "content": "<p>as this wants to be a self-hosted platform, not cross-compile only like AVR</p>",
        "id": 202558017,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593603433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> is there a way to get notified about edits to the primary comment on GitHub? If not, you and I should probably ping each other when we change it (although I <em>do</em> like your warning). </p>\n<p>Those notifications could also be useful for casual watchers...</p>",
        "id": 202582200,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593616925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> not that I'm aware of</p>",
        "id": 202582245,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593616954
    },
    {
        "content": "<p>and good call about pinging each other</p>",
        "id": 202582269,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593616963
    },
    {
        "content": "<p>if it's a change that users need to be notified on we should post a comment along with editing the issue</p>",
        "id": 202582309,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593616982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to mention that x86_64 rustc running on ARM can produce x86_64 binaries that also run on ARM.</p>",
        "id": 202601868,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593626264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to mention our initial success of running a native <code>rustc</code> on the DTK. No compilation, just <code>--version</code>.</p>",
        "id": 202836197,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593809547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to mention that a cross-compiled <code>rustc</code> can compile hello world.</p>\n<p>I left off that it can also compile SNAFU and its dependencies, as that seemed self-serving <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 202898369,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593910496
    },
    {
        "content": "<p>it's workingggggg</p>",
        "id": 202904736,
        "sender_full_name": "André Arko",
        "timestamp": 1593923424
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Finished release [optimized + debuginfo] target(s) in 59.40s\n   Replacing /Users/andre/.cargo/bin/rg\n    Replaced package `ripgrep v12.1.1` with `ripgrep v12.1.1` (executable `rg`)\n❯ lipo -info $(which rg)\nNon-fat file: /Users/andre/.cargo/bin/rg is architecture: arm64\n</code></pre></div>",
        "id": 202904738,
        "sender_full_name": "André Arko",
        "timestamp": 1593923432
    },
    {
        "content": "<p>woohoo</p>",
        "id": 202904739,
        "sender_full_name": "André Arko",
        "timestamp": 1593923433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to mention that aarch64 <code>rustc</code> can compile <code>rustc</code> itself, as well as cross-compiling back to x86_64.</p>",
        "id": 202925274,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593961712
    },
    {
        "content": "<p>Also, I'm totally gonna start saying <code>aarch64!rustc</code>. Blessed be the fan-fictioners.</p>",
        "id": 202925367,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593961863
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to mention <code>arm64e</code> as an unresolved question.</p>",
        "id": 203038044,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1594067979
    },
    {
        "content": "<p>learned a fascinating thing today, which is that macOS Big Sur changes it’s version number from 10.16 to 11.0 depending on the SDK you use: <a href=\"https://eclecticlight.co/2020/07/06/why-big-sur-wont-stumble-over-version-numbers/\">https://eclecticlight.co/2020/07/06/why-big-sur-wont-stumble-over-version-numbers/</a></p>",
        "id": 203066123,
        "sender_full_name": "André Arko",
        "timestamp": 1594096347
    },
    {
        "content": "<blockquote>\n<p>In the longer term, it would be much simpler if Apple were to provide a monotonically increasing positive integer which increased by 1 with every patch number.</p>\n</blockquote>\n<p>Someone doesn’t understand parallel versions.</p>",
        "id": 203089193,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1594119864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated to link to the PRs to libc and cc-rs. After that, I think we can open a PR to add the initial version of the target spec.</p>",
        "id": 203256685,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1594207920
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 203256738,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1594207937
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated with some next step checkboxes</p>",
        "id": 203539837,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1594404531
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> opened a PR to add the initial target and edited the status to reflect that. I'm also going to comment on the tracking issue to notify any people subscribed, since it's been a few weeks.</p>",
        "id": 204378871,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595207927
    },
    {
        "content": "<p>sounds good!</p>",
        "id": 204396121,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1595232585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> updated the tracking issue and added a status update comment.</p>",
        "id": 210588410,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600475349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> On tracking issue <a href=\"https://github.com/rust-lang/rust/issues/73908\">https://github.com/rust-lang/rust/issues/73908</a> all the subsections for <code>Achieve Tier 3 support</code> are checked off. Does that mean that tier 3 support is achieved? Should that whole section be checked as well?</p>",
        "id": 210600485,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1600497279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"200172\">@Yerkebulan Tulibergenov</span> ah yes, thank you!</p>",
        "id": 210613148,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600519262
    },
    {
        "content": "<p>Neat:</p>\n<div class=\"codehilite\"><pre><span></span><code>% rustup-toolchain-install-master --force 462ec6baef52edea591eab1a070ed4e18b80d094 --targets aarch64-apple-darwin\n\n% SDKROOT=$(xcrun -sdk macosx11.0 --show-sdk-path) MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.0 --show-sdk-platform-version) cargo +462ec6baef52edea591eab1a070ed4e18b80d094 build --target=aarch64-apple-darwin\n</code></pre></div>\n\n\n<p>Reasonably easy cross-compiling!</p>",
        "id": 210819445,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600737138
    },
    {
        "content": "<p>yassssssssssssssssssss</p>\n<div class=\"codehilite\"><pre><span></span><code> % rustup target add aarch64-apple-darwin\ninfo: downloading component &#39;rust-std&#39; for &#39;aarch64-apple-darwin&#39;\ninfo: installing component &#39;rust-std&#39; for &#39;aarch64-apple-darwin&#39;\ninfo: Defaulting to 500.0 MiB unpack ram\n 17.6 MiB /  17.6 MiB (100 %)  10.6 MiB/s in  1s ETA:  0s\n</code></pre></div>",
        "id": 213371601,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602726357
    },
    {
        "content": "<p>heh, I posted the same thing in some Mozilla internal matrix channel.<br>\nI'm wondering, does the HOSTS part of <a href=\"https://github.com/rust-lang/rust/pull/77895/files\">https://github.com/rust-lang/rust/pull/77895/files</a> mean there should be a aarch64-apple-darwin toolchain too?</p>",
        "id": 213372887,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602727713
    },
    {
        "content": "<p>yes \"but\"</p>",
        "id": 213372902,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727740
    },
    {
        "content": "<p>I'm working on the rustup PR at the moment</p>",
        "id": 213372907,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727751
    },
    {
        "content": "<p>so it's pretty hard to actually get right now</p>",
        "id": 213372916,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727767
    },
    {
        "content": "<p>I tweaked the rustup script to use aarch64 when it gets arm64, and I'm getting a failure to download <a href=\"https://static.rust-lang.org/rustup/dist/aarch64-apple-darwin/rustup-init\">https://static.rust-lang.org/rustup/dist/aarch64-apple-darwin/rustup-init</a> I guess that part is not published yet?</p>",
        "id": 213372981,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602727823
    },
    {
        "content": "<p>but a sneakypeeky:</p>\n<div class=\"codehilite\"><pre><span></span><code>shepmaster@dtk ~ % rustup install nightly\ninfo: syncing channel updates for &#39;nightly-aarch64-apple-darwin&#39;\ninfo: latest update on 2020-10-15, rust version 1.49.0-nightly (e160e5cb8 2020-10-14)\ninfo: downloading component &#39;cargo&#39;\ninfo: downloading component &#39;clippy&#39;\ninfo: downloading component &#39;rust-std&#39;\n 17.6 MiB /  17.6 MiB (100 %)   6.4 MiB/s in  2s ETA:  0s\ninfo: downloading component &#39;rustc&#39;\n 42.0 MiB /  42.0 MiB (100 %)   6.3 MiB/s in  7s ETA:  0s\ninfo: downloading component &#39;rustfmt&#39;\ninfo: installing component &#39;cargo&#39;\ninfo: using up to 500.0 MiB of RAM to unpack components\ninfo: installing component &#39;clippy&#39;\ninfo: installing component &#39;rust-std&#39;\n 17.6 MiB /  17.6 MiB (100 %)   5.4 MiB/s in  3s ETA:  0s\ninfo: installing component &#39;rustc&#39;\n 42.0 MiB /  42.0 MiB (100 %)   5.8 MiB/s in  7s ETA:  0s\ninfo: installing component &#39;rustfmt&#39;\n\n  nightly-aarch64-apple-darwin installed - rustc 1.49.0-nightly (e160e5cb8 2020-10-14)\n\ninfo: checking for self-updates\n</code></pre></div>",
        "id": 213372982,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727826
    },
    {
        "content": "<p>Yes, there is no published rustup aarch64-apple-darwin binary, thus the PR I mentioned.</p>",
        "id": 213373000,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727857
    },
    {
        "content": "<p>I suppose with a x86-64 rustup it should be possible to add the toolchain</p>",
        "id": 213373007,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602727867
    },
    {
        "content": "<p>yep. <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md#installing-rustup\">https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md#installing-rustup</a></p>",
        "id": 213373016,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602727896
    },
    {
        "content": "<p>simpler one-liner: <code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | arch --x86_64 sh</code></p>",
        "id": 213373113,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602727990
    },
    {
        "content": "<p>then you can tweak the default host triple at the prompt</p>",
        "id": 213373123,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602728028
    },
    {
        "content": "<p>and the default triple can be an argument to the script, IIRC</p>",
        "id": 213373168,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602728050
    },
    {
        "content": "<p>TIL <code>arch</code></p>",
        "id": 213373171,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602728054
    },
    {
        "content": "<p>You run that / know for sure it works?</p>",
        "id": 213373186,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602728087
    },
    {
        "content": "<p>I did it just now before posting</p>",
        "id": 213373194,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602728101
    },
    {
        "content": "<p>Complete one-liner: <code>arch --x86_64 sh &lt;(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs) --default-host aarch64-apple-darwin --default-toolchain nightly</code></p>",
        "id": 213373276,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602728185
    },
    {
        "content": "<p>And does that get you the native aarch64 toolchain?</p>",
        "id": 213373470,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602728406
    },
    {
        "content": "<p>yup</p>",
        "id": 213374126,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729169
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>% file ~/.cargo/bin/{cargo,rustc}\n/Users/glandium/.cargo/bin/cargo: Mach-O 64-bit executable x86_64\n/Users/glandium/.cargo/bin/rustc: Mach-O 64-bit executable x86_64\n</code></pre></div>",
        "id": 213374205,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729255
    },
    {
        "content": "<p>huh damn</p>",
        "id": 213374212,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729266
    },
    {
        "content": "<p>That's expected :-)</p>",
        "id": 213374216,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729276
    },
    {
        "content": "<p>those are the rustup shim binaries that parse the <code>+whatever</code> syntax</p>",
        "id": 213374224,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729293
    },
    {
        "content": "<p>oh right, they are rustup</p>",
        "id": 213374225,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729294
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>% file `rustup which cargo` `rustup which rustc`\n/Users/glandium/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/cargo: Mach-O 64-bit executable arm64\n/Users/glandium/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rustc: Mach-O 64-bit executable arm64\n</code></pre></div>",
        "id": 213374239,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729329
    },
    {
        "content": "<p>Alright, my current instructions are <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README.md\">https://github.com/shepmaster/rust/blob/silicon/silicon/README.md</a></p>",
        "id": 213374250,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729348
    },
    {
        "content": "<p>do you get random SIGKILL issues due to signature verification failing on e.g. build-scripts during compilation?</p>",
        "id": 213374421,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729557
    },
    {
        "content": "<p>it started happening with Big Sur beta 8 for me.</p>",
        "id": 213374429,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729567
    },
    {
        "content": "<p>Our DTK is cloud-managed, so I actually don't know what version of the OS is on there.</p>",
        "id": 213374442,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729597
    },
    {
        "content": "<p>and <code>system_profiler SPSoftwareDataType</code> just says <code>11.0</code></p>",
        "id": 213374511,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729653
    },
    {
        "content": "<p>Not much help there</p>",
        "id": 213374516,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729656
    },
    {
        "content": "<p>But no, I haven't seen that. I also haven't spent much time compiling crates other than a handful (like my own, for ego purposes)</p>",
        "id": 213374544,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729690
    },
    {
        "content": "<p>wikipedia says there's a a new beta today</p>",
        "id": 213374556,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729714
    },
    {
        "content": "<p>We've <a href=\"https://betawiki.net/wiki/MacOS_Big_Sur_build_20A5299w\">https://betawiki.net/wiki/MacOS_Big_Sur_build_20A5299w</a></p>",
        "id": 213374616,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729758
    },
    {
        "content": "<p>So maybe never updated.</p>",
        "id": 213374621,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729770
    },
    {
        "content": "<p>I might need to remote in and check for updates.</p>",
        "id": 213374629,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729780
    },
    {
        "content": "<p><code>Time since boot: 85 days 13:44</code></p>",
        "id": 213374641,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729798
    },
    {
        "content": "<p>that's an old beta, I never had these signature issues on them</p>",
        "id": 213374714,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1602729868
    },
    {
        "content": "<p><a href=\"https://betawiki.net/wiki/MacOS_Big_Sur\">https://betawiki.net/wiki/MacOS_Big_Sur</a></p>",
        "id": 213374725,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729888
    },
    {
        "content": "<p>\" 20A5395g is the official Beta 10 build of macOS Big Sur, which was released to Apple developers on 2020-10-14.[1]\"</p>",
        "id": 213374757,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602729938
    },
    {
        "content": "<p>but now it's bedtime!</p>",
        "id": 213374854,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602730048
    },
    {
        "content": "<p>You can watch my PR fail, if you'd enjoy it — <a href=\"https://github.com/rust-lang/rustup/pull/2521\">https://github.com/rust-lang/rustup/pull/2521</a></p>",
        "id": 213374861,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602730067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> Should we check the checkbox for \"Achieve Tier 2 support\"?</p>",
        "id": 213575711,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1602862217
    },
    {
        "content": "<p>Sorry, it was probably a bad idea to \"@\" you :(</p>",
        "id": 213575777,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1602862246
    },
    {
        "content": "<p>Nah, mention is fine. Updated, thanks!</p>",
        "id": 213576463,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602862565
    },
    {
        "content": "<p>BTW, that was a super quick promotion to Tier 2. Thanks for all the hard work.</p>",
        "id": 213576805,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1602862739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> FYI, I have a workaround for the codesign issues: <code>RUSTC=$(rustup which rustc) $(rustup which cargo) build</code>. Apparently, it's the rustup x86-64 wrapper that throws something off.</p>",
        "id": 213877740,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1603173575
    },
    {
        "content": "<p>Which should be fixed at the next release of rustup (fingers crossed)</p>",
        "id": 213906283,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603194366
    },
    {
        "content": "<p>I’ve seen similar things with <code>cc</code>, where it detects if you are on x86 or arm64 if any process in the calling hierarchy is x86. Even if it’s not the immediate parent.</p>",
        "id": 213906399,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603194465
    },
    {
        "content": "<p>Ok, the test suite passes on aarch64 except for some LTO related things </p>\n<div class=\"codehilite\"><pre><span></span><code>x.py test --exclude src/test/debuginfo --exclude src/test/run-make-fulldeps\n\nBuild completed successfully in 0:11:41\n</code></pre></div>\n<p>The first exclude is because I'm running in SSH and LLDB isn't configured to work that way (I've run those tests when screen sharing though). The second exclude is the LTO tests (<a href=\"https://github.com/rust-lang/rust/issues/78881\">https://github.com/rust-lang/rust/issues/78881</a>).</p>",
        "id": 216011457,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1604849296
    },
    {
        "content": "<p>OK, found a patch that avoids the assertion from LLVM. With that:</p>\n<div class=\"codehilite\"><pre><span></span><code>% ../x.py test --stage=2\n...\nBuild completed successfully in 0:11:37\n</code></pre></div>",
        "id": 216826229,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605492057
    },
    {
        "content": "<p>So hopefully we will be starting off on a good foot whenever we get some kind of CI.</p>",
        "id": 216826250,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605492099
    },
    {
        "content": "<p>Ugh. Now I updated my branch and get</p>\n<div class=\"codehilite\"><pre><span></span><code>command: &quot;/Users/shepmaster/Projects/rust/full/build/aarch64-apple-darwin/test/ui/process/process-spawn-with-unicode-params/a&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nthread &#39;main&#39; panicked at &#39;assertion failed: p.status.success()&#39;, /Users/shepmaster/Projects/rust/src/test/ui/process/process-spawn-with-unicode-params.rs:63:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 216881587,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605538631
    },
    {
        "content": "<p>And with a new update..</p>\n<div class=\"codehilite\"><pre><span></span><code>% ../x.py test --stage=2\nBuild completed successfully in 0:11:28\n</code></pre></div>",
        "id": 218224422,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606675427
    }
]