[
    {
        "content": "<p>I should play around with proc macros to generate an interactive viewer (given the data types). or maybe I should just dump it all as an HTML or something and hope browsers don't die on it</p>",
        "id": 204324577,
        "sender_full_name": "eddyb",
        "timestamp": 1595118985
    },
    {
        "content": "<p>sometimes it's really useful to read the data, but it's somewhat intentionally not self-describing</p>",
        "id": 204324586,
        "sender_full_name": "eddyb",
        "timestamp": 1595119026
    },
    {
        "content": "<p>All I hear you say is \"Wasm Wasm Wasm\"</p>",
        "id": 204324781,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595119414
    },
    {
        "content": "<p>too bad the compiler is too big for that. but maybe the relevant parts can be reasonably decoded without any dependencies hmm</p>",
        "id": 204324971,
        "sender_full_name": "eddyb",
        "timestamp": 1595119794
    },
    {
        "content": "<p>How big do you think is \"too big\"? rust-analyzer is 7MB and people want to <a href=\"https://github.com/integer32llc/rust-playground/issues/357#issuecomment-650822552\">add it to the playground</a></p>",
        "id": 204325064,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595119946
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>-rw-r--r-- 1 eddy users 9.5M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libchalk_derive-4409e2b62d415830.so\n-rw-r--r-- 1 eddy users  87M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libLLVM-10-rust-1.46.0-nightly.so\n-rw-r--r-- 1 eddy users 104M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/librustc_driver-895f6d02fef171ad.so\n-rw-r--r-- 1 eddy users 9.6M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/librustc_macros-6350e6adce0cda4d.so\n-rw-r--r-- 1 eddy users 6.1M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libstd-b6aff3703feff874.so\n-rw-r--r-- 1 eddy users 2.3M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libtest-70d03ac6bbb1c69e.so\n-rw-r--r-- 1 eddy users 8.8M Jul  9 14:42 /home/eddy/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libtracing_attributes-0d61d94d9884a855.so\n</code></pre></div>",
        "id": 204325072,
        "sender_full_name": "eddyb",
        "timestamp": 1595120003
    },
    {
        "content": "<p>each of the <em>proc macro crates</em> for <code>rustc_*</code> are larger than that lol</p>",
        "id": 204325074,
        "sender_full_name": "eddyb",
        "timestamp": 1595120024
    },
    {
        "content": "<p>presumably some of this will shrink on wasm but it's still a lot of code and you don't need the actual compiler, just some data descriptions</p>",
        "id": 204325119,
        "sender_full_name": "eddyb",
        "timestamp": 1595120102
    },
    {
        "content": "<p>I don't see how the size of those files would impact this. Wouldn't you just use the crates you need and let all the dead code be removed?</p>",
        "id": 204325127,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595120154
    },
    {
        "content": "<p>the other thing is that you'd probably need to build this tool into <code>rustc</code> (as a <code>-Z</code> flag) anyway, to avoid needing to compile a separate crate against that compiler</p>",
        "id": 204325165,
        "sender_full_name": "eddyb",
        "timestamp": 1595120167
    },
    {
        "content": "<p>Also, you didn't answer how big is too big, an honest question of mine. Like, I don't know what's reasonable anymore.</p>",
        "id": 204325171,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595120193
    },
    {
        "content": "<p>no idea!</p>",
        "id": 204325172,
        "sender_full_name": "eddyb",
        "timestamp": 1595120199
    },
    {
        "content": "<p>I have the bandwidth to download hundreds of MBs in the time it used to take to load a flash game back in the day</p>",
        "id": 204325178,
        "sender_full_name": "eddyb",
        "timestamp": 1595120227
    },
    {
        "content": "<p>Like, I'd make it opt-in. The advanced editor is opt-out. At some point theres \"this is too damn big\".</p>",
        "id": 204325190,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595120248
    },
    {
        "content": "<p>I'm the wrong person to ask this I think :P</p>",
        "id": 204325191,
        "sender_full_name": "eddyb",
        "timestamp": 1595120248
    },
    {
        "content": "<p>it's probably easier to add some sort of a short auto-generated self-description at the start of the file to allow decoding the stuff that's not typesystem-related, anyway</p>",
        "id": 204325241,
        "sender_full_name": "eddyb",
        "timestamp": 1595120380
    },
    {
        "content": "<p>I did make a metadata viewer a while ago. It bitrotted though, as rustc_metadata has made some things private: <a href=\"https://github.com/bjorn3/rust_read_rlib\">https://github.com/bjorn3/rust_read_rlib</a></p>",
        "id": 204335345,
        "sender_full_name": "bjorn3",
        "timestamp": 1595139701
    },
    {
        "content": "<p>ahhh that's pretty fancy</p>",
        "id": 204341878,
        "sender_full_name": "eddyb",
        "timestamp": 1595152534
    },
    {
        "content": "<p>I was hoping to cheese it with some autoderiving. but I don't think I'll take this on any time soon, unless it's really needed for something or other</p>",
        "id": 204341922,
        "sender_full_name": "eddyb",
        "timestamp": 1595152588
    },
    {
        "content": "<p>Maybe it could be implemented as a <code>Serializer</code> that takes the deserialized metadata and serializes it into a human readable format?</p>",
        "id": 204342061,
        "sender_full_name": "bjorn3",
        "timestamp": 1595152894
    },
    {
        "content": "<p>it's trickier than that because of <code>Lazy</code>. also because of how this sort of thing comes in handy mostly when it's not easy to link against the compiler, it might be neat to encode just enough schema to decode some of the hierarchy (I'd be happy with something that makes diffs less atrocious while not providing field names)</p>",
        "id": 204342118,
        "sender_full_name": "eddyb",
        "timestamp": 1595153013
    }
]