[
    {
        "content": "<p>Now that the pr for initial arm mac support has landed (<a href=\"https://github.com/rust-lang/rust/pull/74541\">https://github.com/rust-lang/rust/pull/74541</a>), what's the workflow for building the compiler? I'm on an mac arm DTK, and would like a compiler that can target the same. The instructions in <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README.md\">https://github.com/shepmaster/rust/blob/silicon/silicon/README.md</a> don't seem to apply to what exists in the upstream. (in particular, the 'silicon' directory doesn't exist) Will that part be integrated at some point? Or does it exist at a different location?</p>",
        "id": 206097129,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1596678356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"317636\">@Joshua Warner</span> I believe you should be able to build it like you were building rustc for any other platform. </p>\n<p>If you run x.py install targeting arm macs what do you get?</p>\n<div class=\"codehilite\"><pre><span></span><code>DESTDIR=./build-artefact &amp;&amp; x.py install -i --stage 1 --target aarch64-apple-darwin,x86_64-apple-darwin src/librustc src/libstd\n</code></pre></div>",
        "id": 206129765,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1596714011
    },
    {
        "content": "<p>As the README states:</p>\n<blockquote>\n<p>This section can be simplified when an appropriate target specification is added to the standard Rust <strong>bootstrapping compiler</strong>.</p>\n</blockquote>\n<p>That has not happened yet</p>",
        "id": 206144561,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596722472
    },
    {
        "content": "<p>AFAIK</p>",
        "id": 206144606,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596722488
    },
    {
        "content": "<p>The main thing is that you need the <code>aarch64-apple-darwin.json</code>file from that fork and to use it as part of building.</p>",
        "id": 206144855,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596722585
    },
    {
        "content": "<p>I tried <span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> 's suggestion and referenced the aarch64-apple-darwin.json file from <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> 's fork.<br>\nParticularly:<br>\n<code>DESTDIR=./build-artefact ./x.py install -i --stage 1 --host ./aarch64-apple-darwin.json --target aarch64-apple-darwin,x86_64-apple-darwin src/librustc src/libstd</code><br>\nUnfortunately that tries to download <a href=\"https://static.rust-lang.org/dist/2020-07-16/rust-std-beta-aarch64-apple-darwin.tar.gz.sha256\">https://static.rust-lang.org/dist/2020-07-16/rust-std-beta-aarch64-apple-darwin.tar.gz.sha256</a>, which of course 404's</p>",
        "id": 206207095,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1596754367
    },
    {
        "content": "<p>I think for now I'll work off of <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> 's fork; the build there seemed to succed (I think? Haven't had time to test it yet). Anyway, that'll get me far enough to start sniffing out arm-compatibility problems in crates I depend on. <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 206207237,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1596754472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I thought it was backported to beta so it could be in the bootstrap compiler?</p>",
        "id": 206226047,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1596779321
    },
    {
        "content": "<p>It is planned to be backported. Can you point to something that indicates it was?</p>",
        "id": 206250539,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596803194
    },
    {
        "content": "<p>Why are we backporting features? I don't like it</p>",
        "id": 206256012,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596806683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> mostly to make it easier to work on fleshing out the real support -- we're just backporting the target triple file. IDK, it might be \"wrong\" in some sense, I guess, but I don't mind it too much</p>",
        "id": 206256445,
        "sender_full_name": "simulacrum",
        "timestamp": 1596806927
    },
    {
        "content": "<p>Especially considering that the dependencies on LIBC and CC are not being back ported</p>",
        "id": 206261215,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596809513
    },
    {
        "content": "<p>Which are what I would consider to be features. Really the target file is just configuration</p>",
        "id": 206261305,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596809545
    },
    {
        "content": "<p>So the beta branch itself wonâ€™t be able to compile for the target.  only be able to use as the compiler for nightly</p>",
        "id": 206261812,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596809794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> so from <a href=\"https://github.com/rust-lang/rust/pull/74541\">https://github.com/rust-lang/rust/pull/74541</a>, we're just backporting the first commit, right? not the dependency bump?</p>",
        "id": 206274173,
        "sender_full_name": "simulacrum",
        "timestamp": 1596815586
    },
    {
        "content": "<p>To my knowledge, that is all that is required to make beta be able to compile nightly</p>",
        "id": 206274787,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596815910
    },
    {
        "content": "<p>That seems like the safest thing that we could backport</p>",
        "id": 206274838,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1596815934
    },
    {
        "content": "<p>okay will do</p>",
        "id": 206274872,
        "sender_full_name": "simulacrum",
        "timestamp": 1596815950
    }
]