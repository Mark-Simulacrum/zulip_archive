[
    {
        "content": "<p>Hi, would that be the right place to get some support in setting up a native Apple Silicon rust build? I'm a Homebrew maintainer trying to see how feasible it is to make rust work in our ARM distribution</p>\n<p>I've seen instructions around on how to do that, but they do not cover bootstrap, which is how we build in Homebrew. I've tried to parallel our current setup with rustc from <a href=\"https://static.rust-lang.org/dist/2020-10-16/rustc-nightly-src.tar.gz\">https://static.rust-lang.org/dist/2020-10-16/rustc-nightly-src.tar.gz</a>, latest cargo master, and cargobootstrap from <a href=\"https://static.rust-lang.org/dist/2020-10-16/cargo-nightly-aarch64-apple-darwin.tar.gz\">https://static.rust-lang.org/dist/2020-10-16/cargo-nightly-aarch64-apple-darwin.tar.gz</a></p>\n<p>But then when I run: configure --release-channel=nightly &amp;&amp; make, I get:<br>\nFailure to download <a href=\"https://static.rust-lang.org/dist/2020-10-07/rust-std-beta-aarch64-apple-darwin.tar.xz.sha256\">https://static.rust-lang.org/dist/2020-10-07/rust-std-beta-aarch64-apple-darwin.tar.xz.sha256</a></p>\n<p>I don't know where that \"beta\" comes from, I've never specified beta anywhere. Can someone help? (I'm a total newcomer to the rust ecosystem)</p>",
        "id": 216681936,
        "sender_full_name": "FX Coudert",
        "timestamp": 1605306146
    },
    {
        "content": "<p>This is a fine place <span class=\"user-mention\" data-user-id=\"364277\">@FX Coudert</span> . Nice to talk to you <a href=\"https://github.com/Homebrew/brew/issues/9082#issuecomment-727246564\">again</a>. :-)</p>",
        "id": 216752463,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605390927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"364277\">FX Coudert</span> <a href=\"#narrow/stream/242906-t-compiler.2Farm/topic/Native.20aarch64-apple-darwin.20install.20trouble/near/216681936\">said</a>:</p>\n<blockquote>\n<p>I don't know where that \"beta\" comes from, I've never specified beta anywhere. Can someone help? (I'm a total newcomer to the rust ecosystem)</p>\n</blockquote>\n<p>Like brew, Rust itself bootstraps. It <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#complications-of-bootstrapping\">bootstraps using the previous beta release</a> by default.</p>",
        "id": 216752576,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391061
    },
    {
        "content": "<p>You may be interested in the <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md\">previous set of Silicon documentation</a> which discusses more details.</p>",
        "id": 216752628,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391158
    },
    {
        "content": "<p>But, TL;DR, you need to set these two things in <code>config.toml</code>:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"c1\"># Instead of downloading the src/stage0.txt version of Cargo specified, use</span>\n<span class=\"c1\"># this Cargo binary instead to build all Rust code</span>\n<span class=\"n\">cargo</span> <span class=\"o\">=</span> <span class=\"s\">'/Users/shepmaster/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/cargo'</span>\n\n<span class=\"c1\"># Instead of downloading the src/stage0.txt version of the compiler</span>\n<span class=\"c1\"># specified, use this rustc binary instead as the stage0 snapshot compiler.</span>\n<span class=\"n\">rustc</span> <span class=\"o\">=</span> <span class=\"s\">'/Users/shepmaster/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rustc'</span>\n</code></pre></div>",
        "id": 216752642,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391199
    },
    {
        "content": "<p>In that example, I've installed a _nightly_ arm64 build and am using that as the bootstrap compiler. You should also be able to install a x86_64 beta compiler and use it.</p>",
        "id": 216752696,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391264
    },
    {
        "content": "<p>You can set those options via <code>--set=build.rustc=...</code> to <code>configure</code> IIRC.</p>",
        "id": 216752713,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391311
    },
    {
        "content": "<p>However, if you use the x86_64 compiler, it's possible you will run into the problems I mentioned to you and another:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/64830635/155423\">Why does my native application compiled on Apple Silicon sometimes build as arm64 and sometimes build as x86_64?</a></li>\n<li><a href=\"https://stackoverflow.com/q/64830671/155423\">Why does my native arm64 application built using an x86_64 build system fail to be code signed unless I remove the previous executable?</a></li>\n</ul>",
        "id": 216752787,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391409
    },
    {
        "content": "<p>Last I heard, <span class=\"user-mention\" data-user-id=\"324588\">@Misty De Méo</span> had some progress on this, so it may be worth double checking.</p>",
        "id": 216752847,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605391524
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> <br>\nI am trying to do a pure native build. The codesigning issues are not what worries me at the moment, because they are going to be fixed at some point. So I am focusing on what I have control over.</p>\n<p>The limitation in my case is that I am trying to make this fit into the existing bootstrap process in our formula: <a href=\"https://github.com/Homebrew/homebrew-core/blob/master/Formula/rust.rb\">https://github.com/Homebrew/homebrew-core/blob/master/Formula/rust.rb</a><br>\nYou can see we download a specific rustc source, cargo source, and cargo binary. I would welcome your help in trying to fit the prelease versions into that framework. I think it can work, because we can already build both stable and HEAD builds with the same procedure (and not overwriting config.toml). Would you have an idea how to achieve that?</p>",
        "id": 216753407,
        "sender_full_name": "FX Coudert",
        "timestamp": 1605392563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"364277\">FX Coudert</span> <a href=\"#narrow/stream/242906-t-compiler.2Farm/topic/Native.20aarch64-apple-darwin.20install.20trouble/near/216753407\">said</a>:</p>\n<blockquote>\n<p>a specific rustc source, cargo source, and cargo binary</p>\n</blockquote>\n<p>You need a <code>rustc</code> compiler as well; have you just been using the default  that the build system gets, which is beta?</p>",
        "id": 216753847,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605393246
    },
    {
        "content": "<blockquote>\n<p>not overwriting config.toml</p>\n</blockquote>\n<p>config.toml is always generated. <code>./configure</code> creates it.</p>",
        "id": 216754012,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605393425
    },
    {
        "content": "<p>It’s also possible that if you wait 5 days (probably less) this might magically fix itself as nightly will be promoted to beta soon.</p>",
        "id": 216755565,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605395427
    },
    {
        "content": "<p>Magically sounds good to me :) and I have other things to deal with as well <a href=\"https://github.com/Homebrew/homebrew-core/issues/64785\">https://github.com/Homebrew/homebrew-core/issues/64785</a></p>",
        "id": 216757767,
        "sender_full_name": "FX Coudert",
        "timestamp": 1605398366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364277\">@FX Coudert</span> now that <a href=\"https://github.com/rust-lang/rust/pull/79219\">https://github.com/rust-lang/rust/pull/79219</a> has been merged, aarch64-apple-darwin should be able to bootstrap without any config changes.</p>",
        "id": 217585727,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606101904
    },
    {
        "content": "<p>running cargo install/ or also building the packages after cloning I get frequent  errors like <code>  process didn't exit successfully: </code>/var/folders/hn/4vq1w1fd74x7nytp70xd3fkh0000gn/T/cargo-installdllv2i/release/build/syn-e9dc3218e2c8ce09/build-script-build<code> (signal: 9, SIGKILL: kill)</code>. The curious thing is that they are spurious at times. Examples I tried are zoxide and cargo-outdated and cargo-expand (I'm on rustc 1.50.0-nightly (a0d664bae 2020-11-22))</p>",
        "id": 217656988,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1606152072
    },
    {
        "content": "<p>The  sources of the errors change after each try so its not like its related to syn as far as I can tell</p>",
        "id": 217657153,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1606152151
    },
    {
        "content": "<p>seems to be already known and basically fixed <a href=\"#narrow/stream/242906-t-compiler.2Farm/topic/macOS/near/213374421\">https://rust-lang.zulipchat.com/#narrow/stream/242906-t-compiler.2Farm/topic/macOS/near/213374421</a></p>",
        "id": 217658046,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1606152615
    },
    {
        "content": "<blockquote>\n<p>signal: 9, SIGKILL: kill</p>\n</blockquote>\n<p>That sounds rather like the problem described in <a href=\"https://stackoverflow.com/q/64830671/155423\">Why does my native arm64 application built using an x86_64 build system fail to be code signed unless I remove the previous executable?</a></p>",
        "id": 217659731,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606153541
    },
    {
        "content": "<p>You might want to try the workaround described in <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README.md#porting-notes\">https://github.com/shepmaster/rust/blob/silicon/silicon/README.md#porting-notes</a></p>",
        "id": 217659962,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606153641
    },
    {
        "content": "<p>tl;dr: rebuild and install rustup as a native binary, then ensure that everything is a native binary all the way down (terminal emulator, shell, etc.)</p>",
        "id": 217660074,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606153685
    },
    {
        "content": "<p>thanks for the tips :) I tried this <a href=\"#narrow/stream/242906-t-compiler.2Farm/topic/macOS/near/213877740\">https://rust-lang.zulipchat.com/#narrow/stream/242906-t-compiler.2Farm/topic/macOS/near/213877740</a> and it worked <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span></p>",
        "id": 217660269,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1606153783
    },
    {
        "content": "<p>it seems another fix is to run cargo install --git <a href=\"https://github.com/rust-lang/rustup\">https://github.com/rust-lang/rustup</a> and then run rustup-init which then overwrites the rustc and cargo things with the arm64 native versions and then everything works as expected (so far ;))</p>",
        "id": 217942082,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1606339933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"309872\">@Benedikt Mandelkow</span> fyi a rustup release supporting aarch64-apple-darwin should be out soon(tm)</p>",
        "id": 217944033,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1606341432
    },
    {
        "content": "<p><a href=\"https://internals.rust-lang.org/t/new-rustup-release-staged-and-needing-testers/13446\">https://internals.rust-lang.org/t/new-rustup-release-staged-and-needing-testers/13446</a></p>",
        "id": 217944046,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1606341449
    },
    {
        "content": "<p>And it's now released.</p>",
        "id": 218126646,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606508505
    }
]