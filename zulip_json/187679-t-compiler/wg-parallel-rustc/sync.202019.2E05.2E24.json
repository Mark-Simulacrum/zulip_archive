[
    {
        "content": "<p>Hi all, are we going to have a meeting in 15 minutes?</p>",
        "id": 166453662,
        "sender_full_name": "lwshang",
        "timestamp": 1558705553
    },
    {
        "content": "<p>No, there was no meeting scheduled for today (as far as I know)</p>",
        "id": 166457762,
        "sender_full_name": "mw",
        "timestamp": 1558708089
    },
    {
        "content": "<p>That's fine. Shall we make it an async follow-up on current progress? <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Would you like to give some key points from the data you gathered during past week? Are they positive or negative in general?</p>\n<p>Beyond gathering data, I believe we can always discuss about how to <strong>accomplish</strong> the experiment in following phases. From my recent experience of trying <code>parallel-rustc</code>, the only convincing way to have two kinds of rustc and compare their performance is to have two copy of rust repo locally and compiled them with <code>parallel-compiler = true</code> and <code>parallel-compiler = false</code> respectively. This workflow is too inconvenient to have other users opt-in and do the comparison. Do you have any idea on how to make the experiment user-friendly?</p>",
        "id": 166458772,
        "sender_full_name": "lwshang",
        "timestamp": 1558708751
    },
    {
        "content": "<p>I think for a limited set of platforms (e.g., the ones we currently publish <code>-alt</code> builds for) we could enable parallel compiler builds on just those</p>",
        "id": 166471520,
        "sender_full_name": "simulacrum",
        "timestamp": 1558717974
    },
    {
        "content": "<p>That's linux, macOS, and Windows (64bit).</p>",
        "id": 166471630,
        "sender_full_name": "simulacrum",
        "timestamp": 1558718051
    },
    {
        "content": "<p>Unfortunately we currently enable LLVM asserts for those builds so they're slower but potentially we could disable those for the time being? cc <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span></p>",
        "id": 166471661,
        "sender_full_name": "simulacrum",
        "timestamp": 1558718076
    },
    {
        "content": "<p>We can also publish one-off try builds with the parallel compiler enabled and suggest installation via <code>rustup-toolchain-install-master</code></p>",
        "id": 166471711,
        "sender_full_name": "simulacrum",
        "timestamp": 1558718112
    },
    {
        "content": "<p>I'm not really sure what the context of this is, but the <code>*-alt</code> builders are currently <em>the</em> builders with llvm assertions enabled</p>",
        "id": 166472279,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1558718594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> ah, I thought that we had some others that ran tests -- I guess we consider bootstrapping \"the test\" though with -alt</p>",
        "id": 166476108,
        "sender_full_name": "simulacrum",
        "timestamp": 1558721164
    },
    {
        "content": "<p>we basically want to ask for community feedback on a parallel-enabled compiler and to do so would wants somewhat regular updates of a parallel compiler build</p>",
        "id": 166476144,
        "sender_full_name": "simulacrum",
        "timestamp": 1558721218
    },
    {
        "content": "<p>Our roadmap is to have two experiment phases, <code>opt-in</code> and <code>opt-out</code>. In any of them, the users should be able to switch <code>parallel-rustc</code> on or off. So how can we make it? In detail , during the first phase, what is the default behavior of the rustc? Is it a compiler with <code>parallel-compiler = false</code>? Or <code>parallel-compiler = true &amp; -Zthreads=1</code>? As far as I know, the later one is what we can provide technically. While the first one is what we should have for comparison, so that we can measure the overhead added by <code>parallel-rustc</code>. This is the contradiction that troubles me .</p>",
        "id": 166476640,
        "sender_full_name": "lwshang",
        "timestamp": 1558721622
    }
]