[
    {
        "content": "<p>We can avoid giving up the implicit token when creating the Rayon thread pool by changing the semantics of <code>build_scoped</code> so that it inherits the token from the caller and gives it to the first Rayon thread and also let the first Rayon thread execute the passed closure.</p>",
        "id": 183713047,
        "sender_full_name": "Zoxc",
        "timestamp": 1576635550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  Are you planning to fix this by not letting rustc return all tokens to cargo when you have a channel to each rustc process?</p>",
        "id": 183716428,
        "sender_full_name": "Zoxc",
        "timestamp": 1576639381
    },
    {
        "content": "<p>It was our impression that a fix inside rayon is possibly non trivial or might point at deeper questions.</p>\n<p>Current plan I believe is to keep track of the token count and just not release/acquire the first token, which should be relatively easy to implement hopefully.</p>",
        "id": 183716654,
        "sender_full_name": "simulacrum",
        "timestamp": 1576639567
    },
    {
        "content": "<p>In particular I think <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> was not sure about whether this is pointing at some underlying problem with rayon or if it's something we should try to patch over ourselves.</p>",
        "id": 183716724,
        "sender_full_name": "simulacrum",
        "timestamp": 1576639662
    },
    {
        "content": "<p>What you're proposing loosely sounds like a more invasive but maybe also more principled change.</p>",
        "id": 183716947,
        "sender_full_name": "simulacrum",
        "timestamp": 1576639880
    },
    {
        "content": "<p>Though we do have the query latch which I think has the same problem as rayon</p>",
        "id": 183717009,
        "sender_full_name": "simulacrum",
        "timestamp": 1576639931
    },
    {
        "content": "<p>(but not exactly sure there, since it is semi-plausible that we can't run into trouble there as we don't have a situation where all threads latch, but I'm not confident)</p>",
        "id": 183717030,
        "sender_full_name": "simulacrum",
        "timestamp": 1576639986
    },
    {
        "content": "<p>It's not that principled. It only fixes one case where it could happen. It can also happen when the main thread is waiting on some other thread.</p>",
        "id": 183717443,
        "sender_full_name": "Zoxc",
        "timestamp": 1576640521
    },
    {
        "content": "<p>well, it's fine if the main thread releases its token</p>",
        "id": 183745480,
        "sender_full_name": "simulacrum",
        "timestamp": 1576672151
    },
    {
        "content": "<p>we just can't have a rustc without tokens</p>",
        "id": 183745491,
        "sender_full_name": "simulacrum",
        "timestamp": 1576672159
    }
]