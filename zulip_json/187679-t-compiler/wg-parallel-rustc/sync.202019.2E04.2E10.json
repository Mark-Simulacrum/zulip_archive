[
    {
        "content": "<p>BTW, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and I were talking about trying to sync up tomorrow (2019.04.10) at 10am UTC-04:00 a bit just to kind of sketch out a \"roadmap\" for parallel compilation. But maybe it makes more sense to schedule that meeting more actively, so that e.g. <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> can attend? I'm interested in trying to get a better feeling for the steps and requirements here -- specifically not just looking at coding, but also at testing and the like. I'm specifically interested in trying to recruit some folks to help drive the process forward and relieve <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> a bit (I think <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is overburdened), and I'd like to get a better idea what we think those people would have to do.</p>",
        "id": 162947010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554841772
    },
    {
        "content": "<p>posting some things here for reference:</p>",
        "id": 163004281,
        "sender_full_name": "mw",
        "timestamp": 1554903114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> did a recent test of the parallel compiler on perf.rlo: <a href=\"https://github.com/rust-lang/rust/pull/59530\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59530\">https://github.com/rust-lang/rust/pull/59530</a></p>",
        "id": 163004348,
        "sender_full_name": "mw",
        "timestamp": 1554903141
    },
    {
        "content": "<p>these are the numbers with 8 threads and jobserver integration disabled: <a href=\"https://perf.rust-lang.org/compare.html?start=7641873f591dca86e2b31f60fc76b39553892631&amp;end=eafa54e32a3ec69221700503f21cb456de859f9e&amp;stat=wall-time\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=7641873f591dca86e2b31f60fc76b39553892631&amp;end=eafa54e32a3ec69221700503f21cb456de859f9e&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=7641873f591dca86e2b31f60fc76b39553892631&amp;end=eafa54e32a3ec69221700503f21cb456de859f9e&amp;stat=wall-time</a></p>",
        "id": 163004418,
        "sender_full_name": "mw",
        "timestamp": 1554903198
    },
    {
        "content": "<p>these are the numbers with 8 threads and jobserver integration enabled: <a href=\"https://perf.rust-lang.org/compare.html?start=2002b4b39a16760f37107cf02d7a91ff316d3073&amp;end=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;stat=wall-time\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=2002b4b39a16760f37107cf02d7a91ff316d3073&amp;end=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=2002b4b39a16760f37107cf02d7a91ff316d3073&amp;end=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;stat=wall-time</a></p>",
        "id": 163004533,
        "sender_full_name": "mw",
        "timestamp": 1554903260
    },
    {
        "content": "<p>(correct me if I'm wrong)</p>",
        "id": 163004540,
        "sender_full_name": "mw",
        "timestamp": 1554903270
    },
    {
        "content": "<p>jobserver integration seems to have some problems still, as some crates show bad regressions</p>",
        "id": 163004604,
        "sender_full_name": "mw",
        "timestamp": 1554903311
    },
    {
        "content": "<p>I don't know if we have numbers for 1 thread anywhere</p>",
        "id": 163004711,
        "sender_full_name": "mw",
        "timestamp": 1554903370
    },
    {
        "content": "<p>although here are some numbers from local test runs that <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> did (which include the 1 thread case):</p>",
        "id": 163004763,
        "sender_full_name": "mw",
        "timestamp": 1554903422
    },
    {
        "content": "<p><code>./x.py build</code>: <a href=\"https://github.com/rust-lang/rust/pull/59530#issuecomment-481557551\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59530#issuecomment-481557551\">https://github.com/rust-lang/rust/pull/59530#issuecomment-481557551</a></p>",
        "id": 163004787,
        "sender_full_name": "mw",
        "timestamp": 1554903439
    },
    {
        "content": "<p><code>./x.py check</code>: <a href=\"https://github.com/rust-lang/rust/pull/59530#issuecomment-481562350\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59530#issuecomment-481562350\">https://github.com/rust-lang/rust/pull/59530#issuecomment-481562350</a></p>",
        "id": 163004816,
        "sender_full_name": "mw",
        "timestamp": 1554903460
    },
    {
        "content": "<p>Great-- <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> btw I might be ~10-15 minutes late (but maybe not)</p>",
        "id": 163005440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554903854
    },
    {
        "content": "<p>I'm running a bit behind today but I'm going to try and get into the office</p>",
        "id": 163005450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554903861
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/59804\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59804\">https://github.com/rust-lang/rust/pull/59804</a> fixes the jobserver regression</p>",
        "id": 163005687,
        "sender_full_name": "Zoxc",
        "timestamp": 1554904071
    },
    {
        "content": "<p>Those local times are with that fix applied</p>",
        "id": 163005752,
        "sender_full_name": "Zoxc",
        "timestamp": 1554904091
    },
    {
        "content": "<p>That's great to hear, <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>!</p>",
        "id": 163006019,
        "sender_full_name": "mw",
        "timestamp": 1554904299
    },
    {
        "content": "<p>So this would be perf.rlo numbers with 8 threads and the fix: <a href=\"https://perf.rust-lang.org/compare.html?start=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time</a> ?</p>",
        "id": 163006042,
        "sender_full_name": "mw",
        "timestamp": 1554904320
    },
    {
        "content": "<p>or this? <a href=\"https://perf.rust-lang.org/compare.html?start=3750348daff89741e3153e0e120aa70a45ff5b68&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=3750348daff89741e3153e0e120aa70a45ff5b68&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=3750348daff89741e3153e0e120aa70a45ff5b68&amp;end=29efa193a1a6b5480ece517b29cc2a2ad035aa25&amp;stat=wall-time</a></p>",
        "id": 163006116,
        "sender_full_name": "mw",
        "timestamp": 1554904361
    },
    {
        "content": "<p>yeah, the second one should the comparison against master</p>",
        "id": 163006174,
        "sender_full_name": "mw",
        "timestamp": 1554904422
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>, we don't have a complete perf.rlo run for 1 thread with the fix applied, do we?</p>",
        "id": 163007207,
        "sender_full_name": "mw",
        "timestamp": 1554905125
    },
    {
        "content": "<p>No. We can do one to see if it triggered, but it may not have</p>",
        "id": 163007371,
        "sender_full_name": "Zoxc",
        "timestamp": 1554905227
    },
    {
        "content": "<p>What do you mean by \"triggered\"?</p>",
        "id": 163007424,
        "sender_full_name": "mw",
        "timestamp": 1554905278
    },
    {
        "content": "<p>As in affected performance when using 1 thread</p>",
        "id": 163007551,
        "sender_full_name": "Zoxc",
        "timestamp": 1554905360
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/59693\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59693\">https://github.com/rust-lang/rust/pull/59693</a> should be helpful too for perf, as it avoids lots of locks</p>",
        "id": 163007561,
        "sender_full_name": "Zoxc",
        "timestamp": 1554905375
    },
    {
        "content": "<p>(I'm here now)</p>",
        "id": 163007881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905619
    },
    {
        "content": "<p>catching up</p>",
        "id": 163007888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905625
    },
    {
        "content": "<p>alright</p>",
        "id": 163007898,
        "sender_full_name": "mw",
        "timestamp": 1554905628
    },
    {
        "content": "<p>maybe we should start by establishing our goals :)</p>",
        "id": 163007997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905681
    },
    {
        "content": "<p>i.e., for this discussion</p>",
        "id": 163008003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905683
    },
    {
        "content": "<p>I think the main question I'm interested in is: How can we make parallel the default asap, in a responsible way</p>",
        "id": 163008010,
        "sender_full_name": "mw",
        "timestamp": 1554905691
    },
    {
        "content": "<p>yes, that sounds good, and to dig a bit deeper in</p>",
        "id": 163008044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905711
    },
    {
        "content": "<p>what are some of the milestones along that way</p>",
        "id": 163008049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905717
    },
    {
        "content": "<p>what kind of testing do we think we need</p>",
        "id": 163008059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905726
    },
    {
        "content": "<p>so one approach would be to just switch it on for nightly in the next cycle, if the expected regressions are not too big</p>",
        "id": 163008159,
        "sender_full_name": "mw",
        "timestamp": 1554905778
    },
    {
        "content": "<p>and if there are no other blockers</p>",
        "id": 163008168,
        "sender_full_name": "mw",
        "timestamp": 1554905786
    },
    {
        "content": "<p>that would get us some testing via the standard test suite</p>",
        "id": 163008193,
        "sender_full_name": "mw",
        "timestamp": 1554905801
    },
    {
        "content": "<p>and lots of in the field testing</p>",
        "id": 163008203,
        "sender_full_name": "mw",
        "timestamp": 1554905809
    },
    {
        "content": "<p>ok so let's as the question that <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> was asking:</p>\n<p>Can we enable the infrastructure but only use one thread?</p>",
        "id": 163008209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905813
    },
    {
        "content": "<p>Or would we rather just do it <em>with</em> parallelism</p>",
        "id": 163008220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905820
    },
    {
        "content": "<p>I guess the concerns are two-fold:</p>\n<ul>\n<li>correctness </li>\n<li>performance</li>\n</ul>",
        "id": 163008240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905832
    },
    {
        "content": "<p>if the jobserver works, I think it would be better to do with N threads</p>",
        "id": 163008259,
        "sender_full_name": "mw",
        "timestamp": 1554905843
    },
    {
        "content": "<p>I think if we are going to enable it with parallelism, that's a good idea, but we should trumpet it, and try to make it an official feedback period</p>",
        "id": 163008261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905847
    },
    {
        "content": "<p>I'd say do it with parallelism, just 1 thread won't give us anything useful</p>",
        "id": 163008264,
        "sender_full_name": "Zoxc",
        "timestamp": 1554905848
    },
    {
        "content": "<p>so we get more correctness testing</p>",
        "id": 163008265,
        "sender_full_name": "mw",
        "timestamp": 1554905848
    },
    {
        "content": "<p>e.g. I imagine something like this</p>",
        "id": 163008277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905858
    },
    {
        "content": "<p>we turn it on just after beta is cut</p>",
        "id": 163008284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905867
    },
    {
        "content": "<p>we post a blog post</p>",
        "id": 163008292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905874
    },
    {
        "content": "<p>we encourage people to try it out for 3 weeks</p>",
        "id": 163008324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905882
    },
    {
        "content": "<p>reporting bugs, etc</p>",
        "id": 163008350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905887
    },
    {
        "content": "<p>and then at the end of those 3 weeks, we have some criteria that we can use to decide if we want to just leave it on</p>",
        "id": 163008360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905901
    },
    {
        "content": "<p>I think it woul be something like this: no correctness bugs (that we don't have a fix for), no perf regression of &gt;N%?</p>",
        "id": 163008386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905931
    },
    {
        "content": "<p>one question: would people have a way to opt out?</p>",
        "id": 163008446,
        "sender_full_name": "mw",
        "timestamp": 1554905978
    },
    {
        "content": "<p>other than sticking to an older nightly</p>",
        "id": 163008462,
        "sender_full_name": "mw",
        "timestamp": 1554905989
    },
    {
        "content": "<p>I would presume they could use some env var to fix to 1 thread</p>",
        "id": 163008465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905992
    },
    {
        "content": "<p>but that's a good point</p>",
        "id": 163008475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554905997
    },
    {
        "content": "<p>we definitely want some way to opt out</p>",
        "id": 163008481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906000
    },
    {
        "content": "<p>(in case of horrible bugs)</p>",
        "id": 163008540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906008
    },
    {
        "content": "<p>Do we think we would need a stronger opt out that 1 thread?</p>",
        "id": 163008566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906029
    },
    {
        "content": "<p>switching to 1 thread is a semi-opt-out :)</p>",
        "id": 163008570,
        "sender_full_name": "mw",
        "timestamp": 1554906031
    },
    {
        "content": "<p><code>-Z thread=1</code> should pretty much catch all horrible bugs</p>",
        "id": 163008577,
        "sender_full_name": "Zoxc",
        "timestamp": 1554906038
    },
    {
        "content": "<p>Yeah, I know. But I think it's strong enough, unless you have an argument why it wouldn't be</p>",
        "id": 163008590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906046
    },
    {
        "content": "<p>I mean there is always the \"old nightly\" opt out</p>",
        "id": 163008600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906052
    },
    {
        "content": "<p>we do have the option to switch back to non-parallel quickly if there is something horrible not fixed by 1 thread</p>",
        "id": 163008632,
        "sender_full_name": "mw",
        "timestamp": 1554906083
    },
    {
        "content": "<p>FWIW my thinking was to roll this out gradually so roll out a default of <code>-Z threads=1</code> first on nightly, and only after that goes well switch the defaults to parallel-by-default</p>",
        "id": 163008654,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906104
    },
    {
        "content": "<p>I was thinking we wouldn't want to roll out parallel-by-default all of a sudden (even if we're confident in it)</p>",
        "id": 163008669,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906118
    },
    {
        "content": "<p>So there is an alternative</p>",
        "id": 163008715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906125
    },
    {
        "content": "<p>which is that we roll out with a default of 1 thread, and we encourage people to <strong>opt in</strong> to parallelism</p>",
        "id": 163008728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906137
    },
    {
        "content": "<p>That's the more conservative approach</p>",
        "id": 163008736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906144
    },
    {
        "content": "<p>right yeah, and that'd give a brief period for the more intrepid to give feedback</p>",
        "id": 163008742,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906151
    },
    {
        "content": "<p>The downside is that people pay the price for parallel support</p>",
        "id": 163008745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906155
    },
    {
        "content": "<p>sounds good too</p>",
        "id": 163008746,
        "sender_full_name": "mw",
        "timestamp": 1554906156
    },
    {
        "content": "<p>But the upside is that we don't break anyone</p>",
        "id": 163008752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906163
    },
    {
        "content": "<p>and we can <strong>still</strong> trumpet it</p>",
        "id": 163008755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906166
    },
    {
        "content": "<p>I was hoping that the price of parallel support would be pretty small</p>",
        "id": 163008768,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906169
    },
    {
        "content": "<p>i.e., so they know <em>why</em> they are paying that price</p>",
        "id": 163008771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906170
    },
    {
        "content": "<p>yes, the new default would be slower</p>",
        "id": 163008772,
        "sender_full_name": "mw",
        "timestamp": 1554906170
    },
    {
        "content": "<p>if it's like 2-3% slower I think that's fine b/c we'd quickly recover it later</p>",
        "id": 163008790,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906184
    },
    {
        "content": "<p>but measurements were showing up to 20% slower</p>",
        "id": 163008806,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906191
    },
    {
        "content": "<p>and 10% for bigger crates</p>",
        "id": 163008812,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906196
    },
    {
        "content": "<p>although I think <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> you were looking into some ways to make those areas faster?</p>",
        "id": 163008823,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906207
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> by trumpet do you mean like an internals post or more broad?</p>",
        "id": 163008844,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906227
    },
    {
        "content": "<p>Basically there are three options:</p>\n<ul>\n<li>enable support for parallelism (but use only 1 thread) quietly</li>\n<li>enable support for parallelism (but use only 1 thread) loudly, asking people to opt-in</li>\n<li>enable parallelism and use &gt;1 threads loudly, asking people to opt-out</li>\n<li>enable parallelism and use &gt;1 threads quietly</li>\n</ul>",
        "id": 163008851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906231
    },
    {
        "content": "<p>I think the middle 2 are obviously better</p>",
        "id": 163008858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906238
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>  There's 2 PR open that might help. I'll open another too</p>",
        "id": 163008913,
        "sender_full_name": "Zoxc",
        "timestamp": 1554906251
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> by trumpet do you mean like an internals post or more broad?</p>\n</blockquote>\n<p>not clear, at minimum an internals post</p>",
        "id": 163008915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906252
    },
    {
        "content": "<p>kk, makes sense, agreed that being loud is good here</p>",
        "id": 163008941,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906269
    },
    {
        "content": "<p>I feel like it wouldn't be out of the question to write a <a href=\"http://blog.rust-lang.org\" target=\"_blank\" title=\"http://blog.rust-lang.org\">blog.rust-lang.org</a> post</p>",
        "id": 163008944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906271
    },
    {
        "content": "<p>this is a pretty big deal imo</p>",
        "id": 163008949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906279
    },
    {
        "content": "<p>I'd save that for \"parallel is on by default\"</p>",
        "id": 163008955,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906285
    },
    {
        "content": "<p>personally, I don't see why we can't write two posts :)</p>",
        "id": 163008968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906293
    },
    {
        "content": "<p>yeah</p>",
        "id": 163008969,
        "sender_full_name": "mw",
        "timestamp": 1554906295
    },
    {
        "content": "<p>lol true</p>",
        "id": 163008994,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906311
    },
    {
        "content": "<p>maybe a short one now like:</p>\n<p>Parallel experimentation period!</p>\n<p>then another one like</p>\n<p>Parllel on by default!</p>",
        "id": 163008997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906313
    },
    {
        "content": "<p>the latter would have more numbers etc</p>",
        "id": 163009001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906318
    },
    {
        "content": "<p>We probably want to be a bit careful in our framing</p>",
        "id": 163009007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906324
    },
    {
        "content": "<p>I have nothing against that :)</p>",
        "id": 163009012,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906327
    },
    {
        "content": "<p>i.e., maybe we say that we expect to turn it off again</p>",
        "id": 163009022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906333
    },
    {
        "content": "<p>so it's more like \"check out what's coming\"</p>",
        "id": 163009026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906341
    },
    {
        "content": "<p>sounds acceptable to me</p>",
        "id": 163009040,
        "sender_full_name": "mw",
        "timestamp": 1554906351
    },
    {
        "content": "<p>basically I think we should be clear that it is not a failure if we find a bunch of bugs and turn it off :)</p>",
        "id": 163009048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906358
    },
    {
        "content": "<p>but just \"progress\"</p>",
        "id": 163009094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906364
    },
    {
        "content": "<p>anyway, we can discuss with core team tongiht, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>, re: blog post vs internals</p>",
        "id": 163009114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906382
    },
    {
        "content": "<p>oh no debate from me, I'd consider either fine</p>",
        "id": 163009131,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906397
    },
    {
        "content": "<p>I just happen to think (a) we underuse the blog and (b) we need people to know about compile time progress</p>",
        "id": 163009132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906400
    },
    {
        "content": "<p>agreed :)</p>",
        "id": 163009142,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906415
    },
    {
        "content": "<p>so, when would we want to target this? the next release is very soon (this week?)</p>",
        "id": 163009178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906442
    },
    {
        "content": "<p>this conversation is turning out a bit differently than I expected</p>",
        "id": 163009198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906459
    },
    {
        "content": "<p>so let me ask a different question</p>",
        "id": 163009200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906462
    },
    {
        "content": "<blockquote>\n<p>so, when would we want to target this? the next release is very soon (this week?)</p>\n</blockquote>",
        "id": 163009212,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906469
    },
    {
        "content": "<p>tomorrow!</p>",
        "id": 163009216,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906471
    },
    {
        "content": "<p>what are the dependencies we feel we need to do this middle path</p>",
        "id": 163009217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906473
    },
    {
        "content": "<p>obviously there were some PRs that have to land</p>",
        "id": 163009232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> -- you would know best, are there still known performance cases that are (say) &gt;20% perf loss?</p>",
        "id": 163009284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906501
    },
    {
        "content": "<p>(once those PRs land)</p>",
        "id": 163009289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906506
    },
    {
        "content": "<p>It sounded like <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> had a few PRs to speed up those cases</p>",
        "id": 163009293,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906507
    },
    {
        "content": "<p>and I'd imagine we'd profile afterwards to see the impact and evaluate which strategy to take</p>",
        "id": 163009303,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906520
    },
    {
        "content": "<p>I don't know the impact of the PRs yet</p>",
        "id": 163009343,
        "sender_full_name": "Zoxc",
        "timestamp": 1554906554
    },
    {
        "content": "<p>so maybe we should set some thresholds</p>",
        "id": 163009363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906576
    },
    {
        "content": "<p>If we start with thread=1, when will we escalate to multiple threads?</p>",
        "id": 163009372,
        "sender_full_name": "Zoxc",
        "timestamp": 1554906585
    },
    {
        "content": "<p>and basically we try to do this on the next release after those thresholds are met?</p>",
        "id": 163009382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906592
    },
    {
        "content": "<p>another question: would this affect other users of librustc much (rustdoc, RLS, etc)</p>",
        "id": 163009383,
        "sender_full_name": "mw",
        "timestamp": 1554906592
    },
    {
        "content": "<p>I would naively propose that if a big crate regresses more than 5% we shouldn't release it</p>",
        "id": 163009466,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906619
    },
    {
        "content": "<p>but little crates regressing 10-20% is fine</p>",
        "id": 163009479,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906630
    },
    {
        "content": "<p>sounds reasonable</p>",
        "id": 163009495,
        "sender_full_name": "mw",
        "timestamp": 1554906646
    },
    {
        "content": "<p>Another way to put it would be something like: regressions are ok if they are &lt;5% OR &lt;.1 sec or something</p>",
        "id": 163009546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906670
    },
    {
        "content": "<p>(so it is independent of crate size)</p>",
        "id": 163009567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906686
    },
    {
        "content": "<p>seems reasonable to me</p>",
        "id": 163009605,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906715
    },
    {
        "content": "<p>everything should be &lt;5% or &lt;5s</p>",
        "id": 163009659,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906724
    },
    {
        "content": "<blockquote>\n<p>If we start with thread=1, when will we escalate to multiple threads?</p>\n</blockquote>\n<p>good question -- I think this is something we would want to cover in the blog post too. i.e., what is the overall rollout plan?</p>",
        "id": 163009672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906731
    },
    {
        "content": "<p>I imagine we'd go through the stages one release at a time</p>",
        "id": 163009698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906753
    },
    {
        "content": "<p>I would naively propose \"a week with no major issues\"</p>",
        "id": 163009699,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906754
    },
    {
        "content": "<p>presuming no show stopper problems</p>",
        "id": 163009704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906756
    },
    {
        "content": "<p>oh I don't think we need to wait a whole cycle</p>",
        "id": 163009715,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906765
    },
    {
        "content": "<blockquote>\n<p>I would naively propose \"a week with no major issues\"</p>\n</blockquote>\n<p>or that ;) much more aggressive than me</p>",
        "id": 163009719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906766
    },
    {
        "content": "<p>we just want to give people time to test</p>",
        "id": 163009723,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906769
    },
    {
        "content": "<p>in the sense that the purpose of \"parallel capable but default not parallel\" is basically asking everyone to do testing and report back</p>",
        "id": 163009762,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906791
    },
    {
        "content": "<p>(aka on some internals thread)</p>",
        "id": 163009767,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906795
    },
    {
        "content": "<p>1 week seems aggressive -- maybe 2 weeks? but this is a minor point. The main thing is that you imagine going from \"enabled but with 1 thread\" to \"enabled by default\" within 1 release cycle</p>",
        "id": 163009780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906806
    },
    {
        "content": "<p>barring anything major coming up yeah</p>",
        "id": 163009793,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906821
    },
    {
        "content": "<p>I .. think I like it. \"Anything major\" being either correctness problems or perf regressions that meet those critera we outlined above?</p>",
        "id": 163009858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906852
    },
    {
        "content": "<p>yeah</p>",
        "id": 163009869,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906866
    },
    {
        "content": "<p>as a general \"if we feel like there's too much outcry we probably shoudln't enable it\"</p>",
        "id": 163009884,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906874
    },
    {
        "content": "<p>\"or if our thresholds aren't met we won't enable it\"</p>",
        "id": 163009891,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906881
    },
    {
        "content": "<p>although I do think we should shoot for an almost universal win for parallel actually enabled by default</p>",
        "id": 163009908,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906893
    },
    {
        "content": "<blockquote>\n<p>as a general \"if we feel like there's too much outcry we probably shoudln't enable it\"</p>\n</blockquote>\n<p>right, ultimately it comes down to this, but I'm trying to do a bit better</p>",
        "id": 163009917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906902
    },
    {
        "content": "<p>the \"&lt;5% or &lt;5s\" threshold I was thinking was only for \"parallel capable, single threaded\"</p>",
        "id": 163009931,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906906
    },
    {
        "content": "<p>even if we don't publicize those thresholds :)</p>",
        "id": 163009939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906918
    },
    {
        "content": "<p>but often it's kind of hard to judge</p>",
        "id": 163009947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906924
    },
    {
        "content": "<p>lol good point</p>",
        "id": 163009950,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906926
    },
    {
        "content": "<p>3 weeks of people satisfied there's no major correctness bugs or major regressions?</p>",
        "id": 163009971,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906943
    },
    {
        "content": "<p>yes, I feel good about that</p>",
        "id": 163010034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906967
    },
    {
        "content": "<p>3 weeks and then we would test default to N threads?</p>",
        "id": 163010042,
        "sender_full_name": "mw",
        "timestamp": 1554906973
    },
    {
        "content": "<p>major correctness bug being \"requires more than 100 loc to fix\" and major regressions being \"&gt;5% runtime with parallel enabled\"</p>",
        "id": 163010047,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906974
    },
    {
        "content": "<blockquote>\n<p>3 weeks of people satisfied there's no major correctness bugs or major regressions?</p>\n</blockquote>\n<p>actually maybe it's even <em>too</em> long</p>",
        "id": 163010061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906982
    },
    {
        "content": "<p>maybe 2 weeks is better, since that then gives us 2 weeks of testing with N&gt;1</p>",
        "id": 163010076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554906992
    },
    {
        "content": "<p>3 hours of people satisfied!</p>",
        "id": 163010081,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554906995
    },
    {
        "content": "<p>2 sgtm</p>",
        "id": 163010100,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907006
    },
    {
        "content": "<p>and then 2 weeks for being sloppy :P</p>",
        "id": 163010112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907011
    },
    {
        "content": "<p>ok, this sounds all good, but :)</p>",
        "id": 163010144,
        "sender_full_name": "mw",
        "timestamp": 1554907034
    },
    {
        "content": "<p>(in all seriousness the week <em>of the</em> release I'd prefer to have nothing left to do, so we get 1 week to either pull it out, or write a triumphant blog post)</p>",
        "id": 163010145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907036
    },
    {
        "content": "<p>Hold on, before the concern, let's lay out the schedule to be clear</p>",
        "id": 163010155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907045
    },
    {
        "content": "<p>I want to make sure we have the bandwidth to do this</p>",
        "id": 163010159,
        "sender_full_name": "mw",
        "timestamp": 1554907047
    },
    {
        "content": "<p>Yes, I want to come to that</p>",
        "id": 163010164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907052
    },
    {
        "content": "<p>But first I want to be  sure we're all on same page on what we said so far</p>",
        "id": 163010181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907062
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 163010202,
        "sender_full_name": "mw",
        "timestamp": 1554907072
    },
    {
        "content": "<p>(I don't mind giving this a stab to lay it out, I don't see anyone else typing and I'm not sure if I should be able to)</p>",
        "id": 163010333,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907141
    },
    {
        "content": "<ul>\n<li>Establish thresholds for what a \"major regression\" is</li>\n<li>On next release after we are satisfied no major regressions exist:<br>\n    - Enable with threads=1 after release for 2 weeks, making an annoucnement and requesting feedback<br>\n    - Enable with threads&gt;1 after 2 weeks, if all goes well, else disable and fix bugs, try again next release</li>\n<li>If all goes well, we make triumphant blog post 5 weeks in saying \"We are leaving this on by default now, we think\"</li>\n</ul>",
        "id": 163010363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907154
    },
    {
        "content": "<blockquote>\n<p>(I don't mind giving this a stab to lay it out, I don't see anyone else typing and I'm not sure if I should be able to)</p>\n</blockquote>\n<p>I think you can't in the group channels :)</p>",
        "id": 163010399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907188
    },
    {
        "content": "<blockquote>\n<p>I think you can't in the group channels :)</p>\n</blockquote>\n<p>A distracting feature anyway :)</p>",
        "id": 163010490,
        "sender_full_name": "mw",
        "timestamp": 1554907219
    },
    {
        "content": "<p>that timeline assumes 1 week (ish) to get to the point we're ready to enable parallel capable compilers by default, right?</p>",
        "id": 163010504,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907230
    },
    {
        "content": "<p>so does that mean that the next cycle is out of the question?</p>",
        "id": 163010543,
        "sender_full_name": "mw",
        "timestamp": 1554907249
    },
    {
        "content": "<p>I don't quite know what you mean</p>",
        "id": 163010548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907250
    },
    {
        "content": "<blockquote>\n<p>so does that mean that the next cycle is out of the question?</p>\n</blockquote>\n<p>I think it is, but I think 6 weeks from now is plausible</p>",
        "id": 163010567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907262
    },
    {
        "content": "<p>you said in 5 weeks, a week before the 1.35 release, we'd have a big blog post</p>",
        "id": 163010589,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907273
    },
    {
        "content": "<p>but 4 weeks backwards is one week from now</p>",
        "id": 163010603,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907285
    },
    {
        "content": "<p>because I'll be on parental leave June and July, meaning I wouldn't be available much</p>",
        "id": 163010615,
        "sender_full_name": "mw",
        "timestamp": 1554907295
    },
    {
        "content": "<p>so we have the next week to get ready to ship a parallel compiler</p>",
        "id": 163010618,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907298
    },
    {
        "content": "<p>then 2 weeks to test it</p>",
        "id": 163010623,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907301
    },
    {
        "content": "<p>then 2 weeks to test parallel-by-default</p>",
        "id": 163010627,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907306
    },
    {
        "content": "<p>I did not intend to start with the upcoming release</p>",
        "id": 163010633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907309
    },
    {
        "content": "<p>because we still have pending PRs etc</p>",
        "id": 163010651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907321
    },
    {
        "content": "<p>but I guess we should talk about that</p>",
        "id": 163010705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907327
    },
    {
        "content": "<blockquote>\n<p>because I'll be on parental leave June and July, meaning I wouldn't be available much</p>\n</blockquote>\n<p>e.g., this</p>",
        "id": 163010719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907331
    },
    {
        "content": "<p>also I know I personally will be in Greece from mid July - mid August, and then there is rustconf etc</p>",
        "id": 163010742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907356
    },
    {
        "content": "<p>of course I don't insist that this should wait for me being there</p>",
        "id": 163010749,
        "sender_full_name": "mw",
        "timestamp": 1554907360
    },
    {
        "content": "<p>We can test thread=1 this cycle and &gt;1 next too</p>",
        "id": 163010754,
        "sender_full_name": "Zoxc",
        "timestamp": 1554907364
    },
    {
        "content": "<p>so nightly becomes 1.36 tomorrow (ish)</p>",
        "id": 163010778,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907384
    },
    {
        "content": "<p>nightly becomes 1.37 on may 23</p>",
        "id": 163010815,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907404
    },
    {
        "content": "<p>1.38 on june 4</p>",
        "id": 163010835,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907420
    },
    {
        "content": "<p>er, july 4</p>",
        "id": 163010842,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907426
    },
    {
        "content": "<p>right, so per the plan I outlined, we either start with threads=1 next week or something, or else on may 23. I was imagining starting Friday, May 24, which would put the 2 week point around Friday, June 7</p>",
        "id": 163010909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907452
    },
    {
        "content": "<p>ok so a parallel-by-default compiler on <del>June</del> July 4 reaches beta?</p>",
        "id": 163010945,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907486
    },
    {
        "content": "<p>where the 1.37 release will have a parallel-by-default compiler?</p>",
        "id": 163010952,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907493
    },
    {
        "content": "<blockquote>\n<p>ok so a parallel-by-default compiler on June 4 reaches beta?</p>\n</blockquote>\n<p>do you mean July 4</p>",
        "id": 163010974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907507
    },
    {
        "content": "<p>er yes</p>",
        "id": 163010983,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907511
    },
    {
        "content": "<p>that was what I had in mind</p>",
        "id": 163010988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907517
    },
    {
        "content": "<p>ok so we have until July 4 to enable parallel by defaulting, giving us 12 weeks of runway</p>",
        "id": 163011032,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907551
    },
    {
        "content": "<p>I guess that means that it will hit stable in .. August 8?</p>",
        "id": 163011034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907552
    },
    {
        "content": "<p>(from today)</p>",
        "id": 163011039,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907554
    },
    {
        "content": "<p>right before RustConf :)</p>",
        "id": 163011098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907568
    },
    {
        "content": "<p>August 15</p>",
        "id": 163011104,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907572
    },
    {
        "content": "<p>assuming all goes well, of course</p>",
        "id": 163011111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907578
    },
    {
        "content": "<p>wait, I don't understand</p>",
        "id": 163011113,
        "sender_full_name": "mw",
        "timestamp": 1554907578
    },
    {
        "content": "<p>ok, Aug 15</p>",
        "id": 163011116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907580
    },
    {
        "content": "<p>when would be the testing cycle?</p>",
        "id": 163011122,
        "sender_full_name": "mw",
        "timestamp": 1554907588
    },
    {
        "content": "<p>Roughly speaking (not using the 2 weeks niko mentioned above which we could still do of course) the next 6 weeks are \"test a threads=1 compiler\" and the next 6 weeks is \"test a threads=N compiler\"</p>",
        "id": 163011163,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907630
    },
    {
        "content": "<p>were that's what we're releasing as nightlies</p>",
        "id": 163011174,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907640
    },
    {
        "content": "<p>and that brings us to July 4</p>",
        "id": 163011183,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907646
    },
    {
        "content": "<p>ok</p>",
        "id": 163011210,
        "sender_full_name": "mw",
        "timestamp": 1554907667
    },
    {
        "content": "<p>i.e. try to land the pending optimizations and then switch nightly</p>",
        "id": 163011285,
        "sender_full_name": "mw",
        "timestamp": 1554907692
    },
    {
        "content": "<p>to 1 thread?</p>",
        "id": 163011291,
        "sender_full_name": "mw",
        "timestamp": 1554907695
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>Week of</th>\n<th>What happens</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>May 20</td>\n<td>release happens, we enable threads=1</td>\n</tr>\n<tr>\n<td>May 27</td>\n<td>testing period, week 1</td>\n</tr>\n<tr>\n<td>June 3</td>\n<td>testing period, week 2, assuming all goes well we enable threads=N</td>\n</tr>\n<tr>\n<td>June 10</td>\n<td>testing period, week 3</td>\n</tr>\n<tr>\n<td>June 17</td>\n<td>testing period, week 4, end of week is \"d-day\"</td>\n</tr>\n<tr>\n<td>June 24</td>\n<td>\"decision day\" -- either back out, or let it ride the trains</td>\n</tr>\n<tr>\n<td>July 1</td>\n<td>we cut the beta</td>\n</tr>\n</tbody>\n</table>",
        "id": 163011296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907700
    },
    {
        "content": "<p>I would say we could probably enable threads=1 on nightly in this cycle if we're confident, no?</p>",
        "id": 163011350,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907756
    },
    {
        "content": "<p>ok, so that's different from what <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> just said :)</p>",
        "id": 163011352,
        "sender_full_name": "mw",
        "timestamp": 1554907760
    },
    {
        "content": "<p>(although maybe turn it back off just before the branch to beta)</p>",
        "id": 163011358,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907768
    },
    {
        "content": "<p>(it is different from what I said)</p>",
        "id": 163011363,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907775
    },
    {
        "content": "<blockquote>\n<p>ok, so that's different from what <span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> just said :)</p>\n</blockquote>\n<p>but mine has a prettier table</p>",
        "id": 163011378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907788
    },
    {
        "content": "<p>let me read what alex just wrote :)</p>",
        "id": 163011382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907795
    },
    {
        "content": "<p>ok, that is quite different from what alex said, yes</p>",
        "id": 163011448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907812
    },
    {
        "content": "<p>I'd basically propose \"ASAP as we feel confident turn on threads=1 in nightly\"</p>",
        "id": 163011466,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907826
    },
    {
        "content": "<p>and delay threads=N in nightly to <em>at most</em> June 3 week</p>",
        "id": 163011488,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907842
    },
    {
        "content": "<p>ok, that feels quite different from what we were discussing, but I'm open to it as well</p>",
        "id": 163011493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907845
    },
    {
        "content": "<p>do you mean that when we cut beta, it would have threads=1</p>",
        "id": 163011505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907852
    },
    {
        "content": "<p>I'd say we turn on thread=1 as soon as performance is good, if there's time left in the cycle</p>",
        "id": 163011509,
        "sender_full_name": "Zoxc",
        "timestamp": 1554907854
    },
    {
        "content": "<p>so I think that tying this to release cycles (Vs 2 week increments) is also good</p>",
        "id": 163011533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907871
    },
    {
        "content": "<p>that depends on if we have threads=1 at the beta cut, on performance numbers</p>",
        "id": 163011535,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907872
    },
    {
        "content": "<p>it was what I initially wanted :) but I thought we wanted to move faster</p>",
        "id": 163011559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907885
    },
    {
        "content": "<p>if threads=1 is so bad we can't live with ourselves we could turn it back off just before beta</p>",
        "id": 163011577,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907893
    },
    {
        "content": "<blockquote>\n<p>that depends on if we have threads=1 at the beta cut, on performance numbers</p>\n</blockquote>\n<p>right, so, if all goes well, a \"parallel capable, but not enabled\" rustc would ship as beta</p>",
        "id": 163011596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907901
    },
    {
        "content": "<p>right and that I imagine will be contentious and we probably won't want to do</p>",
        "id": 163011613,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907918
    },
    {
        "content": "<p>perhaps we should also allow people to turn parallel on with that beta?</p>",
        "id": 163011615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907918
    },
    {
        "content": "<p>i.e., it's \"parallel opt-in\"</p>",
        "id": 163011671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907932
    },
    {
        "content": "<p>hm that's not a terrible idea actually</p>",
        "id": 163011673,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907933
    },
    {
        "content": "<p>I forget what we did with incremental in this regard</p>",
        "id": 163011693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907940
    },
    {
        "content": "<p>but I personally think it makes sense</p>",
        "id": 163011700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907947
    },
    {
        "content": "<p>incremental was somewhat different where not using it didn't have a perf impact</p>",
        "id": 163011715,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907957
    },
    {
        "content": "<p>but w/ threads not using it can cause problems</p>",
        "id": 163011721,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554907963
    },
    {
        "content": "<p>well it causes a perf impact</p>",
        "id": 163011741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907974
    },
    {
        "content": "<p>but not (we believe) correctness problems</p>",
        "id": 163011746,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907977
    },
    {
        "content": "<p>regardless the thing I don't remember is if we exposed incremental on an opt-in basis also on stable</p>",
        "id": 163011768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907990
    },
    {
        "content": "<p>we just boiled the frog slowly with incremental :)</p>",
        "id": 163011775,
        "sender_full_name": "mw",
        "timestamp": 1554907995
    },
    {
        "content": "<p>before we made it the default</p>",
        "id": 163011778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554907996
    },
    {
        "content": "<p>anyway, I would personally favor that we enable parallel support but \"opt-in\" for 1 release cycle, and we ship it like that (presuming we haven't backed it out)</p>",
        "id": 163011826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908038
    },
    {
        "content": "<p>we might have stabilized it in the compiler</p>",
        "id": 163011830,
        "sender_full_name": "mw",
        "timestamp": 1554908041
    },
    {
        "content": "<p>it feels simpler</p>",
        "id": 163011872,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908044
    },
    {
        "content": "<p>but cargo would not default to it</p>",
        "id": 163011878,
        "sender_full_name": "mw",
        "timestamp": 1554908049
    },
    {
        "content": "<p>I don't like the idea of us having to do some complex dance where beta turns it off and is not the code we've been testing etc</p>",
        "id": 163011902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908068
    },
    {
        "content": "<p>alright so this sounds like a plan? Shoot for threads=1 by the next release, then shoot for threads=N on the next release</p>",
        "id": 163011915,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908079
    },
    {
        "content": "<p>May 23 == threads=1<br>\nJuly 4 == threads=N</p>",
        "id": 163011925,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908086
    },
    {
        "content": "<p>sgtm</p>",
        "id": 163011962,
        "sender_full_name": "mw",
        "timestamp": 1554908109
    },
    {
        "content": "<p>I think as long as we are clear that we are moving towards \"parallel by default\" and that we have no major regressions, it's ok -- particularly if you can <strong>opt-in</strong> on stable, which would also help to eliminate regressions (unless there are bugs)</p>",
        "id": 163011967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908114
    },
    {
        "content": "<p>So I want to be clear on this point: are we allowing opt-in on stable ? (I think we should)</p>",
        "id": 163011982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908127
    },
    {
        "content": "<p>but it's advertised as being \"experimental\", hence it is not the default</p>",
        "id": 163011994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908137
    },
    {
        "content": "<p>yes</p>",
        "id": 163012060,
        "sender_full_name": "mw",
        "timestamp": 1554908163
    },
    {
        "content": "<p>agreed yes we should</p>",
        "id": 163012071,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908169
    },
    {
        "content": "<p>so by May 23 we promote <code>-Zthreads</code> to something like <code>-Cthreads</code></p>",
        "id": 163012082,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908186
    },
    {
        "content": "<p>ok. So now the question of availability -- what exactly does it <em>take</em> to do this? It seems like it mostly require monitoring the internals thread and bugs filed</p>",
        "id": 163012089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908196
    },
    {
        "content": "<p>I wonder if we should involve the release team in this discussion</p>",
        "id": 163012094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908203
    },
    {
        "content": "<p>I kind of think yes :)</p>",
        "id": 163012097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908206
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span></p>",
        "id": 163012104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908214
    },
    {
        "content": "<p>(times like these I wish everyone was on Zulip <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span>)</p>",
        "id": 163012120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908225
    },
    {
        "content": "<blockquote>\n<p>so by May 23 we promote <code>-Zthreads</code> to something like <code>-Cthreads</code></p>\n</blockquote>\n<p>i was going to mention that -- we probably want to stabilize the <em>option</em> asap, but just have it be a no-op or something to start?</p>",
        "id": 163012167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908273
    },
    {
        "content": "<p>like, how specifically should \"Opt-in\" work? I imagine an environment variable is most convenient</p>",
        "id": 163012247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908304
    },
    {
        "content": "<p>well, if we stabilize now, it would still only be available on nightly</p>",
        "id": 163012249,
        "sender_full_name": "mw",
        "timestamp": 1554908305
    },
    {
        "content": "<p>so that would be fine</p>",
        "id": 163012256,
        "sender_full_name": "mw",
        "timestamp": 1554908311
    },
    {
        "content": "<p>yes</p>",
        "id": 163012258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908313
    },
    {
        "content": "<p>an env var that's ignored in non-parallel-capable compilers seems reasonable to me</p>",
        "id": 163012277,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908336
    },
    {
        "content": "<p>sounds good</p>",
        "id": 163012295,
        "sender_full_name": "mw",
        "timestamp": 1554908347
    },
    {
        "content": "<p>I still use <code>CARGO_INCREMENTAL=0</code> or whatever it is from time to time :)</p>",
        "id": 163012308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908357
    },
    {
        "content": "<p>we have a tradition for using env vars like that</p>",
        "id": 163012313,
        "sender_full_name": "mw",
        "timestamp": 1554908362
    },
    {
        "content": "<p>(mostly to sanity check if something is an incremental bug...it (almost) never is...)</p>",
        "id": 163012332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908378
    },
    {
        "content": "<p>do we therefore have to modify cargo to respect this variable?</p>",
        "id": 163012415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908408
    },
    {
        "content": "<p>nah I think it'd be <code>RUSTC_THREADS=N</code></p>",
        "id": 163012430,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908417
    },
    {
        "content": "<p>b/c cargo wouldn't do anything with it</p>",
        "id": 163012433,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908421
    },
    {
        "content": "<p>unless we want cargo to pass <code>-Cthreads=1</code> to rustc</p>",
        "id": 163012437,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908427
    },
    {
        "content": "<p>via that env var</p>",
        "id": 163012444,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908430
    },
    {
        "content": "<p>I think <code>-j &lt;threads&gt;</code> is a better option =P</p>",
        "id": 163012447,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908433
    },
    {
        "content": "<p>(either way is fine by me)</p>",
        "id": 163012449,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908434
    },
    {
        "content": "<p>would cargo's job server just work?</p>",
        "id": 163012451,
        "sender_full_name": "mw",
        "timestamp": 1554908435
    },
    {
        "content": "<p>that's basically what I was asking</p>",
        "id": 163012453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908436
    },
    {
        "content": "<p><code>-j</code> won't work because you really do want parallel processes</p>",
        "id": 163012476,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908454
    },
    {
        "content": "<p>I don't really have a strong opinion here on how it works but I think we should agree :)</p>",
        "id": 163012479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908458
    },
    {
        "content": "<p>but you don't want parallel rustc may</p>",
        "id": 163012480,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908459
    },
    {
        "content": "<p>maybe*</p>",
        "id": 163012481,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908460
    },
    {
        "content": "<p>does cargo always create a jobserver?</p>",
        "id": 163012500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908472
    },
    {
        "content": "<p>in the end it will all be <code>-j</code> but for now while we're testing they need to be separable</p>",
        "id": 163012502,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908475
    },
    {
        "content": "<p>cargo does always create a jobserver, but it's not suitable for this I think</p>",
        "id": 163012512,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908483
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 163012518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908490
    },
    {
        "content": "<p><code>-j</code> and the jobserver govern processes as well as the threads of rustc</p>",
        "id": 163012527,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908504
    },
    {
        "content": "<p>Why won't <code>-j</code> work? And we'll always use cargo's jobserver</p>",
        "id": 163012542,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908513
    },
    {
        "content": "<p>reason I am asking: when rustc is compiling in parallel, we probably want a jobserver active, right? but I guess it must be active anyway because LLVM is parallel by default?</p>",
        "id": 163012548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908515
    },
    {
        "content": "<p>if you hit a parallel bug you want to turn off parallel rustc but not parallal cargo</p>",
        "id": 163012594,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908524
    },
    {
        "content": "<p>yes, sorry, I\"m asking a different question</p>",
        "id": 163012607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908534
    },
    {
        "content": "<p>I agree they should be different  knobs</p>",
        "id": 163012609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908538
    },
    {
        "content": "<p>I'm mostly checking that if you TURN ON parallel rustc, you will get jobserver integration</p>",
        "id": 163012615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908545
    },
    {
        "content": "<p><code>cargo rustc -- -j1</code> will turn it off</p>",
        "id": 163012620,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes turning on parallel rustc will always use a jobserver</p>",
        "id": 163012625,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908567
    },
    {
        "content": "<p>also, <code>RUSTC_THREADS=1</code> looks like use one thread, but we probably want a binary \"on or off\" flag, right?</p>",
        "id": 163012632,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908571
    },
    {
        "content": "<p>in that case, maybe <code>RUSTC_THREADED=1</code> ?</p>",
        "id": 163012635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908578
    },
    {
        "content": "<p>sgtm</p>",
        "id": 163012638,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908581
    },
    {
        "content": "<p>that's a better idea yeah</p>",
        "id": 163012664,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908592
    },
    {
        "content": "<p>yes, one thread still means parallel LLVM</p>",
        "id": 163012668,
        "sender_full_name": "mw",
        "timestamp": 1554908596
    },
    {
        "content": "<p><code>RUSTC_PARALLEL=1</code>?</p>",
        "id": 163012674,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908602
    },
    {
        "content": "<p>better</p>",
        "id": 163012679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908605
    },
    {
        "content": "<p>eh we can gloss over that</p>",
        "id": 163012681,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908607
    },
    {
        "content": "<p>the fact that <code>RUSTC_PARALLEL=0</code> still runs llvm in parallel</p>",
        "id": 163012689,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908618
    },
    {
        "content": "<p>yeah I mean it's a nit pick :) but let's run with <code>RUSTC_PARALLEL=1</code> to start</p>",
        "id": 163012703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908627
    },
    {
        "content": "<p>oh I see, yeah, whatever</p>",
        "id": 163012711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908632
    },
    {
        "content": "<p>we'll probably delete this option eventually anyway</p>",
        "id": 163012764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908649
    },
    {
        "content": "<p>Probably want to specify the threads. 8 threads is faster than me than 16 on 8 cores. Might not be true on Intel =P</p>",
        "id": 163012765,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908650
    },
    {
        "content": "<p>Hmm, I don't think most people will want that. Maybe we want a <em>way</em> to specify the threads</p>",
        "id": 163012790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908672
    },
    {
        "content": "<p>ACtually</p>",
        "id": 163012810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908684
    },
    {
        "content": "<p>this would be a great point to ask people to give feedback on</p>",
        "id": 163012817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908689
    },
    {
        "content": "<p>maybe the value can be a percentage</p>",
        "id": 163012823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908694
    },
    {
        "content": "<p>I think <code>-Z</code> is fine for that for now? If necessary we can stabilize <code>-j</code> or <code>-Cthreads</code> in rustc itself</p>",
        "id": 163012825,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908695
    },
    {
        "content": "<p>e.g., <code>RUSTC_PARALLEL=1</code> means \"Use 100% of cores\" :)</p>",
        "id": 163012854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908713
    },
    {
        "content": "<p>RUSTC_PARALLEL=0.5 means \"use 50% of cores\"</p>",
        "id": 163012870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908724
    },
    {
        "content": "<p>nah I like the idea of 0/1 on/off</p>",
        "id": 163012871,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908724
    },
    {
        "content": "<p>etc</p>",
        "id": 163012873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908725
    },
    {
        "content": "<blockquote>\n<p>nah I like the idea of 0/1 on/off</p>\n</blockquote>\n<p>so, long term</p>",
        "id": 163012892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908736
    },
    {
        "content": "<p>because we want some heuristic in rustc eventually</p>",
        "id": 163012896,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908739
    },
    {
        "content": "<p>people are not going to specify the number of threads</p>",
        "id": 163012897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908740
    },
    {
        "content": "<p>which just does everything automatically</p>",
        "id": 163012901,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908744
    },
    {
        "content": "<p>but it might be helpful for us to have data on</p>",
        "id": 163012902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908745
    },
    {
        "content": "<p>true</p>",
        "id": 163012913,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908749
    },
    {
        "content": "<p>i.e., if it's consistently true that 0.5 works best...</p>",
        "id": 163012925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908761
    },
    {
        "content": "<p>that's a simple heuristc :)</p>",
        "id": 163012968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908765
    },
    {
        "content": "<p>this seems like something people can help us with, if we are asking for feedback</p>",
        "id": 163012980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908773
    },
    {
        "content": "<p>ok seems reasonable</p>",
        "id": 163012985,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908778
    },
    {
        "content": "<p>we parse <code>RUSTC_PARALLEL</code> as a float and multiply it by <code>num_cpus::get</code></p>",
        "id": 163012993,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908787
    },
    {
        "content": "<p>and take <code>max(RUSTC_PARALLEL * NUM_CPUS, 1)</code></p>",
        "id": 163013023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908806
    },
    {
        "content": "<p>haha, so weird</p>",
        "id": 163013025,
        "sender_full_name": "mw",
        "timestamp": 1554908807
    },
    {
        "content": "<p>I like it</p>",
        "id": 163013030,
        "sender_full_name": "mw",
        "timestamp": 1554908809
    },
    {
        "content": "<p>That sounds horrible =P</p>",
        "id": 163013053,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908823
    },
    {
        "content": "<p>since I guess you don't want to compile with 0 threads :P</p>",
        "id": 163013055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908824
    },
    {
        "content": "<p>I don't really care exactly what we use, but I think we shouldn't require people to know how many cores they have :)</p>",
        "id": 163013079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908840
    },
    {
        "content": "<p>sorry I don't know how to thumbs up a thing but I would if I could</p>",
        "id": 163013087,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554908843
    },
    {
        "content": "<p>haha</p>",
        "id": 163013096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908849
    },
    {
        "content": "<p>And I don't like RUSTC_PARALLEL as a stable option</p>",
        "id": 163013104,
        "sender_full_name": "Zoxc",
        "timestamp": 1554908853
    },
    {
        "content": "<p>I didn't imagine it as \"stable\" in the sense of supported long term, but maybe that's problematic</p>",
        "id": 163013199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908886
    },
    {
        "content": "<p>I don't think RUSTC_PARALLEL would be around forever, right?</p>",
        "id": 163013206,
        "sender_full_name": "mw",
        "timestamp": 1554908891
    },
    {
        "content": "<p>the nice thing about env vars is we can just ignore them</p>",
        "id": 163013209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554908895
    },
    {
        "content": "<p>what would you propose, <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> ?</p>",
        "id": 163013297,
        "sender_full_name": "mw",
        "timestamp": 1554908962
    },
    {
        "content": "<p>Just use <code>-j &lt;threads&gt;</code>, which is pretty standard.</p>",
        "id": 163013398,
        "sender_full_name": "Zoxc",
        "timestamp": 1554909017
    },
    {
        "content": "<p>and then use RUSTFLAGS/<code>cargo rustc</code>?</p>",
        "id": 163013419,
        "sender_full_name": "mw",
        "timestamp": 1554909037
    },
    {
        "content": "<p>Yeah. People opting in will likely know how many cores they have</p>",
        "id": 163013430,
        "sender_full_name": "Zoxc",
        "timestamp": 1554909047
    },
    {
        "content": "<p>sounds also reasonable to me</p>",
        "id": 163013499,
        "sender_full_name": "mw",
        "timestamp": 1554909098
    },
    {
        "content": "<p>although it might be confusing regarding parallel LLVM</p>",
        "id": 163013518,
        "sender_full_name": "mw",
        "timestamp": 1554909118
    },
    {
        "content": "<p>I don't think this is appropriate for testing though, maybe long term it's fine to have just this</p>",
        "id": 163013521,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909120
    },
    {
        "content": "<p>I don't really care that much :) I don't know that people will know how many cores they have</p>",
        "id": 163013524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909122
    },
    {
        "content": "<p>I don't know how many cores I have, for example :)</p>",
        "id": 163013567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909126
    },
    {
        "content": "<p>but this does not have an easy \"just turn it on and let me test\" switch</p>",
        "id": 163013572,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909130
    },
    {
        "content": "<p>we need to collect data on what we'll eventually turn on, which isn't where everyone will be choosing how many cores to give us</p>",
        "id": 163013586,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909143
    },
    {
        "content": "<p>my main goal was that we should be able to tell people</p>",
        "id": 163013588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909146
    },
    {
        "content": "<p>\"run these two commands and report to us the numbers\"</p>",
        "id": 163013608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909156
    },
    {
        "content": "<p>furthermore RUSTFLAGS isn't actually a great proxy for this due to its cross-compilation behavior</p>",
        "id": 163013609,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909156
    },
    {
        "content": "<p>where it's not passed to the host compilations (like build scripts and procedural macros) if you cross compile</p>",
        "id": 163013619,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909168
    },
    {
        "content": "<blockquote>\n<p>\"run these two commands and report to us the numbers\"</p>\n</blockquote>\n<p>and the fewer variations these require, the better</p>",
        "id": 163013623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909170
    },
    {
        "content": "<p>right</p>",
        "id": 163013633,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909176
    },
    {
        "content": "<p>we should have \"do this and report numbers\" and then if they're willing \"do this and tweak this parameter and report numbers\"</p>",
        "id": 163013656,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909189
    },
    {
        "content": "<p>the first, simple, thing should be what we will have the defaults as later (aka <code>num_cpus::get</code>)</p>",
        "id": 163013669,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909202
    },
    {
        "content": "<p>ok, I think I like the <code>RUSTC_PARALLEL=factor</code> solution best</p>",
        "id": 163013699,
        "sender_full_name": "mw",
        "timestamp": 1554909231
    },
    {
        "content": "<p>not as a stable option, but for testing the reasons seem convincing</p>",
        "id": 163013760,
        "sender_full_name": "mw",
        "timestamp": 1554909256
    },
    {
        "content": "<p>I'm fine removing the <code>factor</code> wonkiness</p>",
        "id": 163013773,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909267
    },
    {
        "content": "<p>and we could just add <code>-j</code> instead</p>",
        "id": 163013777,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909272
    },
    {
        "content": "<p>(in the end, I don't care that much, but I think if we have people specify the number of cores, and we want real data, we should ask people to look things up, and there's also some confusion around e.g. hyperthreads etc)</p>",
        "id": 163013811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909297
    },
    {
        "content": "<p>maybe we could make <code>rustc</code> print some information about the processor used</p>",
        "id": 163014052,
        "sender_full_name": "mw",
        "timestamp": 1554909440
    },
    {
        "content": "<p>making it easier for people to give us data?</p>",
        "id": 163014073,
        "sender_full_name": "mw",
        "timestamp": 1554909456
    },
    {
        "content": "<p>might cause unwanted commandline spam though</p>",
        "id": 163014170,
        "sender_full_name": "mw",
        "timestamp": 1554909489
    },
    {
        "content": "<p>anyway this is a <em>somewhat</em> minor point</p>",
        "id": 163014221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909533
    },
    {
        "content": "<p>at least we can discuss it separately for sure</p>",
        "id": 163014247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909552
    },
    {
        "content": "<p>I don't have a strongly held opinion here, but I do think people should be able to turn off the \"new\" parallelism while keeping the old</p>",
        "id": 163014260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909568
    },
    {
        "content": "<p>so it sounds like for the time being add <code>RUSTC_PARALLEL=0/1</code> and then add <code>-j</code> as well to rustc?</p>",
        "id": 163014305,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909598
    },
    {
        "content": "<p>where <code>-j</code> defaults to some good heuristic we develop and <code>RUSTC_PARALLEL=0</code> disables all parallelism we're testing here</p>",
        "id": 163014375,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909619
    },
    {
        "content": "<p>and everything is always governed by cargo's jobserver</p>",
        "id": 163014385,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909629
    },
    {
        "content": "<p>sounds a bit hard to explain</p>",
        "id": 163014410,
        "sender_full_name": "mw",
        "timestamp": 1554909653
    },
    {
        "content": "<p>it does sound strictly worse :)</p>",
        "id": 163014455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909684
    },
    {
        "content": "<p>let's leave this unsettled for a second and back up</p>",
        "id": 163014502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909719
    },
    {
        "content": "<p>I just want to sketch out overall plan and make sure I understand it:</p>",
        "id": 163014561,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909731
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>Release</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1.36</td>\n<td>Supports parallel on an <strong>opt-in</strong> basis, controlled by <code>RUSTC_PARALLEL=1</code>, some way to specify number of cores</td>\n</tr>\n<tr>\n<td>1.37</td>\n<td>Supports parallel on an <strong>opt-out</strong> basis, controlled by <code>RUSTC_PARALLEL=0</code>, some way to specify number of cores</td>\n</tr>\n<tr>\n<td>1.38</td>\n<td>Supports parallel by default, no opt-out other than <code>-j1</code>?</td>\n</tr>\n</tbody>\n</table>",
        "id": 163014651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909803
    },
    {
        "content": "<p>I'm not sure about this last point</p>",
        "id": 163014669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909819
    },
    {
        "content": "<p>but I imagine that long-term we want the question of e.g. LLVM vs other parallelism to just kind of go away</p>",
        "id": 163014724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909843
    },
    {
        "content": "<p>*<code>-j1</code></p>",
        "id": 163014830,
        "sender_full_name": "Zoxc",
        "timestamp": 1554909907
    },
    {
        "content": "<p>well so there's one thing missing from that sketch, which is for the 1.36 release we should probably have a way for data collection where users specify the number of cores</p>",
        "id": 163014845,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909919
    },
    {
        "content": "<p>(if we primarily want that release to be a data collection one)</p>",
        "id": 163014860,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909926
    },
    {
        "content": "<p>Right, that's the sort of undecided bit I guess</p>",
        "id": 163014863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554909928
    },
    {
        "content": "<p>ok, that's also fine by me :)</p>",
        "id": 163014871,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554909938
    },
    {
        "content": "<p>So what are the concrete steps we need?</p>",
        "id": 163015007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910023
    },
    {
        "content": "<p>criteria for when we make parallel=1 the default</p>",
        "id": 163015071,
        "sender_full_name": "mw",
        "timestamp": 1554910059
    },
    {
        "content": "<ul>\n<li>Land <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>'s outstanding PRs</li>\n<li>Perform measurements of <code>-j1</code> overhead and check criteria</li>\n<li>Land a PR enabling <code>-j1</code> by default and adding <code>RUSTC_PARALLEL</code> env var</li>\n<li>Blog post laying out the plan</li>\n</ul>",
        "id": 163015076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910061
    },
    {
        "content": "<p>sounds good</p>",
        "id": 163015199,
        "sender_full_name": "mw",
        "timestamp": 1554910122
    },
    {
        "content": "<p>so what were the criteria again, did we settle on them?</p>",
        "id": 163015334,
        "sender_full_name": "mw",
        "timestamp": 1554910206
    },
    {
        "content": "<p>I would say \"&lt;5% or &lt;5s compile time regression\" for making <code>-j1</code> the default</p>",
        "id": 163015388,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910257
    },
    {
        "content": "<p>(on perf.r-l.o benchmarks)</p>",
        "id": 163015396,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910264
    },
    {
        "content": "<p>5s is..probably fine, maybe a bit higher</p>",
        "id": 163015423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910280
    },
    {
        "content": "<p>5s seems a bit much for small crates</p>",
        "id": 163015429,
        "sender_full_name": "mw",
        "timestamp": 1554910289
    },
    {
        "content": "<p>sorry, I meant, maybe a bit higher than I would like</p>",
        "id": 163015438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910298
    },
    {
        "content": "<p>heh we're the ones both making the rules and following them so we can of course tweak :)</p>",
        "id": 163015440,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910300
    },
    {
        "content": "<p>1s?</p>",
        "id": 163015485,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910322
    },
    {
        "content": "<p>I was going to suggest 1s</p>",
        "id": 163015514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910331
    },
    {
        "content": "<p>I have no idea how that comports with the existing numbers :)</p>",
        "id": 163015526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910340
    },
    {
        "content": "<p>we can also play it by ear and tweak if that feels wrong</p>",
        "id": 163015540,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910356
    },
    {
        "content": "<p>we'll know if it feels right nonetheless</p>",
        "id": 163015548,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910362
    },
    {
        "content": "<p>In terms of the criteria for whether to \"go forward\" or \"revert\" during the experimental period, I'd be inclined to use the same thresholds, but for <em>any</em> known crate? Is that too strict?</p>",
        "id": 163015560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910372
    },
    {
        "content": "<blockquote>\n<p>we can also play it by ear and tweak if that feels wrong</p>\n</blockquote>\n<p>yes, I think it's ok</p>",
        "id": 163015571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910380
    },
    {
        "content": "<p>ok</p>",
        "id": 163015601,
        "sender_full_name": "mw",
        "timestamp": 1554910397
    },
    {
        "content": "<p>I would be stricter to turn on parallel by default</p>",
        "id": 163015602,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910398
    },
    {
        "content": "<p>we can make various teams sign off on it once we have numbers</p>",
        "id": 163015620,
        "sender_full_name": "mw",
        "timestamp": 1554910408
    },
    {
        "content": "<p>something like \"at least 10% average improvement across known crates\"</p>",
        "id": 163015626,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554910411
    },
    {
        "content": "<p>do we have a list of PRs we want to land before checking for the first time?</p>",
        "id": 163015792,
        "sender_full_name": "mw",
        "timestamp": 1554910507
    },
    {
        "content": "<p>5% might be a bit low. I'd rather have it on right now. Given the significant speedups to the slowest cases</p>",
        "id": 163015793,
        "sender_full_name": "Zoxc",
        "timestamp": 1554910507
    },
    {
        "content": "<p>/me has to run soon</p>",
        "id": 163016114,
        "sender_full_name": "mw",
        "timestamp": 1554910711
    },
    {
        "content": "<p>yeah, me too</p>",
        "id": 163016195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910791
    },
    {
        "content": "<blockquote>\n<p>5% might be a bit low. I'd rather have it on right now. Given the significant speedups to the slowest cases</p>\n</blockquote>\n<p>yeah, this might be true. Let's say 5-10% and use our best judgement :)</p>",
        "id": 163016291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910822
    },
    {
        "content": "<blockquote>\n<p>something like \"at least 10% average improvement across known crates\"</p>\n</blockquote>\n<p>this is a good idea to establish something here too</p>",
        "id": 163016311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554910838
    },
    {
        "content": "<p>I'd rather just turn it on on nightly right now and let it ride to beta if we get the -Z thread=1 case &lt;5%</p>",
        "id": 163016545,
        "sender_full_name": "Zoxc",
        "timestamp": 1554911027
    },
    {
        "content": "<p>It doesn't really matter if nightly is a bit slower for a bit</p>",
        "id": 163016627,
        "sender_full_name": "Zoxc",
        "timestamp": 1554911066
    },
    {
        "content": "<p>Yes, I'd say we wait for the promising PRs to land, measure, and <em>probably</em> turn it on, unless something is really slow</p>",
        "id": 163016716,
        "sender_full_name": "mw",
        "timestamp": 1554911132
    },
    {
        "content": "<p>Nothing is really slow right now though. We'd have to turn it on and ask people to find such cases</p>",
        "id": 163016882,
        "sender_full_name": "Zoxc",
        "timestamp": 1554911240
    },
    {
        "content": "<p>Yes, I'd be fine with the current state. I just would want to make sure the changes in the meantime didn't regress anything</p>",
        "id": 163016919,
        "sender_full_name": "mw",
        "timestamp": 1554911282
    },
    {
        "content": "<p>OK, I have to go</p>",
        "id": 163017037,
        "sender_full_name": "mw",
        "timestamp": 1554911347
    },
    {
        "content": "<p>I think we made a lot of progress :)</p>",
        "id": 163017049,
        "sender_full_name": "mw",
        "timestamp": 1554911361
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 163017062,
        "sender_full_name": "mw",
        "timestamp": 1554911382
    },
    {
        "content": "<p>here is my attempt to summarize the plan:</p>\n<p><a href=\"https://gist.github.com/nikomatsakis/4263d4f55ff290c7c46993035dbeb091\" target=\"_blank\" title=\"https://gist.github.com/nikomatsakis/4263d4f55ff290c7c46993035dbeb091\">https://gist.github.com/nikomatsakis/4263d4f55ff290c7c46993035dbeb091</a></p>\n<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> can y'all give it a look?</p>",
        "id": 163019337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554912902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that looks great!</p>",
        "id": 163019635,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554913138
    },
    {
        "content": "<blockquote>\n<p>Question: Do we also require an average improvement of some % to be reported? On which tests?</p>\n</blockquote>\n<p>I would argue \"no\" in that we already have clear data that we're going to see some great improvements, so part of the testing period for parallel-on-by-default will be to ensure that we achieve this goal of \"the average user reports improvement\"</p>",
        "id": 163019672,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554913185
    },
    {
        "content": "<p>catched up with all the scrollback :D</p>",
        "id": 163019744,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913211
    },
    {
        "content": "<p>I probably miss a thing, do you plan to experiment only on nightly or also stable?</p>",
        "id": 163019754,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Turn it on on nightly and let it ride to stable, unless problems appear</p>",
        "id": 163020033,
        "sender_full_name": "Zoxc",
        "timestamp": 1554913457
    },
    {
        "content": "<p>hmm, can we afford to do the whole experimentation on nightly?</p>",
        "id": 163020078,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913496
    },
    {
        "content": "<p>not feeling too strong about this, but experimenting on stable just sounds wrong</p>",
        "id": 163020098,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913508
    },
    {
        "content": "<p>even though if it rides the trains without any issue is probably fine</p>",
        "id": 163020130,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  That should probably say 1:1 core to thread ratio instead of 50% of cores =P</p>",
        "id": 163020228,
        "sender_full_name": "Zoxc",
        "timestamp": 1554913597
    },
    {
        "content": "<blockquote>\n<p>not feeling too strong about this, but experimenting on stable just sounds wrong</p>\n</blockquote>\n<p>it's not so much that we are <em>experimenting</em> on stable I don't thikn</p>",
        "id": 163020336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554913680
    },
    {
        "content": "<p>hmm, yeah, I don't feel too strongly on this :)</p>",
        "id": 163020839,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1554913970
    },
    {
        "content": "<p>it was mostly that we'd let it ride the trains -- but the \"active experiment\" is on nightly</p>",
        "id": 163021288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914308
    },
    {
        "content": "<p>in other words, if the \"opt-out\" variant is a success, then it rides the trains, but the active experiment is now the <em>opt-in</em> variant (which is on nightly)</p>",
        "id": 163021307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914327
    },
    {
        "content": "<p>(I also don't feel <em>that</em> strongly, I just wasn't crazy about having us change things just before beta branches if we don't have to)</p>",
        "id": 163021350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914351
    },
    {
        "content": "<p>I'm fine with this riding the trains -- we're basically not changing behavior beyond maybe speed; and presumably in some future we'd never make backwards-incompatible changes to these env variables or flags</p>",
        "id": 163021391,
        "sender_full_name": "simulacrum",
        "timestamp": 1554914391
    },
    {
        "content": "<p>(We could stop using them, but that's not a breaking change)</p>",
        "id": 163021408,
        "sender_full_name": "simulacrum",
        "timestamp": 1554914402
    },
    {
        "content": "<p>Right. One nice thing about it riding the trains is</p>",
        "id": 163021491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914436
    },
    {
        "content": "<p>if it's working well for you</p>",
        "id": 163021495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914439
    },
    {
        "content": "<p>you can start using it sooner :)</p>",
        "id": 163021499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554914441
    },
    {
        "content": "<p>that plan looks good, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 163569450,
        "sender_full_name": "mw",
        "timestamp": 1555513734
    },
    {
        "content": "<p>I think we'll want people to report what kind of CPU they have</p>",
        "id": 163569493,
        "sender_full_name": "mw",
        "timestamp": 1555513757
    },
    {
        "content": "<p>i.e. core count, hyperthreading, maybe model</p>",
        "id": 163569540,
        "sender_full_name": "mw",
        "timestamp": 1555513792
    },
    {
        "content": "<p>it makes a difference if I'm using all cores on a 8/16 core machine vs a 2/4 core machine</p>",
        "id": 163569673,
        "sender_full_name": "mw",
        "timestamp": 1555513843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I think if we want that it would be good to figure out how to get it out programmatically and give them a script (ideally like bash, perhaps) to run</p>",
        "id": 163572917,
        "sender_full_name": "simulacrum",
        "timestamp": 1555515775
    },
    {
        "content": "<p>that way we get fairly uniform stats</p>",
        "id": 163572941,
        "sender_full_name": "simulacrum",
        "timestamp": 1555515784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> yes that would be perfect</p>",
        "id": 163635663,
        "sender_full_name": "mw",
        "timestamp": 1555580274
    }
]