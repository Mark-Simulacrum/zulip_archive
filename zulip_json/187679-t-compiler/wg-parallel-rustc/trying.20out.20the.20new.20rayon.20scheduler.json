[
    {
        "content": "<p>So one of the work items we identified was to try out the new rayon scheduler to see if it made any different to our jobserver woes.</p>",
        "id": 180764900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759650
    },
    {
        "content": "<p>I was talking to <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and they expressed an interest in doing this</p>",
        "id": 180764915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759660
    },
    {
        "content": "<p>I've been wanting to do it but I am not sure if I have time</p>",
        "id": 180764946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759682
    },
    {
        "content": "<p>I guess what would need to happen is:</p>",
        "id": 180765003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759691
    },
    {
        "content": "<ul>\n<li>create a branch of rustc-rayon repo that contains those changes</li>\n</ul>",
        "id": 180765013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759702
    },
    {
        "content": "<ul>\n<li>build rustc against that branch</li>\n</ul>",
        "id": 180765016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759705
    },
    {
        "content": "<ul>\n<li>run the \"build cargo\" workflow that <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> was testing with?</li>\n</ul>",
        "id": 180765033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759716
    },
    {
        "content": "<p>maybe a first step, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, would just be to try and reproduce <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>'s results</p>",
        "id": 180765049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759728
    },
    {
        "content": "<p>just so we have a solid basis for comparison</p>",
        "id": 180765064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759738
    },
    {
        "content": "<p>that's probably what I would do</p>",
        "id": 180765072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759741
    },
    {
        "content": "<blockquote>\n<ul>\n<li>create a branch of rustc-rayon repo that contains those changes</li>\n</ul>\n</blockquote>\n<p>those changes are on a rustc-rayon branch?</p>",
        "id": 180765082,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573759748
    },
    {
        "content": "<blockquote>\n<ul>\n<li>create a branch of rustc-rayon repo that contains those changes</li>\n</ul>\n</blockquote>\n<p>and then do this, there are two ways to go about it</p>",
        "id": 180765088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759751
    },
    {
        "content": "<p>no, that's the trick</p>",
        "id": 180765093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759755
    },
    {
        "content": "<p>rustc-rayon is a fork of rayon</p>",
        "id": 180765098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759757
    },
    {
        "content": "<p>and the changes are on a branch of <em>rayon</em></p>",
        "id": 180765104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759761
    },
    {
        "content": "<p>so they have to be rebased atop rust-rayon --</p>",
        "id": 180765112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759768
    },
    {
        "content": "<p>or else the rustc-rayon changes could be rebased atop the branch</p>",
        "id": 180765124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759774
    },
    {
        "content": "<p>rustc-rayon is basically tracking rayon with a custom diff</p>",
        "id": 180765140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759787
    },
    {
        "content": "<p>(hopefully it would eventually just be rayon, or we'd move to something custom written)</p>",
        "id": 180765172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759798
    },
    {
        "content": "<p>I see, so we need to put rayon's repo changes on rustc-rayon and follow from there, right?</p>",
        "id": 180765240,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573759811
    },
    {
        "content": "<p>sorry to re-ask silly questions, I have the english understanding level of a child of 3 :P</p>",
        "id": 180765273,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573759833
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> actually, <a href=\"https://github.com/rayon-rs/rayon/branches\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/branches\">https://github.com/rayon-rs/rayon/branches</a> there's no active branch there, or is the stuff just in master?</p>",
        "id": 180765518,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573759966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> it's on my fork</p>",
        "id": 180765554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573759988
    },
    {
        "content": "<p>I see :)</p>",
        "id": 180765837,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573760135
    },
    {
        "content": "<p><a href=\"https://github.com/nikomatsakis/rayon/tree/latch-target-thread\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rayon/tree/latch-target-thread\">https://github.com/nikomatsakis/rayon/tree/latch-target-thread</a> I guess</p>",
        "id": 180765929,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573760182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yes</p>",
        "id": 180862594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573845316
    },
    {
        "content": "<p>do you want to follow up on this?</p>",
        "id": 180862603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573845321
    },
    {
        "content": "<p>I'm literally doing this</p>",
        "id": 180862653,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845338
    },
    {
        "content": "<p>was talking with <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> in private</p>",
        "id": 180862671,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845348
    },
    {
        "content": "<p>was also saying him, let's jump into the thread maybe? :P</p>",
        "id": 180862694,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845359
    },
    {
        "content": "<p>gonna paste the same results that <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> have shared but for my machine and for 8 cores</p>",
        "id": 180862804,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845447
    },
    {
        "content": "<p>so running on cargo repo, for ...</p>",
        "id": 180863328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845818
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>rm -rf target\nRUSTFLAGS=-Zthreads=8 /usr/bin/time --verbose cargo +8d78bf6b273848d17da8f5c92162c6a6b9b10dfd-alt check &amp;\nsleep 3\npkill cargo\n</pre></div>",
        "id": 180863345,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845831
    },
    {
        "content": "<p>got</p>",
        "id": 180863349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845834
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    Command being timed: &quot;cargo +8d78bf6b273848d17da8f5c92162c6a6b9b10dfd-alt check&quot;\n    User time (seconds): 6.93\n    System time (seconds): 0.92\n    Percent of CPU this job got: 259%\n    Elapsed (wall clock) time (h:mm:ss or m:ss): 0:03.02\n    Average shared text size (kbytes): 0\n    Average unshared data size (kbytes): 0\n    Average stack size (kbytes): 0\n    Average total size (kbytes): 0\n    Maximum resident set size (kbytes): 160440\n    Average resident set size (kbytes): 0\n    Major (requiring I/O) page faults: 0\n    Minor (reclaiming a frame) page faults: 183788\n    Voluntary context switches: 13599\n    Involuntary context switches: 4617\n    Swaps: 0\n    File system inputs: 0\n    File system outputs: 57104\n    Socket messages sent: 0\n    Socket messages received: 0\n    Signals delivered: 0\n    Page size (bytes): 4096\n    Exit status: 0\n</pre></div>",
        "id": 180863398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573845844
    },
    {
        "content": "<p>FWIW the stats alone aren't too significant, but relative to others is where it helps a lot</p>",
        "id": 180863812,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1573846139
    },
    {
        "content": "<p>yeah, you meant with different threads=N values?</p>",
        "id": 180864088,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846306
    },
    {
        "content": "<p>I've done it with a bunch of values</p>",
        "id": 180864099,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846313
    },
    {
        "content": "<p>my idea was to keep pasting the output but I got stuck for a couple of minutes trying to run perf</p>",
        "id": 180864178,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846348
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Error:  No permissions to read /sys/kernel/debug/tracing/events/raw_syscalls/sys_(enter|exit)\nHint:   Try &#39;sudo mount -o remount,mode=755 /sys/kernel/debug/tracing/&#39;\n</pre></div>",
        "id": 180864186,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846356
    },
    {
        "content": "<p>can just do as root :P</p>",
        "id": 180864194,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846363
    },
    {
        "content": "<p>I guess I'm going to paste this in a document as you did <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> otherwise would be complicated to follow</p>",
        "id": 180864597,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573846670
    },
    {
        "content": "<p>unfortunately my perf installation is segfaulting when running perf trace</p>",
        "id": 180874134,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573853504
    },
    {
        "content": "<p>have reported an issue</p>",
        "id": 180874149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573853517
    },
    {
        "content": "<p>gonna try building it from source code</p>",
        "id": 180874478,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1573853773
    },
    {
        "content": "<p>so  <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 181041425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101367
    },
    {
        "content": "<p>yeah so here's the thing</p>",
        "id": 181041504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101434
    },
    {
        "content": "<p>rustc-rayon is itself a fork of upstream rayon</p>",
        "id": 181041512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101441
    },
    {
        "content": "<p>it has some number of commits relative to the base rayon</p>",
        "id": 181041573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101456
    },
    {
        "content": "<p>I <em>think</em> what we want to do is to rebase those commits atop my branch</p>",
        "id": 181041586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101464
    },
    {
        "content": "<p>this probably will generate some conflicts, I realize now, since I massively overhauled the sleep module</p>",
        "id": 181041608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101487
    },
    {
        "content": "<p>the other option would be to rebase my branch (squashed) atop rustc-rayon, but I think that will be harder</p>",
        "id": 181041627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101499
    },
    {
        "content": "<p>yeah, the second thing was what I was going after</p>",
        "id": 181041669,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101539
    },
    {
        "content": "<p>but I've realized that yeah, I have no idea how different are <code>nikomatsakis/rayon</code> with <code>rust-lang/rustc-rayon</code></p>",
        "id": 181041720,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I can do whatever you prefer</p>",
        "id": 181041848,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101635
    },
    {
        "content": "<p>rust-lang/rustc-rayon should be <em>relatively</em> recent</p>",
        "id": 181041869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> rebased it fairly recently</p>",
        "id": 181041881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101661
    },
    {
        "content": "<p>I'm not sure how is the process we follow with rustc-rayon</p>",
        "id": 181041887,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101662
    },
    {
        "content": "<p>I can also rebase rustc-rayon atop rayon first</p>",
        "id": 181041963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101688
    },
    {
        "content": "<p>hmm</p>",
        "id": 181041965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101690
    },
    {
        "content": "<p>I wonder how out of date <em>my</em> branch is :)</p>",
        "id": 181041970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101694
    },
    {
        "content": "<p>and then do the rest</p>",
        "id": 181041971,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101694
    },
    {
        "content": "<p>relative to base rayon</p>",
        "id": 181041982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101702
    },
    {
        "content": "<p>I'm also somewhat...unclear if this will actually <em>help</em></p>",
        "id": 181041989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101707
    },
    {
        "content": "<p>I guess it's worth a try</p>",
        "id": 181041992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101711
    },
    {
        "content": "<p>it seems like there are 100 extra commits</p>",
        "id": 181042002,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101720
    },
    {
        "content": "<p>oh yeah but the real question is</p>",
        "id": 181042012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101730
    },
    {
        "content": "<p>what it's based atop</p>",
        "id": 181042017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101733
    },
    {
        "content": "<p>so 100 commits that are not in sync with rustc-rayon besides the stuff you added</p>",
        "id": 181042026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101738
    },
    {
        "content": "<p>I don't think I ever rebased it, but rayon changes slowly</p>",
        "id": 181042030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101741
    },
    {
        "content": "<p>one way I expect it to help is that more targeted wakeups should reduce jobserver traffic</p>",
        "id": 181042054,
        "sender_full_name": "cuviper",
        "timestamp": 1574101757
    },
    {
        "content": "<p>oh you mean it's 100 commits \"behind\" rayon-rs:master?</p>",
        "id": 181042058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101759
    },
    {
        "content": "<p>instead of storming all threads</p>",
        "id": 181042060,
        "sender_full_name": "cuviper",
        "timestamp": 1574101763
    },
    {
        "content": "<blockquote>\n<p>one way I expect it to help is that more targeted wakeups should reduce jobserver traffic</p>\n</blockquote>\n<p>we cerainly wake up fewer things; we may also transition between sleeping/waking faster, not sure if that helps</p>",
        "id": 181042095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101794
    },
    {
        "content": "<blockquote>\n<p>oh you mean it's 100 commits \"behind\" rayon-rs:master?</p>\n</blockquote>\n<p>no there are 100 commits that rustc-rayon lacks</p>",
        "id": 181042200,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101834
    },
    {
        "content": "<p>not including my branch, you mean</p>",
        "id": 181042220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574101849
    },
    {
        "content": "<p>exactly</p>",
        "id": 181042232,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101856
    },
    {
        "content": "<p><a href=\"https://github.com/rayon-rs/rayon/compare/master...nikomatsakis:latch-target-thread\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/compare/master...nikomatsakis:latch-target-thread\">https://github.com/rayon-rs/rayon/compare/master...nikomatsakis:latch-target-thread</a><br>\n<a href=\"https://github.com/rayon-rs/rayon/compare/master...rust-lang:rustc\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/compare/master...rust-lang:rustc\">https://github.com/rayon-rs/rayon/compare/master...rust-lang:rustc</a></p>",
        "id": 181042235,
        "sender_full_name": "cuviper",
        "timestamp": 1574101857
    },
    {
        "content": "<p>even github says rustc-rayon is \"6 commits ahead, 18 commits behind rayon-rs:master\", so I'm not sure where you get 100</p>",
        "id": 181042324,
        "sender_full_name": "cuviper",
        "timestamp": 1574101919
    },
    {
        "content": "<p>yeah</p>",
        "id": 181042329,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101920
    },
    {
        "content": "<p>I was going to do so</p>",
        "id": 181042355,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101923
    },
    {
        "content": "<p>but this is what I'm talking about <a href=\"https://github.com/rust-lang/rustc-rayon/compare/master...nikomatsakis:master\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-rayon/compare/master...nikomatsakis:master\">https://github.com/rust-lang/rustc-rayon/compare/master...nikomatsakis:master</a></p>",
        "id": 181042396,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101934
    },
    {
        "content": "<p>130 commits</p>",
        "id": 181042397,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101934
    },
    {
        "content": "<p>so when I try to put nikomatsakis:latch-target-thread on top of rustc-rayon master we have around 200</p>",
        "id": 181042449,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574101970
    },
    {
        "content": "<p>why are you using niko's master? that's just plain old</p>",
        "id": 181042468,
        "sender_full_name": "cuviper",
        "timestamp": 1574101986
    },
    {
        "content": "<p>yeah, nikomatsakis:master isn't really an interesting branch -- although I think it does happen to be the \"merge-base\" of latch-target-thread and rayon-rs:master</p>",
        "id": 181042501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102008
    },
    {
        "content": "<p>ahh your branch started from rayon-rs:master</p>",
        "id": 181042514,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102024
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-rayon/compare/master...rayon-rs:master\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-rayon/compare/master...rayon-rs:master\">https://github.com/rust-lang/rustc-rayon/compare/master...rayon-rs:master</a></p>",
        "id": 181042648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102096
    },
    {
        "content": "<p>this is the comparison we are talking about then?</p>",
        "id": 181042664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102105
    },
    {
        "content": "<p>ahhh the branch is called rustc</p>",
        "id": 181042697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102135
    },
    {
        "content": "<p>ah yeah :)</p>",
        "id": 181042719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102149
    },
    {
        "content": "<p>the default branch is rustc on <code>rust-lang/rustc-rayon</code></p>",
        "id": 181042722,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102153
    },
    {
        "content": "<p>I remember that now...</p>",
        "id": 181042727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102160
    },
    {
        "content": "<p>that was why I was getting zillions of commits</p>",
        "id": 181042773,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102167
    },
    {
        "content": "<p>cool :)</p>",
        "id": 181042774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102169
    },
    {
        "content": "<p>ok, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what you prefer me to do then?</p>",
        "id": 181042818,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102201
    },
    {
        "content": "<p>I can first add the missing commits from rayon-rs/rayon:master to rust-lang/rustc-rayon:rustc</p>",
        "id": 181042869,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102234
    },
    {
        "content": "<p>and then add your branch on top of rust-lang/rustc-rayon:rustc</p>",
        "id": 181042901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102253
    },
    {
        "content": "<p>hmm yes so probably rebasing atop rayon-rs:master is a good first step</p>",
        "id": 181042940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102281
    },
    {
        "content": "<p>well</p>",
        "id": 181042986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102285
    },
    {
        "content": "<p>I think I would just rebase directly to nikomatsakis:latch-target-thread</p>",
        "id": 181042997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102297
    },
    {
        "content": "<p>given that this branch is <em>itself</em> behind rayon-rs:master</p>",
        "id": 181043017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574102313
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 181043022,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102321
    },
    {
        "content": "<p>ok</p>",
        "id": 181043026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574102323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> I imagine that after this commit <a href=\"https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294\">https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294</a> we don't want <code>SleepData</code>, that structure is only in <code>rustc-rayon</code> and not in <code>rayon</code></p>",
        "id": 181045581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574103986
    },
    {
        "content": "<p>sorry, I think I've just confused myself</p>",
        "id": 181045759,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104106
    },
    {
        "content": "<p>let me recheck</p>",
        "id": 181045763,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104108
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> yeah, what I've said is right</p>",
        "id": 181046244,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104427
    },
    {
        "content": "<p>talking about this <a href=\"https://github.com/rust-lang/rustc-rayon/blob/rustc/rayon-core/src/sleep/mod.rs#L12\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-rayon/blob/rustc/rayon-core/src/sleep/mod.rs#L12\">https://github.com/rust-lang/rustc-rayon/blob/rustc/rayon-core/src/sleep/mod.rs#L12</a></p>",
        "id": 181046294,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104444
    },
    {
        "content": "<p>I guess that's kind of the point of <a href=\"https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294\">https://github.com/rayon-rs/rayon/commit/4dbd63b788cda2b9f8520da3b0cd41cdcd043294</a> and we should remove <code>SleepData</code></p>",
        "id": 181046487,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104583
    },
    {
        "content": "<p>it also has a deadlock_check function that I'm not sure if it's covered on Niko's branch</p>",
        "id": 181046557,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574104645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> let me look briefly..</p>",
        "id": 181047418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105183
    },
    {
        "content": "<p>ok so --</p>",
        "id": 181047484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105246
    },
    {
        "content": "<p>hmm</p>",
        "id": 181047494,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105264
    },
    {
        "content": "<p>:)</p>",
        "id": 181047496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105265
    },
    {
        "content": "<p>ok so the deadlock checking in rustc-rayon</p>",
        "id": 181047572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105299
    },
    {
        "content": "<p>I'm trying to remember but I think there is some callback by which a thread says \"I'm blocked now\"</p>",
        "id": 181047599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105319
    },
    {
        "content": "<p>and the idea is that if all threads are either blocked or asleep</p>",
        "id": 181047607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105327
    },
    {
        "content": "<p>we can trigger the deadlock callback</p>",
        "id": 181047612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105332
    },
    {
        "content": "<p>one quick check, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, you are rebasing the rustc-rayon commits atop the branch, right?</p>",
        "id": 181047661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105373
    },
    {
        "content": "<p>i.e., you're not rebasing all the branch commits</p>",
        "id": 181047669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105381
    },
    {
        "content": "<blockquote>\n<p>we can trigger the deadlock callback</p>\n</blockquote>\n<p>registry::{mark_blocked, mark_unblocked} ?</p>",
        "id": 181047757,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105416
    },
    {
        "content": "<blockquote>\n<p>one quick check, <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span>, you are rebasing the rustc-rayon commits atop the branch, right?</p>\n</blockquote>\n<p>I'm rebasing rustc's branch of rustc-rayon atop your branch</p>",
        "id": 181047810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105454
    },
    {
        "content": "<p>so, to be 100% clear, I'm on your branch</p>",
        "id": 181047841,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105472
    },
    {
        "content": "<p>and did <code>git rebase rustc-rayon/rustc</code></p>",
        "id": 181047856,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105488
    },
    {
        "content": "<p>that is going to place your commits on top of <code>rustc-rayon/rustc</code></p>",
        "id": 181047898,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> trying to understand what would be the idea, so from what you're saying I guess we would need to keep all that <code>SleepData</code> stuff?</p>",
        "id": 181048094,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105642
    },
    {
        "content": "<p>I'm mainly wondering how much of rebasing of things is and how much of things work a bit differently we need to rewrite parts of the code and adapt things in a deeper way</p>",
        "id": 181048255,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105751
    },
    {
        "content": "<p>if it's rebasing I guess I can easily get this working, but if I need to do major surgery I may need to start understanding deeper how things work</p>",
        "id": 181048392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105833
    },
    {
        "content": "<blockquote>\n<p>that is going to place your commits on top of <code>rustc-rayon/rustc</code></p>\n</blockquote>\n<p>I'm confused</p>",
        "id": 181048398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105837
    },
    {
        "content": "<p>this is the command you executed?</p>",
        "id": 181048399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105840
    },
    {
        "content": "<p>if so, I think you're in for a world of trouble :)</p>",
        "id": 181048416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105853
    },
    {
        "content": "<blockquote>\n<p>I'm mainly wondering how much of rebasing of things is and how much of things work a bit differently we need to rewrite parts of the code and adapt things in a deeper way</p>\n</blockquote>\n<p>I think we're going to have to do some deeper edits, yeah, I may have underestimated how much work it would be</p>",
        "id": 181048426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105871
    },
    {
        "content": "<p>maybe I should just put a bit of time into it -- or we could  share screens</p>",
        "id": 181048492,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105892
    },
    {
        "content": "<p>(that could, indeed, be the parallel rustc meeting...)</p>",
        "id": 181048502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574105897
    },
    {
        "content": "<blockquote>\n<p>if so, I think you're in for a world of trouble :)</p>\n</blockquote>\n<p>why?</p>",
        "id": 181048522,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105922
    },
    {
        "content": "<p>unsure I'm understanding :)</p>",
        "id": 181048533,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105930
    },
    {
        "content": "<blockquote>\n<p>(that could, indeed, be the parallel rustc meeting...)</p>\n</blockquote>\n<p>definitely I can open tmux or something and share the current state of things</p>",
        "id": 181048563,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105951
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>if so, I think you're in for a world of trouble :)</p>\n</blockquote>\n<p>why?</p>\n</blockquote>\n<p>didn't we want your commits on top of rustc-rayon's ones?</p>",
        "id": 181048601,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574105996
    },
    {
        "content": "<p>and indeed I got just a few unsynced from rayon-rs/rayon:master and then yours</p>",
        "id": 181048670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574106032
    },
    {
        "content": "<blockquote>\n<p>didn't we want your commits on top of rustc-rayon's ones?</p>\n</blockquote>\n<p>no, I think we want <em>rustc-rayon's</em> commits atop my branch</p>",
        "id": 181048837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106154
    },
    {
        "content": "<p>mainly because</p>",
        "id": 181048840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106157
    },
    {
        "content": "<p>there was like 6 rustc-rayon commits</p>",
        "id": 181048844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106161
    },
    {
        "content": "<p>and the branch has a very untidy, windy history</p>",
        "id": 181048852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106168
    },
    {
        "content": "<p>I mean I could squash the branch too</p>",
        "id": 181048861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106174
    },
    {
        "content": "<p>but .. in general we've been rebasing rustc-rayon atop rayon</p>",
        "id": 181048879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106187
    },
    {
        "content": "<blockquote>\n<p>definitely I can open tmux or something and share the current state of things</p>\n</blockquote>\n<p>maybe we try this in a bit?</p>",
        "id": 181048901,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574106207
    },
    {
        "content": "<p>yes</p>",
        "id": 181048987,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574106251
    },
    {
        "content": "<p>at the meeting time?</p>",
        "id": 181048991,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574106256
    },
    {
        "content": "<p>which is in ~ 15 minutes from now</p>",
        "id": 181049007,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574106274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> I've just pushed a rayon branch and a compiler branch that uses it</p>",
        "id": 181056832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574111685
    },
    {
        "content": "<p>Nice! The next steps would be to send that as a PR to rust-lang/rust and then run @bors: try</p>",
        "id": 181056906,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574111713
    },
    {
        "content": "<p>does that already run in parallel mode?</p>",
        "id": 181057074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574111819
    },
    {
        "content": "<p>I thought you needed to do something with it</p>",
        "id": 181057096,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574111828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 181057326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574111973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yeah, that'll produce parallel artifacts on the alt commit</p>",
        "id": 181057423,
        "sender_full_name": "simulacrum",
        "timestamp": 1574112006
    },
    {
        "content": "<p>Not sure if we want non-alt parallel artifacts (i.e., fast ones)</p>",
        "id": 181057439,
        "sender_full_name": "simulacrum",
        "timestamp": 1574112018
    },
    {
        "content": "<p>ahhh ok</p>",
        "id": 181057452,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574112029
    },
    {
        "content": "<p>well, done here <a href=\"https://github.com/rust-lang/rust/pull/66527\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66527\">https://github.com/rust-lang/rust/pull/66527</a></p>",
        "id": 181057483,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574112042
    },
    {
        "content": "<p>probably? then you'll want to comment these two lines: <a href=\"https://github.com/rust-lang/rust/blob/a0d40f8bdfcc3c28355467973f97fd4c45ac5876/src/ci/run.sh#L61-L62\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/a0d40f8bdfcc3c28355467973f97fd4c45ac5876/src/ci/run.sh#L61-L62\">https://github.com/rust-lang/rust/blob/a0d40f8bdfcc3c28355467973f97fd4c45ac5876/src/ci/run.sh#L61-L62</a></p>",
        "id": 181057518,
        "sender_full_name": "simulacrum",
        "timestamp": 1574112075
    },
    {
        "content": "<p>depends on the diffs we ran last time</p>",
        "id": 181057544,
        "sender_full_name": "simulacrum",
        "timestamp": 1574112096
    },
    {
        "content": "<p>ahh so should I stop the try run?</p>",
        "id": 181057712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574112203
    },
    {
        "content": "<p>nah, this is fine too</p>",
        "id": 181068421,
        "sender_full_name": "simulacrum",
        "timestamp": 1574120637
    },
    {
        "content": "<p>good to have both</p>",
        "id": 181068422,
        "sender_full_name": "simulacrum",
        "timestamp": 1574120639
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what else with <a href=\"https://github.com/rust-lang/rust/pull/66527\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66527\">https://github.com/rust-lang/rust/pull/66527</a> ?</p>",
        "id": 181109555,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574169380
    },
    {
        "content": "<p>I'm not sure I understood the process we are following the get perf results</p>",
        "id": 181109568,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574169392
    },
    {
        "content": "<p>there are tidy failures but I guess we don't need to bother fixing those</p>",
        "id": 181109585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574169407
    },
    {
        "content": "<p>I don't think tidy failures matter, yes</p>",
        "id": 181109612,
        "sender_full_name": "simulacrum",
        "timestamp": 1574169431
    },
    {
        "content": "<p>I imagine Alex can go bench now? We can also get a try build with parallel but not, uh, llvm asserting</p>",
        "id": 181109631,
        "sender_full_name": "simulacrum",
        "timestamp": 1574169458
    },
    {
        "content": "<p>but I think that's not actually too useful for the kind of benchmarking we've been doing</p>",
        "id": 181109643,
        "sender_full_name": "simulacrum",
        "timestamp": 1574169477
    },
    {
        "content": "<p>ok, let's see what <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> says then :)</p>",
        "id": 181111045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574170535
    },
    {
        "content": "<p>Looks like the binaries don't work I think <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 181120774,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574176773
    },
    {
        "content": "<p><code>rm -rf target &amp;&amp; RUSTFLAGS=-Zthreads=28 cargo +540c0b9a1aea77a85ec449623ce5c509f0833899-alt check</code></p>",
        "id": 181120783,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574176780
    },
    {
        "content": "<p>that instantly deadlocks</p>",
        "id": 181120787,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574176783
    },
    {
        "content": "<p>:S</p>",
        "id": 181120976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574176884
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 181121267,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574177040
    },
    {
        "content": "<p>got me :)</p>",
        "id": 181121591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574177200
    },
    {
        "content": "<p>I can try to look later maybe tho</p>",
        "id": 181121602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574177207
    },
    {
        "content": "<p>there's probably some bugs introducd by the rebase I guess</p>",
        "id": 181121615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574177214
    },
    {
        "content": "<p>I can try the rebase again and check if I find something weird</p>",
        "id": 181122118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574177514
    },
    {
        "content": "<p>hm,  that seems surprising</p>",
        "id": 181124325,
        "sender_full_name": "simulacrum",
        "timestamp": 1574178646
    },
    {
        "content": "<p>oh, I guess when we're doing it in-tree we only have the one thread</p>",
        "id": 181124343,
        "sender_full_name": "simulacrum",
        "timestamp": 1574178658
    },
    {
        "content": "<p>I will say that the latch-target-thread branch may well be buggy</p>",
        "id": 181128201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574180570
    },
    {
        "content": "<p>I wonder if we should discuss a bit</p>",
        "id": 181128214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574180578
    },
    {
        "content": "<p>what we would do if we did <em>not</em> use rayon</p>",
        "id": 181128225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574180581
    },
    {
        "content": "<p>created a topic for it</p>",
        "id": 181128268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574180606
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what would this <a href=\"https://github.com/spastorino/rustc-rayon/commit/70bb40ed4e2a04b95c9c6d0a05ad8718dc9b2d06\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/commit/70bb40ed4e2a04b95c9c6d0a05ad8718dc9b2d06\">https://github.com/spastorino/rustc-rayon/commit/70bb40ed4e2a04b95c9c6d0a05ad8718dc9b2d06</a> be useful for if we do not implement <code>mark_blocked</code> and <code>mark_unblocked</code>?</p>",
        "id": 181136142,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574185516
    },
    {
        "content": "<p>wouldn't be better to just skip the commit for now?</p>",
        "id": 181136156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574185525
    },
    {
        "content": "<p>should be able to, yeah</p>",
        "id": 181136178,
        "sender_full_name": "simulacrum",
        "timestamp": 1574185546
    },
    {
        "content": "<p>I guess it would be simpler</p>",
        "id": 181136248,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574185580
    },
    {
        "content": "<p>but yeah, anyway that part rebase shouldn't be causing the problem anyway</p>",
        "id": 181136269,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574185612
    },
    {
        "content": "<p>after rebasing again all the differences I've found are that commit which I've removed now</p>",
        "id": 181139257,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187599
    },
    {
        "content": "<p>and this difference ...</p>",
        "id": 181139305,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187606
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/commit/807a281581a1a998337fc35ac00ffaea5af0e655#diff-19c860748b8faafc557a11db2d185bd9R909\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/commit/807a281581a1a998337fc35ac00ffaea5af0e655#diff-19c860748b8faafc557a11db2d185bd9R909\">https://github.com/spastorino/rustc-rayon/commit/807a281581a1a998337fc35ac00ffaea5af0e655#diff-19c860748b8faafc557a11db2d185bd9R909</a></p>",
        "id": 181139312,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187611
    },
    {
        "content": "<p>vs</p>",
        "id": 181139313,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187612
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-19c860748b8faafc557a11db2d185bd9R884\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-19c860748b8faafc557a11db2d185bd9R884\">https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-19c860748b8faafc557a11db2d185bd9R884</a></p>",
        "id": 181139319,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187617
    },
    {
        "content": "<p>but I don't think that matters</p>",
        "id": 181139325,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187623
    },
    {
        "content": "<p>basically if <code>acquire_thread</code> should wrap ...</p>",
        "id": 181139388,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187668
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">my_terminate_latch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">registry</span><span class=\"p\">.</span><span class=\"n\">thread_infos</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">].</span><span class=\"n\">terminate</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">worker_thread</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">ThreadStart</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">worker</span>: <span class=\"nc\">index</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">terminate_addr</span>: <span class=\"nc\">my_terminate_latch</span><span class=\"p\">.</span><span class=\"n\">as_core_latch</span><span class=\"p\">().</span><span class=\"n\">addr</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n</pre></div>",
        "id": 181139391,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187671
    },
    {
        "content": "<p>or not</p>",
        "id": 181139397,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> just in case you want to check this ^^^</p>",
        "id": 181139709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574187905
    },
    {
        "content": "<p>more info ...</p>",
        "id": 181141570,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574189055
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> 3:37 PM\n\n#0  0x00007fddfbe35c45 in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\n#1  0x00007fddfe3afb17 in rustc_rayon_core::latch::LockLatch::wait () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#2  0x00007fddfe3b0598 in rustc_rayon_core::thread_pool::ThreadPool::wait_until_stopped () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#3  0x00007fddfc41a202 in &lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once ()\n   from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#4  0x00007fddfc3f3dae in std::panicking::try::do_call () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#5  0x00007fddfbefcf6a in __rust_maybe_catch_panic () at src/libpanic_unwind/lib.rs:81\n#6  0x00007fddfc41cc41 in crossbeam_utils::thread::scope () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#7  0x00007fddfc423d93 in scoped_tls::ScopedKey&lt;T&gt;::set () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#8  0x00007fddfc401f64 in syntax::with_globals () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#9  0x00007fddfc43cb60 in rustc_interface::util::spawn_thread_pool () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#10 0x00007fddfc3d0020 in rustc_driver::run_compiler () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#11 0x00007fddfc41a9a4 in &lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once ()\n   from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#12 0x00007fddfc3f3f4c in std::panicking::try::do_call () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#13 0x00007fddfbefcf6a in __rust_maybe_catch_panic () at src/libpanic_unwind/lib.rs:81\n#14 0x00007fddfc3d5999 in rustc_driver::catch_fatal_errors () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#15 0x00007fddfc3d6ab1 in rustc_driver::main () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#16 0x000055f21eb61423 in std::rt::lang_start::{{closure}} ()\n#17 0x00007fddfbeebfd3 in std::rt::lang_start_internal::{{closure}} () at src/libstd/rt.rs:48\n#18 std::panicking::try::do_call () at src/libstd/panicking.rs:287\n#19 0x00007fddfbefcf6a in __rust_maybe_catch_panic () at src/libpanic_unwind/lib.rs:81\n#20 0x00007fddfbeecb4d in std::panicking::try () at src/libstd/panicking.rs:265\n#21 std::panic::catch_unwind () at src/libstd/panic.rs:395\n#22 std::rt::lang_start_internal () at src/libstd/rt.rs:47\n#23 0x000055f21eb61412 in main ()\n</pre></div>",
        "id": 181141596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574189076
    },
    {
        "content": "<p>well maybe I should add more threads</p>",
        "id": 181142732,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574189791
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>(gdb) bt\n#0  0x00007f0abb827c45 in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\n#1  0x00007f0abdda6f02 in rustc_rayon_core::sleep::Sleep::sleep () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#2  0x00007f0abdda5f13 in rustc_rayon_core::registry::WorkerThread::wait_until_cold () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#3  0x00007f0abdda3e33 in rustc_rayon_core::registry::ThreadBuilder::run () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#4  0x00007f0abbe163f9 in scoped_tls::ScopedKey&lt;T&gt;::set () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#5  0x00007f0abbe10cd9 in std::thread::local::LocalKey&lt;T&gt;::with () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#6  0x00007f0abbe16650 in scoped_tls::ScopedKey&lt;T&gt;::set () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#7  0x00007f0abbe0e5e7 in crossbeam_utils::thread::ScopedThreadBuilder::spawn::{{closure}} () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#8  0x00007f0abbe178eb in std::sys_common::backtrace::__rust_begin_short_backtrace () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#9  0x00007f0abb8eef6a in __rust_maybe_catch_panic () at src/libpanic_unwind/lib.rs:81\n#10 0x00007f0abbe28799 in core::ops::function::FnOnce::call_once{{vtable-shim}} () from /home/santiago/.rustup/toolchains/540c0b9a1aea77a85ec449623ce5c509f0833899-alt/bin/../lib/librustc_driver-6c2442420060056d.so\n#11 0x00007f0abb8bfccf in &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once () at /rustc/540c0b9a1aea77a85ec449623ce5c509f0833899/src/liballoc/boxed.rs:942\n#12 0x00007f0abb8ed990 in &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once () at /rustc/540c0b9a1aea77a85ec449623ce5c509f0833899/src/liballoc/boxed.rs:942\n#13 std::sys_common::thread::start_thread () at src/libstd/sys_common/thread.rs:13\n#14 std::sys::unix::thread::Thread::new::thread_start () at src/libstd/sys/unix/thread.rs:79\n#15 0x00007f0abb8214cf in start_thread () from /usr/lib/libpthread.so.0\n#16 0x00007f0abb73e2d3 in clone () from /usr/lib/libc.so.6\n</pre></div>",
        "id": 181142734,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574189793
    },
    {
        "content": "<p>most threads are locked in Sleep::sleep</p>",
        "id": 181142920,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574189890
    },
    {
        "content": "<p>I wonder if the release_thread calls are placed correctly <a href=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136\">https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136</a></p>",
        "id": 181143359,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574190146
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>   0x00007f0abdda6ee3 &lt;+259&gt;:   callq  *0xb3b8c7(%rip)        # 0x7f0abe8e27b0\n   0x00007f0abdda6ee9 &lt;+265&gt;:   mov    (%r12),%rbp\n   0x00007f0abdda6eed &lt;+269&gt;:   mov    %rbx,%rdi\n   0x00007f0abdda6ef0 &lt;+272&gt;:   callq  *0xb3acb2(%rip)        # 0x7f0abe8e1ba8\n   0x00007f0abdda6ef6 &lt;+278&gt;:   mov    %rbp,%rdi\n   0x00007f0abdda6ef9 &lt;+281&gt;:   mov    %rax,%rsi\n   0x00007f0abdda6efc &lt;+284&gt;:   callq  *0xb3db3e(%rip)        # 0x7f0abe8e4a40\n   0x00007f0abdda6f02 &lt;+290&gt;:   movzbl 0x8(%r14),%eax\n   0x00007f0abdda6f07 &lt;+295&gt;:   test   %al,%al\n   0x00007f0abdda6f09 &lt;+297&gt;:   jne    0x7f0abdda6ff2 &lt;_ZN16rustc_rayon_core5sleep5Sleep5sleep17ha30ef7a045af5111E+530&gt;\n   0x00007f0abdda6f0f &lt;+303&gt;:   cmpb   $0x0,0x9(%r14)\n   0x00007f0abdda6f14 &lt;+308&gt;:   mov    %r14,%r13\n   0x00007f0abdda6f17 &lt;+311&gt;:   jne    0x7f0abdda6ed0 &lt;_ZN16rustc_rayon_core5sleep5Sleep5sleep17ha30ef7a045af5111E+240&gt;\n   0x00007f0abdda6f19 &lt;+313&gt;:   mov    %r14,(%rsp)\n</pre></div>",
        "id": 181144712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574190998
    },
    {
        "content": "<blockquote>\n<p>I wonder if the release_thread calls are placed correctly <a href=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136\">https://github.com/spastorino/rustc-rayon/commit/64a886ed6c099677dc8fbde580f6294f7763609e#diff-c5cfc0fcc3d66d15f5c96fa0bc58fa93L136</a></p>\n</blockquote>\n<p>I think they are correct, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 181155829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198600
    },
    {
        "content": "<p>right now the release is basically <em>right before</em> we go to sleep</p>",
        "id": 181155858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198638
    },
    {
        "content": "<p>and the acquire is effectively <em>right after</em></p>",
        "id": 181155867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198642
    },
    {
        "content": "<p>that seems correct</p>",
        "id": 181155903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198644
    },
    {
        "content": "<blockquote>\n<p>wouldn't be better to just skip the commit for now?</p>\n</blockquote>\n<p>would be ok, probably doesn't help tho</p>",
        "id": 181155957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198696
    },
    {
        "content": "<p>I guess I don't really know why it's deadlocking, could well be a bug in the code, or maybe some kind of rebase error</p>",
        "id": 181156025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198751
    },
    {
        "content": "<p>One thing we could do is to run with the logging enabled</p>",
        "id": 181156041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198762
    },
    {
        "content": "<p>that would require building with <code>RUSTFLAGS='--cfg rayon_rs_log'</code>, or else altering the branch to enable logs all the time</p>",
        "id": 181156149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198833
    },
    {
        "content": "<p>the latter is prob easier</p>",
        "id": 181156176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198854
    },
    {
        "content": "<p>there is a line of code in rayon-core/src/log.rs like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">super</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LOG_ENABLED</span>: <span class=\"kt\">bool</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cfg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">any</span><span class=\"p\">(</span><span class=\"n\">rayon_rs_log</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">debug_assertions</span><span class=\"p\">));</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>which we could change to </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">super</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LOG_ENABLED</span>: <span class=\"kt\">bool</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre></div>",
        "id": 181156266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198884
    },
    {
        "content": "<p>and then run with <code>RAYON_RS_LOG=tail:killme.csv</code></p>",
        "id": 181156283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198901
    },
    {
        "content": "<p>that will make a file called <code>killme.csv</code> with the last 10K events or something like that</p>",
        "id": 181156315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198921
    },
    {
        "content": "<p>which is usually enough to kind of track what happened</p>",
        "id": 181156322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574198928
    },
    {
        "content": "<p>I could do that</p>",
        "id": 181156544,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199101
    },
    {
        "content": "<p>meanwhile I got some info on exactly where are we deadlocking</p>",
        "id": 181156561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199115
    },
    {
        "content": "<p>threads are locked in:</p>",
        "id": 181156623,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199128
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L206\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L206\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L206</a></p>",
        "id": 181156624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199129
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374</a></p>",
        "id": 181156632,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199134
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L543\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L543\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L543</a></p>",
        "id": 181156643,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199138
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L381\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L381\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L381</a></p>",
        "id": 181156649,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199145
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369</a></p>",
        "id": 181156657,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574199155
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/registry.rs#L374</a></p>\n</blockquote>\n<p>huh, that's an interesting one</p>",
        "id": 181157325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199636
    },
    {
        "content": "<p>ah wait</p>",
        "id": 181157395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> hmm ok I think I know the problem</p>",
        "id": 181157460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199728
    },
    {
        "content": "<p>I suspect we need to add <code>drop(is_blocked)</code> before <a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L218\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L218\">the call to <code>acquire_thread</code> here</a></p>",
        "id": 181157474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199751
    },
    {
        "content": "<p>actually i'm a bit surprised I acquire that lock so early</p>",
        "id": 181157513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199800
    },
    {
        "content": "<p>though I think I have to do it before some of the other operations to avoid missing an interrupt</p>",
        "id": 181157523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199818
    },
    {
        "content": "<p>anyway, as the code is now, if we block in <code>acquire_thread</code>, other threads may fail when trying to wake us up</p>",
        "id": 181157537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199834
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L369</a></p>\n</blockquote>\n<p>the tip off is here -- we should not be blocked here</p>",
        "id": 181157598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199863
    },
    {
        "content": "<p>as <code>is_blocked</code> should never be locked for an indefinite amount of time</p>",
        "id": 181157608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574199876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, adding a drop there works</p>",
        "id": 181178349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574223151
    },
    {
        "content": "<p>just pushed to <code>spastorino/rustc-rayon</code> and pushed to <a href=\"https://github.com/rust-lang/rust/pull/66527\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66527\">the PR</a> and re-run try again</p>",
        "id": 181178364,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574223196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> can you give it a try to it when you're available?</p>",
        "id": 181200051,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574250839
    },
    {
        "content": "<p>Ok I've given the build a spin</p>",
        "id": 181218243,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264115
    },
    {
        "content": "<p>I'm getting pretty similar numbers though</p>",
        "id": 181218254,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264119
    },
    {
        "content": "<p>I don't think that there's really too much difference</p>",
        "id": 181218265,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264124
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------\n\n   futex                56856  1183229.780     0.000    20.811  2110.401\n   sched_yield         189175  1042027.023     0.001     5.508   911.355\n   poll                  7079   469753.013     0.000    66.359  1676.488\n   read                 11149   446902.643     0.000    40.085  1186.069\n   write                 8890    57014.269     0.000     6.413  1010.733\n   munmap                7093    34554.982     0.000     4.872  1010.743\n   rt_sigprocmask        2837    14168.891     0.000     4.994   204.912\n</pre></div>",
        "id": 181218283,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264133
    },
    {
        "content": "<p>that's still a huge amount of time in <code>sched_yield</code></p>",
        "id": 181218292,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ^</p>",
        "id": 181218927,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574264513
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 181219011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574264550
    },
    {
        "content": "<p>so I guess the rayon work didn't help that much</p>",
        "id": 181219028,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574264564
    },
    {
        "content": "<p>I really would like to get a % allocation of where those calls are coming from</p>",
        "id": 181221812,
        "sender_full_name": "simulacrum",
        "timestamp": 1574266242
    },
    {
        "content": "<p>e.g. is it actually rayon? or are our locks for example not great (e.g., we don't do the \"fast\" path in Mutex I believe)</p>",
        "id": 181221830,
        "sender_full_name": "simulacrum",
        "timestamp": 1574266261
    },
    {
        "content": "<p>hm so I do not have 14/28 cores -- but I tried to run the benchmark on cargo locally, and I'm not seeing a similar problem</p>\n<p>threads=1:</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max   calls/process\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------  -------------\n\n   futex                45212    60899.383     0.001     1.347  1237.811       64\n   poll                   406    28968.423     0.002    71.351   937.439        0\n   read                  5913    11218.518     0.001     1.897   391.518        8\n   execve                 212      348.855     0.144     1.646    12.630        0\n   clone                 1308      319.756     0.000     0.244     5.406        1\n   openat               16447      139.963     0.002     0.009    16.200       23\n   mmap                 11993      124.975     0.002     0.010     7.969       17\n   munmap                3038      115.923     0.002     0.038     3.028        4\n   write                 3199       63.374     0.001     0.020     0.360        4\n   lstat                16320       56.009     0.001     0.003     0.144       23\n</pre></div>\n\n\n<p>threads=16:</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max   calls/process\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------  -------------\n\n   futex                49488   492724.271     0.001     9.956  2275.793       29\n   poll                  4438   308205.607     0.002    69.447   777.625        2\n   read                  8790   116879.351     0.001    13.297   293.349        5\n   sched_yield         120716     3300.245     0.001     0.027    30.798       72\n   clone                 3269     1608.880     0.000     0.492    32.415        1\n   munmap                4961     1286.013     0.002     0.259    46.807        2\n   write                 6558     1052.591     0.001     0.161    46.031        3\n   mmap                 14455      425.569     0.002     0.029    11.968        8\n   execve                 170      375.855     0.148     2.211    16.231        0\n   madvise               1731      190.411     0.003     0.110    46.988        1\n</pre></div>",
        "id": 181269274,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301439
    },
    {
        "content": "<p>certainly many more sched_yield calls</p>",
        "id": 181269286,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301461
    },
    {
        "content": "<p>but not drastically so</p>",
        "id": 181269287,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301464
    },
    {
        "content": "<p>and very little time spent (3.3 seconds only, across 16 cores of 3 seconds so -- 7% of time?)</p>",
        "id": 181269347,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301520
    },
    {
        "content": "<p>going to try out the original commit</p>",
        "id": 181269365,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301554
    },
    {
        "content": "<p>the old commit (<a href=\"https://github.com/rust-lang/rust/commit/8d78bf6b273848d17da8f5c92162c6a6b9b10dfd\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/8d78bf6b273848d17da8f5c92162c6a6b9b10dfd\">8d78bf6b273848d17da8f5c92162c6a6b9b10dfd</a>-alt) I also don't see anything like the numbers you report:</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max   calls/process\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------  -------------\n\n   futex                44951   414095.520     0.001     9.212  2084.394       29\n   poll                  4403   386375.166     0.002    87.753   840.755        2\n   read                  8081   168858.116     0.001    20.896   485.283        5\n   sched_yield         250017     2598.084     0.001     0.010    10.362      165\n   clone                 2951     1580.496     0.000     0.536    12.840        1\n   write                 6045     1161.817     0.001     0.192    32.851        4\n   mmap                 12679      465.769     0.002     0.037    27.262        8\n   statx                 2214      355.845     0.002     0.161    34.590        1\n   openat               11254      302.685     0.002     0.027    34.587        7\n   execve                 146      211.512     0.145     1.449    13.039        0\n</pre></div>",
        "id": 181269471,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301684
    },
    {
        "content": "<p>certainly we're yielding more than we do at threads=1 but that seems ... reasonable</p>",
        "id": 181269590,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> I'm on somewhat similar hardware (1800X ryzen) and running 5.0.0-36-generic as my kernel... I wonder if there's something about your system that is leading to these different numbers</p>",
        "id": 181269748,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301969
    },
    {
        "content": "<p>I wonder if we can try to find another system to try this out on (to try and replicate)</p>",
        "id": 181269762,
        "sender_full_name": "simulacrum",
        "timestamp": 1574301986
    },
    {
        "content": "<p>separately trying to get a picture of how \"good\" we are at using the CPUs during those initial 3 seconds; this is from <code>perf sched timehist -s</code> </p>\n<div class=\"codehilite\"><pre><span></span>Idle stats:\n    CPU  0 idle for    404.750  msec  ( 14.03%)\n    CPU  1 idle for     59.332  msec  (  2.06%)\n    CPU  2 idle for    156.965  msec  (  5.44%)\n    CPU  3 idle for    436.694  msec  ( 15.14%)\n    CPU  4 idle for      3.127  msec  (  0.11%)\n    CPU  5 idle for    332.809  msec  ( 11.53%)\n    CPU  6 idle for    390.287  msec  ( 13.53%)\n    CPU  7 idle for    196.263  msec  (  6.80%)\n    CPU  8 idle for    213.140  msec  (  7.39%)\n    CPU  9 idle for    165.615  msec  (  5.74%)\n    CPU 10 idle for    220.957  msec  (  7.66%)\n    CPU 11 idle for    246.667  msec  (  8.55%)\n    CPU 12 idle for    361.374  msec  ( 12.52%)\n    CPU 13 idle for    415.110  msec  ( 14.39%)\n    CPU 14 idle for    440.170  msec  ( 15.26%)\n    CPU 15 idle for     93.169  msec  (  3.23%)\n</pre></div>",
        "id": 181270148,
        "sender_full_name": "simulacrum",
        "timestamp": 1574302557
    },
    {
        "content": "<p>this also seems not too bad, although the numbers are higher than I'd like</p>",
        "id": 181270192,
        "sender_full_name": "simulacrum",
        "timestamp": 1574302570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I believe this problem is directly related to the number of cores actually</p>",
        "id": 181271531,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304538
    },
    {
        "content": "<p>Can you try overcommitting with j28 and Z16?</p>",
        "id": 181271541,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304552
    },
    {
        "content": "<p>The problem I think is happening by definition goes away on low core counts</p>",
        "id": 181271550,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304569
    },
    {
        "content": "<p>hm, does -j28 have effect? I sort of thought we \"limited\" it at num_cpus</p>",
        "id": 181271553,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304573
    },
    {
        "content": "<p>We don't</p>",
        "id": 181271556,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304581
    },
    {
        "content": "<p>ah okay will try</p>",
        "id": 181271559,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304586
    },
    {
        "content": "<p>J28 tells cargo to spawn 28 things</p>",
        "id": 181271561,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304593
    },
    {
        "content": "<p>You just gotta override both rustc and cargo</p>",
        "id": 181271609,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304611
    },
    {
        "content": "<p>and the numbers above are for first 3 seconds still right?</p>",
        "id": 181271621,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304647
    },
    {
        "content": "<p>Yeah</p>",
        "id": 181271623,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304654
    },
    {
        "content": "<p>and are you <code>cargo check</code> or <code>cargo build</code>?</p>",
        "id": 181271624,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304655
    },
    {
        "content": "<p>If you look at top you should see a lot of.red</p>",
        "id": 181271631,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304665
    },
    {
        "content": "<p>Er htop</p>",
        "id": 181271634,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304673
    },
    {
        "content": "<p>Check I think</p>",
        "id": 181271635,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304677
    },
    {
        "content": "<p>like if you watch htop during a normal build it should be a lot of.green</p>",
        "id": 181271645,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304702
    },
    {
        "content": "<p>Given lots of parallelism it should go to a lot of red</p>",
        "id": 181271650,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304711
    },
    {
        "content": "<p>basically I'm trying to quantify how we're wasting tons of cpu cycles to parallelism</p>",
        "id": 181271718,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304803
    },
    {
        "content": "<p>in such a way that's actually hurtful sometimes</p>",
        "id": 181271720,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304808
    },
    {
        "content": "<p>although I do not know precisely where all the wasted cpu cycles are going</p>",
        "id": 181271723,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304830
    },
    {
        "content": "<p>hm</p>",
        "id": 181271726,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304838
    },
    {
        "content": "<p>I'm just suspecting rayon's original management of threads, given that niko says threads take awhile before going to sleep</p>",
        "id": 181271768,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304845
    },
    {
        "content": "<p>so -Z16 and -j28 is indeed a little red, but not too much</p>",
        "id": 181271770,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304847
    },
    {
        "content": "<p>try Z 28</p>",
        "id": 181271773,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304853
    },
    {
        "content": "<p>z16,j28</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max   calls/process\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------  -------------\n\n   futex                49412   644980.216     0.000    13.053  2434.576       29\n   poll                  5053   350509.408     0.000    69.367  1261.564        3\n   read                  9007   218561.099     0.000    24.266  1343.709        5\n   sched_yield         136958    23475.238     0.000     0.171   408.015       82\n   clone                 3073     2463.893     0.000     0.802    94.421        1\n   lstat                12284     2180.009     0.001     0.177   116.997        7\n   write                 7050     1602.995     0.001     0.227   408.168        4\n   mmap                 13393      835.740     0.000     0.062    58.253        8\n   execve                 155      703.738     0.000     4.540    31.124        0\n   statx                 2494      320.205     0.002     0.128   116.849        1\n</pre></div>",
        "id": 181271774,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304865
    },
    {
        "content": "<p>like I think it's an n^2 problem</p>",
        "id": 181271775,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304868
    },
    {
        "content": "<p>I feel like that alone is somewhat damning though</p>",
        "id": 181271778,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304877
    },
    {
        "content": "<p>er no, microseconds not milliseconds</p>",
        "id": 181271784,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304891
    },
    {
        "content": "<p>but even still sched_yield is <em>super</em> high</p>",
        "id": 181271786,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304897
    },
    {
        "content": "<p>when the compiler basically shouldn't ever need to call that</p>",
        "id": 181271790,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304902
    },
    {
        "content": "<p>like that's pure wasted work</p>",
        "id": 181271815,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304908
    },
    {
        "content": "<p>or inefficient locks</p>",
        "id": 181271816,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304911
    },
    {
        "content": "<p>z28,j28</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max   calls/process\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------  -------------\n\n   futex                44449  1077188.759     0.000    24.234  2435.781       21\n   poll                  5044   707108.738     0.000   140.188  1255.582        2\n   read                  8110   395605.906     0.000    48.780  1044.792        3\n   sched_yield         130912   361197.555     0.000     2.759   826.776       62\n   write                 6331    16191.301     0.000     2.557   826.988        3\n   munmap                4582     7346.600     0.000     1.603   424.413        2\n   clone                 4029     5330.293     0.000     1.323   208.436        1\n   madvise               1420     2435.015     0.000     1.715   424.451        0\n   sigaltstack           5344     2205.971     0.000     0.413   424.403        2\n   mmap                 14459     1444.194     0.000     0.100    38.904        6\n</pre></div>",
        "id": 181271820,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304920
    },
    {
        "content": "<p>it's also a massive amount of time in futex...</p>",
        "id": 181271821,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304922
    },
    {
        "content": "<p>futex time is crazy, yes</p>",
        "id": 181271823,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304928
    },
    {
        "content": "<p>I agree that these numbers are suspicious at best :)</p>",
        "id": 181271827,
        "sender_full_name": "simulacrum",
        "timestamp": 1574304938
    },
    {
        "content": "<p>I also think <code>/usr/bin/time</code> can be informative</p>",
        "id": 181271831,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304958
    },
    {
        "content": "<p><a href=\"https://hackmd.io/oUdvUU2lTk2ZxfOWQBT9xQ#Crates-in-the-first-3-seconds\" target=\"_blank\" title=\"https://hackmd.io/oUdvUU2lTk2ZxfOWQBT9xQ#Crates-in-the-first-3-seconds\">https://hackmd.io/oUdvUU2lTk2ZxfOWQBT9xQ#Crates-in-the-first-3-seconds</a></p>",
        "id": 181271832,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304959
    },
    {
        "content": "<p>like the involuntary context switches is really weird</p>",
        "id": 181271877,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574304981
    },
    {
        "content": "<p>28/28 I am seeing similar number of involuntary switches (64309)</p>",
        "id": 181271910,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305067
    },
    {
        "content": "<p>also the user time is pretty indicative</p>",
        "id": 181271955,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305095
    },
    {
        "content": "<p>like the more threads the more user time went down</p>",
        "id": 181271957,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305100
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>        Command being timed: &quot;/home/mark/.cargo/bin/cargo +ab0dc4e2702a383b051a08b88350c8139a8b47c7-alt check -j28&quot;\n        User time (seconds): 6.35\n        System time (seconds): 13.35\n        Percent of CPU this job got: 650%\n</pre></div>",
        "id": 181271961,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305112
    },
    {
        "content": "<p>which meant that the more parallelism you have the more that's being wsated in the kernel</p>",
        "id": 181271962,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305113
    },
    {
        "content": "<p>with t8,j28</p>\n<div class=\"codehilite\"><pre><span></span>        Command being timed: &quot;/home/mark/.cargo/bin/cargo +ab0dc4e2702a383b051a08b88350c8139a8b47c7-alt check -j28&quot;\n        User time (seconds): 28.44\n        System time (seconds): 7.64\n        Percent of CPU this job got: 1195%\n</pre></div>",
        "id": 181271975,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305140
    },
    {
        "content": "<p>for a compiler user time should be like 100%</p>",
        "id": 181271982,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305145
    },
    {
        "content": "<p>like compare those numbers with the single-threaded compiler</p>",
        "id": 181271989,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305156
    },
    {
        "content": "<p>single threaded is indeed on par with -t8 I think:</p>\n<div class=\"codehilite\"><pre><span></span>        Command being timed: &quot;/home/mark/.cargo/bin/cargo +ab0dc4e2702a383b051a08b88350c8139a8b47c7 check -j28&quot;\n        User time (seconds): 31.49\n        System time (seconds): 4.02\n        Percent of CPU this job got: 1176%\n</pre></div>",
        "id": 181272051,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305236
    },
    {
        "content": "<p>Is sched_yield just called by locks? It doesn't seem like something Rayon / thread spawning would call</p>",
        "id": 181272058,
        "sender_full_name": "Zoxc",
        "timestamp": 1574305261
    },
    {
        "content": "<p>rayon threads yield while trying to sleep</p>",
        "id": 181272077,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305305
    },
    {
        "content": "<p><a href=\"https://github.com/rayon-rs/rayon/blob/401678ee554f90ab11abe70eb23737e26b489ddd/rayon-core/src/sleep/mod.rs#L63-L95\" target=\"_blank\" title=\"https://github.com/rayon-rs/rayon/blob/401678ee554f90ab11abe70eb23737e26b489ddd/rayon-core/src/sleep/mod.rs#L63-L95\">https://github.com/rayon-rs/rayon/blob/401678ee554f90ab11abe70eb23737e26b489ddd/rayon-core/src/sleep/mod.rs#L63-L95</a></p>",
        "id": 181272120,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305331
    },
    {
        "content": "<p>like we may be able to ship what we have now if we just cap compiler threads at 6</p>",
        "id": 181272124,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305336
    },
    {
        "content": "<p>instead of ncpus</p>",
        "id": 181272126,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305338
    },
    {
        "content": "<p>is what I'm reading from this data</p>",
        "id": 181272129,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305342
    },
    {
        "content": "<p>it does seem that way</p>",
        "id": 181272132,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305348
    },
    {
        "content": "<p>it's a bit worrisome that I can't reproduce the sched_yield stuff no matter what, like, I get higher numbers but not astronomically like you do</p>",
        "id": 181272137,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305366
    },
    {
        "content": "<p>Hm.. I don't see why Rayon should call <code>thread::yield_now</code>. There won't be any threads to switch to if everything works correctly</p>",
        "id": 181272211,
        "sender_full_name": "Zoxc",
        "timestamp": 1574305455
    },
    {
        "content": "<p>I think the thought is that it is \"inexpensive sleep\"</p>",
        "id": 181272220,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305471
    },
    {
        "content": "<p>that might be false though :)</p>",
        "id": 181272225,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305475
    },
    {
        "content": "<p>and it's not strictly true that might not be effective</p>",
        "id": 181272230,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305484
    },
    {
        "content": "<p>mutexes may call yield, depends on the implementation</p>",
        "id": 181272233,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574305488
    },
    {
        "content": "<p>that's only true on a system where rustc is the only thing</p>",
        "id": 181272235,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305491
    },
    {
        "content": "<p>It's a very expensive sleep, <code>std::sync::atomic::spin_loop_hint</code> is probably what should be called?</p>",
        "id": 181272306,
        "sender_full_name": "Zoxc",
        "timestamp": 1574305578
    },
    {
        "content": "<p>hm, I don't know, maybe</p>",
        "id": 181272320,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305605
    },
    {
        "content": "<p>it's called pretty eagerly on rayon master</p>",
        "id": 181272323,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305614
    },
    {
        "content": "<p>and same with Niko's branch (<a href=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L104\" target=\"_blank\" title=\"https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L104\">https://github.com/spastorino/rustc-rayon/blob/latch-target-thread-rustc/rayon-core/src/sleep/mod.rs#L104</a>)</p>",
        "id": 181272341,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305657
    },
    {
        "content": "<p>We could patch it out and see if it helps with Alex's 14 cores.</p>",
        "id": 181272342,
        "sender_full_name": "Zoxc",
        "timestamp": 1574305661
    },
    {
        "content": "<p>I suspect it might just want to do nothing</p>",
        "id": 181272343,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305662
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> would you be up to removing the yield_now calls from rayon and re-pushing that up as a try build?</p>",
        "id": 181272350,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305680
    },
    {
        "content": "<p>But yeah I think it may be that we just limit ourselves to, say, -Zthreads=6 or something for now</p>",
        "id": 181272415,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305768
    },
    {
        "content": "<p>otoh, we can't even get major performance wins with that (nowhere near linear speedup)</p>",
        "id": 181272419,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305781
    },
    {
        "content": "<p>We'd want to limit rustc to the number of threads which gives the fastest builds anyway. There's probably some contention in rustc which limits that far below 14 cores currently</p>",
        "id": 181272484,
        "sender_full_name": "Zoxc",
        "timestamp": 1574305832
    },
    {
        "content": "<p>(e.g., worth noting that we shard to 32 - that might be too small if your thread count is half that)</p>",
        "id": 181272501,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305870
    },
    {
        "content": "<p>anyway, I'm off for the night but hopefully we can rebenchmark with rayon's yielding removed at least</p>",
        "id": 181272521,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305915
    },
    {
        "content": "<p>but either way seems like we have rough consensus that limiting thread count would be fine for now</p>",
        "id": 181272564,
        "sender_full_name": "simulacrum",
        "timestamp": 1574305929
    },
    {
        "content": "<blockquote>\n<p>It's a very expensive sleep, <code>std::sync::atomic::spin_loop_hint</code> is probably what should be called?</p>\n</blockquote>\n<p>this makes me a bit worried... this sort of conveys a bit of a misunderstanding of what a spin loop is used for?</p>",
        "id": 181272746,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574306214
    },
    {
        "content": "<p>if you peg a core waiting for a mutex to get unlocked if an off-core thread actually holds the lock you just eat your whole time slice spinning</p>",
        "id": 181272758,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574306238
    },
    {
        "content": "<p>the thinking is that you spin for a little bit, which I suspect that parking lot already does</p>",
        "id": 181272765,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574306253
    },
    {
        "content": "<p>and then you switch to the system, likely with a futex (hopefully) rather than a thread yield</p>",
        "id": 181272772,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574306264
    },
    {
        "content": "<p>Rayon spins a bit (64 iterations) before giving up its jobserver token and actually sleeping. It calls <code>yield_now</code> per iteration of that loop currently.</p>",
        "id": 181272990,
        "sender_full_name": "Zoxc",
        "timestamp": 1574306525
    },
    {
        "content": "<p>We can tune the amount of iterations too, to see if it that helps.</p>",
        "id": 181273006,
        "sender_full_name": "Zoxc",
        "timestamp": 1574306575
    },
    {
        "content": "<p>We probably want to replace the <code>yield_now</code> calls in Rayon with an user-mode sleep operation to avoid contention on Rayon's data structures. Possibly with quadratic back-off.</p>",
        "id": 181273298,
        "sender_full_name": "Zoxc",
        "timestamp": 1574307040
    },
    {
        "content": "<p>Just removing them would let us verify that it is the Rayon calls that is showing up in the profile.</p>",
        "id": 181273401,
        "sender_full_name": "Zoxc",
        "timestamp": 1574307227
    },
    {
        "content": "<p>It would also be interesting to know how much thread spawning is slowing down small crates. Perhaps we could create a branch which just crates 27 thread which just acquires a jobserver token and releases it, and just uses 1 thread for rustc itself, and compare how that performs on small crates versus 28 rustc threads</p>",
        "id": 181273858,
        "sender_full_name": "Zoxc",
        "timestamp": 1574307849
    },
    {
        "content": "<p>Limiting Rayon to only creating a thread every 5 ms or so might be a good idea. It would avoid contention in the kernel, avoid wasting time creating extra threads for small crates and it would also effectively load balance jobserver tokens between rustc processes if cargo spawns a bunch of rustc instances.</p>",
        "id": 181274178,
        "sender_full_name": "Zoxc",
        "timestamp": 1574308409
    },
    {
        "content": "<p>Yes I think a big issue is that for my system every rustc process spawns 28 threads which then yield a bunch and then sleep. Every single compiler does this while trading around who's got the token to idle for a bit I believe</p>",
        "id": 181275862,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574311293
    },
    {
        "content": "<p>Throttling thread creation would be a huge win I suspect, but I doubt time limiting is needed but rather only spinning up a thread when there is parallel work to do</p>",
        "id": 181275911,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574311325
    },
    {
        "content": "<p>Rather than spawning all threads at the start</p>",
        "id": 181275914,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574311332
    },
    {
        "content": "<p>This means we would need some sort of coordinator thread or something like that but I don't think that's the end of the world</p>",
        "id": 181275928,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574311384
    },
    {
        "content": "<p>There is likely enough parallel work in a small crate (say typechecking 28 functions) to spawn 28 threads. We'll immediately do parallel parsing too, but small crates will probably have just a few files.</p>",
        "id": 181277711,
        "sender_full_name": "Zoxc",
        "timestamp": 1574314400
    },
    {
        "content": "<blockquote>\n<p>cc <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> would you be up to removing the yield_now calls from rayon and re-pushing that up as a try build?</p>\n</blockquote>\n<p>I can try that yeah</p>",
        "id": 181300342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574340213
    },
    {
        "content": "<p>if you have 28 functions then you shouldn't spin up 28 threads, right? Like, I would hope that we can tune rayon or w/e to be less eager</p>",
        "id": 181301087,
        "sender_full_name": "simulacrum",
        "timestamp": 1574340708
    },
    {
        "content": "<p>type checking 28 functions should likely be done on a single thread</p>",
        "id": 181301092,
        "sender_full_name": "simulacrum",
        "timestamp": 1574340721
    },
    {
        "content": "<p>Some rough thinking I have is that the main thread, the one that main starts on, is the one responsible for Fielding requests to spin up new threads</p>",
        "id": 181303523,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574342695
    },
    {
        "content": "<p>It then always reads a jobswrver token before it spins up a new thread</p>",
        "id": 181303539,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574342709
    },
    {
        "content": "<p>Which should ideally throttle it by quite a bit, and also caps the total number of threads</p>",
        "id": 181303562,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574342727
    },
    {
        "content": "<p>By adding a few Ms of latency we can also amortize tiny bursts of parallelism I'd hope</p>",
        "id": 181303603,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574342749
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/66608\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66608\">https://github.com/rust-lang/rust/pull/66608</a></p>",
        "id": 181316596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574350940
    },
    {
        "content": "<p>I thought I've already shared that but seems I didn't (?)</p>",
        "id": 181316635,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574350968
    },
    {
        "content": "<p>anyway, try didn't finish yet</p>",
        "id": 181316664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574350987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/66608#issuecomment-557234516\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66608#issuecomment-557234516\">https://github.com/rust-lang/rust/pull/66608#issuecomment-557234516</a> unsure if that means that we need to run try again or what</p>",
        "id": 181575196,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574364362
    },
    {
        "content": "<p>Yeah bors retry should do it</p>",
        "id": 181575840,
        "sender_full_name": "simulacrum",
        "timestamp": 1574364759
    },
    {
        "content": "<p>done and we have a try build ready <a href=\"https://github.com/rust-lang/rust/pull/66608#issuecomment-557569098\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66608#issuecomment-557569098\">https://github.com/rust-lang/rust/pull/66608#issuecomment-557569098</a></p>",
        "id": 181647382,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574436217
    },
    {
        "content": "<p>can you try again your tests?</p>",
        "id": 181647393,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574436225
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 181647410,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574436233
    },
    {
        "content": "<p>building now</p>",
        "id": 181654373,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440507
    },
    {
        "content": "<p>well that definitely erased <code>sched_yield</code> from the perf output</p>",
        "id": 181654553,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440608
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------\n\n   futex                52673    45873.689     0.001     0.871  1289.374\n   poll                   608    12383.221     0.001    20.367   325.203\n   read                  7374     2967.659     0.001     0.402   171.086\n   clone                 1593      777.233     0.000     0.488     5.518\n   execve                 232      224.929     0.081     0.970    14.779\n   openat               27286      126.343     0.001     0.005    18.379\n</pre></div>",
        "id": 181654575,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440623
    },
    {
        "content": "<p>er spoke too soon</p>",
        "id": 181654618,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440650
    },
    {
        "content": "<p>that's threads=1</p>",
        "id": 181654620,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440651
    },
    {
        "content": "<p>this is threads=28</p>\n<div class=\"codehilite\"><pre><span></span>   syscall              calls       total       min       avg       max\n                                    (msec)    (msec)    (msec)    (msec)\n   ----------------- -------- ------------ --------- --------- ---------\n\n   futex                70130  1146037.646     0.001    16.342  1918.354\n   read                 14774   472861.060     0.001    32.006   787.389\n   poll                 10155   295364.289     0.000    29.086   787.293\n   sched_yield          15723    22342.877     0.001     1.421   124.090\n   write                12407    13890.783     0.001     1.120   787.618\n   clone                 5097    13820.337     0.000     2.711    69.469\n   munmap                8538     4180.142     0.000     0.490    66.131\n</pre></div>",
        "id": 181654639,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440665
    },
    {
        "content": "<p>still a massive amount of system time</p>",
        "id": 181654773,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440748
    },
    {
        "content": "<p>for threads=28</p>",
        "id": 181654774,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440750
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>        User time (seconds): 26.96\n        System time (seconds): 40.44\n</pre></div>",
        "id": 181654782,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440756
    },
    {
        "content": "<p>vs threads=1</p>\n<div class=\"codehilite\"><pre><span></span>        User time (seconds): 36.97\n        System time (seconds): 4.15\n</pre></div>",
        "id": 181654809,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574440772
    },
    {
        "content": "<p>doh :(</p>",
        "id": 181657366,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> for threads=28 did this change something or not much?</p>",
        "id": 181657448,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442494
    },
    {
        "content": "<p>it probably changed something but doesn't seem to fix the much of an issue</p>",
        "id": 181657477,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442530
    },
    {
        "content": "<p>yeah I see what you mean but ...</p>",
        "id": 181657585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442605
    },
    {
        "content": "<blockquote>\n<p>the old commit (<a href=\"https://github.com/rust-lang/rust/commit/8d78bf6b273848d17da8f5c92162c6a6b9b10dfd\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/8d78bf6b273848d17da8f5c92162c6a6b9b10dfd\">8d78bf6b273848d17da8f5c92162c6a6b9b10dfd</a>-alt) I also don't see anything like the numbers you report:</p>\n<p>syscall              calls       total       min       avg       max   calls/process<br>\n                                    (msec)    (msec)    (msec)    (msec)</p>\n<hr>\n<p>futex                44951   414095.520     0.001     9.212  2084.394       29<br>\n   poll                  4403   386375.166     0.002    87.753   840.755        2<br>\n   read                  8081   168858.116     0.001    20.896   485.283        5<br>\n   sched_yield         250017     2598.084     0.001     0.010    10.362      165<br>\n   clone                 2951     1580.496     0.000     0.536    12.840        1<br>\n   write                 6045     1161.817     0.001     0.192    32.851        4<br>\n   mmap                 12679      465.769     0.002     0.037    27.262        8<br>\n   statx                 2214      355.845     0.002     0.161    34.590        1<br>\n   openat               11254      302.685     0.002     0.027    34.587        7<br>\n   execve                 146      211.512     0.145     1.449    13.039        0</p>\n</blockquote>\n<p>if this was threads=28</p>",
        "id": 181657602,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442616
    },
    {
        "content": "<p>that was on my system</p>",
        "id": 181657641,
        "sender_full_name": "simulacrum",
        "timestamp": 1574442648
    },
    {
        "content": "<p>we were getting 250000 calls and are now at 15000</p>",
        "id": 181657643,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442651
    },
    {
        "content": "<p>(where sched_yield never featured highly for whatever reason)</p>",
        "id": 181657650,
        "sender_full_name": "simulacrum",
        "timestamp": 1574442655
    },
    {
        "content": "<p>what I meant is ... saw in some of the results <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> shared more than 100.000 calls in some and more than 200.000 in others, and we are now at 15.000</p>",
        "id": 181657707,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442702
    },
    {
        "content": "<p>I understand that didn't fix the problem but this seems like an improvement I guess (?)</p>",
        "id": 181657773,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442727
    },
    {
        "content": "<p>It is an improvement for sure</p>",
        "id": 181657899,
        "sender_full_name": "simulacrum",
        "timestamp": 1574442829
    },
    {
        "content": "<p>yes <code>sched_yield</code> is clearly down</p>",
        "id": 181657908,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442838
    },
    {
        "content": "<p>but the issue is that the system time is crazy huge</p>",
        "id": 181657952,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442843
    },
    {
        "content": "<p>which at this point probably means a massive amount of contention</p>",
        "id": 181657968,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442852
    },
    {
        "content": "<p>like my compiler is getting slower the more threads I throw at it</p>",
        "id": 181657974,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442858
    },
    {
        "content": "<p>yep</p>",
        "id": 181657976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442859
    },
    {
        "content": "<p>which is the opposite of what we want</p>",
        "id": 181657979,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574442861
    },
    {
        "content": "<p>I would like to try to figure out where that contention is coming from</p>",
        "id": 181658000,
        "sender_full_name": "simulacrum",
        "timestamp": 1574442877
    },
    {
        "content": "<p>yeah, for sure something like that's going on :)</p>",
        "id": 181658004,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442882
    },
    {
        "content": "<blockquote>\n<p>I would like to try to figure out where that contention is coming from</p>\n</blockquote>\n<p>I wonder what kind of tool do you use to figure that out</p>",
        "id": 181658056,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442922
    },
    {
        "content": "<p>I'd need to research a bit</p>",
        "id": 181658060,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442929
    },
    {
        "content": "<p><code>perf lock</code> looked possibly promising but seems to need a kernel compiled with some flags</p>",
        "id": 181658134,
        "sender_full_name": "simulacrum",
        "timestamp": 1574442965
    },
    {
        "content": "<p>but we want to get a summary of what's the state of the rest of the threads on every thread acquisition</p>",
        "id": 181658150,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574442978
    },
    {
        "content": "<blockquote>\n<p><code>perf lock</code> looked possibly promising but seems to need a kernel compiled with some flags</p>\n</blockquote>\n<p>I could try to play with all that next week</p>",
        "id": 181658208,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574443024
    },
    {
        "content": "<p>I'm hoping to spend sometime this weekend trying out a few ideas I have -- we'll see how far I get</p>",
        "id": 181658223,
        "sender_full_name": "simulacrum",
        "timestamp": 1574443047
    },
    {
        "content": "<p>like 10 years ago I used to tweak all the kernel flags on my system, today I'm old to do that :P</p>",
        "id": 181658226,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574443050
    },
    {
        "content": "<p>but if needed of course I can play again with it :)</p>",
        "id": 181658229,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574443058
    },
    {
        "content": "<blockquote>\n<p>I'm hoping to spend sometime this weekend trying out a few ideas I have -- we'll see how far I get</p>\n</blockquote>\n<p>better then :), <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 181658241,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574443072
    },
    {
        "content": "<p>if it's not a problem, please try to gather as much as you do, may be something cool to document, share or at the least may be good for me to check out :)</p>",
        "id": 181658324,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1574443112
    },
    {
        "content": "<p>mhm, will try to</p>",
        "id": 181659319,
        "sender_full_name": "simulacrum",
        "timestamp": 1574443786
    },
    {
        "content": "<p>I'd try sharding the symbol and maybe the span interner. Those are behind a single lock currently.</p>",
        "id": 181706974,
        "sender_full_name": "Zoxc",
        "timestamp": 1574499010
    },
    {
        "content": "<p>Bumping the number of shards might also help for Alex's 14 cores. The current number of sufficient for my 8 cores.</p>",
        "id": 181706983,
        "sender_full_name": "Zoxc",
        "timestamp": 1574499091
    },
    {
        "content": "<p>Oh, and Miri could probably use some sharding too</p>",
        "id": 181839130,
        "sender_full_name": "Zoxc",
        "timestamp": 1574699762
    }
]