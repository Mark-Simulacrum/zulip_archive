[
    {
        "content": "<p>Hey everyone, I was doing a document about <code>CrateMetadata</code></p>",
        "id": 179439222,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572446917
    },
    {
        "content": "<p><a href=\"https://hackmd.io/42cKqJroTGKQlNdcID_GlA\" target=\"_blank\" title=\"https://hackmd.io/42cKqJroTGKQlNdcID_GlA\">https://hackmd.io/42cKqJroTGKQlNdcID_GlA</a></p>",
        "id": 179439230,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572446922
    },
    {
        "content": "<p>in particular was going over <code>source_map_import_info</code> field</p>",
        "id": 179439242,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572446940
    },
    {
        "content": "<p>s/attribute/field I believe</p>",
        "id": 179439264,
        "sender_full_name": "simulacrum",
        "timestamp": 1572446957
    },
    {
        "content": "<p>commented to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> about it, and they've made some comments on the doc</p>",
        "id": 179439265,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572446958
    },
    {
        "content": "<p>we were talking about <code>Once</code></p>",
        "id": 179439304,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572446986
    },
    {
        "content": "<p>so ... in this case several threads could arrive to the initialization point together</p>",
        "id": 179439330,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447001
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html</a></p>",
        "id": 179439382,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447008
    },
    {
        "content": "<p>and we want to initialize once and then use it as read only</p>",
        "id": 179439387,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447012
    },
    {
        "content": "<p>I was wondering how does Once works</p>",
        "id": 179439414,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447024
    },
    {
        "content": "<p>so it looks like once has some methods that would let us do that</p>",
        "id": 179439415,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447024
    },
    {
        "content": "<p>and if it fits that logic</p>",
        "id": 179439423,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447030
    },
    {
        "content": "<p>it seemed to me that's exactly what I was looking for :)</p>",
        "id": 179439451,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447038
    },
    {
        "content": "<p>specifically looks like init_locking (<a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html#method.init_locking\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html#method.init_locking\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/sync/struct.Once.html#method.init_locking</a>) is the right thing here</p>",
        "id": 179439486,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447058
    },
    {
        "content": "<p>Once just wraps a Lock in nice APIs</p>",
        "id": 179439500,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447065
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 179439505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447067
    },
    {
        "content": "<p>going to take a look at it and try to port</p>",
        "id": 179439524,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447074
    },
    {
        "content": "<p>then you mentioned that we may get rid of the sync construction altogether ...</p>",
        "id": 179439582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447092
    },
    {
        "content": "<p>any other thought about it?</p>",
        "id": 179439600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447103
    },
    {
        "content": "<p>I think the primitives in once_cell are actually nicer in this sense</p>",
        "id": 179439607,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447108
    },
    {
        "content": "<p>I think moving to Once first might help</p>",
        "id": 179439614,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447115
    },
    {
        "content": "<p>it'll simplify the code a bit for sure</p>",
        "id": 179439621,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447121
    },
    {
        "content": "<p>ok, let me move to <code>Once</code> and then we can discuss the rest</p>",
        "id": 179439674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447132
    },
    {
        "content": "<p>I was going to see if the method is always called in a <code>&amp;mut</code> context</p>",
        "id": 179439675,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447133
    },
    {
        "content": "<p>but I think that's not true?</p>",
        "id": 179439680,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447138
    },
    {
        "content": "<p>is not</p>",
        "id": 179439725,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447181
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/decoder.rs#L1290-L1374\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/decoder.rs#L1290-L1374\">https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/decoder.rs#L1290-L1374</a></p>",
        "id": 179439726,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447181
    },
    {
        "content": "<p>I've realized that my links in the doc point to a specific commit in my local repo, so links don't work on the doc</p>",
        "id": 179439771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447209
    },
    {
        "content": "<p>change the sha to master if you need to check something :)</p>",
        "id": 179439791,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447221
    },
    {
        "content": "<p>sorry about that</p>",
        "id": 179439792,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572447223
    },
    {
        "content": "<p>but yeah let's land Once first and I think that's already a good win</p>",
        "id": 179440217,
        "sender_full_name": "simulacrum",
        "timestamp": 1572447470
    },
    {
        "content": "<p>FWIW, I did some review of locks in <code>CrateMetadata</code> previously - <a href=\"https://github.com/rust-lang/rust/pull/65625#issuecomment-544256417\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65625#issuecomment-544256417\">https://github.com/rust-lang/rust/pull/65625#issuecomment-544256417</a>.</p>",
        "id": 179461323,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1572459719
    },
    {
        "content": "<p>cool gonna go over all these later</p>",
        "id": 179463283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572460750
    },
    {
        "content": "<p>thanks</p>",
        "id": 179463288,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572460754
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> could jump into this <a href=\"https://github.com/rust-lang/rust/pull/65979\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65979\">https://github.com/rust-lang/rust/pull/65979</a></p>",
        "id": 179468575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572463961
    },
    {
        "content": "<p>left as WIP because I want to see CI running just in case</p>",
        "id": 179468611,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572463989
    },
    {
        "content": "<p>have ran the basic tests but just in case :)</p>",
        "id": 179468647,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464037
    },
    {
        "content": "<p>so now, about removing the Lock, ideas?</p>",
        "id": 179468698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464050
    },
    {
        "content": "<p>let's leave it for a future PR</p>",
        "id": 179468791,
        "sender_full_name": "simulacrum",
        "timestamp": 1572464142
    },
    {
        "content": "<p>yeah that's ok, but I meant, do you have ideas so I can try out</p>",
        "id": 179468854,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464166
    },
    {
        "content": "<p>I guess we could remove the field from there and use something like CrateMetadataCache structure that holds that info and maybe other caches</p>",
        "id": 179468883,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464197
    },
    {
        "content": "<p>the problem is that I don't know exactly the lifecycle of the data, where exactly could this be created one time and then reused</p>",
        "id": 179468917,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464225
    },
    {
        "content": "<p>yeah I don't have any without some deeper investigating, sorry -- I've not had time to do so :/</p>",
        "id": 179469116,
        "sender_full_name": "simulacrum",
        "timestamp": 1572464399
    },
    {
        "content": "<p>no worries</p>",
        "id": 179469517,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572464713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> just back to this</p>",
        "id": 179477598,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469763
    },
    {
        "content": "<p>and force pushed</p>",
        "id": 179477603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469766
    },
    {
        "content": "<p>check it out just in case there's a better way to do <code>init_locking</code></p>",
        "id": 179477709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469822
    },
    {
        "content": "<p>hmm I think I can just call borrow</p>",
        "id": 179477809,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469923
    },
    {
        "content": "<p>checking</p>",
        "id": 179477842,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469924
    },
    {
        "content": "<p>yeah it's exactly the same</p>",
        "id": 179477897,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469956
    },
    {
        "content": "<p>switching to borrow so I don't need to unwrap :)</p>",
        "id": 179477909,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572469965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> done</p>",
        "id": 179477991,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572470014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> the stuff we were talking about yesterday <a href=\"https://github.com/rust-lang/rust/pull/66001\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66001\">https://github.com/rust-lang/rust/pull/66001</a></p>",
        "id": 179545739,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572537450
    },
    {
        "content": "<p>I've put it in my queue, not sure if I'll have time today :/</p>",
        "id": 179545879,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537545
    },
    {
        "content": "<p>I try to make commits in a way that's easier to review and not mix things, in this particular the part of moving a method to a separate fn adds a lot of noise and it's in a separate commit :)</p>",
        "id": 179545889,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572537549
    },
    {
        "content": "<blockquote>\n<p>I've put it in my queue, not sure if I'll have time today :/</p>\n</blockquote>\n<p>no worries</p>",
        "id": 179545902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572537553
    },
    {
        "content": "<p>the main thing is that this makes <code>source_map_import_info</code> and <code>dep_node_index</code> private</p>",
        "id": 179546009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572537605
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you wanted to discuss about some refactors related to all the <code>CrateMetadata</code> situation</p>",
        "id": 179655541,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635496
    },
    {
        "content": "<p>I was telling <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> pointed to some interesting thoughts related to <code>CrateMetadata</code> being behind <code>Lrc</code> and that being why some <code>CrateMetadata</code> fields are behind sync types</p>",
        "id": 179655617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635546
    },
    {
        "content": "<p>and that <code>Lrc</code> can't be removed because <code>CrateMetadata</code> needs to be behind it in order to allow <code>CStore</code> (what contains <code>CrateMetadata</code>) be clonable</p>",
        "id": 179655669,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635591
    },
    {
        "content": "<p>some of the things I've read on github comments are</p>",
        "id": 179655709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635624
    },
    {
        "content": "<blockquote>\n<p>but it actually never happens in rustc, only in rustdoc and perhaps other tools using rustc_interface.</p>\n</blockquote>",
        "id": 179655725,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635637
    },
    {
        "content": "<p>talking about <code>clone</code>ing <code>CrateMetadata</code> or <code>CStore</code> I guess</p>",
        "id": 179655784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635660
    },
    {
        "content": "<blockquote>\n<p>This clone only happens with rustdoc since it needs the resolver available at a later stage. It would be nicer if we could extract the information rustdoc needs instead.</p>\n</blockquote>",
        "id": 179655822,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572635698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I've opened another small PR <a href=\"https://github.com/rust-lang/rust/pull/66024\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66024\">https://github.com/rust-lang/rust/pull/66024</a></p>",
        "id": 179662386,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572640173
    },
    {
        "content": "<p>I guess the question would be to characterize what information is being used from rustdoc</p>",
        "id": 179663292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572640819
    },
    {
        "content": "<p>yeah, I think so, <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> has also mentioned that perhaps other tools using <code>rustc_interface</code> could be doing the same, which I think makes sense</p>",
        "id": 179663992,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572641389
    },
    {
        "content": "<p>they mentioned that <code>rustc_interface</code> is hard to reason about, I have no clue about that to be honest, haven't looked at the code</p>",
        "id": 179664086,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572641413
    },
    {
        "content": "<p>rustc_interface is trying to put queries where we... are not ready for queries</p>",
        "id": 179664308,
        "sender_full_name": "simulacrum",
        "timestamp": 1572641569
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> had a chart drawn up that looked like what I imagine a modern car engine to</p>",
        "id": 179664351,
        "sender_full_name": "simulacrum",
        "timestamp": 1572641596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> btw opened another pr <a href=\"https://github.com/rust-lang/rust/pull/66028\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66028\">https://github.com/rust-lang/rust/pull/66028</a></p>",
        "id": 179666697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572643138
    },
    {
        "content": "<p>Yes, I saw -- am hoping to get around to the review of the first one tonight :)</p>",
        "id": 179666746,
        "sender_full_name": "simulacrum",
        "timestamp": 1572643194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what we have discussed about making dependencies private, that we ended with copies now is better in that last one</p>",
        "id": 179666800,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572643209
    },
    {
        "content": "<p>basically there's a method that IMO belongs to <code>CrateMetadata</code> but was sitting on <code>CStore</code></p>",
        "id": 179666813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572643237
    },
    {
        "content": "<p>and with that part of the usage of dependencies that made it hard to make it private move away to <code>CrateMetadata</code> :)</p>",
        "id": 179666829,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572643270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> : <a href=\"https://github.com/rust-lang/rust/pull/64016#issuecomment-526755156\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64016#issuecomment-526755156\">https://github.com/rust-lang/rust/pull/64016#issuecomment-526755156</a> has the diagrams</p>",
        "id": 179670975,
        "sender_full_name": "njn",
        "timestamp": 1572647111
    },
    {
        "content": "<p>we ended up with something partway between the \"old\" and \"new\" pics in that PR</p>",
        "id": 179670996,
        "sender_full_name": "njn",
        "timestamp": 1572647122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> are you able to add some of these stuff to rustc-guide? :)</p>",
        "id": 179688484,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572675139
    }
]