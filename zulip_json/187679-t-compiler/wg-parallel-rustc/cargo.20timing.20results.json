[
    {
        "content": "<p><a href=\"https://mark.rousskov.org/parallel-compiler-data/\" target=\"_blank\" title=\"https://mark.rousskov.org/parallel-compiler-data/\">https://mark.rousskov.org/parallel-compiler-data/</a> might be of interest to <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> -- in particular, I'm not sure if I got the CPU usage %ages right, but those are really low compared to what I was expecting across the board</p>",
        "id": 177271401,
        "sender_full_name": "simulacrum",
        "timestamp": 1570126549
    },
    {
        "content": "<p>this might be cool to roll into cargo for diffs between -Ztimings runs</p>",
        "id": 177271480,
        "sender_full_name": "simulacrum",
        "timestamp": 1570126580
    },
    {
        "content": "<p>CPU %ages are just being summed and divided by count, ignoring time(?) in the first parameter</p>",
        "id": 177271518,
        "sender_full_name": "simulacrum",
        "timestamp": 1570126614
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> the CPU usage via average may not be quite right because samples aren't taken with a consistent time interval</p>",
        "id": 177273894,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128283
    },
    {
        "content": "<p>I think you'd also need to factor in how far apart each sample is</p>",
        "id": 177273903,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128293
    },
    {
        "content": "<p>Okay, I thought that might be the case</p>",
        "id": 177273949,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128327
    },
    {
        "content": "<p>cargo should probably put this on the report</p>",
        "id": 177273977,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128355
    },
    {
        "content": "<p>and do the math for you</p>",
        "id": 177273984,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128357
    },
    {
        "content": "<p>I'll look into some scaling or something - probably linear, for simplicity</p>",
        "id": 177273985,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128358
    },
    {
        "content": "<p>(this is awesome data btw, thank you so much for collecting all of it!)</p>",
        "id": 177274036,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128369
    },
    {
        "content": "<p>in theory it's all based on trapezoids</p>",
        "id": 177274058,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128387
    },
    {
        "content": "<p>average each pair of measurements and multiple by their distance</p>",
        "id": 177274089,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128408
    },
    {
        "content": "<p>sum all that up and divide total time * 100</p>",
        "id": 177274093,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128414
    },
    {
        "content": "<p>and that should be cpu usage</p>",
        "id": 177274100,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128417
    },
    {
        "content": "<p>these results do look sort of sad unfortunatley</p>",
        "id": 177274134,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128444
    },
    {
        "content": "<p>but I'm hoping that's due to excessive jobserver use</p>",
        "id": 177274150,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128455
    },
    {
        "content": "<p>(if that hasn't changed since I last measured)</p>",
        "id": 177274169,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128465
    },
    {
        "content": "<p>I did some spot checking and they look pretty realistic</p>",
        "id": 177274172,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128467
    },
    {
        "content": "<p>oh I believe them</p>",
        "id": 177274233,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128487
    },
    {
        "content": "<p>we just definitely can't ship this</p>",
        "id": 177274238,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128491
    },
    {
        "content": "<p>as-is that is</p>",
        "id": 177274244,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128495
    },
    {
        "content": "<p>Hm, why? It's better than master?</p>",
        "id": 177274273,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128516
    },
    {
        "content": "<p>my take on these numbers at least is that it's better, but nowhere near \"mountains better\" that is what you expect from parallelism</p>",
        "id": 177274319,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128546
    },
    {
        "content": "<p>Oh, sure</p>",
        "id": 177274332,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128556
    },
    {
        "content": "<p>and there's currently what I perceive as a very high cost in terms of implementation and bugs</p>",
        "id": 177274342,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128559
    },
    {
        "content": "<p>so at least to me it seems like not a great tradeoff right now</p>",
        "id": 177274356,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128568
    },
    {
        "content": "<p>but I think this is all due to the jobserver integration if that hasn't changed</p>",
        "id": 177274378,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128581
    },
    {
        "content": "<p>like on my machin building cargo <em>regressed</em> when given full parallelism</p>",
        "id": 177274390,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128588
    },
    {
        "content": "<p>Hm yeah that doesn't seem to be the case based on these measurements</p>",
        "id": 177274480,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128619
    },
    {
        "content": "<p>I've also got 28 cores though, and it looks like it gets worse with more cores</p>",
        "id": 177274494,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128635
    },
    {
        "content": "<p>That's quite plausible</p>",
        "id": 177274509,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128651
    },
    {
        "content": "<p>I have 8/16</p>",
        "id": 177274517,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128658
    },
    {
        "content": "<p>e.g. sccache-opt got worse in your benchmarks with 16 cores vs 8 cores</p>",
        "id": 177274518,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128658
    },
    {
        "content": "<p>is \"master\" here -j1</p>",
        "id": 177274545,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128675
    },
    {
        "content": "<p>or is it a non-parallel-capable-compiler?</p>",
        "id": 177274556,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128683
    },
    {
        "content": "<p>No, non parallel compiler</p>",
        "id": 177274565,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128690
    },
    {
        "content": "<p>ah ok, that's probably what we mostly care about anyway</p>",
        "id": 177274579,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128700
    },
    {
        "content": "<p>This data does not contain j1 data or it's equivalent</p>",
        "id": 177274585,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128704
    },
    {
        "content": "<p>I think j1 is basically not interesting</p>",
        "id": 177274605,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128719
    },
    {
        "content": "<p>Maybe for our poor 2 core CI</p>",
        "id": 177274667,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128736
    },
    {
        "content": "<p>This is also all with default cargo settings, btw</p>",
        "id": 177274731,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128809
    },
    {
        "content": "<p>So e.g. incremental is on</p>",
        "id": 177274743,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128821
    },
    {
        "content": "<p>But that shouldn't matter too much, I tried servo with and without, made very little difference</p>",
        "id": 177274808,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128847
    },
    {
        "content": "<p>nah yeah this is great, these are the measurments I think we largely care about</p>",
        "id": 177274823,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128859
    },
    {
        "content": "<p>is this using RUSTFLAGS?</p>",
        "id": 177274842,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570128878
    },
    {
        "content": "<p>But that shouldn't matter too much, I tried servo with and without, made very little difference</p>",
        "id": 177274861,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128894
    },
    {
        "content": "<p>At least to the shape of the CPU graph</p>",
        "id": 177274862,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128894
    },
    {
        "content": "<p>But that shouldn't matter too much, I tried servo with and without, made very little difference</p>",
        "id": 177274917,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128945
    },
    {
        "content": "<p>At least to the shape of the CPU graph</p>",
        "id": 177274918,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128945
    },
    {
        "content": "<p>But that shouldn't matter too much, I tried servo with and without, made very little difference</p>",
        "id": 177274919,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128945
    },
    {
        "content": "<p>Yeah rustflags -Z threads=8</p>",
        "id": 177274962,
        "sender_full_name": "simulacrum",
        "timestamp": 1570128963
    },
    {
        "content": "<p>for the compiler you're using, the default is <code>-Zthreads=1</code>, right?</p>",
        "id": 177275019,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129013
    },
    {
        "content": "<p>the reason I ask is that if Cargo receives <code>--target</code>, like it does for rustc, <code>RUSTFLAGS</code> isn't passed to procedural macros</p>",
        "id": 177275037,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129027
    },
    {
        "content": "<p>or build scripts</p>",
        "id": 177275047,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129034
    },
    {
        "content": "<p>Ah, yeah, but I always override it</p>",
        "id": 177275057,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129043
    },
    {
        "content": "<p>Er</p>",
        "id": 177275072,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129063
    },
    {
        "content": "<p>Yeah, so for proc macros and build scripts I guess we're building with -Zthreads=1 which is \"worst case\"</p>",
        "id": 177275145,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129104
    },
    {
        "content": "<p>right yeah</p>",
        "id": 177275156,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129112
    },
    {
        "content": "<p>probably not for most of these, only for the rustc ones</p>",
        "id": 177275168,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129121
    },
    {
        "content": "<p>where I'm assuming you instrumented rustbuild to pass <code>-Ztimings</code></p>",
        "id": 177275178,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129129
    },
    {
        "content": "<p>Yes</p>",
        "id": 177275181,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129133
    },
    {
        "content": "<p>can I install the toolchain you're using?</p>",
        "id": 177275216,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129158
    },
    {
        "content": "<p>Yes</p>",
        "id": 177275222,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129162
    },
    {
        "content": "<p>I want to double-check my measurement that cargo is slower</p>",
        "id": 177275225,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129164
    },
    {
        "content": "<p>the commit hashes should be in the results</p>",
        "id": 177275232,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129170
    },
    {
        "content": "<p>(what's the command again?)</p>",
        "id": 177275234,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129170
    },
    {
        "content": "<p>it's the alt version right?</p>",
        "id": 177275245,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129182
    },
    {
        "content": "<p>rustup-toolchain-install-master or <a href=\"https://gist.githubusercontent.com/nikomatsakis/81e50fdf7254da8870c682109c404694/raw/d364e5d69809c54bdd2694f6bd304c0032de1552/bors-curl\" target=\"_blank\" title=\"https://gist.githubusercontent.com/nikomatsakis/81e50fdf7254da8870c682109c404694/raw/d364e5d69809c54bdd2694f6bd304c0032de1552/bors-curl\">https://gist.githubusercontent.com/nikomatsakis/81e50fdf7254da8870c682109c404694/raw/d364e5d69809c54bdd2694f6bd304c0032de1552/bors-curl</a></p>",
        "id": 177275249,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129187
    },
    {
        "content": "<p>no, the master and parallel commits are specifically built as \"default\"</p>",
        "id": 177275275,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129203
    },
    {
        "content": "<p>you don't need alt builds</p>",
        "id": 177275333,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129212
    },
    {
        "content": "<p>so install <a href=\"https://github.com/rust-lang/rust/commit/702b45e409495a41afcccbe87a251a692b0cefab\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/702b45e409495a41afcccbe87a251a692b0cefab\">702b45e409495a41afcccbe87a251a692b0cefab</a> and the previous commit</p>",
        "id": 177275347,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129227
    },
    {
        "content": "<p>and that's the two csomparison toolchains?</p>",
        "id": 177275349,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129231
    },
    {
        "content": "<p>wait I'm hurting myself in confusion</p>",
        "id": 177275380,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129252
    },
    {
        "content": "<p>parallel you should use dc78b8ba1 and 702b45e40 for master</p>",
        "id": 177275389,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129260
    },
    {
        "content": "<p>ok got it</p>",
        "id": 177275402,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129268
    },
    {
        "content": "<p>neither is an alt build and the parallel commit defaults to -Zthreads=1</p>",
        "id": 177275425,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129294
    },
    {
        "content": "<p>ok so building cargo in debug mode w/ 28 threads is <em>slightly</em> faster, 46 -&gt; 43s</p>",
        "id": 177275896,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129533
    },
    {
        "content": "<p>but that's still nothing close to what I would expect</p>",
        "id": 177275902,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129539
    },
    {
        "content": "<p>\"File upload is not yet available for your browser.\" omg seriously</p>",
        "id": 177276050,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129589
    },
    {
        "content": "<p>I guess we probably do worse due to contention or so</p>",
        "id": 177276060,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129597
    },
    {
        "content": "<p>anyway these are just known bugs</p>",
        "id": 177276137,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129622
    },
    {
        "content": "<p>we can't ship until we fix jobserver things</p>",
        "id": 177276148,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129628
    },
    {
        "content": "<p>and we'll likely need to recollect data after jobserver things are sorted out</p>",
        "id": 177276163,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570129635
    },
    {
        "content": "<p>indeed, yes</p>",
        "id": 177276417,
        "sender_full_name": "simulacrum",
        "timestamp": 1570129785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> is there more data you'd be interested in me gathering? we have this, -Zthreads=1 diff, and will soon have -Zthreads=8 vs. master for single-crate on perf.rlo</p>",
        "id": 177277920,
        "sender_full_name": "simulacrum",
        "timestamp": 1570130752
    },
    {
        "content": "<p>nah this is perfect imo</p>",
        "id": 177277983,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570130767
    },
    {
        "content": "<p>like this is clearly showing me that we can't \"just turn on -Zthreads=1 on nightly\" and we also can't \"just ship what's there today\"</p>",
        "id": 177278007,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570130785
    },
    {
        "content": "<p>so we've still got work to do before calling out to internals</p>",
        "id": 177278024,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570130796
    },
    {
        "content": "<p>and this also is a lot of data to go on for making quantitiative evaluations of parallel rustc</p>",
        "id": 177278063,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1570130815
    },
    {
        "content": "<p>okay sounds good</p>",
        "id": 177278271,
        "sender_full_name": "simulacrum",
        "timestamp": 1570130971
    },
    {
        "content": "<p>I'll pivot to audit work then</p>",
        "id": 177278279,
        "sender_full_name": "simulacrum",
        "timestamp": 1570130977
    },
    {
        "content": "<p>well, preparing for auditing</p>",
        "id": 177278291,
        "sender_full_name": "simulacrum",
        "timestamp": 1570130987
    },
    {
        "content": "<p>(unrelated to parallelism but deduplicating syn/quote could also be an interesting win for these cargo build times — I know it wouldn't be exactly easy because they're transitive dependencies but still worth mentioning)</p>",
        "id": 177278990,
        "sender_full_name": "lqd",
        "timestamp": 1570131420
    },
    {
        "content": "<p>for anyone following -- updated the site to use the trapezoidal approximation for CPU usage</p>",
        "id": 177293912,
        "sender_full_name": "simulacrum",
        "timestamp": 1570141027
    },
    {
        "content": "<p>basically didn't change anything though I think</p>",
        "id": 177293920,
        "sender_full_name": "simulacrum",
        "timestamp": 1570141034
    },
    {
        "content": "<p>It seems like small crates gets hurt a lot here, presumably due to spawning threads. Have you tried builds with only 2 and 4 threads too?</p>\n<p>And are the check/debug builds here incremental?</p>",
        "id": 177399640,
        "sender_full_name": "Zoxc",
        "timestamp": 1570254437
    },
    {
        "content": "<p>yes, though no significant difference was noted for an incremental vs. non-incremental check build</p>",
        "id": 177419786,
        "sender_full_name": "simulacrum",
        "timestamp": 1570290483
    },
    {
        "content": "<p>I/we decided that it's best to measure the reality, which is that check and debug builds are usually incremental</p>",
        "id": 177419790,
        "sender_full_name": "simulacrum",
        "timestamp": 1570290503
    },
    {
        "content": "<p>We did not test 2 or 4 threads -- but I do not expect much difference, to be honest. We already always spawn 1 thread for all builds, maybe even 2? -- not sure.</p>",
        "id": 177419801,
        "sender_full_name": "simulacrum",
        "timestamp": 1570290557
    },
    {
        "content": "<p>I guess <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> dependencies won't get incremental anyway</p>",
        "id": 177433669,
        "sender_full_name": "Zoxc",
        "timestamp": 1570313898
    },
    {
        "content": "<p>indeed, though for e.g. servo the primary weight comes from in tree deps</p>",
        "id": 177434975,
        "sender_full_name": "simulacrum",
        "timestamp": 1570316564
    },
    {
        "content": "<p>regardless I think <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> conclusion that the tradeoffs are not yet worth it is sound.</p>",
        "id": 177434979,
        "sender_full_name": "simulacrum",
        "timestamp": 1570316583
    },
    {
        "content": "<p>I'll take compiler check builds in half the time, thank you very much =P</p>",
        "id": 177450524,
        "sender_full_name": "Zoxc",
        "timestamp": 1570348942
    },
    {
        "content": "<p>eh, it's unlikely that it's representative -- that's an entirely clean build, whereas most of the time you'll see incremental play a good role in check builds</p>",
        "id": 177458670,
        "sender_full_name": "simulacrum",
        "timestamp": 1570363942
    },
    {
        "content": "<p>I do clean check build all the time, but that's mostly because our build system is horrible =P</p>",
        "id": 177460750,
        "sender_full_name": "Zoxc",
        "timestamp": 1570367205
    },
    {
        "content": "<p>Hm it should definitely not be necessary anymore</p>",
        "id": 177461130,
        "sender_full_name": "simulacrum",
        "timestamp": 1570368001
    },
    {
        "content": "<p>Did you make it use a separate folder for check builds?</p>",
        "id": 177462462,
        "sender_full_name": "Zoxc",
        "timestamp": 1570370509
    },
    {
        "content": "<p>Hm, no, I don't think so</p>",
        "id": 177463004,
        "sender_full_name": "simulacrum",
        "timestamp": 1570371586
    },
    {
        "content": "<p>I guess I don't switch too often between check and build</p>",
        "id": 177463007,
        "sender_full_name": "simulacrum",
        "timestamp": 1570371597
    },
    {
        "content": "<p>we could definitely do a separate folder -- somewhat easier than before, in fact</p>",
        "id": 177463055,
        "sender_full_name": "simulacrum",
        "timestamp": 1570371610
    },
    {
        "content": "<p>But I would personally expect that a separate folder is no longer necessary, unless there's cargo bugs</p>",
        "id": 177463058,
        "sender_full_name": "simulacrum",
        "timestamp": 1570371632
    },
    {
        "content": "<p>since we don't ourselves delete folders anymore</p>",
        "id": 177463059,
        "sender_full_name": "simulacrum",
        "timestamp": 1570371639
    },
    {
        "content": "<blockquote>\n<p>like this is clearly showing me that we can't \"just turn on -Zthreads=1 on nightly\" and we also can't \"just ship what's there today\"</p>\n</blockquote>\n<p>I'm a bit more optimistic -- I agree it prob doesn't make sense to turn it on yet, but it'd be good to discuss what threshold we <em>are</em> looking for. When we discussed this in the meeting, it seemed to me that in terms of perf work it'd be good to look more at what we can do to get better <em>wins</em> than seq overhead per se, since the max seq overhead is really just a few seconds of walltime</p>",
        "id": 177550426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570475818
    },
    {
        "content": "<p>In particular, based on the results, it seems like it's probably worth it for me to enable parallel rustc in my personal use? :)</p>",
        "id": 177559404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570481457
    },
    {
        "content": "<p>AKA dogfood it</p>",
        "id": 177560935,
        "sender_full_name": "cuviper",
        "timestamp": 1570482415
    }
]