[
    {
        "content": "<p>I am likely not going to be able to make it today, but am unopposed if y'all want to meet.</p>",
        "id": 188103235,
        "sender_full_name": "simulacrum",
        "timestamp": 1581598585
    },
    {
        "content": "<p>I can't really make this time that much <em>but</em></p>",
        "id": 188120432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609839
    },
    {
        "content": "<p>I definitely feel we need to agree on a plan and immediate steps</p>",
        "id": 188120612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609949
    },
    {
        "content": "<p>It still feels to me that we're moving in a few directions</p>",
        "id": 188120629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609956
    },
    {
        "content": "<p>As a related aside, one thing that <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I were talking about was the idea of doing a \"compile team lecture series\" video (haven't done one of those in a while) about how the current support is working at a high level. <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> felt it would be useful to them. I felt like I could do some of that, but I don't think I'd be the best choice, certainly not for all of it, but maybe a <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> / <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> / <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> there could sort of be a joint effort to describe state?</p>",
        "id": 188120810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581610050
    },
    {
        "content": "<p>i.e., somebody who runs but maybe tag teams <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> to explain job server or something :P</p>",
        "id": 188120826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581610064
    },
    {
        "content": "<p>But the other big issue I think is more about the overall philosophy and design we are shooting for. I raised this a bit in <a class=\"stream-topic\" data-stream-id=\"187679\" href=\"/#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/rustc-rayon.20extension\">#t-compiler/wg-parallel-rustc &gt; rustc-rayon extension</a>, for example -- I think that in all the \"compiler team\" meetings I've been at, we've had a philosophy that we want to move to \"vanilla rayon\", and generally shoot for a simple setup overall to start, but I'm not sure <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> what your take is on that. My feeling is you don't agree and it seems like we should hammer this out. =) I can imagine for example that maybe a simpler setup is just not going to get the perf we need, and I think e.g. the discussion about panic handling sounded relevant. I guess most of all I'd like to get some picture of the high-level setup we are shooting for in order to ship, so that we can place PRs in that context.</p>",
        "id": 188121199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581610274
    },
    {
        "content": "<p>I owe Santiago a doodle poll for that as well as a bisect pr. I also have found that this time is not great for me.</p>\n<p>I guess we can try to find a time to do such a session - to be honest, I can explain jobserver myself I think. Everything else I don't have a good handle on myself.</p>",
        "id": 188121260,
        "sender_full_name": "simulacrum",
        "timestamp": 1581610310
    },
    {
        "content": "<p>Er, bisect rustc explainer</p>",
        "id": 188121313,
        "sender_full_name": "simulacrum",
        "timestamp": 1581610326
    },
    {
        "content": "<p>Yes, I agree some consensus and hammering on overall design is necessary.</p>",
        "id": 188121693,
        "sender_full_name": "simulacrum",
        "timestamp": 1581610542
    },
    {
        "content": "<p>yeah, I've mentioned the idea to Mark too</p>",
        "id": 188122615,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581611017
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if you don't have a lot of time forget about the bisect thing, I can just sit down and prepare something and explain the rest of the people that need that</p>",
        "id": 188122696,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581611049
    },
    {
        "content": "<p>don't worry</p>",
        "id": 188122700,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581611051
    },
    {
        "content": "<p>let me open a separate thread for that</p>",
        "id": 188122724,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1581611070
    },
    {
        "content": "<p>I'm on the subway but I was thinking about this and I wanted to say -- I have the feeling <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> that you do have something of  a plan in your mind, or at least an idea of constraints that we're not all fully aware of. Maybe a good place to start would be that we can talk about the path that <em>you</em> have in mind (without trying to forge a consensus or pick anything yet), just so that we all understand each other more deeply?</p>",
        "id": 188124103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581611872
    },
    {
        "content": "<p>That does seem a bit abstract =P</p>",
        "id": 188128231,
        "sender_full_name": "Zoxc",
        "timestamp": 1581614339
    },
    {
        "content": "<p>oof sorry on west coast where this time is a bit early for me, but catching up on stuff now. Always happy to chat about jobserver though! (and agreed on sync'ing with directions)</p>",
        "id": 188129661,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1581615260
    },
    {
        "content": "<p>At some point, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and I were tinkering with a <a href=\"https://hackmd.io/BxKmG7ItQ2K8SLUdmu1kNQ\" target=\"_blank\" title=\"https://hackmd.io/BxKmG7ItQ2K8SLUdmu1kNQ\">hackmd</a> trying to write out a proposal with core goals and some questions/answers</p>",
        "id": 188223419,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581698741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> to make it concrete, maybe we can just try to lob specific questions your way</p>",
        "id": 188223642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581698910
    },
    {
        "content": "<p>to start I would ask</p>",
        "id": 188223645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581698912
    },
    {
        "content": "<ul>\n<li>What do you see as the next steps to improve parallel performance, and/or what blockers are on your mind?</li>\n<li>What criteria was used to decide where we insert parallelism like <code>par_iter</code> or <code>parallel!</code>?</li>\n</ul>",
        "id": 188223711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581698960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/2020-02-13.20meeting/near/188223711\" title=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/2020-02-13.20meeting/near/188223711\">said</a>:</p>\n<blockquote>\n<ul>\n<li>What do you see as the next steps to improve parallel performance, and/or what blockers are on your mind?</li>\n</ul>\n</blockquote>\n<ul>\n<li>move the query system earlier in the compiler (this aligns well with incremental compilation)</li>\n<li>use a hashmap with lock-free lookup as the query cache</li>\n<li>the ability to spawn a closure to run in the background which can capture <code>TyCtxt</code> would be very useful (to encode incremental state in the background and prefetching queries (like parsing a file when we see <code>mod foo;</code>))</li>\n<li>make miri use less global state (I haven't looked at it in a while, but I suspect no improvements)</li>\n</ul>\n<p>In terms of avoiding regressions we might need to a flag that turns on parallelism/atomics (possibly on demand). We could turn off parallelism when building dependencies for example, which is more likely to saturate all cores.</p>",
        "id": 188231803,
        "sender_full_name": "Zoxc",
        "timestamp": 1581704660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/2020-02-13.20meeting/near/188223711\" title=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/2020-02-13.20meeting/near/188223711\">said</a>:</p>\n<blockquote>\n<ul>\n<li>What criteria was used to decide where we insert parallelism like <code>par_iter</code> or <code>parallel!</code>?</li>\n</ul>\n</blockquote>\n<p>Inserting it must improve performance with multiple threads (so there must be free cores at that point), should not affect single thread performance much, and it also must be efficient so CPU cores are not wasted on a single <code>rustc</code> process when it could be doing something else.</p>",
        "id": 188232050,
        "sender_full_name": "Zoxc",
        "timestamp": 1581704841
    },
    {
        "content": "<p>How were locations for par_iter/parallel! as they exist today found? Those seem like good criteria for why not to insert it in some sense (or what to look at in detail when doing so), but how were these specific spots found? Just looking through the whole codebase?</p>",
        "id": 188237898,
        "sender_full_name": "simulacrum",
        "timestamp": 1581708452
    },
    {
        "content": "<p>Guided by <code>-Z time-passes</code> mostly, and my later PRs by <code>-Z self-profile</code>.</p>",
        "id": 188238828,
        "sender_full_name": "Zoxc",
        "timestamp": 1581709021
    },
    {
        "content": "<p>So there is no guiding principle beyond simple performance, if I follow you? i.e., we aren't trying to parallelize because of X where X is not performance?</p>",
        "id": 188238935,
        "sender_full_name": "simulacrum",
        "timestamp": 1581709083
    },
    {
        "content": "<p>(I'm struggling to come up with an example, but e.g., I could imagine some sort of reason like 'this is a loop and it must be parallel, even if we have no data to suggest so')</p>",
        "id": 188238975,
        "sender_full_name": "simulacrum",
        "timestamp": 1581709122
    }
]