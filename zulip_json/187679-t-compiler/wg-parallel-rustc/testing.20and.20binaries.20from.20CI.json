[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> has kindly offered to look into providing CI-generated parallel rustc binaries.</p>",
        "id": 161653190,
        "sender_full_name": "mw",
        "timestamp": 1553526798
    },
    {
        "content": "<p>the plan is to make CI build binaries for Linux, macOs, and Windows and have instructions for downloading them in a convenient way</p>",
        "id": 161653232,
        "sender_full_name": "mw",
        "timestamp": 1553526839
    },
    {
        "content": "<p>as a follow up step, it would be great if we could use those binaries for setting up some external regression testing that compiles a number of projects and checks if the output is the same as the one from the non-parallel compiler.</p>",
        "id": 161653407,
        "sender_full_name": "mw",
        "timestamp": 1553526947
    },
    {
        "content": "<p>(doing this as part of regular CI does not seem to be feasible at the moment)</p>",
        "id": 161653489,
        "sender_full_name": "mw",
        "timestamp": 1553526974
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 161653520,
        "sender_full_name": "mw",
        "timestamp": 1553527002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is there a general tracking issue for parallel queries?</p>",
        "id": 161656722,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1553529031
    },
    {
        "content": "<p>I'm gonna open a tracking issue on rust-lang/rust for this</p>",
        "id": 161656733,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1553529040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> There's a tacking issue for parallel queries in <a href=\"https://github.com/rust-lang/rust/issues/48685\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48685\">#48685</a></p>",
        "id": 161659110,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1553530415
    },
    {
        "content": "<p>Thanks! I've posted a first pass at <a href=\"https://github.com/rust-lang/rust/pull/59417\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59417\">https://github.com/rust-lang/rust/pull/59417</a>, and we'll see what comes out of that to keep testing</p>",
        "id": 161686401,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1553547234
    },
    {
        "content": "<p>Ok so I had an idea with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> at Rust LATAM which was \"what if we just enabled parallel on by default right now?\". I was thinking we might not necessarily turn on the actual multithreaded part, but what if we started shipping parallel-capable compilers right now but continued to default the number of threads to 1 while we're working out all the bugs?</p>",
        "id": 162337495,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554214283
    },
    {
        "content": "<p>I ran a <code>@bors: try</code> build on <a href=\"https://github.com/rust-lang/rust/pull/59417#issuecomment-479013998\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59417#issuecomment-479013998\">https://github.com/rust-lang/rust/pull/59417#issuecomment-479013998</a> and it turns out the slowdown, while there, is quite small at 2-3% across the board.</p>",
        "id": 162337516,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554214299
    },
    {
        "content": "<p>That seems quite impressive in terms of slowdown, and makes me think that we'd be perfectly suited to enable parallel compilation <em>right now</em> (ok, maybe after the next release on April 11) for testing</p>",
        "id": 162337588,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554214331
    },
    {
        "content": "<p>that way we won't need any crazy support with try or not, and we can just have normal nightly testing like we have for everything else</p>",
        "id": 162337606,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554214347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, thoughts?</p>",
        "id": 162337615,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554214352
    },
    {
        "content": "<p>Works for me; it means an extra sip of coffee while the compiler is running. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 162337687,
        "sender_full_name": "Cem Karan",
        "timestamp": 1554214398
    },
    {
        "content": "<p>Ah this was brought up in the PR but the 2-3% number is actually incorrect, that's number of instructions where the more interesting metric for htis PR is wall time, and wall time regresses by 10% mostly which I think is probably too bad to land in rustc nightly right now</p>",
        "id": 162339069,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554215127
    },
    {
        "content": "<p>so less actionable than I thought :(</p>",
        "id": 162339077,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554215133
    },
    {
        "content": "<p>Although honestly the major regressions are all in tiny crates that take 1s extra to compile it looks like</p>",
        "id": 162339177,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554215182
    },
    {
        "content": "<p>as opposed to larger crates also only regressing by a few seconds, showing up as a large-ish percentage</p>",
        "id": 162339193,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554215194
    },
    {
        "content": "<p>so perhaps not that bad after all...</p>",
        "id": 162339210,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554215201
    },
    {
        "content": "<p>Do you know what is major cause of the 10% regression?  I mean, is it drive access, too much swapping, etc.?  If there was an extra flag in rustc/cargo to enable self-profiling and shipping the profiling data back to a central location for further analysis, that could be useful (Apple did something like this when they were switching from the old OS 9/Carbon APIs to the OS X APIs; in their case they were just getting information about the APIs being used by developers, but I can see having a simple way of shipping the profiling data back for analysis being useful here to see what areas need to be concentrated on 'in the wild').</p>",
        "id": 162341802,
        "sender_full_name": "Cem Karan",
        "timestamp": 1554216544
    },
    {
        "content": "<p>are there wins too?</p>",
        "id": 162341881,
        "sender_full_name": "mw",
        "timestamp": 1554216591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"202560\">@Cem Karan</span> I'm not sure, but I've pigned <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> who may know more</p>",
        "id": 162343407,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554217400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I pinned the number of threads to 1 because it sounds like we're not ready for true parallelism yet</p>",
        "id": 162343437,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554217417
    },
    {
        "content": "<p>so this was a test of \"can we take a small hit to build in parallel mode always and just not use it\"</p>",
        "id": 162343452,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554217428
    },
    {
        "content": "<p>so there were no improvements, only regressions</p>",
        "id": 162343462,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554217433
    },
    {
        "content": "<p>(as expected though)</p>",
        "id": 162343466,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554217435
    },
    {
        "content": "<p>hm, results from here seem to be mixed: <a href=\"https://github.com/rust-lang/rust/pull/59530\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59530\">https://github.com/rust-lang/rust/pull/59530</a></p>",
        "id": 162343676,
        "sender_full_name": "mw",
        "timestamp": 1554217538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> oh that's a separate PR with a different strategy (turning on parallel rustc <em>and</em> defaulting threads to num_cpus)</p>",
        "id": 162347034,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554219802
    },
    {
        "content": "<p>you're looking at wall time as well, right?</p>",
        "id": 162347040,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554219807
    },
    {
        "content": "<p>it's <a href=\"https://perf.rust-lang.org/compare.html?start=2002b4b39a16760f37107cf02d7a91ff316d3073&amp;end=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;stat=wall-time\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=2002b4b39a16760f37107cf02d7a91ff316d3073&amp;end=e1f9d0488d052f77315c033b3b8bf47a4d8fdb11&amp;stat=wall-time\">still got some regressions</a> but overall looks quite good</p>",
        "id": 162347052,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554219822
    },
    {
        "content": "<p>Yeah, I was wondering if that was an option: make parallel the default and also letting it take advantage of the parallelism.</p>",
        "id": 162409134,
        "sender_full_name": "mw",
        "timestamp": 1554280106
    },
    {
        "content": "<p>but some of the regressions look quite severe. might be a bad interaction with the jobserver?</p>",
        "id": 162409187,
        "sender_full_name": "mw",
        "timestamp": 1554280152
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"202560\">Cem Karan</span> I'm not sure, but I've pigned <span class=\"user-mention silent\" data-user-id=\"116466\">Zoxc</span> who may know more</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> Do you know any more about these regressions?  Just curious as to what the cause is...</p>",
        "id": 162824597,
        "sender_full_name": "Cem Karan",
        "timestamp": 1554735653
    },
    {
        "content": "<p>Swapping <code>RefCell</code> for <code>parking_lot::Mutex</code> is the main cause. Atomic ops are slower</p>",
        "id": 162824802,
        "sender_full_name": "Zoxc",
        "timestamp": 1554735796
    },
    {
        "content": "<p>Got it, thanks.</p>",
        "id": 162829310,
        "sender_full_name": "Cem Karan",
        "timestamp": 1554738791
    },
    {
        "content": "<p>I feel like those percentages... hmm. They are borderline. It may be worth it. It probably depends a bit on how far off we think the actual parallel execution is.</p>",
        "id": 162946837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554841623
    }
]