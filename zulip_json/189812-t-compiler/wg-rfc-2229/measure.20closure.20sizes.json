[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>, we were discussing the question of how to measure closure sizes, and <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested that instead of soliciting people to send in their measurements, we may want to just run the measurements <em>ourselves</em> using crater.</p>",
        "id": 245228558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625685203
    },
    {
        "content": "<p>I'm not sure how hard that is, I've never modified crater myself, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can perhaps weigh in</p>",
        "id": 245228574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625685214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span>, does the <code>-Z</code> flag today generate a file as output, or dump to stderr?</p>",
        "id": 245228606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625685232
    },
    {
        "content": "<p>a file</p>",
        "id": 245228619,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685241
    },
    {
        "content": "<p>so we have just collect all closure_profile_*.csv</p>",
        "id": 245228678,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685251
    },
    {
        "content": "<p>OK. We <em>may</em> find it easier if we dump it to stdout, though we could readily do that at the end of process.</p>",
        "id": 245228787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625685329
    },
    {
        "content": "<p>Just beacuse that data is then collected in the logs, which I guess we can scrape.</p>",
        "id": 245228807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625685341
    },
    {
        "content": "<p>I am going to write up some notes later today</p>",
        "id": 245229685,
        "sender_full_name": "simulacrum",
        "timestamp": 1625685767
    },
    {
        "content": "<p>that won't be hard</p>",
        "id": 245229691,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685770
    },
    {
        "content": "<p>that was for outputitng to stdout ^</p>",
        "id": 245229712,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685781
    },
    {
        "content": "<p>I don't think it'll be too hard</p>",
        "id": 245229789,
        "sender_full_name": "simulacrum",
        "timestamp": 1625685815
    },
    {
        "content": "<p>Do we have a rough idea of how much data it is per crate?</p>",
        "id": 245229831,
        "sender_full_name": "simulacrum",
        "timestamp": 1625685835
    },
    {
        "content": "<p>Most crates under 100 lines</p>",
        "id": 245230012,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685920
    },
    {
        "content": "<p>Cargo serde syn were all closer to 50 than 100</p>",
        "id": 245230147,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625685973
    },
    {
        "content": "<p>compiler + stdlib + rustdoc + any dependencies that we have from <a href=\"http://crates.io\">crates.io</a> were together &lt; 20k lines</p>",
        "id": 245230329,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625686062
    },
    {
        "content": "<p>oh that sounds very small, great</p>",
        "id": 245254196,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699582
    },
    {
        "content": "<p>I think in that case I would just dump to stdout with a known prefix (e.g., e93ae495ec -- we'll need to grep for it) before each line.</p>\n<p>It probably makes sense to try and include the number of records so that we know we missed stuff, too</p>",
        "id": 245254330,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699692
    },
    {
        "content": "<p>stderr might actually work better</p>",
        "id": 245254347,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699707
    },
    {
        "content": "<p>but you can do a mini-crater with a high priority to test the idea -- <a href=\"https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#available-crate-selections\">https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#available-crate-selections</a> with list:cargo or something might work well. I think we'll only want to emit on workspace crates, we can probably look for cap-lints to figure out when to emit or so.</p>",
        "id": 245254453,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699782
    },
    {
        "content": "<p>once we have a run done, we can use the all logs tarball to easily get the logs and analyze them as needed; see the available tarballs for the last beta run here - <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.54-1/downloads.html\">https://crater-reports.s3.amazonaws.com/beta-1.54-1/downloads.html</a> -- those will be available for your runs too.</p>",
        "id": 245254515,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> With this we shouldn't have to modify crater at all which will streamline the process a lot</p>",
        "id": 245254546,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699874
    },
    {
        "content": "<p>if we do end up needing to modify it, my guess is the easy thing will be to temporarily bump the limits of lines/bytes emitted per log up, and then we can just go with this. That would be nearly trivial.</p>",
        "id": 245254602,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699911
    },
    {
        "content": "<p>Let me know if I can provide further hints/help here!</p>",
        "id": 245254618,
        "sender_full_name": "simulacrum",
        "timestamp": 1625699927
    },
    {
        "content": "<p>I'll try this tomorrow, thanks</p>",
        "id": 245266839,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625712209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/245230147\">said</a>:</p>\n<blockquote>\n<p>Cargo serde syn were all closer to 50 than 100</p>\n</blockquote>\n<p>I think I confused some stat within the closure profile to the actual numbers. cargo is closer to 2k lines of output, serder_derive was 150ish</p>",
        "id": 245618936,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626026129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> did you mean -Zprofile-closures on both start and end toolchains for <a href=\"https://github.com/rust-lang/rust/pull/87066#issuecomment-877847095\">https://github.com/rust-lang/rust/pull/87066#issuecomment-877847095</a>?</p>",
        "id": 245702432,
        "sender_full_name": "simulacrum",
        "timestamp": 1626103606
    },
    {
        "content": "<p>Or does it give comparative results?</p>",
        "id": 245702448,
        "sender_full_name": "simulacrum",
        "timestamp": 1626103613
    },
    {
        "content": "<p>-Zprofile-closures compares on its own. So it will compute the size before and size after 2229 is enabled within the same compile</p>",
        "id": 245702550,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626103669
    },
    {
        "content": "<p>OK, great</p>",
        "id": 245702564,
        "sender_full_name": "simulacrum",
        "timestamp": 1626103674
    },
    {
        "content": "<p>That should run in ~4-5 hours, I believe, and we'll see if it works then</p>",
        "id": 245702695,
        "sender_full_name": "simulacrum",
        "timestamp": 1626103712
    },
    {
        "content": "<p>So the test failed (also on master it seems)</p>\n<p>One thing I realized that in our full run we'd a lot of duplicate information because we are using RUSTFLAGS. </p>\n<p>Since all dependencies would also emit data, so if two crate have the same dependency the data from it will be emitted multiple times</p>",
        "id": 245755729,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626127144
    },
    {
        "content": "<p>Hm</p>",
        "id": 246272511,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466253
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/pr-87066-1/try%238a4c071f46be56484e9723bd8f1e5eea08177963%2Brustflags=-Zprofile-closures/reg/cargo-0.54.0/log.txt\">https://crater-reports.s3.amazonaws.com/pr-87066-1/try%238a4c071f46be56484e9723bd8f1e5eea08177963%2Brustflags=-Zprofile-closures/reg/cargo-0.54.0/log.txt</a> looks like it also hit the 100KB limit and might've been externally killed as a result, I'm not quite sure</p>",
        "id": 246272554,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466277
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/crater/blob/master/config.toml#L32-L33\">https://github.com/rust-lang/crater/blob/master/config.toml#L32-L33</a> -- looks like I remembered wrong, that's probably just coincidental</p>",
        "id": 246272587,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466305
    },
    {
        "content": "<p>In any case <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I'd suggest we try again, but remove everything except a hash of the location of the closure -- that'll be much smaller than the full line info debug print</p>",
        "id": 246272677,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466346
    },
    {
        "content": "<p>Can we take the hash and go back to the original closure locatiot?</p>",
        "id": 246272725,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466378
    },
    {
        "content": "<p>Location*</p>",
        "id": 246272732,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466382
    },
    {
        "content": "<p>Also should I just skip printing if both before and after are 0?</p>",
        "id": 246272756,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466400
    },
    {
        "content": "<p>I think I'd not skip printing any closures</p>",
        "id": 246272794,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466433
    },
    {
        "content": "<p>that'll skew our results a little.</p>",
        "id": 246272803,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466438
    },
    {
        "content": "<p>Fair enough</p>",
        "id": 246272852,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466448
    },
    {
        "content": "<p>We can't take the hash, but ultimately, if anything looks notable we can rerun that particular crate locally</p>",
        "id": 246272856,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466455
    },
    {
        "content": "<p>the hash is only really so we can deduplicate across crates, I think</p>",
        "id": 246272870,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466467
    },
    {
        "content": "<p>Looking at the last beta run, it seems like libc compiles fine</p>",
        "id": 246272900,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466485
    },
    {
        "content": "<p>serde_derive does too.</p>",
        "id": 246272958,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466527
    },
    {
        "content": "<p>So we might try some other crates.</p>",
        "id": 246272976,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466538
    },
    {
        "content": "<p>I'm not sure if we want to deduplicate based on span. The closure can be within a generic function and then type parameters might have different sizes</p>",
        "id": 246273049,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466567
    },
    {
        "content": "<p>Hm</p>",
        "id": 246273289,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466706
    },
    {
        "content": "<p>I imagine we could put <em>something</em> in the hash to make it unique</p>",
        "id": 246273302,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466722
    },
    {
        "content": "<p>I guess ultimately it doesn't matter too much wrt to deduplication, we can likely just skip the hash too. This is really for broad analysis, which if it has duplicates will just weight more widely used projects more heavily</p>",
        "id": 246273368,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466761
    },
    {
        "content": "<p>which seems OK</p>",
        "id": 246273373,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466765
    },
    {
        "content": "<p>I'd assume ty::Instance used for codegen in MIR is somewhat unique? Or deduplicated to some degree</p>",
        "id": 246273492,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626466818
    },
    {
        "content": "<p>codegen would already have generics instantiated, I think, so it should be pretty close to a good thing to hash, I'd imagine</p>",
        "id": 246273564,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466879
    },
    {
        "content": "<p>(You'd want the stable hash, I believe, not the regular hash impl)</p>",
        "id": 246273579,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466890
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> as well</p>",
        "id": 246273586,
        "sender_full_name": "simulacrum",
        "timestamp": 1626466896
    },
    {
        "content": "<p>This all sounds right</p>",
        "id": 246308208,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626503022
    },
    {
        "content": "<p>I have pushed a change to output the stable hash. In the change i pushed I also reduced the size of the prefix a bit</p>\n<p><a href=\"/user_uploads/4715/kQP7BE_ZqLCfq85KePtByh53/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/kQP7BE_ZqLCfq85KePtByh53/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/kQP7BE_ZqLCfq85KePtByh53/image.png\"></a></div>",
        "id": 246483957,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626714954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can you restart the crater run please? Thank you</p>",
        "id": 246733199,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626880059
    },
    {
        "content": "<p>will do later today</p>",
        "id": 246733304,
        "sender_full_name": "simulacrum",
        "timestamp": 1626880094
    },
    {
        "content": "<p>I totally forgot about this, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  can you please trigger a full run</p>",
        "id": 249752895,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629222062
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> with the current PR?</p>",
        "id": 249752935,
        "sender_full_name": "simulacrum",
        "timestamp": 1629222096
    },
    {
        "content": "<p>(do you want it with the old try build or on a new one?)</p>",
        "id": 249752953,
        "sender_full_name": "simulacrum",
        "timestamp": 1629222109
    },
    {
        "content": "<p>New might be better</p>",
        "id": 249753419,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629222371
    },
    {
        "content": "<p>@roxelo made some bug fixes, maybe we should wait for the open ones to be merged <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> since atleast one of them changes what gets captured</p>",
        "id": 249753534,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629222442
    },
    {
        "content": "<p>hm, ok</p>",
        "id": 249753567,
        "sender_full_name": "simulacrum",
        "timestamp": 1629222461
    },
    {
        "content": "<p>well, queued up a try build, feel free to cherry pick onto this PR</p>",
        "id": 249753582,
        "sender_full_name": "simulacrum",
        "timestamp": 1629222470
    },
    {
        "content": "<p>Fair enough, I'll wait for discussions to resolve in case the solution changes</p>",
        "id": 249754010,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629222660
    },
    {
        "content": "<p>Is there some summary <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> of the latest closure size measurements?</p>",
        "id": 249787604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629239626
    },
    {
        "content": "<p>I only have compiler and cargo for now. I had a really busy last two week and this slipped my mind. We should test this once the change for <a href=\"https://github.com/rust-lang/rust/issues/87814\">#87814</a> is merged</p>",
        "id": 249792095,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629243170
    },
    {
        "content": "<p>OK-- it's all right, but we can amend the content in <a href=\"https://github.com/rust-lang/rust/issues/88126\">https://github.com/rust-lang/rust/issues/88126</a> with add'l data</p>",
        "id": 249792536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629243650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  Is there a script to download all the log files?</p>",
        "id": 250034374,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629400370
    },
    {
        "content": "<p>uh, there's tarballs</p>",
        "id": 250034429,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <a href=\"https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html\">https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html</a></p>",
        "id": 250034505,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400416
    },
    {
        "content": "<p>you probably want all.tar.gz and then you can figure it out from there</p>",
        "id": 250034532,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400426
    },
    {
        "content": "<p>(the directory structure is pretty obvious once you look)</p>",
        "id": 250034595,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400442
    },
    {
        "content": "<p>Sweet, thanks</p>",
        "id": 250034669,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629400458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250034505\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html\">https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html</a></p>\n</blockquote>\n<p>original size:</p>\n<div class=\"codehilite\"><pre><span></span><code>0..16:                 count=8975928                 avg_old=2.939998738849064                 avg_change=0.2572048260636672                 percentage_change=8.748467224321207\n16..32:                 count=955973                 avg_old=18.091243162725306                 avg_change=1.2895332817977077                 percentage_change=7.127941790394074\n32..64:                 count=178807                 avg_old=38.53406745820913                 avg_change=2.3893471732091025                 percentage_change=6.200609826098404\n64..512:                 count=49083                 avg_old=152.14267669050383                 avg_change=-1.106207852005786                 percentage_change=-0.7270858355253529\n0..MAX:                 count=10163957                 avg_old=6.510008749545084                 avg_change=0.38127148707929404                 percentage_change=5.856696999154373\n</code></pre></div>",
        "id": 250662254,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629916884
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/1CRfRNZeCe8RaXSHuJhEEC-U/compute.sh\">compute.sh</a> <a href=\"/user_uploads/4715/IW_26mYxNPqk26RD3cUgXRED/compute.py\">compute.py</a></p>",
        "id": 250663471,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629917368
    },
    {
        "content": "<p>Place both of these in the root of the extracted all.gz</p>\n<p>run <code>./compute.sh</code></p>",
        "id": 250663594,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629917405
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>original size range in bytes</th>\n<th>count</th>\n<th>avg old size in bytes</th>\n<th>avg change in bytes</th>\n<th>% change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0..16</td>\n<td>count=8975928</td>\n<td>avg_old=2.939998738849064</td>\n<td>avg_change=0.2572048260636672</td>\n<td>percentage_change=8.748467224321207</td>\n</tr>\n</tbody>\n</table>",
        "id": 250670879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920156
    },
    {
        "content": "<p>meh, I was going to convert it to the table, but it's too much work :)</p>",
        "id": 250670964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920180
    },
    {
        "content": "<p>I can change the CSV output</p>",
        "id": 250671012,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629920200
    },
    {
        "content": "<p>Change to CSV *</p>",
        "id": 250671047,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629920216
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>start</th>\n<th>end</th>\n<th>avg size (bytes)</th>\n<th>avg_change (bytes)</th>\n<th>percentage_change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>16</td>\n<td>2.939998738849064</td>\n<td>0.2572048260636672</td>\n<td>8.748467224321207</td>\n</tr>\n<tr>\n<td>16</td>\n<td>32</td>\n<td>18.091243162725306</td>\n<td>1.2895332817977077</td>\n<td>7.127941790394074</td>\n</tr>\n<tr>\n<td>32</td>\n<td>64</td>\n<td>38.53406745820913</td>\n<td>2.3893471732091025</td>\n<td>6.200609826098404</td>\n</tr>\n<tr>\n<td>64</td>\n<td>512</td>\n<td>152.14267669050383</td>\n<td>-1.106207852005786</td>\n<td>-0.7270858355253529</td>\n</tr>\n<tr>\n<td>0</td>\n<td>MAX</td>\n<td>6.510008749545084</td>\n<td>0.38127148707929404</td>\n<td>5.856696999154373</td>\n</tr>\n</tbody>\n</table>",
        "id": 250671829,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629920592
    },
    {
        "content": "<p>nice</p>",
        "id": 250672261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920783
    },
    {
        "content": "<p>I feel pretty ok about those results</p>",
        "id": 250672289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920795
    },
    {
        "content": "<p>do you have the frequency?</p>",
        "id": 250672318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920812
    },
    {
        "content": "<p>i.e., number of closures in each category?</p>",
        "id": 250672328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250662254\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250034505\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html\">https://crater-reports.s3.amazonaws.com/pr-87066-3/downloads.html</a></p>\n</blockquote>\n<p>original size range in bytes (upper bound exlusive), count, avg old size in bytes, avg change in bytes</p>\n<p><div class=\"codehilite\"><pre><span></span><code>0..16:                 count=8975928                 avg_old=2.939998738849064                 avg_change=0.2572048260636672                 percentage_change=8.748467224321207\n16..32:                 count=955973                 avg_old=18.091243162725306                 avg_change=1.2895332817977077                 percentage_change=7.127941790394074\n32..64:                 count=178807                 avg_old=38.53406745820913                 avg_change=2.3893471732091025                 percentage_change=6.200609826098404\n64..512:                 count=49083                 avg_old=152.14267669050383                 avg_change=-1.106207852005786                 percentage_change=-0.7270858355253529\n0..MAX:                 count=10163957                 avg_old=6.510008749545084                 avg_change=0.38127148707929404                 percentage_change=5.856696999154373\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>its here, i messed something up while converiting to md</p>",
        "id": 250672386,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629920843
    },
    {
        "content": "<p>yeah, I saw that after I asked</p>",
        "id": 250672422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629920860
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>start</th>\n<th>end</th>\n<th>count</th>\n<th>avg old size (bytes)</th>\n<th>avg change (bytes)</th>\n<th>% change</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>16</td>\n<td>17951856</td>\n<td>2.939998738849064</td>\n<td>0.2572048260636672</td>\n<td>8.748467224321207</td>\n</tr>\n<tr>\n<td>16</td>\n<td>32</td>\n<td>1911946</td>\n<td>18.091243162725306</td>\n<td>1.2895332817977077</td>\n<td>7.127941790394074</td>\n</tr>\n<tr>\n<td>32</td>\n<td>64</td>\n<td>357614</td>\n<td>38.53406745820913</td>\n<td>2.3893471732091025</td>\n<td>6.200609826098404</td>\n</tr>\n<tr>\n<td>64</td>\n<td>512</td>\n<td>98166</td>\n<td>152.14267669050383</td>\n<td>-1.106207852005786</td>\n<td>-0.7270858355253529</td>\n</tr>\n<tr>\n<td>0</td>\n<td>MAX</td>\n<td>20327914</td>\n<td>6.510008749545084</td>\n<td>0.38127148707929404</td>\n<td>5.856696999154373</td>\n</tr>\n</tbody>\n</table>",
        "id": 250672998,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250663471\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/4715/1CRfRNZeCe8RaXSHuJhEEC-U/compute.sh\">compute.sh</a> <br>\n<a href=\"/user_uploads/4715/2-MA5yLkjw-WuxKqFQNL5F43/compute.py\">compute.py</a></p>\n</blockquote>\n<p>script updated to ouput csv and md</p>",
        "id": 250673083,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921132
    },
    {
        "content": "<p>nice -- is that a large %change than we saw on compiler/rustc, I can't  remember?</p>",
        "id": 250673275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629921233
    },
    {
        "content": "<p>still, &lt;1 byte change seems .. ok</p>",
        "id": 250673283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629921241
    },
    {
        "content": "<p>One thing I should add here a lot of popular dependencies are multiple counted here</p>",
        "id": 250673339,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921250
    },
    {
        "content": "<p>Becuase we are using env variables each dependecy for a crate logs closure size as well</p>",
        "id": 250673435,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921298
    },
    {
        "content": "<p>We can't quite deduplicate data because closures have the same span/df id when generics get resolved</p>",
        "id": 250673497,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921327
    },
    {
        "content": "<p>can you add, say, 90th percentile or something (basically how bad does it get)?</p>",
        "id": 250674571,
        "sender_full_name": "simulacrum",
        "timestamp": 1629921789
    },
    {
        "content": "<p>it would be nice to see the distribution</p>",
        "id": 250674615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629921813
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250673275\">said</a>:</p>\n<blockquote>\n<p>nice -- is that a large %change than we saw on compiler/rustc, I can't  remember?</p>\n</blockquote>\n<p>[Uploading image.png…]()</p>",
        "id": 250674643,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921824
    },
    {
        "content": "<p>I can try write that up later tonight<br>\n<span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250674571\">said</a>:</p>\n<blockquote>\n<p>can you add, say, 90th percentile or something (basically how bad does it get)?</p>\n</blockquote>",
        "id": 250674718,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921846
    },
    {
        "content": "<p>The current crater run is missing one of the edge cases found in the 2021 crater run that affect what gets captured + non_exhaustive. I have rebased the <a href=\"https://github.com/rust-lang/rust/pull/87066\">PR</a>. </p>\n<p>Maybe we do another run after the current open issue for 2229, though I don't expect much to change</p>",
        "id": 250675013,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629921981
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/MRQxBHjRWaCZWcoQmckpxf-H/Figure_1.png\">Figure_1.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/MRQxBHjRWaCZWcoQmckpxf-H/Figure_1.png\" title=\"Figure_1.png\"><img src=\"/user_uploads/4715/MRQxBHjRWaCZWcoQmckpxf-H/Figure_1.png\"></a></div>",
        "id": 250710637,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629944604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250674643\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250673275\">said</a>:</p>\n<blockquote>\n<p>nice -- is that a large %change than we saw on compiler/rustc, I can't  remember?</p>\n</blockquote>\n<p>[Uploading image.png…]()</p>\n</blockquote>\n<p>\"[Uploading image.png…]()\" lol<br>\n\"<a href=\"/user_uploads/4715/RHMS9nTsFbMCv2cVRfP6CLM1/image.png\">image.png</a>\"</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/RHMS9nTsFbMCv2cVRfP6CLM1/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/RHMS9nTsFbMCv2cVRfP6CLM1/image.png\"></a></div>",
        "id": 250710977,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629944970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250710637\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/4715/MRQxBHjRWaCZWcoQmckpxf-H/Figure_1.png\">Figure_1.png</a></p>\n</blockquote>\n<p><a href=\"/user_uploads/4715/hr1o-5j1YN0TSh9hiUekFUOS/Figure_2.png\">Figure_2.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/hr1o-5j1YN0TSh9hiUekFUOS/Figure_2.png\" title=\"Figure_2.png\"><img src=\"/user_uploads/4715/hr1o-5j1YN0TSh9hiUekFUOS/Figure_2.png\"></a></div>",
        "id": 250711560,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629945686
    },
    {
        "content": "<p>I zoomed in on the top 2% area that's &gt; 40 bytes</p>",
        "id": 250711580,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629945711
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/LDP5HEut7W23SIPhg3E215h6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/LDP5HEut7W23SIPhg3E215h6/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/LDP5HEut7W23SIPhg3E215h6/image.png\"></a></div>",
        "id": 250711582,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629945714
    },
    {
        "content": "<p>might not be the worst idea to take a dive into increase &gt; 40 bytes, though I won't be surprised if some of these are duplicated entires</p>",
        "id": 250711722,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629945884
    },
    {
        "content": "<p>also maybe someone should ensure there is no stupid errors in this script</p>",
        "id": 250711823,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629946005
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/f7oyhFN8Z92F5WQvd4KkN2re/compute.py\">compute.py</a></p>",
        "id": 250711828,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629946017
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/DQ6kE8sBHQToD3Y57IIC9Pd-/unique_closure_increase\">unique_closure_increase</a> . I depulicated using <code>sort -u</code> I don't think I'm using stable hashing correctly.</p>",
        "id": 250713479,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629947761
    },
    {
        "content": "<p>Looking at the largest increase, closure is basically starts off &amp;mut and seems like most of the fields are individually captured : <a href=\"https://github.com/Manishearth/compiletest-rs/blob/master/src/header.rs#L292-L407\">https://github.com/Manishearth/compiletest-rs/blob/master/src/header.rs#L292-L407</a></p>\n<p>Looking at the one that shows up alot: <a href=\"https://github.com/hyperium/h2/blob/master/src/frame/headers.rs#L858-L897\">https://github.com/hyperium/h2/blob/master/src/frame/headers.rs#L858-L897</a>. Similar to compiletest a lot different fields/fields of fields used starting of <code>&amp;mut self</code></p>",
        "id": 250715281,
        "sender_full_name": "Aman Arora",
        "timestamp": 1629949185
    },
    {
        "content": "<p>Could we continue capturing just &amp;Mut self in machine code but for the purposes of analyses consider it as just capturing the certain fields?</p>",
        "id": 250746082,
        "sender_full_name": "nagisa",
        "timestamp": 1629970474
    },
    {
        "content": "<p>(not sure if what I wrote makes much sense at all I've only been following this effort very peripherally)</p>",
        "id": 250746179,
        "sender_full_name": "nagisa",
        "timestamp": 1629970558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250711722\">said</a>:</p>\n<blockquote>\n<p>might not be the worst idea to take a dive into increase &gt; 40 bytes, though I won't be surprised if some of these are duplicated entires</p>\n</blockquote>\n<p>I agree we should dive into that</p>",
        "id": 250781331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/measure.20closure.20sizes/near/250746082\">said</a>:</p>\n<blockquote>\n<p>Could we continue capturing just &amp;Mut self in machine code but for the purposes of analyses consider it as just capturing the certain fields?</p>\n</blockquote>\n<p>I would strongly prefer not to do that</p>",
        "id": 250781347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988368
    },
    {
        "content": "<p>It is possible, but I really like that we are not \"cheating\" in the code we generate, I am sure we will get some subtle bugs if we try to be too clever, and it largely seems unnecessary so far</p>",
        "id": 250781387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988390
    },
    {
        "content": "<p>That said, I wouldn't be <em>opposed</em> to it if we do it as a \"after the fact\" MIR transform sort of thing</p>",
        "id": 250781479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988420
    },
    {
        "content": "<p>(although that seems hard, now that I think a bit more about it)</p>",
        "id": 250781525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988436
    },
    {
        "content": "<p>...still...</p>",
        "id": 250781980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988586
    },
    {
        "content": "<p>a kind of goofy transform would be to take a <code>&amp;mut (&amp;mut...&amp;mut)</code></p>",
        "id": 250782066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988616
    },
    {
        "content": "<p>never mind, that's not equivalent anyway</p>",
        "id": 250782115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629988635
    }
]