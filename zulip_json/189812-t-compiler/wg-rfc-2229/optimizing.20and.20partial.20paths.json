[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> the idea that I was kicking around at the end of the meeting was that maybe instead of doing a \"naive desugaring\" for closures, we <em>might</em> want to consider skipping to the more \"optimized\" form, even though that will require more edits to the borrow checker</p>",
        "id": 215764255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605461
    },
    {
        "content": "<p>I'm of mixed minds about it</p>",
        "id": 215764269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605466
    },
    {
        "content": "<p>but the optimized form I'm talking about would be that we only ever carry a (raw) pointer to the local variable</p>",
        "id": 215764293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605485
    },
    {
        "content": "<p>and then we just 'know' that we only use some parts of it</p>",
        "id": 215764306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605490
    },
    {
        "content": "<p>I guess this only ever applies to by-ref captures</p>",
        "id": 215764362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605514
    },
    {
        "content": "<p>tbh I would rather prefer to do the naive mechanism at first and only consider this more optimized form if we had examples to work from (and I think I'd like it better as a MIR <em>optimization</em>, even, though that might be challenging to achieve)</p>",
        "id": 215764423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605544
    },
    {
        "content": "<p>but I was wondering if this approach would solve some problems in some way</p>",
        "id": 215764454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605560
    },
    {
        "content": "<p>because e.g. we'd still be able to translate <code>convert_var</code> and have it always yield a variable just like it does today</p>",
        "id": 215764532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604605578
    },
    {
        "content": "<p>I think I kind of understand it. I will think about it tonight, but I guess it would also kind of come down to which one kind of is less hacky. Essentially more work right now might save us debugging (and rewriting code) later on for some possible case we didn't consider in the current planning phase.</p>",
        "id": 215765189,
        "sender_full_name": "Aman Arora",
        "timestamp": 1604605871
    },
    {
        "content": "<p>Yeah. I'm not super keen on having the borrow checker \"special case\" closures</p>",
        "id": 215766181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604606332
    },
    {
        "content": "<p>which would be required in the plan I was sketching above</p>",
        "id": 215766195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604606340
    },
    {
        "content": "<p>and I'm not sure how <code>move</code> captures would be handled either</p>",
        "id": 215766216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604606351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/optimizing.20and.20partial.20paths/near/215766181\">said</a>:</p>\n<blockquote>\n<p>Yeah. I'm not super keen on having the borrow checker \"special case\" closures</p>\n</blockquote>\n<p>Not sure if this would affect workbeing done for Polonius as well</p>",
        "id": 215766374,
        "sender_full_name": "Aman Arora",
        "timestamp": 1604606422
    },
    {
        "content": "<p>it would</p>",
        "id": 215766708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604606587
    },
    {
        "content": "<p>I think I'm leaning towards the naive model myself</p>",
        "id": 215766738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604606601
    },
    {
        "content": "<p>Okay over the weekend, we will try read through the code and kind of go over what we discussed today. If you get a chance can u upload the video from today and last week?</p>",
        "id": 215766882,
        "sender_full_name": "Aman Arora",
        "timestamp": 1604606668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can you upload the videos today, if you get a chance? Thanks</p>",
        "id": 215880521,
        "sender_full_name": "Aman Arora",
        "timestamp": 1604684976
    },
    {
        "content": "<p><a href=\"https://youtu.be/-8simqmm8t4\">https://youtu.be/-8simqmm8t4</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"-8simqmm8t4\" href=\"https://youtu.be/-8simqmm8t4\"><img src=\"https://i.ytimg.com/vi/-8simqmm8t4/default.jpg\"></a></div>",
        "id": 215882684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604686066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 215882698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604686074
    },
    {
        "content": "<p>thnak you <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 215882766,
        "sender_full_name": "Aman Arora",
        "timestamp": 1604686092
    },
    {
        "content": "<p>So we had discussed a bit about we try be smart about when we check for captured Place as we build a the Partial Path, </p>\n<p>The way I was thinking of this was at some point we will convert the HIR-PlaceBuilder to MIR equivalent </p>\n<ol>\n<li>At least the way I picture it, we can do it when we call <code>PlaceBuilder::into_place</code>,  at that point, we will have all the projections that need to be applied. If the base within Projection builder  is a Local we just do what we today, else:</li>\n<li>When into_place is called we convert MIR projections to HIR (stop once we see a projection other than Deref, Field or Downcast)</li>\n<li>This is when we check the list to find an ancestor (there is going to always be at most 1). I don't see a better way other than linear search here other than storing HIR projections in a prefix tree. </li>\n</ol>\n<p>So overall one linear search. Once we know the ancestor we will get an idea of how many projections we have consumed, so we intern only the remaining ones.</p>",
        "id": 217106692,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605687799
    },
    {
        "content": "<hr>\n<p>So I guess more clearly:</p>\n<ul>\n<li>We might not need a HIR/MIR mode, we can just differentiate b/w Local/UpvarRef as the <code>from</code> or <code>base</code> of the PlaceBuilder</li>\n<li>once <code>into_place</code> is called, then we try to figure out which captured path is an ancestor of the current Place being built. There is going to be atmost, one ancestor. This is going to be an O(n) operation.</li>\n<li>After this, we just build the place using the remaining projections.</li>\n<li>We also store the ClosureKind(Fn/...) in PlaceBuilder so that we can appropriately deref once we are ready to build the final place without needing access to infcx.</li>\n</ul>",
        "id": 217107293,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605688251
    },
    {
        "content": "<p>this makes a lot of sense, yes</p>",
        "id": 217145782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605711786
    },
    {
        "content": "<p>sounds good!</p>",
        "id": 217146478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605712080
    }
]