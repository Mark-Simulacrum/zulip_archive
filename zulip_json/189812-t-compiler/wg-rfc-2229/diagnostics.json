[
    {
        "content": "<p>What do we point to here? </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">rect</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Rectangle</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">top_left</span>: <span class=\"nc\">Point</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span>: <span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">bottom_right</span>: <span class=\"nc\">Point</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span>: <span class=\"mi\">50</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// Capture analysis: { rect.top_left: MutBorrow }</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">top_left</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// L1</span>\n<span class=\"w\">      </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">top_left</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L2</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p_tl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">rect</span><span class=\"p\">.</span><span class=\"n\">top_left</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Error rect.top_left already has a mutable borrow</span>\n\n<span class=\"n\">c</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>I kind of see us throwing an error pointing to the update on line marked L1 (based on code I was planning on writing).  But that doesn't give the idea why all of top_left is borrowed and not just top_left.x</p>",
        "id": 211439513,
        "sender_full_name": "Aman Arora",
        "timestamp": 1601248753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 211439523,
        "sender_full_name": "Aman Arora",
        "timestamp": 1601248796
    },
    {
        "content": "<p>that's an interesting point</p>",
        "id": 211500136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303560
    },
    {
        "content": "<p>the challenge here is that the \"reason\" that a particular path is borrowed is a combination of two things, right?</p>",
        "id": 211500176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303584
    },
    {
        "content": "<p>(1) who forced us into the current borrow mode</p>",
        "id": 211500192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303592
    },
    {
        "content": "<p>(2) who forced us to borrow this path?</p>",
        "id": 211500206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303597
    },
    {
        "content": "<p>presently you can summarize both with one span, but in that example you cannot</p>",
        "id": 211500221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303605
    },
    {
        "content": "<p>we might want to track <em>both</em> spans</p>",
        "id": 211500230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303617
    },
    {
        "content": "<p>and if they are not the same we could say \"<code>top_left</code> is borrowed mutably because <code>top_left.x</code> is mutated here\" and \"<code>top_left</code> is borrowed because it is used here\"</p>",
        "id": 211500330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303652
    },
    {
        "content": "<p>something like that</p>",
        "id": 211500335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 211500348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303662
    },
    {
        "content": "<p>I would however</p>",
        "id": 211500352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303664
    },
    {
        "content": "<p>encourage you not to try and do this from the start</p>",
        "id": 211500364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303668
    },
    {
        "content": "<p>but instead file an issue with some notes</p>",
        "id": 211500369,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303670
    },
    {
        "content": "<p>and leave that as a FIXME</p>",
        "id": 211500378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303674
    },
    {
        "content": "<p>sounds good</p>",
        "id": 211506103,
        "sender_full_name": "Aman Arora",
        "timestamp": 1601306040
    }
]