[
    {
        "content": "<p>I added the items I sent last week with some more details based on discussions over the last week. Here is the hackmd: <a href=\"https://hackmd.io/EltGT2IWRSyD3hJT-Uy9fw\">https://hackmd.io/EltGT2IWRSyD3hJT-Uy9fw</a></p>",
        "id": 208655765,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598947298
    },
    {
        "content": "<p>We can either pull in items from it to Zulip, or comment on the hackmd. Latter might be easier to just add notes to GIthub</p>",
        "id": 208655983,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598947423
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span></p>",
        "id": 208736773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598988954
    },
    {
        "content": "<p>oh, we're having an async meeting, <em>right</em> :)</p>",
        "id": 208736825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598988969
    },
    {
        "content": "<p>so let me leave a few comments</p>",
        "id": 208736840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598988980
    },
    {
        "content": "<blockquote>\n<p>Alternate time, preferrably before 12PM EST</p>\n</blockquote>\n<p>maybe create a doodle with whatever range of times works best for y'all?</p>",
        "id": 208736860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598988996
    },
    {
        "content": "<blockquote>\n<p>Discuss closure output</p>\n</blockquote>",
        "id": 208736915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/async.20meeting/near/208736860\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Alternate time, preferrably before 12PM EST</p>\n</blockquote>\n<p>maybe create a doodle with whatever range of times works best for y'all?</p>\n</blockquote>\n<p>I'll do that</p>",
        "id": 208737148,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989154
    },
    {
        "content": "<p>I was just catching up on the closure output</p>",
        "id": 208737281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989219
    },
    {
        "content": "<p>so</p>",
        "id": 208737283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989220
    },
    {
        "content": "<p>I remain pretty reluctant to dump tons of information in a closure type</p>",
        "id": 208737299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989229
    },
    {
        "content": "<p>in particular, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>'s suggestion of <code>[closure@$DIR/$FOO.rs:XX:YY XX:YY (capture tuple) &lt;parent generics&gt;]</code></p>",
        "id": 208737311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989242
    },
    {
        "content": "<p>feels super unreadable to me</p>",
        "id": 208737321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989246
    },
    {
        "content": "<p>I think it's great to have the option of dumping that information</p>",
        "id": 208737330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989254
    },
    {
        "content": "<p>that said, I wouldn't be opposed to printing tuples types like that</p>",
        "id": 208737339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989262
    },
    {
        "content": "<p>and addressing the idea of simplifying them as a separate matter for <a class=\"stream\" data-stream-id=\"147480\" href=\"/#narrow/stream/147480-t-compiler.2Fwg-diagnostics\">#t-compiler/wg-diagnostics</a></p>",
        "id": 208737364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989276
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/async.20meeting/near/208737339\">said</a>:</p>\n<blockquote>\n<p>that said, I wouldn't be opposed to printing tuples types like that</p>\n</blockquote>\n<p>essentially what they are now, right? Unless I'm misinterpreting</p>",
        "id": 208737508,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989343
    },
    {
        "content": "<p>yes, just without printing the names of upvars</p>",
        "id": 208737531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989356
    },
    {
        "content": "<p>I think that's the major different, right?</p>",
        "id": 208737546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989363
    },
    {
        "content": "<p>I didn't think about it like that, but that does make sense</p>",
        "id": 208737577,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989384
    },
    {
        "content": "<p>basically because we don't have access to the upvars from the pretty printer anymore</p>",
        "id": 208737582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989387
    },
    {
        "content": "<blockquote>\n<p>Discuss relaxations to closure catpures outside of 2229:</p>\n</blockquote>",
        "id": 208737655,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989432
    },
    {
        "content": "<p>/me reads</p>",
        "id": 208737730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/async.20meeting/near/208737582\">said</a>:</p>\n<blockquote>\n<p>basically because we don't have access to the upvars from the pretty printer anymore</p>\n</blockquote>\n<p>We do have access to them, it's a bit harder to guarantee right now when they are safe to read. If I understand correctly my implementation plan even though is non ideal -- might work.</p>\n<p>However, from wg-polymorphoisms perspective, just printing the types might be easier (I'm assuming captured paths don't matter,  their types matter), especially since from a user diagnostics we are trying to avoid printing the type information anyway. And this would also allow us to get done with most of the work for this separately from any other ticket so overall seems better.</p>",
        "id": 208738013,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989603
    },
    {
        "content": "<p>Yeah so all I meant was that it is non-trivial to know if they are safe to read</p>",
        "id": 208738118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989655
    },
    {
        "content": "<p>I think any attempt to be clever here is not worth it</p>",
        "id": 208738133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989663
    },
    {
        "content": "<p>Fair</p>",
        "id": 208738180,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989682
    },
    {
        "content": "<p>Regarding <a href=\"https://github.com/rust-lang/project-rfc-2229/blob/lang-changes.md-1/lang-changes.md\">these changes</a> -- this comes about as an immediate side-effect of relying on the <code>ExprUseVisitor</code>, right?</p>",
        "id": 208738243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989707
    },
    {
        "content": "<p>Yes</p>",
        "id": 208738270,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989724
    },
    {
        "content": "<p>I think this is fine, but we likely want to surface it to the lang team to make folks aware</p>",
        "id": 208738279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989730
    },
    {
        "content": "<p>One thing we could do is file a rust-lang/rust issue and nominate it for discussion in a lang team meeting</p>",
        "id": 208738308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989744
    },
    {
        "content": "<p>Conceptually replying on use than what appears as text within the closure</p>",
        "id": 208738313,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989747
    },
    {
        "content": "<p>actually though we really ought to have a lang-team projec tgroup for this work</p>",
        "id": 208738328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989757
    },
    {
        "content": "<p>and we could note it there</p>",
        "id": 208738339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989764
    },
    {
        "content": "<p>let me fix that</p>",
        "id": 208738351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/async.20meeting/near/208738308\">said</a>:</p>\n<blockquote>\n<p>One thing we could do is file a rust-lang/rust issue and nominate it for discussion in a lang team meeting</p>\n</blockquote>\n<p>Yes, if there is documentation on this, I can start the process</p>",
        "id": 208738380,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989784
    },
    {
        "content": "<p>so I just created <a href=\"https://github.com/rust-lang/lang-team/issues/50\">https://github.com/rust-lang/lang-team/issues/50</a></p>",
        "id": 208738698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989931
    },
    {
        "content": "<p>this will be added to our lang team project board for periodic check-in</p>",
        "id": 208738716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989941
    },
    {
        "content": "<p>you can leave a comment there and we'll see it next meeting</p>",
        "id": 208738727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598989949
    },
    {
        "content": "<p>Aight, I'll just leave link to the issue there. Do I need to be present at the meeting? If so what time is it?</p>",
        "id": 208738791,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598989993
    },
    {
        "content": "<p>you don't have to be, but you're welcome to be</p>",
        "id": 208738838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990025
    },
    {
        "content": "<p>(I can explain it)</p>",
        "id": 208738842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990028
    },
    {
        "content": "<p>the next triage meeting is at <time datetime=\"2020-09-07T19:00:00Z\">2020-09-07T15:00:00-04:00</time></p>",
        "id": 208738933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990056
    },
    {
        "content": "<p>ah, hmm, that's labor day</p>",
        "id": 208738951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990066
    },
    {
        "content": "<p>it may be a week later :)</p>",
        "id": 208738953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990068
    },
    {
        "content": "<p>I won't be able to make it</p>",
        "id": 208739017,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598990105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/async.20meeting/near/208737311\">said</a>:</p>\n<blockquote>\n<p>in particular, <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span>'s suggestion of <code>[closure@$DIR/$FOO.rs:XX:YY XX:YY (capture tuple) &lt;parent generics&gt;]</code></p>\n</blockquote>\n<p>I missed one thing here, what are we doing with generics here, and eddyb's suggestion about path? I like the idea of path because it makes it more readable which part of the path introduced is responsible for what generic. I'm not sure about how genrics are handled within the compiler so there might be a nicer way to present the same information like &lt;T=type, U=type, ...&gt;</p>",
        "id": 208739038,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598990113
    },
    {
        "content": "<p>I think my preference would be:</p>\n<ul>\n<li>default is to print with path as <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> suggested but ignore all the substitutions</li>\n<li>with <code>-Zverbose</code>, we print the substitutions too</li>\n</ul>",
        "id": 208739172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990170
    },
    {
        "content": "<p>I think in this case we can just dump the substitutions in \"raw\" format since they are intended for compiler debugging and not end users</p>",
        "id": 208739228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598990192
    },
    {
        "content": "<p>gimme a min</p>",
        "id": 208739353,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598990270
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ce86ba032761dda95cb24afd1860c39f\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ce86ba032761dda95cb24afd1860c39f</a></p>\n<p>So here the verbose output would be <code>f&lt;&amp;str&gt;::{{closure}}#0</code> and non verbose would be<code>f::{{closure}}#0</code> for the closure?</p>",
        "id": 208740060,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598990539
    },
    {
        "content": "<p>and then type infromation</p>",
        "id": 208740076,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598990546
    },
    {
        "content": "<p>oh hmm</p>",
        "id": 208757193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598999372
    },
    {
        "content": "<p>Well with list of captures</p>",
        "id": 208757205,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598999393
    },
    {
        "content": "<p>I'm confused where <code>f</code> comes from in that link :)</p>",
        "id": 208757215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598999398
    },
    {
        "content": "<p>Aaah I copied the wrong thing woops</p>",
        "id": 208757280,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598999420
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1447dc8ebbd715678df2aad2b45f92d1\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1447dc8ebbd715678df2aad2b45f92d1</a></p>",
        "id": 208757381,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598999486
    },
    {
        "content": "<p>here, sorry about that</p>",
        "id": 208757383,
        "sender_full_name": "Aman Arora",
        "timestamp": 1598999490
    },
    {
        "content": "<p>Actually, I was thinking about this and if we have to print the type of the closure (because of an error), specialization won't matter. If there is an error because on what type is used to specialize function/struct, then that's an issue with the bounds.</p>\n<p>So in the example, we'd print <code>f&lt;T&gt;::{{closure}}#0 (&amp;T)</code>with -Zverbose.</p>\n<p>(Sort of basing this on the output of <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=438242f8d44c6d05c4c8e980a6832b23\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=438242f8d44c6d05c4c8e980a6832b23</a> and <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=33712356985dda075e2ab2c53d6eef19\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=33712356985dda075e2ab2c53d6eef19</a>)</p>",
        "id": 208790626,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599033358
    },
    {
        "content": "<p>Here is the updated proposal: <a href=\"https://hackmd.io/U31EWRpWTeCk2091yuYt9Q\">https://hackmd.io/U31EWRpWTeCk2091yuYt9Q</a></p>\n<p><code>{{closure}}#0</code> will change to <code>{closure#0}</code> once <a href=\"https://github.com/rust-lang/rust/pull/76176\">https://github.com/rust-lang/rust/pull/76176</a> is merged</p>",
        "id": 208791935,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599034260
    },
    {
        "content": "<p>seems good</p>",
        "id": 208878651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599076485
    },
    {
        "content": "<p>What's the process after this? Just share this with wg-diagnostics on zulip?</p>",
        "id": 208879896,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077087
    },
    {
        "content": "<p>yeah I mean we don't really have a formal process for these sorts of changes</p>",
        "id": 208879930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077102
    },
    {
        "content": "<p>you could just post it as a heads-up in <a class=\"stream\" data-stream-id=\"147480\" href=\"/#narrow/stream/147480-t-compiler.2Fwg-diagnostics\">#t-compiler/wg-diagnostics</a></p>",
        "id": 208879975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077127
    },
    {
        "content": "<p>but basically if somebody r+'s, it's fine</p>",
        "id": 208879995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077138
    },
    {
        "content": "<p>this particular change (imo) is not that intrusive or likely to affect users overly much</p>",
        "id": 208880063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077164
    },
    {
        "content": "<p>I'll put this up on 2229 project GitHub and ask them to just approve it there. Helps keep track of things.</p>",
        "id": 208880092,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077182
    },
    {
        "content": "<p>it's good to ensure that <em>somebody</em> sees it</p>",
        "id": 208880124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077200
    },
    {
        "content": "<p>Yup</p>",
        "id": 208880146,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077212
    },
    {
        "content": "<p>if we were <em>really</em> nervous we could tag it <code>I-Nominated</code> and <code>T-Compiler</code> to discuss in meeting</p>",
        "id": 208880152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077218
    },
    {
        "content": "<p>If it goes smoothly with wg-diagnostics, then I guess we are fine? Else we can discuss bringing it up with compiler team</p>",
        "id": 208880235,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077275
    },
    {
        "content": "<p>So we get more feedback</p>",
        "id": 208880289,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077283
    },
    {
        "content": "<p>I don't thikn it's necessarily to nominate to the full team</p>",
        "id": 208880305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077291
    },
    {
        "content": "<p>if you were proposing to change how (e.g.) a type like <code>Vec&lt;u32&gt;</code> printed out, that'd be one thing...</p>",
        "id": 208880337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599077306
    },
    {
        "content": "<p>I see, I'm not familiar with how the nomination process works</p>",
        "id": 208880397,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077335
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/project-rfc-2229/pull/17\">https://github.com/rust-lang/project-rfc-2229/pull/17</a></p>",
        "id": 208881162,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599077675
    }
]