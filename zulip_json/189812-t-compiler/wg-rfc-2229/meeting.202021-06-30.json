[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Please add this to the edition blocker board <a href=\"https://github.com/rust-lang/project-rfc-2229/issues/51\">https://github.com/rust-lang/project-rfc-2229/issues/51</a></p>",
        "id": 244484827,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625085734
    },
    {
        "content": "<p>and this <a href=\"https://github.com/rust-lang/project-rfc-2229/issues/52\">https://github.com/rust-lang/project-rfc-2229/issues/52</a></p>",
        "id": 244489746,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625088059
    },
    {
        "content": "<p>Issue for the formal spec: <a href=\"https://github.com/rust-lang/project-rfc-2229/issues/53\">https://github.com/rust-lang/project-rfc-2229/issues/53</a></p>",
        "id": 244490017,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625088194
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">s</span>: <span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">FnMut</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">#[rustc_capture_analysis]</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">truncate</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">c</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> If I understood our discussion during the meeting today, we want to capture <code>*t.0</code> -&gt; &amp;mut here?</p>\n<p>I feel like that would not work here because the Reference to <code>*t.0</code> wouldn't live long enough to be returned from the function</p>",
        "id": 244503920,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625097716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> no, in that case we do not want that</p>",
        "id": 244603588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625161887
    },
    {
        "content": "<p>the difference is that you did not traverse a deref of an <code>&amp;mut</code></p>",
        "id": 244603607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625161900
    },
    {
        "content": "<p>Can you post the recording from yesterday? I think I'm misremembering what we discussed about Box</p>",
        "id": 244603792,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625161983
    },
    {
        "content": "<p>argh, yes</p>",
        "id": 244633069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177301
    },
    {
        "content": "<p><a href=\"https://youtu.be/DEWmIolphEs\">https://youtu.be/DEWmIolphEs</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"DEWmIolphEs\" href=\"https://youtu.be/DEWmIolphEs\"><img src=\"https://uploads.zulipusercontent.net/7d805ced1f4e58bb8ed8b58287dc4dc54687b9a1/68747470733a2f2f692e7974696d672e636f6d2f76692f4445576d496f6c706845732f64656661756c742e6a7067\"></a></div>",
        "id": 244633265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177410
    },
    {
        "content": "<p>Thank you</p>",
        "id": 244633292,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625177426
    },
    {
        "content": "<p>it looks like I have a few other videos to upload, whoops</p>",
        "id": 244633299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177435
    },
    {
        "content": "<p>I'll do that</p>",
        "id": 244633300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177436
    },
    {
        "content": "<p>Thanks</p>",
        "id": 244633305,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625177442
    },
    {
        "content": "<p>done</p>",
        "id": 244633573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177642
    },
    {
        "content": "<p>(in the playlist)</p>",
        "id": 244633624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625177653
    },
    {
        "content": "<p>Awesome</p>",
        "id": 244633636,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625177664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/meeting.202021-06-30/near/244603607\">said</a>:</p>\n<blockquote>\n<p>the difference is that you did not traverse a deref of an <code>&amp;mut</code></p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/meeting.202021-06-30/near/244603588\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> no, in that case we do not want that</p>\n</blockquote>\n<p><a href=\"https://youtu.be/DEWmIolphEs?t=3042\">https://youtu.be/DEWmIolphEs?t=3042</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"DEWmIolphEs\" href=\"https://youtu.be/DEWmIolphEs?t=3042\"><img src=\"https://uploads.zulipusercontent.net/7d805ced1f4e58bb8ed8b58287dc4dc54687b9a1/68747470733a2f2f692e7974696d672e636f6d2f76692f4445576d496f6c706845732f64656661756c742e6a7067\"></a></div><p>From what we discussed here was if we are in a box closure we should reborrow even through a box deref. Which would break the example I have above</p>",
        "id": 244869093,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625419777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/meeting.202021-06-30/near/244503920\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">s</span>: <span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">FnMut</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">#[rustc_capture_analysis]</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">truncate</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">c</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> If I understood our discussion during the meeting today, we want to capture <code>*t.0</code> -&gt; &amp;mut here?</p>\n<p>I feel like that would not work here because the Reference to <code>*t.0</code> wouldn't live long enough to be returned from the function</p>\n</blockquote>\n<p>this example</p>",
        "id": 244869095,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625419784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> hmm -- so in that example, the <code>&amp;mut</code> is not part of the <em>upvar's</em> type, right? it is introduced by the closure itself. That is, the closure effectively does a \"borrow mut\" of <code>t.0</code> (and then invokes truncate on that?) -- what accesses do you see exactly?</p>",
        "id": 244879406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625435673
    },
    {
        "content": "<p>in my mind, that case is different because the path that is being captured (<code>t.0</code>) doesn't contain a deref of an <code>&amp;mut</code></p>",
        "id": 244879418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625435700
    },
    {
        "content": "<p>Yes, but if you check the video portion I liked we talked about doing it for Box deref too</p>",
        "id": 244879487,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625435774
    },
    {
        "content": "<p>Like not truncate box unless it's used in a ByValue context</p>",
        "id": 244879493,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625435793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I see.</p>",
        "id": 244879776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625436174
    },
    {
        "content": "<p>that seems wrong, yes</p>",
        "id": 244879777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625436178
    }
]