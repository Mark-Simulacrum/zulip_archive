[
    {
        "content": "<p>Oh shoot, I just realized <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> that I can't make the meeting today!</p>",
        "id": 239486945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621454399
    },
    {
        "content": "<p>I can probably do async chat during the hour though</p>",
        "id": 239487003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621454407
    },
    {
        "content": "<p>(I have another overlapping call)</p>",
        "id": 239487024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621454414
    },
    {
        "content": "<p>I didn't get too much time last week to work on the profiling, we can just meet next week</p>",
        "id": 239487110,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621454443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 239487138,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621454451
    },
    {
        "content": "<p>ok, that's fine w/ me</p>",
        "id": 239487259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621454497
    },
    {
        "content": "<p>was there anything for us from the lang team sync?</p>",
        "id": 239533719,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621485808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> trying to remember :) not <em>really</em>, people were curious to see the results regarding the size of closures</p>",
        "id": 239560956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621503274
    },
    {
        "content": "<p>as am I :)</p>",
        "id": 239560963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621503277
    },
    {
        "content": "<p>we were also discussing how hard it would be to do a \"rewrite\" to a more optimized form</p>",
        "id": 239560980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621503290
    },
    {
        "content": "<p>(hmm, actually, I'm thinking about that-- it might not be as hard as I initially thought)</p>",
        "id": 239561000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621503305
    },
    {
        "content": "<p>So I'm not sure if <code>create_fn_mono_items</code> is the best place for doing the size testing. It seems like we only call that for items that need monomorphized and not on all items. I suppose this isn't the worst because</p>\n<p>I'd also need to figure out how to create an instace on the spot, because the closure types(before and after 2229)Â I constructed are stored outside of how the data is pipelined.</p>",
        "id": 239809157,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621629116
    },
    {
        "content": "<p>So that I can call polymorphize</p>",
        "id": 239809203,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621629124
    },
    {
        "content": "<p>I'm not sure how easy this will be to do for where generics are involved. At least from the looks of it I'd have to rewrite/duplicate a lot of code around checking what generics are unused</p>",
        "id": 239982106,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621808399
    },
    {
        "content": "<p>At least the way I have done things right now, I create two closure tys, one before and after the feature. Really just need to store after (but I do both right now).</p>\n<p>And then I read them where we monomorph the closure</p>",
        "id": 239982220,
        "sender_full_name": "Aman Arora",
        "timestamp": 1621808481
    },
    {
        "content": "<p>another option would be to do it at code generation time</p>",
        "id": 240049938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621862504
    },
    {
        "content": "<p>either way, though, you are correct that it will only measure the size of closures we actually <em>instantiate</em></p>",
        "id": 240049954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621862514
    },
    {
        "content": "<p>it won't work well on libraries</p>",
        "id": 240049959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621862518
    },
    {
        "content": "<p>it'd work better on executables</p>",
        "id": 240049977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621862523
    }
]