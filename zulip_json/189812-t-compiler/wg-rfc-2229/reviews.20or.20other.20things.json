[
    {
        "content": "<p>PS, <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span>, let me know if there are reviews and things I can do to help -- I'm largely AFK this week. but if you point me at stuff I can try to make time.</p>",
        "id": 221224859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1609345817
    },
    {
        "content": "<p>1) So I had updated the PR for mutability, but we still need to not use the hack. I wasn't able to figure that out.  <a href=\"https://github.com/rust-lang/rust/pull/80092\">https://github.com/rust-lang/rust/pull/80092</a></p>\n<p>There was a merged conflict because of some change last night, I'll try push a fixup today.<br>\n2) We'll be creating a PR for the first pass of migrations and for  precise diagnostics when reporting Closure type today, so I'll send them here, Iet me know if u want me to @-ping you</p>\n<p>3) So needs_drop is implemented as a query and if I understand correctly if I add another query for figuring out non standard drops, we would probably end up storing results somewhere. <br>\n4) I implemented the precision path pass for mgirations I think  our non_standard_needs_drop would need support Drop implemented for ty and ty needs drop.</p>\n<p>Eg:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">A</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"nb\">Drop</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">B</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">C</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span>: <span class=\"nc\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"nc\">B</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"nb\">Drop</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">c</span>: <span class=\"nc\">C</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\">// move c.a;</span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Now here when we do the precise path we see that the only type within <code>c</code> that implements Drop has been captured but C still implemnets drop itself and then </p>\n<p>a)  That would run at a different time now<br>\nb) Assuming this class exists for use with closures, depending on how /what expectations the Drops are written,  there might be difference in behavior.</p>",
        "id": 221251164,
        "sender_full_name": "Aman Arora",
        "timestamp": 1609366339
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/80629\">https://github.com/rust-lang/rust/pull/80629</a></p>",
        "id": 221416405,
        "sender_full_name": "Aman Arora",
        "timestamp": 1609620120
    },
    {
        "content": "<p>I added this PR (<a href=\"https://github.com/rust-lang/rust/pull/80635\">https://github.com/rust-lang/rust/pull/80635</a>) which allows us to show precise path in diagnostics message related to closure kind selection decision</p>",
        "id": 221429484,
        "sender_full_name": "rocksand",
        "timestamp": 1609641224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/221251164\">said</a>:</p>\n<blockquote>\n<p>3) So needs_drop is implemented as a query and if I understand correctly if I add another query for figuring out non standard drops, we would probably end up storing results somewhere. <br>\n</p>\n</blockquote>\n<p>I gave some more thought on insignificant dtors. <br>\nSay we have <code>struct Foo&lt;T&gt;{ v: Vec&lt;T&gt;, s: String }</code> and <code>foo: F</code>. Now say the closure only needs to capture <code>foo.s</code>. We see that <code>foo.v</code> is defined in stdlib and therefore we would've marked the dtor as insignificant. </p>\n<p>What happens <code>T</code> implements <code>Drop</code>. Then the dtor of foo.v becomes somewhat significant because it will be triggered when <code>foo.v</code> is dropped.</p>\n<p>So one way around this _might_ be if this is an insignificant dtor we look at the substs for this type and see if any of the Generic Args have a significant dtor</p>\n<blockquote>\n<p>4) I implemented the precision path pass for mgirations I think  our non_standard_needs_drop would need support Drop implemented for ty and ty needs drop.</p>\n</blockquote>\n<p>I fixed this. I got help from @_LÃ©o Lanteri Thauvin|255061. I just check for if a drop is implemented for ty and if so is it fully captured.</p>",
        "id": 221756829,
        "sender_full_name": "Aman Arora",
        "timestamp": 1609932416
    },
    {
        "content": "<p>This might be fringe, but I was imagining a case where drop order changing with only std types would have a very observable effect.</p>\n<div class=\"codehilite\"><pre><span></span><code>use std::fs::File;\nuse std::io::{BufWriter, Write};\n\nstruct Foo {\n    bw1: BufWriter&lt;File&gt;,\n    bw2: BufWriter&lt;File&gt;,\n}\n\nfn main() {\n    let file1 = File::create(&quot;foo.bin&quot;).unwrap();\n    let file2 = File::create(&quot;foo.bin&quot;).unwrap();\n\n    let mut foo = Foo {\n        bw1: BufWriter::new(file1),\n        bw2: BufWriter::new(file2),\n    };\n\n    foo.bw1.write_all(&amp;[0]).unwrap();\n    foo.bw2.write_all(&amp;[1]).unwrap();\n\n    let _c = move || {\n        println!(&quot;{}&quot;, foo.bw2.capacity());\n    };\n}\n</code></pre></div>\n<p>If I understand correctly, the file contents would be <code>1</code> without RFC-2229 and <code>0</code> with RFC-2229.</p>\n<p>Not suggesting drop order shouldn't change. Just showing that a type being in std isn't enough to say that its drop isn't significant. But you probably already know that. Have an extra example in that case. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221927228,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1610016276
    },
    {
        "content": "<p>thank you for bringing this up, I personally hadn't thought of this. I'll take this into account and discuss it with the rest of the working-group. I'll try to remember to update you about the decision we make. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221933085,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610020471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ready when you are. We are waiting to be let in</p>",
        "id": 222089518,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610121793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306073\">Tyson Nottingham</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/221927228\">said</a>:</p>\n<blockquote>\n<p>This might be fringe, but I was imagining a case where drop order changing with only std types would have a very observable effect.</p>\n<div class=\"codehilite\"><pre><span></span><code>use std::fs::File;\nuse std::io::{BufWriter, Write};\n\nstruct Foo {\n    bw1: BufWriter&lt;File&gt;,\n    bw2: BufWriter&lt;File&gt;,\n}\n\nfn main() {\n    let file1 = File::create(&quot;foo.bin&quot;).unwrap();\n    let file2 = File::create(&quot;foo.bin&quot;).unwrap();\n\n    let mut foo = Foo {\n        bw1: BufWriter::new(file1),\n        bw2: BufWriter::new(file2),\n    };\n\n    foo.bw1.write_all(&amp;[0]).unwrap();\n    foo.bw2.write_all(&amp;[1]).unwrap();\n\n    let _c = move || {\n        println!(&quot;{}&quot;, foo.bw2.capacity());\n    };\n}\n</code></pre></div>\n<p>If I understand correctly, the file contents would be <code>1</code> without RFC-2229 and <code>0</code> with RFC-2229.</p>\n<p>Not suggesting drop order shouldn't change. Just showing that a type being in std isn't enough to say that its drop isn't significant. But you probably already know that. Have an extra example in that case. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>So the issue really was that I misunderstood if we wanted to label all types as having a significant destructor. We plan on only doing so for only some types in the stdlib. We'll essentially run the lint and select types that only clean up memory and whose change in Drop order won't have any effects on user code.</p>",
        "id": 222094803,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610124277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I forgot to link the PRs:</p>\n<ul>\n<li>First pass for lint: <a href=\"https://github.com/rust-lang/rust/pull/80629\">https://github.com/rust-lang/rust/pull/80629</a></li>\n<li>Improve diagnostics when closure doesn't meet trait bound: <a href=\"https://github.com/rust-lang/rust/pull/80635\">https://github.com/rust-lang/rust/pull/80635</a></li>\n</ul>\n<p>Also if u can give me an idea of your availability for sync meetings?</p>",
        "id": 222451043,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610466982
    },
    {
        "content": "<p>Fix mutability/move closures: <a href=\"https://github.com/rust-lang/rust/pull/80092\">https://github.com/rust-lang/rust/pull/80092</a></p>",
        "id": 222485606,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610481328
    },
    {
        "content": "<p>Also let me know if u want me to ping you on github for these</p>",
        "id": 222485672,
        "sender_full_name": "Aman Arora",
        "timestamp": 1610481358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I left a comment on <a href=\"https://github.com/rust-lang/rust/issues/80629\">#80629</a></p>",
        "id": 222975403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610795308
    },
    {
        "content": "<p>I have some thoughts on test cases, but I'm going to move to a distinct topic</p>",
        "id": 222975406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610795315
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/222975403\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> I left a comment on <a href=\"https://github.com/rust-lang/rust/issues/80629\">#80629</a></p>\n</blockquote>\n<p>Sorry for the delay, this has been updated</p>",
        "id": 223321478,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611106425
    },
    {
        "content": "<p>Chris created a PR for the initial set of diagnostics in the borrow checker: <a href=\"https://github.com/rust-lang/rust/pull/81062\">https://github.com/rust-lang/rust/pull/81062</a></p>",
        "id": 223323747,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611108537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span>, you asked:</p>\n<blockquote>\n<p>Should I update the lint PR right now or leave it until we decide on a concrete migration macro? <a href=\"https://github.com/rust-lang/rust/issues/80629\">#80629</a></p>\n</blockquote>\n<p>I think we should update it to generate <code>drop((&amp;x, .., &amp;z))</code> and consider adding a macro later.</p>\n<blockquote>\n<p>I should remove the ByValue capture parts from <a href=\"https://github.com/rust-lang/rust/issues/80092\">#80092</a></p>\n</blockquote>\n<p>I'm not sure what the question is :)</p>",
        "id": 223878820,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611570831
    },
    {
        "content": "<p>Also, I left reviews on the two PRs cited. I'll take a look at <a href=\"https://github.com/rust-lang/rust/issues/80629\">#80629</a> and <a href=\"https://github.com/rust-lang/rust/issues/80092\">#80092</a> later on</p>",
        "id": 223883317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611573813
    },
    {
        "content": "<p>80092 implements the old by move capture strategy</p>",
        "id": 223920416,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611591435
    },
    {
        "content": "<p>To not capture detefs</p>",
        "id": 223920445,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611591445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  updated the old PR</p>",
        "id": 224016893,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611654706
    },
    {
        "content": "<p>I was thinking I should probably remove the part from <a href=\"https://github.com/rust-lang/rust/issues/80092\">#80092</a> that implements removing the derefs in case of by value capture before it goes in and then we implement reborrow directly</p>",
        "id": 224017014,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611654776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> there was a merge conflict can u r+ this again: <a href=\"https://github.com/rust-lang/rust/pull/80629\">https://github.com/rust-lang/rust/pull/80629</a>?</p>",
        "id": 224536565,
        "sender_full_name": "Aman Arora",
        "timestamp": 1611955939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I have the PR for handling patterns ready to be reviewed: <a href=\"https://github.com/rust-lang/rust/pull/82536\">https://github.com/rust-lang/rust/pull/82536</a></p>",
        "id": 227857702,
        "sender_full_name": "rocksand",
        "timestamp": 1614296005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 227944104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614353595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> just so you know, I've been reading the PR slowly</p>",
        "id": 228283207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  are you joining the sync?</p>",
        "id": 228667928,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614805457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I am</p>",
        "id": 228667950,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614805466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I finally had some time to address all the comments you left on my PR</p>",
        "id": 228903743,
        "sender_full_name": "rocksand",
        "timestamp": 1614925278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  can you upload the sync video?</p>",
        "id": 229010715,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614972532
    },
    {
        "content": "<p>yes</p>",
        "id": 229011768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614972940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> I will try to review today!</p>",
        "id": 229011779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614972946
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/82878\">https://github.com/rust-lang/rust/pull/82878</a><br>\nPR for repr packed</p>",
        "id": 229220410,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615153657
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/229011779\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307184\">rocksand</span> I will try to review today!</p>\n</blockquote>\n<p>reviewed</p>",
        "id": 229314436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615216543
    },
    {
        "content": "<p>Thanks, I addressed all of your comments</p>",
        "id": 229395234,
        "sender_full_name": "rocksand",
        "timestamp": 1615245977
    },
    {
        "content": "<p>Pr for getting rid of old data structures <br>\n<a href=\"https://github.com/rust-lang/rust/pull/82951\">https://github.com/rust-lang/rust/pull/82951</a></p>",
        "id": 229553087,
        "sender_full_name": "Jennifer Wills",
        "timestamp": 1615323683
    },
    {
        "content": "<p>nice!</p>",
        "id": 229553500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615323830
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  are we doing a sync today, the meeting doesn't seem to be on my calendar</p>",
        "id": 229744179,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615410240
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> hmmm</p>",
        "id": 229857065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615473033
    },
    {
        "content": "<p>what time?</p>",
        "id": 229857083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615473039
    },
    {
        "content": "<p>I have availability</p>",
        "id": 229857091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615473042
    },
    {
        "content": "<p>would <time datetime=\"2021-03-11T21:00:00Z\">2021-03-11T16:00:00-05:00</time> work?</p>",
        "id": 229858757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615473631
    },
    {
        "content": "<p>Works for me</p>",
        "id": 229883614,
        "sender_full_name": "rocksand",
        "timestamp": 1615481426
    },
    {
        "content": "<p>I don't think I'll be able to make it</p>",
        "id": 229884232,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615481638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> I could also do <time datetime=\"2021-03-11T18:30:00Z\">2021-03-11T13:30:00-05:00</time></p>",
        "id": 229893562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615484461
    },
    {
        "content": "<p>but only for 30 min</p>",
        "id": 229893588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615484469
    },
    {
        "content": "<p>actually i'm fairly flexible, 14:30pm would also be ok (we share a timezone, don't we?)</p>",
        "id": 229893628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615484490
    },
    {
        "content": "<p>Anytime works for me. Yes, I believe we are in the same timezone. Aman and I are in EST</p>",
        "id": 229901224,
        "sender_full_name": "rocksand",
        "timestamp": 1615487348
    },
    {
        "content": "<p>Those can work for me (woops I had forgot to hit send)</p>",
        "id": 229902083,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615487654
    },
    {
        "content": "<p>Let's meet at 2:30, since it's late for 1:30</p>",
        "id": 229903214,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615488043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  are you avaiable?</p>",
        "id": 229911480,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615491201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> yeah gimme a second</p>",
        "id": 229911528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615491226
    },
    {
        "content": "<p>zoom?</p>",
        "id": 229911712,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615491281
    },
    {
        "content": "<p>yea, can you send a link?</p>",
        "id": 229911742,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615491293
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I open a PR last night for the bug that was filed last week: <a href=\"https://github.com/rust-lang/rust/pull/83364\">https://github.com/rust-lang/rust/pull/83364</a></p>",
        "id": 231362855,
        "sender_full_name": "Aman Arora",
        "timestamp": 1616438512
    },
    {
        "content": "<p>r+'d</p>",
        "id": 231647311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616597610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I had to do a find and repace search to fix some of the failing tests (some tests are architecture dependent) and I ended up also modifying some tests that output to <code>.html</code> files. I am not very familiar with those tests so I just wanted to double check with you on whether I should be modifying those files or not. This is one of the html file I modified for instance: <a href=\"https://github.com/rust-lang/rust/blob/f0254759ca020673823fa39f07b0558f43ee27a2/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\">https://github.com/rust-lang/rust/blob/f0254759ca020673823fa39f07b0558f43ee27a2/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html</a></p>",
        "id": 232113892,
        "sender_full_name": "rocksand",
        "timestamp": 1616874763
    },
    {
        "content": "<p>I'm not really familiar with that file tbh</p>",
        "id": 232196560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616969053
    },
    {
        "content": "<p>hmm</p>",
        "id": 232196561,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616969055
    },
    {
        "content": "<p><a href=\"https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/f0254759ca020673823fa39f07b0558f43ee27a2/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure%231}.-------.InstrumentCoverage.0.html\">here is the rendered form</a></p>",
        "id": 232196630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616969138
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I addressed the comments you left on my PR. Let me know if I can go ahead and approve it <a href=\"https://github.com/rust-lang/rust/pull/83521\">https://github.com/rust-lang/rust/pull/83521</a></p>",
        "id": 232462935,
        "sender_full_name": "rocksand",
        "timestamp": 1617124519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> awesome</p>",
        "id": 232626841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617209843
    },
    {
        "content": "<p>rustfix migrations: <a href=\"https://github.com/rust-lang/rust/pull/83757\">https://github.com/rust-lang/rust/pull/83757</a></p>",
        "id": 232823856,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617310603
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> very nice</p>",
        "id": 232830246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617313939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> have we tested the rustfmt output?</p>",
        "id": 232830350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617314008
    },
    {
        "content": "<p>I forgot, doing it now</p>",
        "id": 232830495,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617314081
    },
    {
        "content": "<p>It doesn't <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span><br>\nAdding some extra logic, shouldn't be rust</p>\n<p>This is what is looks like after fmt right now</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">test7_drop_non_drop_aggregate_need_migration</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"k\">i32</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">t</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">//~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`</span>\n<span class=\"w\">            </span><span class=\"c1\">//~| HELP: `let _ = &amp;t` causes `t` to be fully captured</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">c</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232831660,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617314706
    },
    {
        "content": "<p>i got to work, I'll update the PR by tomorrow morning</p>",
        "id": 232837699,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617318502
    },
    {
        "content": "<p>Updated PR with the block fix and your suggestion for the new wording as well</p>",
        "id": 232848926,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617327224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> r+'d</p>",
        "id": 232948307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617395637
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 232948394,
        "sender_full_name": "Aman Arora",
        "timestamp": 1617395655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  The auto traits and clone trait migrations PR is now up: <a href=\"https://github.com/rust-lang/rust/pull/84730\">https://github.com/rust-lang/rust/pull/84730</a></p>",
        "id": 236767826,
        "sender_full_name": "rocksand",
        "timestamp": 1619742298
    },
    {
        "content": "<p>First draft for the blog: <a href=\"https://hackmd.io/g0odgclDSaODOvBSZntltg\">https://hackmd.io/g0odgclDSaODOvBSZntltg</a></p>",
        "id": 236770234,
        "sender_full_name": "Aman Arora",
        "timestamp": 1619744336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> very nice!</p>",
        "id": 236831818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619788444
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I have the fix for issue 85435 up for review (<a href=\"https://github.com/rust-lang/rust/pull/85724\">https://github.com/rust-lang/rust/pull/85724</a>). I still need to wait for PR <a href=\"https://github.com/rust-lang/rust/pull/85564\">https://github.com/rust-lang/rust/pull/85564</a> to merge into master before I can remove the readded feature gate though</p>",
        "id": 240338374,
        "sender_full_name": "rocksand",
        "timestamp": 1622041254
    },
    {
        "content": "<p>I'm a bit confused <span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span></p>",
        "id": 240346364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622044164
    },
    {
        "content": "<p>The PR looks ok, but it sounds like there is another underlying bug?</p>",
        "id": 240346416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622044195
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/86445/files\">https://github.com/rust-lang/rust/pull/86445/files</a><br>\n<span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  box fix pr</p>",
        "id": 243206691,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624049136
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I left a review, I have a few questions</p>",
        "id": 243394351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624287276
    },
    {
        "content": "<p>updated the PR</p>",
        "id": 243476563,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624343485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  The auto traits migration fix is up for review <a href=\"https://github.com/rust-lang/rust/pull/86869\">https://github.com/rust-lang/rust/pull/86869</a></p>",
        "id": 244942765,
        "sender_full_name": "rocksand",
        "timestamp": 1625495401
    },
    {
        "content": "<p>FYI I have two open PRs that still needing review:</p>\n<p>1)  I realized that the profile closures flag doesn't work as expected if the feature is enabled. I have created a fixup PR here: <a href=\"https://github.com/rust-lang/rust/pull/86818\">https://github.com/rust-lang/rust/pull/86818</a>.</p>\n<p>Do you think we should talk about this flag and optimization someone can make based on the profile in the edition guide? I have what i was thinking written down here: <a href=\"https://github.com/rust-lang/edition-guide/pull/246#discussion_r663139817\">https://github.com/rust-lang/edition-guide/pull/246#discussion_r663139817</a></p>\n<p>2) PR for the optimization: <a href=\"https://github.com/rust-lang/rust/pull/86701\">https://github.com/rust-lang/rust/pull/86701</a></p>",
        "id": 244969406,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625515084
    },
    {
        "content": "<p>Also for the lang team update, what all should we let them know outside of optimizaiton and -Zprofile-closures</p>",
        "id": 244969426,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625515099
    },
    {
        "content": "<p>I'll take a look at <a href=\"https://github.com/rust-lang/rust/issues/86701\">#86701</a></p>",
        "id": 244974212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625519052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> left a few nits with some comments.</p>",
        "id": 244974725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625519571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  The migration lint improvement PR is up for review: <a href=\"https://github.com/rust-lang/rust/pull/86965\">https://github.com/rust-lang/rust/pull/86965</a></p>",
        "id": 245376082,
        "sender_full_name": "rocksand",
        "timestamp": 1625780490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> r+, looks great!</p>",
        "id": 245422619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625823986
    },
    {
        "content": "<p>I probably won't be available this week</p>",
        "id": 245619016,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626026257
    },
    {
        "content": "<p>OK, let's cancel the meeting</p>",
        "id": 245735506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626117908
    },
    {
        "content": "<p>We're in good shape from what I can tell</p>",
        "id": 245735525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626117916
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"282558\">@Dhruv Jauhar</span> started looking into insignificant destructors. There are some places within the compiler that'd require migration. Is there way to automatically apply the lint suggest to the entire compiler automatically, just to get an idea of what's affected?</p>",
        "id": 245736073,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626118166
    },
    {
        "content": "<p>Right now the compile would stop at the crate that requires migration</p>",
        "id": 245736136,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626118196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I don't know if there's a way to migrate all the crates; <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> might know</p>",
        "id": 245744821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626122256
    },
    {
        "content": "<p>I'm not sure what is being asked. If you want to try to run <code>cargo fix</code> on rustc itself to test-drive some fixes, it's a little awkward right now (<code>./x.py test</code> is kinda broken). You can probably run something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>RUSTFLAGS_NOT_BOOTSTRAP=&quot;-Wrust_2021_incompatible_closure_captures&quot; CARGOFLAGS_NOT_BOOTSTRAP=&quot;--lib&quot; ./x.py fix  --stage=1\n</code></pre></div>",
        "id": 245754312,
        "sender_full_name": "Eric Huss",
        "timestamp": 1626126241
    },
    {
        "content": "<p>Thank you! </p>\n<p>cc <span class=\"user-mention\" data-user-id=\"282466\">@Dhruv Jauhar</span></p>",
        "id": 245754397,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626126301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Someone found an ICE in pattern matching when the feature is enabled. I have opened up a PR to fix the issue <a href=\"https://github.com/rust-lang/rust/pull/87161\">https://github.com/rust-lang/rust/pull/87161</a></p>",
        "id": 246116200,
        "sender_full_name": "rocksand",
        "timestamp": 1626365065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span>  is there a time before noon that works as a meeting time?</p>",
        "id": 246147304,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626379085
    },
    {
        "content": "<p>Might be hard for me to meet at the current meeting time</p>",
        "id": 246147345,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626379103
    },
    {
        "content": "<p>Any day works for me</p>",
        "id": 246148662,
        "sender_full_name": "rocksand",
        "timestamp": 1626379727
    },
    {
        "content": "<p>hmm</p>",
        "id": 246160194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> do you mean East Coast time?</p>",
        "id": 246160209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385234
    },
    {
        "content": "<p>Yes noon east coast time</p>",
        "id": 246160246,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385256
    },
    {
        "content": "<p>let me check my calendar</p>",
        "id": 246160280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385282
    },
    {
        "content": "<p>I could do 11</p>",
        "id": 246160297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385306
    },
    {
        "content": "<p>That works for me</p>",
        "id": 246160299,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385312
    },
    {
        "content": "<p>Thank you</p>",
        "id": 246160363,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385337
    },
    {
        "content": "<p>Ok. I'm going to delete the existing calendar event and create a new one, I think, that has the Zoom URL attached</p>",
        "id": 246160367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385341
    },
    {
        "content": "<p>I'll put it on the compiler team calendar, too</p>",
        "id": 246160371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385347
    },
    {
        "content": "<p>Sounds good</p>",
        "id": 246160379,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385355
    },
    {
        "content": "<p>I've also deleted Aug 4/11 as I will be on PTO</p>",
        "id": 246160651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385541
    },
    {
        "content": "<p>Okay</p>",
        "id": 246160751,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385580
    },
    {
        "content": "<p>btw, we have a weekly time, but just in case, I've created a <a href=\"https://calendly.com/nikomatsakis/office-hours\">office hours</a> system</p>",
        "id": 246160817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626385640
    },
    {
        "content": "<p>Awesome</p>",
        "id": 246160949,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626385721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Have you had the chance to take a look at my rust reference PR yet? <a href=\"https://github.com/rust-lang/reference/pull/1059\">https://github.com/rust-lang/reference/pull/1059</a> Also, <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> and I were wondering if the plan was still to release a blog post about RFC2229</p>",
        "id": 246473089,
        "sender_full_name": "rocksand",
        "timestamp": 1626709800
    },
    {
        "content": "<p>No, let me take a look</p>",
        "id": 246473155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626709816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307184\">@rocksand</span> this looks good; normally we don't land reference PRs until the thing is stabilized. One comment is that it'd be nice to include the \"formal algorithm\" that we came up with in our last meeting.</p>",
        "id": 246473448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626709968
    },
    {
        "content": "<p>Left a review.</p>",
        "id": 246473505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626709998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/246473448\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307184\">rocksand</span> this looks good; normally we don't land reference PRs until the thing is stabilized. One comment is that it'd be nice to include the \"formal algorithm\" that we came up with in our last meeting.</p>\n</blockquote>\n<p>Good point, I'll add that to the PR</p>",
        "id": 246474190,
        "sender_full_name": "rocksand",
        "timestamp": 1626710327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/reviews.20or.20other.20things/near/246473505\">said</a>:</p>\n<blockquote>\n<p>Left a review.</p>\n</blockquote>\n<p>I have updated the PR. <a href=\"https://github.com/rust-lang/reference/pull/1059\">https://github.com/rust-lang/reference/pull/1059</a></p>\n<p>There is a testcase failing because it needs edition 2021 and im not sure how to get around it needing unstable options</p>",
        "id": 246560794,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626771935
    },
    {
        "content": "<p>Not sure if it helps review but I added two commits</p>\n<ul>\n<li>First verbatim copy/paste of the algorithm</li>\n<li>Seconds edits that I made on top</li>\n</ul>",
        "id": 246560946,
        "sender_full_name": "Aman Arora",
        "timestamp": 1626772049
    },
    {
        "content": "<p>Pr for the <a href=\"https://github.com/rust-lang/rust/issues/87378\">#87378</a> <a href=\"https://github.com/rust-lang/rust/pull/87469\">https://github.com/rust-lang/rust/pull/87469</a></p>",
        "id": 247166243,
        "sender_full_name": "Aman Arora",
        "timestamp": 1627279553
    },
    {
        "content": "<p>r+'d</p>",
        "id": 247196931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627303731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I fixed the tidy error on my PR: <a href=\"https://github.com/rust-lang/rust/pull/87554\">https://github.com/rust-lang/rust/pull/87554</a></p>",
        "id": 247607766,
        "sender_full_name": "rocksand",
        "timestamp": 1627576443
    },
    {
        "content": "<p>I'll trigger bors</p>",
        "id": 247608151,
        "sender_full_name": "lqd",
        "timestamp": 1627576601
    }
]