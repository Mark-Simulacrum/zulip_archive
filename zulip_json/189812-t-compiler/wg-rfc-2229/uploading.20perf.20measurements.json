[
    {
        "content": "<p>It would be fairly easy to make a google form where they can upload perf measurements</p>",
        "id": 242632881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623691913
    },
    {
        "content": "<p>Is there a unique id across the compiler for each compiler?</p>\n<p>I was trying to get dumping closure data into csv working, but right now I'm printing each time a closure is monomorphised.</p>\n<p>There are a couple options, but I'm not sure how to work them in the compiler:</p>\n<ul>\n<li>Either we generate a static file name eg: closure_size_profile.csv. This would require erasing any existng  file at the start of each compiler</li>\n<li>Have a somewhat random name be generated at the start of the compiler eg: closure_size_profile_random_uuid.csv and then we started in Session or some global state</li>\n<li>Collect instances being monomorphised and then profile them all at once (there is some collection happening, but I\"m not quite sure if everything we want is there and what's the best spot to dump data out)</li>\n</ul>",
        "id": 243488666,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624352423
    },
    {
        "content": "<p>I don't think there's a unique identifier of that kind, but there might be. <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> might know.</p>",
        "id": 243526828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624372934
    },
    {
        "content": "<p>Can you give me a bit more context?</p>",
        "id": 243616792,
        "sender_full_name": "mw",
        "timestamp": 1624434294
    },
    {
        "content": "<p>I'm trying to output information about closure size so that we can profile the effect of RFC 2229.</p>\n<p>The data in compute in rustc_mir/monomorph/collector so that we can account for generics.</p>\n<p>I'm trying to avoid having to collect this information and dump it at once into a file. </p>\n<p>I was hoping that if there was some id unique a compile I can just create a file <code>closure_profile_{id}.csv</code> that I just dump information into</p>",
        "id": 243619165,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624435819
    },
    {
        "content": "<p>It depends on what the requirements for that ID are. For self-profiling (for example) we just generate a file name that contains the crate name and the compiler's process id: <a href=\"https://github.com/rust-lang/rust/blob/8cb207ae69700de3e782eec5cc9013c0987b2519/compiler/rustc_data_structures/src/profiling.rs#L403-L405\">https://github.com/rust-lang/rust/blob/8cb207ae69700de3e782eec5cc9013c0987b2519/compiler/rustc_data_structures/src/profiling.rs#L403-L405</a></p>",
        "id": 243620839,
        "sender_full_name": "mw",
        "timestamp": 1624436861
    },
    {
        "content": "<p>that should make it pretty unlikely that two compilation processes interfere</p>",
        "id": 243620922,
        "sender_full_name": "mw",
        "timestamp": 1624436893
    },
    {
        "content": "<p>you could also add a time-stamp</p>",
        "id": 243620933,
        "sender_full_name": "mw",
        "timestamp": 1624436902
    },
    {
        "content": "<p>If you have the <code>tcx</code> available you can use <code>tcx.crate_name(LOCAL_CRATE)</code> to easily get the crate name.</p>",
        "id": 243621173,
        "sender_full_name": "mw",
        "timestamp": 1624437066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/uploading.20perf.20measurements/near/243620839\">said</a>:</p>\n<blockquote>\n<p>It depends on what the requirements for that ID are. For self-profiling (for example) we just generate a file name that contains the crate name and the compiler's process id: <a href=\"https://github.com/rust-lang/rust/blob/8cb207ae69700de3e782eec5cc9013c0987b2519/compiler/rustc_data_structures/src/profiling.rs#L403-L405\">https://github.com/rust-lang/rust/blob/8cb207ae69700de3e782eec5cc9013c0987b2519/compiler/rustc_data_structures/src/profiling.rs#L403-L405</a></p>\n</blockquote>\n<p>Okay this is kind of what i was thinking of, thank you</p>",
        "id": 243621178,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624437076
    },
    {
        "content": "<p>you're welcome <code>:)</code></p>",
        "id": 243621216,
        "sender_full_name": "mw",
        "timestamp": 1624437103
    },
    {
        "content": "<p>Does it make sense to do some computation directly in the compiler and output that in the CSV eg: change and %change. <br>\nThis would mean when we get the CSV from the user we would've to just put that in a template and it will directly generate the metrics</p>",
        "id": 244207871,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624916241
    },
    {
        "content": "<p>It's possible that I don't know google sheets enough and there is a way to just compute change and %change per row of the data, but making the compiler do it seems simpler</p>",
        "id": 244208003,
        "sender_full_name": "Aman Arora",
        "timestamp": 1624916310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/uploading.20perf.20measurements/near/244208003\">said</a>:</p>\n<blockquote>\n<p>It's possible that I don't know google sheets enough and there is a way to just compute change and %change per row of the data, but making the compiler do it seems simpler</p>\n</blockquote>\n<p>that is quite easy to do</p>",
        "id": 244357383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625006300
    },
    {
        "content": "<p>but it'll be easier in the compiler in the end</p>",
        "id": 244357391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625006308
    },
    {
        "content": "<p>than to do it on each person's spreadsheet</p>",
        "id": 244357402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625006319
    },
    {
        "content": "<p><a href=\"https://docs.google.com/spreadsheets/d/1WUKERwkpJkYhQ-rt0aTQqg-7kcupC7pwKsgxk8v54qc/edit#gid=1571025214\">https://docs.google.com/spreadsheets/d/1WUKERwkpJkYhQ-rt0aTQqg-7kcupC7pwKsgxk8v54qc/edit#gid=1571025214</a></p>",
        "id": 244358141,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625006871
    },
    {
        "content": "<p>So this is what i ended up doing</p>",
        "id": 244358159,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625006882
    },
    {
        "content": "<p>As long as there are 22k closures, we can import the user's uploaded csv in thre first sheet</p>",
        "id": 244358309,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625006981
    },
    {
        "content": "<p>tried this on cargo: <a href=\"https://docs.google.com/spreadsheets/d/1ewerI7G0TcDAveyOMaW6pN0kZQPhY84JL0nuUnc2vhs/edit#gid=700101355\">https://docs.google.com/spreadsheets/d/1ewerI7G0TcDAveyOMaW6pN0kZQPhY84JL0nuUnc2vhs/edit#gid=700101355</a></p>",
        "id": 244358377,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625007010
    },
    {
        "content": "<p>So I created this google form: <a href=\"https://forms.gle/4NXVZDpPwQf8brSEA\">https://forms.gle/4NXVZDpPwQf8brSEA</a>. Unfortunately if you use file upload, Google will record the name and email of the person submitting the form</p>",
        "id": 244360738,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625008558
    },
    {
        "content": "<p>I think that's ok</p>",
        "id": 244361807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625009354
    },
    {
        "content": "<p>we just have to be up front with it</p>",
        "id": 244361817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625009362
    },
    {
        "content": "<p>Google form let's the user know of that</p>",
        "id": 244361829,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009383
    },
    {
        "content": "<p>I think MS forms only collects names and not emails, so might be better, I'm trying that out</p>",
        "id": 244361843,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span>  I think it may also be good to state explicitly on the form who would have access to the submitted data</p>",
        "id": 244362071,
        "sender_full_name": "rocksand",
        "timestamp": 1625009584
    },
    {
        "content": "<p>Hmm I'm not sure if we will be restricting it to just 2229 wg, I am assuming it t-perf and t-compiler will also be interested in this data.</p>",
        "id": 244362156,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009654
    },
    {
        "content": "<p>The profiling data collected by the compiler contains the names of files in your project, and might contain identifiable information. Also note that this data will be accessed by members of the Rust community. Please acknowledge that you're aware of this!</p>",
        "id": 244362161,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009656
    },
    {
        "content": "<p>Idk if saying \"Rust community\" is too vague or just good enough to say many people might have access to this</p>",
        "id": 244362183,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009694
    },
    {
        "content": "<p>I would say \"be aware that this data may be shared with rust members and contributors\"</p>",
        "id": 244362294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625009825
    },
    {
        "content": "<p>Okay thank you</p>",
        "id": 244362302,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009843
    },
    {
        "content": "<p>that's pretty vague, but I think conveys that we wouldn't publish it for anyone to download</p>",
        "id": 244362304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625009850
    },
    {
        "content": "<p>(also, I'm looking at the stats you included in your PR-- those look great!)</p>",
        "id": 244362312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625009864
    },
    {
        "content": "<p><span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 244362320,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009873
    },
    {
        "content": "<p>The optimization had a much nicer impact than what I was hoping  for</p>",
        "id": 244362382,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625009920
    },
    {
        "content": "<p>Another interesting thing to note is that the compiler profile is over a lot of crates, and what really comes down to is many crates are now at near 0% affected. <code>syn</code> from what I understand was competely back to original closure size</p>",
        "id": 244362529,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625010068
    },
    {
        "content": "<p>that's fantastic</p>",
        "id": 244434098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625064216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I realized that the profile closures flag doesn't work as expected if the feature is enabled. I have created a fixup PR here: <a href=\"https://github.com/rust-lang/rust/pull/86818\">https://github.com/rust-lang/rust/pull/86818</a>.</p>\n<p>Do you think we should talk about this flag and optimization someone can make based on the profile in the edition guide? I have what i was thinking written down here: <a href=\"https://github.com/rust-lang/edition-guide/pull/246#discussion_r663139817\">https://github.com/rust-lang/edition-guide/pull/246#discussion_r663139817</a></p>",
        "id": 244741681,
        "sender_full_name": "Aman Arora",
        "timestamp": 1625250865
    }
]