[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Last week we had discussed that we want to A make the analysis being logged short and concise and at the same time output it to stderr. </p>\n<p>To do the latter part, do you have any suggestions? I was thinking using the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/diagnostic_builder/struct.DiagnosticBuilder.html\">DiagnosticsBuilder</a>  with notes and then setting the span to that of the closure expression</p>",
        "id": 213970149,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603223055
    },
    {
        "content": "<p>that would work, I was also imagining building a <code>String</code> that goes into the error message</p>",
        "id": 213970934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603223470
    },
    {
        "content": "<p>another option I guess would be to put separate errors on the various lines</p>",
        "id": 213970956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603223484
    },
    {
        "content": "<p>i.e., \"captured x.y because of this span\"</p>",
        "id": 213970963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603223489
    },
    {
        "content": "<p>that seems pretty useful</p>",
        "id": 213970970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603223493
    },
    {
        "content": "<p>I was thinking about that aswell, but I'm wondering if the compiler would stop because of previous errors in that case</p>",
        "id": 213971002,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603223518
    },
    {
        "content": "<p>notes are ok too, the only catch with notes is that I sort of forget whether the test harness enforces that they are all annotated. I think what it does is to say that if you annotate <em>any</em> notes, you must annotate <em>all</em> notes</p>",
        "id": 213971886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603224000
    },
    {
        "content": "<p>in any case the compiler doesn't ordinarily stop because of previous errors,</p>",
        "id": 213971944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603224011
    },
    {
        "content": "<p>especially because for these tests I'd expect you to have just one test function</p>",
        "id": 213971966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603224020
    },
    {
        "content": "<p>In that case I think span will be better, just because it verifies more details about the analysis</p>",
        "id": 213972377,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603224214
    },
    {
        "content": "<p>Do we want to print both passes of the capture analysis (gather info on place and then min capture) or just the final result? </p>\n<p>I was thinking of two in case min capture masks some errors in the first pass</p>",
        "id": 213974016,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603225064
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/Better.20Capture.20Analysis.20loggin/near/213970956\">said</a>:</p>\n<blockquote>\n<p>another option I guess would be to put separate errors on the various lines</p>\n</blockquote>\n<p>Actually, how do we do multiple span_bugs, isn't that essentially exit after the reporting? Or was the suggestion to do multiple span things in Diagnostic builder?</p>",
        "id": 213975335,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603225778
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/project-rfc-2229/issues/19\">https://github.com/rust-lang/project-rfc-2229/issues/19</a></p>",
        "id": 213991061,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603235848
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/Better.20Capture.20Analysis.20loggin/near/213975335\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/189812-t-compiler.2Fwg-rfc-2229/topic/Better.20Capture.20Analysis.20loggin/near/213970956\">said</a>:</p>\n<blockquote>\n<p>another option I guess would be to put separate errors on the various lines</p>\n</blockquote>\n<p>Actually, how do we do multiple span_bugs, isn't that essentially exit after the reporting? Or was the suggestion to do multiple span things in Diagnostic builder?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 214099839,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603307456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> oh I wouldn't do <code>span_bug</code>, just <code>span_err</code></p>",
        "id": 214121928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603318567
    },
    {
        "content": "<p>Sounds good, thank you</p>",
        "id": 214122232,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603318772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if we use span notes does that not mean if stderr changes the user doesn't need to updated the test src file?</p>",
        "id": 216650295,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605291235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I think if you add <code>//~ NOTE</code> annotations, then you must annotate <em>all</em> the notes</p>",
        "id": 216650421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605291279
    },
    {
        "content": "<p>but if you don't, you don't</p>",
        "id": 216650432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605291282
    },
    {
        "content": "<p>so it can be done either way</p>",
        "id": 216650447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605291290
    },
    {
        "content": "<p>Okay sounds good</p>",
        "id": 216650525,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605291338
    },
    {
        "content": "<p>PR updated, should be good now <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 216668594,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605299413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> nice</p>",
        "id": 216673850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605302102
    },
    {
        "content": "<p>So the PR fails to build clippy. Why it breaks is here: <a href=\"https://github.com/rust-lang/rust/pull/78801#issuecomment-727616809\">https://github.com/rust-lang/rust/pull/78801#issuecomment-727616809</a></p>",
        "id": 216811853,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605471328
    },
    {
        "content": "<p>I'll be pushing a change that also check closure_captures as a fallback in case min_captures is empty</p>",
        "id": 216815462,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605476032
    },
    {
        "content": "<p>My reasoning behind this is:</p>\n<ul>\n<li>Let's not increase memory usage throughout the compiler run (maybe incremental cache as well -- idk what all gets written)</li>\n<li>We are keeping pieces of code post-typeck to use closure_captures, so it _kind of_ makes sense to do the same for ExprUseVisitor.</li>\n</ul>",
        "id": 216815578,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605476157
    },
    {
        "content": "<p>The eventual intent is to remove <code>closure_captures</code>, right?</p>",
        "id": 216869619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605533111
    },
    {
        "content": "<p>And at that point, we would writeback <code>min_capture_closures</code> and friends?</p>",
        "id": 216869638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605533121
    },
    {
        "content": "<p>Yeah, project-rfc-2229#18 is there for this specific thing</p>",
        "id": 216901121,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605546540
    },
    {
        "content": "<p>OK, in that case i'm ok with this change</p>",
        "id": 216915666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605553077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> did you impl what you described above?</p>",
        "id": 216915724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605553085
    },
    {
        "content": "<p>yeah it's on PR</p>",
        "id": 216915770,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553104
    },
    {
        "content": "<p>above as in, in the chat not on the issue</p>",
        "id": 216915847,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553129
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78801/commits/bb8c5e5d8b4961a26f88b320f719249a9db8225e\">https://github.com/rust-lang/rust/pull/78801/commits/bb8c5e5d8b4961a26f88b320f719249a9db8225e</a></p>",
        "id": 216915929,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> great, left a nit</p>",
        "id": 216916277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605553324
    },
    {
        "content": "<p>I didn't want to add that to the function docs. It's two comments below</p>",
        "id": 216916346,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553368
    },
    {
        "content": "<p>Or do you want FIXME(issue-num)</p>",
        "id": 216916367,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553378
    },
    {
        "content": "<p>oh, I missed it</p>",
        "id": 216916669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605553530
    },
    {
        "content": "<p>as long as it says FIXME somewhere it's ok, but link to the issue would be great</p>",
        "id": 216916680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605553537
    },
    {
        "content": "<p>yeah that's there</p>",
        "id": 216916780,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605553575
    },
    {
        "content": "<p>heads up: do the other tools build with this PR (I don't think it was the case on the earlier <code>try</code> build) ? if not, it might still not land since we're still in the no-tool-breakage week</p>",
        "id": 216929219,
        "sender_full_name": "lqd",
        "timestamp": 1605559391
    },
    {
        "content": "<p>I didn't try building all of them locally. What I got from t-infra was I can modify some CI scripts to test certain components. I don't know if there is value in doing it now (comparing to a week ago), since by the time I can get to this CI would already run</p>",
        "id": 216929830,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605559740
    },
    {
        "content": "<p>yeah I wouldn't think so -- the PR will be fully tested in a couple hours and we'll know soon enough</p>",
        "id": 216929936,
        "sender_full_name": "lqd",
        "timestamp": 1605559803
    },
    {
        "content": "<p>in any case it will still be able to land in a couple days :)</p>",
        "id": 216930013,
        "sender_full_name": "lqd",
        "timestamp": 1605559839
    },
    {
        "content": "<p>Yeah <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 216930072,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605559883
    },
    {
        "content": "<p>Okay it didn't break anything else ^_^</p>",
        "id": 216971047,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605595769
    }
]