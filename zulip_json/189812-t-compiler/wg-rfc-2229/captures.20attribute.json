[
    {
        "content": "<p>So I think we should do this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[captures(x, y, z)]</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">.</span><span class=\"mi\">2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228674272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614807963
    },
    {
        "content": "<p>this would be a procedural macro that expands to <code>let _ = &amp;(x, y, z);</code></p>",
        "id": 228674342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614807981
    },
    {
        "content": "<p>possible problem:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[captures]</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228674665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614808114
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=cfd1865362f85b345cb740b1980bc680\">this doesn't build</a></p>",
        "id": 228674828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614808201
    }
]