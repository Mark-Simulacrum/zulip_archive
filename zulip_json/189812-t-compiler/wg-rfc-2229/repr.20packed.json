[
    {
        "content": "<p>What should happen in this piece of code</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(packed)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">X</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">s</span>: <span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span>: <span class=\"nc\">X</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"w\">   </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// by ref</span>\n<span class=\"w\">   </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"c1\">// by move</span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Do we here look at the overall analysis and since  x.s will be moved (and hence safe to do), and offer that precision or go with since one of the uses of this captured place would be an unsafe access truncate it?</p>",
        "id": 228151772,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614541258
    },
    {
        "content": "<p>I'm leaning towards not truncating, but just want to checl</p>",
        "id": 228152653,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614542218
    },
    {
        "content": "<p>I'm a bit confused</p>",
        "id": 228283376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623926
    },
    {
        "content": "<p>access to <code>s</code> by ref is unsafe, right?</p>",
        "id": 228283393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623932
    },
    {
        "content": "<p>is there a missing <code>unsafe</code> keyword in this example?</p>",
        "id": 228283406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623940
    },
    {
        "content": "<p>hmm, ok, I'm starting to see</p>",
        "id": 228283485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623975
    },
    {
        "content": "<p>the constructed closure would contain <code>x_s: x.s</code>, which is a move and hence legal</p>",
        "id": 228283512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614623986
    },
    {
        "content": "<p>and <em>then</em> the by-ref access (<code>&amp;x.s</code>) would desugar to <code>&amp;self.x_s</code>, which is also legal</p>",
        "id": 228283567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614624003
    },
    {
        "content": "<p>it feels a bit surprising to me that moving <code>x.s</code> makes this code work</p>",
        "id": 228283633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614624016
    },
    {
        "content": "<p>Yeah, what's interesting is it doesn't throw a warning even today with the feature: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=fae32d74129205011cd027ee7c04ae76\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=fae32d74129205011cd027ee7c04ae76</a></p>",
        "id": 228321627,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614639369
    },
    {
        "content": "<p>and it doesn't throw a warning even if I  disable the feature an go to stable, i looked at the capture analysis and that looks correct</p>",
        "id": 228321745,
        "sender_full_name": "Aman Arora",
        "timestamp": 1614639442
    }
]