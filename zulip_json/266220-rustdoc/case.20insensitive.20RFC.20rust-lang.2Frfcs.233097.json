[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> perhaps we should chat here?</p>",
        "id": 232445467,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118117
    },
    {
        "content": "<p>Firstly I think the RFC is super incomplete as it stands; an RFC is a work of technical communication and in its status quo it communicates very little</p>",
        "id": 232445515,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118143
    },
    {
        "content": "<p>but i think we should discuss this as a team and perhaps draft an RFC together</p>",
        "id": 232445537,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118152
    },
    {
        "content": "<p>i mean it's fine if you want to write your own RFC but right now i'm going to have a very hard time supporting it, and I think core might have an opinion on the breakage too (which it gets to, because this is a product concern), so you'd need to convince core that this is okay</p>",
        "id": 232445623,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118198
    },
    {
        "content": "<p>and i don't think discussing this over the rfc is productive</p>",
        "id": 232445712,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118213
    },
    {
        "content": "<p>but i can explain my stance better here</p>",
        "id": 232445742,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118223
    },
    {
        "content": "<p>Ah right, we were discussing it on discord with kinnison. But things were a bit too rushed I think... We were very happy about the solution we came up with haha</p>",
        "id": 232446394,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118457
    },
    {
        "content": "<p>So I definitely agree to draft a RFC together</p>",
        "id": 232446479,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118498
    },
    {
        "content": "<p>Wanna go ahead and close it?</p>",
        "id": 232446880,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118646
    },
    {
        "content": "<p>I can hackmd a draft</p>",
        "id": 232446903,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118662
    },
    {
        "content": "<p>it will be incomplete</p>",
        "id": 232446920,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118669
    },
    {
        "content": "<p>Well writing a draft or anything, we have to agree on what to propose, no?</p>",
        "id": 232446937,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118678
    },
    {
        "content": "<p>because I don't agree with the solution you suggested</p>",
        "id": 232446989,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118690
    },
    {
        "content": "<p>Closing the RFC in the meatime.</p>",
        "id": 232447053,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118712
    },
    {
        "content": "<p>Right</p>",
        "id": 232447086,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118726
    },
    {
        "content": "<p>I meant that I would draft it up so that we can discuss it better</p>",
        "id": 232447107,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118736
    },
    {
        "content": "<p>But okay, can you dig into why you disagree with my solution?</p>",
        "id": 232447143,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118748
    },
    {
        "content": "<p>Because so far it seems like you have assumed it works like your previous PR and it doesn't</p>",
        "id": 232447174,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118760
    },
    {
        "content": "<p>I can explain it better if you'd like</p>",
        "id": 232447185,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617118767
    },
    {
        "content": "<p>Please do :)</p>",
        "id": 232447213,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617118783
    },
    {
        "content": "<p>If the solution you're talking about is the disambiguator, as I understood it, you provide a simple file which contains link to the items. However, this file cannot cover all the original items' URL on case sensitive FS, it would be only on case insensitive FS</p>",
        "id": 232448568,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617119301
    },
    {
        "content": "<p>No my solution is more nuanced</p>",
        "id": 232448625,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119329
    },
    {
        "content": "<p>My solution enables us to _not have to come up with a perfect solution_</p>",
        "id": 232448659,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119340
    },
    {
        "content": "<p>Okay so the basic principle behind my proposal is that clashes are _bad_ and should be avoided. Rustdoc will handle clashes _sensibly_, but not _perfectly_.</p>\n<p>We provide <code>#[doc(filename = \"FooBarBaz\")]</code> so that people can fix clashes. This makes the filename <code>struct.FooBarBaz.html</code> (we can also compiler error if you use doc(filename) to introduce a _new_ clash)</p>\n<p>We lint about clashes, and mention the downsides. The downsides include that the URL might not be stable if other clashes are introduced or removed.</p>\n<p>Now, crates with clashes are nudged towards using doc(filename). Great! This means we can try to handle them sensibly but not perfectly.</p>\n<p>My \"sensible\" handling is this. Assume we have foo, Foo, and FOO as structs</p>\n<ul>\n<li>Emit the lint I described earlier, of course</li>\n<li>Name them struct.foo-1.html, struct.Foo-2.html, struct.FOO-3.html</li>\n<li>Generate struct.Foo.html (in Titlecase because it is a struct). All it does is have three links in it saying \"Foo can refer to foo, Foo, or FOO\". No JS.</li>\n</ul>\n<p>This is unstable, but we are warning users about the instability. Their docs are broken already, so this does not make them _more_ broken. Some of their links will be broken, but again, they were kinda broken already.</p>\n<p>This has tightly scoped impact, which is really nice.</p>",
        "id": 232448732,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119371
    },
    {
        "content": "<p>Ok, so I understood it correctly. So you suggest to ask users to go around rustdoc limitations because you don't want the URL scheme to be changed. I really can't agree with that :-/</p>",
        "id": 232448949,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617119441
    },
    {
        "content": "<p>Also, it would be incoherent between case sensitive and insensitive FS</p>",
        "id": 232449053,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617119482
    },
    {
        "content": "<p>the first one would only get access to \"struct.Foo.html\" whereas the other would have access to all the original URLs (even though it only bring to the disambiguator file)</p>",
        "id": 232449198,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617119534
    },
    {
        "content": "<p>Wait why would it be incoherent between filesystems? The filenames are all different</p>",
        "id": 232449536,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232449198\">said</a>:</p>\n<blockquote>\n<p>the first one would only get access to \"struct.Foo.html\" whereas the other would have access to all the original URLs (even though it only bring to the disambiguator file)</p>\n</blockquote>\n<p>I think <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> is suggesting that we <em>only</em> generate <code>struct.Foo.html</code>, not <code>struct.foo.html</code></p>",
        "id": 232449559,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617119656
    },
    {
        "content": "<p>which is a slight regression from the perspective of case-sensitive file systems, but seems ok to me if it fixes other problems</p>",
        "id": 232449626,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617119679
    },
    {
        "content": "<p>I don't htink it's a workaround either! I think this is the right fix -- I would rather have _users_ figure out how best to disambiguate than have _us_ randomply pick a scheme</p>",
        "id": 232449634,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119682
    },
    {
        "content": "<p>like the current proposal _also_ is a workaround -- it picks an arbitrary scheme for disambiguation -- this gives the user control over how to disambiguate</p>",
        "id": 232449713,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119711
    },
    {
        "content": "<p>this isn't a rustdoc limitation, this is a limitation of case insensitive FS. Either rustdoc works around it by picking an arbitrary scheme, or we let users have the power to decide how to fix it (and we provide a _sensible_ but not _perfect_ default)</p>",
        "id": 232449828,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119750
    },
    {
        "content": "<p>Also, it's not just \"you don't want the URL scheme to be changed\"; I think a _lot_ of people don't, and I think we should start considering this as a hard boundary because I'm like 50% sure core will want to get involved if there are breakages like this.</p>",
        "id": 232449994,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119804
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232449994\">said</a>:</p>\n<blockquote>\n<p>Also, it's not just \"you don't want the URL scheme to be changed\"; I think a _lot_ of people don't, and I think we should start considering this as a hard boundary because I'm like 50% sure core will want to get involved if there are breakages like this.</p>\n</blockquote>\n<p>I mean, this makes sense and I believe you, but it makes me really frustrated because the current URL scheme was never intended to be stable :/</p>",
        "id": 232450132,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617119851
    },
    {
        "content": "<p>I'm taking it as a hard constraint because I know that Rust cares a lot about stability and docs and I think multiple core team members, multiple devtools team members, and many others would be against this</p>",
        "id": 232450135,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Yeah I'm frustrated too, but I think breaking links across the internet is a huge concern</p>",
        "id": 232450193,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119878
    },
    {
        "content": "<p>Unfortunately when rust stabilized rustdoc did not get much love</p>",
        "id": 232450343,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119923
    },
    {
        "content": "<p>we work with what we have</p>",
        "id": 232450352,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119926
    },
    {
        "content": "<p>don't I know it lol</p>",
        "id": 232450385,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617119937
    },
    {
        "content": "<p>/me goes back to vainly trying to make <code>get_blanket_impls</code> faster</p>",
        "id": 232450425,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617119952
    },
    {
        "content": "<p>I think improving the scheme is on the table with redirects and such</p>",
        "id": 232450429,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617119954
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232449536\">said</a>:</p>\n<blockquote>\n<p>Wait why would it be incoherent between filesystems? The filenames are all different</p>\n</blockquote>\n<p>They are, but <code>foo.html</code>, <code>Foo.html</code> and <code>FOO.html</code> are all the same on case insensitive FS</p>",
        "id": 232451362,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120236
    },
    {
        "content": "<p>Any solution we came up with until now makes the situation on case sensitive FS worse. I don't see how we can justify that</p>",
        "id": 232451512,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> we would not generate those three files, only one</p>",
        "id": 232451660,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120348
    },
    {
        "content": "<p>Please read the proposal again</p>",
        "id": 232451689,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120359
    },
    {
        "content": "<p>And I repeat once again</p>",
        "id": 232451749,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120368
    },
    {
        "content": "<blockquote>\n<p>Name them struct.foo-1.html, struct.Foo-2.html, struct.FOO-3.html</p>\n</blockquote>",
        "id": 232451754,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120369
    },
    {
        "content": "<blockquote>\n<p>Generate struct.Foo.html (in Titlecase because it is a struct). All it does is have three links in it saying \"Foo can refer to foo, Foo, or FOO\". No JS.</p>\n</blockquote>",
        "id": 232451794,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120384
    },
    {
        "content": "<p>those are the four files we generate</p>",
        "id": 232451813,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120391
    },
    {
        "content": "<p>when you access the URL <code>struct.Foo.html</code> or <code>struct.FOO.html</code> on case insensitive FS, it's the same file</p>",
        "id": 232451827,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120397
    },
    {
        "content": "<p>I know</p>",
        "id": 232451837,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120402
    },
    {
        "content": "<p>which isn't the same on case sensitive FS</p>",
        "id": 232451859,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120412
    },
    {
        "content": "<p>I don't see the problem</p>",
        "id": 232451887,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120424
    },
    {
        "content": "<p>so if we create a disambiguator file instead of having the original files, it means some URLs will stop working</p>",
        "id": 232451920,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120437
    },
    {
        "content": "<p>for crates which were broken already -- i don't see the problem</p>",
        "id": 232451968,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120456
    },
    {
        "content": "<p>but only on case sensitive FS (they will still work on case insensitive FS)</p>",
        "id": 232451986,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120464
    },
    {
        "content": "<p>again, i don't see the problem, they were broken already</p>",
        "id": 232452005,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120478
    },
    {
        "content": "<p>they were broken ONLY on case insensitive, not on case sensitive</p>",
        "id": 232452012,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120482
    },
    {
        "content": "<p>okay, fair</p>",
        "id": 232452064,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120491
    },
    {
        "content": "<p>you are just reverting the issue</p>",
        "id": 232452073,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120494
    },
    {
        "content": "<p>that seems like a minor concern? Your proposal breaks URLs for _everyone_. Mine breaks URLs for folks who were somewhat broken arleady</p>",
        "id": 232452105,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120512
    },
    {
        "content": "<p>And we warn about it so that they can choose the best solution that works for them</p>",
        "id": 232452131,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120527
    },
    {
        "content": "<p>personally I object to calling this breaking the URL</p>",
        "id": 232452143,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120532
    },
    {
        "content": "<p>except in the sense of \"rustdoc can't change URLs because apparently the path itself is stable by accident\"</p>",
        "id": 232452209,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120552
    },
    {
        "content": "<p>there's no links to it, there's no conflicts</p>",
        "id": 232452248,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120565
    },
    {
        "content": "<p>It's changing the scheme and fixing the current conflitcs, not breaking URLs</p>",
        "id": 232452254,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120568
    },
    {
        "content": "<p>???</p>",
        "id": 232452280,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120579
    },
    {
        "content": "<p>yeah for local FS stuff there are no links either</p>",
        "id": 232452311,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120591
    },
    {
        "content": "<p>but linux is sensitive so most hosted docs are also sensitive</p>",
        "id": 232452377,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120605
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232452311\">said</a>:</p>\n<blockquote>\n<p>yeah for local FS stuff there are no links either</p>\n</blockquote>\n<p>there are <em>absolutely</em> links to it, rustdoc generates the links</p>",
        "id": 232452382,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120608
    },
    {
        "content": "<p>they're just within the doc instead of external</p>",
        "id": 232452405,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120619
    },
    {
        "content": "<p>euh no, linux is sensitive ;)</p>",
        "id": 232452416,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120622
    },
    {
        "content": "<p>sorry mistype</p>",
        "id": 232452439,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120627
    },
    {
        "content": "<p>let's game this out</p>",
        "id": 232452498,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120656
    },
    {
        "content": "<p>let's say you have foo Foo and FOO</p>",
        "id": 232452537,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120671
    },
    {
        "content": "<p>previously there were three files on linux</p>",
        "id": 232452554,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120676
    },
    {
        "content": "<p>and it was broken on mac/win</p>",
        "id": 232452561,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120681
    },
    {
        "content": "<p>and only one on windows</p>",
        "id": 232452575,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120684
    },
    {
        "content": "<p>(and mac)</p>",
        "id": 232452591,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120690
    },
    {
        "content": "<p>(because they overwrite each others as you may have guessed)</p>",
        "id": 232452847,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120779
    },
    {
        "content": "<p>with my change, you have struct.Foo.html _only_ on linux (as I said, we should generate the disambiguation page in titlecase for structs, but we could also do lowercase),  and plus foo-1 Foo-2 and FOO-3.<br>\nmac/win are unbroken</p>\n<p>the breakage is that old links to <a href=\"http://struct.foo\">struct.foo</a> and struct.FOO are broken</p>",
        "id": 232452851,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120781
    },
    {
        "content": "<p>that seems exceedingly minor compared to breaking all the links, no?</p>",
        "id": 232452894,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120797
    },
    {
        "content": "<p>no, it's exactly the same problem</p>",
        "id": 232452972,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120837
    },
    {
        "content": "<p>you just reverted it and generated one extra file</p>",
        "id": 232453025,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120846
    },
    {
        "content": "<p>I don't understand why you say that</p>",
        "id": 232453054,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120855
    },
    {
        "content": "<p>there are no more file conflicts</p>",
        "id": 232453063,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120858
    },
    {
        "content": "<p>there are <em>fewer</em> links that work than before, but that's it</p>",
        "id": 232453121,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120877
    },
    {
        "content": "<p>But then, on linux when you go to <code>struct.Foo.html</code> or <code>struct.FOO.html</code>, you'll get 404 whereas it'll work on windows/mac</p>",
        "id": 232453140,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120889
    },
    {
        "content": "<p>yes? I don't see the issue here</p>",
        "id": 232453162,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120898
    },
    {
        "content": "<p>which is exactly the issue we're trying to solve</p>",
        "id": 232453164,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617120899
    },
    {
        "content": "<p>ok let's take a second to agree on the issue we're trying to solve</p>",
        "id": 232453218,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120916
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/25879\">https://github.com/rust-lang/rust/issues/25879</a> says</p>\n<blockquote>\n<p>pages are being overwritten on the file systems with case-insensetive names</p>\n</blockquote>",
        "id": 232453308,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120948
    },
    {
        "content": "<p>this is different from \"the set of links that work on Mac is different from the set that works on Linux\"</p>",
        "id": 232453353,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120966
    },
    {
        "content": "<p>thanks joshua</p>",
        "id": 232453404,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120971
    },
    {
        "content": "<p>some pages <em>don't exist at all because rustdoc deleted them</em></p>",
        "id": 232453413,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617120976
    },
    {
        "content": "<p>the set of links that works on Mac will _always_ be different</p>",
        "id": 232453451,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617120988
    },
    {
        "content": "<p>it will be larger. always. we cannot fix this, this is how the os works.</p>",
        "id": 232453510,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121010
    },
    {
        "content": "<p>Well, it seems like I can't convince you. You want to keep the URL scheme (which I understand), but by doing that, you will worsen the user experience for all linux users.</p>",
        "id": 232453622,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121067
    },
    {
        "content": "<p>I don't see how we can be satisfied with that</p>",
        "id": 232453637,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121077
    },
    {
        "content": "<p>I don't see why you think this is a worse user experience</p>",
        "id": 232453771,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121124
    },
    {
        "content": "<p>the URL scheme is the only way for us to fix this issue for everyone, whatever the FS. If you have better suggestion on how to change it better, I'm all for it. But generating a disambiguator is really not great imo</p>",
        "id": 232453806,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121140
    },
    {
        "content": "<blockquote>\n<p>But generating a disambiguator is really not great imo</p>\n</blockquote>\n<p>could you <em>please</em> explain why</p>",
        "id": 232453841,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121159
    },
    {
        "content": "<p>I did multiple times already</p>",
        "id": 232453889,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121175
    },
    {
        "content": "<p>URLs stop working the same on conflicted items in linux</p>",
        "id": 232453922,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232453140\">said</a>:</p>\n<blockquote>\n<p>But then, on linux when you go to <code>struct.Foo.html</code> or <code>struct.FOO.html</code>, you'll get 404 whereas it'll work on windows/mac</p>\n</blockquote>\n<p>^ ok you mean this</p>",
        "id": 232454000,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121207
    },
    {
        "content": "<p>I don't see why this is a worse user experience</p>",
        "id": 232454021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121215
    },
    {
        "content": "<p>because it was working before</p>",
        "id": 232454038,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121224
    },
    {
        "content": "<p>solving a solution for A shouldn't make it less good for B</p>",
        "id": 232454069,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121239
    },
    {
        "content": "<p>this is exactly the same problem your suggestion has though: <code>struct.Foo.html</code> no longer works because only <code>-foo.html</code> exists</p>",
        "id": 232454087,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121250
    },
    {
        "content": "<p>Guillaume, _any solution_ will have that problem. That problem is fundamental to the filesystem</p>",
        "id": 232454109,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121264
    },
    {
        "content": "<p>no</p>",
        "id": 232454152,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121271
    },
    {
        "content": "<p>your solution has that problem</p>",
        "id": 232454154,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121272
    },
    {
        "content": "<p>changing the URL scheme prevents that</p>",
        "id": 232454173,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121281
    },
    {
        "content": "<p>you can visit struct.-Foo.thml and struct.-foo.html</p>",
        "id": 232454183,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121283
    },
    {
        "content": "<p>both work on windows, only one on linux (if you have Foo)</p>",
        "id": 232454202,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121293
    },
    {
        "content": "<p>oh you mean to keep the current URLs? Well, I don't see how it could work</p>",
        "id": 232454221,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121300
    },
    {
        "content": "<p>I don't know what you're trying to say</p>",
        "id": 232454245,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121311
    },
    {
        "content": "<p>I still do not see how the UX for linux users is worse</p>",
        "id": 232454319,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121328
    },
    {
        "content": "<p>99% of docs will be unchanged</p>",
        "id": 232454336,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121336
    },
    {
        "content": "<p>more than 99%</p>",
        "id": 232454355,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121342
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232454183\">said</a>:</p>\n<blockquote>\n<p>you can visit struct.-Foo.thml and struct.-foo.html</p>\n</blockquote>\n<p>yes you can, but you wouldn't expect that for linux users to work</p>",
        "id": 232454399,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121364
    },
    {
        "content": "<p>i don't understand what you're trying to say</p>",
        "id": 232454433,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121377
    },
    {
        "content": "<p>the small percentage of docs that will be changed will break a _small_ number of URLs but still introduce a disambiguation page that we can generate such that most people find it</p>",
        "id": 232454464,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121392
    },
    {
        "content": "<p>I'll try to pick an example.</p>",
        "id": 232454470,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121395
    },
    {
        "content": "<p>It does seem like you're attempting to solve a different problem than the rest of us</p>",
        "id": 232454533,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121423
    },
    {
        "content": "<p>Well, I think I can't convince you. It's mostly a loss of time.</p>",
        "id": 232454698,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121488
    },
    {
        "content": "<p>I just suggest to keep the current situation then</p>",
        "id": 232454734,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121500
    },
    {
        "content": "<p>No, I do feel that the problem should be fixed</p>",
        "id": 232454769,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121511
    },
    {
        "content": "<p>I just think you have not communicated your stance clearly enough for us to understand your concerns</p>",
        "id": 232454806,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121525
    },
    {
        "content": "<p>We don't agree on the solution. What you suggest isn't a solution, it's a hack and it brings downsides</p>",
        "id": 232454857,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121547
    },
    {
        "content": "<p>It'll require big changes on the intra-doc links to work too</p>",
        "id": 232454951,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121572
    },
    {
        "content": "<p>I don't think we agree on the _problem_</p>",
        "id": 232455026,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121599
    },
    {
        "content": "<p>and again, your URLs could if a change somewhere else in your code creates a name conflict</p>",
        "id": 232455053,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121611
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455026\">said</a>:</p>\n<blockquote>\n<p>I don't think we agree on the _problem_</p>\n</blockquote>\n<p>Maybe?</p>",
        "id": 232455113,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232454951\">said</a>:</p>\n<blockquote>\n<p>It'll require big changes on the intra-doc links to work too</p>\n</blockquote>\n<p>I've wanted to unify intra-doc links with the rest of rustdoc for a while anyway <a href=\"https://github.com/rust-lang/rust/pull/82014\">https://github.com/rust-lang/rust/pull/82014</a></p>",
        "id": 232455128,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121638
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232455148,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455053\">said</a>:</p>\n<blockquote>\n<p>and again, your URLs could if a change somewhere else in your code creates a name conflict</p>\n</blockquote>\n<p>Yes, I understand that downside, which is why we lint about it when you introduce a name conflict, and give you a path to avoid it</p>",
        "id": 232455179,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121665
    },
    {
        "content": "<p>but then you ask for users to go around your tool limitation</p>",
        "id": 232455284,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121696
    },
    {
        "content": "<p>The point is that it gives the user power over picking how to solve this, instead of picking a scheme that applies to _everyone_ and is something _everyone_ has to worry about</p>",
        "id": 232455287,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121697
    },
    {
        "content": "<p>this is a terrible user experience</p>",
        "id": 232455303,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121704
    },
    {
        "content": "<p>No, lints should be about good practices, not how to go around tool limitation</p>",
        "id": 232455421,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455284\">said</a>:</p>\n<blockquote>\n<p>but then you ask for users to go around your tool limitation</p>\n</blockquote>\n<p>I think we disagree that this is a limitation of rustdoc and not the FS</p>",
        "id": 232455431,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121758
    },
    {
        "content": "<p>Your solution does that too! Your solution asks users to work around the tool limitation by having to remember a weird link scheme!</p>\n<p>This isn't a tool limitation! This is a limitation of the filesystem, and either rustdoc arbitrarily picks a workaround (your proposal) or we give the users _power_ to pick their own workaround</p>",
        "id": 232455440,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121761
    },
    {
        "content": "<p>Yes</p>",
        "id": 232455468,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121771
    },
    {
        "content": "<p>I think this is a fundamental FS limitation. the -foo solution simply _picks_ a workaround and forces everyone into it</p>",
        "id": 232455506,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455431\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455284\">said</a>:</p>\n<blockquote>\n<p>but then you ask for users to go around your tool limitation</p>\n</blockquote>\n<p>I think we disagree that this is a limitation of rustdoc and not the FS</p>\n</blockquote>\n<p>This is definitely a limitation on rustdoc. We should have taken into account the FS limitation when the URL scheme was created</p>",
        "id": 232455511,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121791
    },
    {
        "content": "<p>And that would have introduced a weird scheme that everyone would need to worry about</p>",
        "id": 232455596,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121812
    },
    {
        "content": "<p>that's still forcing the users to deal with the limitation</p>",
        "id": 232455624,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121821
    },
    {
        "content": "<p>there is nothing we could have done here that would not impact the users negatively in some way</p>",
        "id": 232455670,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121834
    },
    {
        "content": "<p>But the docs could be browsed without problems. People can get accustomed to new URL schemes</p>",
        "id": 232455709,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121851
    },
    {
        "content": "<p>it would work in any case, whatever the item</p>",
        "id": 232455766,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232455709\">said</a>:</p>\n<blockquote>\n<p>But the docs could be browsed without problems. People can get accustomed to new URL schemes</p>\n</blockquote>\n<p>I don't see why this isn't true of the other scheme?</p>",
        "id": 232455803,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617121889
    },
    {
        "content": "<p>your solution doesn't allow that and instead, tells the user to fix <em>their code</em></p>",
        "id": 232455813,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121894
    },
    {
        "content": "<p>Yeah, this is true of both schemes</p>",
        "id": 232455824,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121898
    },
    {
        "content": "<p>But what you suggest is incoherent</p>",
        "id": 232455844,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121911
    },
    {
        "content": "<p>yes, but by applying a rustdoc attribute</p>",
        "id": 232455855,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121914
    },
    {
        "content": "<p>they don't need to rename anything</p>",
        "id": 232455906,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121923
    },
    {
        "content": "<p>I think we're just circling around the same central point. I think there is no need for this discussion to go further :-/</p>",
        "id": 232455948,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121938
    },
    {
        "content": "<p>That's fair, but I do want to fix this problem, so I do think we need to discuss this eventually</p>",
        "id": 232456017,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121970
    },
    {
        "content": "<p>I need a break then</p>",
        "id": 232456081,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121988
    },
    {
        "content": "<p>go for it</p>",
        "id": 232456096,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617121992
    },
    {
        "content": "<p>do you want to resume a bit later?</p>",
        "id": 232456115,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617121998
    },
    {
        "content": "<p>sure whatever</p>",
        "id": 232456128,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617122002
    },
    {
        "content": "<p>but i'll say this again: the \"don't break all the URLs\" is not just _my_ concern, and I'm assuming it as a hard blocker because I'm predicting that this RFC will be impossible to land since breakages are a product concern which means you'd need to convince core. I'm really not trying to be difficult here, or impose my personal opinion, I'm just predicting that any RFC that changes half the URLs out there will be a very very very hard sell.</p>",
        "id": 232456425,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617122110
    },
    {
        "content": "<p>/me goes to delete <a href=\"https://github.com/rust-lang/rfcs/pull/2988\">https://github.com/rust-lang/rfcs/pull/2988</a></p>",
        "id": 232456500,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617122141
    },
    {
        "content": "<p>heh</p>",
        "id": 232456916,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617122302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I think we can manage that with redirects</p>",
        "id": 232456932,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617122310
    },
    {
        "content": "<p>Ok, so after eating a bit, let me try to explain why I think your solution isn't good enough. First, let's start with the good parts:</p>\n<ul>\n<li>Very little change to URLs, only the conflicted files will be impacted (this is its huge advantage).</li>\n<li>Doesn't require extra JS (even though we should add a redirection in addition to the links if JS is available!).</li>\n</ul>\n<p>Now, what I have issues with:</p>\n<ul>\n<li>It breaks something which is currently working on linux (<code>foo</code> and <code>FOO</code> are both perfectly valid URLs) to fix a problem on windows/macOS.</li>\n<li>It creates inconsistency between different FS. For example, both <code>foo</code> and <code>Foo</code> work on windows/macOS but not anymore on linux (which is the opposite of what we currently have and what we try to fix). We can argue that what I propose is breaking all URLs, but at least it is predictable.</li>\n<li>URLs can change because of a change in your code.</li>\n<li>It requires actions from users for them to \"fix\" perfectly valid code. In my opinion, this is the biggest setback in your proposition. The code is valid, the problem here is the URL scheme which didn't take into account FS limitations. I think we can compare it to the <code>doc(cfg)</code> feature: this was really bad and we're now trying to make rustdoc generates cfg information based directly on the code and not on a <code>doc()</code> feature. This should be the same here.</li>\n</ul>\n<p>In comparison, what we suggested in the RFC, what is good:</p>\n<ul>\n<li>No more conflict on URLs ever.</li>\n<li>The URL scheme is predictable and will work the same on all OSes (to be exact, what works on linux will work on windows and macOS).</li>\n<li>No need to add any new lint to tell users that they require to update their code so that their documentation can work on windows and macOS.</li>\n</ul>\n<p>What's bad:</p>\n<ul>\n<li>All previous URLs will break (biggest downside).</li>\n<li>Users might have trouble understanding how the URL scheme works (and on that end: we actually have no idea how many users actually edit the URL directly. So many this argument isn't that strong in the end...).</li>\n<li>... If you see other downsides, please add them.</li>\n</ul>\n<p>In the end, it's to fix an issue on ~0.45% of the items on <a href=\"http://docs.rs\">docs.rs</a>. So it's really small, but I don't want us to ask users to fix valid code because of URL scheme. Like I said, this is not a FS problem but a URL scheme problem. FS limitations were ignored when rustdoc URL scheme was created (almost a decade ago now!).</p>\n<p>An issue you brought up was that it would require to add eventually add redirections. It'd be actually pretty simple to do I think considering that the URL scheme itself follows a very simple rule. So it could be added on <a href=\"http://docs.rs\">docs.rs</a> and <a href=\"http://doc.rust-lang.org\">doc.rust-lang.org</a>.</p>\n<p>Also: with the 2021 edition coming up, can't we use this opportunity to introduce such a change?</p>\n<p>And finally (this is isn't an argument in itself, more like a sidenote: the new URL scheme the RFC suggests would require almost no change in rustdoc whereas what you suggest has a lot of implications and things to take into account).</p>\n<p>That's it for the big explanation of my point of view. I tried to make it as clear as possible (I'm really bad at explaining what I have in mind and I'm sorry about that) and as objective as possible too.</p>",
        "id": 232471547,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617127892
    },
    {
        "content": "<blockquote>\n<p>It breaks something which is currently working on linux (foo and FOO are both perfectly valid URLs) to fix a problem on windows/macOS.</p>\n</blockquote>\n<p>FWIW, I think we could do server-side magic on <a href=\"http://doc.rust-lang.org\">doc.rust-lang.org</a> and <a href=\"http://docs.rs\">docs.rs</a> to redirect to the lower-case version if the original URL isn't found. That doesn't work for local docs, but this only matters if someone was using a perma-link anyway.</p>",
        "id": 232475482,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617129512
    },
    {
        "content": "<p>I just thought about something that your proposition doesn't fix <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> : conflict on modules</p>",
        "id": 232476748,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617130002
    },
    {
        "content": "<p>For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub mod aa {\n    pub fn foo() {}\n}\n\npub mod aA {\n    pub fn foo() {}\n}\n</code></pre></div>",
        "id": 232476867,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617130048
    },
    {
        "content": "<p>(and with sub-levels, it's even \"worse\")</p>",
        "id": 232476913,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617130067
    },
    {
        "content": "<blockquote>\n<p>It breaks something which is currently working on linux (foo and FOO are both perfectly valid URLs) to fix a problem on windows/macOS.</p>\n</blockquote>\n<p>Yours breaks something that is currently working _everywhere_ (code that does not clash on casing) to fix a problem for 0.45% of the crates. I don't see how mine is _worse_ on this angle. I'm trying to scope the breakage to crates that already have problems due to this.</p>\n<blockquote>\n<p>It creates inconsistency between different FS. For example, both foo and Foo work on windows/macOS but not anymore on linux (which is the opposite of what we currently have and what we try to fix). We can argue that what I propose is breaking all URLs, but at least it is predictable.</p>\n</blockquote>\n<p>Okay, but this is _always_ the case: in your solution, <code>-foo</code> and <code>-Foo</code> will work on windows/mac but not linux. This is a fundamental problem of filesystem differences, which is what Joshua and I are trying to argue. It is not worth trying to fix \"some paths  work on some systems but not others\" because that is a fundamental problem . The problem I and Joshua are trying to solve is \"doc generation on an insensitive FS leads to docs not existing\"</p>\n<p>I don't see how my solution is not predictable. If there is ambiguity, there will _always_ be a <code>struct.Foo.html</code> (or <code>fn.foo.html</code>) file, with a list of all the other entries. That's predictable enough IMO.</p>\n<blockquote>\n<p>URLs can change because of a change in your code.</p>\n</blockquote>\n<p>Yes, but we lint about this, so if you change your code you will see the lint and can choose your solution.</p>\n<blockquote>\n<p>Also: with the 2021 edition coming up, can't we use this opportunity to introduce such a change?</p>\n</blockquote>\n<p>No, because editions are for surface-level changes that can be upgraded over. rustdoc's output is a bunch of URLs, changing those URLs is not easy to upgrade over at all.</p>\n<p>Also it is basically too late to add _new_ things to the edition.</p>\n<blockquote>\n<p>It requires actions from users for them to \"fix\" perfectly valid code.</p>\n</blockquote>\n<p>My point is that yours does too -- in your solution _everyone_ has to deal with this bug because of the new, hard-to-remember URL scheme, and furthermore URL completion and links are broken which is _huge_.</p>",
        "id": 232482830,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I think this will break links to modules, but again, on some OSes these weren't being generated correctly in the first place, and your solution breaks all links.</p>\n<p>In my solution the sensible way of handling this is that we generate aa-1 and aa-2 and have aa/index.html just be a disambiguation page</p>",
        "id": 232482987,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132361
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> taking a step back: what problem are you trying to solve</p>",
        "id": 232483055,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132376
    },
    {
        "content": "<p>because here's a statement of the problem I am trying to solve:<br>\nrustdoc currently generates overlapping files on windows and mac. I want us to not do that.</p>\n<p>I don't particularly care that filepath URLs on windows and mac allow you to access structs via different names whereas linux doesn't. this is a fundamental constraint of the filesystem, and it's not a huge deal because nobody is ever linking to filepaths (they're local)</p>",
        "id": 232483294,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132477
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232483397,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132512
    },
    {
        "content": "<p>I am very sympathetic to \"URLs can change when you change your code\" fwiw, I just think a lint should be sufficient to warn people it will happen and allow them to pick something to upgrade</p>",
        "id": 232483551,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132584
    },
    {
        "content": "<p>I do not at all agree that framing that we are \"forcing users to fix their perfectly valid code\". This is a fundamental problem, either _we_ fix it for the users by arbitrarily picking a scheme that will make a lot of users annoyed, or we give the users choice. I feel like the user choice angle is far easier; and we can make it pleasant by _still_ picking a scheme (the numbering scheme) that generates something that kinda-sorta works but has problems, and letting users sort it out however they want</p>",
        "id": 232483799,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132666
    },
    {
        "content": "<p>Also another downside you forgot to list -- url autocompletion is broken; and lots of people browse based on url autocompletion from history</p>",
        "id": 232483900,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132711
    },
    {
        "content": "<p>that's the problem with creating our own normalization scheme</p>",
        "id": 232483954,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132723
    },
    {
        "content": "<p>I still do not understand what the issue is on this axis though:</p>\n<blockquote>\n<p>It creates inconsistency between different FS. For example, both foo and Foo work on windows/macOS but not anymore on linux (which is the opposite of what we currently have and what we try to fix). We can argue that what I propose is breaking all URLs, but at least it is predictable.</p>\n</blockquote>\n<p>as i said this seems to always be an issue.</p>",
        "id": 232484064,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132773
    },
    {
        "content": "<p>and it feels like in your casting of the problem statement you're trying to solve some problem here too</p>",
        "id": 232484144,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132795
    },
    {
        "content": "<p>note that URLs on the web are always insensitive no matter what OS you visit from</p>",
        "id": 232484186,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617132815
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232484186\">said</a>:</p>\n<blockquote>\n<p>note that URLs on the web are always insensitive no matter what OS you visit from</p>\n</blockquote>\n<p>My understanding was that URLs <em>can</em> be case-sensitive if the server chooses that...?</p>",
        "id": 232487820,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617134374
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232448732\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Generate struct.Foo.html (in Titlecase because it is a struct).</li>\n</ul>\n</blockquote>\n<p>Given source with <code>struct foobar; struct FOOBAR;</code> how would we know whether these are the single word \"foobar\" or conjoined words \"foo bar\" in order to decide this file is <code>struct.Foobar.html</code> or <code>struct.FooBar.html</code>? There are many instances of conflicting names in <code>-sys</code> crates that are not following any kind of easily machine discernable convention for word separation.</p>",
        "id": 232487829,
        "sender_full_name": "Nemo157",
        "timestamp": 1617134378
    },
    {
        "content": "<p>and yes, URLs are up to the server, <a href=\"http://docs.rs\">docs.rs</a> is case sensitive, e.g. &lt;<a href=\"https://docs.rs/brotli/2.4.0/brotli/enc/static_dict/fn.SlowFindMatchLengthWithLimit.html\">https://docs.rs/brotli/2.4.0/brotli/enc/static_dict/fn.SlowFindMatchLengthWithLimit.html</a>&gt; vs &lt;<a href=\"https://docs.rs/brotli/2.4.0/brotli/enc/static_dict/fn.slowFindMatchLengthWithLimit.html\">https://docs.rs/brotli/2.4.0/brotli/enc/static_dict/fn.slowFindMatchLengthWithLimit.html</a>&gt;</p>",
        "id": 232487945,
        "sender_full_name": "Nemo157",
        "timestamp": 1617134412
    },
    {
        "content": "<p>This whole issue and discussion makes me think how much time and energy across all different projects could have been saved if OS designers had decided to use a case-sensitive filesystem <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 232487976,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617134419
    },
    {
        "content": "<p>(though maybe web browsers implement <code>file:</code> handling case-insensitively? I can't check on a machine running both a graphical browser and case-sensitive FS right now)</p>",
        "id": 232488473,
        "sender_full_name": "Nemo157",
        "timestamp": 1617134593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210267\">Nemo157</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232487829\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232448732\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Generate struct.Foo.html (in Titlecase because it is a struct).</li>\n</ul>\n</blockquote>\n<p>Given source with <code>struct foobar; struct FOOBAR;</code> how would we know whether these are the single word \"foobar\" or conjoined words \"foo bar\" in order to decide this file is <code>struct.Foobar.html</code> or <code>struct.FooBar.html</code>? There are many instances of conflicting names in <code>-sys</code> crates that are not following any kind of easily machine discernable convention for word separation.</p>\n</blockquote>\n<p>yeah I would rather just make disambiguation pages unconditionally lowercase</p>",
        "id": 232489292,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617134931
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> yeah so I thought we could Titlecase it (not CamelCase); but we can also just lowercase it -- I brought this up elsewhere</p>",
        "id": 232493072,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617136324
    },
    {
        "content": "<p>I think we just need to pick something consistent there</p>",
        "id": 232493093,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617136332
    },
    {
        "content": "<p>so struct.foobar.html being the disambig page works for me</p>",
        "id": 232493123,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617136343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> and yeah URLs are up to the server, but _HTTP_ is case sensitive, as is <a href=\"http://docs.rs\">docs.rs</a></p>",
        "id": 232493201,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617136375
    },
    {
        "content": "<blockquote>\n<p>Okay, but this is _always_ the case: in your solution, -foo and -Foo will work on windows/mac but not linux. This is a fundamental problem of filesystem differences, which is what Joshua and I are trying to argue. It is not worth trying to fix \"some paths work on some systems but not others\" because that is a fundamental problem . The problem I and Joshua are trying to solve is \"doc generation on an insensitive FS leads to docs not existing\"</p>\n</blockquote>\n<p>With what I suggest, there is no <code>-Foo</code>, only <code>-foo</code> for \"Foo' or <code>foo</code> for \"foo\". The point here is that \"valid\" URLs work on linux because they should. The extravagant \"-Foo\" or even \"-FoO\" on windows and macOS isn't our problem. They're not supposed to work in the first place. If the OS allows it, well, fine for them.</p>",
        "id": 232494054,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617136711
    },
    {
        "content": "<p>Didn't understand why you talked about \"links to filepath\"</p>",
        "id": 232494221,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617136788
    },
    {
        "content": "<p>Also, I showed you an example that shows that what I suggested fixes it definitely (modules) and yours doesn't but that doesn't count at all in the end? :-/</p>",
        "id": 232494366,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617136827
    },
    {
        "content": "<blockquote>\n<p>I do not at all agree that framing that we are \"forcing users to fix their perfectly valid code\". This is a fundamental problem, either _we_ fix it for the users by arbitrarily picking a scheme that will make a lot of users annoyed, or we give the users choice. I feel like the user choice angle is far easier; and we can make it pleasant by _still_ picking a scheme (the numbering scheme) that generates something that kinda-sorta works but has problems, and letting users sort it out however they want</p>\n</blockquote>\n<p>There will always be people not happy about any change. The longer we wait (we already waited way too long), the more there will be. And no, requiring changes from the user is definitely not a good way to handle it.</p>",
        "id": 232494540,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617136921
    },
    {
        "content": "<blockquote>\n<p>Also another downside you forgot to list -- url autocompletion is broken; and lots of people browse based on url autocompletion from history</p>\n</blockquote>\n<p>It's part of the URL breaking change, not forgotten. :)</p>",
        "id": 232494699,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617136990
    },
    {
        "content": "<blockquote>\n<p>I do not at all agree that framing that we are \"forcing users to fix their perfectly valid code\". This is a fundamental problem, either _we_ fix it for the users by arbitrarily picking a scheme that will make a lot of users annoyed, or we give the users choice. I feel like the user choice angle is far easier; and we can make it pleasant by _still_ picking a scheme (the numbering scheme) that generates something that kinda-sorta works but has problems, and letting users sort it out however they want</p>\n</blockquote>\n<p>We don't agree on the fundamental problem. I think it's that the rustdoc URL scheme didn't take into account the case insensitivity of some OS. I propose a new URL scheme to fix this issue definitely, you propose a workaround. It's two very different approach. And your workaround doesn't fix the module issue I talked about above. And saying \"it's already broken so we can keep it as is\" is definitely not a good argument.</p>",
        "id": 232495321,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617137249
    },
    {
        "content": "<blockquote>\n<p>I still do not understand what the issue is on this axis though:</p>\n<blockquote>\n<p>It creates inconsistency between different FS. For example, both foo and Foo work on windows/macOS but not anymore on linux (which is the opposite of what we currently have and what we try to fix). We can argue that what I propose is breaking all URLs, but at least it is predictable.</p>\n</blockquote>\n<p>as i said this seems to always be an issue.</p>\n</blockquote>\n<p>Extra explanations! What is working on linux should work on windows and macOS. However, the inverse isn't true: the case insensitive FS allow \"invalid\" URL. But in this case, it's also a valid URL since both <code>Foo</code> and <code>foo</code> exist. So now, an URL that should be valid on linux (and is valid on windows/macOS) isn't anymore.</p>",
        "id": 232495640,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617137377
    },
    {
        "content": "<blockquote>\n<p>Didn't understand why you talked about \"links to filepath\"</p>\n</blockquote>\n<p>By and large, stability of filesystem links only matter if you're hosting the files _locally_ and using file:/// URIs. When it comes to _link_ stability, because basically all webhosting is Linux and because HTTP is case sensitive, we can mostly assume that nobody is _linking to_ Mac/Windows-hosted URLs so breaking those links is not a huge deal. Breaking the linux links is, but both of our proposals do a little breakage.</p>\n<blockquote>\n<p>Also, I showed you an example that shows that what I suggested fixes it definitely (modules) and yours doesn't but that doesn't count at all in the end? :-/</p>\n</blockquote>\n<p>I do address modules. It's a valid complaint, it counts, but I feel like the solution is sufficient since we encourage people to doc(filename) _anyway_.</p>\n<p>My way of addressing modules is, as I already stated: we apply the same thing: generate <code>aa-1/</code> and <code>AA-2/</code> and lint about it, and also generate <code>aa/index.html</code> as a disambiguation page. Yes, some links will break, but your proposal breaks _all_ links.</p>\n<blockquote>\n<p>There will always be people not happy about any change. </p>\n</blockquote>\n<p>I think _most_ people will be unhappy about this, I think half the core team will be unhappy about this, but my point isn't about people being unhappy. My point is that suddenly the _entire ecosystem_ needs to care about this. As opposed to mine where a small subset needs to care.</p>\n<p>Both of our proposals force people to change things. Yours forces everyone to change how they interact with rustdoc. Mine forces a small subset to do a code change (and provides an okayish default if they don't). Just because mine has a code change doesn't mean that makes it somehow worse.</p>\n<blockquote>\n<p>It's part of the URL breaking change, not forgotten. :)</p>\n</blockquote>\n<p>No, it's distinct, I mean that even if you do not have legacy URLs in your history, things like <code>struct.Foo</code> won't autocomplete that well because it will be struct.-foo in the history.</p>\n<blockquote>\n<p>. I propose a new URL scheme to fix this issue definitely, you propose a workaround. It's two very different approach</p>\n</blockquote>\n<p>Okay, look. Yours is as workaround-y as mine, it literally introduces a _new name mangling scheme_. You keep trying to bucket the proposals this way, it's not constructive, please stop.</p>\n<blockquote>\n<p>Extra explanations! What is working on linux should work on windows and macOS. However, the inverse isn't true: the case insensitive FS allow \"invalid\" URL. But in this case, it's also a valid URL since both Foo and foo exist. So now, an URL that should be valid on linux (and is valid on windows/macOS) isn't anymore.</p>\n</blockquote>\n<p>So what you're saying is that previously on Linux <code>struct.foo.html</code> and <code>struct.Foo.html</code> would work, and on Mac both would work but point to the same thing, and with my proposal one of them is broken on linux, yes?</p>\n<p>I mean, sure? But your proposal breaks all the links? I still do not see how this complaint is specific to my proposal.</p>",
        "id": 232500570,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617139477
    },
    {
        "content": "<p>FWIW, someone else I asked about this said the following thing:</p>\n<blockquote>\n<p>urls are the primary interface of rustdoc's output! this is like if symbol mangling were exposed to source code</p>\n</blockquote>\n<p>\"URLs are the primary interface of rustdoc\" is a super insightful idea.</p>",
        "id": 232501088,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617139756
    },
    {
        "content": "<blockquote>\n<p>I think it's that the rustdoc URL scheme didn't take into account the case insensitivity of some OS.</p>\n</blockquote>\n<p>Stepping back further, _why_? What problems are you trying to solve here? I'm attempting to solve \"rustdoc generates overlapping files on some OSes\"</p>",
        "id": 232503107,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617140858
    },
    {
        "content": "<p>It does feel a bit like we're going in circles on this though, does anyone else on the team want to chime in? It's quite possible we're talking past each other and other opinions would be helpful.</p>",
        "id": 232503214,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617140895
    },
    {
        "content": "<p>Just wondering: <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> would it be fine if we added tihs disambiguation only on windows/macOS?</p>",
        "id": 232504286,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141504
    },
    {
        "content": "<p>Problem with that is we need an option to force it on linux for the documentation provided to windows and macOS. Or... We generate for those platforms using the option so that they have fixed URLs and we're fine. All the best: nothing changes on linux, no need to change the URL scheme</p>",
        "id": 232504392,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141576
    },
    {
        "content": "<p>What do you think?</p>",
        "id": 232504400,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141582
    },
    {
        "content": "<p>Hmmmmm. It would not break _web_ URLs so I think that would definitely be less problematic. I would like the URLs to be the same on <a href=\"http://docs.rs\">docs.rs</a> and locally though.</p>\n<p>I am not _strongly_ against such a proposal; but I am somewhat against it.</p>\n<p>Note that for Windows we can actually set the output directories to be case insensitive: <a href=\"https://stackoverflow.com/questions/51591091/apply-setcasesensitiveinfo-recursively-to-all-folders-and-subfolders\">https://stackoverflow.com/questions/51591091/apply-setcasesensitiveinfo-recursively-to-all-folders-and-subfolders</a></p>",
        "id": 232504493,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141609
    },
    {
        "content": "<p>The URLs would be the same so to speak. We'd just have a disambiguator on windows/macOS specifically</p>",
        "id": 232504601,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141653
    },
    {
        "content": "<p>My PR is actually doing most of it already (the original one where everything came from)</p>",
        "id": 232504659,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141682
    },
    {
        "content": "<p>It detect if this is a case insensitive FS, if so it generates a conflict map and goes with generation</p>",
        "id": 232504697,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141705
    },
    {
        "content": "<p>The only issue was that I wasn't satisfied on the result for linux. But in this case, it'd be fine.</p>",
        "id": 232504766,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141728
    },
    {
        "content": "<blockquote>\n<p>The URLs would be the same so to speak. We'd just have a disambiguator on windows/macOS specifically</p>\n</blockquote>\n<p>Oh, so like my proposal, but only on Linux?</p>",
        "id": 232504798,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141748
    },
    {
        "content": "<p>I just need to rework the output so that we use <code>meta refresh</code> instead</p>",
        "id": 232504803,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141750
    },
    {
        "content": "<p>\"conflcit map\"?</p>",
        "id": 232504834,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141771
    },
    {
        "content": "<p>i feel like you're suggesting the proposal i was suggesting :)</p>",
        "id": 232504856,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504798\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The URLs would be the same so to speak. We'd just have a disambiguator on windows/macOS specifically</p>\n</blockquote>\n<p>Oh, so like my proposal, but only on Linux?</p>\n</blockquote>\n<p>No, on linux we keep the current output. The disambiguator would be on windows/macOS to prevent file conflicts :)</p>",
        "id": 232504859,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504834\">said</a>:</p>\n<blockquote>\n<p>\"conflcit map\"?</p>\n</blockquote>\n<p>this was part of one of the PRs, let me find it</p>",
        "id": 232504880,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617141789
    },
    {
        "content": "<p>er, soryr, \"only on Windows\"</p>",
        "id": 232504903,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141794
    },
    {
        "content": "<p>windows/mac</p>",
        "id": 232504916,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141800
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/83612\">https://github.com/rust-lang/rust/pull/83612</a></p>",
        "id": 232504946,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141820
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> Can you type out what your suggestion is?</p>",
        "id": 232504950,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141823
    },
    {
        "content": "<p>Most of this PR is doing what you suggested.</p>",
        "id": 232504972,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141836
    },
    {
        "content": "<p>ah, but only on windows/mac</p>",
        "id": 232505030,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141850
    },
    {
        "content": "<p>this totally works for me</p>",
        "id": 232505038,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141854
    },
    {
        "content": "<p>We did it \\o/</p>",
        "id": 232505054,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141863
    },
    {
        "content": "<p>let's not use JS, just generate a disambiguation page</p>",
        "id": 232505057,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504880\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504834\">said</a>:</p>\n<blockquote>\n<p>\"conflcit map\"?</p>\n</blockquote>\n<p>this was part of one of the PRs, let me find it</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/83612/files#diff-46f011cf734f3de35eddca150990366cc41bd8eaf3945a241b2a2f79c5bb77eaR89\">https://github.com/rust-lang/rust/pull/83612/files#diff-46f011cf734f3de35eddca150990366cc41bd8eaf3945a241b2a2f79c5bb77eaR89</a></p>",
        "id": 232505070,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617141873
    },
    {
        "content": "<p>Yes, that's the part I need to update, the PR is still incomplete</p>",
        "id": 232505079,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> so to be clear you're just suggesting \"manish's proposal, but only applied to windows and mac\" right?</p>",
        "id": 232505088,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141886
    },
    {
        "content": "<p>Yes, or enforced with <code>--generate-case-insensitive</code> in case you generate it on linux for windows/macOS</p>",
        "id": 232505139,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141916
    },
    {
        "content": "<p>so no change on linux, and on win/mac, _only if you have conflicts_, your files get named foo-1 and foo-2 (or whatever, i don't care) and foo.html says \"HEY THERE ARE TWO FILES do you want THIS ONE or THIS ONE\"</p>",
        "id": 232505145,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141921
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504859\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232504798\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The URLs would be the same so to speak. We'd just have a disambiguator on windows/macOS specifically</p>\n</blockquote>\n<p>Oh, so like my proposal, but only on Linux?</p>\n</blockquote>\n<p>No, on linux we keep the current output. The disambiguator would be on windows/macOS to prevent file conflicts :)</p>\n</blockquote>\n<p>hmm, I'm pretty sure <span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> asked we <em>not</em> do this so that you can install any target's docs on any platform</p>",
        "id": 232505146,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617141923
    },
    {
        "content": "<p>neat</p>",
        "id": 232505147,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> can we still have the lint, though?</p>",
        "id": 232505184,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141936
    },
    {
        "content": "<p>I guess that only really matters for the standard library though?</p>",
        "id": 232505186,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617141937
    },
    {
        "content": "<p>yes'</p>",
        "id": 232505192,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141940
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/case.20insensitive.20RFC.20rust-lang.2Frfcs.233097/near/232505184\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> can we still have the lint, though?</p>\n</blockquote>\n<p>Euh... It's midnight, please debate about this tomorrow.</p>",
        "id": 232505273,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617141966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> i think overall it would be nice if people had a way to avoid this happening, and having a lint seems straightforward</p>",
        "id": 232505275,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> can i take that to mean you disagree?</p>",
        "id": 232505288,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141980
    },
    {
        "content": "<p>feels like the lint is just added niceness there</p>",
        "id": 232505322,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617141999
    },
    {
        "content": "<p>I don't like the idea. But just like we did, I'd like us to agree on what we would make this lint about if it would exist.</p>",
        "id": 232505341,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142012
    },
    {
        "content": "<p>With discussion, we can always reach compromise</p>",
        "id": 232505381,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142031
    },
    {
        "content": "<p>yeah</p>",
        "id": 232505385,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142035
    },
    {
        "content": "<p>i mean this doesn't seem much of a compromise as much as \"you picked the solution i was proposing in the first place\"</p>",
        "id": 232505422,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142053
    },
    {
        "content": "<p>:)</p>",
        "id": 232505427,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> That's why I provided the <code>--generate-case-insensitive</code> option</p>",
        "id": 232505433,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142057
    },
    {
        "content": "<p>Well, it was my initial PR which started this whole debate :p</p>",
        "id": 232505494,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142083
    },
    {
        "content": "<p>heh</p>",
        "id": 232505529,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142089
    },
    {
        "content": "<p>anyway, how about I write a hackmd with my proposal, we can collaboratively turn it into an RFC, and see what folks think. With this framing the lint is not a 100% necessary part of it, but i think it would be nice</p>",
        "id": 232505575,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142117
    },
    {
        "content": "<p>But at least we got the same idea. Your proposal for the disambiguator is much better than what I came up with though</p>",
        "id": 232505577,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142117
    },
    {
        "content": "<p>There is a need for RFC here? There is no URL change normally</p>",
        "id": 232505626,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142137
    },
    {
        "content": "<p>Oh, maybe that's something we might not agree on XD</p>",
        "id": 232505644,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142149
    },
    {
        "content": "<p>In my case, I planned as follow:</p>",
        "id": 232505667,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142163
    },
    {
        "content": "<p>Oh yeah we don't have to have an rfc, only if we want the lint</p>",
        "id": 232505686,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142179
    },
    {
        "content": "<p>I think this is good to rfc though</p>",
        "id": 232505692,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142184
    },
    {
        "content": "<p>the disambiguator file, if it has JS enabled, will then make a redirection to get the correct file</p>",
        "id": 232505696,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142186
    },
    {
        "content": "<p>Otherwise, it'll just display the file</p>",
        "id": 232505804,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142219
    },
    {
        "content": "<p>not _sure_ if i like the autoredirect as opposed to people knowing there was a disambiguation. but not a major issue</p>",
        "id": 232505813,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142223
    },
    {
        "content": "<p>i think writing the proposal in rfc format will help us as a team come to a conclusion, anyway</p>",
        "id": 232505855,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142247
    },
    {
        "content": "<p>Ah right, but then we fall back to the original issue on linux which made us fall into this whole thing</p>",
        "id": 232505863,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142252
    },
    {
        "content": "<p>Because if conflict there is, on linux it'll be problematic since Foo and foo are different</p>",
        "id": 232505903,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142276
    },
    {
        "content": "<p>you'll get a 404 if you try to access Foo, so we need to generate the correct links for it directly</p>",
        "id": 232505952,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142311
    },
    {
        "content": "<p>as in?</p>",
        "id": 232506003,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142333
    },
    {
        "content": "<p>I think we should stop going in circles</p>",
        "id": 232506024,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617142346
    },
    {
        "content": "<p>we're not :)</p>",
        "id": 232506041,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142359
    },
    {
        "content": "<p>well, we can already implement that and not care about this issue for now</p>",
        "id": 232506049,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142363
    },
    {
        "content": "<p>i think we've come to a reasonable conclusion and are working out the details</p>",
        "id": 232506065,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142372
    },
    {
        "content": "<p>well, it's where it all started XD</p>",
        "id": 232506067,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142373
    },
    {
        "content": "<p>it's because the disamguator URL was working in all cases for windows/mac but not for linux that we suggested to change all URLs</p>",
        "id": 232506104,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142403
    },
    {
        "content": "<p>It sounds like there are a couple different proposals with different trade offs. I think we should write down what they are</p>",
        "id": 232506123,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617142422
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> there aren't anymore</p>",
        "id": 232506133,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142432
    },
    {
        "content": "<p>I'm not planning to read through hundreds of messages of backscroll</p>",
        "id": 232506140,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617142436
    },
    {
        "content": "<p>yeah i'm writing it down</p>",
        "id": 232506179,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142443
    },
    {
        "content": "<p>Thanks Manish</p>",
        "id": 232506188,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142448
    },
    {
        "content": "<p>there's one proposal with a couple knobs to tweak</p>",
        "id": 232506199,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142454
    },
    {
        "content": "<p>i will write it down and call out the knobs</p>",
        "id": 232506216,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142464
    },
    {
        "content": "<p>Phew, I'm gonna fall into coma until tomorrow morning now I think</p>",
        "id": 232506220,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142469
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> the status quo is basically: the thing i proposed, but _only_ on windows/mac (or if you pass the --generate-whatever flag). knobs that have not yet been decided: should we lint? should the disambiguation page read the URL to autoredirect?</p>",
        "id": 232506312,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142513
    },
    {
        "content": "<p>also knob: the exact disambiguation scheme to use (which i do not care about)</p>",
        "id": 232506355,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142534
    },
    {
        "content": "<p>Yep, that's a good sum up</p>",
        "id": 232506362,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142536
    },
    {
        "content": "<p>In my PR I simply change the current file with the one I have in my JS map</p>",
        "id": 232506406,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142557
    },
    {
        "content": "<p>But it's implementation detail, not really important at the moment</p>",
        "id": 232506493,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617142587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> when you get a chance you should close your rfc so folks don't keep discussing it</p>",
        "id": 232506964,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617142878
    },
    {
        "content": "<p>I think another mismatch is: I do not expect rustdoc to ever link to the disambiguation page, it will only ever be visited from the URL</p>",
        "id": 232508910,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1617144078
    }
]