[
    {
        "content": "<blockquote>\n<p>For me it's another debate. In the end, we still want to generate his HTML which needs to be present before we even add the syntax extension. I think it's two different issues.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> this misses my point - if we add this CSS, people will immediately start using the HTML class</p>",
        "id": 218894463,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607117919
    },
    {
        "content": "<p>if you want to add this you should add a feature gate for the <code>rustdoc-warning</code> CSS class, which sounds really painful to do, you'd need a full HTML parser</p>",
        "id": 218894500,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607117938
    },
    {
        "content": "<p>Is that an issue? The problem they were talking about was about the syntax extension, not the CSS itself. But maybe I completely missed the point. It's friday evening after all XD</p>",
        "id": 218894606,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118003
    },
    {
        "content": "<p>now I'm mostly ok with landing another syntax (e.g. WARNING:) and having <code>class=\"rustdoc-warning\"</code> work as a side effect, but the difference is that <code>rustdoc-warning</code> wouldn't be stable</p>",
        "id": 218894685,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118035
    },
    {
        "content": "<p>right now we've documented that the CSS class will never change and is part of the stability guarentees</p>",
        "id": 218894701,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118050
    },
    {
        "content": "<p>Ok, I'll write what I understood, you'll tell me how wrong/right I am :p</p>",
        "id": 218894747,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118085
    },
    {
        "content": "<p>So, this PR adds the possibility to have codeblocks added and the associated CSS class. We checked with docs-rs to prevent CSS class conflicts. On that part, it seems all good.</p>\n<p>We then asked opinions from rustdoc users, they said that using HTML directly was not nice and suggested to extend doc comments syntax. So once this syntax extension is decided, we'll still need to generate the <code>&lt;div class=\"rustdoc-warning\"&gt;</code> element.</p>\n<p>But where I'm lost, it's that you seem to say that if we don't know about the doc comment syntax extension, we can't add the <code>&lt;div class=\"rustdoc-warning\"&gt;</code>. To be clear: this HTML doesn't require anything on our side. We declared the CSS class and made it work only on <code>&lt;div&gt;</code>. It doesn't exclude the syntax extension at all. Which is why I don't understand what's troubling you</p>",
        "id": 218895137,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118316
    },
    {
        "content": "<p>what troubles me is that this <em>stabilizes</em> the CSS class</p>",
        "id": 218895320,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118424
    },
    {
        "content": "<p>does any other part of rustdoc explicitly say it generates HTML like that?</p>",
        "id": 218895331,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118435
    },
    {
        "content": "<p>Well, we need the CSS class in any case, no?</p>",
        "id": 218895339,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118440
    },
    {
        "content": "<p>what does this mean for the JSON backend?</p>",
        "id": 218895349,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118443
    },
    {
        "content": "<p>what does this mean if someone writes a PDF viewer based on the JSON backend?</p>",
        "id": 218895363,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118454
    },
    {
        "content": "<p>the JSON backend doesn't (shouldn't?) care about that</p>",
        "id": 218895379,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118463
    },
    {
        "content": "<p>the CSS should be an implemnetation detail, not documented</p>",
        "id": 218895386,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc/near/218895379\">said</a>:</p>\n<blockquote>\n<p>the JSON backend doesn't (shouldn't?) care about that</p>\n</blockquote>\n<p>why not? That seems like a great thing to show in the documentation, even in other formats</p>",
        "id": 218895408,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118478
    },
    {
        "content": "<p>yes and if we stick to markdown, the problem doesn't even exist</p>",
        "id": 218895476,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118508
    },
    {
        "content": "<p>I don't follow, sorry</p>",
        "id": 218895513,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118546
    },
    {
        "content": "<p>sorry, not good at explaining</p>",
        "id": 218895647,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118622
    },
    {
        "content": "<p>you can already use html directly with classes specific to rustdoc</p>",
        "id": 218895668,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118643
    },
    {
        "content": "<p>if you use JSON, maybe you want to only list your items or have another renderer, no idea</p>",
        "id": 218895711,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc/near/218895668\">said</a>:</p>\n<blockquote>\n<p>you can already use html directly with classes specific to rustdoc</p>\n</blockquote>\n<p>you can?</p>",
        "id": 218895718,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118678
    },
    {
        "content": "<p>but it's not up to us to care about what others do with the JSON</p>",
        "id": 218895728,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118687
    },
    {
        "content": "<p>that really makes the JSON a second-class citizen :/</p>",
        "id": 218895755,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118706
    },
    {
        "content": "<p>we're not making all the information available to it</p>",
        "id": 218895766,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118714
    },
    {
        "content": "<p>of course you, you can put html in doc comments because markdown allows it, so as long as the class exists in the CSS, what prevents you to not use it?</p>",
        "id": 218895777,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118720
    },
    {
        "content": "<p>oh I see what you mean</p>",
        "id": 218895824,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118727
    },
    {
        "content": "<p>the difference is that isn't stabilized</p>",
        "id": 218895828,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118732
    },
    {
        "content": "<p>it's just an artifact of how rustdoc is implemented</p>",
        "id": 218895845,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118739
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 218895848,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118740
    },
    {
        "content": "<p>we could change the CSS classes without considering it a breaking change</p>",
        "id": 218895870,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118756
    },
    {
        "content": "<p>(or at least, I would be strongly opposed to considering that breaking change)</p>",
        "id": 218895904,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118776
    },
    {
        "content": "<p>basically my fear is that we're locking ourselves in to a specific implementation</p>",
        "id": 218895961,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118814
    },
    {
        "content": "<p>well, we have to in a way</p>",
        "id": 218896073,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118893
    },
    {
        "content": "<p>otherwise, we'd break <a href=\"http://docs.rs\">docs.rs</a> too</p>",
        "id": 218896099,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118903
    },
    {
        "content": "<p>UI changes can only be small and one at a time</p>",
        "id": 218896117,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118913
    },
    {
        "content": "<p>I don't see how this is related to <a href=\"http://docs.rs\">docs.rs</a></p>",
        "id": 218896132,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118920
    },
    {
        "content": "<p><a href=\"http://docs.rs\">docs.rs</a> isn't adding any documentation with <code>class=\"rustdoc-warning\"</code></p>",
        "id": 218896148,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118929
    },
    {
        "content": "<p>and I wouldn't consider it to need the same stability guarentees as library authors</p>",
        "id": 218896178,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607118948
    },
    {
        "content": "<p>yep, but it's officially documented as an \"add\"</p>",
        "id": 218896265,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607118982
    },
    {
        "content": "<p>I don't follow</p>",
        "id": 218896340,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119033
    },
    {
        "content": "<p>friday evening makes me bad with talks, sorry XD</p>",
        "id": 218896355,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119048
    },
    {
        "content": "<p>we can wait until next week if you like <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 218896366,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119059
    },
    {
        "content": "<p>so, in any case, in your JSON you'll have the rustdoc-warning tag</p>",
        "id": 218896379,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119073
    },
    {
        "content": "<p>we can assume they'll have a markdown parser</p>",
        "id": 218896429,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119085
    },
    {
        "content": "<p>since the <code>rustdoc-warning</code> class is documented, they can handle it</p>",
        "id": 218896448,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119102
    },
    {
        "content": "<p>well now they need to have an HTML parser too :/</p>",
        "id": 218896454,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119107
    },
    {
        "content": "<p>the two are not the same, pulldown does not handle HTML</p>",
        "id": 218896462,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119117
    },
    {
        "content": "<p>so my question is: why would you want to change this class? The display is not related to the JSON</p>",
        "id": 218896470,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119121
    },
    {
        "content": "<p>pulldown handles HTML</p>",
        "id": 218896481,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119131
    },
    {
        "content": "<p>pulldown does not <em>parse</em> HTML</p>",
        "id": 218896492,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119139
    },
    {
        "content": "<p>it doesn't display it, which is totally different</p>",
        "id": 218896497,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119142
    },
    {
        "content": "<p>html is part of markdown spec</p>",
        "id": 218896507,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119148
    },
    {
        "content": "<p><a href=\"https://github.com/raphlinus/pulldown-cmark/issues/484#issuecomment-698964416\">https://github.com/raphlinus/pulldown-cmark/issues/484#issuecomment-698964416</a></p>",
        "id": 218896515,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119157
    },
    {
        "content": "<p>Ah no, it's different</p>",
        "id": 218896661,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119234
    },
    {
        "content": "<p>pulldown just say \"I saw something which looks like an HTML tag and marked it as such\"</p>",
        "id": 218896688,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119254
    },
    {
        "content": "<p>but that's it</p>",
        "id": 218896692,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119257
    },
    {
        "content": "<p>it's not parsing the HTML so to speak</p>",
        "id": 218896701,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119263
    },
    {
        "content": "<p>right, that's what I mean</p>",
        "id": 218896709,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119265
    },
    {
        "content": "<p>we can already add html in markdown, JSON output already has to deal with it</p>",
        "id": 218896819,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119329
    },
    {
        "content": "<p>well, I guess this is more of a principle of the thing, but right now the HTML is just an implementation detail</p>",
        "id": 218896856,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119363
    },
    {
        "content": "<p>we don't <em>recommend</em> that you use HTML</p>",
        "id": 218896875,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119376
    },
    {
        "content": "<p>Euuuuh... Well, we definitely recommend it XD</p>",
        "id": 218897092,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119493
    },
    {
        "content": "<p>well, no</p>",
        "id": 218897098,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119500
    },
    {
        "content": "<p>badly phrased it</p>",
        "id": 218897107,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119504
    },
    {
        "content": "<p>we don't say anything about it, except that it's supported and working</p>",
        "id": 218897139,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119526
    },
    {
        "content": "<p>right exactly</p>",
        "id": 218897149,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119532
    },
    {
        "content": "<p>it's an implementation detail</p>",
        "id": 218897154,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119536
    },
    {
        "content": "<p>not really, it's a whole part of markdown</p>",
        "id": 218897234,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119575
    },
    {
        "content": "<p>and in this case, we need to have this HTML element before we can add the syntax extension (because in the end, the extension will generate this HTML)</p>",
        "id": 218897264,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119600
    },
    {
        "content": "<p>but yes, in the end, the markdown will look better with an extension</p>",
        "id": 218897284,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc.3A.20.2379677/near/218897264\">said</a>:</p>\n<blockquote>\n<p>and in this case, we need to have this HTML element before we can add the syntax extension (because in the end, the extension will generate this HTML)</p>\n</blockquote>\n<p>I understand that, you keep saying it, but it's not at all related to <em>stabilizing</em> the HTML element</p>",
        "id": 218897298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119628
    },
    {
        "content": "<p>which is the bit I'm concerned about</p>",
        "id": 218897312,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119639
    },
    {
        "content": "<p>however, please keep in mind that using a rustdoc-specific extension will also have a cost for people using the JSON output</p>",
        "id": 218897313,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119640
    },
    {
        "content": "<p>right, yes, you have to parse the extension</p>",
        "id": 218897392,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119682
    },
    {
        "content": "<p>but it's possible rustdoc could expose it in the JSON at some point</p>",
        "id": 218897442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119691
    },
    {
        "content": "<p>well, if the problem is that it's being put too much forward, I can remove the doc about it so that we'll only talk about it once we have the syntax extension. I'm fine with it too haha</p>",
        "id": 218897443,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119693
    },
    {
        "content": "<p>without having to add an HTML parser of its own</p>",
        "id": 218897452,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119703
    },
    {
        "content": "<p>ok great :)</p>",
        "id": 218897474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607119720
    },
    {
        "content": "<p>then we don't need the fcp anymore I guess?</p>",
        "id": 218897559,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119772
    },
    {
        "content": "<p>Still remain the big unknown: what will the syntax extension look like?</p>",
        "id": 218897820,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119863
    },
    {
        "content": "<p>on that point, I really have no suggestion...</p>",
        "id": 218897836,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607119872
    },
    {
        "content": "<p>I liked the <code>WARNING:</code> suggestion</p>",
        "id": 218898328,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607120187
    },
    {
        "content": "<p>I don't because it doesn't have a clear separation from the end of the text</p>",
        "id": 218898487,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120285
    },
    {
        "content": "<p>we could use a line break as the separation</p>",
        "id": 218898571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607120364
    },
    {
        "content": "<p>that's consistent with how it's normally used I think</p>",
        "id": 218898583,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607120373
    },
    {
        "content": "<p>I don't have a strong opinion on this to be honest. Whatever people mostly prefer, I'll implement it. My only condition is: it has to be fully markdown compliant</p>",
        "id": 218898670,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120424
    },
    {
        "content": "<p>otherwise, the JSON output will be screwed</p>",
        "id": 218898687,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120437
    },
    {
        "content": "<p>'markdown compliant' doesn't mean a lot since all text is valid markdown <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218898698,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607120449
    },
    {
        "content": "<p>what do you mean by that?</p>",
        "id": 218898703,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607120451
    },
    {
        "content": "<p>it means not adding esoteric stuff like <code>§§ this is the warning §§</code></p>",
        "id": 218898734,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120477
    },
    {
        "content": "<p>it has to remains fully readable even without the rustdoc nice renderin</p>",
        "id": 218898763,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120502
    },
    {
        "content": "<blockquote>\n<p>Any sequence of characters is a valid CommonMark document.</p>\n</blockquote>\n<p><a href=\"https://spec.commonmark.org/0.29/#characters-and-lines\">source</a></p>",
        "id": 218898829,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607120529
    },
    {
        "content": "<p>let's focus on \"remains fully readable\" please T_T</p>",
        "id": 218898889,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> On the meantime, I'm removing the second commit and the fcp since it doesn't have meaning anymore. Do you want to create the new issue or should I?</p>",
        "id": 218899062,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607120711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc.3A.20.2379677/near/218896492\">said</a>:</p>\n<blockquote>\n<p>pulldown does not <em>parse</em> HTML</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> you and I are saying different things when we say parse</p>",
        "id": 218945294,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607190728
    },
    {
        "content": "<p>ah</p>",
        "id": 218945297,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190751
    },
    {
        "content": "<p>I mean \"tell the difference between classes and literal strings\", you mean \"put the literal string in the output\"</p>",
        "id": 218945304,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607190763
    },
    {
        "content": "<p>sure</p>",
        "id": 218945320,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190787
    },
    {
        "content": "<p>but it's part of the general point i'm making here: whatever the JSON backend is piped to will need to handle HTML regardless</p>",
        "id": 218945328,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190815
    },
    {
        "content": "<p>Markdown _is_ HTML</p>",
        "id": 218945330,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190819
    },
    {
        "content": "<p>I guess the difference in my mind is that until now we haven't <em>recommended</em> using raw HTML in markdown</p>",
        "id": 218945378,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607190851
    },
    {
        "content": "<p>We have recommended markdown, raw html is allowed in markdown</p>",
        "id": 218945383,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190865
    },
    {
        "content": "<p>we also haven't recommended using links in markdown :)</p>",
        "id": 218945388,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190874
    },
    {
        "content": "<p><a href=\"https://spec.commonmark.org/0.29/#html-blocks\">https://spec.commonmark.org/0.29/#html-blocks</a> &lt;-- part of the spec</p>",
        "id": 218945391,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190882
    },
    {
        "content": "<p>i've seen crates using it</p>",
        "id": 218945394,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190889
    },
    {
        "content": "<p>it gets used a _lot_ for images because markdown image syntax doesn't let you like ... resize them etc</p>",
        "id": 218945404,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190910
    },
    {
        "content": "<p>so my perspective is that the ship has already sailed</p>",
        "id": 218945409,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190928
    },
    {
        "content": "<p>yeah that's fair - you're saying consumers of the JSON backend would need something like pandoc no matter what</p>",
        "id": 218945430,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607190959
    },
    {
        "content": "<p>at least to display things the same as rustdoc</p>",
        "id": 218945474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607190984
    },
    {
        "content": "<p>correct</p>",
        "id": 218945475,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607190989
    },
    {
        "content": "<p>there is _one_ crucial new thing we're introducing: so far unless they're using an external stylesheet, rustdoc markdown can just be rendered faithfully with a standard markdown parser with no frills</p>",
        "id": 218945486,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191028
    },
    {
        "content": "<p>sure, the codeblocks will not look good, but they'll still exist</p>",
        "id": 218945489,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191037
    },
    {
        "content": "<p>but the warning block will require additional css</p>",
        "id": 218945495,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191053
    },
    {
        "content": "<p>i think this is a minor change</p>",
        "id": 218945496,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191056
    },
    {
        "content": "<p>Now, there is also the whole other concern that from a user's POV they may not want to write HTML</p>",
        "id": 218945504,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191078
    },
    {
        "content": "<p>but i'm iffy about that because introducing a one-liner syntax is fine until you want more than one line</p>",
        "id": 218945547,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191098
    },
    {
        "content": "<p>and then it gets super complicated</p>",
        "id": 218945549,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc.3A.20.2379677/near/218945486\">said</a>:</p>\n<blockquote>\n<p>there is _one_ crucial new thing we're introducing: so far unless they're using an external stylesheet, rustdoc markdown can just be rendered faithfully with a standard markdown parser with no frills</p>\n</blockquote>\n<p>I think this is not actually different - the div will still show up without a stylesheet, it just won't look like a warning</p>",
        "id": 218945551,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191111
    },
    {
        "content": "<p>correct</p>",
        "id": 218945555,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191132
    },
    {
        "content": "<p>which doesn't seem much different in practice than intra-doc links not showing up if you use a bog-standard markdown parser</p>",
        "id": 218945566,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191149
    },
    {
        "content": "<p>it's different in that it's possible that the contents of the div may be written in a way that's unclear</p>",
        "id": 218945573,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191154
    },
    {
        "content": "<p>unless it says WARNING</p>",
        "id": 218945579,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191173
    },
    {
        "content": "<p>ah well i was hoping we  would eventually fix that in the json backend</p>",
        "id": 218945580,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191174
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc.3A.20.2379677/near/218945580\">said</a>:</p>\n<blockquote>\n<p>ah well i was hoping we  would eventually fix that in the json backend</p>\n</blockquote>\n<p>it works today I think</p>",
        "id": 218945588,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191192
    },
    {
        "content": "<p>at least, with some assembly</p>",
        "id": 218945591,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191200
    },
    {
        "content": "<p>it gives you which item the link refers to</p>",
        "id": 218945639,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191215
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/266220-rustdoc/topic/warning.20sections.20in.20rustdoc.3A.20.2379677/near/218945504\">said</a>:</p>\n<blockquote>\n<p>Now, there is also the whole other concern that from a user's POV they may not want to write HTML</p>\n</blockquote>\n<p>well right, from my perspective I don't think we're actually getting very much if it's just adding a stylesheet</p>",
        "id": 218945678,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191294
    },
    {
        "content": "<p>users still have to write HTML, you still have to worry about whether it renders properly with rustdoc's stylesheet, <em>and</em> you have this concern about other markdown parsers not rendering it correctly</p>",
        "id": 218945727,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191331
    },
    {
        "content": "<p>you don't have to worry about it rendering properly with rustdoc's stylesheet</p>",
        "id": 218945758,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191399
    },
    {
        "content": "<p>i do think the \"users have to write HTML\" is valid</p>",
        "id": 218945766,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191407
    },
    {
        "content": "<p>but like, if we are introducing _any_ scoped syntax, they will have to learn it</p>",
        "id": 218945770,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191423
    },
    {
        "content": "<p>anything other than <code>WARNING:</code> will be something with subtleties to learn</p>",
        "id": 218945772,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191433
    },
    {
        "content": "<p>so my take is like this:</p>\n<p>- HTML is strictly better than any ad hoc scoped syntax we introduce<br>\n  - I'm not happy with it being unscoped and restricted to a single line</p>\n<p>which makes my position \"HTML or not at all\"</p>",
        "id": 218945825,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607191484
    },
    {
        "content": "<p>I'm on board with that take, I think that's reasonable</p>",
        "id": 218945846,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191520
    },
    {
        "content": "<p>so I think we should ask on <a href=\"https://github.com/rust-lang/rust/pull/79677\">https://github.com/rust-lang/rust/pull/79677</a> if people will actually <em>use</em> it if it's HTML</p>",
        "id": 218945851,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191538
    },
    {
        "content": "<p>since otherwise there's not much point</p>",
        "id": 218945853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191543
    },
    {
        "content": "<p>I can do that now if you like</p>",
        "id": 218945918,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607191656
    },
    {
        "content": "<p>I'll post something</p>",
        "id": 218951048,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1607198793
    },
    {
        "content": "<p>I also think that HTML should enough (it's rare for me and <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> to agree hehe) but users seem to want a syntax extension too. So maybe we shouldn't close the possibility entirely and wait for them to agree on something (in the boundaries of something acceptable of course) and in the meatime, add the initial HTML we agreed on.</p>",
        "id": 218986497,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1607260456
    }
]