[
    {
        "content": "<p>I want to take the \"deprecated\" and \"experimental\" badges that appear on items in the module-level docs and cause them to show up in search results. having never touched rustdoc before, I assume that I'll first have to add a new item-level field to the JSON search index, then populate this field from whatever parsed representation already detects deprecated/experimental status, then update the search results page to use this field. Does that sound accurate? Would anyone like to point me to the right files to get started with?</p>",
        "id": 236983138,
        "sender_full_name": "bstrie",
        "timestamp": 1619888352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> do you happen to know a deprecated function in libstd I could use to test the current behavior?</p>",
        "id": 236983326,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619888469
    },
    {
        "content": "<p><code>try!</code> works</p>",
        "id": 236983349,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619888487
    },
    {
        "content": "<p>I don't know much about search but most of the logic is in <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/static/search.js\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/static/search.js</a> I believe</p>",
        "id": 236983391,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619888521
    },
    {
        "content": "<p>the case that I particularly care about is <a href=\"https://doc.rust-lang.org/std/index.html?search=max\">https://doc.rust-lang.org/std/index.html?search=max</a> ; the <code>std::*::MAX</code> consts are all deprecated, whereas <code>*::MAX</code> are their replacements</p>",
        "id": 236983439,
        "sender_full_name": "bstrie",
        "timestamp": 1619888534
    }
]