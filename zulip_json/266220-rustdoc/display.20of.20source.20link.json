[
    {
        "content": "<p>A theme of <a href=\"https://github.com/rust-lang/rust/issues/59829\">https://github.com/rust-lang/rust/issues/59829</a> and <a href=\"https://github.com/rust-lang/rust/issues/59851\">https://github.com/rust-lang/rust/issues/59851</a> is that <code>[src]</code> is pretty distracting to the eye because of the vertical lines in the brackets.</p>\n<p>In <a href=\"https://github.com/rust-lang/rust/issues/59851\">#59851</a> there's a proposal to move the stability and source link underneath the heading:</p>\n<p><a href=\"/user_uploads/4715/3wtYIBbg2wuPGhg-zqfcBVzY/image.png\">image.png</a></p>\n<p>I also tried another approach that I saw suggested elsewhere, to replace <code>[src]</code> with <code>(source)</code> and make it lighter, along with writing out the \"stable since\" text:</p>\n<p><a href=\"https://rustdoc.crud.net/jsha/source-link/std/string/struct.String.html#method.remove_matches\">https://rustdoc.crud.net/jsha/source-link/std/string/struct.String.html#method.remove_matches</a></p>\n<p><a href=\"/user_uploads/4715/jcPxp1FJlR3rj147ckAVmo7Y/image.png\">image.png</a></p>\n<p><a href=\"/user_uploads/4715/DhxWKlGbpI3vKC1gFKXzGUVM/image.png\">image.png</a> </p>\n<p>Any preferences between those two approaches?</p>",
        "id": 263687167,
        "sender_full_name": "jsha",
        "timestamp": 1638598422
    },
    {
        "content": "<p>ooooh</p>",
        "id": 263696211,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638611466
    },
    {
        "content": "<p>i do like (source)</p>",
        "id": 263696225,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638611474
    },
    {
        "content": "<p>for the first image how does that work for non-heading items</p>",
        "id": 263696229,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638611488
    },
    {
        "content": "<p>i think that's fine at the top of the page but we have a lot of [src] links</p>",
        "id": 263696232,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638611502
    },
    {
        "content": "<p>i think your (source) proposal is pretty elegant and pretty</p>",
        "id": 263696287,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638611542
    },
    {
        "content": "<p>I really like this way of displaying source as well!</p>",
        "id": 263701233,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638618554
    },
    {
        "content": "<p>aww, thanks! what do you think about writing out the \"stable since\" text? I like it since it reduces some of the mystery around what all these numbers are hanging around.</p>",
        "id": 263722135,
        "sender_full_name": "jsha",
        "timestamp": 1638640492
    },
    {
        "content": "<p>Sorry, I forgot to say that my comment included the display of \"stable since\"</p>",
        "id": 263726495,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638645285
    },
    {
        "content": "<p>yeah I like the stable since as well</p>",
        "id": 263739845,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638663641
    },
    {
        "content": "<p>We should figure out how to fit the \"const stable since\" as well</p>",
        "id": 263739865,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638663694
    },
    {
        "content": "<p>If we want to show that</p>",
        "id": 263739869,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638663705
    },
    {
        "content": "<p>Maybe there'd be a way to just show \"stable\" without the numbers if it's been that way for a while?  With the details accessible somehow (hover, click, â„¹, whatever), but not in-your-face?</p>\n<p>Arbitrary strawman threshold: 1 year is <a href=\"https://duckduckgo.com/?q=365.2425+%2F+7+%2F+6\">8.7</a> releases, so if something is 9 or more minor versions ago, the specific version isn't shown on the page directly.</p>",
        "id": 263740389,
        "sender_full_name": "scottmcm",
        "timestamp": 1638664567
    },
    {
        "content": "<p>Is <code>stable: 1.X.Y</code> actually all that distracting? I'm not sure what problem we're trying to solve. <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span>'s original post was that <code>[src]</code> is distracting, which I agree with, but seems unrelated to stability.</p>",
        "id": 263740530,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638664878
    },
    {
        "content": "<p>I don't know.  I might be an outlier, but I click <code>[src]</code> often enough that I don't really find it distracting <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 263740614,
        "sender_full_name": "scottmcm",
        "timestamp": 1638665043
    },
    {
        "content": "<p>The current display doesn't show <code>stable: 1.X.Y</code>, it shows <code>1.X.Y [src]</code> or <code>1.X.Y (const 1.A.B) [src]</code>.</p>\n<p>For writing out \"stable since\" next to the number: I'm partly following the ideas in <a href=\"https://github.com/rust-lang/rust/issues/59851\">https://github.com/rust-lang/rust/issues/59851</a> and partly following my own intuition: without any words next to them, it's not clear what those numbers mean. You can get title text by hovering them, but there's no UI indicator that you should hover them.</p>\n<p>Also, this is a bit of a side thing: in <a href=\"https://github.com/rust-lang/rust/issues/59851\">#59851</a>, lambda mentions that version availability is missing on a lot of items. I made the same mistake myself - it's not that version information is missing, it's that it's only present when it differs from the top level stability version. So e.g. String is stable since 1.0.0, so any methods on String that are also stable since 1.0.0 just don't have the version number. But methods that were stabilized later do have the version number. That's a pretty hard rule to deduce, since there's no way to find out that all the methods with no version have been stable since 1.0.0.</p>",
        "id": 263743929,
        "sender_full_name": "jsha",
        "timestamp": 1638670077
    },
    {
        "content": "<p>I'm also not certainly who uses the stability annotations and for what.  Because they're not entirely reliable -- the current stable docs say that <code>impl&lt;T&gt; Cell&lt;T&gt; { fn new(T) -&gt; Self }</code> has been stable since <code>1.0.0</code>, which isn't exactly true because <a href=\"https://doc.rust-lang.org/1.0.0/std/cell/struct.Cell.html#method.new\">it had a <code>T: Copy</code> bound in <code>1.0.0</code></a>.  So anyone who, say, particularly cares about a specific MSRV arguably needs to check the docs for that version regardless of what the \"stable since\" text says.</p>",
        "id": 263744946,
        "sender_full_name": "scottmcm",
        "timestamp": 1638671799
    },
    {
        "content": "<p>I click <code>src</code> on probably more than 50% of anything i look up in a crate that i didn't write. I would prefer it not be in any way less obvious where to click.</p>",
        "id": 263748400,
        "sender_full_name": "Lokathor",
        "timestamp": 1638677802
    },
    {
        "content": "<p>it won't be :-)</p>",
        "id": 263749326,
        "sender_full_name": "jsha",
        "timestamp": 1638679399
    },
    {
        "content": "<p>Yeah I don't think the stability number is distracting, BUT it's in the same spot so having a consistent UI would be nice and I like jsha's strawman</p>",
        "id": 263757653,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638694174
    },
    {
        "content": "<p>Stability number is an important information (at least for me). I don't find it distracting but this is a personal opinion.</p>",
        "id": 263767232,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638709021
    },
    {
        "content": "<p>(i don't think the question is whether it is important, the question is if we like how it's currently displayed / is jsha's idea better)</p>",
        "id": 263768479,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638710901
    },
    {
        "content": "<p>i do like how it's currently displayed but i also do like having uniformity between src and stability</p>",
        "id": 263768485,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1638710916
    },
    {
        "content": "<p>I forgot to follow up on this:</p>\n<blockquote>\n<p>for the first image how does that work for non-heading items</p>\n</blockquote>\n<p>The first image is from someone else's mockup in <a href=\"https://github.com/rust-lang/rust/issues/59851\">#59851</a>. I think the idea is that stability information would go underneath each sub-heading if necessary. So for example <a href=\"https://doc.rust-lang.org/nightly/std/string/struct.String.html#method.try_reserve_exact\">https://doc.rust-lang.org/nightly/std/string/struct.String.html#method.try_reserve_exact</a> would have stability info right underneath it.</p>\n<p>On the one hand that's in the line of ordinary reading, which might make it feel more noisy. On the other hand, that's where stability info goes _pre_ stabilization (the unstable item-info), so there's some consistency.</p>",
        "id": 263777581,
        "sender_full_name": "jsha",
        "timestamp": 1638723467
    },
    {
        "content": "<p>followup: I made a PR for improving the display of the source link. <a href=\"https://github.com/rust-lang/rust/pull/92602\">https://github.com/rust-lang/rust/pull/92602</a></p>",
        "id": 267015564,
        "sender_full_name": "jsha",
        "timestamp": 1641432103
    }
]