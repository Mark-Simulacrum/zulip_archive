[
    {
        "content": "<p>Currently working on <a href=\"https://github.com/rust-lang/rust/pull/79454\">https://github.com/rust-lang/rust/pull/79454</a>. I need to gate the new parsing to the feature but I don't know how to check if a feature is currently active when the code asking for the check is in <code>librustdoc</code>, not directly in the compiler</p>",
        "id": 218140163,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606525947
    },
    {
        "content": "<p>I have found <a href=\"https://rustc-dev-guide.rust-lang.org/implementing_new_features.html\">https://rustc-dev-guide.rust-lang.org/implementing_new_features.html</a> and <a href=\"https://rustc-dev-guide.rust-lang.org/feature-gates.html#adding-a-feature-gate\">https://rustc-dev-guide.rust-lang.org/feature-gates.html#adding-a-feature-gate</a> in the dev guide but they seem to need either a <code>tcx</code> or <code>sess</code> which I don't know how to get when in <code>librustdoc</code></p>",
        "id": 218140221,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526059
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307289\">@Poliorcetics</span> <code>cx.tcx</code></p>",
        "id": 218140285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526188
    },
    {
        "content": "<p>is this in render? render doesn't have a tcx available unfortunately</p>",
        "id": 218140288,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526201
    },
    {
        "content": "<p>this is in <code>html/markdown.rs</code></p>",
        "id": 218140302,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526241
    },
    {
        "content": "<p>In an iterator impl</p>",
        "id": 218140306,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526267
    },
    {
        "content": "<p>so yeah unfortunately there's no tcx there</p>",
        "id": 218140308,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526275
    },
    {
        "content": "<p>I need to get around to adding it - it should be fairly simple, just lift the call to <code>enter_compiler</code> up to <code>main</code> instead of putting it in <code>core</code></p>",
        "id": 218140351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526307
    },
    {
        "content": "<p>in the meantime, you can store the info you need in DocContext</p>",
        "id": 218140358,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526328
    },
    {
        "content": "<p>err no sorry, DocContext goes away by the time you get to render</p>",
        "id": 218140380,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526382
    },
    {
        "content": "<p>hmmm</p>",
        "id": 218140381,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526383
    },
    {
        "content": "<p>renderInfo maybe? <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/lib.rs#L481\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/lib.rs#L481</a></p>",
        "id": 218140432,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526433
    },
    {
        "content": "<p>or renderOptions? I don't know the difference</p>",
        "id": 218140434,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> do you?</p>",
        "id": 218140436,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526447
    },
    {
        "content": "<p>Oh wait I'm having another problem before that:</p>\n<p>I declared the new feature as explained in the dev guide in <code>active.rs</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>    /// Allows users to provide classes for fenced code block using `class:classname`.\n    (active, user_classes_in_docs, &quot;1.50.0&quot;, Some(79483), None),\n</code></pre></div>\n<p>But now I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>   Compiling rustc_feature v0.0.0 (/Users/alexis/Projects/rust/rust/compiler/rustc_feature)\nerror[E0425]: cannot find value `user_classes_in_docs` in module `sym`\n   --&gt; compiler/rustc_feature/src/active.rs:624:14\n    |\n624 |     (active, user_classes_in_docs, &quot;1.50.0&quot;, Some(79483), None),\n    |              ^^^^^^^^^^^^^^^^^^^^ not found in `sym`\n\nerror[E0531]: cannot find unit struct, unit variant or constant `user_classes_in_docs` in module `sym`\n   --&gt; compiler/rustc_feature/src/active.rs:624:14\n    |\n624 |     (active, user_classes_in_docs, &quot;1.50.0&quot;, Some(79483), None),\n    |              ^^^^^^^^^^^^^^^^^^^^ not found in `sym`\n</code></pre></div>",
        "id": 218140447,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526519
    },
    {
        "content": "<p>I looked at the <code>sym</code> module and I can't understand it at all</p>",
        "id": 218140487,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526538
    },
    {
        "content": "<p>And the <a href=\"https://github.com/rust-lang/rust/pull/75740\">PR</a> I also use as a guide did not touch it so I'm not sure how to do it</p>",
        "id": 218140498,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526587
    },
    {
        "content": "<p>you need to add it here: <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_span/src/symbol.rs#L105\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_span/src/symbol.rs#L105</a></p>",
        "id": 218140504,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526610
    },
    {
        "content": "<p><code>sym</code> is for interned strings</p>",
        "id": 218140505,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526624
    },
    {
        "content": "<p>ohhhh, thanks !</p>",
        "id": 218140513,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526637
    },
    {
        "content": "<p>specifically, strings that are interned at compile time and can be used statically without having to intern it again</p>",
        "id": 218140514,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606526642
    },
    {
        "content": "<p>argh, recompiling half the world now</p>",
        "id": 218140631,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526808
    },
    {
        "content": "<p>Well, at least it seems to compile <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 218140632,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526819
    },
    {
        "content": "<p>Barring compilation times, I'm always surprised by how nice it is to contribute to rust-lang/rust</p>",
        "id": 218140700,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606526942
    },
    {
        "content": "<p><code>error: ui test compiled successfully!</code> <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 218140842,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606527154
    },
    {
        "content": "<p>you need <code>// check-pass</code> at the top</p>",
        "id": 218140848,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606527191
    },
    {
        "content": "<p>This is intended to fail, this is the test for the missing feature gate ^^</p>",
        "id": 218140869,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606527226
    },
    {
        "content": "<p>So now I'm back to the original problem, how to know if the feature is active or not</p>",
        "id": 218140914,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606527254
    },
    {
        "content": "<p>I'm modifying the <code>LangString::parse</code> method</p>",
        "id": 218140927,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606527308
    },
    {
        "content": "<p>I would guess you need to thread the info through RenderInfo somehow</p>",
        "id": 218140947,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606527357
    },
    {
        "content": "<p>but I don't know much about this part of rustdoc</p>",
        "id": 218140953,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606527363
    },
    {
        "content": "<p>I could add a new lint to <code>passes/doc_test_lints.rs</code> ? Elsewhere, even if I detect an incorrect use, I cannot report it properly</p>",
        "id": 218186130,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606606110
    },
    {
        "content": "<p>oh I see</p>",
        "id": 218186512,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606606813
    },
    {
        "content": "<p>yeah that's unfortunate</p>",
        "id": 218186514,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606606819
    },
    {
        "content": "<p>checking it ahead of time seems reasonable</p>",
        "id": 218186533,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606606907
    },
    {
        "content": "<p>although this is enough of a hack I'm wondering if we should just pass in a tcx to render after all</p>",
        "id": 218186534,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606606922
    },
    {
        "content": "<p>it's not that much less work at this point</p>",
        "id": 218186571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606606927
    },
    {
        "content": "<p>It's even more of a hack no ? Errors related to parsing probably should appear from render ?</p>",
        "id": 218186844,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606607409
    },
    {
        "content": "<p>I'm going to try the lint route</p>",
        "id": 218186852,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606607446
    },
    {
        "content": "<p>well there shouldn't <em>be</em> a difference between render and clean</p>",
        "id": 218186863,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606607486
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76382\">https://github.com/rust-lang/rust/issues/76382</a></p>",
        "id": 218186864,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606607491
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error[E0658]: Found in 2 block(s): class:test:name, class:test2, class:test3\n --&gt; src/main.rs:1:1\n  |\n1 | / /// Some code block with `rust,class:test:name` as the language string\n2 | | ///\n3 | | /// ```rust,class:test:name\n4 | | /// int main(void) { return 0; }\n... |\n8 | | /// int main(void) { return 0; }\n9 | | /// ```\n  | |_______^\n  |\n  = note: see issue #79483 &lt;https://github.com/rust-lang/rust/issues/79483&gt; for more information\n  = help: add `#![feature(custom_code_classes_in_docs)]` to the crate attributes to enable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `playground`\n\nCaused by:\n  process didn&#39;t exit successfully: `rustdoc --edition=2018 --crate-type bin --crate-name playground src/main.rs -o /Users/alexis/Projects/rust/playground/target/doc --error-format=json --json=diagnostic-rendered-ansi --document-private-items -L dependency=/Users/alexis/Projects/rust/playground/target/debug/deps --crate-version 0.1.0` (exit code: 1)\n</code></pre></div>",
        "id": 218189697,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606612737
    },
    {
        "content": "<p>It works !</p>",
        "id": 218189699,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606612743
    },
    {
        "content": "<p>Successfully fails to compile*</p>",
        "id": 218189704,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606612755
    },
    {
        "content": "<p>And doesn't warn with the <code>#![feature(custom_code_classes_in_docs)]</code> present</p>",
        "id": 218189758,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606612816
    },
    {
        "content": "<p>nice</p>",
        "id": 218189759,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606612820
    },
    {
        "content": "<p>nice :D</p>",
        "id": 218189767,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606612852
    },
    {
        "content": "<p>Is there a way to warn about individual doc examples ?</p>",
        "id": 218189891,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613052
    },
    {
        "content": "<p>Since here I am warning about something outside of the example but relevant to only it, not the whole doc-comment</p>",
        "id": 218189894,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613078
    },
    {
        "content": "<p>like within a doc-comment? not that I know of, <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> might know</p>",
        "id": 218189895,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613086
    },
    {
        "content": "<p>If it's not possible the current solution is probably the best I can do</p>",
        "id": 218189906,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613118
    },
    {
        "content": "<p>I.E listing the <code>class:...</code> items and saying they should be in this comment</p>",
        "id": 218189910,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613142
    },
    {
        "content": "<p>I'm having trouble with the feature gate test</p>",
        "id": 218190178,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613648
    },
    {
        "content": "<p>what sort of trouble?</p>",
        "id": 218190184,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613672
    },
    {
        "content": "<p>I cannot place it in <code>src/test/ui</code> since it compiles correctly but does not run rustdoc</p>",
        "id": 218190187,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613674
    },
    {
        "content": "<p>put it in <code>src/test/rustdoc-ui</code> instead</p>",
        "id": 218190190,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613686
    },
    {
        "content": "<p>And in <code>src/test/rustdoc-ui</code> it complains about missing the test for it in <code>src/test/ui</code></p>",
        "id": 218190193,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613702
    },
    {
        "content": "<p>oh that seems like a bug in tidy</p>",
        "id": 218190198,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613713
    },
    {
        "content": "<p>what's the complaint it gives?</p>",
        "id": 218190201,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613718
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Expected a gate test for the feature &#39;custom_code_classes_in_docs&#39;.\nHint: create a failing test file named &#39;feature-gate-custom_code_classes_in_docs.rs&#39;\n      in the &#39;ui&#39; test suite, with its failures due to\n      missing usage of `#![feature(custom_code_classes_in_docs)]`.\nHint: If you already have such a test and don&#39;t want to rename it,\n      you can also add a // gate-test-custom_code_classes_in_docs line to the test file.\ntidy error: Found 1 features without a gate test.\nsome tidy checks failed\n\n\ncommand did not execute successfully: &quot;/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/stage0-tools-bin/tidy&quot; &quot;/Users/alexis/Projects/rust/rust&quot; &quot;/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/stage0/bin/cargo&quot; &quot;/Users/alexis/Projects/rust/rust/build&quot;\nexpected success, got: exit code: 1\n\n\nfailed to run: /Users/alexis/Projects/rust/rust/build/bootstrap/debug/bootstrap test --stage 1 --test-args feature-gate-custom_code_c\nBuild completed unsuccessfully in 0:00:08\n</code></pre></div>",
        "id": 218190203,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613729
    },
    {
        "content": "<p>My test file is <code>src/test/rustdoc-ui/feature-gate-custom_code_classes_in_docs.rs</code></p>",
        "id": 218190246,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613765
    },
    {
        "content": "<p>did you try <code>// gate-test-custom_code_classes_in_docs</code> in rustdoc-ui?</p>",
        "id": 218190248,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613767
    },
    {
        "content": "<p>No yet, I didn't think it was necessary</p>",
        "id": 218190255,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613784
    },
    {
        "content": "<p>I'll try that</p>",
        "id": 218190258,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613789
    },
    {
        "content": "<p>if that doesn't work, tidy probably needs to be changed to look in more directories</p>",
        "id": 218190262,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613802
    },
    {
        "content": "<p>Nop, doesn't work</p>",
        "id": 218190318,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606613937
    },
    {
        "content": "<p>ok, then you'll need to fix tidy unfortunately</p>",
        "id": 218190324,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613987
    },
    {
        "content": "<p>it's somewhere in <code>src/tools</code> IIRC</p>",
        "id": 218190326,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606613994
    },
    {
        "content": "<p>look for <code>\"src/test/ui\"</code></p>",
        "id": 218190328,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614001
    },
    {
        "content": "<p>actually maybe ask in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a></p>",
        "id": 218190373,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614060
    },
    {
        "content": "<p>Found it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 218190431,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614205
    },
    {
        "content": "<p>Hum, looks like I worsened my situation, now I don't get an error at all despite the missing <code>.stderr</code> file</p>",
        "id": 218190497,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614307
    },
    {
        "content": "<p><code>tidy</code> is probably not running <code>rustdoc</code> on the file</p>",
        "id": 218190501,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you have suggestions for how to add a feature gate that only appears for rustdoc?</p>",
        "id": 218190505,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614333
    },
    {
        "content": "<p>we can't put the test in <code>src/test/ui</code> because it doesn't fail there</p>",
        "id": 218190509,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614345
    },
    {
        "content": "<p>and <code>src/test/rustdoc-ui</code> appears to be ignored</p>",
        "id": 218190513,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614354
    },
    {
        "content": "<p>And for code in <code>/// comments</code>, not code considered by rustc</p>",
        "id": 218190553,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614368
    },
    {
        "content": "<p>I doubt you want to force people to write e.g. <code>#![cfg_attr(...)]</code> for it -- is there a reason it needs to be only a rustdoc feature?</p>",
        "id": 218190554,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614378
    },
    {
        "content": "<p>because it doesn't exist otherwise</p>",
        "id": 218190559,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614391
    },
    {
        "content": "<p>it's for how language strings are parsed in markdown comments</p>",
        "id": 218190563,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614407
    },
    {
        "content": "<p>and rustc completely ignores comments</p>",
        "id": 218190564,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614417
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>/// Some code block with `rust,class:test:name` as the language string\n///\n/// ```rust,class:test:name\n/// int main(void) {\n///     return 0;\n/// }\n/// ```\nfn main() {}\n</code></pre></div>\n<p>The idea is to gate the <code>class:test:name</code> above to nightly</p>",
        "id": 218190569,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614430
    },
    {
        "content": "<p>I'm not sure what <code>cfg_attr</code> has to do with it</p>",
        "id": 218190570,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614435
    },
    {
        "content": "<p>So far I have a working error message but cannot ensure it works with tidy, i'm supposing it doesn't run rustdoc on feature gates files (logical given this is not important for 433 out of 434 features)</p>",
        "id": 218190619,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614529
    },
    {
        "content": "<p>I just mean that there should be no reason the feature gate can't just be defined for all things</p>",
        "id": 218190626,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614556
    },
    {
        "content": "<p>rustc can do nothing for it, but that should be fine</p>",
        "id": 218190632,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614573
    },
    {
        "content": "<p>rustdoc will do something...</p>",
        "id": 218190634,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614578
    },
    {
        "content": "<p>well sure, but it seems silly to add a test that does nothing</p>",
        "id": 218190635,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614586
    },
    {
        "content": "<p>rustdoc never gets run on <code>src/test/ui</code></p>",
        "id": 218190637,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614591
    },
    {
        "content": "<p>so it won't fail to compile</p>",
        "id": 218190638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614597
    },
    {
        "content": "<p>why do you need to add a test?</p>",
        "id": 218190639,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614601
    },
    {
        "content": "<p>because tidy enforces it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218190683,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614611
    },
    {
        "content": "<p>To ensure it's only usable on nightly too ^^</p>",
        "id": 218190688,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614618
    },
    {
        "content": "<p>just... edit tidy?</p>",
        "id": 218190689,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614619
    },
    {
        "content": "<p>I'm doing this</p>",
        "id": 218190692,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Getting.20active.20features.20in.20rustdoc.3A.3Arender/near/218190689\">said</a>:</p>\n<blockquote>\n<p>just... edit tidy?</p>\n</blockquote>\n<p>well, is it ok to say 'you no longer need a test for all features'?</p>",
        "id": 218190704,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606614671
    },
    {
        "content": "<p>Is running <code>rustdoc</code> on tests in <code>rustdoc-ui</code> only ok ? That way the other 433 features shouldn't pay the cost</p>",
        "id": 218190706,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614675
    },
    {
        "content": "<p>And all features would still be tested</p>",
        "id": 218190708,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614687
    },
    {
        "content": "<p>I personally am not too worried by <em>having</em> a test that tidy can't currently see</p>",
        "id": 218190710,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614694
    },
    {
        "content": "<p>It's a lint tool, sometimes it is wrong</p>",
        "id": 218190712,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614702
    },
    {
        "content": "<p>If you want to adjust tidy to support gate tests in rustdoc-ui that seems fine too.</p>",
        "id": 218190719,
        "sender_full_name": "simulacrum",
        "timestamp": 1606614718
    },
    {
        "content": "<p>Will do that then !</p>",
        "id": 218190756,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614726
    },
    {
        "content": "<p>Oh wait ! Tidy doesn't catch it but running the whole test suite does</p>",
        "id": 218190771,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614799
    },
    {
        "content": "<p>Because rustdoc is run on files in <code>rustdoc-ui</code> later in the process</p>",
        "id": 218190776,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614814
    },
    {
        "content": "<p>So a one-line modif to <code>tidy</code> and running the whole test suite makes it work</p>",
        "id": 218190780,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614835
    },
    {
        "content": "<p>I'll explain that in a comment on the tidy modif else I'll forget it</p>",
        "id": 218190818,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606614857
    },
    {
        "content": "<p>Well, now I have another problem: </p>\n<div class=\"codehilite\"><pre><span></span><code>---- [ui] rustdoc-ui/feature-gate-custom_code_classes_in_docs.rs stdout ----\n\nerror: /Users/alexis/Projects/rust/rust/src/test/rustdoc-ui/feature-gate-custom_code_classes_in_docs.rs:1: unexpected error: &#39;1:1: 3:8: Found in 1 block(s): class:language-c [E0658]&#39;\n\nerror: 1 unexpected errors found, 0 expected errors not found\nstatus: exit code: 1\ncommand: &quot;/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/stage1/bin/rustdoc&quot; &quot;/Users/alexis/Projects/rust/rust/src/test/rustdoc-ui/feature-gate-custom_code_classes_in_docs.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-apple-darwin&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Zui-testing&quot; &quot;-Zdeduplicate-diagnostics=no&quot; &quot;-Zemit-future-incompat-report&quot; &quot;-o&quot; &quot;/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/test/rustdoc-ui/feature-gate-custom_code_classes_in_docs&quot; &quot;-Cdebuginfo=0&quot; &quot;-Zunstable-options&quot; &quot;-Lnative=/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/native/rust-test-helpers&quot; &quot;-L&quot; &quot;/Users/alexis/Projects/rust/rust/build/x86_64-apple-darwin/test/rustdoc-ui/feature-gate-custom_code_classes_in_docs/auxiliary&quot;\nunexpected errors (from JSON output): [\n    Error {\n        line_num: 1,\n        kind: Some(\n            Error,\n        ),\n        msg: &quot;1:1: 3:8: Found in 1 block(s): class:language-c [E0658]&quot;,\n    },\n]\n\nthread &#39;[ui] rustdoc-ui/feature-gate-custom_code_classes_in_docs.rs&#39; panicked at &#39;explicit panic&#39;, src/tools/compiletest/src/runtest.rs:1493:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 218191256,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606615641
    },
    {
        "content": "<p>This is caused by the JSON format output</p>",
        "id": 218191258,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606615657
    },
    {
        "content": "<p>you need to add an error annotation</p>",
        "id": 218191261,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606615667
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/tests/adding.html#ui\">https://rustc-dev-guide.rust-lang.org/tests/adding.html#ui</a></p>",
        "id": 218191263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606615673
    },
    {
        "content": "<p>Well, 3h33AM is a good hour to go to sleep now that is works</p>",
        "id": 218192081,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606617205
    },
    {
        "content": "<p>Pushed my changes, let's hope CI will confirm I didn't miss anything</p>",
        "id": 218192088,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1606617239
    }
]