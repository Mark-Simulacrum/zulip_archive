[
    {
        "content": "<p>(I split this to a different topic)</p>\n<p>Now that we have pages for the derives, like &lt;<a href=\"https://doc.rust-lang.org/std/clone/macro.Clone.html\">https://doc.rust-lang.org/std/clone/macro.Clone.html</a>&gt;, I think this is interesting.  That would be a great place to put more about what deriving it means, and the <code>impl</code> could link to the derive macro for the trait.</p>\n<p>That'd need the proc macro infrastructure to record this stuff somewhere, but that seems plausible.  (So you know whether it came from <code>derive_more</code>'s Clone or <code>std</code>'s or whatever.)</p>\n<p>Someone new to the trait can always click through to see what methods are available.</p>",
        "id": 268737527,
        "sender_full_name": "scottmcm",
        "timestamp": 1642703736
    },
    {
        "content": "<p>Things could be made far far shorter by cutting down on all the normal fanciness and just making a terse bulleted list of trait/method</p>\n<p>eg</p>\n<ul>\n<li>Clone: clone, clone_from</li>\n<li>Copy</li>\n<li>PartialEq: eq, ne</li>\n<li>Default: default</li>\n<li>Send</li>\n</ul>\n<p>And we could even say \", and other default methods\" if the default methods list is long (such as Iterator)</p>",
        "id": 268739720,
        "sender_full_name": "Lokathor",
        "timestamp": 1642704617
    },
    {
        "content": "<p>As it is, for many things I don't even attempt to look in the body of a lot of the \"primitive ish\" type docs half the time because it's just a torrent of noise if there's a deref (strings and vecs and so on) or if there's a lot of trait impls (such as with number types or bitfield types).</p>",
        "id": 268740052,
        "sender_full_name": "Lokathor",
        "timestamp": 1642704774
    },
    {
        "content": "<p>It's actually better for the user to look in the tiny left scroll bar because that keeps things to just the traits implemented, in a terse format.</p>",
        "id": 268740139,
        "sender_full_name": "Lokathor",
        "timestamp": 1642704817
    },
    {
        "content": "<p>And if a thing implements Iterator then wow that's a huuuuuge pile of stuff that's not going to be helpful to nearly anyone.</p>",
        "id": 268740438,
        "sender_full_name": "Lokathor",
        "timestamp": 1642704949
    },
    {
        "content": "<p>Like when a thing is an iterator, what you care about is what comes out of the <code>next</code> method. That's basically it. The rest is just the same iterator stuff over and over.</p>",
        "id": 268740599,
        "sender_full_name": "Lokathor",
        "timestamp": 1642705011
    },
    {
        "content": "<p>You did say you were concerned that a beginner wouldn't know about a particular method on a particular trait sometimes, and I am also concerned about that.</p>\n<p>However, I think the way to fix that is to more strongly emphasize traits being largely <em>predictable</em>.<br>\nIf I see code calling <code>obj.clone()</code> I'm going to assume it's the Clone::clone method for that type, and <strong>things are very weird if that's not the case</strong>. If there's a method named clone that's not part of the Clone trait then that's very weird and the library author should have written down something about what's going on there.</p>\n<p>Accordingly, we can leverage the predictable nature of these common traits. If the docs have just a bullet point that says \"this type can be cloned\" with a link, new users will be able to click the link and learn what that means and then when the next type says the exact same short message they'll immediately understand \"oh this is the same as before\" and accelerate their understanding of the type.</p>",
        "id": 268741598,
        "sender_full_name": "Lokathor",
        "timestamp": 1642705439
    },
    {
        "content": "<p>Similarly, basically no one needs to see the signature for <code>Debug::fmt</code> on a type for the 1000th time. It should just say \"this type implements Debug\"</p>",
        "id": 268741862,
        "sender_full_name": "Lokathor",
        "timestamp": 1642705557
    },
    {
        "content": "<p>Basically I don't think that every single type should show full details of every single method it supports, the docs should focus on <em>what is special about this type</em>.</p>",
        "id": 268742096,
        "sender_full_name": "Lokathor",
        "timestamp": 1642705666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Showing.20when.20an.20impl.20was.20derived/near/268741862\">said</a>:</p>\n<blockquote>\n<p>Similarly, basically no one needs to see the signature for <code>Debug::fmt</code> on a type for the 1000th time. It should just say \"this type implements Debug\"</p>\n</blockquote>\n<p>But then you can't look on the page if <code>fmt</code> is implemented either. :-/</p>",
        "id": 268742705,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642705937
    },
    {
        "content": "<p>I don't understand your meaning</p>",
        "id": 268743295,
        "sender_full_name": "Lokathor",
        "timestamp": 1642706228
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Showing.20when.20an.20impl.20was.20derived/near/268742096\">said</a>:</p>\n<blockquote>\n<p>[...] the docs should focus on <em>what is special about this type</em>.</p>\n</blockquote>\n<p>One idea: maybe this could leverage something about whether there's any doc comments on the impl methods?  Like it's worth showing details about &lt;<a href=\"https://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html#impl-From%3CVec%3CT%2C%20Global%3E%3E\">https://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html#impl-From%3CVec%3CT%2C%20Global%3E%3E</a>&gt; because that has something to say about the impl.  Whereas most <code>Clone</code> impls don't have anything useful to say.</p>\n<p>Aside: I just looked at nightly docs, and wow, new left bar looks great.</p>",
        "id": 268743335,
        "sender_full_name": "scottmcm",
        "timestamp": 1642706251
    },
    {
        "content": "<p>Yes trait impls with docs on them should be highlighted compared to trait impls without them for sure.</p>",
        "id": 268743484,
        "sender_full_name": "Lokathor",
        "timestamp": 1642706319
    },
    {
        "content": "<p>Though I'm not sure RA does this right now :(</p>",
        "id": 268743539,
        "sender_full_name": "Lokathor",
        "timestamp": 1642706344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Showing.20when.20an.20impl.20was.20derived/near/268743295\">said</a>:</p>\n<blockquote>\n<p>I don't understand your meaning</p>\n</blockquote>\n<p>I mean doing ctrl+F then typing \"fmt\". If the <code>fmt</code> method isn't present on the page, only the trait name <code>Debug</code>, then you can't look for one of its methods.</p>",
        "id": 268752873,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642710633
    },
    {
        "content": "<p>well i said to put it as one trait per line and then a list of each trait's methods in my example bulleted list</p>",
        "id": 268754408,
        "sender_full_name": "Lokathor",
        "timestamp": 1642711306
    },
    {
        "content": "<p>Ah sorry, I misunderstood</p>",
        "id": 268754887,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642711511
    },
    {
        "content": "<p>and the exact layout is not even that important</p>",
        "id": 268754949,
        "sender_full_name": "Lokathor",
        "timestamp": 1642711550
    },
    {
        "content": "<p>My point I want to focus on is that right now docs to do with trait impls are poor because there's way too much info over and over with no indication when things are \"normal\" and when things are \"unusual\".</p>",
        "id": 268755105,
        "sender_full_name": "Lokathor",
        "timestamp": 1642711626
    },
    {
        "content": "<p>Perhaps we could render it as</p>\n<div class=\"codehilite\"><pre><span></span><code>impl Debug for MyType {\n  fn fmt\n}\n</code></pre></div>\n<p>and then link <code>fmt</code> to <code>Debug::fmt</code>. That would allow us to distinguish between associated types and methods in the list, e.g.</p>",
        "id": 268787422,
        "sender_full_name": "Noah Lev",
        "timestamp": 1642731447
    }
]