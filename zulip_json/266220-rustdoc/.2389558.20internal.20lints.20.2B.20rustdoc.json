[
    {
        "content": "<p>Hey <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>internal lints are global and therefore run by rustdoc. <a href=\"https://github.com/rust-lang/rust/issues/89558\">#89558</a> adds a lint using <code>TypeckResults</code> which causes rustdoc to fail, see the comment in the PR for more issue. Does my explanation in that comment make sense and what's the best solution for this in your opinion?</p>",
        "id": 258589172,
        "sender_full_name": "lcnr",
        "timestamp": 1634838650
    },
    {
        "content": "<p>Which comment?</p>",
        "id": 258589976,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1634839015
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/89558/commits/4724ee51c653a9a34b719e1a2c851159c2e6cf97\">https://github.com/rust-lang/rust/pull/89558/commits/4724ee51c653a9a34b719e1a2c851159c2e6cf97</a></p>",
        "id": 258590217,
        "sender_full_name": "lcnr",
        "timestamp": 1634839104
    },
    {
        "content": "<p>i hope i don't rebase this anymore</p>",
        "id": 258590236,
        "sender_full_name": "lcnr",
        "timestamp": 1634839109
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"c1\">// FIXME(rustdoc): This lint uses typecheck results causing rustdoc to</span>\n<span class=\"w\">        </span><span class=\"c1\">// error if there are resolution failures.</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// As internal lints are currently always run if there are `unstable_options`</span>\n<span class=\"w\">        </span><span class=\"c1\">// they are added to the lint store of rustdoc. Internal lints are also</span>\n<span class=\"w\">        </span><span class=\"c1\">// not used via the `lint_mod` query. Crate lints run outside of a query</span>\n<span class=\"w\">        </span><span class=\"c1\">// so rustdoc currently doesn't disable them.</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// Instead of relying on this, either change crate lints to a query disabled by</span>\n<span class=\"w\">        </span><span class=\"c1\">// rustdoc, only run internal lints if the user is explicitly opting in</span>\n<span class=\"w\">        </span><span class=\"c1\">// or figure out a different way to avoid running lints for rustdoc.</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">sess</span><span class=\"p\">.</span><span class=\"n\">opts</span><span class=\"p\">.</span><span class=\"n\">actually_rustdoc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 258590281,
        "sender_full_name": "lcnr",
        "timestamp": 1634839127
    },
    {
        "content": "<blockquote>\n<p>Does my explanation in that comment</p>\n</blockquote>\n<p>that's definitely pretty vague <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> sorry</p>",
        "id": 258590434,
        "sender_full_name": "lcnr",
        "timestamp": 1634839188
    },
    {
        "content": "<p>Hum... We run some parts of rustc but I didn't expect it to be broken there...</p>",
        "id": 258592291,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1634839859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/266220-rustdoc/topic/.2389558.20internal.20lints.20.2B.20rustdoc/near/258590236\">said</a>:</p>\n<blockquote>\n<p>i hope i don't rebase this anymore</p>\n</blockquote>\n<p>FWIW, the link you sent now returns not found, but replacing <code>/pull/NNNNN/commits/</code> with <code>/commit/</code> shows the commit (pre-force-push): <a href=\"https://github.com/rust-lang/rust/commit/4724ee51c653a9a34b719e1a2c851159c2e6cf97\">https://github.com/rust-lang/rust/commit/4724ee51c653a9a34b719e1a2c851159c2e6cf97</a></p>",
        "id": 258612022,
        "sender_full_name": "Noah Lev",
        "timestamp": 1634848107
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>    // As internal lints are currently always run if there are `unstable_options`\n    // they are added to the lint store of rustdoc.\n</code></pre></div>\n\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> wait, so rustdoc/rustc run internal lints with <code>-Zunstable-options</code> even when all the lints are disabled? That seems wrong - I think a better fix is to check if any <code>rustc::</code> lint is enabled and only run internal lints if so</p>",
        "id": 258638507,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634862154
    },
    {
        "content": "<p>or if you want a simpler patch for now, you could check if <code>rustc::all</code> is enabled at the crate level and return if not; it's a hack, but we only need internal lints to work in environments we control</p>",
        "id": 258638559,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634862197
    },
    {
        "content": "<p>why is rustdoc running these lints at all, anyway? it never calls analysis() - <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> can you get a backtrace of where this is hit?</p>",
        "id": 258638847,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634862390
    },
    {
        "content": "<p>these are the only things it runs unconditionally, and none of them look like lints: <a href=\"https://github.com/rust-lang/rust/blob/547a6ffee0cf4da9929a9e3d49546dc87d607735/src/librustdoc/core.rs#L331-L345\">https://github.com/rust-lang/rust/blob/547a6ffee0cf4da9929a9e3d49546dc87d607735/src/librustdoc/core.rs#L331-L345</a></p>",
        "id": 258638880,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634862425
    },
    {
        "content": "<p>ok apparently you added this lint to <code>check_mod_attrs</code>, which doesn't seem right. Can you put it in a lint pass somewhere instead?</p>",
        "id": 258639089,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634862569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/.2389558.20internal.20lints.20.2B.20rustdoc/near/258639089\">said</a>:</p>\n<blockquote>\n<p>ok apparently you added this lint to <code>check_mod_attrs</code>, which doesn't seem right. Can you put it in a lint pass somewhere instead?</p>\n</blockquote>\n<p>I did not? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I am checking that the attribute is only applied to functions there</p>",
        "id": 258809580,
        "sender_full_name": "lcnr",
        "timestamp": 1634974826
    },
    {
        "content": "<p>the lint is part of the internal lint store like the other already existing internal lints</p>",
        "id": 258809585,
        "sender_full_name": "lcnr",
        "timestamp": 1634974854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/.2389558.20internal.20lints.20.2B.20rustdoc/near/258638880\">said</a>:</p>\n<blockquote>\n<p>these are the only things it runs unconditionally, and none of them look like lints: <a href=\"https://github.com/rust-lang/rust/blob/547a6ffee0cf4da9929a9e3d49546dc87d607735/src/librustdoc/core.rs#L331-L345\">https://github.com/rust-lang/rust/blob/547a6ffee0cf4da9929a9e3d49546dc87d607735/src/librustdoc/core.rs#L331-L345</a></p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">sess</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"s\">\"missing_docs\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">rustc_lint</span>::<span class=\"n\">check_crate</span><span class=\"p\">(</span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rustc_lint</span>::<span class=\"n\">builtin</span>::<span class=\"n\">MissingDoc</span>::<span class=\"n\">new</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 258809651,
        "sender_full_name": "lcnr",
        "timestamp": 1634974977
    },
    {
        "content": "<p>and <code>check_crate</code> runs</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">sess</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"s\">\"crate_lints\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"c1\">// Run whole crate non-incremental lints</span>\n<span class=\"w\">                </span><span class=\"n\">late_lint_crate</span><span class=\"p\">(</span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">builtin_lints</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 258809667,
        "sender_full_name": "lcnr",
        "timestamp": 1634975013
    },
    {
        "content": "<p>and <code>late_lint_crate</code> also runs late_passes from the <code>LintStore</code></p>",
        "id": 258809734,
        "sender_full_name": "lcnr",
        "timestamp": 1634975089
    },
    {
        "content": "<blockquote>\n<p>wait, so rustdoc/rustc run internal lints with -Zunstable-options even when all the lints are disabled?</p>\n</blockquote>\n<p>so yes, it does</p>",
        "id": 258809792,
        "sender_full_name": "lcnr",
        "timestamp": 1634975163
    },
    {
        "content": "<blockquote>\n<p>That seems wrong - I think a better fix is to check if any rustc:: lint is enabled and only run internal lints if so</p>\n</blockquote>\n<p>we don't explicitly enable any <code>rustc</code> lints rn and I don't want to have to add an attribute to all compiler crates to do so</p>",
        "id": 258809830,
        "sender_full_name": "lcnr",
        "timestamp": 1634975225
    },
    {
        "content": "<p>i do think that using a special attribute to run internal lints is probably worth it though</p>",
        "id": 258809835,
        "sender_full_name": "lcnr",
        "timestamp": 1634975242
    },
    {
        "content": "<p>instead of just using <code>-Zunstable_options</code></p>",
        "id": 258809838,
        "sender_full_name": "lcnr",
        "timestamp": 1634975261
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/266220-rustdoc/topic/.2389558.20internal.20lints.20.2B.20rustdoc/near/258809835\">said</a>:</p>\n<blockquote>\n<p>i do think that using a special attribute to run internal lints is probably worth it though</p>\n</blockquote>\n<p>yeah this seems like the proper fix</p>",
        "id": 258831809,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1635007000
    }
]