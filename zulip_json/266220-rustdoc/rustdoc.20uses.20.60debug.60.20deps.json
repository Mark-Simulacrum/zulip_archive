[
    {
        "content": "<p>I was trying to build a series of crates where there were disjoint features (I know, but it was for async runtimes), and i was trying to use <code>--cgf=docsrs</code> instead of features to ALWAYS show a special method used only by one of the runtimes, but when the downstream crate was building docs, it kept saying that couldnt find that method</p>\n<p>with some <code>-vv</code> digging, it looks like the rustdoc invocations linked against the <code>debug</code> builds of the deps, not the <code>doc</code> builds, is this expected?</p>",
        "id": 251639846,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630535788
    },
    {
        "content": "<p>What do you mean by debug builds? Rustdoc reuses the same cache as cargo check</p>",
        "id": 251640712,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536441
    },
    {
        "content": "<p>Are you expecting cfg(doc) to be set for dependencies? It's not</p>",
        "id": 251640725,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536455
    },
    {
        "content": "<p>--cfg=docsrs needs to be set for both RUSTFLAGS and RUSTDOCFLAGS if you want it to be set for dependencies</p>",
        "id": 251640827,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536518
    },
    {
        "content": "<p>(maybe a simpler way to say those three things is \"rustdoc can't generate metadata\")</p>",
        "id": 251640851,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536544
    },
    {
        "content": "<p>I was building all the crates inside a single workplace, so I was expecting things to be the same, but i see now that it doesnt generate metadata</p>\n<p>another interesting \"consequence\" of this was that <code>#[cfg_attr(docrs, doc(...))]</code> attributes were not being forward</p>\n<p>I think the RUSTFLAGS would fix that, but in this case it would require I alter the <code>[package.metadata.docs.rs]</code>to also include `rustc-args = [\"--cfg=docsrs\"]</p>",
        "id": 251641055,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630536681
    },
    {
        "content": "<p>interesting, ill mention to the sqlx people that I can clean up the feature soup I needed with RUSTFLAGS instead, if thats what they want</p>",
        "id": 251641091,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630536711
    },
    {
        "content": "<p>Thanks for explaining!</p>",
        "id": 251641141,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630536728
    },
    {
        "content": "<p>I may link to this zulip stream on the PR</p>",
        "id": 251641151,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630536739
    },
    {
        "content": "<p>Sure, feel free</p>",
        "id": 251641168,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536751
    },
    {
        "content": "<p>so in a workplace, if you cargo doc that root, each dep is built twice?</p>",
        "id": 251641351,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630536919
    },
    {
        "content": "<p>Only if a later crate depends on it</p>",
        "id": 251641367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536934
    },
    {
        "content": "<p><code>cargo doc -p my_crate</code> doesn't require that you first run <code>cargo check -p my_crate</code></p>",
        "id": 251641387,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630536958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/rustdoc.20uses.20.60debug.60.20deps/near/251640851\">said</a>:</p>\n<blockquote>\n<p>(maybe a simpler way to say those three things is \"rustdoc can't generate metadata\")</p>\n</blockquote>\n<p>so more accurately: rustdoc doesn't <em>serialize</em> metadata</p>",
        "id": 251641504,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630537046
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/rustdoc.20uses.20.60debug.60.20deps/near/251641387\">said</a>:</p>\n<blockquote>\n<p><code>cargo doc -p my_crate</code> doesn't require that you first run <code>cargo check -p my_crate</code></p>\n</blockquote>\n<p>That's because rustdoc basically runs <code>cargo check</code>, right?</p>",
        "id": 251641680,
        "sender_full_name": "Noah Lev",
        "timestamp": 1630537194
    },
    {
        "content": "<p>Essentially, yes. It doesn't type check function bodies.</p>",
        "id": 251641741,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630537209
    },
    {
        "content": "<p><del>Well, it sometimes does.</del> nvm, was thinking of something else</p>",
        "id": 251641783,
        "sender_full_name": "Noah Lev",
        "timestamp": 1630537222
    },
    {
        "content": "<p>And there are a bunch of other checks it omits too</p>",
        "id": 251641787,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630537223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/rustdoc.20uses.20.60debug.60.20deps/near/251641367\">said</a>:</p>\n<blockquote>\n<p>Only if a later crate depends on it</p>\n</blockquote>\n<p>ah so in the sqlx case, there is a tree of crates depending on each other, so the non-root crates will all be built in <code>debug</code> mode and <code>doc</code> mode</p>",
        "id": 251642019,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630537367
    },
    {
        "content": "<p>ah thats why the cargo output has \"Checking\" AND \"Documenting\"</p>",
        "id": 251642042,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630537386
    }
]