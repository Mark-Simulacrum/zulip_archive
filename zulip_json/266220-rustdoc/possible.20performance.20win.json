[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/format.rs#L1157-L1158\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/format.rs#L1157-L1158</a></p>\n<p>It looks like <code>inner_full_print</code> (which formats a method signature, and so is called a bunch of times) creates two Strings: args and args_plain, where args_plain seems to be the \"plaintext\" version of the args, suitable for instance to put in a <code>&lt;pre&gt;</code> tag. But it looks like args_plain is not actually used, except to calculate the width of the declaration to decide if it should be wrapped. We could replace it with a counter that we increment in all the appropriate places.</p>\n<p>Also I wonder if we should be making the <code>args</code> String with an initial capacity? We can figure out a sort of median or 80th percentile size of a declaration, and save reallocating as we go.</p>",
        "id": 270147357,
        "sender_full_name": "jsha",
        "timestamp": 1643687222
    },
    {
        "content": "<p>Hmm, I wonder if I could adjust <code>HtmlWithLimit</code> somehow so we could use it for this purpose. It already has support for counting non-tag characters, so it should be useful for this case</p>",
        "id": 270611609,
        "sender_full_name": "Noah Lev",
        "timestamp": 1643919652
    },
    {
        "content": "<p>In general, we should just change this code so it writes directly to the buffer rather than returning a new string I think</p>",
        "id": 270611666,
        "sender_full_name": "Noah Lev",
        "timestamp": 1643919683
    }
]