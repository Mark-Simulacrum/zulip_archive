[
    {
        "content": "<p>Hey,<br>\nI'm currently working on <a href=\"https://github.com/rust-lang/rust/issues/83183\">#83183</a> and I set up the enum, and also removed the old hack.<br>\nOne of the main sources for the 280 errors that need to be fixed are </p>\n<div class=\"codehilite\"><pre><span></span><code>expected struct `rustc_span::def_id::DefId`, found enum `types::DefId`\n</code></pre></div>\n<p>Should I just put an <code>expect_real</code> there so that it panics when trying to pass a fake DefId?</p>\n<p>Also, some more mentoring instructions would probably be helpful :) cc <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <br>\nCurrently, I'm doing most of this without knowing much about the rustdoc codebase</p>",
        "id": 236722746,
        "sender_full_name": "Stu",
        "timestamp": 1619721074
    },
    {
        "content": "<p>oh wow that's amazing!</p>",
        "id": 236722872,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721125
    },
    {
        "content": "<blockquote>\n<p>Should I just put an expect_real there so that it panics when trying to pass a fake DefId?</p>\n</blockquote>\n<p>ideally we would separate things into \"known real\" and to \"possibly fake\" fields</p>",
        "id": 236722928,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721151
    },
    {
        "content": "<p>can you give a couple examples of errors?</p>",
        "id": 236722954,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721162
    },
    {
        "content": "<p>Blindly translating things to .expect_real is probably ok for now though</p>",
        "id": 236723361,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721296
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// src/librustdoc/passes/collect_trait_impls.rs:182:21</span>\n\n<span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">impls</span><span class=\"p\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">get_auto_trait_and_blanket_impls</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">type_of</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">def_id</span><span class=\"p\">.</span><span class=\"n\">expect_real</span><span class=\"p\">()),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">def_id</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">));</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is one example. It's hard to find \"real\" ones because most of the errors can be easily fixed by importing <code>clean::DefId</code> instead of <code>rustc_hir::DefId</code></p>",
        "id": 236723613,
        "sender_full_name": "Stu",
        "timestamp": 1619721389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/pass.20fake.20DefId's.20to.20rustc.20APIs/near/236723361\">said</a>:</p>\n<blockquote>\n<p>Blindly translating things to .expect_real is probably ok for now though</p>\n</blockquote>\n<p>Alright, I will start with that.</p>",
        "id": 236723708,
        "sender_full_name": "Stu",
        "timestamp": 1619721433
    },
    {
        "content": "<p>That one looks correct to call expect_real() on, no fake ids at all are generated before get_auto_and_blanket_impls()</p>",
        "id": 236724274,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721668
    },
    {
        "content": "<p>Hmm I wonder if it makes sense to have only things in that impls field use fake ids</p>",
        "id": 236724357,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721715
    },
    {
        "content": "<p>And parameterize Item on the id or something</p>",
        "id": 236724430,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721738
    },
    {
        "content": "<blockquote>\n<p>Also, some more mentoring instructions would probably be helpful :) cc @Joshua Nelson </p>\n</blockquote>\n<p>I'll be honest, most of the work here is designing what the API <em>should</em> look like</p>",
        "id": 236724729,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619721869
    },
    {
        "content": "<p>I'm going to assign you on the issue so other people don't try to work on it at the same time, no pressure though - even if you only get halfway that's still useful :)</p>",
        "id": 236726474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619722598
    },
    {
        "content": "<p>Ah yes. forgot that. Thanks</p>",
        "id": 236726533,
        "sender_full_name": "Stu",
        "timestamp": 1619722630
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/rust-lang/rust/pull/84707\">#84707</a> to track the progress <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 236729239,
        "sender_full_name": "Stu",
        "timestamp": 1619723671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> looks like you based it off an old branch - you might want to rebase that before fixing everything</p>",
        "id": 236729476,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619723773
    },
    {
        "content": "<p>ah yea, I forgot to update my rust fork</p>",
        "id": 236729562,
        "sender_full_name": "Stu",
        "timestamp": 1619723816
    },
    {
        "content": "<p>oh wow yeah that's from january haha</p>",
        "id": 236729664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619723856
    },
    {
        "content": "<p>oh wow. whoops. That will be <em>fun</em> to rebase</p>",
        "id": 236729872,
        "sender_full_name": "Stu",
        "timestamp": 1619723941
    },
    {
        "content": "<p>ah nice. ICE while running <code>./x.py check</code>. Incremental compilation didn't like the rebase I guess</p>",
        "id": 236732976,
        "sender_full_name": "Stu",
        "timestamp": 1619725223
    },
    {
        "content": "<p>lol nice, was it an \"unstable predicates\" crash?</p>",
        "id": 236733171,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619725320
    },
    {
        "content": "<p>you can fix that with <code>rm -r build/$TARGET/stage0-rustc/release/incremental</code></p>",
        "id": 236733234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619725334
    },
    {
        "content": "<p>Yeah, <code>found unstable fingerprints for predicates_of</code></p>\n<p>I just ran <code>clean</code> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 236733286,
        "sender_full_name": "Stu",
        "timestamp": 1619725361
    },
    {
        "content": "<p>oh oof</p>",
        "id": 236733303,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619725367
    },
    {
        "content": "<p>btw if you wait to make the rustc changes for a later commit, you can use download-rustc instead which takes way less time</p>",
        "id": 236733383,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619725403
    },
    {
        "content": "<p>oh thats awesome, but I get the same NixOS error you opened an issue about</p>",
        "id": 236733728,
        "sender_full_name": "Stu",
        "timestamp": 1619725561
    },
    {
        "content": "<p>you  can fix that by copy/pasting the command and replacing ci-rustc with stage0</p>",
        "id": 236733824,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619725587
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"230287\">Stu</span> <a href=\"#narrow/stream/266220-rustdoc/topic/pass.20fake.20DefId's.20to.20rustc.20APIs/near/236733728\">said</a>:</p>\n<blockquote>\n<p>oh thats awesome, but I get the same NixOS error you opened an issue about</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> fyi: <a href=\"https://github.com/rust-lang/rust/pull/84750\">https://github.com/rust-lang/rust/pull/84750</a></p>",
        "id": 236842274,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619792757
    },
    {
        "content": "<p>you can cherry-pick that to have cargo fixed automatically (although you shouldn't run into this again until the beta bump or you clear your build cache)</p>",
        "id": 236842367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619792780
    },
    {
        "content": "<p>finally, first module done <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 236858682,
        "sender_full_name": "Stu",
        "timestamp": 1619798455
    },
    {
        "content": "<p>only 150 errors left <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 236860532,
        "sender_full_name": "Stu",
        "timestamp": 1619799170
    },
    {
        "content": "<p>oh boy</p>",
        "id": 236860578,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619799189
    },
    {
        "content": "<p>Finally, everything compiles <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 236953967,
        "sender_full_name": "Stu",
        "timestamp": 1619862465
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/Las6LhEUdJjyKSbwRgNFkTCR/image.png\">Test Result</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/Las6LhEUdJjyKSbwRgNFkTCR/image.png\" title=\"Test Result\"><img src=\"/user_uploads/4715/Las6LhEUdJjyKSbwRgNFkTCR/image.png\"></a></div><p>Whoops</p>",
        "id": 236954356,
        "sender_full_name": "Stu",
        "timestamp": 1619862906
    },
    {
        "content": "<p>Test suite passes <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>Should be ready for review</p>",
        "id": 236961990,
        "sender_full_name": "Stu",
        "timestamp": 1619870711
    },
    {
        "content": "<p>That's incredible</p>",
        "id": 236972493,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619879718
    },
    {
        "content": "<p>Wow</p>",
        "id": 236972496,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619879720
    },
    {
        "content": "<p>holy shit I'm hitting <a href=\"https://github.com/rust-lang/rust/issues/84702\">this</a> so often</p>",
        "id": 236976964,
        "sender_full_name": "Stu",
        "timestamp": 1619882619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> the fix was approved if you want to cherry pick the commit, git can handle it</p>",
        "id": 236979675,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619885137
    }
]