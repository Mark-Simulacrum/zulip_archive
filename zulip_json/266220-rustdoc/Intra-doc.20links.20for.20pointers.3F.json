[
    {
        "content": "<p>Hi folks!  I had <a href=\"https://github.com/rust-lang/rust/pull/91127\">my PR</a> fail <a href=\"https://github.com/rust-lang/rust/runs/4285011951?check_suite_focus=true\">(web)</a> <a href=\"https://github.com/rust-lang/rust/commit/875e01e6166d4b5dea370023564703968a3cd92a/checks/4285011951/logs\">(plain)</a> when I tried to use intra-doc links to link to a pointer method.</p>\n<div class=\"codehilite\" data-code-language=\"plain\"><pre><span></span><code>error: unresolved link to `Self::from_bits`\n  --&gt; library/core/src/ptr/const_ptr.rs:54:33\n   |\n54 |     /// The inverse method is [`Self::from_bits`].\n   |                                 ^^^^^^^^^^^^^^^ no item named `Self` in scope\n</code></pre></div>\n<p>I unblocked myself by linking manually, but is this supposed to work?  I could totally understand if \"inherent\" impls on primitive types are weird.</p>",
        "id": 262639531,
        "sender_full_name": "scottmcm",
        "timestamp": 1637787481
    },
    {
        "content": "<p>uhh yeah raw pointers and references especially are kind of hacky, I wouldn't be surprised if there are bugs here/</p>",
        "id": 262639844,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637787629
    },
    {
        "content": "<p>could you open an issue?</p>",
        "id": 262639859,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637787636
    },
    {
        "content": "<p>(support for <code>Self</code> in general is super hacky but it's a pain to fix)</p>",
        "id": 262639945,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637787689
    },
    {
        "content": "<p>Yeah, and even using <code>[`pointer::from_bits`]</code> wouldn't quite work since it may not link to the correct mutability</p>",
        "id": 262643684,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637790284
    },
    {
        "content": "<p>IIRC I tried <code> [`&lt;*const T&gt;::from_bits`] </code> too, without that working.</p>\n<p>I'll open an issue.</p>",
        "id": 262644187,
        "sender_full_name": "scottmcm",
        "timestamp": 1637790650
    },
    {
        "content": "<p><code>*const::</code> should have worked</p>",
        "id": 262644233,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637790693
    },
    {
        "content": "<p>(maybe not the most intuitive syntax)</p>",
        "id": 262644241,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637790700
    },
    {
        "content": "<p>Note that <code>*const</code> may actually link to <code>*mut</code> (that's why it requires a feature gate, since we should fix this)</p>",
        "id": 262644521,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637790912
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/91204\">https://github.com/rust-lang/rust/issues/91204</a></p>\n<p>What would you suggest I use in the PR, if the <code>-1</code> isn't consistent and <code>*const</code> might link to the wrong one?</p>",
        "id": 262644691,
        "sender_full_name": "scottmcm",
        "timestamp": 1637791046
    },
    {
        "content": "<p>there is not a good alternative at this time</p>",
        "id": 262644711,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637791059
    },
    {
        "content": "<p>you can use relative links but those will break on re-exports</p>",
        "id": 262644721,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637791068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Intra-doc.20links.20for.20pointers.3F/near/262644721\">said</a>:</p>\n<blockquote>\n<p>you can use relative links but those will break on re-exports</p>\n</blockquote>\n<p>I think just plain anchors work though? (Like in the current PR)</p>",
        "id": 262644779,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637791088
    },
    {
        "content": "<p>Roger.  I'll leave my PR as-is, then.</p>",
        "id": 262644787,
        "sender_full_name": "scottmcm",
        "timestamp": 1637791096
    },
    {
        "content": "<p>Yeah, the summary is basically \"this doesn't work great right now\" :P</p>",
        "id": 262644804,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637791114
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Intra-doc.20links.20for.20pointers.3F/near/262644779\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Intra-doc.20links.20for.20pointers.3F/near/262644721\">said</a>:</p>\n<blockquote>\n<p>you can use relative links but those will break on re-exports</p>\n</blockquote>\n<p>I think just plain anchors work though? (Like in the current PR)</p>\n</blockquote>\n<p>they can break if this is a trait you implement I think ...</p>",
        "id": 262644847,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637791155
    },
    {
        "content": "<p>or if another type derefs to the original type</p>",
        "id": 262644875,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637791179
    },
    {
        "content": "<p>Or if it's in the first line</p>",
        "id": 262645037,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637791235
    },
    {
        "content": "<p>(because the modules show the first lines of the visible items)</p>",
        "id": 262645057,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637791267
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Intra-doc.20links.20for.20pointers.3F/near/262645057\">said</a>:</p>\n<blockquote>\n<p>(because the modules show the first lines of the visible items)</p>\n</blockquote>\n<p>Yeah, that's a good point too.</p>",
        "id": 262645175,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637791364
    },
    {
        "content": "<p>I remember it well because it was one of the main cause of broken links a few years back</p>",
        "id": 262645317,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637791490
    }
]