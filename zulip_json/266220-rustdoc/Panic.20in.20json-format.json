[
    {
        "content": "<p>Turns out <a href=\"https://github.com/rust-lang/rust/pull/75114/files#r519470764\">that change around CRATE_DEF_INDEX</a> was deffinatly needed. I'm working on a minimal reproduction <a href=\"https://github.com/aDotInTheVoid/xmark/issues/5\">here</a>. More details to come as I figure it out</p>",
        "id": 218899256,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607120865
    },
    {
        "content": "<p>do you know yet <em>why</em> it's necessary? It seems like <code>output.root</code> is getting overridden with an import somehow? I'd expect that to need larger changes than changing the DefId, lots of rustdoc has fake defids</p>",
        "id": 218899516,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607121011
    },
    {
        "content": "<p>Yeah, it seems like something else is getting Id <code>0:0</code>, and that messes up the assuptions about what root has.</p>",
        "id": 218899923,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607121306
    },
    {
        "content": "<p>Minimal:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">l1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">l3</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">L4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">l3</span>::<span class=\"n\">L4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 218903342,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607123659
    },
    {
        "content": "<p>Checking the inserts are unique, it turns out theirs a lot of collisions</p>",
        "id": 218906763,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607126850
    },
    {
        "content": "<p>Yeah I think rustdoc reuses DefIds for a lot of things</p>",
        "id": 218906878,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607126958
    },
    {
        "content": "<p>Maybe a fix is to use a different id that's unique and unrelated to DefIds?</p>",
        "id": 218906894,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607126979
    },
    {
        "content": "<p>Would that be any simpler than not reusing <code>DefIds</code>. They seem to be unique in the compiller. Any reasons they can't be made unique?</p>",
        "id": 218907104,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607127206
    },
    {
        "content": "<p>well, it's unique within the compiler, but not within rustdoc</p>",
        "id": 218907863,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607128069
    },
    {
        "content": "<p>hmm, actually I'm having trouble finding where it's duplicated other than in that one case</p>",
        "id": 218907939,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607128138
    },
    {
        "content": "<p>maybe we <em>could</em> just use <code>cx.next_def_id</code>?</p>",
        "id": 218907957,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607128162
    },
    {
        "content": "<p>but that seems like a hack - you can't pass those DefIds to anything in rustc</p>",
        "id": 218907974,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607128195
    },
    {
        "content": "<p>it will panic</p>",
        "id": 218907977,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607128198
    },
    {
        "content": "<p>Using <code>cx.tcx.hir().local_def_id(self.id).to_def_id()</code>, seems to fix the problem, but items are still being removed from the index, but curiously by themselves. <a href=\"https://github.com/aDotInTheVoid/xmark/issues/5#issuecomment-739246919\">Details</a>.</p>\n<p>It looks like <code>&lt;JsonRenderer as FormatRenderer&gt;::item</code> is being called more that once, but I'm not sure why that would be</p>",
        "id": 218934037,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607172807
    },
    {
        "content": "<p>It this a bug that it's calling <code>item</code> with the same item twice?</p>",
        "id": 218939393,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607181945
    },
    {
        "content": "<p>probably, I would investigate what's calling item twice</p>",
        "id": 218939517,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607182092
    },
    {
        "content": "<p>the main HTML backend wouldn't notice, it would just overwrite the files</p>",
        "id": 218939526,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607182108
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79751\">Pull</a> that makes it work, but doesn't address the underlying duplication, as I haven't found it yet.</p>",
        "id": 218956967,
        "sender_full_name": "Nixon Enraght-Moony",
        "timestamp": 1607207688
    }
]