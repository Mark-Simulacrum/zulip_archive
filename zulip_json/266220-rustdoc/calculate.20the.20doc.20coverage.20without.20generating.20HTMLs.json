[
    {
        "content": "<p>I'd like to calculate the doc coverage for each of crates in a large workspace without generating the HTML outputs. ( for the process is really slow , takes more than 1 hours ). After searching the documents I can't find a way to do it. Is there a <code>dry-run</code> mode in the <code>rustdoc</code> ?</p>",
        "id": 233635793,
        "sender_full_name": "Siwei",
        "timestamp": 1617880584
    },
    {
        "content": "<p>--generate-coverage on it's own should skip html outputs</p>",
        "id": 233637428,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617881707
    },
    {
        "content": "<p>Can you paste the command you're running?</p>",
        "id": 233637434,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617881714
    },
    {
        "content": "<p><code> RUSTDOCFLAGS=\"-Z unstable-options --show-coverage\" cargo doc --no-deps  --offline  --workspace</code> <br>\nWhich command should I pass the <code>--generate-coverage</code> flag to ? I can't find it in the help output  neither <code>rustdoc</code> nor <code>cargo doc</code>.<br>\ntoolchain version: rustdoc 1.52.0-nightly (07194ffcd 2021-02-10)</p>",
        "id": 233638391,
        "sender_full_name": "Siwei",
        "timestamp": 1617882252
    },
    {
        "content": "<p>--show-coverage is what I meant</p>",
        "id": 233638476,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617882307
    },
    {
        "content": "<p>yeah that command doesn't generate docs for me</p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUSTDOCFLAGS=&quot;-Z unstable-options --show-coverage&quot; cargo +nightly doc --no-deps  --offline  --workspace\n    Checking inner v0.1.0 (/home/joshua/src/rust/test-rustdoc/wildcard/inner)\n Documenting wildcard v0.1.0 (/home/joshua/src/rust/test-rustdoc/wildcard)\n+-------------------------------------+------------+------------+------------+------------+\n| File                                | Documented | Percentage |   Examples | Percentage |\n+-------------------------------------+------------+------------+------------+------------+\n| src/lib.rs                          |          0 |       0.0% |          0 |       0.0% |\n+-------------------------------------+------------+------------+------------+------------+\n| Total                               |          0 |       0.0% |          0 |       0.0% |\n+-------------------------------------+------------+------------+------------+------------+\n    Finished dev [unoptimized + debuginfo] target(s) in 1.34s\n$ ls doc\nls: cannot access &#39;doc&#39;: No such file or directory\n</code></pre></div>",
        "id": 233638650,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617882399
    },
    {
        "content": "<p>why do you think it does?</p>",
        "id": 233638658,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617882402
    },
    {
        "content": "<p>It costs too much time I guess it may spend on generating outputs. <br>\nThank you.</p>",
        "id": 233639961,
        "sender_full_name": "Siwei",
        "timestamp": 1617883092
    },
    {
        "content": "<p>you can measure the time with <code>-Z self-profile</code> or <code>-Z time-passes</code></p>",
        "id": 233639996,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617883114
    },
    {
        "content": "<p>btw <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> what do you think of renaming <code>--show-coverage</code> to <code>--output-format coverage</code>? since it skips generating HTML?</p>",
        "id": 233713592,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617909835
    },
    {
        "content": "<p>I'm fine with it. I'm just afraid it might make it more \"tricky\" to find. Do you think we can have both to do the same thing or would it overkill?</p>",
        "id": 233713765,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617909911
    },
    {
        "content": "<p>I think we should only have one</p>",
        "id": 233713790,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617909924
    },
    {
        "content": "<p>we can make it warn for a few releases or whatever</p>",
        "id": 233713803,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617909934
    },
    {
        "content": "<p>I don't think warnings are needed, it's a nightly option after all. Let's just maybe write a technical blog post about it (so we can also use it to sum up what the option do).</p>",
        "id": 233713989,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910005
    },
    {
        "content": "<p>oh, just thought that it might be an issue</p>",
        "id": 233714007,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910014
    },
    {
        "content": "<p><code>--show-coverage</code> has also a json output</p>",
        "id": 233714027,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910026
    },
    {
        "content": "<p>by using the <code>--output-format</code> XD</p>",
        "id": 233714045,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910038
    },
    {
        "content": "<p>so I don't think it can work</p>",
        "id": 233714063,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910050
    },
    {
        "content": "<p>oh oof</p>",
        "id": 233714067,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910052
    },
    {
        "content": "<p>We use it on <a href=\"http://docs.rs\">docs.rs</a> ;)</p>",
        "id": 233714099,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910064
    },
    {
        "content": "<p>I wonder if we should rename --output-format to --backend or something</p>",
        "id": 233714103,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910066
    },
    {
        "content": "<p>Hmmm... Originally it was because we had both json and HTML. The idea remains the same</p>",
        "id": 233714197,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910105
    },
    {
        "content": "<p>And it's a stable option, so we can't rename it easily</p>",
        "id": 233714230,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910119
    },
    {
        "content": "<p>oh right</p>",
        "id": 233714238,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910123
    },
    {
        "content": "<p>oh well</p>",
        "id": 233714241,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910124
    },
    {
        "content": "<p>Generally what other tooling does is just have a coverage and coverage-json mode for output-format, which seems not bad.</p>",
        "id": 233714302,
        "sender_full_name": "simulacrum",
        "timestamp": 1617910148
    },
    {
        "content": "<p>you mean having two different outputs?</p>",
        "id": 233714340,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910174
    },
    {
        "content": "<p>outputs =&gt; options</p>",
        "id": 233714359,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910184
    },
    {
        "content": "<p>like <code>--output-format coverage-json</code> and <code>--output-format coverage</code>?</p>",
        "id": 233714415,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910204
    },
    {
        "content": "<p>I think <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> means <code>--output-format coverage</code> and <code>--output-format json-coverage</code></p>",
        "id": 233714420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910204
    },
    {
        "content": "<p>ok so I understood correctly</p>",
        "id": 233714473,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910219
    },
    {
        "content": "<p>that could work too</p>",
        "id": 233714492,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910225
    },
    {
        "content": "<p>I like the idea, it's more explicit</p>",
        "id": 233714528,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910238
    },
    {
        "content": "<p>Since we use it on <a href=\"http://docs.rs\">docs.rs</a>, we'll need a little bit of time before removing the old way (so the warning idea for one release is mandatory here I think)</p>",
        "id": 233714625,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910281
    },
    {
        "content": "<p>if you mean release=nightly, then yes, but otherwise I'm not sure I understand :)</p>",
        "id": 233714891,
        "sender_full_name": "simulacrum",
        "timestamp": 1617910364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for <a href=\"http://docs.rs\">docs.rs</a>, we would just need a few days of having both options, so not an issue. I was simply thinking about the end users that might use this option (maybe they exist haha)</p>",
        "id": 233715031,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910415
    },
    {
        "content": "<p>Sure. I just wanted to check that my model of <a href=\"http://docs.rs\">docs.rs</a> was accurate.</p>",
        "id": 233715176,
        "sender_full_name": "simulacrum",
        "timestamp": 1617910458
    },
    {
        "content": "<p>Unless I'm mistaken, <a href=\"http://docs.rs\">docs.rs</a> updates the nightly daily</p>",
        "id": 233715220,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910480
    },
    {
        "content": "<p>so just like you said, not an issue :)</p>",
        "id": 233715233,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Can you open an issue about this please? And I guess you want to do the PR so I'll let you handle that ;)</p>",
        "id": 233715330,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910528
    },
    {
        "content": "<p>I can make the update on <a href=\"http://docs.rs\">docs.rs</a> once it's merged and in the nightly we use</p>",
        "id": 233715360,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910541
    },
    {
        "content": "<p>sure :)</p>",
        "id": 233715367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617910546
    },
    {
        "content": "<p>Thanks for bringing this up, it's a really good idea. It simplifies the arguments a lot and I like that :) (and thanks for the suggestion <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> !)</p>",
        "id": 233715505,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617910599
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/84012\">https://github.com/rust-lang/rust/issues/84012</a></p>",
        "id": 233720281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617912680
    },
    {
        "content": "<p>(sorry, I took half an hour to argue with friends about how no actually using dynamic linking for rust is hard)</p>",
        "id": 233720328,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617912705
    },
    {
        "content": "<p>I was reading a (bad) book, so it's fine. You can take a few more days :)</p>",
        "id": 233728082,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1617915793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/calculate.20the.20doc.20coverage.20without.20generating.20HTMLs/near/233639996\">said</a>:</p>\n<blockquote>\n<p>you can measure the time with <code>-Z self-profile</code> or <code>-Z time-passes</code></p>\n</blockquote>\n<p>It seems that the 'get_blanket_impls' is the most time-consuming one ( costs more than half of total time).Is the process necessary for calc coverage?</p>",
        "id": 233799362,
        "sender_full_name": "Siwei",
        "timestamp": 1617964490
    },
    {
        "content": "<p>Ok yeah that's what I expected</p>",
        "id": 233808285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969451
    },
    {
        "content": "<p>Hmm it shouldn't be necessary  - I wonder if we can rip the coverage pass out of everything else and just run it as a HIR pass</p>",
        "id": 233808403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969504
    },
    {
        "content": "<p>That should be basically instantaneous</p>",
        "id": 233808420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969517
    },
    {
        "content": "<p>hmm it looks like running this is intentional? <a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/mod.rs#L113\">https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/mod.rs#L113</a></p>",
        "id": 233809642,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617970149
    },
    {
        "content": "<p>hmm well removing it doesn't cause the test suite to fail</p>",
        "id": 233809895,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617970298
    },
    {
        "content": "<p>ok so I think what's going on is rustdoc wants to look at <em>inherent</em> and <em>trait</em> impls but not blanket impls <a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/calculate_doc_coverage.rs#L209-L212\">https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/calculate_doc_coverage.rs#L209-L212</a></p>",
        "id": 233810038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617970361
    },
    {
        "content": "<p>oh wait what it ignores those too lol <a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/calculate_doc_coverage.rs#L214-L237\">https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/librustdoc/passes/calculate_doc_coverage.rs#L214-L237</a></p>",
        "id": 233810083,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617970391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"403917\">@Siwei</span> could you confirm whether <code>RUSTDOCFLAGS='--no-defaults --passes=strip_hidden,strip_private,calculate_doc_coverage -Z unstable-options --show-coverage' cargo +nightly doc --no-deps  --offline  --workspace</code> is faster?</p>",
        "id": 233810279,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617970503
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/84030\">https://github.com/rust-lang/rust/pull/84030</a></p>",
        "id": 233817810,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617973910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/calculate.20the.20doc.20coverage.20without.20generating.20HTMLs/near/233715220\">said</a>:</p>\n<blockquote>\n<p>Unless I'm mistaken, <a href=\"http://docs.rs\">docs.rs</a> updates the nightly daily</p>\n</blockquote>\n<p>not quite daily, with how often <code>rustfmt</code> is broken, in fact <a href=\"https://docs.rs/about/builds\">currently we're stuck on <code>rustc 1.53.0-nightly (07e0e2ec2 2021-03-24)</code> still</a></p>",
        "id": 233898996,
        "sender_full_name": "Nemo157",
        "timestamp": 1618005837
    },
    {
        "content": "<p>Wait, why does <a href=\"http://docs.rs\">docs.rs</a> need <code>rustfmt</code>? Why not only install rustc/rustdoc?</p>",
        "id": 234006121,
        "sender_full_name": "Noah Lev",
        "timestamp": 1618106081
    },
    {
        "content": "<p>some crates depend on it for formatting generated code</p>",
        "id": 234006564,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618106545
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/docs.rs/issues/357\">https://github.com/rust-lang/docs.rs/issues/357</a></p>",
        "id": 234006622,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618106611
    },
    {
        "content": "<p>Ah, I see.</p>",
        "id": 234006854,
        "sender_full_name": "Noah Lev",
        "timestamp": 1618106850
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/calculate.20the.20doc.20coverage.20without.20generating.20HTMLs/near/233810279\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"403917\">Siwei</span> could you confirm whether <code>RUSTDOCFLAGS='--no-defaults --passes=strip_hidden,strip_private,calculate_doc_coverage -Z unstable-options --show-coverage' cargo +nightly doc --no-deps  --offline  --workspace</code> is faster?</p>\n</blockquote>\n<p>This command reduces the total time from more than 10 hours to less than 10 minutes. But it doesn't output anything about the coverage.</p>",
        "id": 234013388,
        "sender_full_name": "Siwei",
        "timestamp": 1618114092
    },
    {
        "content": "<p>oh huh, that's odd</p>",
        "id": 234013533,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618114238
    },
    {
        "content": "<p>anyway, <a href=\"https://github.com/rust-lang/rust/pull/84030\">https://github.com/rust-lang/rust/pull/84030</a> should have landed - <span class=\"user-mention\" data-user-id=\"403917\">@Siwei</span>  could you try again with the latest nightly? without the special flags, just the ones from before: <code>RUSTDOCFLAGS='-Z unstable-options --show-coverage' cargo +nightly doc --no-deps  --offline  --workspace</code></p>",
        "id": 234013554,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618114288
    },
    {
        "content": "<p>also 10 minutes <em>without</em> get_blanket_impls ??? what sort of crate are you building?</p>",
        "id": 234013579,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618114306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/calculate.20the.20doc.20coverage.20without.20generating.20HTMLs/near/234013554\">said</a>:</p>\n<blockquote>\n<p>anyway, <a href=\"https://github.com/rust-lang/rust/pull/84030\">https://github.com/rust-lang/rust/pull/84030</a> should have landed - <span class=\"user-mention silent\" data-user-id=\"403917\">Siwei</span>  could you try again with the latest nightly? without the special flags, just the ones from before: <code>RUSTDOCFLAGS='-Z unstable-options --show-coverage' cargo +nightly doc --no-deps  --offline  --workspace</code></p>\n</blockquote>\n<p>A dependency fails to compile with the latest nightly toolchain. I'm trying to fix it. Our workspace contains about 120 crates, 12000 pub structs and 160000 pub functions. (counts by <code>rg</code>)</p>",
        "id": 234017077,
        "sender_full_name": "Siwei",
        "timestamp": 1618118290
    },
    {
        "content": "<p>With the latest toolchain ( 2021-04-11 ) everything goes well and the total time cost reduces to 9m50s.It's extremely fast!</p>",
        "id": 234019977,
        "sender_full_name": "Siwei",
        "timestamp": 1618121887
    },
    {
        "content": "<p>Awesome! Glad I could help :) and wow that is a <em>lot</em> of crates</p>",
        "id": 234037662,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618140548
    },
    {
        "content": "<p>Is your workspace public? It might be useful for working on rustdoc's perf</p>",
        "id": 234037676,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618140594
    },
    {
        "content": "<p>Our projects are private. But maybe I can share some profiling data.</p>",
        "id": 234105044,
        "sender_full_name": "Siwei",
        "timestamp": 1618205186
    },
    {
        "content": "<p>You can skip most of the 10 hours by using --no-default-passes and adding back all the passes in <a href=\"https://github.com/rust-lang/rust/blob/d68f7a2f50958d632ef8dc79212481e4f183ed36/src/librustdoc/passes/mod.rs#L97\">https://github.com/rust-lang/rust/blob/d68f7a2f50958d632ef8dc79212481e4f183ed36/src/librustdoc/passes/mod.rs#L97</a> manually with --passes. I already know get_blanket_impls is slow, I don't need to know exactly how slow.</p>",
        "id": 234120144,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618215307
    },
    {
        "content": "<p>Maybe something goes wrong with my laptop the first run (which costs more than 10 hours).<br>\n<a href=\"/user_uploads/4715/_I4uCMdS0HcEoTrm-im8EZX5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_I4uCMdS0HcEoTrm-im8EZX5/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/_I4uCMdS0HcEoTrm-im8EZX5/image.png\"></a></div><p>Here're my test results. It seems that I could't make it the same slow when puts everything (collect_trait_impls,STRIP_HIDDEN,STRIP_PRIVATE,CALCULATE_DOC_COVERAGE)  to the <code>--passes</code>.<br>\nRUSTDOCFLAGS=' -Z unstable-options --show-coverage' cargo doc --no-deps  255min<br>\n--no-defaults  12m55s<br>\n--no-defaults --passes collect_trait_impls 14m35s<br>\n--no-defaults --passes collect_trait_impls,STRIP_HIDDEN,STRIP_PRIVATE <br>\n-no-defaults --passes collect_trait_impls,STRIP_HIDDEN,STRIP_PRIVATE,CALCULATE_DOC_COVERAGE 12m</p>",
        "id": 234781669,
        "sender_full_name": "Siwei",
        "timestamp": 1618537463
    },
    {
        "content": "<p>oh sorry, leave out <code>collect_trait_impls</code> from the passes</p>",
        "id": 234784997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618540404
    },
    {
        "content": "<p>Isn't there a <code>-Z time-passes</code> option or something that will show you the times for each pass?</p>",
        "id": 234945228,
        "sender_full_name": "Noah Lev",
        "timestamp": 1618622443
    },
    {
        "content": "<p>yes, -Z time-passes should work</p>",
        "id": 234948475,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618623273
    }
]