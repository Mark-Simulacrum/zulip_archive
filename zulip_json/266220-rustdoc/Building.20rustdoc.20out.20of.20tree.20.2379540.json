[
    {
        "content": "<p>one issue is that the <code>rust-toolchain</code> file will be constantly out of date, since rustc is always breaking :/</p>",
        "id": 218227437,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606679607
    },
    {
        "content": "<p>not much I can do about that though, other than toolstate</p>",
        "id": 218227444,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606679613
    },
    {
        "content": "<p>Does this mean that we just have to rebuild rustdoc each time we update nightly?</p>",
        "id": 218228072,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606680444
    },
    {
        "content": "<p>yes</p>",
        "id": 218228075,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680453
    },
    {
        "content": "<p>That's seems reasonable (even if slightly annoying). If someone is developing  on rustdoc, I don't think he will need to update nightly every day</p>",
        "id": 218228125,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606680499
    },
    {
        "content": "<p>well, almost every day <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218228130,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680508
    },
    {
        "content": "<p>see above about toolstate</p>",
        "id": 218228134,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680513
    },
    {
        "content": "<p>rustc changes frequently</p>",
        "id": 218228137,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680518
    },
    {
        "content": "<p>also when rebasing it will download a new toolchain too, since rebasing changes the version of rustc you're building against</p>",
        "id": 218228151,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree/near/218228151\">said</a>:</p>\n<blockquote>\n<p>also when rebasing it will download a new toolchain too, since rebasing changes the version of rustc you're building against</p>\n</blockquote>\n<p>the reason that doesn't normally rebuild is x.py has some logic that say \"just pretend all master toolchains are the same\" <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> which has its own issues <a href=\"https://github.com/rust-lang/rust/issues/76720\">https://github.com/rust-lang/rust/issues/76720</a></p>",
        "id": 218228405,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606680938
    },
    {
        "content": "<p>ok, so here are the flags <code>x.py</code> invokes compiletest with:</p>\n<div class=\"codehilite\"><pre><span></span><code>running: &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest&quot; &quot;--compile-lib-path&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage1/lib&quot; &quot;--run-lib-path&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;--rustc-path&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;--rustdoc-path&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage1/bin/rustdoc&quot; &quot;--src-base&quot; &quot;/home/joshua/rustc2/src/test/rustdoc&quot; &quot;--build-base&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/test/rustdoc&quot; &quot;--stage-id&quot; &quot;stage1-x86_64-unknown-linux-gnu&quot; &quot;--suite&quot; &quot;rustdoc&quot; &quot;--mode&quot; &quot;rustdoc&quot; &quot;--target&quot; &quot;x86_64-unknown-linux-gnu&quot; &quot;--host&quot; &quot;x86_64-unknown-linux-gnu&quot; &quot;--llvm-filecheck&quot; &quot;/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/ci-llvm/bin/FileCheck&quot; &quot;--host-rustcflags&quot; &quot;-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;--target-rustcflags&quot; &quot;-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/home/joshua/rustc2/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;--docck-python&quot; &quot;/usr/bin/python&quot; &quot;--lldb-python&quot; &quot;/usr/bin/python&quot; &quot;--gdb&quot; &quot;/usr/bin/gdb&quot; &quot;self&quot; &quot;--verbose&quot; &quot;--quiet&quot; &quot;--llvm-version&quot; &quot;11.0.0-rust-1.49.0-nightly&quot; &quot;--llvm-components&quot; &quot;aarch64 aarch64asmparser aarch64codegen aarch64desc aarch64disassembler aarch64info aarch64utils aggressiveinstcombine all all-targets analysis arm armasmparser armcodegen armdesc armdisassembler arminfo armutils asmparser asmprinter avr avrasmparser avrcodegen avrdesc avrdisassembler avrinfo binaryformat bitreader bitstreamreader bitwriter cfguard codegen core coroutines coverage debuginfocodeview debuginfodwarf debuginfogsym debuginfomsf debuginfopdb demangle dlltooldriver dwarflinker engine executionengine extensions frontendopenmp fuzzmutate globalisel hexagon hexagonasmparser hexagoncodegen hexagondesc hexagondisassembler hexagoninfo instcombine instrumentation interpreter ipo irreader jitlink libdriver lineeditor linker lto mc mca mcdisassembler mcjit mcparser mips mipsasmparser mipscodegen mipsdesc mipsdisassembler mipsinfo mirparser msp430 msp430asmparser msp430codegen msp430desc msp430disassembler msp430info native nativecodegen nvptx nvptxcodegen nvptxdesc nvptxinfo objcarcopts object objectyaml option orcerror orcjit passes powerpc powerpcasmparser powerpccodegen powerpcdesc powerpcdisassembler powerpcinfo profiledata remarks riscv riscvasmparser riscvcodegen riscvdesc riscvdisassembler riscvinfo riscvutils runtimedyld scalaropts selectiondag sparc sparcasmparser sparccodegen sparcdesc sparcdisassembler sparcinfo support symbolize systemz systemzasmparser systemzcodegen systemzdesc systemzdisassembler systemzinfo tablegen target textapi transformutils vectorize webassembly webassemblyasmparser webassemblycodegen webassemblydesc webassemblydisassembler webassemblyinfo windowsmanifest x86 x86asmparser x86codegen x86desc x86disassembler x86info xray&quot; &quot;--cc&quot; &quot;&quot; &quot;--cxx&quot; &quot;&quot; &quot;--cflags&quot; &quot;&quot; &quot;--adb-path&quot; &quot;adb&quot; &quot;--adb-test-dir&quot; &quot;/data/tmp/work&quot; &quot;--android-cross-path&quot; &quot;&quot;\n</code></pre></div>",
        "id": 218228480,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681066
    },
    {
        "content": "<p>I'm hoping not all of those are actually necessary</p>",
        "id": 218228482,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681073
    },
    {
        "content": "<p>let me see how clippy does this</p>",
        "id": 218228524,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681106
    },
    {
        "content": "<p>oh boy <a href=\"https://github.com/rust-lang/rust-clippy/blob/master/tests/compile-test.rs\">https://github.com/rust-lang/rust-clippy/blob/master/tests/compile-test.rs</a></p>",
        "id": 218228555,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681201
    },
    {
        "content": "<p>ok, I'm going to steal a page from clippy's book and use the stable version instead of the in-tree compile test</p>",
        "id": 218228777,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681554
    },
    {
        "content": "<p>it will rebuild a little more but I don't expect anyone to use both</p>",
        "id": 218228782,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681561
    },
    {
        "content": "<p>the in-tree one is only meant to be used as a binary and I would rather not put a build system in for the tests themselves</p>",
        "id": 218228826,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> does compiletest_rs have a way to run ui tests for rustdoc?</p>",
        "id": 218229022,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681882
    },
    {
        "content": "<p>telling it rustdoc is actually rustc seems doomed to failure</p>",
        "id": 218229025,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606681891
    },
    {
        "content": "<p>... is it still maintained? april was a while ago ...</p>",
        "id": 218229177,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682061
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree/near/218228130\">said</a>:</p>\n<blockquote>\n<p>well, almost every day <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>\n<p>Do you really update your nightly every day?</p>",
        "id": 218229206,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682129
    },
    {
        "content": "<p>actually I just realized this will be missing all the diff stuff I just added to rustdoc which is really unfortunate <a href=\"https://github.com/rust-lang/rust/pull/78752\">https://github.com/rust-lang/rust/pull/78752</a> - does <code>compiletest_rs</code> sync with the upstream version at all?</p>",
        "id": 218229212,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281841\">Robin Moussu</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree/near/218229206\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree/near/218228130\">said</a>:</p>\n<blockquote>\n<p>well, almost every day <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>\n<p>Do you really update your nightly every day?</p>\n</blockquote>\n<p>I don't use nightly at all, but you'd have to to build rustdoc without x.py</p>",
        "id": 218229251,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682164
    },
    {
        "content": "<p>you need the version of nightly that matches the source you have in-tree</p>",
        "id": 218229253,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682183
    },
    {
        "content": "<p>ah, yes. I was in the shoes of someone who build rustdoc, not use it for documenting rustc. Then yes, it's kind of anoying.</p>",
        "id": 218229270,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682226
    },
    {
        "content": "<p>building is what matters, not documenting</p>",
        "id": 218229289,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682274
    },
    {
        "content": "<p>rustdoc is using rustc's internal APIs</p>",
        "id": 218229290,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682281
    },
    {
        "content": "<p>but why do you need to build rustdoc as frequently? The CI nighly build, but no humans. Or am I missing something obvious?</p>",
        "id": 218229354,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682344
    },
    {
        "content": "<p>I don't understand - are you asking whether I build <em>rustdoc</em> almost every day?</p>",
        "id": 218229367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682379
    },
    {
        "content": "<p>(yes)</p>",
        "id": 218229369,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682383
    },
    {
        "content": "<p>Usually when I work on something, I fetch the master, work on it for as much time as needed, then (if needed) fetch again master, and rebase my branch. If I was working on rustdoc, I don't think I would fetch the master branch every day, unless I know something I'm working on depends on someone else work. I would fetch more realistically about one time a week I think. (this assume a somewhat stable codebase).</p>",
        "id": 218229499,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682543
    },
    {
        "content": "<p>oh I see what you mean - you're asking if I <em>rebase</em> every day</p>",
        "id": 218229520,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682586
    },
    {
        "content": "<blockquote>\n<p>are you asking whether I build <em>rustdoc</em> almost every day?</p>\n</blockquote>\n<p>rustdoc with up-to-date source fresh from the day</p>",
        "id": 218229525,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682596
    },
    {
        "content": "<p>it depends on the PRs I'm working on, I probably rebase a lot more than most contirbutors</p>",
        "id": 218229527,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682600
    },
    {
        "content": "<p>Ah, then yes, it would be really annoying for you.</p>",
        "id": 218229533,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682623
    },
    {
        "content": "<p>I'd say probably almost every day though, yeah</p>",
        "id": 218229534,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682627
    },
    {
        "content": "<p>I got a new computer just so it wouldn't take as long to build rustc <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218229539,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682638
    },
    {
        "content": "<p>especially for big PRs that need changes to rustc internals, and I need to compare before and after</p>",
        "id": 218229608,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682694
    },
    {
        "content": "<p>(note that I'm being very careful throughout this whole discussion to not change the process of building with x.py at all)</p>",
        "id": 218229627,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606682730
    },
    {
        "content": "<p>Anyway, it's time for me to eat, have a great day</p>",
        "id": 218229676,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606682768
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a></p>",
        "id": 218232577,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606686800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree/near/218229022\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> does compiletest_rs have a way to run ui tests for rustdoc?</p>\n</blockquote>\n<p>no idea. IMO we should actually move compiletest out of tree and stop maintaining it in tree</p>",
        "id": 218241410,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1606700692
    },
    {
        "content": "<p>oh I was actually thinking the other way, turning compiletest in-tree into a library and changing clippy to use a git dependency</p>",
        "id": 218241427,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606700740
    },
    {
        "content": "<p>that's less work for both sides: no more syncs, and it's easy to modify in-tree if needed</p>",
        "id": 218241433,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606700761
    },
    {
        "content": "<p>(although I was even thinking of cargo changes, but we don't need to wait for those: <a href=\"#narrow/stream/246057-t-cargo/topic/Depend.20on.20a.20binary.3F\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/Depend.20on.20a.20binary.3F</a>)</p>",
        "id": 218241481,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606700800
    },
    {
        "content": "<p>the current plan for <em>rustdoc</em> is actually to use x.py still though <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a></p>",
        "id": 218241549,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606700886
    },
    {
        "content": "<p>this is currently blocked on me figuring out how to slot things into rustbuild's caching, which is based on TypeId of all things: <a href=\"https://github.com/rust-lang/rust/pull/79540#issuecomment-735942001\">https://github.com/rust-lang/rust/pull/79540#issuecomment-735942001</a></p>",
        "id": 218616627,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606941763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you happen to have time to suggest an approach? no rush, but I don't want to jump into coding when I don't know how you want it tackled</p>",
        "id": 218764240,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607034709
    },
    {
        "content": "<p>uh not right this minute but if you want to assign me and set waiting-on-review I hope to schedule some review time this weekend, can engage more then (leave a comment too)</p>",
        "id": 218764355,
        "sender_full_name": "simulacrum",
        "timestamp": 1607034764
    },
    {
        "content": "<p>sounds great, thanks!</p>",
        "id": 218764392,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607034788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I have a christmas present for you :) <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a> is working</p>",
        "id": 220994581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609046775
    },
    {
        "content": "<p>Awesome! \\o/</p>",
        "id": 221011398,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609080938
    },
    {
        "content": "<p>lol I tried to rebase this over a 6-month old commit to see what would break and even git got confused - it was a commit from rustc_codegen_cranelift before the submodule sync <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221012296,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609082527
    },
    {
        "content": "<p>Don't try stuff like that! :o</p>",
        "id": 221012305,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609082555
    },
    {
        "content": "<p>when I have too much problems, I simply switch to master and then either port commits by hand (sometimes it works better) or cherry-pick them</p>",
        "id": 221012318,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609082592
    },
    {
        "content": "<p>well in practice it probably doesn't matter, but if someone tries this with an old enough commit it will break: </p>\n<blockquote>\n<p>This will break if you rebase an old enough branch (I think commits are kept at most 160 days?). This should fail gracefully and build from source in that case, possibly suggesting to rebase to a later commit.</p>\n</blockquote>",
        "id": 221012320,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609082604
    },
    {
        "content": "<p>my oldest rebase was years late</p>",
        "id": 221012324,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609082632
    },
    {
        "content": "<p>it was horrible haha</p>",
        "id": 221012326,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609082635
    },
    {
        "content": "<p>well the difference is this will break <em>before</em> the rebase</p>",
        "id": 221012438,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609082833
    },
    {
        "content": "<p>just by the passage of time</p>",
        "id": 221012439,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609082837
    },
    {
        "content": "<blockquote>\n<p>Since tracing is loaded from sysroot, it will be compiled with static_max_level_info even for rustdoc's own debugging.</p>\n</blockquote>\n<p>by the way, if someone has ideas for fixing this, please let me know</p>",
        "id": 221013014,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609083905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree.20.2379540/near/221013014\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Since tracing is loaded from sysroot, it will be compiled with static_max_level_info even for rustdoc's own debugging.</p>\n</blockquote>\n<p>by the way, if someone has ideas for fixing this, please let me know</p>\n</blockquote>\n<p>Ask in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a>? Probably unlikely someone will find the question here :)</p>",
        "id": 221032096,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609118266
    },
    {
        "content": "<p><a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Rustc.20loads.20sysroot.20artifacts.20before.20cargo.20ones.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Rustc.20loads.20sysroot.20artifacts.20before.20cargo.20ones.3F</a></p>",
        "id": 221078434,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609178228
    },
    {
        "content": "<p>and already solved! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 221081663,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609180776
    },
    {
        "content": "<p>down to 3 issues, only one of which I consider blocking</p>",
        "id": 221081687,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609180793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you have a minute to look at <a href=\"https://github.com/rust-lang/rust/pull/79540#issuecomment-751953277\">https://github.com/rust-lang/rust/pull/79540#issuecomment-751953277</a> ?</p>",
        "id": 222019825,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610064661
    },
    {
        "content": "<p>not right now, it's in my queue of prs. hopefully tomorrow or this weekend.</p>",
        "id": 222019849,
        "sender_full_name": "simulacrum",
        "timestamp": 1610064696
    },
    {
        "content": "<p>sounds great, thanks!</p>",
        "id": 222019856,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610064706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I saw you left a review, thanks. It was mostly focused on the implementation - could you take a look at <a href=\"https://github.com/rust-lang/rust/pull/79540#issuecomment-751953277\">https://github.com/rust-lang/rust/pull/79540#issuecomment-751953277</a> ? I think it's a better approach but it means a lot of the current code will change.</p>",
        "id": 222097342,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610125458
    },
    {
        "content": "<p>yes I am coming back to that</p>",
        "id": 222097365,
        "sender_full_name": "simulacrum",
        "timestamp": 1610125470
    },
    {
        "content": "<p>(probably tomorrow morning)</p>",
        "id": 222123829,
        "sender_full_name": "simulacrum",
        "timestamp": 1610138914
    }
]