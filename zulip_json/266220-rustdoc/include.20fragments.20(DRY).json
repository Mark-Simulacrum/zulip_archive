[
    {
        "content": "<p>hey, Im a rustdoc newb over here. Is there a way to indicate that I want the generated documentation to include some markdown that I have defined in one single place?</p>",
        "id": 264963119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639541486
    },
    {
        "content": "<p>The use case is: There’s one method that defines how some environment variables are processed. But lots of other initialization routines call that methods. I want to write down one Markdown table as the source of truth for what  the environment variables are, and then let all those other methods include it (in the sense of <code>include!</code>) in their generated doc.</p>",
        "id": 264963203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639541572
    },
    {
        "content": "<p>I think this is an example of what you want? <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/external-doc.rs\">https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/external-doc.rs</a></p>",
        "id": 264963273,
        "sender_full_name": "jsha",
        "timestamp": 1639541685
    },
    {
        "content": "<p>oh <code>doc = include_str!</code> will compose with other uses of <code>///</code> on that same item? Neat!</p>",
        "id": 264964335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639542645
    },
    {
        "content": "<p>You didn't read the blog post I guess: <a href=\"https://blog.guillaume-gomez.fr/articles/2021-08-03+Improvements+for+%23%5Bdoc%5D+attributes+in+Rust\">https://blog.guillaume-gomez.fr/articles/2021-08-03+Improvements+for+%23%5Bdoc%5D+attributes+in+Rust</a> ;)</p>",
        "id": 264983203,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639560380
    },
    {
        "content": "<p>It makes total sense now that I see it in action.</p>",
        "id": 265027881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639582865
    },
    {
        "content": "<p>and in fact the 1.54 release blog post even shows z<code>#[doc = …]</code> being composed with <code>///</code>, multiple times. I just missed it.</p>",
        "id": 265028049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639582915
    },
    {
        "content": "<p>Well, mixing <code>///</code> and <code>#[doc = \"...\"]</code> is quite old, the big change is allowing to have macro calls in <code>#[doc = ]</code></p>",
        "id": 265031437,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639584136
    }
]