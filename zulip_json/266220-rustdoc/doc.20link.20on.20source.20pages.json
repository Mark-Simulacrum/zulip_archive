[
    {
        "content": "<p>I updated <a href=\"https://github.com/rust-lang/rust/pull/89157\">https://github.com/rust-lang/rust/pull/89157</a>:</p>\n<ul>\n<li>The doc link is only present on an item definition in the left margin.</li>\n<li>If there are more than one definition on one line, only the first one gets a doc link.</li>\n</ul>\n<p>(It's mostly what <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> suggested :) ).</p>\n<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> had some concerns about that though. Mostly about the extra used space (please tell me if I missed something).</p>",
        "id": 264214744,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638994961
    },
    {
        "content": "<p>I think the biggest concern was the yellow background on the doc link, which makes it stand out _very_ strongly.</p>",
        "id": 264215961,
        "sender_full_name": "jsha",
        "timestamp": 1638995515
    },
    {
        "content": "<p>Haha. For the color I'll need help, please pick them, I'm very bad at that (as you can see). I wanted to make them stand out, but it's maybe \"a bit\" too much at this point. Do you have suggestions for the background color by any chance?</p>",
        "id": 264217237,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638996130
    },
    {
        "content": "<p>I think they should not stand out very much. So I would use:</p>\n<p>foreground color: same as default <code>a</code> (in other words no style required here)<br>\n background color: none (in other words no style required here)</p>",
        "id": 264217447,
        "sender_full_name": "jsha",
        "timestamp": 1638996231
    },
    {
        "content": "<p>So just \"raw\" links? No border or anything? (confirming before sending the update)</p>",
        "id": 264217708,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638996349
    },
    {
        "content": "<p>My main concern was about the background (though the space is an issue as well), but also just having these links at all will add clutter, no matter how they are styled.</p>",
        "id": 264217922,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638996465
    },
    {
        "content": "<p>So it was about the space used by them too.</p>",
        "id": 264218002,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638996496
    },
    {
        "content": "<p>For that, I don't really know how to improve it... :-/</p>",
        "id": 264218192,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638996595
    },
    {
        "content": "<p>Oh indeed, without the background, it looks much better (I added screenshots in the last comment)</p>",
        "id": 264219129,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> are you saying you'd prefer not to have the links at all, or to have a way to hide them when someone is not likely to use them (e.g. some of the ideas discussed on the PR, about hiding unless a line number is targeted)?</p>",
        "id": 264219180,
        "sender_full_name": "jsha",
        "timestamp": 1638997057
    },
    {
        "content": "<p>(and also updated the online version)</p>",
        "id": 264219187,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997060
    },
    {
        "content": "<p>I'd mark them up as <code>[doc]</code>, the natural opposite of <code>[src]</code>.</p>",
        "id": 264219462,
        "sender_full_name": "Michael Howell",
        "timestamp": 1638997175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264219180\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> are you saying you'd prefer not to have the links at all, or to have a way to hide them when someone is not likely to use them (e.g. some of the ideas discussed on the PR, about hiding unless a line number is targeted)?</p>\n</blockquote>\n<p>All else being equal, I'd prefer not to have them at all. Do we have evidence that this is a feature that will be useful enough to bear its weight?</p>\n<p>If we do end up adding it, I'd want it ideally to be hidden by default.</p>",
        "id": 264219468,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638997178
    },
    {
        "content": "<blockquote>\n<p>All else being equal, I'd prefer not to have them at all. Do we have evidence that this is a feature that will be useful enough to bear its weight?</p>\n</blockquote>\n<p>I know that it'll be quite useful (and I'm already using it) but I don't know for others. For me it's something obvious to be able to go back to an item documentation from the source code but maybe it's only me</p>",
        "id": 264219904,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997351
    },
    {
        "content": "<p>and I don't really know how to get feedback from potential users</p>",
        "id": 264220007,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997407
    },
    {
        "content": "<blockquote>\n<p>Do we have evidence that this is a feature that will be useful enough to bear its weight?</p>\n</blockquote>\n<p>I'm taking as a given that \"jump to definition\" is useful enough to bear its weight. During early reviews of \"jump to definition\", some people gave feedback that they thought it was important to be able to get from a definition back to the rendered docs.</p>\n<p>I think that makes sense. Say you click a definition link and it takes you to some type that is rather complicated or hard to understand, so you want to read the prose documentation. You can scroll up to see the documentation in its <code>///</code> form, but that can be hard to read, doesn't benefit from links, etc. So it's useful to be able to see the rendered documentation.</p>",
        "id": 264220021,
        "sender_full_name": "jsha",
        "timestamp": 1638997415
    },
    {
        "content": "<blockquote>\n<p>If we do end up adding it, I'd want it ideally to be hidden by default.</p>\n</blockquote>\n<p>Btw, do you mean for both desktop and mobile or just mobile?</p>",
        "id": 264220288,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997557
    },
    {
        "content": "<p>Both.</p>",
        "id": 264220359,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638997582
    },
    {
        "content": "<p>looking at the updated screenshot, it is much better without the background - but indeed it's still pretty distracting. The links break up the vertical rhythm of the gutter. Also, it's a little surprising the items with no doccomments have no doc link. Like <code>impl Struct</code>. I would recommend making the doc link available even for items with no doccomments, since they do have an entry in the doc view.</p>",
        "id": 264220367,
        "sender_full_name": "jsha",
        "timestamp": 1638997587
    },
    {
        "content": "<p>I guess part of my concern is that jump-to-definition keeps gaining more features.</p>",
        "id": 264220403,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638997613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264220367\">said</a>:</p>\n<blockquote>\n<p>looking at the updated screenshot, it is much better without the background - but indeed it's still pretty distracting. The links break up the vertical rhythm of the gutter. Also, it's a little surprising the items with no doccomments have no doc link. Like <code>impl Struct</code>. I would recommend making the doc link available even for items with no doccomments, since they do have an entry in the doc view.</p>\n</blockquote>\n<p>I'm pretty sure doc-less items get doc links as well; it's probably an issue with impls in particular.</p>",
        "id": 264220459,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638997644
    },
    {
        "content": "<p>This was always scheduled but maybe I didn't communicate it well enough. And for that I'm very sorry</p>",
        "id": 264220477,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997654
    },
    {
        "content": "<blockquote>\n<p>This was always scheduled </p>\n</blockquote>\n<p>I'm a bit confused, what do you mean?</p>",
        "id": 264220566,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638997687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264220367\">said</a>:</p>\n<blockquote>\n<p>looking at the updated screenshot, it is much better without the background - but indeed it's still pretty distracting. The links break up the vertical rhythm of the gutter. Also, it's a little surprising the items with no doccomments have no doc link. Like <code>impl Struct</code>. I would recommend making the doc link available even for items with no doccomments, since they do have an entry in the doc view.</p>\n</blockquote>\n<p>This is voluntary on my end: I didn't generate doc links for methods either, only for items' definition. I was wondering if it would be \"too much\" doc links</p>",
        "id": 264220614,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264220566\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>This was always scheduled </p>\n</blockquote>\n<p>I'm a bit confused, what do you mean?</p>\n</blockquote>\n<p>After the initial PR, I opened an issue to try to make it more clear what I had in mind: <a href=\"https://github.com/rust-lang/rust/issues/89095\">https://github.com/rust-lang/rust/issues/89095</a></p>",
        "id": 264220711,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638997767
    },
    {
        "content": "<blockquote>\n<p>I didn't generate doc links for methods either, only for items' definition. I was wondering if it would be \"too much\" doc links</p>\n</blockquote>\n<p>I think adding these would be good. Here's my logic: the \"cost\" of adding doc links on the left is that they stand out visually against the smooth flow of line numbers. Once we add any doc links, we've fully paid that cost and adding more more doc links doesn't make it worse.</p>\n<p>That said, I think what we're finding in this conversation is we may not want to pay that cost at all. Or maybe we want to find another way that comes at a lower cost.</p>",
        "id": 264221203,
        "sender_full_name": "jsha",
        "timestamp": 1638998039
    },
    {
        "content": "<p>Seems so indeed.</p>",
        "id": 264221333,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998090
    },
    {
        "content": "<p>(as an aside, I think we have similar logic about the \"stable since\" numbers: we try to hide them when they are the same as the top-level item's \"stable since.\" Presumably this is to avoid having \"too much\" of those numbers. But I think it winds up being more confusing to have stable since numbers in some places than others, and we've already paid the cost of having numbers in some places. But that's a bit off topic for this thread :-D )</p>",
        "id": 264221460,
        "sender_full_name": "jsha",
        "timestamp": 1638998152
    },
    {
        "content": "<blockquote>\n<p>Once we add any doc links, we've fully paid that cost and adding more more doc links doesn't make it worse.</p>\n</blockquote>\n<p>I don't really agree with this logic. It's true that interrupting the flow even a little bit has a cost, but the more links there are, the worse it is.</p>",
        "id": 264221544,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638998187
    },
    {
        "content": "<p>That said, I agree that consistency is valuable as well.</p>",
        "id": 264221583,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638998220
    },
    {
        "content": "<p>I'm starting to wonder if we could put the doc link directly on the right of the item</p>",
        "id": 264221764,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998299
    },
    {
        "content": "<p>in smaller font</p>",
        "id": 264221794,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998317
    },
    {
        "content": "<p>let me find an example</p>",
        "id": 264221799,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998323
    },
    {
        "content": "<p>item&lt;sup&gt;doc&lt;/sup&gt;</p>",
        "id": 264221923,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998399
    },
    {
        "content": "<p>complete failure...</p>",
        "id": 264221974,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998409
    },
    {
        "content": "<p>Another possibility: the item name could be the doc link. So for instance in:</p>\n<div class=\"codehilite\"><pre><span></span><code>let x: Foo;\n</code></pre></div>\n<p><code>Foo</code> would link to the definition. But in:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub struct Foo{}\n</code></pre></div>\n<p><code>Foo</code> would link to the doc. Perhaps not the most obvious thing, but avoids taking up extra space.</p>",
        "id": 264221990,
        "sender_full_name": "jsha",
        "timestamp": 1638998420
    },
    {
        "content": "<p>I can't copy the items like square power without having zulip sizing them correctly T_T</p>",
        "id": 264222008,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998426
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264221990\">said</a>:</p>\n<blockquote>\n<p>Another possibility: the item name could be the doc link. So for instance in:</p>\n<div class=\"codehilite\"><pre><span></span><code>let x: Foo;\n</code></pre></div>\n<p><code>Foo</code> would link to the definition. But in:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub struct Foo{}\n</code></pre></div>\n<p><code>Foo</code> would link to the doc. Perhaps not the most obvious thing, but avoids taking up extra space.</p>\n</blockquote>\n<p>:O</p>",
        "id": 264222031,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998442
    },
    {
        "content": "<p>it's okay; I don't think adding them directly on the right is a good plan. I think it would be confusing.</p>",
        "id": 264222050,
        "sender_full_name": "jsha",
        "timestamp": 1638998457
    },
    {
        "content": "<p>this is so simple and yet I wonder how we could fail to think about it</p>",
        "id": 264222054,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> So two things: do you think the feature is worth it? Does this suggestion seems acceptable to you?</p>",
        "id": 264222213,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I still think this feature needs an RFC</p>",
        "id": 264222316,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638998602
    },
    {
        "content": "<p>Sorry, I don't have time right now to respond. I'll try to respond later.</p>",
        "id": 264222325,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638998610
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264222316\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> I still think this feature needs an RFC</p>\n</blockquote>\n<p>I think it's a good point.</p>",
        "id": 264222362,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998626
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span>'s suggestion of linking the definition to the doc is good though</p>",
        "id": 264222367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638998630
    },
    {
        "content": "<p>I'll write something up so we have something a bit \"stronger\" than a tracking issue</p>",
        "id": 264222527,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638998699
    },
    {
        "content": "<p>my general thought on jump-to-definition: The source view is an enormously popular feature, particularly among experienced developers. When I talked about changing the display of the source link, people were worried that it would be harder to get to the source view.</p>\n<p>Given that it's so popular and useful, it's worth investment in making it better and more useful. For instance, one concrete way in which the source view is currently inadequate: If I see a private type in source view, I have no way to figure out what file that private type is in. It doesn't show up in search. Jump to definition can fix that.</p>\n<p>All that said, what I'd <em>really</em> like for a web based source view is something as powerful as rust-analyzer in my editor. Or at least as powerful as [GitHub's jump to definition features for other languages like Go, Java, Python, etc.](<a href=\"https://docs.github.com/en/repositories/working-with-files/using-files/navigating-code-on-github]\">https://docs.github.com/en/repositories/working-with-files/using-files/navigating-code-on-github]</a></p>\n<p>Is rustdoc the right place to implement such a powerful tool? Probably not, because we have a lot of complexity to burn down. Ideally what I'd like is some standalone tool that integrates rust-analyzer with HTML and JS to provide a robust source view; and then rustdoc could be a downstream consumer of that tool.</p>\n<p>That said, such a tool is potentially a long way away and nobody is working on it. So are we okay with continuing on the jump to definition work that gets us part of the way there? That's the question I think we should strive to answer in an RFC.</p>",
        "id": 264223456,
        "sender_full_name": "jsha",
        "timestamp": 1638999076
    },
    {
        "content": "<p>GitHub is actually working on exactly that tool, let me find the link</p>",
        "id": 264223638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638999150
    },
    {
        "content": "<p><a href=\"https://github.blog/2021-12-08-improving-github-code-search/\">https://github.blog/2021-12-08-improving-github-code-search/</a></p>",
        "id": 264223659,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638999161
    },
    {
        "content": "<p>So I think a reasonable alternative here is having [src] go to GitHub's source view where possible</p>",
        "id": 264223713,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638999189
    },
    {
        "content": "<p>that's exciting! I think it's not _quite_ what I'm looking for, at least not yet. According to the FAQ (<a href=\"https://cs.github.com/about/faq\">https://cs.github.com/about/faq</a>) it supports \"symbol extraction\" for Rust. But that doesn't get us things like \"go to definition\" and \"find references.\" That's part of the navigating-code feature I linked above, AFAICT.</p>",
        "id": 264224255,
        "sender_full_name": "jsha",
        "timestamp": 1638999405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> And that's something I strongly disagree with. We have very different positions on this: I still think about the time when I was a student without an internet connection and the only doc I had was the manual pages from linux. The situation is kinda the same whenever we travel. If we start relying on an external tool, we restrict a lot of things for our users. I think the trade-off is acceptable considering that it doesn't require much code (but that's still something we need to support).</p>",
        "id": 264224308,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638999426
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I'm not proposing that such a tool must necessarily be an online-only tool like GitHub's is. I'm imagining a tool that would be possible to run locally. Although I will admit, if GitHub made their code navigation features strong enough it would be tempting to lean on them rather than going our own way with jump to definition.</p>",
        "id": 264224542,
        "sender_full_name": "jsha",
        "timestamp": 1638999518
    },
    {
        "content": "<p>If it's an external tool, then its scope is limited. And if it's github, then you need an internet connection, so not a possibility either imo. Or did you mean something else?</p>",
        "id": 264224687,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1638999596
    },
    {
        "content": "<p>I think a lot of the concern is around maintenance burden on the rustdoc team. That's reasonable - to some extent source code navigation is tangential to the core purpose of rustdoc, which is around generating documentation. What I'm proposing is that a separate project outside the rust repo could iterate faster without putting too much burden on the rustdoc team. And the code could potentially be simpler by not intertwining with rustdoc's internals. For instance, rustdoc is complexly intertwined with rustc's internals. Does a source viewer need to be intertwined like that? I think no. It could probably use the public interface offered by rust-analyzer.</p>\n<p>If you started such a project, and it was a success - people finding it useful, code is clean and maintainable - then I think it would make sense to add it as a dependency to rustdoc as a replacement for the current source view. Presumably that would be the ultimate goal - to make this useful thing and get it in front of as many people as possible, via rustdoc.</p>\n<p>There is a risk to such an approach - for instance, the separate project might evolve into something the rustdoc team doesn't eventually want to use. That would limit its scope, as you say.</p>",
        "id": 264225872,
        "sender_full_name": "jsha",
        "timestamp": 1639000256
    },
    {
        "content": "<p>By the way, a question about the offline use case: For that case, you presumably have the source code locally on your computer. Why not use an IDE's source code navigation?</p>",
        "id": 264225931,
        "sender_full_name": "jsha",
        "timestamp": 1639000292
    },
    {
        "content": "<p>I use sublime text, I can't code with auto-completion, I get distracted too quickly</p>",
        "id": 264226221,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000435
    },
    {
        "content": "<p>Also, I originally tried the rust-analyzer approach: far too big</p>",
        "id": 264226293,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000455
    },
    {
        "content": "<p>As for the maintenance burden, I'm paid to maintain and work on rustdoc (and I'm quite lucky), so does this concern still exist in this regard?</p>",
        "id": 264226378,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000498
    },
    {
        "content": "<p>Do you keep a copy of vscode with rust-analyzer handy? Even if you don't use it for coding it could be useful for source code navigation. And I think it would be really great in terms of generating ideas for how a web-based source navigator should work.</p>",
        "id": 264226405,
        "sender_full_name": "jsha",
        "timestamp": 1639000512
    },
    {
        "content": "<p>I don't because it's just far too big :-/</p>",
        "id": 264226466,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000550
    },
    {
        "content": "<p>Ooh that's awesome. I didn't realize you are paid to work on rustdoc! Still, as others have pointed out, you need reviewers and I think none of the reviewers on rustdoc are paid to work on it. :-)</p>",
        "id": 264226467,
        "sender_full_name": "jsha",
        "timestamp": 1639000551
    },
    {
        "content": "<p>Far too big in terms of memory? Disk space?</p>",
        "id": 264226542,
        "sender_full_name": "jsha",
        "timestamp": 1639000570
    },
    {
        "content": "<p>You are absolutely right on this point</p>",
        "id": 264226554,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000578
    },
    {
        "content": "<p>Disk space and memory</p>",
        "id": 264226564,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000584
    },
    {
        "content": "<p>Can your employer buy you a bigger computer?</p>",
        "id": 264226592,
        "sender_full_name": "jsha",
        "timestamp": 1639000599
    },
    {
        "content": "<p>They can but it took me 8 months to get this one, so better not ^^'</p>",
        "id": 264226717,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000674
    },
    {
        "content": "<p>(I'm going to have to leave in a few minutes. Going to go see Dune on the big screen! Happy to continue chatting later)</p>",
        "id": 264226778,
        "sender_full_name": "jsha",
        "timestamp": 1639000685
    },
    {
        "content": "<p>(Dune was great)</p>",
        "id": 264226820,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000711
    },
    {
        "content": "<p>Well, now I'm really scared to be the only one in the team wanting this feature to be honest</p>",
        "id": 264226856,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000730
    },
    {
        "content": "<p>My main argument is that external tools are external tools and not provided by default, therefore it's not applicable for everyone. rust-analyzer was mainly based on JS, which is a problem in my opinion and their source code is far too big.</p>\n<p>I thought about writing an external crate that rustdoc could use, except that I don't really see how I can integrate it into rustdoc. I don't think it's possible this way.</p>\n<p>I see the problem for rustdoc's reviewers and I have no idea how to not make it an issue...</p>",
        "id": 264227243,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639000920
    },
    {
        "content": "<p>Btw, not all crates are available on github. And when looking at a crate documentation on <a href=\"http://docs.rs\">docs.rs</a>, I don't want to clone it locally to be able to browse its code \"efficiently\"</p>",
        "id": 264237587,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639006983
    },
    {
        "content": "<blockquote>\n<p>rust-analyzer was mainly based on JS</p>\n</blockquote>\n<p>I'm not sure what you mean; rust-analyzer is written in Rust.</p>",
        "id": 264237863,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639007234
    },
    {
        "content": "<p>I don't think we should integrate with potential future GitHub features, since rustdoc is supposed to work locally—and with non-GitHub–hosted repos too. And integrating with rust-analyzer would mean that we run rustc, and <em>then</em> run even more code.</p>\n<p>TBH, I think implementing jump-to-definition ourselves would add less maintenance burden than integrating with another tool.</p>",
        "id": 264237999,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639007367
    },
    {
        "content": "<p>I definitely see the value of jump-to-definition—I've used it a bit on the rustc docs myself—but it does add a decent amount of code to rustdoc.</p>",
        "id": 264238154,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639007475
    },
    {
        "content": "<p>I don't see why you would need this feature locally; you can just use rust-analyzer for that.</p>",
        "id": 264244258,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639012204
    },
    {
        "content": "<p>I think it's ok to be slightly less featureful for non-github repos; gitlab has pretty similar code browsing and we can fall back to the current source rendering for everything else.</p>",
        "id": 264244298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639012264
    },
    {
        "content": "<p>but this is exactly the sort of reason I think there should be an RFC, there are <em>lots</em> of possible approaches here</p>",
        "id": 264244308,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639012282
    },
    {
        "content": "<p>tbh I think the nicest version of this is Github Codespaces which has the benefit of already existing and being able to use rust-analyzer, but that only works for github hosted projects</p>",
        "id": 264244673,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639012631
    },
    {
        "content": "<p>that said the rustdoc version would let you switch between the docs and the source which could be nice</p>",
        "id": 264244702,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639012658
    },
    {
        "content": "<blockquote>\n<p>being able to use rust-analyzer,</p>\n</blockquote>\n<p>I've tried using Codespaces and it's said that rust-analyzer isn't currently supported. Have you been successful at using it?</p>",
        "id": 264247031,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639014890
    },
    {
        "content": "<p>maybe it doesn't work currently; my point is that I think it would be nicer than anything we can simulate in rustdoc with links</p>",
        "id": 264247693,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639015490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> you're not the only one who wants the feature. I want it too. I think it's quite useful. The question is mainly cost/benefit, where the cost is overall burden on the team, doc size, and UI complexity.</p>\n<p>From the above conversation it sounds like some of your requirements are:</p>\n<ol>\n<li>Works locally.</li>\n<li>Works on the web.</li>\n<li>Works with JS turned off.</li>\n<li>Works on low spec machines.</li>\n</ol>\n<p>If we only needed (1), rust-analyzer + an IDE would do. If we only needed (2), future GitHub features would do.</p>\n<p>Also I will continue to quibble with (3). Basic features working without JS is great, but for more complex features like this one we shouldn't paint ourselves into a corner by ruling out JS.</p>",
        "id": 264252428,
        "sender_full_name": "jsha",
        "timestamp": 1639020592
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> you're not the only one who wants the feature. I want it too. I think it's quite useful. The question is mainly cost/benefit, where the cost is overall burden on the team, doc size, and UI complexity.</p>\n</blockquote>\n<p>I second this.</p>\n<blockquote>\n<p>Also I will continue to quibble with (3). Basic features working without JS is great, but for more complex features like this one we shouldn't paint ourselves into a corner by ruling out JS.</p>\n</blockquote>\n<p>I agree with this as well.</p>",
        "id": 264252585,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639020747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264238154\">said</a>:</p>\n<blockquote>\n<p>I definitely see the value of jump-to-definition—I've used it a bit on the rustc docs myself—but it does add a decent amount of code to rustdoc.</p>\n</blockquote>\n<p>I guess it depends what you call a decent amount of code:</p>\n<div class=\"codehilite\"><pre><span></span><code>https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render/span_map.rs (which is basically a visitor gathering span)\nhttps://github.com/rust-lang/rust/blob/master/src/librustdoc/html/highlight.rs#L725-L753 (for generating links)\n</code></pre></div>\n\n<p>It's way under 300 lines (I counted the doc comments but excluded the tests). ;)</p>",
        "id": 264273528,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639041162
    },
    {
        "content": "<p>But in any case, I'll finish to write the RFC so we can all discuss on it directly there and agree on what we want or don't want.</p>",
        "id": 264273767,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639041283
    },
    {
        "content": "<p>By the way, there are two ways to convince people the cost/benefit is worthwhile: convince them the cost is lower than they think it is, or convince them the benefit is bigger than they think it is. I think you recognize this - you've mentioned it would be great to get more people to try out the feature so they could see how good it is. One thing you should make sure to do in the RFC is present some really compelling cases about why this lets people do a specific task they couldn't do before, or why some common task today would be much faster or more pleasant with this code. Using details like a specific crate, and specific types within that crate, would make things really clear. You could even host a version of that crate with jump-to-definition enabled, so people can see the difference.</p>",
        "id": 264351465,
        "sender_full_name": "jsha",
        "timestamp": 1639077040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> You are absolutely right: I'm a terrible seller. The more something is obvious to me, the more complicated it is to explain to others. However, this time I got lucky since you helped me last time, so I'm reusing some of this first work in the RFC. I added a link to the compiler docs in the RFC and a video. But a \"story case\" will be very helpful. I got some help from <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> as well who made some great suggestions so I'm gathering data to compare with alternatives. I'll certainly ask some of everyone's help here to ensure that:</p>\n<ol>\n<li>It's understandable for others than me.</li>\n<li>I didn't forget something obvious.</li>\n</ol>",
        "id": 264352784,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639077637
    },
    {
        "content": "<p>(guillaume is working on a pre-rfc in <a href=\"https://github.com/rust-lang/rfcs/compare/master...GuillaumeGomez:rustdoc-jump-to-definition\">https://github.com/rust-lang/rfcs/compare/master...GuillaumeGomez:rustdoc-jump-to-definition</a>; I left some comments on <a href=\"https://github.com/rust-lang/rfcs/commit/b198524057917f0191ee3c791199a56f7c51826a\">https://github.com/rust-lang/rfcs/commit/b198524057917f0191ee3c791199a56f7c51826a</a>)</p>",
        "id": 264354315,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639078372
    },
    {
        "content": "<p>I'll tell here once I update with new information provided btw</p>",
        "id": 264354376,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639078412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264273528\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/266220-rustdoc/topic/doc.20link.20on.20source.20pages/near/264238154\">said</a>:</p>\n<blockquote>\n<p>I definitely see the value of jump-to-definition—I've used it a bit on the rustc docs myself—but it does add a decent amount of code to rustdoc.</p>\n</blockquote>\n<p>I guess it depends what you call a decent amount of code:</p>\n<div class=\"codehilite\"><pre><span></span><code>https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render/span_map.rs (which is basically a visitor gathering span)\nhttps://github.com/rust-lang/rust/blob/master/src/librustdoc/html/highlight.rs#L725-L753 (for generating links)\n</code></pre></div>\n\n<p>It's way under 300 lines (I counted the doc comments but excluded the tests). ;)</p>\n</blockquote>\n<p>The original PR (<a href=\"https://github.com/rust-lang/rust/issues/84176\">#84176</a>) was <code>+707 -131</code> lines; I think it changed a lot of other files.</p>",
        "id": 264359778,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639080744
    },
    {
        "content": "<p>I cheated a bit: I updated the higlighter to pass the span map and updated some other places to allow it to work with the current code. A big part of this diff comes from tests and docs too. But if there is a bug in this feature, they are the two places you have to look at.</p>",
        "id": 264361002,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639081414
    },
    {
        "content": "<p>I only took into account what was needed in case you needed to update something related to this feature.</p>",
        "id": 264361075,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639081445
    },
    {
        "content": "<p>I updated the RFC. To make things simpler, I created a PR to my own repository so the comments aren't lost whenever I update: <a href=\"https://github.com/GuillaumeGomez/rfcs/pull/1\">https://github.com/GuillaumeGomez/rfcs/pull/1</a></p>\n<p>I left some comments in the document where I'm unsure of something. I hopefully didn't forget to fix any of Joshua's comments (when I reloaded the page of the previous commit, they disappeared...).</p>",
        "id": 264377981,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1639089614
    },
    {
        "content": "<p>Little ping in here (happy new year everyone!).</p>",
        "id": 266787929,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1641289732
    }
]