[
    {
        "content": "<p>In developing <a href=\"https://github.com/hkmatsumoto/roogle\">roogle</a> I noticed the output of rustdoc lacks items which the target crates has.<br>\nI'm using the json output of the standard library <code>std</code> generated by the rustdoc <a href=\"https://github.com/hkmatsumoto/rust/commit/ba1a0f7f0e3ba19dac739e19eb12485d1f14cf77\">I patched</a>, and the output does not contain items like <code>char::is_uppercase</code>. I suppose that <a href=\"https://github.com/hkmatsumoto/rust/blob/ba1a0f7f0e3ba19dac739e19eb12485d1f14cf77/src/librustdoc/json/mod.rs#L173\">this line</a> is pushing the items away, but in that case I think the swapped items should be present in the output, but not...</p>",
        "id": 250005015,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629387927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"331617\">@Hirochika Matsumoto</span> you've commented out the assert that would panic rustdoc when that situation occurs</p>",
        "id": 250005251,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388031
    },
    {
        "content": "<p>there are already lots of open bugs about the assert triggerring</p>",
        "id": 250005263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388039
    },
    {
        "content": "<p>there's no simple fix or it would have been fixed already</p>",
        "id": 250005292,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388060
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83720\">https://github.com/rust-lang/rust/issues/83720</a> and <a href=\"https://github.com/rust-lang/rust/issues/83718\">https://github.com/rust-lang/rust/issues/83718</a> are a couple of the issues</p>",
        "id": 250005951,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Thanks I'll take a look! <code>A-rustdoc-json</code> label is the label for this I guess?</p>",
        "id": 250006100,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629388408
    },
    {
        "content": "<p>yup</p>",
        "id": 250006127,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388414
    },
    {
        "content": "<p>thank you for working on it!</p>",
        "id": 250007171,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629388866
    },
    {
        "content": "<p>By searching for <code>use [a-zA-Z0-9_]* as [a-zA-Z0-9_]*;$</code> it turned out that <code>is_uppercase</code> nor <code>char</code> is reexported, so some orthogonal problems are the cause.<br>\nI used <code>cargo +stage1 rustdoc -- --output-format json -Z unstable-options</code> on <code>&lt;path to local rust clone&gt;/library/std</code> to get a json file. Do you think this does the trick?</p>",
        "id": 250009652,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629390001
    },
    {
        "content": "<p>what do you mean by \"does the trick\"?</p>",
        "id": 250010469,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629390427
    },
    {
        "content": "<p>I would expect that to generate the .json file if that's what you mean</p>",
        "id": 250010498,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629390438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Json.20output.20lacks.20some.20item.20which.20are.20supposed.20to.20be.20there/near/250010498\">said</a>:</p>\n<blockquote>\n<p>I would expect that to generate the .json file if that's what you mean</p>\n</blockquote>\n<p>Yes that's what I meant.</p>",
        "id": 250028460,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629398183
    },
    {
        "content": "<p>Okay, the problem is occurring because rustdoc's json backend somehow ignores/skips some kind of items (functions, impls at least) which has `#[lang = \"...\"] in its attributes.</p>",
        "id": 250028669,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629398282
    },
    {
        "content": "<p>oh <em>fun</em></p>",
        "id": 250028975,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629398413
    },
    {
        "content": "<p>on the bright side, that is probably an easy fix if you can find where to put it</p>",
        "id": 250029004,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629398424
    },
    {
        "content": "<p>Yup, the html backend does not skip them, so I suppose comparing two backends will show me where to edit</p>",
        "id": 250029147,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629398498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I've managed to solve this problem! The cause was that, <code>impl</code>s are indexed <a href=\"https://github.com/rust-lang/rust/blob/80dad6477520553899049c994a6f534dce5a4951/src/librustdoc/json/mod.rs#L166-L172\">here</a> but the if-lets don't cover <code>impl &lt;prim ty&gt;</code> case.</p>",
        "id": 250272670,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629636646
    },
    {
        "content": "<p>That's great! Could you make a PR with the fix? Feel free to ask me to review, I'm jyn514 on GitHub :)</p>",
        "id": 250272685,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629636685
    },
    {
        "content": "<p>The patched rustdoc  <a href=\"https://github.com/hkmatsumoto/rust/commit/f598ac1bd766d7ee87611c0ad6eb6e355b62b3d0\">https://github.com/hkmatsumoto/rust/commit/f598ac1bd766d7ee87611c0ad6eb6e355b62b3d0</a> correctly indexes prmimitives :)</p>",
        "id": 250272687,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629636696
    },
    {
        "content": "<p>Ok, I'll send a PR</p>",
        "id": 250272705,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1629636715
    }
]