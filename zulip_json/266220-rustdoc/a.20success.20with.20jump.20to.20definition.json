[
    {
        "content": "<p>I had a use case for jump to definition today, and tried it out. I'm a big fan now!</p>\n<p>I was reading the documentation for CHACHA20_POLY1305: <a href=\"https://docs.rs/ring/0.16.20/src/ring/aead/chacha20_poly1305.rs.html#28-35\">https://docs.rs/ring/0.16.20/src/ring/aead/chacha20_poly1305.rs.html#28-35</a>. In particular, its initializer says <code>max_input_len: super::max_input_len(64, 1)</code> and I wanted to see if <code>max_input_len</code> was a <code>const fn</code>. It was hard to do this from the source view:</p>\n<ul>\n<li>Since it's a private function, I couldn't use search.</li>\n<li>Since it was in a separate .rs file, I couldn't use the browser's search function.</li>\n<li>And since there were a lot of files in <code>super</code>, I couldn't figure out which file I needed to click over to.</li>\n</ul>\n<p>So I used my local checkout of <code>ring</code> and ran <code>cargo rustdoc --open -- -Z unstable-options --generate-link-to-definition</code>, then browsed to the same spot; and sure enough I could link straight to max_input_len.</p>\n<p>Of course, given I had a local checkout, I could have used vscode + rust-analyzer to find this, but if we eventually push link-to-definition for everyone, everyone can have this experience when browsing the source on rustdoc.</p>",
        "id": 261985563,
        "sender_full_name": "jsha",
        "timestamp": 1637267123
    },
    {
        "content": "<p>one small piece of feedback (which I'll add to an issue): The linkification of primitive types like <code>u8</code> and <code>usize</code> is distracting and not that useful. I think we shouldn't linkify primitive types in jump-to-definition.</p>",
        "id": 261985890,
        "sender_full_name": "jsha",
        "timestamp": 1637267264
    },
    {
        "content": "<p>(counterpoint: we linkify primitive types in the doc view, so not linking them in JTD is inconsistency... but it would probably save a lot of HTML size, and also saves some visual clutter)</p>",
        "id": 261986022,
        "sender_full_name": "jsha",
        "timestamp": 1637267309
    },
    {
        "content": "<p>Nice! We still have a lot of things to agree on before moving forward on it though. ;)</p>\n<p>As for the primitive types, for consistency we can link them, but not highlight them?</p>",
        "id": 261986106,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637267349
    },
    {
        "content": "<p>Or simply not generating links, I'm fine with both</p>",
        "id": 261986154,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637267376
    },
    {
        "content": "<p>There were also some disagreement on the highlight, some would prefer something less distracting, like dotted underline. An opinion on this maybe?</p>",
        "id": 261986382,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1637267473
    },
    {
        "content": "<p>I posted an idea about the highlight in <a href=\"https://github.com/rust-lang/rust/issues/88120#issuecomment-973244056\">https://github.com/rust-lang/rust/issues/88120#issuecomment-973244056</a>.</p>",
        "id": 261992077,
        "sender_full_name": "jsha",
        "timestamp": 1637270270
    }
]