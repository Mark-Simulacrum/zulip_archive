[
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> has been working on removing doctree types. Would it be duplicated effort for me to look at removing doctree::Macro, or a welcome break up of effort? I say this because I was looking at issue <a href=\"https://github.com/rust-lang/rust/issues/76761\">rust/76761</a>,  and figured it would be better to remove the Macro object before making any changes, instead of after.</p>",
        "id": 218030397,
        "sender_full_name": "CraftSpider",
        "timestamp": 1606416716
    },
    {
        "content": "<p>that would be really great!</p>",
        "id": 218030616,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606416945
    },
    {
        "content": "<p>the relevant bit is <a href=\"https://github.com/rust-lang/rust/blob/65ecc481fac7ceced57d973a580d0a7ccbdcb192/src/librustdoc/visit_ast.rs#L343\">https://github.com/rust-lang/rust/blob/65ecc481fac7ceced57d973a580d0a7ccbdcb192/src/librustdoc/visit_ast.rs#L343</a></p>",
        "id": 218030625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606416959
    },
    {
        "content": "<p>the idea is to, instead of returning a new <code>Macro</code> there and storing it on the output module (<code>om</code>), store the <code>MacroDef</code> directly instead</p>",
        "id": 218030706,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606417010
    },
    {
        "content": "<p>however it shouldn't change the behavior, so anything tricky going on in <code>visit_ast</code> should be moved to <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/clean/mod.rs\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/clean/mod.rs</a> instead</p>",
        "id": 218030726,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606417031
    },
    {
        "content": "<p>there should be an <code>impl Clean for doctree::Macro</code> somewhere</p>",
        "id": 218030742,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606417063
    },
    {
        "content": "<p>Yep, I already have the impl up on my screen, and I'm looking through your merged PRs for where else I'll need to look. Thank you for the help</p>",
        "id": 218030819,
        "sender_full_name": "CraftSpider",
        "timestamp": 1606417130
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79372\">https://github.com/rust-lang/rust/pull/79372</a> makes some changes to <code>from_def_id_and_kind</code>, but not super major, just enough that it will be annoying to rebase over</p>",
        "id": 218030853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606417157
    },
    {
        "content": "<p>Annoying thing: A macro ends up coming from a hir::MacroDef instead of a hir::Item (They are almost identical structs, with the difference being Item has a <code>kind: ItemKind&lt;'hir&gt;</code> and MacroDef has an <code>ast: ast::MacroDef</code>). I guess clean::Module keeps a seperate macro vector, instead of adding them to items, but they're added as a <code>(MacroDef, Option&lt;Ident&gt;)</code> now.</p>",
        "id": 218031633,
        "sender_full_name": "CraftSpider",
        "timestamp": 1606417868
    },
    {
        "content": "<p>sure, seems reasonable</p>",
        "id": 218031726,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606417939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Remove.20doctree.3A.3AMacro/near/218030853\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/79372\">https://github.com/rust-lang/rust/pull/79372</a> makes some changes to <code>from_def_id_and_kind</code>, but not super major, just enough that it will be annoying to rebase over</p>\n</blockquote>\n<p>It looks like that was approved, so I may wait till that's merged and I can pull it in, then commit. That way all my changes are on top of it.</p>",
        "id": 218033690,
        "sender_full_name": "CraftSpider",
        "timestamp": 1606419824
    },
    {
        "content": "<p>you don't need to wait until it's merged, you can rebase on top of it</p>",
        "id": 218035316,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606421597
    },
    {
        "content": "<p><code>git fetch origin pull/79372/head &amp;&amp; git rebase FETCH_HEAD</code></p>",
        "id": 218035329,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606421616
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/pull/79455\">https://github.com/rust-lang/rust/pull/79455</a></p>",
        "id": 218045774,
        "sender_full_name": "CraftSpider",
        "timestamp": 1606434426
    }
]