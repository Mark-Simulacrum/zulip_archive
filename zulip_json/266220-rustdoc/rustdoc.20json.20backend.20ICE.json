[
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I recently tried to get the \"new\" rustdoc json backend working to maybe build a tool on top of this that shows which API's have changed between two crate versions. While running <code>cargo doc</code> with the following <code>RUSTDOCFLAGS='-Z unstable-options --output-format=json' </code> set on diesel I encounter the following ICE:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;assertion failed: `(left == right)`\n  left: `Item { id: Id(&quot;0:1675&quot;), crate_id: 0, name: Some(&quot;Expression&quot;), span: Some(Span { filename: &quot;diesel/src/expression/mod.rs&quot;, begin: (221, 4), end: (221, 27) }), visibility: Public, docs: None, links: {}, attrs: [], deprecation: None, inner: Typedef(Typedef { type_: Generic(&quot;T&quot;), generics: Generics { params: [], where_predicates: [] } }) }`,\n right: `Item { id: Id(&quot;0:1675&quot;), crate_id: 0, name: Some(&quot;Expression&quot;), span: Some(Span { filename: &quot;diesel/src/expression/mod.rs&quot;, begin: (221, 4), end: (221, 27) }), visibility: Default, docs: None, links: {}, attrs: [], deprecation: None, inner: Typedef(Typedef { type_: Generic(&quot;Self&quot;), generics: Generics { params: [], where_predicates: [] } }) }`&#39;, src/librustdoc/json/mod.rs:195:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nerror: Unrecognized option: &#39;output-format&#39;\n\nerror: could not document `diesel`\n</code></pre></div>\n<p>This happens for the current nightly (rustdoc 1.57.0-nightly (5b210643e 2021-10-11)).<br>\nI've reported this issue <a href=\"https://github.com/rust-lang/rust/issues/89097\">here</a>, but wanted to ask if there is an easy workaround available.</p>",
        "id": 257179626,
        "sender_full_name": "weiznich",
        "timestamp": 1634033925
    },
    {
        "content": "<p>I would like so much, this ICE is very common but there is no workaround to my knowledge. The problem seems to be the difference between the actual data and the one coming from the \"metadata\".</p>",
        "id": 257180487,
        "sender_full_name": "Urgau",
        "timestamp": 1634034365
    }
]