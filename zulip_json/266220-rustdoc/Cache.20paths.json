[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86798\">https://github.com/rust-lang/rust/issues/86798</a> is probably causing lots of bugs :/ if someone has time it would be nice to look into</p>",
        "id": 244655006,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625194826
    },
    {
        "content": "<p>I can take a look <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 244658998,
        "sender_full_name": "Stu",
        "timestamp": 1625200712
    },
    {
        "content": "<p>Okay this is going to be annoying and hard to fix. I nailed it down to 4-5 tests that are failing, but I can't figure it out right now.</p>",
        "id": 244819243,
        "sender_full_name": "Stu",
        "timestamp": 1625338537
    },
    {
        "content": "<p>yeah that was about what I expected <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 244819308,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625338651
    },
    {
        "content": "<p>If I fix one test, another one is failing, if I fix that one, the other one is failing again <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 244819356,
        "sender_full_name": "Stu",
        "timestamp": 1625338689
    },
    {
        "content": "<p>what approach are you taking? merge everything into paths?</p>",
        "id": 244819374,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625338755
    },
    {
        "content": "<p>Yes. Everything is in one map right now.</p>",
        "id": 244819409,
        "sender_full_name": "Stu",
        "timestamp": 1625338791
    },
    {
        "content": "<p>ok. and what tests are failing?</p>",
        "id": 244819574,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625338942
    },
    {
        "content": "<p>I can send you later. I'm working on another PR right now <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 244819582,
        "sender_full_name": "Stu",
        "timestamp": 1625338969
    },
    {
        "content": "<p>haha <a href=\"https://github.com/rust-lang/rust/pull/86644\">https://github.com/rust-lang/rust/pull/86644</a> is super useful too :)</p>",
        "id": 244819594,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625338988
    },
    {
        "content": "<p>have you tried worktrees btw?</p>",
        "id": 244819596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625338992
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/building/suggested.html#working-on-multiple-branches-at-the-same-time\">https://rustc-dev-guide.rust-lang.org/building/suggested.html#working-on-multiple-branches-at-the-same-time</a></p>",
        "id": 244819604,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625339000
    },
    {
        "content": "<p>I kinda use them. Right now I have two worktrees but I need more haha</p>",
        "id": 244819631,
        "sender_full_name": "Stu",
        "timestamp": 1625339043
    },
    {
        "content": "<p>since <a href=\"https://github.com/rust-lang/rust/pull/82653\">https://github.com/rust-lang/rust/pull/82653</a> it should be super cheap to add more :)</p>",
        "id": 244819651,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625339073
    },
    {
        "content": "<p>err I guess that isn't merged yet</p>",
        "id": 244819653,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625339089
    },
    {
        "content": "<p>but you can cherry-pick it</p>",
        "id": 244819654,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625339094
    },
    {
        "content": "<p>Thats pretty cool</p>",
        "id": 244819674,
        "sender_full_name": "Stu",
        "timestamp": 1625339146
    },
    {
        "content": "<p>/me currently has 4 worktrees <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> </p>\n<p>but I haven't used the 4th in a while</p>",
        "id": 244819814,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625339353
    },
    {
        "content": "<p>Now I have 3 tmux windows, in every one is a separate rustc setup to work on haha</p>",
        "id": 244819893,
        "sender_full_name": "Stu",
        "timestamp": 1625339422
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>failures:\n    [rustdoc] rustdoc/elided-lifetime.rs\n    [rustdoc] rustdoc/hidden-impls.rs\n    [rustdoc] rustdoc/intra-doc/cross-crate/submodule-outer.rs\n    [rustdoc] rustdoc/sidebar-links-to-foreign-impl.rs\n</code></pre></div>\n<p>These are the failing tests. If I try to fix <code>hidden-impls.rs</code>, <code>rustdoc/issue-43701.rs </code> is apparently failing, as were they mutually exclusive</p>",
        "id": 244820265,
        "sender_full_name": "Stu",
        "timestamp": 1625340051
    },
    {
        "content": "<p>Both of these have to do with <a href=\"https://github.com/rust-lang/rust/blob/56dee7c49ecdec4c2c9eccc6ff966cf58847bda6/src/librustdoc/html/render/write_shared.rs#L531\">this</a> line:</p>",
        "id": 244820275,
        "sender_full_name": "Stu",
        "timestamp": 1625340110
    },
    {
        "content": "<p><code>elided-lifetime.rs</code> is about a missing link in the re-exported methods return type</p>",
        "id": 244820341,
        "sender_full_name": "Stu",
        "timestamp": 1625340198
    },
    {
        "content": "<p>I can open a WIP PR so you can see yourself. But I have a hard time figuring out why these are failing. Maybe you can find out faster</p>",
        "id": 244820410,
        "sender_full_name": "Stu",
        "timestamp": 1625340324
    },
    {
        "content": "<p>probably not <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> rustdoc is way too complicated</p>",
        "id": 244820455,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625340379
    },
    {
        "content": "<p>at a guess, I would <em>expect</em> the issue to be a missing <code>is_local()</code> check somewhere?</p>",
        "id": 244820462,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625340401
    },
    {
        "content": "<p>but I've never seen these tests before</p>",
        "id": 244820464,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625340406
    },
    {
        "content": "<p>Like <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> said mostly. If it can help: maybe we should make it into an enum so then it would be enforced by the type directly wether it's local or not. It'd require more changes but it will be impossible to forget a check. :)</p>",
        "id": 244853545,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625395818
    },
    {
        "content": "<p>(I mean a map of enum where paths are variants of the enum)</p>",
        "id": 244853562,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625395870
    },
    {
        "content": "<p>In general, it feels like enums are the secret to improving rustdoc's code quality :)</p>",
        "id": 244880956,
        "sender_full_name": "Noah Lev",
        "timestamp": 1625438270
    },
    {
        "content": "<p>Thatâ€™s a good idea. I will try that</p>",
        "id": 244893806,
        "sender_full_name": "Stu",
        "timestamp": 1625460066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Cache.20paths/near/244880956\">said</a>:</p>\n<blockquote>\n<p>In general, it feels like enums are the secret to improving rustdoc's code quality :)</p>\n</blockquote>\n<p>That's generally a good way to ensure that specific checks are not forgotten. :)</p>",
        "id": 244932614,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625489804
    },
    {
        "content": "<p>Already worked awesome with fake def ids ;)</p>",
        "id": 244961572,
        "sender_full_name": "Stu",
        "timestamp": 1625508028
    },
    {
        "content": "<p>Damn. Enums are really awesome. I converted all paths to use enums and only two tests failing and they were super easy to fix.</p>",
        "id": 245063187,
        "sender_full_name": "Stu",
        "timestamp": 1625588425
    },
    {
        "content": "<p>Pull Request is <a href=\"https://github.com/rust-lang/rust/pull/86909\">up</a></p>",
        "id": 245063733,
        "sender_full_name": "Stu",
        "timestamp": 1625588704
    },
    {
        "content": "<p>holy shit rustdoc is soo much fun. Gimme more issues like the DefId and the Cache paths ones :)</p>",
        "id": 245072247,
        "sender_full_name": "Stu",
        "timestamp": 1625592723
    },
    {
        "content": "<p>If you have time and motivation, you can review <a href=\"https://github.com/rust-lang/rust/pull/86841\">https://github.com/rust-lang/rust/pull/86841</a> if you want. ;)</p>",
        "id": 245100195,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625606355
    },
    {
        "content": "<p>Otherwise I approved your PR, nice job! Maybe <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> wants to take a look too so I'll approve in a few days if he doesn't have time. (ping me otherwise I'll forget)</p>",
        "id": 245100521,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625606521
    },
    {
        "content": "<p>left a review</p>",
        "id": 245121839,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625627114
    },
    {
        "content": "<p>sorry to burst your bubble :(</p>",
        "id": 245121842,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625627120
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"230287\">Stu</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Cache.20paths/near/245072247\">said</a>:</p>\n<blockquote>\n<p>holy shit rustdoc is soo much fun. Gimme more issues like the DefId and the Cache paths ones :)</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/84619\">https://github.com/rust-lang/rust/issues/84619</a> and <a href=\"https://github.com/rust-lang/rust/issues/84304\">https://github.com/rust-lang/rust/issues/84304</a>, I would describe all three as \"pretty hard\"</p>",
        "id": 245121927,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625627220
    },
    {
        "content": "<p>but not \"give up on the whole thing and create an MCP to change the compiler to make rustdoc's life easier\" hard which is currently the hardest I've found <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <a href=\"https://github.com/rust-lang/rust/issues/83761\">https://github.com/rust-lang/rust/issues/83761</a></p>",
        "id": 245121948,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625627272
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Cache.20paths/near/245121842\">said</a>:</p>\n<blockquote>\n<p>sorry to burst your bubble :(</p>\n</blockquote>\n<p>It's fine, I'm glad you reviewed it (I was surprised there was no change in the tests but didn't think much of it). However I think the approch is the correct one: having an enum to prevent forgetting the <code>def_id.is_local()</code> is a good idea in my opinion. However it needs to be correctly filled as well</p>",
        "id": 245145179,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625646163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> the problem is they are not in sync. The code enforces a check on the value, not the key, and it's possible for the DefId to be local without the value being local and vice versa. So I think introducing a check on the value is the wrong approach.</p>",
        "id": 245176156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625663267
    },
    {
        "content": "<p>(and I'm dubious that it's <em>so</em> common to treat local paths differently we need to enforce it)</p>",
        "id": 245176271,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625663296
    },
    {
        "content": "<p>Thanks for the explanations. Then indeed, my approach was the wrong one</p>",
        "id": 245185326,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625666812
    },
    {
        "content": "<p>So I reworked my code and now I combined both solutions. The <code>paths</code> map is still a <code>HashMap&lt;DefId, CachedPath&gt;</code>, but on every insert I check if DefId and cached path match. This works really well and there are only 3 tests still failing, which are super annoying to fix because I think they relied on that there were external <code>DefId</code>s  in the old <code>paths</code> map</p>",
        "id": 245594911,
        "sender_full_name": "Stu",
        "timestamp": 1625990548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> yeah that sounds annoying - you're allowed to update the usage sites btw, if checking <code>extern_paths</code> in addition or something works than that seems reasonable :)</p>",
        "id": 245606431,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626009190
    },
    {
        "content": "<p>Yea I try to, but it's hard because I have no idea how some of the problems worked before my changes.</p>",
        "id": 245606714,
        "sender_full_name": "Stu",
        "timestamp": 1626009544
    },
    {
        "content": "<p>So one of the problems is that the <code>elided-lifetime.rs</code> test is failing because the return types on the re-exported methods do not have an anchor to the struct. This is caused because the crate that is <code>inline</code>d has an <code>Unknown</code> external location which causes <a href=\"https://github.com/rust-lang/rust/blob/4581c4ef6ff388dd624bdceb484fb03c33d7bae4/src/librustdoc/html/format.rs#L505\">this</a> branch to be taken so <code>None</code> is returned and there is no link.</p>",
        "id": 245607104,
        "sender_full_name": "Stu",
        "timestamp": 1626010030
    },
    {
        "content": "<p>Wait, I think I know why. Writing out a problem really seems to help <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 245607198,
        "sender_full_name": "Stu",
        "timestamp": 1626010152
    },
    {
        "content": "<p>Okay nvm. I still have no idea</p>",
        "id": 245607732,
        "sender_full_name": "Stu",
        "timestamp": 1626011066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> if it's inlined, it shouldn't be in the external crate, rustdoc should copy the documentation into the current crate</p>",
        "id": 245610457,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626014939
    },
    {
        "content": "<p>hmm, are you maybe checking the DefId of the original definition instead of the <code>use</code>?</p>",
        "id": 245610462,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626014950
    },
    {
        "content": "<p>It's not an actual <code>use</code> item. It's an <code>extern crate</code> one</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[doc(inline)]</span><span class=\"w\"></span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">bar</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 245610620,
        "sender_full_name": "Stu",
        "timestamp": 1626015194
    }
]