[
    {
        "content": "<p>I was wondering if someone could help with a broken intra-doc link issue.  It is breaking CI on a few projects (like Cargo), and was introduced in yesterday's nightly.</p>\n<p>The issue is that the link to <code>as_mut_ptr</code> in <a href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html#method.as_ptr\">this section</a> is broken.  It is a page-relative link to <code>#method.as_mut_ptr</code>.</p>\n<p>What is strange is that when the std docs are built via <code>./x.py test</code>, the link is correct (it is <code>../../std/primitive.slice.html#method.as_mut_ptr</code>).  So the linkchecker on rust's CI is passing.  However, the docs as created for distribution are broken.</p>",
        "id": 230070450,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615571248
    },
    {
        "content": "<p>It is hard to tell if it is <a href=\"https://github.com/rust-lang/rust/issues/82641\">#82641</a> or <a href=\"https://github.com/rust-lang/rust/issues/82960\">#82960</a>.  I suspect it is <a href=\"https://github.com/rust-lang/rust/issues/82641\">#82641</a>, but it is hard to tell what that PR is doing (there isn't a description, and the link to zulip doesn't really explain anything to me).</p>",
        "id": 230074907,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615573108
    },
    {
        "content": "<p>Oh, I think this might be due to <a href=\"https://github.com/rust-lang/rust/issues/82950\">#82950</a>, nevermind.   The linkcheck scripts use latest master against most recent nightly, and the two are out of sync today. It should resolve tomorrow.</p>",
        "id": 230084480,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615577378
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/82641\">#82641</a> doesn't have anything to do with the generated /std/ docs, it only affects nightly-rustc.</p>",
        "id": 230091364,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615580429
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/266220-rustdoc/topic/broken.20intra-doc.20link.20issue/near/230084480\">said</a>:</p>\n<blockquote>\n<p>Oh, I think this might be due to <a href=\"https://github.com/rust-lang/rust/issues/82950\">#82950</a>, nevermind.   The linkcheck scripts use latest master against most recent nightly, and the two are out of sync today. It should resolve tomorrow.</p>\n</blockquote>\n<p>I'm not sure what you mean by this. <a href=\"https://doc.rust-lang.org/beta/std/io/struct.IoSlice.html#method.as_ptr\">https://doc.rust-lang.org/beta/std/io/struct.IoSlice.html#method.as_ptr</a> is also broken, as is stable. Could you post the CI error you're seeing?</p>",
        "id": 230091609,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615580545
    },
    {
        "content": "<p>but yes, I would expect this to be 82950 if anything</p>",
        "id": 230093247,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615581137
    },
    {
        "content": "<p>The error looks like <a href=\"https://github.com/rust-lang/cargo/runs/2096613537\">this</a>.</p>\n<p>All external books use the <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/linkchecker/linkcheck.sh\"><code>linkcheck.sh</code></a> script to validate links in their own CI in the same way as <code>rust-lang/rust</code> does.  One limitation is that it fetches the latest copy of <code>linkchecker/main.rs</code>, but runs against the latest nightly docs.  When exceptions are removed from the linkchecker, there's a &lt;24 hour window where CI might fail since the two are slightly out of sync.  Once the next nightly is published, everything should be ok.</p>\n<p>This is the first time I've seen this in the past couple of years, so I'm not too concerned about it.  I was just confused as to what was happening, and had forgotten this possibility.</p>",
        "id": 230095221,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615582136
    },
    {
        "content": "<p>oh I see, cargo is using the linkcheck binary itself</p>",
        "id": 230095367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615582211
    },
    {
        "content": "<p>Hopefully we get to a point where all exceptions can be removed. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 230095389,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615582223
    },
    {
        "content": "<p>that would need core/alloc/std to be merged I think</p>",
        "id": 230095420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615582236
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/b3e19a221e63dcffdef87e12eadf1f36a8b90295/src/tools/linkchecker/main.rs#L36\">https://github.com/rust-lang/rust/blob/b3e19a221e63dcffdef87e12eadf1f36a8b90295/src/tools/linkchecker/main.rs#L36</a></p>",
        "id": 230095442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615582249
    },
    {
        "content": "<p>hm, yea, that might take a while <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 230095451,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615582254
    }
]