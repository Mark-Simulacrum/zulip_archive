[
    {
        "content": "<p>Hi! Possibly stupid question: how do I get output from <code>dbg!</code> invocations within rustdoc?</p>",
        "id": 247838498,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1627790011
    },
    {
        "content": "<p>I got it to work, but it's a bit unpleasant. I have to manually specify the library paths at the moment.</p>",
        "id": 247838839,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1627790632
    },
    {
        "content": "<p>Ahh, figured it out.</p>",
        "id": 247838905,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1627790709
    },
    {
        "content": "<p>Sorry to bother y'all!</p>",
        "id": 247838911,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1627790720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417924\">inquisitivecrystal</span> has marked this topic as resolved.</p>",
        "id": 247838914,
        "sender_full_name": "Notification Bot",
        "timestamp": 1627790722
    },
    {
        "content": "<p>By the way, what was the solution you came up with? I've never managed to get <code>dbg!</code> to work within rustdocâ€”I always use <code>debug!</code> (which is a logging macro I think provided by <code>tracing</code>).</p>",
        "id": 248675026,
        "sender_full_name": "Noah Lev",
        "timestamp": 1628288292
    },
    {
        "content": "<p>That's really strange, dbg should work fine</p>",
        "id": 248678626,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628291129
    },
    {
        "content": "<p>Hmm, maybe my config.toml is configured such that the output is being swallowed or something...</p>",
        "id": 248680398,
        "sender_full_name": "Noah Lev",
        "timestamp": 1628292821
    },
    {
        "content": "<p>There should be no possible way to configure that. Dbg writes directly to stderr.</p>",
        "id": 248697165,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628313264
    },
    {
        "content": "<p><code>dbg!</code> only works on debug builds, maybe you're building in release mode?</p>",
        "id": 248712692,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1628337184
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> that is not the case, it works unconditionally</p>",
        "id": 248715493,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628341563
    },
    {
        "content": "<p>I never saw a <code>dbg!</code> statement when I debugged rustdoc :-/</p>",
        "id": 248715544,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1628341608
    },
    {
        "content": "<p>You're thinking of debug! which is controlled by <code>debug-logging</code> and off by default in release mode</p>",
        "id": 248715545,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628341611
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> yes, because they get removed before merging <em>because</em> they log unconditionally</p>",
        "id": 248715556,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628341637
    },
    {
        "content": "<p>no I meant when I added myself for tests</p>",
        "id": 248715566,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1628341657
    },
    {
        "content": "<p>Maybe it's worth checking if I didn't change the local config somehow for rustdoc...</p>",
        "id": 248715623,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1628341696
    },
    {
        "content": "<p>Are you sure the test suite wasn't just hiding the output? dbg! goes through the exact same output as eprintln!</p>",
        "id": 248715627,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628341706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> my whole point is that hiding the output through config.toml shouldn't be possible</p>",
        "id": 248715634,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628341717
    },
    {
        "content": "<p>Hum, that might be it. And I was simply thinking that they maybe updated their <code>cargo.toml</code></p>",
        "id": 248715646,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1628341757
    },
    {
        "content": "<p>I just tested it, and <code>dbg!</code> <em>does</em> work for me! I'm not sure why it hadn't worked before, but I'm glad it does now.</p>",
        "id": 248906542,
        "sender_full_name": "Noah Lev",
        "timestamp": 1628542405
    },
    {
        "content": "<p>I'm sorry, I wish I saw this sooner. The problem I had is that it seems that rustdoc won't rerun if you add a <code>dbg!</code> somewhere, so I had to clean the old doc build to get rustdoc to rerun. Otherwise, it seemed like it was just giving me cached output from a previous run. I don't know if that was the actual problem, but cleaning the old docs seemed like it fixed it.</p>",
        "id": 249445433,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628924230
    },
    {
        "content": "<p>I could just be totally wrong though.</p>",
        "id": 249445435,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628924243
    },
    {
        "content": "<p>That seems possible. I try to avoid cargo altogether when modifying rustdoc, I find it pretty hard to predict when it will rerun the binary</p>",
        "id": 249462357,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628951253
    },
    {
        "content": "<p>Especially since it doesn't notice when the binary changes on disk</p>",
        "id": 249462359,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628951267
    }
]