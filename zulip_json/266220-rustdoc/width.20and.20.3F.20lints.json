[
    {
        "content": "<p>I recently updated a crate of mine to follow the Rust API Guidelines recommendation to use <code>?</code>, not <code>unwrap</code>, in examples: <a href=\"https://rust-lang.github.io/api-guidelines/documentation.html#examples-use--not-try-not-unwrap-c-question-mark\">https://rust-lang.github.io/api-guidelines/documentation.html#examples-use--not-try-not-unwrap-c-question-mark</a>. Would this be an appropriate lint to add to rustdoc (default-allowed)?</p>\n<p>Also, it would be useful to know how wide I can make an example without causing horizontal scroll. Right now I think rustdoc doesn't take a position on this. Some candidates:</p>\n<ul>\n<li>97 chars. Based on our current max-width. Assumes the browser window is wider than our max-width.</li>\n<li>45 chars. This is how many will be shown when the browser is 701px wide, right before we make the transition to hiding the sidebar.</li>\n<li>61 chars. This is how many will be shown wheb the browser is 901px wide. This would be good in combination with changing the sidebar-hide transition to 900px.</li>\n</ul>",
        "id": 265507190,
        "sender_full_name": "jsha",
        "timestamp": 1639957571
    },
    {
        "content": "<p>I don't think we should have a lint that's based on our css width, that will make it very disruptive to change the CSS</p>",
        "id": 265507861,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639958504
    },
    {
        "content": "<p>should we provide any sort of guidance on how wide to make examples? E.g. 80 characters, to pick an arbitrary-yet-historic number?</p>",
        "id": 265508286,
        "sender_full_name": "jsha",
        "timestamp": 1639959047
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> this doesn't seem like it belongs in rustdoc IMO? It could be a clippy lint or something</p>",
        "id": 265508396,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639959195
    },
    {
        "content": "<p>My view is that lints should only go in rustdoc if having them somewhere else requires duplicating rustdoc's logic for something</p>",
        "id": 265508403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639959240
    },
    {
        "content": "<p>I realized we actually have one place in rustdoc with a specific character-based width:</p>\n<p><a href=\"http://format.rs\">format.rs</a></p>\n<div class=\"codehilite\"><pre><span></span><code>        let output = if declaration_len &gt; 80 {\n            let full_pad = format!(&quot;&lt;br&gt;{}&quot;, &quot;&amp;nbsp;&quot;.repeat(indent + 4));\n            let close_pad = format!(&quot;&lt;br&gt;{}&quot;, &quot;&amp;nbsp;&quot;.repeat(indent));\n            format!(\n                &quot;({args}{close}){arrow}&quot;,\n                args = args.replace(&quot;&lt;br&gt;&quot;, &amp;full_pad),\n                close = close_pad,\n                arrow = arrow\n            )\n</code></pre></div>\n<p>In other words, if a function declaration in the HTML is longer than 80 characters, we wrap it (and indent with <code>&amp;nbsp</code>.</p>\n<p>Of course, that doesn't really contradict what was said above - we can freely change that wrapping point in our design if we want to. It's not really a committed-to interface.</p>\n<p>I have some vague ideas about letting the _browser_ choose where to wrap such things, and using negative text-indent (<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent</a>). But that's neither here nor there :-)</p>",
        "id": 267091065,
        "sender_full_name": "jsha",
        "timestamp": 1641491223
    }
]