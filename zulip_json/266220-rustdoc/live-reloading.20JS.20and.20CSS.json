[
    {
        "content": "<p>As long as we're talking about rustdoc dev, it's doable by simply copying the files.</p>",
        "id": 260582794,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636302190
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/unstable.20features/near/260582794\">said</a>:</p>\n<blockquote>\n<p>As long as we're talking about rustdoc dev, it's doable by simply copying the files.</p>\n</blockquote>\n<p>that's annoying to do though, since you have to know the exact file paths and things - it would be nice to build it into x.py somehow</p>",
        "id": 260582861,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636302265
    },
    {
        "content": "<p>no I meant automatically with bootstrap script</p>",
        "id": 260582877,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636302311
    },
    {
        "content": "<p>right - and that's how I often do it. But you wind up with, for instance, the <code>[+]</code> disappearing because they are displayed by CSS, and the CSS is injected and doc-build time since it contains a path to an SVG.</p>",
        "id": 260582878,
        "sender_full_name": "jsha",
        "timestamp": 1636302313
    },
    {
        "content": "<p>I'd love to have this as well considering it's quite annoying for now to debug</p>",
        "id": 260582904,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636302355
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/unstable.20features/near/260582878\">said</a>:</p>\n<blockquote>\n<p>right - and that's how I often do it. But you wind up with, for instance, the <code>[+]</code> disappearing because they are displayed by CSS, and the CSS is injected and doc-build time since it contains a path to an SVG.</p>\n</blockquote>\n<p>If bootstrap /x.py copies files instead of recompiling everything, it should be fine no?</p>",
        "id": 260583035,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636302559
    },
    {
        "content": "<p>I don't think I understand. Copies files from src/librustdoc/html/static? Or copies files from a previous build?</p>",
        "id": 260583475,
        "sender_full_name": "jsha",
        "timestamp": 1636303130
    },
    {
        "content": "<p>From the static folder directly when doing local rustdoc debugging</p>",
        "id": 260585873,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636305954
    },
    {
        "content": "<p>(in the rust repository)</p>",
        "id": 260585920,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636305966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/266220-rustdoc/topic/live-reloading.20JS.20and.20CSS/near/260582733\">said</a>:</p>\n<blockquote>\n<p>yeah, adding a compile-time \"dev mode\" feature seems like a better approach than exposing this to all users</p>\n</blockquote>\n<p>That sounds like a good idea, but even just renaming these flags to something like <code>-Z internal-disable-minification</code> might be a good start.</p>",
        "id": 260610088,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636339635
    },
    {
        "content": "<p>ehh, I would rather just have a tracking issue that mentions they're perma-unstable - rustc has plenty of perma-unstable options that don't have a prefix</p>",
        "id": 260610145,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636339697
    },
    {
        "content": "<p>Sure, we could skip the <code>internal-</code> part. But using <code>-Z</code> once <a href=\"https://github.com/rust-lang/rust/issues/88831\">#88831</a> lands might still give a stronger indication that the flags are internal-only</p>",
        "id": 260610229,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636339835
    },
    {
        "content": "<p>I don't see -Z as a strong indicator of a difference though? e.g. <code>-Z gcc-ld</code> and <code>-Z emit-future-incompat-report</code> are debugging flags but they don't seem perma-unstable to me</p>",
        "id": 260610314,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636339938
    },
    {
        "content": "<p>Hmm, I guess. Somehow <code>-Z</code> just hints slightly more to me that the flags are internal-only (like <code>-Z unpretty</code>)</p>",
        "id": 260610331,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636339985
    },
    {
        "content": "<blockquote>\n<p>E.g., in rustdoc --document-private-items --disable-minification -Zunstable-options there's no way to tell what's unstable</p>\n</blockquote>\n<p>yeah that's fair - do you happen to know how much rustc uses unstable-options?</p>",
        "id": 260610336,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636340001
    },
    {
        "content": "<p>I'm not sure, but IME much less than rustdoc</p>",
        "id": 260610707,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636340493
    }
]