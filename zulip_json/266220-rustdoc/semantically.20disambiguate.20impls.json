[
    {
        "content": "<p>Just wanted to note that <span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span> is working on a PR (<a href=\"https://github.com/rust-lang/rust/issues/92745\">#92745</a>) that implements part of <a href=\"https://github.com/rust-lang/rust/issues/92052\">#92052</a>, to semantically disambiguate impl IDs. Please post here, on the PR, or on the issue if you have any feedback or concerns with this change.</p>",
        "id": 267664968,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641945752
    },
    {
        "content": "<p>It is somewhat of a breaking change, but in most cases the IDs were already extremely unstable anyway since they were just arbitrary numeric suffixes.</p>",
        "id": 267665049,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641945784
    },
    {
        "content": "<p>And all that will break is that links to the old impl IDs will now go to the top of the page.</p>",
        "id": 267665088,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641945807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> are you all okay with the new anchor formatting? I want to make sure it looks good to you before <span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span> goes to the trouble to update all the links in the stdlib.</p>",
        "id": 267957243,
        "sender_full_name": "Noah Lev",
        "timestamp": 1642124166
    },
    {
        "content": "<p>This PR, right? <a href=\"https://github.com/rust-lang/rust/pull/92745/\">https://github.com/rust-lang/rust/pull/92745/</a></p>\n<p>Looks great to me.</p>",
        "id": 267959418,
        "sender_full_name": "jsha",
        "timestamp": 1642126093
    },
    {
        "content": "<p>Looks good to me as well. I see that we are a few of us that have to update all std doc links <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 267990555,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642153031
    },
    {
        "content": "<p>Will this break intra docs link? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 268021851,
        "sender_full_name": "pierwill",
        "timestamp": 1642171236
    },
    {
        "content": "<p>Intra-doc links don't link to impls themselves.</p>",
        "id": 268022801,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642171703
    },
    {
        "content": "<p>28k broken links.</p>",
        "id": 268034496,
        "sender_full_name": "pierwill",
        "timestamp": 1642176592
    },
    {
        "content": "<p>Might need to write a tool for this...</p>",
        "id": 268034562,
        "sender_full_name": "pierwill",
        "timestamp": 1642176609
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>errors found: 28853\nfound some broken links\n</code></pre></div>\n<p><span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 268034724,
        "sender_full_name": "pierwill",
        "timestamp": 1642176689
    },
    {
        "content": "<p>Good luck :-.</p>",
        "id": 268035489,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642176985
    },
    {
        "content": "<p>I wonder: can we accept these broken anchors temporarily, and create an epic, breaking the links up into say 50 chunks of 500, and work on them incrementally and enlist volunteers?</p>",
        "id": 268037360,
        "sender_full_name": "pierwill",
        "timestamp": 1642177751
    },
    {
        "content": "<p>no</p>",
        "id": 268039149,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178508
    },
    {
        "content": "<p>because it'd mean broken docs</p>",
        "id": 268039173,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178522
    },
    {
        "content": "<p>and such things tend to remain for a long time</p>",
        "id": 268039229,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178533
    },
    {
        "content": "<p>you can write a small python script to go through <code>library/**.rs</code> and check for every line starting with <code>///</code> or <code>//!</code> and check for <code>impl-</code> things</p>",
        "id": 268039321,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178587
    },
    {
        "content": "<p>so you have most things migrated automatically</p>",
        "id": 268039356,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178597
    },
    {
        "content": "<p>and after that, I expect around 100 remaining</p>",
        "id": 268039379,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642178614
    },
    {
        "content": "<p>lgtm <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 268043559,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1642180433
    },
    {
        "content": "<p>Okay! I'll look into a script. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 268045153,
        "sender_full_name": "pierwill",
        "timestamp": 1642181182
    },
    {
        "content": "<p>oh sorry, my LGTM was a response to Noah above</p>",
        "id": 268045629,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1642181353
    },
    {
        "content": "<p>but yeah let's do a script</p>",
        "id": 268045647,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1642181365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> how would this python script figure out what the _new_ target is?</p>\n<p>I'm surprised there is so much breakage in the std lib. That suggests there is more direct linking to impls than I previously thought. Could we see a sample of some of them?</p>",
        "id": 268055172,
        "sender_full_name": "jsha",
        "timestamp": 1642185896
    },
    {
        "content": "<p>Another possibility to spread out the breakage: We can have JS handle it. In other words, if it sees a fragment <code>#impl-9</code>, it looks through the DOM for elements starting with <code>#impl-</code>, and picks the 9th one. We wouldn't want to keep it around forever, but it would allow us to do fixups gradually.</p>",
        "id": 268055300,
        "sender_full_name": "jsha",
        "timestamp": 1642185961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315412\">jsha</span> <a href=\"#narrow/stream/266220-rustdoc/topic/semantically.20disambiguate.20impls/near/268055172\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> how would this python script figure out what the _new_ target is?</p>\n<p>I'm surprised there is so much breakage in the std lib. That suggests there is more direct linking to impls than I previously thought. Could we see a sample of some of them?</p>\n</blockquote>\n<p>We can make the script a bit smarter and look at the DOM like how the URL checker is doing. There aren't that many <code>impl-*</code> IDs in the DOM</p>",
        "id": 268062941,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642189733
    },
    {
        "content": "<p>I'm strongly opposed to adding a JS script ontop to \"fix\" this as this code will remain forever because no one will fix the underlying issue</p>",
        "id": 268063009,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642189772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span> I suspect the number of broken links you see is not actually because there are a lot of internal links to <code>#impl-</code> in the stdlib _doccomments_.</p>\n<p>Instead, I suspect there is something broken in your PR's automatic generation of internal links (mainly from the sidebar). That's the only thing that could account for such a huge number of broken links. Well, that or the link checker disagrees about some matter of URL encoding.</p>\n<p>Here's a way I checked for explicit links to <code>#impl-</code> in doccomments. You can see it's only a small handful of files:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ rg &#39;#impl-&#39; library -l\nlibrary/stdarch/crates/stdarch-verify/arm-intrinsics.html\nlibrary/core/src/hash/mod.rs\nlibrary/core/src/char/convert.rs\nlibrary/core/src/option.rs\nlibrary/core/src/result.rs\n</code></pre></div>",
        "id": 268067056,
        "sender_full_name": "jsha",
        "timestamp": 1642191633
    },
    {
        "content": "<p>I was going to say the same thing as <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span>; there's no way there are 28K manually-written broken links</p>",
        "id": 268067641,
        "sender_full_name": "Noah Lev",
        "timestamp": 1642191934
    },
    {
        "content": "<p>Thanks for filing <a href=\"https://github.com/rust-lang/rust/issues/92916\">https://github.com/rust-lang/rust/issues/92916</a> <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> ! I'll comment there if I think of any ideas for improvement.</p>",
        "id": 268103462,
        "sender_full_name": "pierwill",
        "timestamp": 1642220101
    },
    {
        "content": "<p>Okay, let's get this done. <span aria-label=\"sunglasses\" class=\"emoji emoji-1f60e\" role=\"img\" title=\"sunglasses\">:sunglasses:</span> </p>\n<p>I haven't looked at this in a few days. I read your comment <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> <a href=\"https://github.com/rust-lang/rust/pull/92745#issuecomment-1013925955\">https://github.com/rust-lang/rust/pull/92745#issuecomment-1013925955</a> </p>\n<p>To confirm that I understand: </p>\n<blockquote>\n<p>Instead, I suspect there is something broken in your PR's automatic generation of internal links (mainly from the sidebar). </p>\n</blockquote>\n<p>The code you link to in GH is where the fix needs to happen for this?</p>",
        "id": 268572683,
        "sender_full_name": "pierwill",
        "timestamp": 1642612458
    },
    {
        "content": "<p>I'll see if I can figure it out <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 268572730,
        "sender_full_name": "pierwill",
        "timestamp": 1642612476
    },
    {
        "content": "<p>Seems like there's some duplicate code here from what I was working on before maybe? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 268574152,
        "sender_full_name": "pierwill",
        "timestamp": 1642613046
    },
    {
        "content": "<p>Maybe can use <code>get_id_for_impl</code> <a href=\"https://github.com/pierwill/rust/blob/a6f6b2f9865206309d54822299fb4c5889fa5920/src/librustdoc/html/render/mod.rs#L1995\">here</a>?</p>",
        "id": 268574443,
        "sender_full_name": "pierwill",
        "timestamp": 1642613176
    },
    {
        "content": "<p>Looks like we need the type being implemented in <a href=\"https://github.com/pierwill/rust/blob/a6f6b2f9865206309d54822299fb4c5889fa5920/src/librustdoc/html/render/mod.rs#L1993-L1995\">this <code>format!</code></a>... not sure how to get that, though...</p>",
        "id": 268575285,
        "sender_full_name": "pierwill",
        "timestamp": 1642613520
    },
    {
        "content": "<p>Maybe <code>it.impl_item.name</code>?</p>",
        "id": 268575673,
        "sender_full_name": "pierwill",
        "timestamp": 1642613668
    },
    {
        "content": "<p>Yes, you understand correctly - I _think_ (on brief looking) that the code I linked is where the fix needs to happen. One way I'd do a quick check for something like that - change the code to always emit \"#foo\", then check generated docs to see <code>#foo</code> shows up where you expect. :-)</p>",
        "id": 268587584,
        "sender_full_name": "jsha",
        "timestamp": 1642618866
    },
    {
        "content": "<p>and I wouldn't be surprised if there is duplicate code - there is a lot of duplicate (or near-duplicate) code in rustdoc.</p>",
        "id": 268587743,
        "sender_full_name": "jsha",
        "timestamp": 1642618926
    },
    {
        "content": "<blockquote>\n<p>Maybe can use get_id_for_impl here?</p>\n</blockquote>\n<p>Yes, I think that's the right idea.</p>",
        "id": 268587820,
        "sender_full_name": "jsha",
        "timestamp": 1642618961
    }
]