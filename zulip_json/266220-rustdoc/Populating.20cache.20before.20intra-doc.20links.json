[
    {
        "content": "<p>I want to populate the cache before running intra-doc links (for <a href=\"https://github.com/rust-lang/rust/pull/82014\">https://github.com/rust-lang/rust/pull/82014</a>). Right now that breaks links to traits:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code>&gt; diff /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/test/rustdoc/intra-doc/trait-impl.nightly/foo/trait.MyTrait.html /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/test/rustdoc/intra-doc/trait-impl/foo/trait.MyTrait.html\n128c128\n&lt;               &lt;a href=\"../foo/struct.MyStruct.html#associatedtype.AssoType\"&gt;&lt;code&gt;AssoType&lt;/code&gt;&lt;/a&gt;\n<span class=\"gd\">---</span>\n&gt;               &lt;a href=\"MyStruct::AssoType\"&gt;&lt;code&gt;AssoType&lt;/code&gt;&lt;/a&gt;\n136c136\n&lt;               &lt;a href=\"../foo/struct.MyStruct.html#associatedconstant.ASSO_CONST\"&gt;&lt;code&gt;ASSO_CONST&lt;/code&gt;&lt;/a&gt;\n<span class=\"gd\">---</span>\n&gt;               &lt;a href=\"MyStruct::ASSO_CONST\"&gt;&lt;code&gt;ASSO_CONST&lt;/code&gt;&lt;/a&gt;\n144c144\n&lt;               &lt;a href=\"../foo/struct.MyStruct.html#method.trait_fn\"&gt;&lt;code&gt;trait_fn&lt;/code&gt;&lt;/a&gt;\n<span class=\"gd\">---</span>\n&gt;               &lt;a href=\"MyStruct::trait_fn\"&gt;&lt;code&gt;trait_fn&lt;/code&gt;&lt;/a&gt;\n</code></pre></div>\n<p>I think this is happening because intra-doc links themselves fill out parts of the cache: <a href=\"https://github.com/rust-lang/rust/blob/a118ee2c13cc96ceb27bd5030c1cca1052377604/src/librustdoc/passes/collect_intra_doc_links.rs#L1245\">https://github.com/rust-lang/rust/blob/a118ee2c13cc96ceb27bd5030c1cca1052377604/src/librustdoc/passes/collect_intra_doc_links.rs#L1245</a>.</p>\n<p>There are two issues here:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/blob/d416093209d0dd77a4cdeb5a2f1b5de1316787ec/src/librustdoc/clean/inline.rs#L626\"><code>register_external_trait</code></a> writes to <code>cx.external_traits</code>, which is what is used to populate the cache. So if I populate the cache before running intra-doc links, the new traits will never be moved into the cache and just sit there uselessly. I tried to fix this by draining <code>cx.external_traits</code> after runing all passes, but it didn't work, I think because the logic in <code>populate</code> isn't running: <a href=\"https://github.com/rust-lang/rust/blob/334b40effde4983ff0cda18306ec46419806f717/src/librustdoc/formats/cache.rs#L196\">https://github.com/rust-lang/rust/blob/334b40effde4983ff0cda18306ec46419806f717/src/librustdoc/formats/cache.rs#L196</a>. I might be able to fix it by calling populate twice, but that doesn't fix the second issue which is </li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/d416093209d0dd77a4cdeb5a2f1b5de1316787ec/src/librustdoc/html/format.rs#L485\"><code>href</code></a> looks only at the cache, so anything which modifies <code>cx.external_traits</code> (intra-doc links) will see incomplete info, because the stuff it just added hasn't been propagated through the cache yet. That means even if I manage to get this to work in the sense of having the previous behavior, it still won't be accurate.</li>\n</ul>\n<p>I guess my questions are</p>\n<ul>\n<li>Is there a way to tell whether an item will have documentation generated before having to calculate the full URL?</li>\n<li>If not, is it possible to change <code>register_res</code> to work eagerly, so there's no 'flushing' of the cache necessary?</li>\n</ul>\n<p>Maybe it would be easier to move this check out of intra-doc links altogether ...</p>",
        "id": 226174690,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613153207
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> would be interested in your thoughts :)</p>",
        "id": 226174967,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613153375
    },
    {
        "content": "<p>Anything cache-related isn't behaving the same depending at which phase we are and it's a bit problematic. If you know what the issue is, you can always try to work around and identify clearly what shouldn't have access to the cache. At least it's how I do it generally. It got simpler lately so if we continue like that, we might even be able to use the cache everywhere without worrying.</p>",
        "id": 226177244,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1613154518
    },
    {
        "content": "<p>well I don't know if intra-doc links <em>shouldn't</em> have access to the cache is the issue</p>",
        "id": 226178254,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613155024
    },
    {
        "content": "<p>I don't see why it shouldn't. But does the cache provides information you can't get otherwise?</p>",
        "id": 226178940,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1613155388
    },
    {
        "content": "<p>yes, specifically I want to know if an item will have documentation generated</p>",
        "id": 226179011,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613155427
    },
    {
        "content": "<p>which I do currently by calling <code>href(def_id).is_some()</code>, which breaks because the cache is still being constructed</p>",
        "id": 226179071,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613155454
    },
    {
        "content": "<p>if there's an easier way to do that I'm all ears :)</p>",
        "id": 226179339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613155633
    },
    {
        "content": "<p>I'd say: construct the cache first? XD</p>",
        "id": 226195646,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1613163747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Populating.20cache.20before.20intra-doc.20links/near/226195646\">said</a>:</p>\n<blockquote>\n<p>I'd say: construct the cache first? XD</p>\n</blockquote>\n<p>this isn't possible AFAICT because there are some items that are only used if intra-doc links link to them</p>",
        "id": 226208327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613171017
    }
]