[
    {
        "content": "<p>I just ran across something peculiar. On <a href=\"http://docs.rs\">docs.rs</a>, <code>time::error::Format</code> is correctly shown as <code>!UnwindSafe</code> and <code>!RefUnwindSafe</code> because of the presence of <code>std::io::Error</code> in a variant <a href=\"https://docs.rs/time/latest/time/error/enum.Format.html\">(ref)</a>. However, the docs I build in CI (using the same flags) show the exact opposite â€” it implements <code>UnwindSafe</code> and <code>RefUnwindSafe</code>, which is incorrect <a href=\"https://time-rs.github.io/api/time/error/enum.Format.html\">(ref)</a>. I just reproduced the latter locally on the latest nightly. Note that the type <em>does not</em> implement either trait.</p>\n<p>Something isn't right here. The definition of the enum has not changed, yet the generated documentation is now wrong. This must have happened sometime since January 26 when the most recent version of <code>time</code> was published.</p>",
        "id": 276097871,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1647888667
    },
    {
        "content": "<p>Related? <a href=\"https://github.com/rust-lang/rust/issues/90324\">#90324</a></p>",
        "id": 276098317,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1647888867
    },
    {
        "content": "<p>The time frame doesn't match up (assuming <a href=\"http://docs.rs\">docs.rs</a> uses the latest nightly), but the general bug is the same.</p>",
        "id": 276098364,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1647888895
    },
    {
        "content": "<p>I <em>think</em> it is related. <a href=\"https://github.com/rust-lang/rust/pull/95069\">https://github.com/rust-lang/rust/pull/95069</a> should fix it. It's waiting for compiler people to check it's doing what it's supposed to. Strange that there is a difference between local and remote though.</p>",
        "id": 276101796,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1647890684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt</span> the <a href=\"http://docs.rs\">docs.rs</a> link you sent (<a href=\"https://docs.rs/time/latest/time/error/enum.Format.html\">https://docs.rs/time/latest/time/error/enum.Format.html</a>) shows the same as the GitHub link, that <code>UnwindSafe</code> and <code>RefUnwindSafe</code> (not their negations) <strong>are implemented</strong>. The <code>/latest/</code> currently redirects to version 0.3.9, but 0.3.7 â€“ which was built by <a href=\"http://docs.rs\">docs.rs</a> in January â€“ shows the negations that you describe. So there's actually no difference between CI and <a href=\"http://docs.rs\">docs.rs</a>.</p>",
        "id": 276394093,
        "sender_full_name": "Noah Lev",
        "timestamp": 1648066774
    },
    {
        "content": "<p>Yeah, I published 0.3.9 in the meantime. My intent of pointing that out was that something must have changed in that ~2 month period.</p>",
        "id": 276394294,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648066858
    },
    {
        "content": "<p>Ah, I see what you mean <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 276401061,
        "sender_full_name": "Noah Lev",
        "timestamp": 1648069842
    },
    {
        "content": "<p>I'm not sure what would have changed; it's weird. If you really want, you could bisect it using <a href=\"https://github.com/rust-lang/cargo-bisect-rustc\">https://github.com/rust-lang/cargo-bisect-rustc</a> ( <code>cargo bisect-rustc --prompt --start=YYYY-MM-DD --end=YYYY-MM-DD -- doc</code>).</p>",
        "id": 276401249,
        "sender_full_name": "Noah Lev",
        "timestamp": 1648069939
    },
    {
        "content": "<p>For those that work on it, it gives a definitive start and end point for a bisection. I figure that would narrow it down to only a couple of PRs, at which point it should be (I think?) somewhat obvious what the change was.</p>",
        "id": 276401274,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648069956
    },
    {
        "content": "<p>Yeah, I might do a bisection at some point. Just takes time and clogs up my bandwidth, obviously.</p>",
        "id": 276401338,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648069993
    },
    {
        "content": "<p>cargo-bisect-rustc will bisect to a single PR (although it may be a rollup PR), as long as the regression happened within the last half-year or so.</p>",
        "id": 276406632,
        "sender_full_name": "Noah Lev",
        "timestamp": 1648072855
    },
    {
        "content": "<p>Regression occurred in this PR: <a href=\"https://github.com/rust-lang/rust/pull/87869\">https://github.com/rust-lang/rust/pull/87869</a></p>\n<p>cc <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span>  <span class=\"user-mention\" data-user-id=\"209168\">@Thom Chiovoloni</span></p>",
        "id": 276416601,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648078591
    },
    {
        "content": "<p>Oh, does io::Error need explicit UnwindSafe/RefUnwindSafe impls with the bitpacked repr now?</p>",
        "id": 276416686,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648078668
    },
    {
        "content": "<p>That's surprising, but should be fine.</p>",
        "id": 276416771,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648078708
    },
    {
        "content": "<p>Also I see that <a href=\"https://github.com/rust-lang/rust/issues/95203\">#95203</a> was opened two days ago (seemingly not in response to this thread), which links back to that PR</p>",
        "id": 276416883,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648078801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Incorrect.20auto.20trait.20impl/near/276416686\">said</a>:</p>\n<blockquote>\n<p>Oh, does io::Error need explicit UnwindSafe/RefUnwindSafe impls with the bitpacked repr now?</p>\n</blockquote>\n<p><code>io::Error</code> actually went from <code>!UnwindSafe</code> to <code>UnwindSafe</code>, not the other way around. Apparently this is only the case on 64 bit platforms.</p>",
        "id": 276416982,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648078854
    },
    {
        "content": "<p>Uh, hm. I suppose it's not unwindsafe because the custom data could be !unwindsafe?</p>",
        "id": 276417028,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648078915
    },
    {
        "content": "<p>iirc that's what the backtrace showed a couple days ago</p>",
        "id": 276417087,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648078938
    },
    {
        "content": "<p>It was the <code>Box&lt;dyn Error&gt;</code> in <code>Error::Custom</code></p>",
        "id": 276417094,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648078950
    },
    {
        "content": "<p>I see. So it needs a !UnwindSafe impl (or some PhantomData)</p>",
        "id": 276417166,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648079028
    },
    {
        "content": "<p>That would be my assumption. I know neither the reason for the change nor what correct is, just that it changed <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 276417243,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648079085
    },
    {
        "content": "<p>Yeah it wasn't intended to change.</p>",
        "id": 276417277,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648079111
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    = help: the trait `UnwindSafe` is not implemented for `(dyn StdError + Send + Sync + 'static)`\n    = note: required because of the requirements on the impl of `UnwindSafe` for `Unique&lt;(dyn StdError + Send + Sync + 'static)&gt;`\n    = note: required because it appears within the type `Box&lt;(dyn StdError + Send + Sync + 'static)&gt;`\n    = note: required because it appears within the type `std::io::error::Custom`\n    = note: required because of the requirements on the impl of `UnwindSafe` for `Unique&lt;std::io::error::Custom&gt;`\n    = note: required because it appears within the type `Box&lt;std::io::error::Custom&gt;`\n    = note: required because it appears within the type `std::io::error::Repr`\n    = note: required because it appears within the type `std::io::Error`\n</code></pre></div>\n<p>Relevant part of the backtrace</p>",
        "id": 276417293,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648079124
    },
    {
        "content": "<p>Can you file a bug about the fact that this changed? I probably can't get a patch up today</p>",
        "id": 276417421,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648079234
    },
    {
        "content": "<p>That would be <a href=\"https://github.com/rust-lang/rust/issues/95203\">#95203</a>, I think</p>",
        "id": 276417664,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648079402
    },
    {
        "content": "<p>Thanks</p>",
        "id": 276418290,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648079898
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt</span> !</p>",
        "id": 276422858,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1648084309
    },
    {
        "content": "<p>No problem! Good news for you is that it's a libs issue, not rustdoc.</p>",
        "id": 276423021,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648084472
    }
]