[
    {
        "content": "<p>What should I do to make <code>cargo doc</code> successfully run on std of rust-src component of rustup ?<br>\nI've had these errors so far:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">Checking</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">workspace</span><span class=\"o\">-</span><span class=\"n\">alloc</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">Documenting</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">workspace</span><span class=\"o\">-</span><span class=\"n\">alloc</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"></span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">prelude</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0432</span><span class=\"p\">]</span>: <span class=\"nc\">unresolved</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">ops</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">lzutao</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">compiler_builtins</span><span class=\"o\">-</span><span class=\"mf\">0.1.39</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">float</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">ops</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ops</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0432</span><span class=\"p\">]</span>: <span class=\"nc\">unresolved</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">ops</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">lzutao</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">compiler_builtins</span><span class=\"o\">-</span><span class=\"mf\">0.1.39</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">int</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">ops</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ops</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0432</span><span class=\"p\">]</span>: <span class=\"nc\">unresolved</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">intrinsics</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">lzutao</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">compiler_builtins</span><span class=\"o\">-</span><span class=\"mf\">0.1.39</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">mem</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">8</span>:<span class=\"mi\">11</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">intrinsics</span>::<span class=\"p\">{</span><span class=\"n\">atomic_load_unordered</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">atomic_store_unordered</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">exact_div</span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">intrinsics</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 222736801,
        "sender_full_name": "lzutao",
        "timestamp": 1610639670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> I would be suprised if you can get that to work</p>",
        "id": 222737047,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610639759
    },
    {
        "content": "<p>to be more clear: I cd to std in rust-src:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> /home/lzutao/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std\n</code></pre></div>",
        "id": 222737076,
        "sender_full_name": "lzutao",
        "timestamp": 1610639763
    },
    {
        "content": "<p>use <code>x.py doc</code> instead, or use the distributed <code>rust-docs</code></p>",
        "id": 222737141,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610639779
    },
    {
        "content": "<p>it <em>may</em> work from <code>library/test</code> but no guarantee</p>",
        "id": 222737180,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610639801
    },
    {
        "content": "<p>./x.py doc sure will works. However I intend to run the script on CI.<br>\n./x.py seems really heavy weight. As everytime the CI needs to clone every submodules of rust, including llvm.<br>\nThat is really time consuming.</p>\n<p>There is <a href=\"https://github.com/rust-lang/rust/blob/7bb163095d8c751787f1449f3f3c245077f484e3/src/bootstrap/doc.rs#L408\">https://github.com/rust-lang/rust/blob/7bb163095d8c751787f1449f3f3c245077f484e3/src/bootstrap/doc.rs#L408</a>, but I don't understand the code yet.</p>",
        "id": 222738348,
        "sender_full_name": "lzutao",
        "timestamp": 1610640205
    },
    {
        "content": "<p>did you try from <code>library/test</code>?</p>",
        "id": 222738510,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610640261
    },
    {
        "content": "<p>why are you running this on CI?</p>",
        "id": 222738528,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610640267
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> ^</p>",
        "id": 222739264,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610640587
    },
    {
        "content": "<p>No, I have not run in test yet.</p>\n<p>What I want to do is generating std internal doc for personal use. Three is a similar project <a href=\"http://stddr.rs\">stddr.rs</a> ( I may not remember correctly), but I find their site is slow to access in my location.</p>",
        "id": 222740244,
        "sender_full_name": "lzutao",
        "timestamp": 1610640998
    },
    {
        "content": "<p>Maybe because they use server of Google cloud located far from my area.</p>",
        "id": 222740548,
        "sender_full_name": "lzutao",
        "timestamp": 1610641078
    },
    {
        "content": "<p>why do you specifically want to generate it? it's available from the <code>rust-docs</code> component</p>",
        "id": 222741047,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610641191
    },
    {
        "content": "<p>To browse whever functions in std do Internally. Rust-docs component only covers public API.</p>",
        "id": 222741355,
        "sender_full_name": "lzutao",
        "timestamp": 1610641321
    },
    {
        "content": "<p>ah ok, that makes sense</p>",
        "id": 222741416,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610641332
    },
    {
        "content": "<p>try <code>library/test</code>, I think it will work</p>",
        "id": 222741447,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610641346
    },
    {
        "content": "<p>Thanks, I will try tomorrow.</p>",
        "id": 222741500,
        "sender_full_name": "lzutao",
        "timestamp": 1610641367
    },
    {
        "content": "<p>cargo doc failed on <code>library/test</code>.<br>\nI am wondering how <code>-Z build-std</code> flag of cargo works. Can we do the same to make cargo doc works on std ?</p>",
        "id": 222806387,
        "sender_full_name": "lzutao",
        "timestamp": 1610671929
    }
]