[
    {
        "content": "<p>How do I use intra-doc links to link to a field with the same name as a method? E.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">bar</span>: <span class=\"kt\">i32</span> <span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"sd\">/// Get a reference to [`Foo::bar`].</span>\n<span class=\"w\">    </span><span class=\"c1\">//                            ^^^ I want this to link to the field. Currently it links to the method.</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">bar</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I tried using <code>field@</code>, but that doesn't seem to exist.</p>",
        "id": 220647604,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608597649
    },
    {
        "content": "<p>I don't think there's a way to disambiguate that currently</p>",
        "id": 220650881,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608601168
    },
    {
        "content": "<p>Ah, really?</p>",
        "id": 220652694,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608603647
    },
    {
        "content": "<p>Opened an issue: <a href=\"https://github.com/rust-lang/rust/issues/80283\">#80283</a>.</p>",
        "id": 220652893,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608603949
    },
    {
        "content": "<p>You can't use <code>Foo::bar()</code>?</p>",
        "id": 220676877,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608633299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> that will link to the method, not the field</p>",
        "id": 220689974,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608644640
    },
    {
        "content": "<p>Ah right, if you want the field I don't know how to enforce it...</p>",
        "id": 220690242,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644810
    },
    {
        "content": "<p>Maybe <code>Foo.bar</code>?</p>",
        "id": 220690248,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I closed that issue, remember? <a href=\"https://github.com/rust-lang/rust/issues/75437\">https://github.com/rust-lang/rust/issues/75437</a></p>",
        "id": 220690370,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608644893
    },
    {
        "content": "<p>Now I do</p>",
        "id": 220690402,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644919
    },
    {
        "content": "<p>Funny haha</p>",
        "id": 220690409,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644924
    },
    {
        "content": "<p>well, any item should have a way to be enforced somehow</p>",
        "id": 220690421,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644939
    },
    {
        "content": "<p>instead of \"punctuation\", we could maybe add specification like in rustdoc search, for example <code>field:Foo::bar</code></p>",
        "id": 220690467,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644977
    },
    {
        "content": "<p>but same, need an rfc I guess</p>",
        "id": 220690475,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1608644985
    },
    {
        "content": "<p>I would rather make this consistent with the other disambiguators if we do it at all</p>",
        "id": 220690625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608645058
    },
    {
        "content": "<p>I don't think the syntax needs to be special</p>",
        "id": 220690645,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608645072
    },
    {
        "content": "<blockquote>\n<p>but same, need an rfc I guess</p>\n</blockquote>\n<p>I think an FCP would be fine since it's a small change</p>",
        "id": 220690668,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608645100
    },
    {
        "content": "<p>Maybe we could have special-casing for <code>[`field@Foo::bar`]</code> so it renders as <code>Foo.bar</code>?</p>",
        "id": 220748250,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608681258
    },
    {
        "content": "<p>That would save a lot of doing <code>[`Foo.bar`][field@Foo::bar]</code>.</p>",
        "id": 220748277,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608681281
    },
    {
        "content": "<p>I started working on this, and I just discovered that we treat fields as if they are in the value namespace. Why is that?</p>",
        "id": 232054216,
        "sender_full_name": "Noah Lev",
        "timestamp": 1616810125
    }
]