[
    {
        "content": "<p>Hi!<br>\nIt would be really useful if <code>doc.rust-lang.org</code> had some kind of API that returned OpenSearch-compatible <code>application/x-suggestions+json</code>.  Such a change would allow autocomplete suggestions when you activate that search engine in a browser URL bar.<br>\nWhat would the work involved with such a change look like?  Is this something I could help with working on?</p>",
        "id": 227629160,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614184632
    },
    {
        "content": "<p>This was discussed a little <a href=\"https://discord.com/channels/273534239310479360/273539705595756544/814169532453224458\">on Discord</a>. Some points that were brought up:</p>\n<ul>\n<li>Search is run client-side, which makes all of this harder.</li>\n<li>Opensearch is XML, not JSON, so I don't think it's feasible to store the search index in that format natively; I don't want an XML parser in JS, that sounds like a nightmare.</li>\n<li>In theory it should be possible to do this client-side through a service worker (<a href=\"https://stackoverflow.com/questions/36535642/serving-an-opensearch-application-x-suggestionsjson-through-a-service-worker\">https://stackoverflow.com/questions/36535642/serving-an-opensearch-application-x-suggestionsjson-through-a-service-worker</a>), but I don't know how useful that actually is. I think if we solve this for <a href=\"http://doc.rust-lang.org\">doc.rust-lang.org</a> and <a href=\"http://docs.rs\">docs.rs</a> only, that's probably fine.</li>\n<li><span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> suggested doing this on doc.RLO using a lambda that parses search-index.json itself. <a href=\"http://docs.rs\">docs.rs</a> could do something similar server-side.</li>\n</ul>\n<p>I'd like to hear more about your use case - what do you want this for?</p>",
        "id": 227630859,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614185217
    },
    {
        "content": "<p>I make fairly heavy use of Firefox's domain-specific search engines, and I imagine many others do as well.<br>\nIntegrating with the browser suggestion feature would be very convenient in allowing previews of crate names and functions before the search is completed.<br>\nAs for the XML point: I haven't looked into this much, but I believe this is just the manifest which provides the \"Add Search Engine\" menu option.  I believe it would be fairly straightforward to host this statically.<br>\nThe main interesting bit as I see it is the API that would be called to populate the suggestions.</p>",
        "id": 227633193,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614185995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"392305\">@CodeSpelunker</span> if you want to search in Rust docs from your url bar you have these options:<br>\n1) the rust firefox add-on: <a href=\"https://addons.mozilla.org/de/firefox/addon/rust-search-extension\">https://addons.mozilla.org/de/firefox/addon/rust-search-extension</a><br>\n2) <code>!bang</code> syntax from duckduckgo : <code>!rustdoc Option</code><br>\n3) roll your own search OpenDocument XML: <a href=\"https://apiraino.github.io/firefox-custom-search\">https://apiraino.github.io/firefox-custom-search</a> :-)</p>",
        "id": 227633810,
        "sender_full_name": "apiraino",
        "timestamp": 1614186168
    },
    {
        "content": "<p>if it's as simple as hosting the static manifest, that seems fine to me</p>",
        "id": 227634263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614186298
    },
    {
        "content": "<p>yeah, it's a simple  XML file and then add it to a <code>&lt;link....</code> in the headers of the website</p>",
        "id": 227634484,
        "sender_full_name": "apiraino",
        "timestamp": 1614186370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> want to make a PR for that? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 227634525,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614186389
    },
    {
        "content": "<p>I can open a PR it you want</p>",
        "id": 227634532,
        "sender_full_name": "apiraino",
        "timestamp": 1614186393
    },
    {
        "content": "<p>oh right you got me :D</p>",
        "id": 227634545,
        "sender_full_name": "apiraino",
        "timestamp": 1614186399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span>, this looks very useful, and might even obviate what I'm talking about.<br>\n<span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>, I believe the XML defines a few things, which FF/Chrome parses to register the search engine.  Among that metadata is the search engine name, the standard search API (like when you just press Enter or select a suggestion), and the suggestions API returning <code>application/x-suggestions+json</code>.</p>",
        "id": 227634944,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614186553
    },
    {
        "content": "<blockquote>\n<p>and the suggestions API returning application/x-suggestions+json.</p>\n</blockquote>\n<p>How would that work for a static server?</p>",
        "id": 227635019,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614186585
    },
    {
        "content": "<p>That's what I'm not so sure about.<br>\nI'd also like to look a little more closely at how the extension <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> had linked works.  It might be doing something differently than the other search engines I've seen.</p>",
        "id": 227635388,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614186697
    },
    {
        "content": "<p>I don't know enough about service workers and lambda to give you a good answer on how that would be implemented in this case</p>",
        "id": 227635628,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614186776
    },
    {
        "content": "<p>If anyone else is interesting in looking through that extension's source code: <a href=\"https://github.com/huhu/rust-search-extension\">https://github.com/huhu/rust-search-extension</a></p>",
        "id": 227636899,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614187210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span>  This extension won't work for me.<br>\nThere is no way to customize the prefix shortcut through the Settings interface, and the suggestions get mangled with my default search engine (Google) settings.  Underneath the extension results, I also get Google autocomplete results for <code>rs std::vec</code>.<br>\nSo, back to square one here.</p>",
        "id": 227640180,
        "sender_full_name": "CodeSpelunker",
        "timestamp": 1614188306
    },
    {
        "content": "<p>To be noted, it has to be done on <code>doc.rust-lang.org</code> side and not in rustdoc</p>",
        "id": 227649519,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614191879
    },
    {
        "content": "<p>and I don't know how it works there...</p>",
        "id": 227649652,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614191916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392305\">CodeSpelunker</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Adding.20API.20for.20OpenSearch/near/227640180\">said</a>:</p>\n<blockquote>\n<p>the suggestions get mangled with my default search engine (Google) settings.  Underneath the extension results, I also get Google autocomplete results for <code>rs std::vec</code>.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"392305\">@CodeSpelunker</span> what a drag. But thanks for reporting on that</p>",
        "id": 227671602,
        "sender_full_name": "apiraino",
        "timestamp": 1614200372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/266220-rustdoc/topic/Adding.20API.20for.20OpenSearch/near/227649519\">said</a>:</p>\n<blockquote>\n<p>To be noted, it has to be done on <code>doc.rust-lang.org</code> side and not in rustdoc</p>\n</blockquote>\n<p>didnt look yet at the codebase , you mean the patch should be pushed <a href=\"https://github.com/rust-lang/rust/tree/a143517d44cac50b20cbd3a0b579addab40dd399/src/librustdoc/html\">here</a> or <em>not</em> here?</p>",
        "id": 227672182,
        "sender_full_name": "apiraino",
        "timestamp": 1614200578
    },
    {
        "content": "<p>not there</p>",
        "id": 227672451,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614200661
    },
    {
        "content": "<p>I see. I thought this file <a href=\"https://github.com/rust-lang/rust/blob/0248c6f178ab3a4d2ec702b7d418ff8375ab0515/src/librustdoc/html/layout.rs#L56\">here</a>  really had the header I was looking for</p>",
        "id": 227672575,
        "sender_full_name": "apiraino",
        "timestamp": 1614200716
    },
    {
        "content": "<p>I'm unclear what you're looking for.</p>",
        "id": 227672763,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614200789
    },
    {
        "content": "<p>I don't know how this can work as a static file.</p>",
        "id": 227672778,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614200798
    },
    {
        "content": "<p>hmm ok I'll check later a bit the code and be back with a bit more context. I'm thinking two things that may be both wrong:<br>\n1) <code>doc.rust-lang.org</code> is an artifact of compiling librustdoc (that html directory)<br>\n2) when I compile my crate I use the same static HTML+css assets as <a href=\"http://doc.rust-lang.org\">doc.rust-lang.org</a></p>",
        "id": 227673314,
        "sender_full_name": "apiraino",
        "timestamp": 1614201045
    },
    {
        "content": "<p>yes, that's all right, but I don't know how you can do opensearch with static files</p>",
        "id": 227673485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614201111
    },
    {
        "content": "<p>oh wait you were asking specifically about the header</p>",
        "id": 227673495,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614201117
    },
    {
        "content": "<p>sorry, that's the right place for the header</p>",
        "id": 227673551,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614201126
    },
    {
        "content": "<p>and then add another static asset (the XML file)</p>",
        "id": 227673706,
        "sender_full_name": "apiraino",
        "timestamp": 1614201207
    },
    {
        "content": "<p>that would probably be in <code>html/static</code></p>",
        "id": 227673768,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614201241
    },
    {
        "content": "<p>I guess I'll see in the PR, but I don't think adding yet another file for such a specific feature is worth it for rustdoc</p>",
        "id": 227674504,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614201527
    },
    {
        "content": "<p>But if the file is always the same and is rather small, then I guess it's fine, even though I think it's too much</p>",
        "id": 227674642,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614201592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> for this feature to work it is mandatory to have a 10-ish lines XML similar to what <a href=\"http://docs.rs\">docs.rs</a> already has<br>\n<a href=\"https://docs.rs/-/static/opensearch.xml\">https://docs.rs/-/static/opensearch.xml</a><br>\nand add a <code>&lt;link...</code> header to the HTML<br>\nNo way around this (afaik). I perfectly understand you want to avoid bloat so it will be fine if you don't want to merge <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 227679693,
        "sender_full_name": "apiraino",
        "timestamp": 1614203729
    },
    {
        "content": "<p>So just like I said: it seems better to put it into <a href=\"http://doc.rust-lang.org\">doc.rust-lang.org</a> instead</p>",
        "id": 227684501,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614205191
    },
    {
        "content": "<p>I don't see why users generating doc locally should care about that</p>",
        "id": 227684576,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1614205210
    }
]