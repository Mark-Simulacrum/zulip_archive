[
    {
        "content": "<p>Hi, I'm working on issue <a href=\"https://github.com/rust-lang/rust/issues/89673\">#89673</a><br>\nI'm quite new to rustc and rustdoc.<br>\nI'm trying to understand how to get rid of <code>clean::Function::header</code> and calculate it from the <code>DefId</code>.<br>\nCould you please direct me toward a place where I can look to find how that can be done?</p>\n<p>Thanks!</p>",
        "id": 260538043,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1636235370
    },
    {
        "content": "<p>Look for <code>clean_fn_or_proc_macro</code> in <code>clean/mod.rs</code></p>",
        "id": 260538473,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636235951
    },
    {
        "content": "<p>it calls <code>let mut func = (sig, generics, body_id).clean(cx);</code></p>",
        "id": 260538483,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636235963
    },
    {
        "content": "<p><code>sig</code> contains a <code>header</code> field, that's the one you're looking for</p>",
        "id": 260538492,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636235982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> Thank you!</p>",
        "id": 260600750,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1636326155
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span>,<br>\nthe <code>sig</code> in <code>clean/mod.rs</code> is a <code>hir::FnSig</code>, but the sig in the function I'm working on (<code>build_external_function</code>) is a <code>ty::FnSig</code>, which does not contain a <code>header</code> field. Is there a way to convert the <code>ty::FnSig</code> to a <code>hir::FnSig</code>?<br>\nI tried using the <code>fn_sig_by_hir_id</code>, but I could not retrieve the <code>HirId</code> for the external function's <code>DefId</code> as it is non-local (<code>did.as_local</code> fails), and thus the <code>local_def_id_to_hir_id</code> function doesn't work with it.</p>\n<p>Thanks!</p>",
        "id": 262071378,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637331445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"452510\">@Yuval Dolev</span> I'd suggest changing the function in clean to take a <code>ty</code> header instead of HIR, HIR is only available for the local crate. You should be able to get the same info from a function on TyCtxt taking DefId (not sure which without looking it up)</p>",
        "id": 262072924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637332180
    },
    {
        "content": "<p>E.g., for constness we'd want to use something like <code>tcx.is_const_fn</code>.</p>",
        "id": 262080927,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637335596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> Thanks!</p>",
        "id": 262088822,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637338718
    },
    {
        "content": "<p>Ok, so in this issue should I remove the <code>header</code> field from the <code>clean::Function</code> struct, and then calculate it using the <code>DefId</code>?<br>\nThank you!</p>",
        "id": 262092799,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637340331
    },
    {
        "content": "<p>yes, that's the goal</p>",
        "id": 262093987,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637340778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Great, thanks!</p>",
        "id": 262136910,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637359679
    },
    {
        "content": "<p>Hi, what's the best way to retrieve the <code>unsafety</code> property for a function based on its <code>DefId</code>?</p>",
        "id": 262202985,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637440110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"452510\">@Yuval Dolev</span> I think <code>tcx.type_of(fn_def_id).fn_sig(tcx).unsafety</code> should work</p>",
        "id": 262203533,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637440906
    },
    {
        "content": "<p>Just be careful to only call it on function-like types (function items, closures, or function pointers)</p>",
        "id": 262203603,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637440983
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Will try it, thanks!</p>",
        "id": 262203616,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637441001
    },
    {
        "content": "<p>Hi!<br>\nWhat about the <code>rustdoc-json-types</code> <code>Function</code> struct, it also has a <code>header</code> field, should it be removed as well?</p>\n<p>Thanks!</p>",
        "id": 262653701,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637798874
    },
    {
        "content": "<p>No, rustdoc-json-types is a public API</p>",
        "id": 262653812,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637798968
    },
    {
        "content": "<p>Great, thank you!</p>",
        "id": 262653834,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637798992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <br>\nWhat should I do with the <code>FromWithTcx&lt;clean::Function&gt;::from_tcx</code> function, as it doesn't receive a <code>DefId</code> from which I can calculate the header?</p>",
        "id": 262654085,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637799200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"452510\">@Yuval Dolev</span> Just replace it with an ordinary function (e.g., something like <code>fn convert_function(...) -&gt; ... { ... }</code>) that takes a <code>DefId</code> and a <code>clean::Function</code>.</p>",
        "id": 262655085,
        "sender_full_name": "Noah Lev",
        "timestamp": 1637800195
    },
    {
        "content": "<p>Got it, will do, thank you!</p>",
        "id": 262655465,
        "sender_full_name": "Yuval Dolev",
        "timestamp": 1637800557
    }
]