[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> issue <a href=\"https://github.com/rust-lang/rust/issues/73223\">#73223</a> has been requested for prioritization.</p>",
        "id": 200482005,
        "sender_full_name": "triagebot",
        "timestamp": 1591825992
    },
    {
        "content": "<p>we don't have a lot of information about this issue but is a stable to beta regression, not prioritized and not assigned for now</p>",
        "id": 200489249,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591830291
    },
    {
        "content": "<p>let's see if we have some information before the meeting</p>",
        "id": 200489263,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591830302
    },
    {
        "content": "<p>Looking at the update by <code>djc</code> this looks like <code>P-critical</code> to me <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span> We have a fairly easy way to trigger miscompilations here</p>",
        "id": 200521915,
        "sender_full_name": "lcnr",
        "timestamp": 1591867517
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_prev</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">split</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">split</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">//~^ fails with `left: 0, right: 1`</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 200522161,
        "sender_full_name": "lcnr",
        "timestamp": 1591867710
    },
    {
        "content": "<p>agreed <code>P-critical</code> IMO too</p>",
        "id": 200542074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591881298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, given that you've assigned it to yourself, thoughts?</p>",
        "id": 200542106,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591881317
    },
    {
        "content": "<p>Seems fine to me. I'm making progress on a real fix but for <code>beta</code>, I think I'm just going to disable the optimization</p>",
        "id": 200542248,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591881387
    },
    {
        "content": "<p>have tagged as <code>P-critical</code> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 200542250,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591881388
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>- &quot;Slice index becomes wrong (beta regression)&quot; [#73223](https://github.com/rust-lang/rust/issues/73223)\n  - This is a regression from stable to beta\n  - [It&#39;s also a fairly easy to trigger miscompilation](https://github.com/rust-lang/rust/issues/73223#issuecomment-642530618)\n  - [Regressed PR was identified](https://github.com/rust-lang/rust/pull/69756)\n  - Assigned to @**Wesley Wiser** who is already on it\n</code></pre></div>",
        "id": 200543342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591881989
    },
    {
        "content": "<p>does this sound like a good summary for the meeting?</p>",
        "id": 200543359,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591881998
    },
    {
        "content": "<p>Yeah</p>",
        "id": 200544038,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591882336
    }
]