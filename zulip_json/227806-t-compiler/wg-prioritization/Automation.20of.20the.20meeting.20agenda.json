[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> proposed to automate the addition of the PR's to the meeting agenda. We should decide how we want to do this. Would it be some script that gives text that you can directly paste in the hackmd? Or is it possible to automate even more?</p>",
        "id": 191814922,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585172662
    },
    {
        "content": "<p>to be honest, a big thing that I had wanted to automate was just the process of going through the list of issues and posting them to the Zulip channel in the format that I thought was most readable/usable for the audience</p>",
        "id": 191833204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585188393
    },
    {
        "content": "<p>this is something that could be applied to both pre-triage (going through each unprioritized I-nominated, etc), and to triage itself (going through the beta-noms). Though if the hackmd agenda has them in the right format already, then it may make less sense to mechanize doing it for the triage meeting.</p>",
        "id": 191833234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585188467
    },
    {
        "content": "<p>but the point is, in my head, I figured a single interactive (probably command line) tool could hook into both the Zulip API and the github API</p>",
        "id": 191833289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585188504
    },
    {
        "content": "<p>reading the issues from github, posting each one to zulip in the right format, and then, after a conclusion is reached for each one, updating the github issue (or pull request) with an appropriate comment , including a link to the publicly-accessible zulip archive, and also updating the labels as appropriate for the issue/pr</p>",
        "id": 191833318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585188579
    },
    {
        "content": "<p>as the final picture would be great to interact with a Zulip bot that you say something like ...</p>",
        "id": 191838703,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585195919
    },
    {
        "content": "<p><code>@bot prioritization next</code> and it pastes the next prioritization step</p>",
        "id": 191838842,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585196107
    },
    {
        "content": "<p>and at the end</p>",
        "id": 191838846,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585196124
    },
    {
        "content": "<p><code>@bot prioritization agenda</code> and it build the agenda</p>",
        "id": 191838853,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585196129
    },
    {
        "content": "<p>:)</p>",
        "id": 191838856,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585196130
    },
    {
        "content": "<p>/me wasn't picturing a Zulip bot, but rather a command line tool. But whatever is easiest to get off the ground, I guess.</p>",
        "id": 191930895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585248055
    },
    {
        "content": "<p>A command line tool has the advantage that it can build in the prompting for what the next steps/options are. that, as far as I know, is a little trickier with a chat bot.</p>",
        "id": 191930951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585248085
    },
    {
        "content": "<p>I can dive into that. I don’t mind spending time adding the functionality for a chat bot, but would we have the required infrastructure (servers etc...)</p>",
        "id": 191932282,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585248756
    },
    {
        "content": "<p>Triagebot already has some support for talking to Zulip, I would be unopposed to extending it. I suspect the terminal interface would be far easier, though.</p>",
        "id": 191932582,
        "sender_full_name": "simulacrum",
        "timestamp": 1585248920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> oh that's great, I was planning at some point to start with that</p>",
        "id": 191935291,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585250174
    },
    {
        "content": "<p>maybe we can write some requirements down or just start with something and keep improving it meanwhile we use it</p>",
        "id": 191935395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585250227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Does a HackMD API exist though? I couldn't find it</p>",
        "id": 191950135,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585257340
    },
    {
        "content": "<p>hmm, I did find this (<a href=\"https://github.com/hackmdio/codimd\" title=\"https://github.com/hackmdio/codimd\">codimd</a>) which is an open-sourced stripped down version of hackmd from the same developers, and I think <em>that</em> has an API</p>",
        "id": 192022056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318227
    },
    {
        "content": "<p>but that would only be useful if we were interested in hosting our own instance, and I don't think we are at that point</p>",
        "id": 192022097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318245
    },
    {
        "content": "<p>There is the ability to <a href=\"https://hackmd.io/c/tutorials/%2Fs%2Flink-with-github#Authorize-HackMD-on-GitHub\" title=\"https://hackmd.io/c/tutorials/%2Fs%2Flink-with-github#Authorize-HackMD-on-GitHub\">sync with github</a>, which we <em>might</em> be able to use in tandem with the github API ...?</p>",
        "id": 192022430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318391
    },
    {
        "content": "<p>Having said all that, the tool doesn't <em>need</em> to sync with hackmd</p>",
        "id": 192023029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318610
    },
    {
        "content": "<p>Specifically, If we're talking about a command line tool, then it can just have a command that prints out the agenda to the screen (or to a file, etc)</p>",
        "id": 192023121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318656
    },
    {
        "content": "<p>To me the big wins here are interactions with github and zulip, not hackmd.</p>",
        "id": 192023172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585318677
    },
    {
        "content": "<p>If we're using the GH api, it could also just post the agenda as a gist</p>",
        "id": 192023325,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585318734
    },
    {
        "content": "<p>But I agree, dumping the agenda to a file or stdout seems good enough for now</p>",
        "id": 192023394,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585318767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/191950135\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/191950135\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> Does a HackMD API exist though? I couldn't find it</p>\n</blockquote>\n<p>in my opinion this can be solved simpler</p>",
        "id": 192035342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323452
    },
    {
        "content": "<p>if we were having a zulip bot, when you say <code>@prioritization_bot build-agenda</code> it could just send the whole agenda as a message here</p>",
        "id": 192035457,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323488
    },
    {
        "content": "<p>we just copy the whole thing and paste it on hackmd</p>",
        "id": 192035481,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323496
    },
    {
        "content": "<p>that takes 10 seconds to do at max</p>",
        "id": 192035505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323506
    },
    {
        "content": "<p>but yeah, we could also place the agenda on github or something if we want more automation</p>",
        "id": 192035586,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323540
    },
    {
        "content": "<p>the problem with the agenda in github in my opinion is that then you want to quickly modify it and make it accessible</p>",
        "id": 192035635,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192023394\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192023394\">said</a>:</p>\n<blockquote>\n<p>But I agree, dumping the agenda to a file or stdout seems good enough for now</p>\n</blockquote>\n<p>as a zulip message or as Wesley have said, to stdout if it's a command like program</p>",
        "id": 192035697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585323593
    },
    {
        "content": "<p>can we talk about the pros/cons of zulip bot vs command line tool? I feel like <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> keeps going back to that as a default, and I'm struggling to understand why</p>",
        "id": 192047121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585327861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> seems like a good idea yeah</p>",
        "id": 192047225,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327903
    },
    {
        "content": "<p>The main reason to have a zulip bot that I can immediately grasp is that it would allow <em>anyone</em> to participate in driving the meeting</p>",
        "id": 192047258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585327918
    },
    {
        "content": "<p>any automation will be better</p>",
        "id": 192047291,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327922
    },
    {
        "content": "<p>without having to download a tool, learn how to run it properly and about the idiosyncrasies of its interface</p>",
        "id": 192047365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585327941
    },
    {
        "content": "<p>I think a zulip bot will be better because we would be running the meeting in zulip</p>",
        "id": 192047397,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327950
    },
    {
        "content": "<p>so one can just ask for things here and the bot will reply</p>",
        "id": 192047418,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327959
    },
    {
        "content": "<p>like</p>",
        "id": 192047429,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327960
    },
    {
        "content": "<p>spastorino: @prioritization-bot next</p>",
        "id": 192047468,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585327975
    },
    {
        "content": "<p>prioritization-bot: next is <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\">Unprioritized T-compiler</a>, you need to prioritize issues and remove nomination of the ones not worth discussing</p>",
        "id": 192047556,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328012
    },
    {
        "content": "<p>what's the typical model for a bot to maintain state like that?</p>",
        "id": 192047626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328039
    },
    {
        "content": "<p>or something like that</p>",
        "id": 192047631,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328040
    },
    {
        "content": "<p>does it e.g. maintain internal state per channel? Per (channel, user)?</p>",
        "id": 192047698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328052
    },
    {
        "content": "<p>well, I wanted to note that the bot would need to keep state, unsure how easy is to do that</p>",
        "id": 192047705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328056
    },
    {
        "content": "<p>Right. If its not easy to make a bot keep state, then it seems like a no-go to me.</p>",
        "id": 192047767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328079
    },
    {
        "content": "<p>If we cannot have the bot maintain state, then I don't think it will add much convenience</p>",
        "id": 192047798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328096
    },
    {
        "content": "<p>since we'd have to encode the current state in the command we issue</p>",
        "id": 192047819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192047698\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192047698\">said</a>:</p>\n<blockquote>\n<p>does it e.g. maintain internal state per channel? Per (channel, user)?</p>\n</blockquote>\n<p>I guess it could be global state, we could use things like @prioritization-bot start and the end</p>",
        "id": 192047821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328104
    },
    {
        "content": "<p>(though I suppose the bot could, heh, prompt you with the next command you should send to it.)</p>",
        "id": 192047859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is something like that possible?</p>",
        "id": 192047877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192047767\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192047767\">said</a>:</p>\n<blockquote>\n<p>Right. If its not easy to make a bot keep state, then it seems like a no-go to me.</p>\n</blockquote>\n<p>agreed</p>",
        "id": 192047915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328141
    },
    {
        "content": "<p>The main problem with a command line tool is that we'd have to figure out how to make such a tool interface with the Zulip API</p>",
        "id": 192048099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328190
    },
    {
        "content": "<p>to be clear, I wasn't trying to discuss what's better or not. I was thinking that is an option to consider and mainly just dreaming a bit about possibilities :)</p>",
        "id": 192048136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328205
    },
    {
        "content": "<p>it took me a little while to work out how to communicate via the Github API, but I've been hoping that the stuff I learned in doing that task would be at least semi-applicable to interfacing to the Zulip API</p>",
        "id": 192048213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585328233
    },
    {
        "content": "<p>Global state is easy</p>",
        "id": 192048253,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328254
    },
    {
        "content": "<p>cool</p>",
        "id": 192048276,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328261
    },
    {
        "content": "<p>(and even e.g. per channel/per user), just stick it in the database</p>",
        "id": 192048306,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328273
    },
    {
        "content": "<p>well @triagebot handle state per user actually</p>",
        "id": 192048309,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328274
    },
    {
        "content": "<p>Hm, well, no, currently there's no per user state associated with the bot</p>",
        "id": 192048402,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328301
    },
    {
        "content": "<p>but in this case I think it's overkill, global state is enough</p>",
        "id": 192048417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328304
    },
    {
        "content": "<p>(just with the triagebot server in general)</p>",
        "id": 192048439,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328314
    },
    {
        "content": "<p>how does triagebot knows then my pending stuff?</p>",
        "id": 192048484,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328328
    },
    {
        "content": "<p>Sorry, I meant that it's a single db for the web and Zulip interfaces</p>",
        "id": 192048550,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328353
    },
    {
        "content": "<p>ahh ok ok</p>",
        "id": 192048571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328362
    },
    {
        "content": "<p>i.e. no zulip-specific state</p>",
        "id": 192048596,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328371
    },
    {
        "content": "<p>But adding a new table is super cheap</p>",
        "id": 192048621,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328383
    },
    {
        "content": "<p>anyway, if we were going with global state our problem would be solved because won't be zulip specific neither</p>",
        "id": 192048715,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328405
    },
    {
        "content": "<p>maybe I can try something out today</p>",
        "id": 192048812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is there some repo I should take a look at? to use as an example</p>",
        "id": 192048867,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328461
    },
    {
        "content": "<p>This is all in triagebot</p>",
        "id": 192048949,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328493
    },
    {
        "content": "<p><a href=\"http://zulip.rs\" title=\"http://zulip.rs\">zulip.rs</a> iirc</p>",
        "id": 192049001,
        "sender_full_name": "simulacrum",
        "timestamp": 1585328514
    },
    {
        "content": "<p>and how do you deploy this?</p>",
        "id": 192049348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328643
    },
    {
        "content": "<p>I guess this is where the Docker setup I see on the repo enters</p>",
        "id": 192049460,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585328699
    },
    {
        "content": "<p>yeah it'll auto deploy on merge to master</p>",
        "id": 192052766,
        "sender_full_name": "simulacrum",
        "timestamp": 1585330185
    },
    {
        "content": "<p>I’ve started to dive into the source code for <span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span></p>",
        "id": 192063860,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585335093
    },
    {
        "content": "<p>Unknown command.</p>",
        "id": 192063861,
        "sender_full_name": "triagebot",
        "timestamp": 1585335093
    },
    {
        "content": "<p>Oops, didn’t mean to wake you up :D</p>",
        "id": 192063920,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585335119
    },
    {
        "content": "<p>/me sits and wonders if it is just inevitable that people are going to make this work via <code>@triagebot</code>, by hook or by crook</p>",
        "id": 192064103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335199
    },
    {
        "content": "<p>I guess it shouldn't matter to me, as long as the automation gets done, one way or another</p>",
        "id": 192064242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I personally think that the zulip bot is probably the right interface precisely because it has the natural \"you just need to do what someone else did (publicly)\" vs. the CLI that is sort of everyone-discovers-themselves. I also think that the underlying logic is likely to be pretty similar, so I imagine that if we end up deciding the bot is not working well we can change the frontend to a CLI vs. the bot fairly easily</p>",
        "id": 192064801,
        "sender_full_name": "simulacrum",
        "timestamp": 1585335513
    },
    {
        "content": "<p>The interfacing with Zulip itself and with Github are likely to be reused?</p>",
        "id": 192064861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335550
    },
    {
        "content": "<p>to me those seem like the biggest hurdles</p>",
        "id": 192064877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335560
    },
    {
        "content": "<p>for a CLI</p>",
        "id": 192064880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335562
    },
    {
        "content": "<p>but maybe I'm over-simplifying the custom logic we need that is specific to the pre-triage and triage processes.</p>",
        "id": 192064928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585335586
    },
    {
        "content": "<p>oh well the zulip interface is pretty much ready to go</p>",
        "id": 192065875,
        "sender_full_name": "simulacrum",
        "timestamp": 1585335980
    },
    {
        "content": "<p>i.e. the API etc is already done</p>",
        "id": 192065888,
        "sender_full_name": "simulacrum",
        "timestamp": 1585335986
    },
    {
        "content": "<p>and github (and team api) etc are also available mostly in triagebot</p>",
        "id": 192065917,
        "sender_full_name": "simulacrum",
        "timestamp": 1585336002
    },
    {
        "content": "<p>which is part of why I'd personally think that for something interactive zulip is probably easier</p>",
        "id": 192065980,
        "sender_full_name": "simulacrum",
        "timestamp": 1585336039
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192063860\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/192063860\">said</a>:</p>\n<blockquote>\n<p>I’ve started to dive into the source code for <span class=\"user-mention silent\" data-user-id=\"261224\">triagebot</span></p>\n</blockquote>\n<p>hey, were you able to do something?</p>",
        "id": 192078115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585342296
    },
    {
        "content": "<p>I've just finished some stuff and could dive, pretty late though :)</p>",
        "id": 192078154,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585342314
    },
    {
        "content": "<p>but anyway was interested in hearing from you</p>",
        "id": 192078253,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585342342
    },
    {
        "content": "<p>I mostly looked up the code to try to understand the structure of the bot.</p>",
        "id": 192084299,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585345634
    },
    {
        "content": "<p>I just need to find a design for how to handle a meeting (steps, interactions with the Zulip and GitHub APIs) so that it could be flexible and extensible, so that if the meeting procedure changes, implementing the changes into the bot wouldn’t be hard</p>",
        "id": 192084529,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585345782
    },
    {
        "content": "<p>I’m assuming a meeting/pre-meeting will always be a sequence of steps of some sort, does that look right? <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 192084633,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585345844
    },
    {
        "content": "<p>unsure I got your question</p>",
        "id": 192086365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585346981
    },
    {
        "content": "<p>I meant, is it safe to assume that any (future) meeting procedure will always follow a step-by-step construction?</p>",
        "id": 192089525,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1585349394
    },
    {
        "content": "<p>yes</p>",
        "id": 192089629,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585349473
    },
    {
        "content": "<p>if you take a look at the procedure document, the meeting should follow the order layed out there</p>",
        "id": 192089678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585349510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think it is time to revisit this?</p>",
        "id": 194996907,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1587593053
    },
    {
        "content": "<p>I mainly thought about the design, so I wanted to have your feedback</p>",
        "id": 194996940,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1587593083
    },
    {
        "content": "<ul>\n<li>We probably need a command to start a meeting? Nothing much to say here I think, but we may need to discuss how we want it to handle WG checkins.</li>\n<li>To drive the meeting, I thought we’d only need a <code>next</code> command which would print the current state of the meeting and handle basic features like automatically removing <code>I-nominated</code> or displaying the fancy reactions for the backports</li>\n</ul>",
        "id": 194997523,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1587593475
    },
    {
        "content": "<ul>\n<li>Also we would need various commands to act on the current issue, like adding/removing labels, assigning people...</li>\n</ul>",
        "id": 194997749,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1587593623
    },
    {
        "content": "<p>I'd do it as stateless as possible, I guess all the state you would need to have is where are we in the meeting, like having a next that goes to the next step</p>",
        "id": 194999507,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587594898
    },
    {
        "content": "<p>but about issues and all that could be stateless we just mention the issue number and what we want to do</p>",
        "id": 194999533,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587594916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/194997749\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/194997749\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Also we would need various commands to act on the current issue, like adding/removing labels, assigning people...</li>\n</ul>\n</blockquote>\n<p>those commands already exist on github, so we would need to figure those from Zulip</p>",
        "id": 194999630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587594963
    },
    {
        "content": "<p>we may want some way to have only a restricted set of Zulip users able to figure that</p>",
        "id": 194999661,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587594992
    },
    {
        "content": "<p>just in case :)</p>",
        "id": 194999674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587595003
    },
    {
        "content": "<p>is it difficult to figure out the zulip-archive URL to link to from the bot itself? I.e. are the message ID's over there predictable?</p>",
        "id": 195003917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587598515
    },
    {
        "content": "<p>(I'm imagining having the githubs comments injected by the bot link back to the relevant point in the meeting on zulip-archive. Which may be tricky for various reasons; e.g. the zulip-archive can have a bit of lag before it updates.)</p>",
        "id": 195003952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587598561
    },
    {
        "content": "<p>Zulip archive should match Zulip I think; but I was unable to identify a nice way in the bot to identify Zulip urls at all. Probably just didn't look hard enough...</p>",
        "id": 195004096,
        "sender_full_name": "simulacrum",
        "timestamp": 1587598662
    },
    {
        "content": "<p>I'm thinking a bit if I should do something very tiny and also very bad that at least help with a couple of things we do during pre-triage</p>",
        "id": 195714579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169291
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span></p>",
        "id": 195714587,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169297
    },
    {
        "content": "<p>unsure if you've tried out something</p>",
        "id": 195714620,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169308
    },
    {
        "content": "<p>I didn't, if you want to do it go ahead</p>",
        "id": 195714671,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169332
    },
    {
        "content": "<p>but for now, I think I'd do something for console, that I can run quickly and gives me the searches</p>",
        "id": 195714682,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169337
    },
    {
        "content": "<p>ok, will see if I have time and can do something</p>",
        "id": 195714712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169352
    },
    {
        "content": "<p>I remember that we've talked about reusing code from rustbot was it?</p>",
        "id": 195714766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169376
    },
    {
        "content": "<p>I need to implement pagination for a PR I have open</p>",
        "id": 195715597,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169682
    },
    {
        "content": "<p>a PR about?</p>",
        "id": 195715635,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169700
    },
    {
        "content": "<p>link?</p>",
        "id": 195715648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169703
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/triagebot/issues/477\" title=\"https://github.com/rust-lang/triagebot/issues/477\">rust-lang/triagebot#477</a></p>",
        "id": 195715685,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169716
    },
    {
        "content": "<p>ohh, I see</p>",
        "id": 195716005,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169856
    },
    {
        "content": "<p>I'll potentially have the same problem</p>",
        "id": 195716044,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169873
    },
    {
        "content": "<p>I didn't implement pagination yet (to fetch things from GH)</p>",
        "id": 195716066,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169880
    },
    {
        "content": "<p>But I'll need to do it, and so will you</p>",
        "id": 195716122,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169892
    },
    {
        "content": "<p>what would happen if you don't? I guess you would get just the first page?</p>",
        "id": 195716128,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169893
    },
    {
        "content": "<p>You get 30 issues</p>",
        "id": 195716150,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169901
    },
    {
        "content": "<p>You can request up to 100 at a time</p>",
        "id": 195716166,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588169909
    },
    {
        "content": "<p>ok for my use case that's enough :)</p>",
        "id": 195716172,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169913
    },
    {
        "content": "<p>I mean, I told you that I was going to do something quick and dirty <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 195716196,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169926
    },
    {
        "content": "<p>I want to do something that takes me less time that the time it takes me do this manually</p>",
        "id": 195716223,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169941
    },
    {
        "content": "<p>we can improve later</p>",
        "id": 195716230,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169944
    },
    {
        "content": "<p>we never have more than 30/100 issues to prioritize or nominations or anything like that</p>",
        "id": 195716286,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588169969
    },
    {
        "content": "<p>However if you need to count <code>P-high</code> or <code>P-medium</code> issues...</p>",
        "id": 195716524,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588170051
    },
    {
        "content": "<p>I mean, there is a point where you'll be limited</p>",
        "id": 195716570,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588170071
    },
    {
        "content": "<p>Another thing that you can reuse from triagebot is the response structs</p>",
        "id": 195716611,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588170097
    },
    {
        "content": "<p>I think in the end, if <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> allows us to do so, we would want this to be integrated in rustbot</p>",
        "id": 195718843,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588170970
    },
    {
        "content": "<p>I guess he already said he wouldn't mind</p>",
        "id": 195718895,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588170995
    },
    {
        "content": "<p>yeah</p>",
        "id": 195718908,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588171001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/191932582\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Automation.20of.20the.20meeting.20agenda/near/191932582\">said</a>:</p>\n<blockquote>\n<p>Triagebot already has some support for talking to Zulip, I would be unopposed to extending it. I suspect the terminal interface would be far easier, though.</p>\n</blockquote>",
        "id": 195718974,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588171023
    },
    {
        "content": "<p>yeah, going to start with terminal interface so we have something :)</p>",
        "id": 195719031,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588171044
    },
    {
        "content": "<p>was trying some of this stuff out</p>",
        "id": 195740463,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179812
    },
    {
        "content": "<p>is there a way in github api to filter issues that do not contain certain label</p>",
        "id": 195740491,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179828
    },
    {
        "content": "<p>what you do with \"-label\" in the ui</p>",
        "id": 195740518,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179839
    },
    {
        "content": "<p>from what I can see here <a href=\"https://developer.github.com/v3/issues/#parameters\" title=\"https://developer.github.com/v3/issues/#parameters\">https://developer.github.com/v3/issues/#parameters</a> I don't see a way to do it</p>",
        "id": 195740573,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179850
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 195740582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179857
    },
    {
        "content": "<p>I guess I could manually do it but ... :)</p>",
        "id": 195740709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588179925
    },
    {
        "content": "<p>not sure if we should use this but we could consider it: <a href=\"https://github.com/google/triage-party\" title=\"https://github.com/google/triage-party\">https://github.com/google/triage-party</a></p>",
        "id": 195741195,
        "sender_full_name": "DPC",
        "timestamp": 1588180141
    },
    {
        "content": "<p>Seems like a big commitment to use it, maybe misunderstanding though.</p>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> why do you want to ignore some label?</p>",
        "id": 195741720,
        "sender_full_name": "simulacrum",
        "timestamp": 1588180409
    },
    {
        "content": "<p>this is the kind of searches we have in our process</p>",
        "id": 195741757,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180433
    },
    {
        "content": "<p>want to look for things that have not been prioritized</p>",
        "id": 195741771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180442
    },
    {
        "content": "<p>to the search is -label:P-high ... and all that chain :)</p>",
        "id": 195741834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180465
    },
    {
        "content": "<p>for instance</p>",
        "id": 195741860,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180487
    },
    {
        "content": "<p>this is the search of unprioritized I-prioritize <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize</a></p>",
        "id": 195741876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180502
    },
    {
        "content": "<p>which I'd claim we can just search for I-prioritize, if they are already prioritized we should remove I-prioritize</p>",
        "id": 195741913,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180523
    },
    {
        "content": "<p>but there are others</p>",
        "id": 195741914,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180526
    },
    {
        "content": "<p>Beta regressions without P-label: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc</a></p>",
        "id": 195741927,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180539
    },
    {
        "content": "<p>Ah yeah, I think there's not really great support... hm</p>",
        "id": 195741937,
        "sender_full_name": "simulacrum",
        "timestamp": 1588180544
    },
    {
        "content": "<p>I think I need to search and filter manually</p>",
        "id": 195741992,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180563
    },
    {
        "content": "<p>:(</p>",
        "id": 195742006,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180564
    },
    {
        "content": "<p>Well if you're already limiting to just beta regressions for example that shouldn't be a problem</p>",
        "id": 195742059,
        "sender_full_name": "simulacrum",
        "timestamp": 1588180603
    },
    {
        "content": "<p>what do you mean? that we can just get them all and it's manageable?</p>",
        "id": 195742292,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588180712
    },
    {
        "content": "<blockquote>\n<p>Seems like a big commitment to use it, maybe misunderstanding though.</p>\n</blockquote>\n<p>yeah definitely..</p>",
        "id": 195743658,
        "sender_full_name": "DPC",
        "timestamp": 1588181376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> was checking again things about this and prs are even more problematic</p>",
        "id": 195772355,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588195579
    },
    {
        "content": "<p><a href=\"https://developer.github.com/v3/pulls/#parameters\" title=\"https://developer.github.com/v3/pulls/#parameters\">https://developer.github.com/v3/pulls/#parameters</a></p>",
        "id": 195772398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588195600
    },
    {
        "content": "<p>doesn't seem to be a way to filter with labels</p>",
        "id": 195772413,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588195611
    },
    {
        "content": "<p>so it's completely useless for what we want</p>",
        "id": 195772426,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588195620
    },
    {
        "content": "<p>or we should retrieve all the PRs and filter manually, which ugh :)</p>",
        "id": 195772570,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588195691
    }
]