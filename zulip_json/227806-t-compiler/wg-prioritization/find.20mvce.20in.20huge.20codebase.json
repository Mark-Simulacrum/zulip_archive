[
    {
        "content": "<p>Yesterday I wanted to find a mvce for <a href=\"https://github.com/rust-lang/rust/issues/77653\">#77653</a> but I had no idea on how to start find the actual bug since there are thousands of tests and lines of code. Is there any way to get some more context about the ICE? Iâ€™m fine with compiling rustc from source.</p>",
        "id": 212662965,
        "sender_full_name": "Stu",
        "timestamp": 1602147632
    },
    {
        "content": "<p>In this specific case, would the <a href=\"https://github.com/rust-lang/rust/issues/77638#issuecomment-705105714\">playground link</a> (from the linked issue) help finding the regression in rustc?</p>",
        "id": 212664472,
        "sender_full_name": "apiraino",
        "timestamp": 1602148568
    },
    {
        "content": "<p>It would not verify that the issue is the same as the substrate one because you would still have to compare any test with the playground to find similarities</p>",
        "id": 212665202,
        "sender_full_name": "Stu",
        "timestamp": 1602149046
    },
    {
        "content": "<p>you're right. I thought one could bisect rustc using that playground code -&gt; find a possible culprit commit -&gt; run the Substrate code around that rustc commit and see when it starts failing.But didn't try compiling their Substrate, so I don't know how complex that would be.<br>\nI guess then the reporter (from Parity) could perhaps help reducing to a more manageable example</p>",
        "id": 212666499,
        "sender_full_name": "apiraino",
        "timestamp": 1602149768
    },
    {
        "content": "<p>Yea probably. I can try the regressed version to check if itâ€™s regressed in the same commit. (But it will still take some time to compile 1300 crates ðŸ˜…)</p>",
        "id": 212666934,
        "sender_full_name": "Stu",
        "timestamp": 1602150040
    },
    {
        "content": "<p>But it would still be nice to find the case in substrate</p>",
        "id": 212667528,
        "sender_full_name": "Stu",
        "timestamp": 1602150434
    }
]