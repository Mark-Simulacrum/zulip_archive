[
    {
        "content": "<p>kind of a bikesheed here, but I see that we have <code>libs-impl</code> and the rest of the \"teams\" are really called <code>T-something</code>, I wonder if we should rename this to <code>T-libs-impl</code></p>",
        "id": 198385576,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590100223
    },
    {
        "content": "<p>I don't have a concrete need more than making more explicit that this is kind of a team which today happens to be under <code>T-compiler</code> control but in the way we are handling tags I see this like a team</p>",
        "id": 198385729,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590100294
    },
    {
        "content": "<p>at some point it could help in searches like <code>T-*</code> or stuff like that but what I also want to avoid is issues with <code>T-compiler</code> and <code>libs-impl</code> together as it happened today because doing that kind of breaks prioritization flow</p>",
        "id": 198385990,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590100441
    },
    {
        "content": "<p>It's definitely useful to have <code>T</code> prefix for triaging, though it isn't _team_ directly. So, if we consider it as T-libs or T-compiler related item, then I'd +1 for this idea.</p>",
        "id": 198393095,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1590105538
    },
    {
        "content": "<p>i agree T-libs-impl sounds better <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 198393422,
        "sender_full_name": "DPC",
        "timestamp": 1590105817
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 198438599,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590152733
    },
    {
        "content": "<p>I think T-libs-impl is confusing. We don’t have a libs-impl team.</p>",
        "id": 198845927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590549259
    },
    {
        "content": "<p>If anything, it should be, what, an “area”, like A-libs-impl?</p>",
        "id": 198845955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590549291
    },
    {
        "content": "<p>But that’s only if we think a prefix is warranted at all....</p>",
        "id": 198845961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590549307
    },
    {
        "content": "<p>I see that <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> says we are treating libs-impl like a team, but I guess I would like more explanation of that?</p>",
        "id": 198846012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590549372
    },
    {
        "content": "<p>indeed <code>A-libs-impl</code> is more reasonable to me.<br>\n<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> so, my concern is that the issues labeled with <code>libs-impl</code> don't have any <code>T</code>-prefixed labels, I guess we could add <code>T-compiler</code> to the most issues now, right?</p>",
        "id": 198875958,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1590577047
    },
    {
        "content": "<p>hmmm I guess it depends on how you look at this issue, we could say that we do have a libs-impl team which is actually composed by T-compiler members</p>",
        "id": 198885273,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583666
    },
    {
        "content": "<p>I don't care that much about that to be honest but what <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span> raised is the main discussion I think</p>",
        "id": 198885352,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583700
    },
    {
        "content": "<p>how do we want exactly to label things and how wg-prioritization is going to adapt to the labelling system we decide to use</p>",
        "id": 198885410,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583743
    },
    {
        "content": "<p>I agree that we should add <code>T-compiler</code> so we can filter (for example <code>I-nominated</code> + <code>T-compiler</code>) when preparing meetings</p>",
        "id": 198885414,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590583746
    },
    {
        "content": "<p>well that or as we are already doing which is doing queries with <code>I-nominated</code> + <code>T-compiler</code> and <code>I-nominated</code> + <code>libs-impl</code></p>",
        "id": 198885515,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583808
    },
    {
        "content": "<p>Right, but it complicates the queries</p>",
        "id": 198885545,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590583829
    },
    {
        "content": "<p>It depends on how we want to organize the meeting I think</p>",
        "id": 198885554,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590583840
    },
    {
        "content": "<p>well yeah, not really complicated though :P, but one thing about splitting queries is that we can also split the sections of the agenda</p>",
        "id": 198885582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583860
    },
    {
        "content": "<p>Whether we want to consider <code>libs-impl</code> separately or not</p>",
        "id": 198885592,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590583869
    },
    {
        "content": "<p>like let's now focus on the compiler nominations and then let's focus on the libs impl nominations</p>",
        "id": 198885605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583876
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/bikesheed.20libs-impl.20or.20T-libs-impl/near/198885592\">said</a>:</p>\n<blockquote>\n<p>Whether we want to consider <code>libs-impl</code> separately or not</p>\n</blockquote>\n<p>exactly, otherwise everything is mixed up</p>",
        "id": 198885629,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583896
    },
    {
        "content": "<p>we could also have both labels and split anyway, queries would be t-compiler + libs-impl and t-compiler - libs-impl</p>",
        "id": 198885750,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583951
    },
    {
        "content": "<p>and we can also automatically tag with t-compiler things that are tagged with libs-impl</p>",
        "id": 198885782,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583966
    },
    {
        "content": "<p>I guess we just want to define how do we want to do this</p>",
        "id": 198885813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583978
    },
    {
        "content": "<p>to be honest I'm neutral but we need to properly define this :)</p>",
        "id": 198885832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590583993
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 198885862,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590584016
    },
    {
        "content": "<p>Unless we were to state that we <em>have</em> a T-libs-impl team, and set up infrastructure for it (e.g. a GitHub user group), I continue to have the same position that I posed up above. We can make the wg-prioritization queries smart enough to deal with whatever name we choose here.</p>",
        "id": 198888510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585373
    },
    {
        "content": "<p>My concern is for the UX for people <em>not</em> on the wg-prioritization who are trying to understand the labels</p>",
        "id": 198888575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585410
    },
    {
        "content": "<p>And <del>add</del> maintain them accordingly</p>",
        "id": 198888580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah you're right and this sounds good!</p>",
        "id": 198888760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585519
    },
    {
        "content": "<p>let's stick with <code>libs-impl</code> or <code>A-libs-impl</code>, I'm ok with whatever name we want</p>",
        "id": 198888790,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585540
    },
    {
        "content": "<p>now the question is ... do we want <code>T-compiler</code> + <code>libs-impl</code> or just <code>libs-impl</code>?</p>",
        "id": 198888855,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585581
    },
    {
        "content": "<p>I think overall <code>T-compiler</code> + <code>libs-impl</code> is more flexible</p>",
        "id": 198889003,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590585659
    },
    {
        "content": "<p>if <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> agrees on this I'd add to triagebot the ability to automatically add <code>T-compiler</code> labels to things that are <code>libs-impl</code></p>",
        "id": 198889067,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585699
    },
    {
        "content": "<p>That sounds reasonable to me</p>",
        "id": 198889217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585792
    },
    {
        "content": "<p>If I remove T-compiler, will it put it back?</p>",
        "id": 198889273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585822
    },
    {
        "content": "<p>Seems feasible to me</p>",
        "id": 198889357,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590585848
    },
    {
        "content": "<p>I’m namely thinking of the (rare) scenario where I <em>dont</em> want T-compiler on it. Eg if we want to nominate it for T-libs discussion</p>",
        "id": 198889363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585856
    },
    {
        "content": "<p>I wasn’t clear: I don’t want the bot to put it back. :)</p>",
        "id": 198889386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590585875
    },
    {
        "content": "<p>yeah it won't</p>",
        "id": 198889398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585884
    },
    {
        "content": "<p>Well we can do both :D</p>",
        "id": 198889442,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590585920
    },
    {
        "content": "<p>what both means?</p>",
        "id": 198889467,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585935
    },
    {
        "content": "<p>I meant that we can decide how we want to implement it</p>",
        "id": 198889549,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590585967
    },
    {
        "content": "<p>Sorry, that was unclear</p>",
        "id": 198889558,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590585972
    },
    {
        "content": "<p>I still don't get what you mean :)</p>",
        "id": 198889585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590585986
    },
    {
        "content": "<p>you meant, if the bot keeps adding the label regardless Felix wants to remove it?</p>",
        "id": 198889617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586004
    },
    {
        "content": "<p><span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 198889625,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586009
    },
    {
        "content": "<p>if it was april 1st we could totally do <code>if pnkfelix then add_label_back</code> <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 198889670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586036
    },
    {
        "content": "<p>I wanted to say that we could choose either to add it back or not</p>",
        "id": 198889695,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586053
    },
    {
        "content": "<p>yeah what I was trying to say is that in the usual way we are implementing this, the label is not re-added</p>",
        "id": 198889802,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586090
    },
    {
        "content": "<p>we have this for <code>I-prioritize</code> and regressions already</p>",
        "id": 198889817,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586103
    },
    {
        "content": "<p>Right, but <code>I-prioritize</code> is a bit special</p>",
        "id": 198889846,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586127
    },
    {
        "content": "<p>right</p>",
        "id": 198889864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586136
    },
    {
        "content": "<p>We might want a general functionality to add labels when certain labels are added</p>",
        "id": 198889891,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586150
    },
    {
        "content": "<p>To extract this functionality from the prioritize functionality</p>",
        "id": 198889910,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586162
    },
    {
        "content": "<p>agreed</p>",
        "id": 198889915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586164
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 198889922,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586168
    },
    {
        "content": "<p>we have already a bunch and I also want to do <code>I-unsound</code> and not <code>requires-nightly</code> then add <code>I-prioritize</code></p>",
        "id": 198890025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586211
    },
    {
        "content": "<p>I'd say we need a mapping from a list of patterns of labels to one or maybe a set of labels</p>",
        "id": 198890140,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586286
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 198890154,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> do you want to implement this or do I want to implement this?</p>",
        "id": 198890283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586356
    },
    {
        "content": "<p>:P</p>",
        "id": 198890284,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586357
    },
    {
        "content": "<p>more ideas ... we need to ping cleanup whenever  <code>E-needs-bisection</code> or <code>E-needs-mcve</code> are added</p>",
        "id": 198891355,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586867
    },
    {
        "content": "<p>probably something similar exists for LLVM</p>",
        "id": 198891368,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586874
    },
    {
        "content": "<p>basically I guess we could get rid of the command and just have a label doing the job</p>",
        "id": 198891395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586889
    },
    {
        "content": "<p>We could use the Cleanup label then <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 198891444,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586915
    },
    {
        "content": "<p>we could totally unify most of our commands under labels</p>",
        "id": 198891505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/bikesheed.20libs-impl.20or.20T-libs-impl/near/198891444\">said</a>:</p>\n<blockquote>\n<p>We could use the Cleanup label then <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>\n</blockquote>\n<p>right, but then we would want <code>E-needs-bisection</code> and <code>E-needs-mcve</code> to add <code>Cleanup</code> label too :P</p>",
        "id": 198891569,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586952
    },
    {
        "content": "<p>those labels will add <code>Cleanup</code> and <code>Cleanup</code> addition will fire the command, hehe</p>",
        "id": 198891621,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586972
    },
    {
        "content": "<p>This might be the best solution</p>",
        "id": 198891630,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590586978
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 198891655,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590586986
    },
    {
        "content": "<p>Else we might trigger the command twice due to adding <code>E-needs-bisection</code> then <code>E-needs-mcve</code></p>",
        "id": 198891840,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590587052
    },
    {
        "content": "<p>Anyway</p>",
        "id": 198891861,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590587059
    },
    {
        "content": "<p><span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span></p>",
        "id": 198891890,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590587069
    },
    {
        "content": "<p>we would need to check and fire once I guess :)</p>",
        "id": 198892296,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590587223
    },
    {
        "content": "<p>If we fire when the label is added we won't add the label if it is already there, right?</p>",
        "id": 198892364,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590587253
    },
    {
        "content": "<p>So GitHub's label system would prevent the mistake <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 198892477,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590587284
    },
    {
        "content": "<p>hmm I think it kind of re-adds it, not 100% sure though</p>",
        "id": 198894583,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590588132
    },
    {
        "content": "<p>I'd prevert this to happen from our code</p>",
        "id": 198894611,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590588145
    },
    {
        "content": "<p>Of course <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 198894676,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1590588171
    }
]