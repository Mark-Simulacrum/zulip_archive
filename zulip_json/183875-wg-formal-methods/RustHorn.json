[
    {
        "content": "<p>Paper on CHC-based automatic property verification leveraging Rust's ownership, reminiscent of prusti: <a href=\"https://arxiv.org/abs/2002.09002\">https://arxiv.org/abs/2002.09002</a></p>",
        "id": 201423853,
        "sender_full_name": "Shnatsel",
        "timestamp": 1592590311
    },
    {
        "content": "<p>I'm not sure if any of the authors are here, but you can talk to them at <a href=\"https://www.reddit.com/r/rust/comments/hbejpj/\">https://www.reddit.com/r/rust/comments/hbejpj/</a></p>",
        "id": 201424015,
        "sender_full_name": "Shnatsel",
        "timestamp": 1592590407
    },
    {
        "content": "<p>My thesis is based on a similar approach though I'm not targeting CHCs and I'm putting a particular effort in keeping the source language approachable for non CS people.</p>",
        "id": 201552418,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592773048
    },
    {
        "content": "<p>I've read the RustHorn paper quite a few times though. The approach of representing borrows as a pair of values is key imo</p>",
        "id": 201552462,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592773087
    },
    {
        "content": "<p>would love to read it some day once it's published <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 201553502,
        "sender_full_name": "DPC",
        "timestamp": 1592774787
    },
    {
        "content": "<p>I'll have a 20 page summary of this summer's work in ~1 month :)</p>",
        "id": 201554275,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592775970
    },
    {
        "content": "<p>It describes a deductive verification system for a small subset of mir (only box + refs + pairs / sums) but includes a proof of correctness and all the fun stuff :)</p>",
        "id": 201554286,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592776021
    },
    {
        "content": "<p>nice <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 201554448,
        "sender_full_name": "DPC",
        "timestamp": 1592776351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"312719\">Xavier Denis</span> <a href=\"#narrow/stream/183875-wg-formal-methods/topic/RustHorn/near/201552462\">said</a>:</p>\n<blockquote>\n<p>I've read the RustHorn paper quite a few times though. The approach of representing borrows as a pair of values is key imo</p>\n</blockquote>\n<p>their use of prophecy variables in ingenious. it's a formal take on borrowing that's entirely different from my lifetime logic. i still have to fully understand what it means.</p>",
        "id": 201556561,
        "sender_full_name": "RalfJ",
        "timestamp": 1592780068
    },
    {
        "content": "<p>it also leads to a super natural encoding for deductive verification, since prophecy variables are represented by non-determinism.</p>",
        "id": 201588556,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592820803
    },
    {
        "content": "<p>smt solvers love all the constraints that emerge</p>",
        "id": 201588643,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592820860
    },
    {
        "content": "<p>Thank you for sharing the paper here! I'm the first author of the paper. Ask me anything <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 201684047,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592881862
    },
    {
        "content": "<p>I'm so happy to hear that Xavier is working on verification of Rust programs on the basis of RustHorn!</p>",
        "id": 201684327,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592882374
    },
    {
        "content": "<p>I found the method of RustHorn itself after about a month of thinking about Rust's type system, but it took a fairly long time to understand it better and find the correctness proof for it. I didn't even notice the notion of prophecy variables until reviewers of the paper told me about that.</p>",
        "id": 201684772,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592883083
    },
    {
        "content": "<p>I feel that there are still a lot to study in the direction of RustHorn <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 201685027,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592883485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221527\">@Yusuke Matsushita</span> , you're going to be working at MPI soon, right?</p>",
        "id": 201723729,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592918316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312719\">@Xavier Denis</span> Yes, I'll do an internship at MPI's RustBelt team from September! (Maybe virtually, with 7 hours' time-zone difference from Japan.)</p>",
        "id": 201725653,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592919214
    },
    {
        "content": "<p>rough! hopefully you can make it to europe :)</p>",
        "id": 201727551,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1592920044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312719\">@Xavier Denis</span> Thank you <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 201729191,
        "sender_full_name": "Yusuke Matsushita",
        "timestamp": 1592920758
    }
]