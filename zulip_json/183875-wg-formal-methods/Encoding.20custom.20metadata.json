[
    {
        "content": "<p>Hey!</p>",
        "id": 255056162,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752547
    },
    {
        "content": "<p>Has anyone figured out if it's possible for a rustc_driver to store custom metadata alongside the 'compilation' of the current crate?</p>",
        "id": 255056235,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752577
    },
    {
        "content": "<p>In particuliar I have some <code>SubstsRef</code> I need to serialize</p>",
        "id": 255056265,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752590
    },
    {
        "content": "<p>and load from a <em>different</em> crate, (obviously they would need their crate id translated)</p>",
        "id": 255056325,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752613
    },
    {
        "content": "<p>I know it's possible to serialize a <code>SubstsRef</code> (that's what rustc does for predicates etc), but I cannot figure out how I could serialize <em>additional</em> ones</p>",
        "id": 255056468,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752657
    },
    {
        "content": "<p>The <code>TyEncoder</code> trait is quite complex, and I cannot figure out whether its feasible to give a custom implementation or what</p>",
        "id": 255056643,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632752724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas [he/him]</span> idk if prusti has encountered this issue?</p>",
        "id": 255057879,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632753160
    },
    {
        "content": "<p>As far as I know, MIRAI uses a database to transfer information between invocations on different crates. Maybe, it would also work for you?</p>",
        "id": 255066670,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1632756053
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"341042\">@Herman Venter</span></p>",
        "id": 255066713,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1632756071
    },
    {
        "content": "<p>My issue is less the storage so much as the encoding itself</p>",
        "id": 255073273,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632758425
    },
    {
        "content": "<p>if mirai manages to encode &amp; decode things like <code>SubstsRef</code> that would be really cool</p>",
        "id": 255073330,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632758441
    },
    {
        "content": "<p>I need it to be the actual rustc types because I need to pass them to things like trait resolution afterwards</p>",
        "id": 255073379,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632758458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"312719\">Xavier Denis</span> <a href=\"#narrow/stream/183875-wg-formal-methods/topic/Encoding.20custom.20metadata/near/255073273\">said</a>:</p>\n<blockquote>\n<p>I need it to be the actual rustc types because I need to pass them to things like trait resolution afterwards</p>\n</blockquote>\n<p>I see. Then I have no idea how to do this… If you find a solution for this, please share!</p>",
        "id": 255076936,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1632759779
    },
    {
        "content": "<p>By the way, maybe it would make sense to start documenting things “how to extract X from the compiler” on the group's GitHub? And file issues for all things, which we have not figured out yet?</p>",
        "id": 255077130,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1632759862
    },
    {
        "content": "<p>I love to see a solution to this as well. Since the rust compiler already supports incremental compilation, there must be some kind of story for this already. It would be great if a knowledgable person from the rust compiler time can set aside an hour or so to educate all of us in a group on how this works.</p>",
        "id": 255096121,
        "sender_full_name": "Herman Venter",
        "timestamp": 1632767008
    },
    {
        "content": "<p>I've asked the authors before and this is basically unsupported</p>",
        "id": 255106879,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632771242
    },
    {
        "content": "<p>\"That's pretty hard to do without actually extending the existing metadata.\"</p>",
        "id": 255106945,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632771259
    },
    {
        "content": "<p>But this is the kind of question that the group is for!</p>",
        "id": 255106971,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632771274
    },
    {
        "content": "<p>and Vytautas: fully agree</p>",
        "id": 255106991,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632771281
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/rust-formal-methods/wg/issues/3\">https://github.com/rust-formal-methods/wg/issues/3</a> to this end</p>",
        "id": 255110090,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632772538
    },
    {
        "content": "<p>I also personally talked with Matthew Jasper about this since he's worked on this area before but maybe we can gather a more concrete set of requirements together</p>",
        "id": 255110201,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632772574
    },
    {
        "content": "<p>I think that the key may be to build a custom <code>TyEncoder</code> which we could then package up as a crate</p>",
        "id": 255110576,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632772733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312719\">@Xavier Denis</span> I'm into this :)</p>",
        "id": 255298347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632862765
    },
    {
        "content": "<p>I've been thinking about this idea of \"open ended compilers\"</p>",
        "id": 255298496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632862807
    },
    {
        "content": "<p>It's kind of what I described in <a href=\"https://smallcultfollowing.com/babysteps/blog/2020/04/09/libraryification/\">library-ification</a>, but taken further</p>",
        "id": 255298549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632862821
    },
    {
        "content": "<p>at the moment it's a bunch of chaotic thoughts, but this is a useful piece of info to think about</p>",
        "id": 255298604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632862834
    },
    {
        "content": "<p>I’m going to put aside some time in the coming weeks to hack together a solution</p>",
        "id": 255351547,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632898797
    },
    {
        "content": "<p>The ability to encode data “alongside” rust’s normal metadata is becoming critical for me</p>",
        "id": 255351726,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632898848
    },
    {
        "content": "<p>And I’m sure it would help greatly simplify some things prusti does</p>",
        "id": 255351756,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1632898865
    },
    {
        "content": "<p>I've found a solution!</p>",
        "id": 255573657,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1633008556
    },
    {
        "content": "<p>Once i get it working for Creusot, I'll share what I have and try to see how we can make this a shared crate</p>",
        "id": 255573722,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1633008577
    },
    {
        "content": "<p>It's a HASSLE to figure out how to encode &amp; decode rustc metadata</p>",
        "id": 255573790,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1633008600
    },
    {
        "content": "<p>and there are some api limitations you need to work around</p>",
        "id": 255573867,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1633008615
    },
    {
        "content": "<p>additionally, what i have now is clearly not 'optimal', rustc does lazy deserialization / whereas i don't bother with that and just do things eagerly</p>",
        "id": 255573974,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1633008662
    },
    {
        "content": "<p>I ended up with this little crate</p>",
        "id": 257173297,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1634030627
    },
    {
        "content": "<p><a href=\"https://github.com/xldenis/creusot/tree/master/creusot-metadata\">https://github.com/xldenis/creusot/tree/master/creusot-metadata</a></p>",
        "id": 257173298,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1634030628
    },
    {
        "content": "<p>which just exposes a simple <code>Encoder</code> / <code>Decoder</code></p>",
        "id": 257173318,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1634030640
    },
    {
        "content": "<p>if there are other interested tools, I could publish it (renamed), it has no creusot dependencies</p>",
        "id": 257173390,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1634030661
    },
    {
        "content": "<p>and that way we can share improvements</p>",
        "id": 257173397,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1634030666
    }
]