[
    {
        "content": "<p>There was a reddit comment from I think (but not sure) Sven Thiele, which is now following the project and is a member of Potassco (the group at the origin of the algorithm used by pubgrub) suggestion to look into the \"two-watched-literal\" scheme: <a href=\"https://github.com/pubgrub-rs/pubgrub/issues/101\">https://github.com/pubgrub-rs/pubgrub/issues/101</a></p>",
        "id": 244884142,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1625444261
    },
    {
        "content": "<p>From very briefly looking into the first link, it seems to handle more efficiently unit propagation, which is where we spend most of our time. So it may be worth exploring, in addition to new API</p>",
        "id": 244884198,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1625444382
    },
    {
        "content": "<p>It is an especially important approach when dealing with incompatibilities that has more than two terms. Which is rare in our use case.</p>",
        "id": 244884977,
        "sender_full_name": "Eh2406",
        "timestamp": 1625445790
    },
    {
        "content": "<p>But I agree that The data structures behind unit propagation, are going to be some of the next performance improvements.</p>",
        "id": 244885030,
        "sender_full_name": "Eh2406",
        "timestamp": 1625445863
    },
    {
        "content": "<p>Actual implementation may be more relevant than the theoretical descriptions I have read.</p>",
        "id": 244885480,
        "sender_full_name": "Eh2406",
        "timestamp": 1625446709
    }
]