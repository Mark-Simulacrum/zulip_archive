[
    {
        "content": "<p>I am so excited to continue working on this! Thank you both for making this happen! I have all these ideas in my head and have no sense of what is the important next step. What do you think? What developments need to happen to work on the parts you are most excited about?</p>",
        "id": 212775495,
        "sender_full_name": "Eh2406",
        "timestamp": 1602210641
    },
    {
        "content": "<p>I think the road that suits me most, would be to consolidate what we have, to publish a v0.2 and then do the org transition and a cargo-pubgrub-experiment repo to try things related to cargo. Or rather do the org transition just before publishing v0.2 such that it already points there.</p>\n<p>By consolidate, I mean</p>\n<ul>\n<li>Complete the property test suit for big registries</li>\n<li>Land some low hanging fruit performance optimizations</li>\n<li>Improve code \"quality\" (with things like clippy)</li>\n<li>Improve CI</li>\n<li>\n<p>Have a general review of Readme and API docs to make sure things are coherent (both public API and private modules)<br>\n(- Write a user guide)</p>\n</li>\n<li>\n<p>Announce it and have user try it for feedback</p>\n</li>\n</ul>\n<p>It seems like mostly admin stuff but I think that's the important things to do to to have more feedback</p>",
        "id": 212791656,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602229069
    },
    {
        "content": "<p>Do you think it's worth creating a separate repo for cargo related stuff rather than working in a branch?<br>\nThat probably follows from whether you would like those changes to be merged once they are ready or if you want to call current repo \"feature complete\" for your purposes, and for cargo's version to publish separately to <a href=\"http://crates.io\">crates.io</a>.</p>",
        "id": 212795425,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602231593
    },
    {
        "content": "<p>Yes, things that are specific to cargo should be explored in another repo, or in case things truly need to be modified in the base pubgrub algorithm that would not be beneficiary for it independently than cargo then in a fork or patched version of the base repo</p>",
        "id": 212812259,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602242871
    },
    {
        "content": "<p>We could you make use of \"features\" and make those disables by default.</p>",
        "id": 212820769,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602247916
    },
    {
        "content": "<p>Maybe? I don't know, I've never really used features myself. They seem more adequate for extensions than for modifications. Let's wait and see when we actually try to figure out specific cargo stuff. But if you want to try exploring some things cargo-related before consolidation of base pubgrub, please do so in a fork</p>",
        "id": 212826636,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602250829
    },
    {
        "content": "<p>That all sounds like a really good medium term plan!</p>",
        "id": 212831198,
        "sender_full_name": "Eh2406",
        "timestamp": 1602252934
    },
    {
        "content": "<p>I am wondering about next steps in the short term. Should I work towards my next PR being about:</p>\n<ul>\n<li>proptest's of registers</li>\n<li>Non-algorithmic perf improvements (like I did in the benchmark PR)</li>\n<li>Algorithmic perf improvements (like the the huristicks work)</li>\n<li>Other code cleanups</li>\n<li>Improve the API (like take an iterator in dependency provider)</li>\n<li>Something else<br>\nof course no promises it will come out the way I plan, but what should I plan?</li>\n</ul>",
        "id": 212833634,
        "sender_full_name": "Eh2406",
        "timestamp": 1602254046
    },
    {
        "content": "<p>I think algorithmic performance improvements should come before non-algorithmic ones, since they could possibly make those obsolete.<br>\nAPI work is pretty high up there as well, since what users actually deal with should be as ergonomic as possible in my opinion.</p>\n<p>I would rank those as follows in the order of decreasing importance:</p>\n<ul>\n<li>Improve the API</li>\n<li>Algorithmic performance improvements</li>\n<li>Non-algorithmic performance improvements</li>\n<li>Everything else</li>\n</ul>\n<p>Of course if you see some low hanging fruits somewhere don't hold yourself back on picking those <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 212842561,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602258246
    },
    {
        "content": "<p>Very much agree with <span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span> propositions and <span class=\"user-mention\" data-user-id=\"340766\">@Alex Tokarev</span> ordering :)</p>",
        "id": 212842866,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602258419
    },
    {
        "content": "<p>I myself want to do some infrastructure work next, namely setup Clippy pass on CI and fix the existing warnings.</p>",
        "id": 212842908,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602258442
    },
    {
        "content": "<p>Where should the proptest port go on that list?</p>",
        "id": 212842965,
        "sender_full_name": "Eh2406",
        "timestamp": 1602258478
    },
    {
        "content": "<p>Though I'd probably put proptest with algorithmic improvement hand to hand, cannot improve blindly</p>",
        "id": 212843034,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602258500
    },
    {
        "content": "<p>True, that would be an instrument to achieve the goal (you could use many), so I didn't rank it separately</p>",
        "id": 212843152,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602258563
    },
    {
        "content": "<p>Also I want to work on <a href=\"https://github.com/mpizenberg/pubgrub-rs/issues/17\">clickable links</a> for documentation.<br>\nI think we can run <code>cargo doc</code> on CI and check that no warnings are emitted. I recently noticed they are produced when references in the documentation break.</p>",
        "id": 212844941,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602259250
    },
    {
        "content": "<p>Damn my SRE position must be getting hold of me <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 212846965,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602260312
    },
    {
        "content": "<p>I think we may need <code>--all-targets</code> or somthing to get CI errors about examples.</p>",
        "id": 212848542,
        "sender_full_name": "Eh2406",
        "timestamp": 1602261234
    },
    {
        "content": "<p>Hm, that doesn't work with <code>cargo doc</code>. It does with <code>cargo build</code>, so will be useful for clippy setup.</p>",
        "id": 212848835,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602261424
    },
    {
        "content": "<p>I added some notes I've taken to benchmark if I want to try some optimization later. The notes are here: <a href=\"https://github.com/mpizenberg/pubgrub-rs/issues/27\">https://github.com/mpizenberg/pubgrub-rs/issues/27</a>. Don't hesitate to add your tips there <span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span></p>",
        "id": 212871518,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602274996
    },
    {
        "content": "<p>The reports look like what I was seeing, most of our time in <code>relation</code>/<code>intersection</code>.</p>",
        "id": 212872226,
        "sender_full_name": "Eh2406",
        "timestamp": 1602275436
    },
    {
        "content": "<p>Excellent writeup on benchmarking and profiling, provides me with a nice starting point as I haven't done it before.</p>",
        "id": 212911342,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602328616
    },
    {
        "content": "<p>I won't answer for the weekend by the way. Having family here. Have a good weekend</p>",
        "id": 212911775,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602329333
    },
    {
        "content": "<p>Enjoy your time with the family!</p>",
        "id": 212911797,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602329386
    },
    {
        "content": "<p>One other todo item for ensuring correctness, I'd like to see us port over the tests from the Dart implementation.</p>",
        "id": 212926324,
        "sender_full_name": "Eh2406",
        "timestamp": 1602351006
    },
    {
        "content": "<p>True, I promised to do that and it's on my virtual TODO list</p>",
        "id": 212929745,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602356125
    },
    {
        "content": "<p>Would you like me to post an issue?</p>",
        "id": 212933081,
        "sender_full_name": "Eh2406",
        "timestamp": 1602361324
    },
    {
        "content": "<p><a href=\"https://github.com/mpizenberg/pubgrub-rs/issues/30\">https://github.com/mpizenberg/pubgrub-rs/issues/30</a></p>",
        "id": 212933149,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602361451
    },
    {
        "content": "<p>I can try that but no time guarantees</p>",
        "id": 213294783,
        "sender_full_name": "DPC",
        "timestamp": 1602685108
    },
    {
        "content": "<p>That would be great! And welcome to the project!</p>",
        "id": 213294964,
        "sender_full_name": "Eh2406",
        "timestamp": 1602685193
    },
    {
        "content": "<p>welcome :)</p>",
        "id": 213312762,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602691531
    },
    {
        "content": "<p>Let's make a quick recap of all the things that happened in this short period of time in prubgrub-rs. We have</p>\n<ul>\n<li>identified and fixed a bug in the prior cause computation of the algorithm,</li>\n<li>improved the user-facing API by switching from a <code>Solver</code> trait to a <code>DependencyProvider</code> trait and by enabling a halting condition in the solver loop,</li>\n<li>made the algorithm reproducible to better tackle future issues,</li>\n<li>consistently improved the code documentation with text changes and links,</li>\n<li>introduced property testing of registries to identify bugs sooner,</li>\n<li>improved performance by at least one order of magnitude on large registries,</li>\n<li>improved CI,</li>\n</ul>\n<p>and made lots of other small improvements.</p>",
        "id": 213542653,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602844284
    },
    {
        "content": "<p>I think all this is worth releasing a v0.2 version of the crate, and start thinking about new short-term and medium-term goals.</p>\n<p>Among those I personally see:</p>\n<ul>\n<li>Moving the repo out of my namespace, into an organization where you guys have more control, and me less responsibility.</li>\n<li>Write a small guide, advertising the work being done and encouraging people to try it out.</li>\n<li>Explore extensions to fit the cargo use case. I'd prefer exploration to be first totally independent, to clearly identify the limits of current pubgrub to bend it for this use case.</li>\n<li>(For me) Integrate this in the test runner I'm writing for the elm language to see how easy the integration is, what are the API issues left.</li>\n<li>Improve the error reporting, lots of work there in terms of API, message quality, and performance of report building.</li>\n</ul>",
        "id": 213542816,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602844394
    },
    {
        "content": "<p>Any chance that integrating with the test runner could lead to large realistic examples? Also if that project is the primary use case for the library I'd be ok including it in our CI. Basically I want to know if changes will break our primary user.</p>",
        "id": 213558887,
        "sender_full_name": "Eh2406",
        "timestamp": 1602854536
    },
    {
        "content": "<p>What are your opinions on exploring extensions that are in the Dart implementation but not in the blog post? Like \"features\", \"replacements\", \"pre-release\", and \"lockfiles\"? Should they be explored in  or out of tree?</p>",
        "id": 213561895,
        "sender_full_name": "Eh2406",
        "timestamp": 1602856013
    },
    {
        "content": "<p>Both are very good questions.</p>",
        "id": 213600610,
        "sender_full_name": "Alex Tokarev",
        "timestamp": 1602874681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/260232-t-cargo.2FPubGrub/topic/So.20what.20to.20do.20next.3F/near/213561895\">said</a>:</p>\n<blockquote>\n<p>What are your opinions on exploring extensions that are in the Dart implementation but not in the blog post? Like \"features\", \"replacements\", \"pre-release\", and \"lockfiles\"? Should they be explored in  or out of tree?</p>\n</blockquote>\n<p>I'm not very familiar with all the things cargo can do. Would you mind doing a write up of those that are not trivially supported by pubgrub as it is now, and maybe propose some ideas for each of those? That would be great to have such write up in an issue of the repo</p>",
        "id": 213602294,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602875614
    },
    {
        "content": "<p>(I am working on porting over the sat-proptests then I will work on that.)</p>",
        "id": 213602548,
        "sender_full_name": "Eh2406",
        "timestamp": 1602875758
    },
    {
        "content": "<p>cool</p>",
        "id": 213615308,
        "sender_full_name": "DPC",
        "timestamp": 1602883013
    },
    {
        "content": "<p>I posted that issue <a href=\"https://github.com/mpizenberg/pubgrub-rs/issues/39\">pubgrub#39</a> for the ones where the next step is \"look at the dart implementation.\" The other big ones I can think of are <code>one per major</code> instead one <code>one per name</code> witch I am totally ok not thinking about until after 0.2, and <code>Public&amp;Private</code> dependencies witch cargo doesn't even really support. So thos two can be worked on out of tree when we are ready to work on them.</p>",
        "id": 213632331,
        "sender_full_name": "Eh2406",
        "timestamp": 1602903728
    },
    {
        "content": "<p>Tomorrow I'll have a look at <a href=\"https://github.com/mpizenberg/pubgrub-rs/issues/34\">pubgrub#34</a> regarding usage of git LFS. Then my priority will be writing a guide for the coming days I think</p>",
        "id": 213673052,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1602972557
    }
]