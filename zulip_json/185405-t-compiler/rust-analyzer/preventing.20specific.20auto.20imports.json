[
    {
        "content": "<p>When I (mistakenly) type <code>.borrow()</code> on something that isn't a <code>RefCell</code>, emacs + r-a will import <code>std::borrow::Borrow</code>. When I correct the location, the trait takes precedence and then I get all confused and flustered for a while. </p>\n<p>Is there a blocklist I can use to prevent certain traits from being automatically imported?</p>",
        "id": 272415571,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1645198231
    },
    {
        "content": "<p>There is no such thing (yet?).</p>",
        "id": 272416460,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1645198693
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10454\">https://github.com/rust-analyzer/rust-analyzer/issues/10454</a> is related to this behavior fwiw</p>",
        "id": 272416477,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1645198701
    },
    {
        "content": "<blockquote>\n<p>However, auto-import of definitely incorrect traits that break correctly-picked inherent methods is a real problem.</p>\n</blockquote>\n<p>Sounds relevant indeed</p>",
        "id": 272416812,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1645198870
    }
]