[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> in <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/1926#issuecomment-535849720\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/1926#issuecomment-535849720\">https://github.com/rust-analyzer/rust-analyzer/pull/1926#issuecomment-535849720</a> and <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1925#issuecomment-535842174\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1925#issuecomment-535842174\">https://github.com/rust-analyzer/rust-analyzer/issues/1925#issuecomment-535842174</a> you mention implementing <code>Arbitrary</code> and how moving some code around isn't possible due to the coherence rules. This might change in the future (also <code>quickcheck</code>), but right now there's no <code>Arbitrary</code> instance in <code>ra_text_edit</code></p>",
        "id": 177238218,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570105426
    },
    {
        "content": "<p>I checked, and moving that code around fixes <a href=\"https://github.com/rust-lang/rust/issues/1925\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/1925\">#1925</a>, but it might go against your plans</p>",
        "id": 177238285,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570105454
    },
    {
        "content": "<p>On the other hand, <code>proptest</code> itself is not the issue here. <code>ra_text_edit</code> has a dependency on <code>proptest</code>, while <code>ra_ide_api</code> has a dev-dependency on it. For some reason, if I build everything, touch the code in <code>ra_syntax</code>, build <code>ra_cli</code>, then build <code>ra_lsp_server</code>, a lot of the RA crates will get rebuilt. I imagine moving to <code>quickcheck</code> won't change that behavior.</p>",
        "id": 177238579,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570105696
    },
    {
        "content": "<p>Removing <code>proptest</code> from <code>ra_text_edit</code> fixes this.</p>",
        "id": 177238598,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570105716
    },
    {
        "content": "<p>Maybe <code>cargo</code> could be smarter here, but it's a bit icky that a crate should pull a heavyweight dependency just in case others want to use it for testing</p>",
        "id": 177239688,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570106526
    },
    {
        "content": "<p>Ah, right, we directly provide a function that yields arbitrary text and edits.... Still, I think it makes sense to provide this function as part of <code>TextEdit</code> crate.</p>",
        "id": 177321115,
        "sender_full_name": "matklad",
        "timestamp": 1570179385
    },
    {
        "content": "<p>The problem here is that <code>proptest</code> is heavy weight: really, providing a strategy for generation shouldn't require that much code to be compiled</p>",
        "id": 177321147,
        "sender_full_name": "matklad",
        "timestamp": 1570179442
    },
    {
        "content": "<p>That's what I'm trying to say. Even if <code>proptest</code> took one second to build, with the current setup touching a file in <code>ra_syntax</code> makes <code>cargo</code> rebuild every RA crate twice.</p>",
        "id": 177322669,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570180784
    },
    {
        "content": "<p>At least if you're building both <code>ra_cli</code> and <code>ra_lsp_server</code></p>",
        "id": 177322738,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570180807
    },
    {
        "content": "<p>I'm not sure why, though, but it seems to be caused by the extra non-dev <code>proptest</code> dependency</p>",
        "id": 177322771,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570180849
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ cargo build --release\n   Finished release [optimized + debuginfo] target(s) in 0.06s\n$ touch crates/ra_syntax/src/lib.rs\n$ cargo build --release -p ra_cli\n  Compiling proptest v0.9.4\n  Compiling ra_text_edit v0.1.0 (~/rust-analyzer/crates/ra_text_edit)\n  Compiling ra_syntax v0.1.0 (~/rust-analyzer/crates/ra_syntax)\n  Compiling ra_db v0.1.0 (~/rust-analyzer/crates/ra_db)\n  Compiling ra_mbe v0.1.0 (~/rust-analyzer/crates/ra_mbe)\n  Compiling ra_fmt v0.1.0 (~/rust-analyzer/crates/ra_fmt)\n  Compiling ra_project_model v0.1.0 (~/rust-analyzer/crates/ra_project_model)\n  Compiling ra_hir v0.1.0 (~/rust-analyzer/crates/ra_hir)\n  Compiling ra_assists v0.1.0 (~/rust-analyzer/crates/ra_assists)\n  Compiling ra_ide_api v0.1.0 (~/rust-analyzer/crates/ra_ide_api)\n  Compiling ra_batch v0.1.0 (~/rust-analyzer/crates/ra_batch)\n  Compiling ra_cli v0.1.0 (~/rust-analyzer/crates/ra_cli)\n   Finished release [optimized + debuginfo] target(s) in 1m 52s\n$ cargo build --release\n  Compiling ra_syntax v0.1.0 (~/rust-analyzer/crates/ra_syntax)\n  Compiling ra_db v0.1.0 (~/rust-analyzer/crates/ra_db)\n  Compiling ra_mbe v0.1.0 (~/rust-analyzer/crates/ra_mbe)\n  Compiling ra_fmt v0.1.0 (~/rust-analyzer/crates/ra_fmt)\n  Compiling ra_project_model v0.1.0 (~/rust-analyzer/crates/ra_project_model)\n  Compiling ra_hir v0.1.0 (~/rust-analyzer/crates/ra_hir)\n  Compiling ra_assists v0.1.0 (~/rust-analyzer/crates/ra_assists)\n  Compiling ra_ide_api v0.1.0 (~/rust-analyzer/crates/ra_ide_api)\n  Compiling ra_lsp_server v0.1.0 (~/rust-analyzer/crates/ra_lsp_server)\n  Compiling ra_batch v0.1.0 (~/rust-analyzer/crates/ra_batch)\n  Compiling ra_cli v0.1.0 (~/rust-analyzer/crates/ra_cli)\n   Finished release [optimized + debuginfo] target(s) in 14.48s\n$ cargo build --release -p ra_lsp_server\n   Compiling ra_syntax v0.1.0 (~/rust-analyzer/crates/ra_syntax)\n   Compiling ra_db v0.1.0 (~/rust-analyzer/crates/ra_db)\n   Compiling ra_mbe v0.1.0 (~/rust-analyzer/crates/ra_mbe)\n   Compiling ra_fmt v0.1.0 (~/rust-analyzer/crates/ra_fmt)\n   Compiling ra_project_model v0.1.0 (~/rust-analyzer/crates/ra_project_model)\n   Compiling ra_hir v0.1.0 (~/rust-analyzer/crates/ra_hir)\n   Compiling ra_assists v0.1.0 (~/rust-analyzer/crates/ra_assists)\n   Compiling ra_ide_api v0.1.0 (~/rust-analyzer/crates/ra_ide_api)\n   Compiling ra_lsp_server v0.1.0 (~/rust-analyzer/crates/ra_lsp_server)\n    Finished release [optimized + debuginfo] target(s) in 8.15s\n$ cargo build --release\n    Finished release [optimized + debuginfo] target(s) in 0.05s\n</pre></div>",
        "id": 177323220,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570181279
    },
    {
        "content": "<p>Maybe it only happens with <code>-p</code></p>",
        "id": 177323383,
        "sender_full_name": "Laurențiu",
        "timestamp": 1570181413
    }
]