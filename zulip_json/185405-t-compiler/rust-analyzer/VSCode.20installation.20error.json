[
    {
        "content": "<p>Hi,<br>\nI wanted to install the latest version of rust analyzer for VSCode on macOS. <br>\nDid a fresh clone of the repo and ran <code>cargo xtask install</code>.<br>\nThen something weird happened. The server compiles without a hitch, but the extension doesn't:</p>\n<div class=\"codehilite\"><pre><span></span>will run: npm --version\n6.13.4\n\nwill run: npm install\nadded 116 packages from 109 contributors and audited 201 packages in 2.732s\n\n2 packages are looking for funding\n  run `npm fund` for details\n\nfound 0 vulnerabilities\n\n\nwill run: npm run package --scripts-prepend-node-path\n\nwill run: code --version\n1.41.1\n26076a4de974ead31f97692a0d32f90d735645c0\nx64\n\nwill run: code --install-extension ./ra-lsp-0.0.1.vsix --force\nInstalling extensions...\nENOENT: no such file or directory, open &#39;/private/tmp/rust-analyzer/editors/code/ra-lsp-0.0.1.vsix&#39;\nFailed Installing Extensions: ./ra-lsp-0.0.1.vsix\nError: install client\n\nCaused by:\n    `code --install-extension ./ra-lsp-0.0.1.vsix --force` exited with exit code: 1\n</pre></div>\n\n\n<p>The file is indeed not there. <code>code</code> and <code>cargo</code> are in my path, but I don't think that's relevant.</p>\n<p>Inside <code>/editors/code</code>, I tried the following:</p>\n<div class=\"codehilite\"><pre><span></span>npm run package --verbose\nnpm info it worked if it ends with ok\nnpm verb cli [\nnpm verb cli   &#39;/Users/mendler/.volta/tools/image/node/12.14.0/6.13.4/bin/node&#39;,\nnpm verb cli   &#39;/Users/mendler/.volta/tools/image/node/12.14.0/6.13.4/bin/npm&#39;,\nnpm verb cli   &#39;run&#39;,\nnpm verb cli   &#39;package&#39;,\nnpm verb cli   &#39;--verbose&#39;\nnpm verb cli ]\nnpm info using npm@6.13.4\nnpm info using node@v12.14.0\nnpm verb run-script [ &#39;prepackage&#39;, &#39;package&#39;, &#39;postpackage&#39; ]\nnpm info lifecycle ra-lsp@0.0.1~prepackage: ra-lsp@0.0.1\nnpm info lifecycle ra-lsp@0.0.1~package: ra-lsp@0.0.1\nnpm info lifecycle ra-lsp@0.0.1~package: ignored because ignore-scripts is set to true ra-lsp@0.0.1\nnpm info lifecycle ra-lsp@0.0.1~postpackage: ra-lsp@0.0.1\nnpm verb exit [ 0, true ]\nnpm timing npm Completed in 108ms\nnpm info ok\n</pre></div>\n\n\n<p>but it doesn't create the <code>.vsix</code> file.<br>\nThen I tried vsce:</p>\n<div class=\"codehilite\"><pre><span></span>vsce package\nExecuting prepublish script &#39;npm run vscode:prepublish&#39;...\n DONE  Packaged: /private/tmp/rust-analyzer/editors/code/ra-lsp-0.0.1.vsix (4 files, 13.69KB)\n</pre></div>\n\n\n<p>This creates the<code>.vsix</code>, but it's suspiciously small and only contains 4 files:</p>\n<div class=\"codehilite\"><pre><span></span>unzip -l ra-lsp-0.0.1.vsix\nArchive:  ra-lsp-0.0.1.vsix\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n     1751  01-06-2020 11:26   extension.vsixmanifest\n      245  01-06-2020 11:26   [Content_Types].xml\n    41101  01-06-2020 11:07   extension/package-lock.json\n    11740  01-06-2020 11:07   extension/package.json\n---------                     -------\n    54837                     4 files\n</pre></div>\n\n\n<p>Installing this extension works, but the commands don't exist.<br>\nE.g. running <code>Rust Analyzer: Status</code> gives me</p>\n<div class=\"codehilite\"><pre><span></span>command &#39;rust-analyzer.analyzerStatus&#39; not found\n</pre></div>\n\n\n<p>The only thing I can think of is, that I'm using <a href=\"https://volta.sh/\" target=\"_blank\" title=\"https://volta.sh/\">volta</a> as a node version manager.<br>\nThe node version gets correctly detected, however.<br>\nMaybe anyone has an idea what I'm doing wrong.</p>",
        "id": 184894419,
        "sender_full_name": "mre",
        "timestamp": 1578306601
    },
    {
        "content": "<p>Hm..... My guess is that:</p>\n<ul>\n<li>either we somehow pick a \"wrong\" vsce (can you try <code>./node_modules/vscce/out/vsce</code>)</li>\n<li>or vsce does not work for some reason (which I don't know how to bisect further)</li>\n</ul>",
        "id": 184894760,
        "sender_full_name": "matklad",
        "timestamp": 1578306873
    },
    {
        "content": "<p>Same result:</p>\n<div class=\"codehilite\"><pre><span></span>./node_modules/vsce/out/vsce package\nExecuting prepublish script &#39;npm run vscode:prepublish&#39;...\n DONE  Packaged: /private/tmp/rust-analyzer/editors/code/ra-lsp-0.0.1.vsix (4 files, 13.69KB)\n</pre></div>",
        "id": 184895316,
        "sender_full_name": "mre",
        "timestamp": 1578307486
    },
    {
        "content": "<p>Huh, it works with yarn...</p>\n<div class=\"codehilite\"><pre><span></span>./node_modules/vsce/out/vsce package --yarn\nExecuting prepublish script &#39;yarn run vscode:prepublish&#39;...\nyarn run v1.21.1\n$ rollup -c\nDone in 4.14s.\nwarning ra-lsp@0.0.1: The engine &quot;vscode&quot; appears to be invalid.\n\nsrc/main.ts → ./out/main.js...\ncreated ./out/main.js in 2.6s\n DONE  Packaged: /private/tmp/rust-analyzer/editors/code/ra-lsp-0.0.1.vsix (5 files, 108.09KB)\n</pre></div>",
        "id": 184895423,
        "sender_full_name": "mre",
        "timestamp": 1578307593
    },
    {
        "content": "<p>Second hypothesis: <code>vsce</code> picks the wrong <code>rollup</code> (see <code>vsce:preblushin</code> in package.json)</p>",
        "id": 184895455,
        "sender_full_name": "matklad",
        "timestamp": 1578307639
    },
    {
        "content": "<p>Shouldn't then the yarn build also fail?</p>",
        "id": 184895554,
        "sender_full_name": "mre",
        "timestamp": 1578307736
    },
    {
        "content": "<p>I can see how <code>yarn</code> and <code>npm</code> might pick different binaries</p>",
        "id": 184895600,
        "sender_full_name": "matklad",
        "timestamp": 1578307799
    },
    {
        "content": "<p>To clarify, we do install <code>rollup</code> as a dev-dependency, and it's version is pinned, so tools <em>should</em> pick up that</p>",
        "id": 184895658,
        "sender_full_name": "matklad",
        "timestamp": 1578307821
    },
    {
        "content": "<p>But we already had a bug where npm picked a global binary withotu a special flag</p>",
        "id": 184895675,
        "sender_full_name": "matklad",
        "timestamp": 1578307842
    },
    {
        "content": "<p>Actually, it might be the same exact bug in <code>vsce</code>? It doesn't set <code>--scripts-prepend-node-path</code> which leaks global env?</p>",
        "id": 184895710,
        "sender_full_name": "matklad",
        "timestamp": 1578307896
    },
    {
        "content": "<p>Hum...<br>\nDon't have rollup installed globally, I guess.</p>\n<div class=\"codehilite\"><pre><span></span>npm list -g --depth=0\n/Users/mendler/.volta/tools/image/node/12.14.0/6.13.4/lib\n└── npm@6.13.4\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>yarn global list\nyarn global v1.21.1\n✨  Done in 0.06s.\n</pre></div>",
        "id": 184896025,
        "sender_full_name": "mre",
        "timestamp": 1578308190
    },
    {
        "content": "<p>Hm...</p>\n<p>But it seems like we still can narrow the problem down to just rollup, right? Ie, do <code>npm run vscode:prepublish</code> and <code>yarn run vscode:prepublish</code> differ? prepublish is just <code>rollup -c</code></p>",
        "id": 184896170,
        "sender_full_name": "matklad",
        "timestamp": 1578308324
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>rust-analyzer/editors/code on master is v0.0.1 via ⬢ v12.14.0 ❯❯❯ npm run vscode:prepublish\nrust-analyzer/editors/code on master is v0.0.1 via ⬢ v12.14.0 ❯❯❯ yarn run vscode:prepublish\nyarn run v1.21.1\nwarning ra-lsp@0.0.1: The engine &quot;vscode&quot; appears to be invalid.\n$ rollup -c\n\nsrc/main.ts → ./out/main.js...\ncreated ./out/main.js in 2.4s\n✨  Done in 3.00s.\nrust-analyzer/editors/code on  master is v0.0.1 via ⬢ v12.14.0 took 3s ❯❯❯ rollup -c\nzsh: command not found: rollup```\n</pre></div>",
        "id": 184896417,
        "sender_full_name": "mre",
        "timestamp": 1578308538
    },
    {
        "content": "<p>Looks like npm swallows the error.</p>",
        "id": 184896433,
        "sender_full_name": "mre",
        "timestamp": 1578308564
    },
    {
        "content": "<p>Well, there is this is in the verbose output: <code>npm info lifecycle ra-lsp@0.0.1~vscode:prepublish: ignored because ignore-scripts is set to true ra-lsp@0.0.1</code></p>",
        "id": 184896977,
        "sender_full_name": "mre",
        "timestamp": 1578308920
    },
    {
        "content": "<p>After running <code>npm config set ignore-scripts false</code> I get the same output now.</p>",
        "id": 184897119,
        "sender_full_name": "mre",
        "timestamp": 1578309022
    },
    {
        "content": "<p>Hm, yeah, our installation will not work with <code>--ignore-scripts</code></p>",
        "id": 184897200,
        "sender_full_name": "matklad",
        "timestamp": 1578309089
    },
    {
        "content": "<p>No clue why it was set, to be honest. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 184897261,
        "sender_full_name": "mre",
        "timestamp": 1578309140
    },
    {
        "content": "<p>Is there a way to make <code>npm</code> fail with <code>--ignore-scripts</code>? Quietly ignoring it and producing a pacakge without javascript is not a very helpful behavior :-)</p>",
        "id": 184897274,
        "sender_full_name": "matklad",
        "timestamp": 1578309156
    },
    {
        "content": "<p>One thing that comes to mind is that we could check the return value of  <code>npm config get ignore-scripts</code> ourselves and print an error message if it's <code>true</code>.</p>",
        "id": 184897579,
        "sender_full_name": "mre",
        "timestamp": 1578309461
    },
    {
        "content": "<p>Could create an issue to follow up that discussion if you like. Anyway, thanks for helping me out here. :)</p>",
        "id": 184917133,
        "sender_full_name": "mre",
        "timestamp": 1578325357
    }
]