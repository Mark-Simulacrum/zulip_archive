[
    {
        "content": "<p>hey just popping in to see if cbindgen's usecase is at all interesting to this project. It needs to slurp up a crate and its dependencies to generate a C header for all the <code>pub extern \"C\" fns</code>, including resolving the definitions of any type referenced in that function's signatures. It currently does path resolution in a \"basically-works but ultimately breakable and adhoc\" way. As a result I(?) need to put in some work to teach it how to resolve Rust 2018 modules, which is a bummer since, ideally, something like this project should be solving that problem for us.</p>",
        "id": 159936524,
        "sender_full_name": "Gankra",
        "timestamp": 1551723767
    },
    {
        "content": "<p>Long term, yes. Short/medium term, likely no: we need to implement a ton of stuff before path resolution works reliably (macros being a significant contributor to the stuff).</p>",
        "id": 159937716,
        "sender_full_name": "matklad",
        "timestamp": 1551724662
    }
]