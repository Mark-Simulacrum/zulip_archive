[
    {
        "content": "<p>I just tried connecting the current HEAD of rust-analyzer to emacs's lsp-mode and it kinda works! All that's required is to put in this definition:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"nv\">lsp-register-client</span>\n <span class=\"p\">(</span><span class=\"nv\">make-lsp-client</span> <span class=\"nb\">:new-connection</span> <span class=\"p\">(</span><span class=\"nv\">lsp-stdio-connection</span> <span class=\"o\">&#39;</span><span class=\"p\">(</span><span class=\"s\">&quot;ra_lsp_server&quot;</span><span class=\"p\">))</span>\n                  <span class=\"nb\">:major-modes</span> <span class=\"o\">&#39;</span><span class=\"p\">(</span><span class=\"nv\">rust-mode</span> <span class=\"nv\">rustic-mode</span><span class=\"p\">)</span>\n                  <span class=\"nb\">:priority</span> <span class=\"mi\">99</span>\n                  <span class=\"nb\">:server-id</span> <span class=\"ss\">&#39;ra_lsp_server</span>\n                  <span class=\"nb\">:notification-handlers</span> <span class=\"p\">(</span><span class=\"nv\">lsp-ht</span> <span class=\"p\">(</span><span class=\"s\">&quot;window/progress&quot;</span> <span class=\"ss\">&#39;lsp-clients--rust-window-progress</span><span class=\"p\">))))</span>\n</pre></div>\n\n\n<p>and you get just about all the features that rust-analyzer's LSP server can deliver. Unfortunately, lsp-ui mode doesn't look pretty with it, mostly because symbol resolution isn't working well yet (most symbols/types/traits from other packages get a \"not implemented\" message). However, some code completion via company-mode, the documentation popup and go-to-definition do work!</p>",
        "id": 158658946,
        "sender_full_name": "Andreas Fuchs",
        "timestamp": 1550273081
    },
    {
        "content": "<p>Note the <code>:priority 99</code> there - that instructs LSP to prefer ra_lsp_server to the built-in <code>rls</code> definition.</p>",
        "id": 158658969,
        "sender_full_name": "Andreas Fuchs",
        "timestamp": 1550273118
    },
    {
        "content": "<p>I've been using RA with emacs the whole time, actually :) I've got some code to handle <code>rust-analyzer.applySourceChange</code> as well, so code actions etc. work, but there's a lot missing still...</p>",
        "id": 158661675,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1550275673
    },
    {
        "content": "<p>Whoa, I'd love to see that code action change - I'd been trying them and only getting errors about unsupported commands (:</p>",
        "id": 158663987,
        "sender_full_name": "Andreas Fuchs",
        "timestamp": 1550278148
    },
    {
        "content": "<p>Speaking of LSP clients, I've found one that didn't send the <code>initialized</code> notification, making <code>rust-analyzer</code> panic. I wouldn't be surprised if other clients did the same. Maybe we should have a debugging option to trace the client-server communication?</p>",
        "id": 158682267,
        "sender_full_name": "Laurențiu",
        "timestamp": 1550301183
    },
    {
        "content": "<blockquote>\n<p>I just tried connecting the current HEAD of rust-analyzer to emacs's lsp-mode and it kinda works! All that's required is to put in this definition:</p>\n<p>I've got some code to handle rust-analyzer.applySourceChange as well, so code actions etc. </p>\n</blockquote>\n<p>There's editors/emacs folder in the repo ;) Would be cool to have these things there.</p>",
        "id": 158687200,
        "sender_full_name": "matklad",
        "timestamp": 1550310520
    },
    {
        "content": "<blockquote>\n<p>I've found one that didn't send the initialized notification, making rust-analyzer panic.</p>\n</blockquote>\n<p>Yeah, that's a common violation of the speck in the clients. I've personally fixed eglot and kak-lsp =)</p>\n<blockquote>\n<p>Maybe we should have a debugging option to trace the client-server communication?</p>\n</blockquote>\n<p>export RUST_LOG=gen_lsp_server=debug</p>",
        "id": 158687219,
        "sender_full_name": "matklad",
        "timestamp": 1550310590
    },
    {
        "content": "<p>oh, right (:</p>",
        "id": 158687831,
        "sender_full_name": "Laurențiu",
        "timestamp": 1550311588
    },
    {
        "content": "<blockquote>\n<p>Whoa, I'd love to see that code action change - I'd been trying them and only getting errors about unsupported commands (:</p>\n</blockquote>\n<p><a href=\"https://github.com/flodiebold/lsp-rust/blob/ra/lsp-rust.el#L169-L193\" target=\"_blank\" title=\"https://github.com/flodiebold/lsp-rust/blob/ra/lsp-rust.el#L169-L193\">https://github.com/flodiebold/lsp-rust/blob/ra/lsp-rust.el#L169-L193</a></p>",
        "id": 158690689,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1550316488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204153\">@Andreas Fuchs</span> I've cleaned up and extended my code a bit: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/841\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/841\">https://github.com/rust-analyzer/rust-analyzer/pull/841</a></p>",
        "id": 158697588,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1550327315
    },
    {
        "content": "<p>this is wonderful! Thanks for PR'ing it!</p>",
        "id": 158753583,
        "sender_full_name": "Andreas Fuchs",
        "timestamp": 1550427418
    }
]