[
    {
        "content": "<p>So I have been looking into rewriting the rename module to instead use the <code>FindUsages</code> functionality directly. As said in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4290\">https://github.com/rust-analyzer/rust-analyzer/issues/4290</a> we ideally want to base renaming on the AST instead of strings so we can properly rename a reference by first figuring out how it is used, as in for example if its part of a destructure etc. For that I was wondering how we would do that ideally, given currently search gives us FileReferences:<br>\n<a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ide_db/src/search.rs#L56-L72\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ide_db/src/search.rs#L56-L72</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[derive(Debug, Clone)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">FileReference</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"nc\">TextRange</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">kind</span>: <span class=\"nc\">ReferenceKind</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">access</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">ReferenceAccess</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[derive(Debug, Clone, PartialEq)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">ReferenceKind</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">FieldShorthandForField</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">FieldShorthandForLocal</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">StructLiteral</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">RecordFieldExprOrPat</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">SelfParam</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">EnumLiteral</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Lifetime</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Other</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>My initial thought was to get rid of the current ReferenceKind entirely and replace it with something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[derive(Debug, Clone)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">ReferenceKind</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">NameRef</span><span class=\"p\">(</span><span class=\"n\">ast</span>::<span class=\"n\">NameRef</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Name</span><span class=\"p\">(</span><span class=\"n\">ast</span>::<span class=\"n\">Name</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Lifetime</span><span class=\"p\">(</span><span class=\"n\">ast</span>::<span class=\"n\">Lifetime</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 222999868,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1610823879
    },
    {
        "content": "<p>makes sense as a long term plan!</p>\n<p>but i'd start with just replacing ide/references with ide_db/search, to keep the diff smaller</p>",
        "id": 223000033,
        "sender_full_name": "matklad",
        "timestamp": 1610824050
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 223000101,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1610824090
    }
]