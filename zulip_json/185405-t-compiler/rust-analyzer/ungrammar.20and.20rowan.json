[
    {
        "content": "<p>Heya! -- I'm trying to get more familiar with Rust's parser infastructure, and one thing I'm unclear about is what the role of <code>rowan</code> is and what the role of <code>ungrammar</code> is. Both seem to be used within Rust-Analyzer -- and it seems I might be missing a bit of understanding what each of these is best suited for?</p>",
        "id": 228397762,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614686451
    },
    {
        "content": "<p>Rowan is a data structure for a concrete syntax tree. The parser, the code that turns text into a rowan tree, is the <code>parser</code> inside rust-analyzer.</p>\n<p>Concrete syntax tree is dynamically typed (think <code>serde_json::Value</code>), <code>ungrammar</code> is tool we used to layer typed access methods over the underlying tree.</p>",
        "id": 228398233,
        "sender_full_name": "matklad",
        "timestamp": 1614686694
    },
    {
        "content": "<p>Also <a href=\"https://rust-analyzer.github.io/blog/2020/10/24/introducing-ungrammar.html\">https://rust-analyzer.github.io/blog/2020/10/24/introducing-ungrammar.html</a></p>",
        "id": 228398263,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614686712
    },
    {
        "content": "<p><em>ohh</em>, yes okay that makes sense</p>",
        "id": 228398362,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614686768
    },
    {
        "content": "<p>thank you</p>",
        "id": 228398423,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614686799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> hehe, yeah I've been combing over that article for the past day -- I had some trouble getting the relationship between the various components click</p>",
        "id": 228398523,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614686849
    },
    {
        "content": "<p>There's also a bunch of notes and links in <a href=\"https://github.com/KirillOsenkov/Bliki/wiki/Roslyn-Immutable-Trees\">https://github.com/KirillOsenkov/Bliki/wiki/Roslyn-Immutable-Trees</a></p>",
        "id": 228398686,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614686928
    },
    {
        "content": "<p>oh! -- I've heard of Roslyn, will check it out -- thank you!</p>",
        "id": 228398750,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614686980
    },
    {
        "content": "<p>I don't remember much of the details, but I think Roslyn was the first implementation (for C#), <code>libsyntax</code> took a similar approach, but doesn't rely as much on a GC, and <code>rowan</code> is still evolving.</p>",
        "id": 228398888,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614687052
    },
    {
        "content": "<p>matklad can surely say more :)</p>",
        "id": 228398957,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614687098
    },
    {
        "content": "<p>hmm, question: I believe Rust-Analyzer is considering moving to <em>mutable</em> trees at some point in the future? - would that deviate much from how Rust-Analyzer's components work today?</p>",
        "id": 228398977,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614687111
    },
    {
        "content": "<p>/me realizes they should read the mutable tree RFC more closely</p>",
        "id": 228399103,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1614687161
    }
]