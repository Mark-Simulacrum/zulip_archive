[
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4544#issuecomment-783540264\">this</a> is an ... interesting problem. I'm inclined to say that creating such huge extension traits implemented for almost all types should maybe be discouraged; but maybe we also need to provide some way (attribute) of 'fixing' this in existing cases. I'm not a fan of any setting that requires listing specific traits or functions. I wonder what other people think about this though.</p>",
        "id": 227409060,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614076247
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby</span></p>",
        "id": 227409265,
        "sender_full_name": "matklad",
        "timestamp": 1614076373
    },
    {
        "content": "<p>I think the problem might lie in <code>color-eyre</code> re-exporting <code>owo</code>?</p>",
        "id": 227409366,
        "sender_full_name": "matklad",
        "timestamp": 1614076428
    },
    {
        "content": "<p>Ie, I think blanket extensions are fine, as long as the user opts-in into using them.</p>",
        "id": 227409503,
        "sender_full_name": "matklad",
        "timestamp": 1614076497
    },
    {
        "content": "<p>But yeah, it's hard to say what's the ideal behavior here. Not suggesting to flyimport the trait would be wrong, I think.</p>\n<p>I guess, once we have a scoring system in place, we can score <code>impl&lt;T&gt; Trait for T</code> really low</p>",
        "id": 227409695,
        "sender_full_name": "matklad",
        "timestamp": 1614076626
    },
    {
        "content": "<p>I think even a user opting into owo_colors would probably not want to see the extension methods on every completion</p>",
        "id": 227410381,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077014
    },
    {
        "content": "<p>also, I don't even think this is just about flyimport -- even if you've <code>use</code>d the trait it'd get pretty annoying in the whole file</p>",
        "id": 227410476,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077062
    },
    {
        "content": "<p>This feels like an inherent tradeoff to me you will be annoyed by seeing methods everywhere, but you also will be annoyed by <em>not</em> seeing the method where you want to.</p>",
        "id": 227410708,
        "sender_full_name": "matklad",
        "timestamp": 1614077173
    },
    {
        "content": "<p>or I mean, a user using owo_colors would want to see the methods in some situations (inside println) but not in most others, but of course the problem is that we can't really magically know which situations that are</p>",
        "id": 227410733,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077194
    },
    {
        "content": "<p>yeah</p>",
        "id": 227410742,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077206
    },
    {
        "content": "<p>Yeah, exactly</p>",
        "id": 227410745,
        "sender_full_name": "matklad",
        "timestamp": 1614077207
    },
    {
        "content": "<p>An interesting lib-design approach here is to provide just one universal extension: <code>foo.colorize().beige()</code></p>",
        "id": 227410824,
        "sender_full_name": "matklad",
        "timestamp": 1614077253
    },
    {
        "content": "<p>I am 60% sure that proper scoring (or at least scoring at all) would solve 70% of the problems here...</p>",
        "id": 227410978,
        "sender_full_name": "matklad",
        "timestamp": 1614077334
    },
    {
        "content": "<p>yeah, that seems like a better approach</p>",
        "id": 227410979,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077334
    },
    {
        "content": "<p>and that's kind of what I mean by discouraging that kind of extension traits, but it of course doesn't help with the existing crate</p>",
        "id": 227411072,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077380
    },
    {
        "content": "<p>although I guess the crate could introduce that and mark the existing methods as <code>doc(hidden)</code></p>",
        "id": 227411151,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077409
    },
    {
        "content": "<p>... or a new ide-specific attribute to hide them from completion</p>",
        "id": 227411211,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077446
    },
    {
        "content": "<p>it might be nice if the completions for these methods only started showing up once you've typed three letters from it</p>",
        "id": 227411751,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614077729
    },
    {
        "content": "<p>but you're probably right and better ranking would mostly solve this</p>",
        "id": 227412745,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614078219
    },
    {
        "content": "<p>but I actually like the attribute idea -- we can use an attribute to control ranking. Llike <code>#[completion(unlikely)]</code>. Though it seems more robust to just infer those based on usages.</p>",
        "id": 227412998,
        "sender_full_name": "matklad",
        "timestamp": 1614078333
    }
]