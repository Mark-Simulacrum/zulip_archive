[
    {
        "content": "<p>Hello, I have some questions about writing build scripts for gentoo (ebuilds) for rust-analyzer. I am wondering about cargo xtask and what it does, and if it's possible to avoid using it and just call cargo build directly since gentoo's cargo eclass already has all of the machinery to do it that way. I am also new to this website so I apologize if I am asking in the wrong place or something!</p>",
        "id": 248429517,
        "sender_full_name": "John T",
        "timestamp": 1628127790
    },
    {
        "content": "<p>I tried building the package with cargo build directly and it seems to work fine, but the docs don't say to do that. I am also curious if it's possible to build it with the regular command, if it builds the vscode stuff that depends on npm as well, since I want that part of the package to be able to toggled at compile time behind a USE flag</p>",
        "id": 248429580,
        "sender_full_name": "John T",
        "timestamp": 1628127893
    },
    {
        "content": "<p>I'm not sure if there is a way to just talk in general outside of a topic? Does anyone know how to do that</p>",
        "id": 248429672,
        "sender_full_name": "John T",
        "timestamp": 1628127984
    },
    {
        "content": "<p>talking outside of a topic is not recommended because it tends to become an unsearchable dumping ground</p>",
        "id": 248429789,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128166
    },
    {
        "content": "<p>it's okay if the topic goes a little off topic</p>",
        "id": 248429793,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128184
    },
    {
        "content": "<p>huh that's pretty strange coming from IRC but now I think I get it</p>",
        "id": 248429855,
        "sender_full_name": "John T",
        "timestamp": 1628128218
    },
    {
        "content": "<p>i thought there might be a \"rust\" room and then you could start subrooms with topics or something</p>",
        "id": 248429862,
        "sender_full_name": "John T",
        "timestamp": 1628128245
    },
    {
        "content": "<p>but some basic categorization is helpful for organizing hundreds of interleaved conversations</p>",
        "id": 248429863,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128245
    },
    {
        "content": "<p>yeah that makes sense for sure</p>",
        "id": 248429869,
        "sender_full_name": "John T",
        "timestamp": 1628128261
    },
    {
        "content": "<p>You can use general for \"rust room\" stuff</p>",
        "id": 248429876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128276
    },
    {
        "content": "<p>but still make a topic name</p>",
        "id": 248429879,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128286
    },
    {
        "content": "<p>oh I see now, if I click t-compiler/rust-analzyer I can see all messages from all topics</p>",
        "id": 248429884,
        "sender_full_name": "John T",
        "timestamp": 1628128303
    },
    {
        "content": "<p>streams are like IRC rooms. This is the rust-analyzer stream so only people subscribed to it will see this discussion</p>",
        "id": 248429961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128396
    },
    {
        "content": "<p>is it pretty active on here? this is the only place to ask for help from a real person about RA that I can find</p>",
        "id": 248430045,
        "sender_full_name": "John T",
        "timestamp": 1628128505
    },
    {
        "content": "<p>I think so, you can see the rate of messages by selecting the stream and scrolling up. Most of the RA experts are here so I'm sure you will get an answer when they drop by.</p>",
        "id": 248430211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128727
    },
    {
        "content": "<p>You should probably give it at least 24 h though just in case they are all asleep. They can ping you so there is no need to wait</p>",
        "id": 248430377,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628128879
    },
    {
        "content": "<p>thanks for the help!</p>",
        "id": 248430387,
        "sender_full_name": "John T",
        "timestamp": 1628128893
    },
    {
        "content": "<p>Just incase someone reads this while I'm gone, another reason for not being able to use the \"cargo xtask install\" command is because I need to be able to build the binary and install in two separate steps. Afaik the portage sandbox on gentoo forbids FS access except in the src_install() function. It could probably be worked around with some nasty hacks but there should be a better way!</p>\n<p>Just running cargo build in the rust-analyzer crate dir seems to build the project fine so I may end up just doing that for now.</p>",
        "id": 248432941,
        "sender_full_name": "John T",
        "timestamp": 1628131869
    },
    {
        "content": "<p>I also need a method for disabling features like jemalloc (if supported) and building only the server (e.g, cargo xtask install --server)</p>",
        "id": 248433019,
        "sender_full_name": "John T",
        "timestamp": 1628131963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"425259\">@John T</span>  <code>cargo build --release</code> will work just fine. You can see what it does <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/294cfd61c79d031da20e042c56cf621db1918228/xtask/src/install.rs#L139-L171\">here</a>.</p>",
        "id": 248439859,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628141103
    },
    {
        "content": "<p>And actually you probably don't want <code>--features force-always-assert</code> because it makes RA more.. crashy.</p>",
        "id": 248439927,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628141173
    },
    {
        "content": "<p>So <code>cargo build --release --locked --path crates/rust-analyzer</code> should work, and you can add one of <code>--features mimalloc</code> or <code>--features jemalloc</code> depending on your USE flags.</p>",
        "id": 248439951,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628141236
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> That sounds good. Is there a flag I can pass to build the vscode related parts of RA as well through the regular cargo build command? It seems like just running \"cargo build\" will not build that part of the project, so I'm wondering what I have to call to do that as well</p>",
        "id": 248440830,
        "sender_full_name": "John T",
        "timestamp": 1628142458
    },
    {
        "content": "<p>Actually looking through this file I can see exactly what xtask would be running for me, I guess I can just run that manually for the same effect.</p>",
        "id": 248440906,
        "sender_full_name": "John T",
        "timestamp": 1628142603
    },
    {
        "content": "<p>thanks a lot for pointing that file out, now xtask makes a whole lot more sense to me and I can sort of see what's going on!</p>",
        "id": 248440959,
        "sender_full_name": "John T",
        "timestamp": 1628142678
    },
    {
        "content": "<p>I'm going to mark this as resolved for now since i have the most important part of my answer as far as I can tell. If I run into more issues I will go ahead and open a new topic</p>",
        "id": 248441032,
        "sender_full_name": "John T",
        "timestamp": 1628142763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"425259\">John T</span> has marked this topic as resolved.</p>",
        "id": 248441034,
        "sender_full_name": "Notification Bot",
        "timestamp": 1628142768
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"425259\">John T</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/.E2.9C.94.20ebuilds.20and.20packaging.20RA.20for.20linux.20distros/near/248440959\">said</a>:</p>\n<blockquote>\n<p>thanks a lot for pointing that file out, now xtask makes a whole lot more sense to me and I can sort of see what's going on!</p>\n</blockquote>\n<p>Yeah, but I'm not sure how useful that is. Code extensions are installed per-user AFAICT, so what would you do with a VSIX ebuild?</p>",
        "id": 248442973,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628145195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> is it valid to just run cargo build in the top level dir without passing --path to build? Passing the path to the Cargo.toml file is breaking the way the eclass works since it passes all arguments to each phase of the build, including the install phase, where any path parameter is invalid</p>",
        "id": 248546638,
        "sender_full_name": "John T",
        "timestamp": 1628203400
    },
    {
        "content": "<p>The issue with that might be passing feature flags to RA's crate</p>",
        "id": 248546745,
        "sender_full_name": "John T",
        "timestamp": 1628203462
    },
    {
        "content": "<p><code>-p rust-analyzer</code> works too, but I don't know if that works with the ebuild stuff. Or you can omit it altogether, it might compile slightly slower, but that's probably fine.</p>",
        "id": 248571813,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628226057
    }
]