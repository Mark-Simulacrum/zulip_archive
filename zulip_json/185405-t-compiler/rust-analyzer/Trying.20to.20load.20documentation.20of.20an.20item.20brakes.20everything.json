[
    {
        "content": "<p>I'm observing some weird behaviour from RA: when I'm loading documentation of <code>tokio::mpsc::Receiver</code> in a particular file, documentation stops loading even for other items in the project until I restart the server. </p>\n<p>Here is a demonstration: <a href=\"https://www.youtube.com/watch?v=4ON8gtWC61I\">https://www.youtube.com/watch?v=4ON8gtWC61I</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"4ON8gtWC61I\" href=\"https://www.youtube.com/watch?v=4ON8gtWC61I\"><img src=\"https://uploads.zulipusercontent.net/23b512832ecbc87075df290eba122d39192b264d/68747470733a2f2f692e7974696d672e636f6d2f76692f344f4e38677457433631492f64656661756c742e6a7067\"></a></div><ul>\n<li>Documentation works fine</li>\n<li>I'm trying to load documentation of <code>tokio::mpsc::Receiver</code></li>\n<li>Documentation brakes in the entire project</li>\n</ul>\n<p>Here is the project @ commit that is problematic: <a href=\"https://github.com/teloxide/teloxide-core/tree/f1daac243ab6237d4de7bc08adf3ff151e6e8017\">https://github.com/teloxide/teloxide-core/tree/f1daac243ab6237d4de7bc08adf3ff151e6e8017</a></p>\n<p>This doesn't happen <em>every</em> time, but reloading until it doesn't break is annoying</p>",
        "id": 268272361,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642427239
    },
    {
        "content": "<p>Ouch, do you have anything in the logs?</p>",
        "id": 268274125,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642428099
    },
    {
        "content": "<p>Also, the initial load seems painfully slow</p>",
        "id": 268274157,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642428112
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/I8Yp60yxUP5ak2P77M__OFl2/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/I8Yp60yxUP5ak2P77M__OFl2/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/I8Yp60yxUP5ak2P77M__OFl2/image.png\"></a></div>",
        "id": 268274905,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642428455
    },
    {
        "content": "<p>It seems to work for me (looks like there's a small bug  rendering a link, though?)</p>",
        "id": 268274930,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642428473
    },
    {
        "content": "<p>Cache priming takes 8.3 s here</p>",
        "id": 268275049,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642428531
    },
    {
        "content": "<p>The  link bug is known, its a problem with outline links with backticks which I think is a bug in <code>pulldown_cmark_to_cmark</code> <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11008\">r-a#11008</a></p>",
        "id": 268275056,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642428538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268274125\">said</a>:</p>\n<blockquote>\n<p>Ouch, do you have anything in the logs?</p>\n</blockquote>\n<p>I have a couple of timeouts:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>WARN [1/17/2022, 5:13:52 PM]: LSP request timed out {\n  method: 'rust-analyzer/inlayHints',\n  param: {\n    textDocument: {\n      uri: 'file:///home/waffle/projects/repos/teloxide-core/src/adaptors/throttle.rs'\n    }\n  },\n  error: [$i [Error]: canceled by client\n    at Gt (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:4:223)\n    at rn (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:3:6520)\n    at Immediate.&lt;anonymous&gt; (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:3:6373)\n    at processImmediate (internal/timers.js:461:21)] {\n    code: -32800,\n    data: undefined\n  }\n}\nWARN [1/17/2022, 5:14:10 PM]: LSP request timed out {\n  method: 'rust-analyzer/inlayHints',\n  param: {\n    textDocument: {\n      uri: 'file:///home/waffle/projects/repos/teloxide-core/src/adaptors/throttle.rs'\n    }\n  },\n  error: [$i [Error]: canceled by client\n    at Gt (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:4:223)\n    at rn (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:3:6520)\n    at Immediate.&lt;anonymous&gt; (/home/waffle/.vscode/extensions/matklad.rust-analyzer-0.3.907/out/main.js:3:6373)\n    at processImmediate (internal/timers.js:461:21)] {\n    code: -32800,\n    data: undefined\n  }\n}\n</code></pre></div>",
        "id": 268275993,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429021
    },
    {
        "content": "<p>Do the other features still work when this happens?</p>",
        "id": 268276179,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429114
    },
    {
        "content": "<p>No, go-to-definition, auto-completion and similar also stop working</p>",
        "id": 268276447,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268274157\">said</a>:</p>\n<blockquote>\n<p>Also, the initial load (cache priming, actually) seems painfully slow</p>\n</blockquote>\n<p>Isn't this normal? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> I'm so used to it, that I didn't even think about it</p>",
        "id": 268276495,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429293
    },
    {
        "content": "<blockquote>\n<p>I have a couple of timeouts:</p>\n</blockquote>\n<p>That's under Rust Analyzer Client, right? What about Rust Analyzer Language Server?</p>",
        "id": 268276819,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429482
    },
    {
        "content": "<p>Yes, that's Rust Analyzer Client. Rust Analyzer Language Server Trace is just empty</p>",
        "id": 268277020,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429573
    },
    {
        "content": "<p>When something crashes there's a third one called Rust Analyzer Server</p>",
        "id": 268277093,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429611
    },
    {
        "content": "<p>Also, I just got the same problem without any timeout warnings</p>",
        "id": 268277124,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429630
    },
    {
        "content": "<p>Oh, wait. I think I reproduced it</p>",
        "id": 268277339,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429728
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/TTLOTCwyTOSw4mabC2qAkZ0_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/TTLOTCwyTOSw4mabC2qAkZ0_/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/TTLOTCwyTOSw4mabC2qAkZ0_/image.png\"></a></div>",
        "id": 268277387,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429751
    },
    {
        "content": "<p>Does it use a lot of CPU when it starts hanging?</p>",
        "id": 268277471,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642429794
    },
    {
        "content": "<p>Oh, I found the Rust Analyzer Language Server logs too, but they don't fit into a zulip message, so here:<br>\n<a href=\"/user_uploads/4715/nX28FXB2lq_UavTwTTKzxY80/ra_log.txt\">ra_log.txt</a></p>",
        "id": 268277641,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642429861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> running <code>analysis-stats</code> on that repo is so fun</p>",
        "id": 268278052,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430071
    },
    {
        "content": "<p>found some nice panics or does it just immediately hang? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 268278105,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642430103
    },
    {
        "content": "<p>Neither, it just processes about one and a half functions per second</p>",
        "id": 268278188,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430131
    },
    {
        "content": "<p>I think we really don't like that <code>requester_forward</code> macro</p>",
        "id": 268278202,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430139
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268277471\">said</a>:</p>\n<blockquote>\n<p>Does it use a lot of CPU when it starts hanging?</p>\n</blockquote>\n<p>Oh, that's weird. RA is constantly spending one full core even before the hang</p>",
        "id": 268278236,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642430157
    },
    {
        "content": "<p>It also seems to process functions multiple times, but that can't be right. After a couple of minutes it's still on <code>requests::requester</code></p>",
        "id": 268278238,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268278202\">said</a>:</p>\n<blockquote>\n<p>I think we really don't like that <code>requester_forward</code> macro</p>\n</blockquote>\n<p>oh, right, that macro xd</p>",
        "id": 268278329,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642430197
    },
    {
        "content": "<p>It moved on to <code>adaptors::parse</code> mode now, which is just as slow</p>",
        "id": 268278361,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430218
    },
    {
        "content": "<p>I think there are two issues here: <code>chalk</code> gets stuck on some code (I couldn't find which), as it sometimes <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7796\">does</a>, but we're also very slow on those macros (or something else in the code).</p>",
        "id": 268278571,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430329
    },
    {
        "content": "<p><code>analysis-stats</code> took 315 s for me as opposed to 50 s or so on <code>rust-analyzer</code> itself, which has about 15x more code</p>",
        "id": 268278745,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430419
    },
    {
        "content": "<p>I guess going so hard with big traits / macro / etc wasn't a good idea to begin with</p>",
        "id": 268278965,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642430527
    },
    {
        "content": "<p>We actively avoid proc macros and interfaces heavy with generics to keep compile times fast</p>",
        "id": 268279049,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430574
    },
    {
        "content": "<p>One day I'll figure out how to make optional parameters &amp; extensible interfaces without writing such generic-heavy code...</p>",
        "id": 268279544,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642430831
    },
    {
        "content": "<p>921/1808 50% processing: adaptors::throttle::send_invoice (/home/grayshade/teloxide-core/src/adaptors/throttle.rs 34..427)</p>",
        "id": 268279612,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430875
    },
    {
        "content": "<p>Ah</p>",
        "id": 268279635,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430882
    },
    {
        "content": "<p>I thought it got stuck there, but it just takes a really long time on those functions</p>",
        "id": 268279686,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430896
    },
    {
        "content": "<p>Like tens of seconds</p>",
        "id": 268279697,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642430901
    },
    {
        "content": "<p>ftr <code>send_invoice</code> looks like this: <a href=\"/user_uploads/4715/wLuBt3Wv7J9euzIDscrcnVZA/2022-01-17_17-50.png\">2022-01-17_17-50.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/wLuBt3Wv7J9euzIDscrcnVZA/2022-01-17_17-50.png\" title=\"2022-01-17_17-50.png\"><img src=\"/user_uploads/4715/wLuBt3Wv7J9euzIDscrcnVZA/2022-01-17_17-50.png\"></a></div>",
        "id": 268280001,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642431074
    },
    {
        "content": "<p>I wonder if removing all <code>Into&lt;&gt;</code>s would make anything better <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 268280063,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642431117
    },
    {
        "content": "<p>One trick (which might not help here) is to split the function in two, a generic and a non-generic part</p>",
        "id": 268280701,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642431448
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273349\">Waffle Lapkin</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268278236\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268277471\">said</a>:</p>\n<blockquote>\n<p>Does it use a lot of CPU when it starts hanging?</p>\n</blockquote>\n<p>Oh, that's weird. RA is constantly spending one full core even before the hang</p>\n</blockquote>\n<p>It seems like it starts spending one full core when you open one of the modules with <code>requester_forward!</code> calls (Basically any submodule of <code>adaptors</code>). I just happened to have the module open when I reloaded the server that time.</p>\n<p>Also, some modules are easier than others. For example I can open <code>parse_mode</code>or <code>trace</code> and after some time RA stops using 100% cpu, but with <code>throttle</code> it just doesn't happen. One possible way in which <code>throttle</code> is worse than any other module is that it creates a closure per function:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$m</span>:<span class=\"nc\">ident</span><span class=\"w\"> </span><span class=\"cp\">$this</span>:<span class=\"nc\">ident</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"cp\">$($arg</span>:<span class=\"nc\">ident</span><span class=\"w\"> </span>: <span class=\"cp\">$T</span>:<span class=\"nc\">ty</span><span class=\"p\">),</span><span class=\"o\">*</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">ThrottlingRequest</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">request</span>: <span class=\"cp\">$this</span><span class=\"p\">.</span><span class=\"n\">inner</span><span class=\"p\">().</span><span class=\"cp\">$m</span><span class=\"p\">(</span><span class=\"cp\">$($arg</span><span class=\"p\">),</span><span class=\"o\">*</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">chat_id</span>: <span class=\"o\">|</span><span class=\"n\">p</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">payload_ref</span><span class=\"p\">().</span><span class=\"n\">chat_id</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"c1\">// &lt;-- here</span>\n<span class=\"w\">            </span><span class=\"n\">worker</span>: <span class=\"cp\">$this</span><span class=\"p\">.</span><span class=\"n\">queue</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 268281654,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642431869
    },
    {
        "content": "<p>We're spending the time in chalk, which is the trait solver, so it might be related to all those generics</p>",
        "id": 268281783,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642431929
    },
    {
        "content": "<p>Well, generics are the same for all modules, so <code>throttle</code> shouldn't be that different from others <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 268281919,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642431977
    },
    {
        "content": "<p>But <code>requests::requester</code> and <code>adaptors::parse</code> are slow too</p>",
        "id": 268282009,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642432019
    },
    {
        "content": "<p>Yes, that's also true</p>",
        "id": 268282296,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642432144
    },
    {
        "content": "<p>welp</p>",
        "id": 268287838,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642434823
    },
    {
        "content": "<p>Removing all generics helps, but it's still slow</p>",
        "id": 268287876,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642434842
    },
    {
        "content": "<p>:(</p>",
        "id": 268288126,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642434959
    },
    {
        "content": "<p>Here is the removal: <a href=\"https://github.com/teloxide/teloxide-core/pull/168\">https://github.com/teloxide/teloxide-core/pull/168</a>, if you want to compare <code>analysis-stats</code></p>",
        "id": 268288799,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642435268
    },
    {
        "content": "<p>Well, it's still slow, but over twice as fast</p>",
        "id": 268289326,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642435552
    },
    {
        "content": "<p>I still see some under <code>types</code></p>",
        "id": 268289773,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642435786
    },
    {
        "content": "<p>Some what?</p>",
        "id": 268290937,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642436479
    },
    {
        "content": "<p>Some <code>Into&lt;String&gt;</code>s</p>",
        "id": 268290960,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642436496
    },
    {
        "content": "<p>Ah, I see</p>",
        "id": 268291081,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642436566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273349\">Waffle Lapkin</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Trying.20to.20load.20documentation.20of.20an.20item.20brakes.20everything/near/268288799\">said</a>:</p>\n<blockquote>\n<p>Here is the removal: <a href=\"https://github.com/teloxide/teloxide-core/pull/168\">https://github.com/teloxide/teloxide-core/pull/168</a>, if you want to compare <code>analysis-stats</code></p>\n</blockquote>\n<p>That must have hurt</p>",
        "id": 268291098,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642436585
    },
    {
        "content": "<p>Most of the changes were made by just a single line diff in a code-gen utility :D</p>",
        "id": 268291242,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642436655
    },
    {
        "content": "<p>Are there any way to profile RA? I want to figure what exactly is the problem. </p>\n<p>The IDEA for example works fine-ish (it's laggy, but doesn't hang), so I think RA could also, given some optimizations :)</p>",
        "id": 268294097,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642438524
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling\">https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling</a> and <code>perf</code> or any C profiler</p>",
        "id": 268294224,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642438599
    },
    {
        "content": "<p>You can also use <code>pprof</code>: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/profile/src/lib.rs#L50\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/profile/src/lib.rs#L50</a></p>",
        "id": 268294407,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642438709
    },
    {
        "content": "<p>Thanks! Will try</p>",
        "id": 268294553,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1642438801
    }
]