[
    {
        "content": "<p>libcore contains a lot of modules with <code>#[cfg(not(test))]</code> on them, but r-a analysis seems to happen with <code>cfg(test)</code> enabled, breaking it on most of libcore.</p>\n<p>Is there any way around this? I'm assuming it's on by default to allow analysis in test modules</p>",
        "id": 209223185,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1599395067
    },
    {
        "content": "<p>Luckily these cfgs don't seem to be actually necessary, so I can remove them for now</p>",
        "id": 209223454,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1599395470
    },
    {
        "content": "<p>In my ideal world rust-analyzer would magically work with all cfg possibilities at the same time, but that's probably going to remain a pipe dream for the foreseeable future :)</p>",
        "id": 209223468,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1599395515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20does.20not.20work.20on.20most.20of.20libcore/near/209223454\">said</a>:</p>\n<blockquote>\n<p>Luckily these cfgs don't seem to be actually necessary, so I can remove them for now</p>\n</blockquote>\n<p>They are necessary when testing I think, as otherwise things would conflict with the libcore included through libtest.</p>",
        "id": 209223569,
        "sender_full_name": "bjorn3",
        "timestamp": 1599395605
    },
    {
        "content": "<p>Doesn't look like it. The comments point to <a href=\"https://github.com/rust-lang/rust/issues/65860\">https://github.com/rust-lang/rust/issues/65860</a>, which hasn't been done yet.</p>",
        "id": 209223824,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1599395974
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/pull/76409\">https://github.com/rust-lang/rust/pull/76409</a>, let's see if that works</p>",
        "id": 209229082,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1599404900
    },
    {
        "content": "<p>rust-analyzer, with a Cargo.toml project, will set <code>test</code> when it's processing sources (but not when processing the stdlib itself (as an injected dependency of the project). </p>\n<p>You might have an easier time with RA in the stdlib if you generated a rust-project.json for it (where you can be really explicit about all of the folders and features).</p>",
        "id": 210070937,
        "sender_full_name": "woody77",
        "timestamp": 1600122872
    }
]