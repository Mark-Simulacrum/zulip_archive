[
    {
        "content": "<p>Hi, I have been afflicted by some strange layout problem with Emacs and LSP. I cant explain with words, so I'll post two animation files. I'm using Sway under Wayland (in case it is relevant)</p>",
        "id": 198191482,
        "sender_full_name": "apiraino",
        "timestamp": 1589978201
    },
    {
        "content": "<p>Basically when LSP is trying to open the <code>rustfmt</code> error log window, the Emacs buffer is swapped under my nose and the <code>rustfmt</code> buffer log is put in foreground</p>",
        "id": 198191556,
        "sender_full_name": "apiraino",
        "timestamp": 1589978251
    },
    {
        "content": "<p>Example where is does <em>not</em> happen</p>",
        "id": 198191574,
        "sender_full_name": "apiraino",
        "timestamp": 1589978262
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/tuK8d5-hCCoUHNtiHJiX73QJ/recording1.webm\">recording1.webm</a></p>",
        "id": 198191586,
        "sender_full_name": "apiraino",
        "timestamp": 1589978277
    },
    {
        "content": "<p>(The source buffer is not completely covered and on the right we see the rustfmt buffer)</p>",
        "id": 198191666,
        "sender_full_name": "apiraino",
        "timestamp": 1589978312
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/dOLdtLGJ31gGEQ5YpZiIVJnz/recording2.webm\">recording2.webm</a></p>",
        "id": 198191678,
        "sender_full_name": "apiraino",
        "timestamp": 1589978320
    },
    {
        "content": "<p>(Here I shrink slightly the CLI window and the <code>rustfmt</code> emacs buffer with the source code is put in background, I have to switch back to fix the code)</p>",
        "id": 198191739,
        "sender_full_name": "apiraino",
        "timestamp": 1589978372
    },
    {
        "content": "<p>I can't even search on github what I can do to avoid this behaviour, I'd like to disable all the accessory buffers that popup and are distracting</p>",
        "id": 198191843,
        "sender_full_name": "apiraino",
        "timestamp": 1589978427
    },
    {
        "content": "<p>Sorry for being vague <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>  and thanks for any suggestion</p>",
        "id": 198191875,
        "sender_full_name": "apiraino",
        "timestamp": 1589978454
    },
    {
        "content": "<p>I don't think that error buffer comes from LSP, rather from the separate Emacs rustfmt integration</p>",
        "id": 198194006,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1589979561
    },
    {
        "content": "<p>LSP can format the file for you, but it won't open an error buffer if it fails</p>",
        "id": 198194031,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1589979580
    },
    {
        "content": "<p>so I would recommend using the LSP formatter instead (that's <code>lsp-format-buffer</code>)</p>",
        "id": 198194178,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1589979632
    },
    {
        "content": "<p>ahh thanks, I will definitively try that and locate the offending package</p>",
        "id": 198194517,
        "sender_full_name": "apiraino",
        "timestamp": 1589979789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> ok fixed that issue and got rid of some redundant configs. Now, I have another question about <code>rustfmt</code>.  Does lsp-rust currently have a  rustfmt-on-save hook? I think I only see a <code>rust-build-on-save</code> but nothing else configurable on save</p>",
        "id": 198456463,
        "sender_full_name": "apiraino",
        "timestamp": 1590162126
    },
    {
        "content": "<p>I don't think it has built-in support, but I guess something like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">add-hook</span> <span class=\"ss\">&#39;before-save-hook</span> <span class=\"p\">(</span><span class=\"nb\">lambda</span> <span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nf\">eq</span> <span class=\"ss\">&#39;rust-mode</span> <span class=\"nv\">major-mode</span><span class=\"p\">)</span>\n                                           <span class=\"p\">(</span><span class=\"nv\">lsp-format-buffer</span><span class=\"p\">))))</span>\n</code></pre></div>\n\n\n<p>should work</p>",
        "id": 198456775,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1590162303
    },
    {
        "content": "<p>nice, I will try it - thanks!</p>",
        "id": 198457750,
        "sender_full_name": "apiraino",
        "timestamp": 1590162729
    },
    {
        "content": "<p>works great! I would like to submit for evaluation a small PR to the documentation, if you don't mind. I think that snippet is of great value :-)</p>",
        "id": 198527542,
        "sender_full_name": "apiraino",
        "timestamp": 1590226941
    }
]