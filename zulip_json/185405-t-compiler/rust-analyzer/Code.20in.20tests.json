[
    {
        "content": "<p>Is is just me or code in refactoring test <code>test_for_each_in_method_stmt</code> would not normally compile?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">iter</span>::<span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"mi\">92</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">for_each</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"x: {}, y: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>each_to_for_simple_for</code> too where I think there is a mutability issue<br>\nOr did I miss something?</p>",
        "id": 271284033,
        "sender_full_name": "AppCoder1234",
        "timestamp": 1644416295
    },
    {
        "content": "<p>rust-analyzer needs to work on code that doesn't yet compile</p>",
        "id": 271284513,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1644416512
    },
    {
        "content": "<p>I would guess this one wasn't <em>intentionally</em> written with a type error, but yeah, it doesn't matter</p>",
        "id": 271284941,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1644416696
    }
]