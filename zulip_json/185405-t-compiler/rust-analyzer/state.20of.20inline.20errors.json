[
    {
        "content": "<p>Hey all. I was talking to <span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> today about how the inline error messages from rust-analyzer in vs code are not always as good as they are when running <code>cargo check</code> in the terminal. Does anyone have any insight into why this is? Is this something we could possibly spend some time improving? Thanks!</p>",
        "id": 269109336,
        "sender_full_name": "rylev",
        "timestamp": 1643032869
    },
    {
        "content": "<p>We have code that maps the rustc diagnostics to LSP diagnostics, we've tuned that a bit already but it could potentially use some more improvements, yeah. Would be great to have an example that isn't optimal.</p>",
        "id": 269110058,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1643033167
    },
    {
        "content": "<p>Although LSP is also somewhat more limited than the terminal, so we probably won't be able to fully match it.</p>",
        "id": 269110117,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1643033196
    },
    {
        "content": "<p>I believe the hints should be able to render arbitrary markdown though, right?</p>",
        "id": 269111229,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643033679
    },
    {
        "content": "<p>(specifically the mouse-over hints, not the \"problems\" panel)</p>",
        "id": 269111273,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643033699
    },
    {
        "content": "<p>Diagnostics hovers aren't customizable in VSCode <em>I think</em>. And the LSP doesn't specify anything about the diagnostics message, so markdown isn't supported in there I imagine <a href=\"https://microsoft.github.io/language-server-protocol/specifications/specification-current/#diagnostic\">https://microsoft.github.io/language-server-protocol/specifications/specification-current/#diagnostic</a></p>",
        "id": 269111901,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643033980
    },
    {
        "content": "<p>I think the biggest problem is that it's hard to visualize errors that point to multiple locations. You get an error in one place and a hint in another, but it's hard to tell how they're connected</p>",
        "id": 269112020,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1643034035
    },
    {
        "content": "<p>it'd probably be interesting to look at some examples and brainstorm how they could be best visualized in the editor UI if we disregard LSP / extension limitations</p>",
        "id": 269112317,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1643034193
    },
    {
        "content": "<p>oh lol, I even commented on one of those threads: <a href=\"https://github.com/microsoft/vscode/issues/54272#issuecomment-617670458\">https://github.com/microsoft/vscode/issues/54272#issuecomment-617670458</a> (two years ago now)</p>",
        "id": 269112635,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643034347
    },
    {
        "content": "<p>VSCode is unfortunately rather limited when it comes to diagnostic things <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span></p>",
        "id": 269112783,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643034423
    },
    {
        "content": "<p>this is all very helpful, all. What I'm taking away is that we could try and make things happen in the long term, but right now we're actually blocked on the capabilities VS Code exposes.</p>",
        "id": 269113058,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643034570
    },
    {
        "content": "<p>Pretty much, we can think of how to express multispan diagnostics and the like in the UI better, but actually prototyping/implementing that(at least in VSCode) wouldn't work.</p>",
        "id": 269113188,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643034621
    }
]