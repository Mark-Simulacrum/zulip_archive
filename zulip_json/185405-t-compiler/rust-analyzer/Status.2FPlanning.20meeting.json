[
    {
        "content": "<p>Hey, <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>, do we think we need a high-level planing meeting/sync-up soon? We haven't had one for a while, but at the same time the progress is steady and impressive, so I don't think like we <strong>need</strong> planing. Though, we may sort-of celebrate what we've achieved since all-hands.</p>",
        "id": 165063378,
        "sender_full_name": "matklad",
        "timestamp": 1557229405
    },
    {
        "content": "<p>I at least would love to hear updates!</p>",
        "id": 165071291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557236391
    },
    {
        "content": "<p>ok, I'd be up for it</p>",
        "id": 165160030,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557320270
    },
    {
        "content": "<p>Let's do this: <a href=\"https://doodle.com/poll/5a74s37gvxnp23k3\" target=\"_blank\" title=\"https://doodle.com/poll/5a74s37gvxnp23k3\">https://doodle.com/poll/5a74s37gvxnp23k3</a>!</p>\n<p>I suggest spending the first half discussing what we've already done, and the second half for high-level planning.</p>\n<p>They key people are  <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>  and <span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> , but of course the more the merrier! cc <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span></p>",
        "id": 165161753,
        "sender_full_name": "matklad",
        "timestamp": 1557321478
    },
    {
        "content": "<p>I’m pretty ill (bedridden) so I can’t guarantee I’ll make it to a mtg Friday. But I will try</p>",
        "id": 165165743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1557324337
    },
    {
        "content": "<p>Sorry i am on vacation this week, but will be available next week all days.</p>",
        "id": 165166306,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557324739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> take care!</p>",
        "id": 165167297,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557325494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> take care!</p>\n<p>I've scheduled the meeting on Tuesday, invites sent!</p>",
        "id": 165277626,
        "sender_full_name": "matklad",
        "timestamp": 1557426910
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> : <span aria-label=\"bell\" class=\"emoji emoji-1f514\" role=\"img\" title=\"bell\">:bell:</span> meeting time! <span aria-label=\"bell\" class=\"emoji emoji-1f514\" role=\"img\" title=\"bell\">:bell:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 165634864,
        "sender_full_name": "matklad",
        "timestamp": 1557849620
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 165634885,
        "sender_full_name": "matklad",
        "timestamp": 1557849636
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 165634943,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557849683
    },
    {
        "content": "<p>Oh hm, I was under the impression it was in an hour... timezones <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 165634945,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557849685
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, are you around?</p>",
        "id": 165635057,
        "sender_full_name": "matklad",
        "timestamp": 1557849740
    },
    {
        "content": "<p>i'm around -ish yeah</p>",
        "id": 165635074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557849755
    },
    {
        "content": "<p>Same, although on a train atm</p>",
        "id": 165635092,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1557849772
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 165635103,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1557849782
    },
    {
        "content": "<p>Cool! Let's get started then?</p>",
        "id": 165635159,
        "sender_full_name": "matklad",
        "timestamp": 1557849822
    },
    {
        "content": "<p>We plan to start with short recap of progress</p>",
        "id": 165635252,
        "sender_full_name": "matklad",
        "timestamp": 1557849856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> would you like to start with talking a bit about macro by example?</p>",
        "id": 165635275,
        "sender_full_name": "matklad",
        "timestamp": 1557849872
    },
    {
        "content": "<p>(I assume <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> would like some time to prep a chalk report :D )</p>",
        "id": 165635332,
        "sender_full_name": "matklad",
        "timestamp": 1557849907
    },
    {
        "content": "<p>Okay, what i did in these weeks are just fixed all bugs from  fooddogging :)</p>",
        "id": 165635377,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557849946
    },
    {
        "content": "<p>Does that mean that we just don't crash on rust-analyzer macros, or are we more or less correctly expanding stdlib now?</p>",
        "id": 165635499,
        "sender_full_name": "matklad",
        "timestamp": 1557850015
    },
    {
        "content": "<p>It means latter, which means we should correctly (as i know) expanding stdlib now</p>",
        "id": 165635555,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557850061
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 165635614,
        "sender_full_name": "matklad",
        "timestamp": 1557850086
    },
    {
        "content": "<p>At least I can attest that we correctly expand syn's macro-generated AST</p>",
        "id": 165635642,
        "sender_full_name": "matklad",
        "timestamp": 1557850111
    },
    {
        "content": "<p>so, you now can hack on proc macros and get completion for syn types</p>",
        "id": 165635663,
        "sender_full_name": "matklad",
        "timestamp": 1557850128
    },
    {
        "content": "<p>And as i know, we are only have one bug in rustc source code too.</p>",
        "id": 165635699,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1557850158
    },
    {
        "content": "<p>that's really great</p>",
        "id": 165635785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557850207
    },
    {
        "content": "<p>Should we move onto traits?</p>",
        "id": 165635824,
        "sender_full_name": "matklad",
        "timestamp": 1557850238
    },
    {
        "content": "<p>(Or I can tell a bit about the lexer stuff whihc I've been doing recently)</p>",
        "id": 165635852,
        "sender_full_name": "matklad",
        "timestamp": 1557850265
    },
    {
        "content": "<p>we can move onto traits ;)</p>",
        "id": 165635885,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557850288
    },
    {
        "content": "<p>Sure, go ahead! :)</p>",
        "id": 165635895,
        "sender_full_name": "matklad",
        "timestamp": 1557850296
    },
    {
        "content": "<p>Basically, we now use Chalk to check whether a type implements a trait for method resolution; we support where clauses now, so there's actual logic solving going on ;) There are a few missing minor details like super trait handling, and we keep running into cases where Chalk takes a very long time to solve a query (I think part of the reason we keep running into this is that we're missing so many features, so a lot of trait queries that should have a solution don't have one, which leads to Chalk trying out lots of combinations unsuccessfully.) So we're looking into adding a 'fuel' mechanism to Chalk that makes sure it never takes too long, even if that means we get a wrong answer (rust-lang/chalk#227, I'm hoping for your feedback <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> )</p>",
        "id": 165635899,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557850300
    },
    {
        "content": "<p>but mainly right now I'm now looking at implementing support for <code>Deref</code>, because I think it's a good first step for associated type support (I don't need to implement assoc type resolution in paths for it), and it'll give a model for implementing <code>for</code> and <code>?</code></p>",
        "id": 165635993,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557850356
    },
    {
        "content": "<p>what exactly do you mean by \"implementing support for Deref\"?</p>",
        "id": 165636024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557850382
    },
    {
        "content": "<p>Yeah, <code>Deref</code> + <code>Try</code>  + <code>Iterator</code> would be awesome!</p>",
        "id": 165636050,
        "sender_full_name": "matklad",
        "timestamp": 1557850402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> e.g. being able to provide autoderefed completions when you have an <code>Arc&lt;X&gt;</code></p>",
        "id": 165636071,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557850430
    },
    {
        "content": "<p>so using the <code>Deref::Target</code> for <code>*</code> and autoderef</p>",
        "id": 165636139,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557850455
    },
    {
        "content": "<p>I see, ok</p>",
        "id": 165636219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557850516
    },
    {
        "content": "<p>I suppose it's my turn now?</p>",
        "id": 165636317,
        "sender_full_name": "matklad",
        "timestamp": 1557850576
    },
    {
        "content": "<p>So, the kind-of big piece of work I was working on lately is librification of lexer</p>",
        "id": 165636344,
        "sender_full_name": "matklad",
        "timestamp": 1557850618
    },
    {
        "content": "<p>that is, I'd love to share lexer between rustc and rust-analzyer</p>",
        "id": 165636373,
        "sender_full_name": "matklad",
        "timestamp": 1557850635
    },
    {
        "content": "<p>Progress has been slow, but steady. Although the amount of code is small, extracting it from rustc is not trivial, and rebuilds are long :-(</p>",
        "id": 165636409,
        "sender_full_name": "matklad",
        "timestamp": 1557850679
    },
    {
        "content": "<p>That said, we already share code which handles escape sequences in string literals</p>",
        "id": 165636473,
        "sender_full_name": "matklad",
        "timestamp": 1557850699
    },
    {
        "content": "<p>so, rust-analyzer and rustc give you approximatelly the same error for <code>\"\\u{FFFFFFF}\"</code></p>",
        "id": 165636513,
        "sender_full_name": "matklad",
        "timestamp": 1557850737
    },
    {
        "content": "<p>and, I hope that after a next couple of refactrings on rustc side we share the lexer itself as well</p>",
        "id": 165636575,
        "sender_full_name": "matklad",
        "timestamp": 1557850787
    },
    {
        "content": "<p>I've also been doing various smaller things, and one interesting bit is the structured editing API</p>",
        "id": 165636649,
        "sender_full_name": "matklad",
        "timestamp": 1557850812
    },
    {
        "content": "<p>Our syntax tree is immutable, and that makes it hard to write refactorings that modify the source code</p>",
        "id": 165636675,
        "sender_full_name": "matklad",
        "timestamp": 1557850836
    },
    {
        "content": "<p>But now we have and API to do something like <code>struct_literal.add_field(new_field)</code>, which handles trailing comma gracefully</p>",
        "id": 165636710,
        "sender_full_name": "matklad",
        "timestamp": 1557850869
    },
    {
        "content": "<p>And I think these are all the major things that happend recently</p>",
        "id": 165636736,
        "sender_full_name": "matklad",
        "timestamp": 1557850901
    },
    {
        "content": "<p>Note that name resolution librarification is stalled at the moment, mainly because nobody is working on it :D</p>",
        "id": 165636802,
        "sender_full_name": "matklad",
        "timestamp": 1557850938
    },
    {
        "content": "<blockquote>\n<p>But now we have and API to do something like <code>struct_literal.add_field(new_field)</code>, which handles trailing comma gracefully</p>\n</blockquote>\n<p>is this copy-on-write?</p>",
        "id": 165636803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557850938
    },
    {
        "content": "<blockquote>\n<p>is this copy-on-write?</p>\n</blockquote>\n<p>Yeah</p>",
        "id": 165636824,
        "sender_full_name": "matklad",
        "timestamp": 1557850962
    },
    {
        "content": "<p>So, it's like the API you've described in the blog post about immutale data structures in Rust</p>",
        "id": 165636850,
        "sender_full_name": "matklad",
        "timestamp": 1557850985
    },
    {
        "content": "<p>Except for the fact that we can't have <code>&amp;mut SyntaxNode</code> because of the parent links</p>",
        "id": 165636868,
        "sender_full_name": "matklad",
        "timestamp": 1557851010
    },
    {
        "content": "<p>So you actually interract with <code>&amp;mut AstEditor&lt;StructLiteral&gt;</code></p>",
        "id": 165636939,
        "sender_full_name": "matklad",
        "timestamp": 1557851044
    },
    {
        "content": "<p>And... Lets move to planning?</p>",
        "id": 165637004,
        "sender_full_name": "matklad",
        "timestamp": 1557851107
    },
    {
        "content": "<p>So I think the recent macro and chalked work clarified some of the known unknowns about rust IDE</p>",
        "id": 165637223,
        "sender_full_name": "matklad",
        "timestamp": 1557851295
    },
    {
        "content": "<p>It seems like it is possible to expand macro, and it is possible to resolve traits during completion (although I too look forward to the fuel thing)</p>",
        "id": 165637252,
        "sender_full_name": "matklad",
        "timestamp": 1557851326
    },
    {
        "content": "<p>I'm actually really interested in trying to complete methods from traits that are not in scope as well</p>",
        "id": 165637299,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557851371
    },
    {
        "content": "<p>With auto-import?</p>",
        "id": 165637317,
        "sender_full_name": "matklad",
        "timestamp": 1557851386
    },
    {
        "content": "<p>yeah</p>",
        "id": 165637324,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557851394
    },
    {
        "content": "<p>Yeah, that's an interesting topic, which will require some IDE-specific machinery (index of visible stuff)</p>",
        "id": 165637397,
        "sender_full_name": "matklad",
        "timestamp": 1557851419
    },
    {
        "content": "<p>that'll be a lot more trait queries though</p>",
        "id": 165637404,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557851425
    },
    {
        "content": "<blockquote>\n<p>So I think the recent macro and chalked work clarified some of the known unknowns about rust IDE</p>\n</blockquote>\n<p>can you drill in a bit here? by this you mean: we have clear challenges to try and tackle, at least in part</p>",
        "id": 165637453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557851467
    },
    {
        "content": "<p>I mean, we haven't hit any road blocks</p>",
        "id": 165637481,
        "sender_full_name": "matklad",
        "timestamp": 1557851492
    },
    {
        "content": "<p>basically, both seem to be fast enough</p>",
        "id": 165637493,
        "sender_full_name": "matklad",
        "timestamp": 1557851506
    },
    {
        "content": "<p>Specifically, your insight about adding <code>MacroDef</code> to <code>CallId</code> showed that we can do expansion really incrementally</p>",
        "id": 165637564,
        "sender_full_name": "matklad",
        "timestamp": 1557851536
    },
    {
        "content": "<p>The bit I am still not sure about is handling hygiene</p>",
        "id": 165637589,
        "sender_full_name": "matklad",
        "timestamp": 1557851563
    },
    {
        "content": "<p>currently expansion is non-hygenic, and there's a chance that handling it properly will through a wrench into the works</p>",
        "id": 165637637,
        "sender_full_name": "matklad",
        "timestamp": 1557851599
    },
    {
        "content": "<p>So this is another specific bit worth digging into soon</p>",
        "id": 165637676,
        "sender_full_name": "matklad",
        "timestamp": 1557851628
    },
    {
        "content": "<blockquote>\n<p>that'll be a lot more trait queries though</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> not neccessary: I thin for this you first want to filter by identifier (we don't do this at all now), <em>then</em> by set of potentially importable traits, and only then by actual <code>implements</code> query</p>",
        "id": 165637852,
        "sender_full_name": "matklad",
        "timestamp": 1557851753
    },
    {
        "content": "<p>ah, I wasn't sure whether we're actually 'supposed' to filter server-side by LSP</p>",
        "id": 165637948,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557851809
    },
    {
        "content": "<p>In this case I think we should. And, just in general, we should handle sorting and filtering fully on the server side: I belive we are fundametally better positioned to do that.</p>",
        "id": 165638017,
        "sender_full_name": "matklad",
        "timestamp": 1557851859
    },
    {
        "content": "<p>yeah, I think e.g. prioritizing completions that give a matching type for the current expression would be cool as well</p>",
        "id": 165638106,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557851908
    },
    {
        "content": "<p>This actually reminds me of another thing which is worth focusing at in the near future: polish</p>",
        "id": 165638157,
        "sender_full_name": "matklad",
        "timestamp": 1557851966
    },
    {
        "content": "<p>We've \"polished\" chalk and macros recently in a sense that they no longer crash/hang</p>",
        "id": 165638186,
        "sender_full_name": "matklad",
        "timestamp": 1557851989
    },
    {
        "content": "<p>But I bet there is some work to be done to make recent additions more reliable</p>",
        "id": 165638273,
        "sender_full_name": "matklad",
        "timestamp": 1557852026
    },
    {
        "content": "<p>(especially around integration macros with name resolution, and integrating macros with IDE features)</p>",
        "id": 165638295,
        "sender_full_name": "matklad",
        "timestamp": 1557852047
    },
    {
        "content": "<p>So this is a very interesting question</p>",
        "id": 165638371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852100
    },
    {
        "content": "<p>Many people (including myself) are using rust-analyzer now</p>",
        "id": 165638376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852105
    },
    {
        "content": "<p>We have no real idea how many I think :)</p>",
        "id": 165638382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852110
    },
    {
        "content": "<p>But do we want to have some kind of mechanism for \"feature gating\" things like chalk etc that don't <em>really</em> improve people's lives yet?</p>",
        "id": 165638448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852126
    },
    {
        "content": "<p>Good question...</p>\n<p>I think at this stage it's better to \"commit fast, crash often\"</p>",
        "id": 165638497,
        "sender_full_name": "matklad",
        "timestamp": 1557852176
    },
    {
        "content": "<p>As in, working on adding more features is more important than stability, b/c there are so many features missing</p>",
        "id": 165638569,
        "sender_full_name": "matklad",
        "timestamp": 1557852235
    },
    {
        "content": "<p>Though yeah, if we <strong>knew</strong> how many folks really need rust-analyzer, we would be able to make more informed descision here</p>",
        "id": 165638666,
        "sender_full_name": "matklad",
        "timestamp": 1557852289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> are you around? What is the status of out-of-process rustc for rls?</p>",
        "id": 165638800,
        "sender_full_name": "matklad",
        "timestamp": 1557852369
    },
    {
        "content": "<p>I feel like that (out of process rustc, shared between rls and rls2) could be a good inflection point to start <strong>really</strong> focusing on stability</p>",
        "id": 165638846,
        "sender_full_name": "matklad",
        "timestamp": 1557852418
    },
    {
        "content": "<blockquote>\n<p>I think at this stage it's better to \"commit fast, crash often\"</p>\n</blockquote>\n<p>isn't this a false dichotomy?</p>",
        "id": 165638992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852488
    },
    {
        "content": "<p>still, I agree it's far too early for a lot of procedure or feature-gates</p>",
        "id": 165639032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852517
    },
    {
        "content": "<p>I think I really just meant a single flag of some kind</p>",
        "id": 165639040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852522
    },
    {
        "content": "<p>\"enable experiments\" or not</p>",
        "id": 165639047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852527
    },
    {
        "content": "<p>I'd say that not a lot of people complained that rust-analyzer is broken recently</p>",
        "id": 165639174,
        "sender_full_name": "matklad",
        "timestamp": 1557852603
    },
    {
        "content": "<p>so that seems premature a bit</p>",
        "id": 165639205,
        "sender_full_name": "matklad",
        "timestamp": 1557852612
    },
    {
        "content": "<p>but in general <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> on the idea</p>",
        "id": 165639224,
        "sender_full_name": "matklad",
        "timestamp": 1557852623
    },
    {
        "content": "<p>I originally intended to make every feature of rust-analyzer configurable</p>",
        "id": 165639253,
        "sender_full_name": "matklad",
        "timestamp": 1557852646
    },
    {
        "content": "<p>The problem with IDEs is that they have so many features, that some of them are neccessary annoying for some folks</p>",
        "id": 165639300,
        "sender_full_name": "matklad",
        "timestamp": 1557852680
    },
    {
        "content": "<p>and having a tooggle for everything seems nice for \"power\" users</p>",
        "id": 165639336,
        "sender_full_name": "matklad",
        "timestamp": 1557852708
    },
    {
        "content": "<p>configurable=disable-able ?</p>",
        "id": 165639460,
        "sender_full_name": "matklad",
        "timestamp": 1557852770
    },
    {
        "content": "<p>we are almost out of time</p>",
        "id": 165639492,
        "sender_full_name": "matklad",
        "timestamp": 1557852795
    },
    {
        "content": "<p>Does anyone else want to suggest something?</p>",
        "id": 165639513,
        "sender_full_name": "matklad",
        "timestamp": 1557852808
    },
    {
        "content": "<p>I personally covered everything I wanted to :)</p>",
        "id": 165639540,
        "sender_full_name": "matklad",
        "timestamp": 1557852823
    },
    {
        "content": "<p>this has been super interesting</p>",
        "id": 165639609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852851
    },
    {
        "content": "<p>I am very frustrated that I've not been able to participate at all with <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span></p>",
        "id": 165639636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852868
    },
    {
        "content": "<p>and I know I certainly won't be able to until end of next week ;)</p>",
        "id": 165639655,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852881
    },
    {
        "content": "<p>I am debating about something in my head and curious to put it out there</p>",
        "id": 165639670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> we could switch to fork of chalk then <span aria-label=\"devil\" class=\"emoji emoji-1f47f\" role=\"img\" title=\"devil\">:devil:</span></p>",
        "id": 165639709,
        "sender_full_name": "matklad",
        "timestamp": 1557852919
    },
    {
        "content": "<p>(I mean I may be able to land a PR or something)</p>",
        "id": 165639725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557852933
    },
    {
        "content": "<p>sorry, what do you mean by aprticipate :D normally I'm good at understanding typos, but I'm drawing a blank here ;)</p>",
        "id": 165639829,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557852984
    },
    {
        "content": "<p><em>participate</em></p>",
        "id": 165639851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557853004
    },
    {
        "content": "<p>aah of course ;)</p>",
        "id": 165639859,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557853017
    },
    {
        "content": "<p>On the one hand, I want to see a \"careful re-implementation\" of Rust's type-checker, that aims for clarity, etc. I've thought that RLS 2.0 could provide such a path. On the other, I think it makes sense to push fast forward and try to \"stand up\" something that \"seems to work\". I think basically all I mean, really, by \"careful re-implementation\" is one where people like me (but not exclusively me) read over and try to compare to our expectations etc</p>",
        "id": 165639899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557853041
    },
    {
        "content": "<p>I guess what i'm saying is : I think it's great, y'all should carry on, and I should think about how I can try to free up time and space to participate more.</p>",
        "id": 165639924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557853066
    },
    {
        "content": "<p>/me realizes that he needs to run away really fast right now (or, better, ten minutes ago)</p>",
        "id": 165640017,
        "sender_full_name": "matklad",
        "timestamp": 1557853110
    },
    {
        "content": "<p>That was an awesome meeting, <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> !</p>",
        "id": 165640047,
        "sender_full_name": "matklad",
        "timestamp": 1557853137
    },
    {
        "content": "<p>yeah, I can't really do the \"careful\" reimplementation, since I'm learning most of it as I go along ;) I can and do look at rustc of course, but there it's often hard to distinguish what is there because it handles some crucial edge case I don't understand yet, and what's there just because it grew that way</p>",
        "id": 165640100,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1557853183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> i’m sorry, couldn’t get a reliable connection for a while</p>",
        "id": 165647685,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1557858061
    },
    {
        "content": "<p>No substantial progress has been made so far, I wanted to stsrt hacking on it after the lexer bit</p>",
        "id": 165647726,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1557858093
    },
    {
        "content": "<p>sorry I missed this meeting</p>",
        "id": 165698549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1557911769
    },
    {
        "content": "<p>I'm still working on setting up infrastructure to test rust-analyzer's nameres system against the output of <code>-Z save-analysis</code></p>",
        "id": 165698569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1557911797
    },
    {
        "content": "<p>Cool!</p>",
        "id": 165698673,
        "sender_full_name": "matklad",
        "timestamp": 1557911918
    }
]