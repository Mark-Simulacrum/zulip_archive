[
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10120\">https://github.com/rust-analyzer/rust-analyzer/issues/10120</a></p>\n<p>Someone asked about how to address this issue, I don't know the rust-analyzer crate itself too well though to be able to answer. Do we have anything indicating workspace being fully loaded? Is that what <code>is_quiescent</code> tells?</p>",
        "id": 267298112,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641651602
    },
    {
        "content": "<blockquote>\n<p>Is that what is_quiescent tells?</p>\n</blockquote>\n<p>Yes, IIRC</p>",
        "id": 267298152,
        "sender_full_name": "Laurențiu",
        "timestamp": 1641651702
    },
    {
        "content": "<p>We probably can remove that altogether -- the original idea is that we shouldn't be having long loops <em>especially</em> in non-quiescent state, but we've never got to actually fixing that</p>",
        "id": 267438627,
        "sender_full_name": "matklad",
        "timestamp": 1641821344
    },
    {
        "content": "<p>basically, anything that <em>could</em> take more than 16ms <em>should</em> be off the main loop</p>",
        "id": 267438666,
        "sender_full_name": "matklad",
        "timestamp": 1641821374
    },
    {
        "content": "<p>yeah, this can block the <code>onEnter</code> handler for <em>minutes</em>, presumably we block on the build script results or something?</p>",
        "id": 267438964,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1641821545
    },
    {
        "content": "<p>Might be that <code>switch_workspaces</code> call</p>",
        "id": 267439083,
        "sender_full_name": "Laurențiu",
        "timestamp": 1641821626
    },
    {
        "content": "<blockquote>\n<p>for minutes,</p>\n</blockquote>\n<p>Oh, that's def a bug which has to be fixed</p>",
        "id": 267442954,
        "sender_full_name": "matklad",
        "timestamp": 1641823736
    },
    {
        "content": "<p>Maybe just increasing the timeout to 1 second would be good?</p>",
        "id": 267442984,
        "sender_full_name": "matklad",
        "timestamp": 1641823752
    },
    {
        "content": "<p>maybe we could only log this if profiling is enabled?</p>",
        "id": 267443540,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1641824036
    },
    {
        "content": "<p>as an end-user of rust-analyzer, am i supposed to do anything when i see a \"Overly long loop turn\" message?  should I report it as a bug?</p>",
        "id": 267460589,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1641831406
    },
    {
        "content": "<p>If it happens when loading or reloading the project, you probably can't do anything about it.</p>",
        "id": 267461188,
        "sender_full_name": "Laurențiu",
        "timestamp": 1641831670
    },
    {
        "content": "<p>in that case, a <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> to the idea of suppressing a message that should be ignored :)</p>",
        "id": 267461489,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1641831798
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Suppress.20.22Overly.20long.20loop.20turn.22.20messages.20until.20workspace.20ha/near/267461188\">said</a>:</p>\n<blockquote>\n<p>If it happens when loading or reloading the project, you probably can't do anything about it.</p>\n</blockquote>\n<p>oh really? i get 3 overly long loop turns every time i save a file in our work workspace. i figured this was... it working as intended?</p>",
        "id": 267859975,
        "sender_full_name": "jhgg",
        "timestamp": 1642075811
    },
    {
        "content": "<p>it only happens when check on save is enabled... hmm</p>",
        "id": 267860947,
        "sender_full_name": "jhgg",
        "timestamp": 1642076437
    },
    {
        "content": "<p>Do you have a lot of warnings or something like that?</p>",
        "id": 267860998,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642076475
    },
    {
        "content": "<p>43 in the workspace</p>",
        "id": 267861041,
        "sender_full_name": "jhgg",
        "timestamp": 1642076509
    },
    {
        "content": "<p>okay fixed all the warnings and still takes 200-300ms loop turn every time checkOnSave runs</p>",
        "id": 267861407,
        "sender_full_name": "jhgg",
        "timestamp": 1642076726
    },
    {
        "content": "<p>Can you check the profile? <a href=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling\">https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling</a></p>",
        "id": 267861434,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642076748
    },
    {
        "content": "<p>E.g. <code>\"rust-analyzer.server.extraEnv\": { \"RA_PROFILE\": \"*&gt;10\" }</code></p>",
        "id": 267861572,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642076823
    },
    {
        "content": "<p>You posted the profile output in the wrong thread, but ye those 180ms would hit that. Are there no other spans in that flycheck one aside from <code>handle_event/flycheck</code>?</p>",
        "id": 267862891,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642077622
    },
    {
        "content": "<p>whoops! yeah there's a lot of spans, here's both: <a href=\"https://gist.github.com/jhgg/859f0a373bc14107d7f4788b89abbef7\">https://gist.github.com/jhgg/859f0a373bc14107d7f4788b89abbef7</a></p>",
        "id": 267862962,
        "sender_full_name": "jhgg",
        "timestamp": 1642077677
    },
    {
        "content": "<p>relevant source part is here <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/62a13cce9b6356af0dfeeeb6add3432f0e76a19f/crates/rust-analyzer/src/main_loop.rs#L358-L426\">https://github.com/rust-analyzer/rust-analyzer/blob/62a13cce9b6356af0dfeeeb6add3432f0e76a19f/crates/rust-analyzer/src/main_loop.rs#L358-L426</a><br>\nI don't really see where that comes from if you don't have any diagnostics actually <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 267863573,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642078080
    },
    {
        "content": "<p>yeah me neither i read the code. i can probably pop in more spans and try and locate whats the slow part...</p>",
        "id": 267863958,
        "sender_full_name": "jhgg",
        "timestamp": 1642078289
    },
    {
        "content": "<p>Maybe a lot(and I mean a ton) of <code>Progress</code> events are being sent? That is the only thing I could see causing this here</p>",
        "id": 267864057,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642078332
    },
    {
        "content": "<p>also, is it expected for trivial character changes in rather small files for semantics/inlay hints to take 250ms to update?</p>",
        "id": 267864297,
        "sender_full_name": "jhgg",
        "timestamp": 1642078482
    },
    {
        "content": "<p>Yes and No, we recalculate those for the whole file, but it should still be very fast due to query results being cached in theory. The main problem, which also makes completions currently suffer is apparently query validation. If you take a look at all those things, the majority of the time is spent in <code>infer:wait @ get_session_id</code>.</p>",
        "id": 267864466,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642078588
    },
    {
        "content": "<p>That's type inference for something we already have calculated, but salsa seems to take a long time revalidating that the query result has not changed.</p>",
        "id": 267864531,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642078629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Suppress.20.22Overly.20long.20loop.20turn.22.20messages.20until.20workspace.20ha/near/267864057\">said</a>:</p>\n<blockquote>\n<p>Maybe a lot(and I mean a ton) of <code>Progress</code> events are being sent? That is the only thing I could see causing this here</p>\n</blockquote>\n<p>27 add diagnostic type messages coming in appears to be.e</p>",
        "id": 267866047,
        "sender_full_name": "jhgg",
        "timestamp": 1642079417
    },
    {
        "content": "<p>We're passing <code>--all-targets</code>, maybe you have some warnings in tests?</p>",
        "id": 267866471,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642079662
    },
    {
        "content": "<p>Yeah, I do. They're dead_code warnings in tests because of some cfg feature flags.  heh. but i have them demoted to hints so they dont show up in problem pane</p>",
        "id": 267866505,
        "sender_full_name": "jhgg",
        "timestamp": 1642079696
    },
    {
        "content": "<p>It ends on a quadratic path because of <code>add_check_diagnostic</code>, but I'm not sure whether that's the problem</p>",
        "id": 267866977,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642079954
    },
    {
        "content": "<p>it might be interesting to also measure the time we're blocking while sending LSP responses, to see whether it's the case that we're overwhelming the other side with messages (e.g. progress)</p>",
        "id": 267867100,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1642080005
    },
    {
        "content": "<p>publishing of the lsp response for diagnostics appears to occur on another thread</p>",
        "id": 267867241,
        "sender_full_name": "jhgg",
        "timestamp": 1642080084
    },
    {
        "content": "<p><del>Ah, we actually block when running <code>rustfmt</code>. Or no, we don't?</del></p>",
        "id": 267867621,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642080257
    },
    {
        "content": "<p>the time is spent in DiagnosticCollection::clear_check &gt;_&gt;</p>",
        "id": 267868234,
        "sender_full_name": "jhgg",
        "timestamp": 1642080632
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>102ms - GlobalState::handle_event\n      102ms - GlobalState::handle_event/flycheck\n          101ms - DiagnosticCollection::clear_check\n        0   - GlobalState::process_changes (1 calls)\n</code></pre></div>",
        "id": 267868287,
        "sender_full_name": "jhgg",
        "timestamp": 1642080670
    },
    {
        "content": "<p>Unrelated, do we publish all the diagnostics every time?</p>",
        "id": 267868316,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642080697
    },
    {
        "content": "<p>Hmm, <code>clear_check</code> looks a bit odd to me, <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/09ce5d81d081ddf687dbbff22c6c5dab419e7336/crates/rust-analyzer/src/diagnostics.rs#L38-L41\">https://github.com/rust-analyzer/rust-analyzer/blob/09ce5d81d081ddf687dbbff22c6c5dab419e7336/crates/rust-analyzer/src/diagnostics.rs#L38-L41</a><br>\n<code>Arc::make_mut</code> might clone the entire hashmap just to clear it if there is more than one outstanding strong ref</p>",
        "id": 267868943,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642081002
    },
    {
        "content": "<p>you'd think its that</p>",
        "id": 267869001,
        "sender_full_name": "jhgg",
        "timestamp": 1642081029
    },
    {
        "content": "<p>but the cost i actually think is in dropping the diagnostic</p>",
        "id": 267869013,
        "sender_full_name": "jhgg",
        "timestamp": 1642081041
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  166ms - GlobalState::handle_event\n      165ms - GlobalState::handle_event/flycheck\n          165ms - DiagnosticCollection::clear_check @ 9 check_fixes, 9 check\n              164ms - extend changes\n                0   - clear check fixes (1 calls)\n        0   - GlobalState::process_changes (1 calls)\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>        {\n            let _p = profile::span(&quot;extend changes&quot;);\n            self.changes.extend(self.check.drain().map(|(key, _value)| key))\n        }\n</code></pre></div>",
        "id": 267869057,
        "sender_full_name": "jhgg",
        "timestamp": 1642081064
    },
    {
        "content": "<p>Well <code>lsp_types::Diagnostic</code> has a bunch of fields that may allocate, so I guess it's not too surprising there?...</p>",
        "id": 267869555,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642081319
    },
    {
        "content": "<p>I don't see how it can happen, but if I save once, I get 11 <code>textDocument/publishDiagnostics</code> notifications that get progressively larger</p>",
        "id": 267870143,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642081522
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/czgSqBWTw-dchuj2EszfndXm/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/czgSqBWTw-dchuj2EszfndXm/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/czgSqBWTw-dchuj2EszfndXm/image.png\"></a></div><p>Check out the yellow dots on the right</p>",
        "id": 267870201,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642081553
    },
    {
        "content": "<p>That doesn't seem right</p>",
        "id": 267870375,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1642081641
    },
    {
        "content": "<p>Well, we insert into <code>check</code> in <code>add_check_diagnostic</code>, return all of them in <code>diagnostics_for</code>, but we don't clear <code>check</code> in <code>take_changes</code>.</p>",
        "id": 267870978,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642081969
    }
]