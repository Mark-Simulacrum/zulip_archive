[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> I remeber we had a problem with token mapping for attribute macros, which get two pieces of input -- macro arg, and item. How did we solve it?</p>",
        "id": 253795509,
        "sender_full_name": "matklad",
        "timestamp": 1631906996
    },
    {
        "content": "<p>Context: I am looking at <a href=\"https://github.com/matklad/rust-analyzer/blob/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5/crates/parser/src/grammar/items.rs#L418-L426\">https://github.com/matklad/rust-analyzer/blob/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5/crates/parser/src/grammar/items.rs#L418-L426</a>, and it doesn't make sense</p>",
        "id": 253795604,
        "sender_full_name": "matklad",
        "timestamp": 1631907020
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>macro m($i:ident) {}\n\nMACRO_DEF@10107..10127\n  MACRO_KW@10107..10112 &quot;macro&quot;\n  WHITESPACE@10112..10113 &quot; &quot;\n  NAME@10113..10114\n    IDENT@10113..10114 &quot;m&quot;\n  TOKEN_TREE@10114..10127\n    TOKEN_TREE@10114..10124\n      L_PAREN@10114..10115 &quot;(&quot;\n      DOLLAR@10115..10116 &quot;$&quot;\n      IDENT@10116..10117 &quot;i&quot;\n      COLON@10117..10118 &quot;:&quot;\n      IDENT@10118..10123 &quot;ident&quot;\n      R_PAREN@10123..10124 &quot;)&quot;\n    WHITESPACE@10124..10125 &quot; &quot;\n    TOKEN_TREE@10125..10127\n      L_CURLY@10125..10126 &quot;{&quot;\n      R_CURLY@10126..10127 &quot;}&quot;\n</code></pre></div>",
        "id": 253795649,
        "sender_full_name": "matklad",
        "timestamp": 1631907042
    },
    {
        "content": "<p>That's not for attributes is it?</p>",
        "id": 253795729,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907054
    },
    {
        "content": "<p>The outer syntax tree is ... a questionable hack</p>",
        "id": 253795745,
        "sender_full_name": "matklad",
        "timestamp": 1631907058
    },
    {
        "content": "<p>Isn't that macro 2.0 parsing?</p>",
        "id": 253795756,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907060
    },
    {
        "content": "<p>Yeah, thats for macros 2.0</p>",
        "id": 253795788,
        "sender_full_name": "matklad",
        "timestamp": 1631907070
    },
    {
        "content": "<p>but the problem feels similar -- the definition is two separate token trees</p>",
        "id": 253795835,
        "sender_full_name": "matklad",
        "timestamp": 1631907090
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MacroDef</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">macro_token</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">SyntaxToken</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">support</span>::<span class=\"n\">token</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">syntax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"kr\">macro</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">args</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">TokenTree</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">support</span>::<span class=\"n\">child</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">syntax</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">body</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">TokenTree</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">support</span>::<span class=\"n\">child</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">syntax</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>that's what we have in <a href=\"http://generated.rs\">generated.rs</a> btw, and that's just broken (args == body)z</p>",
        "id": 253795941,
        "sender_full_name": "matklad",
        "timestamp": 1631907129
    },
    {
        "content": "<p>Do we even support <code>args</code> at all?</p>",
        "id": 253796232,
        "sender_full_name": "matklad",
        "timestamp": 1631907270
    },
    {
        "content": "<p>Well for attributes we store the tokenmap of the item in the <code>ExpansionInfo</code> whereas the token map for the attribute input is stored in the <code>MacroCallLoc</code>/<code>MacroCallKind</code></p>",
        "id": 253796236,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907271
    },
    {
        "content": "<p>I'm not sure tbh? I assume we would handle macros 2.0 the same way as MBE</p>",
        "id": 253796313,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907310
    },
    {
        "content": "<p>Ye seems like we handle that the same as with MBE</p>",
        "id": 253796489,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907390
    },
    {
        "content": "<p>so we differentiate between the origins</p>",
        "id": 253796541,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631907418
    },
    {
        "content": "<p>Actually no this is different. The two attribute inputs differ from the two inputs for mbe/macros 2.0 in that for attributes you have to two inputs at call site but for mbe/macros 2.0 you have one at call site, and one/two a macro def site no?</p>",
        "id": 253797842,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631908054
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10266\">https://github.com/rust-analyzer/rust-analyzer/issues/10266</a></p>",
        "id": 253798129,
        "sender_full_name": "matklad",
        "timestamp": 1631908205
    },
    {
        "content": "<p>Yeah, call site/def site is different</p>",
        "id": 253798179,
        "sender_full_name": "matklad",
        "timestamp": 1631908233
    }
]