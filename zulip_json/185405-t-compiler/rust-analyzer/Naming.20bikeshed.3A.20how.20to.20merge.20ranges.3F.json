[
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/text_unit/pull/1\" target=\"_blank\" title=\"https://github.com/rust-analyzer/text_unit/pull/1\">https://github.com/rust-analyzer/text_unit/pull/1</a></p>\n<p>What's the name of the operation that computes the least range containing two given ranges?</p>",
        "id": 189023492,
        "sender_full_name": "matklad",
        "timestamp": 1582640842
    },
    {
        "content": "<p>Options:</p>\n<ul>\n<li>union -- most obvious, but also obviously wrong, a union of ranges is not necessary a range</li>\n<li>convex hull -- pedantically correct, but overly generic </li>\n<li>covering_range -- somewhat unclear</li>\n<li>???</li>\n</ul>",
        "id": 189023719,
        "sender_full_name": "matklad",
        "timestamp": 1582640975
    },
    {
        "content": "<ul>\n<li>cover?</li>\n</ul>",
        "id": 189023811,
        "sender_full_name": "matklad",
        "timestamp": 1582641013
    },
    {
        "content": "<ul>\n<li>a.extend_to(b)</li>\n</ul>",
        "id": 189023843,
        "sender_full_name": "matklad",
        "timestamp": 1582641037
    },
    {
        "content": "<p><code>extend_to</code> doesn't seem too bad. Might be a little confusing as it implies some sense of \"direction\", but not sure that's a big deal</p>",
        "id": 189024179,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1582641270
    },
    {
        "content": "<ul>\n<li>merge</li>\n</ul>",
        "id": 189025129,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1582641912
    },
    {
        "content": "<p>If others understand this zulip topic, it should be named to <code>merge</code> tautologically :)</p>",
        "id": 189025282,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1582642026
    },
    {
        "content": "<ul>\n<li>bounding_box</li>\n</ul>",
        "id": 189025287,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582642029
    },
    {
        "content": "<ul>\n<li>bounding_range</li>\n</ul>",
        "id": 189025296,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582642038
    },
    {
        "content": "<p><code>extend_to</code> and <code>bounding_range</code> are both good to me.</p>",
        "id": 189025378,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1582642103
    },
    {
        "content": "<p>Let's pick extend_to: it looks better as a method, though, for a free function, bounding_range would be a better choice</p>",
        "id": 189025460,
        "sender_full_name": "matklad",
        "timestamp": 1582642180
    },
    {
        "content": "<p>If you want to be explicit I think <code>extend_to_cover</code> would save me from using a hover.  An alternative would be a constructor that takes two ranges</p>",
        "id": 189025764,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1582642411
    }
]