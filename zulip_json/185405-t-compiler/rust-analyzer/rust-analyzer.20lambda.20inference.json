[
    {
        "content": "<p>I really like rust-analyzer, it is fast and displays very helpful inline information. One area where it fails me (on nightly) is when using named functions in lambda positions, or when using a pattern in the argument list of a lambda — in those cases, the result type is <code>{unknown}</code>. Is there a ticket for this already or am I doing something unusual? (casual search didn’t reveal one, but there are so many tickets … )</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">stream</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">my_function</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">// this trips it up</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">// this also</span>\n</code></pre></div>",
        "id": 197783564,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589616701
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4281\">https://github.com/rust-analyzer/rust-analyzer/issues/4281</a></p>",
        "id": 197783743,
        "sender_full_name": "matklad",
        "timestamp": 1589617036
    },
    {
        "content": "<p>probably this</p>",
        "id": 197783744,
        "sender_full_name": "matklad",
        "timestamp": 1589617040
    },
    {
        "content": "<p>Ah, right, that definitely looks like what I observed in the first case. Does it also cover the second or shall I open another issue?</p>",
        "id": 197783875,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589617222
    },
    {
        "content": "<p>I think the second is tripped up because of the first one?</p>",
        "id": 197784005,
        "sender_full_name": "matklad",
        "timestamp": 1589617446
    },
    {
        "content": "<p>oh, actually, let me check for patterns</p>",
        "id": 197784015,
        "sender_full_name": "matklad",
        "timestamp": 1589617464
    },
    {
        "content": "<p>ah, no, it happens independently, I only wrote that up as a strawman</p>",
        "id": 197784036,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589617518
    },
    {
        "content": "<p>right, patterns do trip type inference up as well, I don't think we have an issue for that, if you  create one with a minimal reproducible example (ideally, without using <code>std</code>), that would be helpful!</p>",
        "id": 197784041,
        "sender_full_name": "matklad",
        "timestamp": 1589617540
    },
    {
        "content": "<p>(there's also a chance that the issue already exist, but I don't recall one)</p>",
        "id": 197784042,
        "sender_full_name": "matklad",
        "timestamp": 1589617554
    },
    {
        "content": "<p>okay, will try to minimize (of course this happens in our 30'000 LOC source, as always ;-) )</p>",
        "id": 197784087,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589617582
    },
    {
        "content": "<p>Another useful \"small\" yak-shave is implementing test-case minimizer :D</p>",
        "id": 197784171,
        "sender_full_name": "matklad",
        "timestamp": 1589617768
    },
    {
        "content": "<p>I got it, submitting issue …</p>",
        "id": 197784384,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589618114
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4476\">https://github.com/rust-analyzer/rust-analyzer/issues/4476</a></p>",
        "id": 197784600,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589618402
    },
    {
        "content": "<p>so it only happens when the closure takes arguments by reference</p>",
        "id": 197784634,
        "sender_full_name": "Roland Kuhn",
        "timestamp": 1589618441
    }
]