[
    {
        "content": "<p>I'm experimenting with trait autocompletions on something more or less real and stumbled on lots of assertion failures with itertools:</p>\n<div class=\"codehilite\"><pre><span></span><code>[ERROR rust_analyzer] assertion failed at crates/completion/src/item.rs:404:13: multiline detail: fn circular_tuple_windows&lt;T&gt;(self) -&gt; CircularTupleWindows&lt;Self, T&gt;\nwhere Self: Sized + Clone + Iterator&lt;Item = T::Item&gt; + ExactSizeIterator,\n              T: tuple_impl::TupleCollect + Clone,\n              T::Item: Clone\n</code></pre></div>\n<p>The assertion is <code>assert_never!(detail.contains('\\n'), \"multiline detail: {}\", detail);</code> (<a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/completion/src/item.rs#L401\">here</a>, disregard the line number in the assertion message, it's different due to my changes) and <code>circular_tuple_windows</code> is the <a href=\"https://github.com/rust-itertools/itertools/blob/573743a097c1701ef3bf8f82a8554a71bfbf0943/src/tuple_impl.rs#L206-L210\">itertools function</a></p>\n<p>So, should we normalize such details or rather remove the assertion?</p>",
        "id": 222937374,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610751171
    },
    {
        "content": "<p>The detail is the thing shown in completion popup next to the item</p>",
        "id": 222981612,
        "sender_full_name": "matklad",
        "timestamp": 1610804263
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/RgvLe4-hzZL5Xw2-a2CTX2Zs/Screenshot_20210116_163807.png\">Screenshot_20210116_163807.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/RgvLe4-hzZL5Xw2-a2CTX2Zs/Screenshot_20210116_163807.png\" title=\"Screenshot_20210116_163807.png\"><img src=\"/user_uploads/4715/RgvLe4-hzZL5Xw2-a2CTX2Zs/Screenshot_20210116_163807.png\"></a></div>",
        "id": 222981671,
        "sender_full_name": "matklad",
        "timestamp": 1610804351
    },
    {
        "content": "<p>The editor shows a silgle line there, so its important that we put something reasonable there</p>",
        "id": 222981732,
        "sender_full_name": "matklad",
        "timestamp": 1610804408
    },
    {
        "content": "<p>Looking at the intellij, it makes sense to just put a return type there?</p>\n<p><a href=\"/user_uploads/4715/ESSgWTnxB0YrABxel8dciK3i/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ESSgWTnxB0YrABxel8dciK3i/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/ESSgWTnxB0YrABxel8dciK3i/image.png\"></a></div>",
        "id": 222981942,
        "sender_full_name": "matklad",
        "timestamp": 1610804755
    },
    {
        "content": "<p>In this case, looks like we can discard anything that's after the first <code>\\n</code>? Not like we want to display <code>where</code> block there anyway.</p>",
        "id": 222987355,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610810651
    },
    {
        "content": "<p>That'd would work as a quick patch, but I'd rather just manually assemble the string to not have <code>\\n</code> in the first place</p>",
        "id": 223030770,
        "sender_full_name": "matklad",
        "timestamp": 1610870548
    },
    {
        "content": "<p>Sure, I'll look at it at some point after the trait imports are merged, thank you for guiding.</p>",
        "id": 223032691,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610873889
    },
    {
        "content": "<p>Do we want to do this for tonight's release?</p>",
        "id": 223046400,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610895284
    },
    {
        "content": "<p>those are just logs <code>assert_always</code>, so this should be fine</p>",
        "id": 223046785,
        "sender_full_name": "matklad",
        "timestamp": 1610895751
    },
    {
        "content": "<p>Yeah, but it's pretty spammy</p>",
        "id": 223046795,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610895771
    },
    {
        "content": "<p>yeah, we might as well us assert fully...</p>",
        "id": 223047054,
        "sender_full_name": "matklad",
        "timestamp": 1610896186
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7396\">https://github.com/rust-analyzer/rust-analyzer/pull/7396</a></p>",
        "id": 223661258,
        "sender_full_name": "matklad",
        "timestamp": 1611331617
    }
]