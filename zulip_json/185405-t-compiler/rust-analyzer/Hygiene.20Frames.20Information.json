[
    {
        "content": "<p>In PR <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7133\">7133</a>, I introduced <code>HygineneFrames</code> to store the hygiene information for given HirFileId, but turn out it slowing down a lot. This information is needed because hygiene information is per <em>span</em>, the previous implementation only store the single macro information , which is wrong.</p>",
        "id": 221434456,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1609650761
    },
    {
        "content": "<p>Some background information:</p>\n<p>For examples, how '$crate' expanded depends on which 'root' crate is located :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">//! in crate foo</span>\n<span class=\"n\">macro_rules</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"cp\">$crate</span>::<span class=\"n\">local</span><span class=\"o\">!</span><span class=\"p\">()]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The expansion order in here is : <code>foo::m!</code> =&gt; <code>std::vec!</code> =&gt; <code>$crate::local</code>. <br>\nNote that <code>$crate</code> should be expanded respect to <code>foo</code> , but not <code>std</code>. But in previous implementation, we only stored <code>std</code> hygiene frame information but not <code>foo</code> one. To fix this problem. We have to have some mechanisms to get the whole expansion chain information on the fly.</p>",
        "id": 221434778,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1609651363
    },
    {
        "content": "<p>Another road-block is <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/895d97cfa016ca46c648d250eccb8befa7863502/crates/hir_def/src/path/lower.rs#L25\">how lowering path works</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// Converts an `ast::Path` to `Path`. Works with use trees.</span>\n<span class=\"sd\">/// It correctly handles `$crate` based path from macro call.</span>\n<span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">super</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">lower_path</span><span class=\"p\">(</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"nc\">ast</span>::<span class=\"n\">Path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hygiene</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Hygiene</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Path</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Note that we don't have <code>AstDatabase</code> here so all salsa magic don't work inside <code>lower_path</code>.</p>",
        "id": 221434926,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1609651600
    },
    {
        "content": "<p>(going to revert the slow PR for now, to make sure it doesn't end up in the release tomorrow)</p>",
        "id": 221445224,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609670866
    },
    {
        "content": "<p>I submitted another draft <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7145\">#7145</a> to due with some problems.</p>",
        "id": 221485480,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1609729977
    }
]