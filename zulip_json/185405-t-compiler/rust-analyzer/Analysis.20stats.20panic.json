[
    {
        "content": "<p>Is it expected that <code>cargo run -p rust-analyzer --release -- analysis-stats . --with-deps --parallel</code> panics at <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/3191a93185b34c6deebca2aad0584d2840ad6d43/crates/hir_ty/src/traits/chalk/mapping.rs#L192\">https://github.com/rust-analyzer/rust-analyzer/blob/3191a93185b34c6deebca2aad0584d2840ad6d43/crates/hir_ty/src/traits/chalk/mapping.rs#L192</a> once whilst still pinnning the CPU?</p>",
        "id": 233551372,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1617825430
    },
    {
        "content": "<p>It's not supposed to hit that panic</p>",
        "id": 233551945,
        "sender_full_name": "detrumi",
        "timestamp": 1617825649
    },
    {
        "content": "<p>Ah. Well it apparently can :)</p>",
        "id": 233552063,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1617825701
    },
    {
        "content": "<p>Looks like that code was recently added when adding <code>GenericArg</code></p>",
        "id": 233552213,
        "sender_full_name": "detrumi",
        "timestamp": 1617825754
    },
    {
        "content": "<p>But yeah, Chalk sometimes returns lifetimes, and rust-analyzer should have some way to handle that instead of panicking</p>",
        "id": 233552400,
        "sender_full_name": "detrumi",
        "timestamp": 1617825836
    },
    {
        "content": "<p>I think Jonas mentioned that already in another topic</p>",
        "id": 233560577,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617829279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> I am actually confused where Chalk would return a lifetime in a substitution without us telling it that it's expected</p>",
        "id": 233560932,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617829343
    },
    {
        "content": "<p>the mapping code will go away very soon anyway though</p>",
        "id": 233561101,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617829377
    },
    {
        "content": "<p>o_O it seems like we're actually requesting a goal with a lifetime variable... where does that come from</p>",
        "id": 233566057,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617830677
    },
    {
        "content": "<p>probably from another solution we got from Chalk...</p>",
        "id": 233566474,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617830910
    },
    {
        "content": "<p>oh yeah, probably autoderef</p>",
        "id": 233566521,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617830939
    },
    {
        "content": "<p>i was in a bisecting mood -- this panic seems to have been introduced in <a href=\"https://github.com/rust-lang/rust/commit/590c41635952e19c3caae525a827499dbd360049\">590c41635952e19c3caae525a827499dbd360049</a> <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/8136\">https://github.com/rust-analyzer/rust-analyzer/pull/8136</a></p>",
        "id": 233569896,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1617832794
    },
    {
        "content": "<p>Interesting, I was assuming it started when the <code>unimplemented!</code> line was added, but according to your bisect it was in before that?</p>",
        "id": 233617090,
        "sender_full_name": "detrumi",
        "timestamp": 1617869393
    },
    {
        "content": "<p>That PR changed <code>Dyn</code> types, so maybe that's the source of the lifetime?</p>",
        "id": 233617199,
        "sender_full_name": "detrumi",
        "timestamp": 1617869449
    },
    {
        "content": "<p>are you sure that's not another crash? I think I fixed one introduced by that PR</p>",
        "id": 233632241,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617878268
    },
    {
        "content": "<p>I'm pretty sure I know what's going on with this one, but I think it will probably be fixed or need a different fix with the Chalk move, so I'm leaving it</p>",
        "id": 233632367,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617878335
    },
    {
        "content": "<p>yeah, it's 100% possible that my bisect found an unrelated crash</p>",
        "id": 233644125,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1617885195
    },
    {
        "content": "<p>it crashes differently with the Chalk move now <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 233645199,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617885709
    },
    {
        "content": "<p>progress, perhaps :)</p>",
        "id": 233647704,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1617886851
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8440\">rust-analyzer/rust-analyzer#8440</a> fixes it</p>",
        "id": 233790639,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1617959935
    }
]