[
    {
        "content": "<p>At some point in the past, I saw r-a had an assist for delegation, so I wanted to try it out. I ended up writing the _same_ test as the comment in <code>generate_delegate_methods.rs</code>. My code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Age</span><span class=\"p\">(</span><span class=\"kt\">u8</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Age</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">can_drive</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">Person</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">age</span>: <span class=\"nc\">Age</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Person</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 266993730,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418253
    },
    {
        "content": "<p>although I'm not getting the suggestion in my action list <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span></p>",
        "id": 266993906,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418358
    },
    {
        "content": "<p>Huh, that's odd <a href=\"/user_uploads/4715/cfJ8MWt_OHGFv03yV9CExkQD/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/cfJ8MWt_OHGFv03yV9CExkQD/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/cfJ8MWt_OHGFv03yV9CExkQD/image.png\"></a></div>",
        "id": 266993958,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641418403
    },
    {
        "content": "<p>I'm only getting</p>\n<div class=\"codehilite\"><pre><span></span><code>(1/4) Select code action:\nGenerate impl for `Person`\nAdd `#[derive]`\nChange visibility to pub(crate)\nGenerate `Deref` impl using `age`\n</code></pre></div>",
        "id": 266994152,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418524
    },
    {
        "content": "<p><del>Is your cursor on the field name? </del>And what client are you using(though that shouldn't matter)?</p>",
        "id": 266994153,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641418525
    },
    {
        "content": "<p>yeah, on the name (that's why I opened the source file, to figure out if I was mis-targeting)</p>",
        "id": 266994224,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418556
    },
    {
        "content": "<p>Using the emacs lsp-mode</p>",
        "id": 266994287,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418567
    },
    {
        "content": "<p>Let me recompile / install / restart LSP</p>",
        "id": 266994342,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418602
    },
    {
        "content": "<p>it probably doesn't support our lsp extension for grouped actions I imagine, but I <strong>think</strong> it should still show the assists in an ungrouped form then <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 266994391,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641418626
    },
    {
        "content": "<p>to confirm that does <code>auto_import</code> work? That is the assist that imports unresolved identifiers when invoked</p>",
        "id": 266994463,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641418678
    },
    {
        "content": "<p>the delegate assist works in emacs, I've seen it</p>",
        "id": 266994748,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1641418830
    },
    {
        "content": "<blockquote>\n<p>does <code>auto_import</code> work</p>\n</blockquote>\n<p>It did... before you asked that question...</p>",
        "id": 266994776,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418847
    },
    {
        "content": "<p>What have I done</p>",
        "id": 266994780,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418851
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>(9/9) Select code action:\nGenerate impl for `Person`\nGenerate `new`\nAdd `#[derive]`\nGenerate a getter method\nGenerate a setter method\nGenerate a mut getter method\nChange visibility to pub(crate)\nGenerate `Deref` impl using `age`\nGenerate delegate for `age.can_drive()`\n</code></pre></div>",
        "id": 266994876,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418907
    },
    {
        "content": "<p>Ok, I don't quite know how, but sometimes emacs / lsp-mode / macOS has an issue when I put things in <code>/tmp</code></p>",
        "id": 266994962,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418941
    },
    {
        "content": "<p>I think that's what was happening here</p>",
        "id": 266994972,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418947
    },
    {
        "content": "<p>Cause it kept prompting me to import the project over and over again.</p>",
        "id": 266994996,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641418966
    },
    {
        "content": "<p>Now I'm excited to try and use that in real places.</p>",
        "id": 266995158,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641419046
    },
    {
        "content": "<p>Odd that that caused only some assists to not work though <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 266995259,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641419084
    },
    {
        "content": "<p><strong>Obviously</strong> r-a also needs a \"highlight these fields, extract to a new type, and leave delegation methods behind\" <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 266995321,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641419097
    },
    {
        "content": "<p>And I moved it back to /tmp and I see the delegation option again...</p>",
        "id": 266995707,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641419175
    },
    {
        "content": "<p>New feature request issues are always welcome(as well as their implementations) :^)</p>",
        "id": 266995849,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641419209
    }
]