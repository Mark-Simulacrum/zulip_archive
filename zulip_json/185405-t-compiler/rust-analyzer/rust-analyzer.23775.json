[
    {
        "content": "<p>What is the status of <a href=\"https://github.com/rust-lang/rust/issues/775\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/775\">#775</a>? Should EOL be converted or preserved?</p>",
        "id": 161237309,
        "sender_full_name": "Caio",
        "timestamp": 1553081729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211466\">@Caio</span> it needs design and implementation. I am not actually sure that the proposed solution is a good one, but it seems nice</p>",
        "id": 161239320,
        "sender_full_name": "matklad",
        "timestamp": 1553083380
    },
    {
        "content": "<p>Basically, we make it an invariant that any strings inside <code>rust-analyzer</code> use <code>\\n</code> as a line separator, and that any transcoding happens at the boundary</p>",
        "id": 161239364,
        "sender_full_name": "matklad",
        "timestamp": 1553083413
    },
    {
        "content": "<p>sort-of how python's text mode works</p>",
        "id": 161239376,
        "sender_full_name": "matklad",
        "timestamp": 1553083422
    },
    {
        "content": "<p>I guess the next step is to write some experimental impl which tries to convert line-endings at the lsp boundary</p>",
        "id": 161239476,
        "sender_full_name": "matklad",
        "timestamp": 1553083494
    },
    {
        "content": "<p>Changes in one direciton (text going from editor into analyzer) should be handled here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/69ee5c9c5ef212f7911028c9ddf581559e6565c3/crates/ra_lsp_server/src/server_world.rs#L103\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/69ee5c9c5ef212f7911028c9ddf581559e6565c3/crates/ra_lsp_server/src/server_world.rs#L103\">https://github.com/rust-analyzer/rust-analyzer/blob/69ee5c9c5ef212f7911028c9ddf581559e6565c3/crates/ra_lsp_server/src/server_world.rs#L103</a></p>",
        "id": 161239611,
        "sender_full_name": "matklad",
        "timestamp": 1553083568
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Thanks! I guess it is going to take a while since I am still learning how rust-analyzer works</p>",
        "id": 161303270,
        "sender_full_name": "Caio",
        "timestamp": 1553126560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I suppose you're already aware, but there's a grammar WG which already has a parser and grammar for Rust that may be interesting to consider for r-a. <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> are part of the group</p>",
        "id": 161428923,
        "sender_full_name": "pachi",
        "timestamp": 1553243024
    },
    {
        "content": "<p>I am aware of that, yeah. The plan is to fuzz ra parser against the grammar, once that is ready. </p>\n<p>We probably won't be able to reuse grammar/parser as is: we must deal with incomplete code well, and we need to be able to produce concrete syntax trees. We definitely should align the names of various types though!</p>",
        "id": 161429237,
        "sender_full_name": "matklad",
        "timestamp": 1553243334
    },
    {
        "content": "<p>Fantastic, I just wanted to make sure that you were aware of each other's work :)</p>",
        "id": 161429703,
        "sender_full_name": "pachi",
        "timestamp": 1553243871
    }
]