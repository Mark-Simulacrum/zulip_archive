[
    {
        "content": "<p>is there a meta issue for keep track of unknown types</p>",
        "id": 246482164,
        "sender_full_name": "Manmeet Singh",
        "timestamp": 1626714121
    },
    {
        "content": "<p>not quite, but we do have one for type mismatches <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961\">https://github.com/rust-analyzer/rust-analyzer/issues/8961</a></p>",
        "id": 246482413,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626714236
    },
    {
        "content": "<p>I guess I will open a separate issue then</p>",
        "id": 246482765,
        "sender_full_name": "Manmeet Singh",
        "timestamp": 1626714386
    },
    {
        "content": "<p>it is a simple one</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Into</span><span class=\"o\">&lt;</span><span class=\"kt\">f64</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246482832,
        "sender_full_name": "Manmeet Singh",
        "timestamp": 1626714426
    },
    {
        "content": "<p>That might be the same as <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/5514\">https://github.com/rust-analyzer/rust-analyzer/issues/5514</a>?</p>",
        "id": 246483041,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626714515
    },
    {
        "content": "<p>it is</p>",
        "id": 246483108,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626714550
    },
    {
        "content": "<p>yes <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 246483130,
        "sender_full_name": "Manmeet Singh",
        "timestamp": 1626714565
    }
]