[
    {
        "content": "<p>Just trying to use rust-analyzer in vim, specifically for the auto-importing functionality. It seems like according to the assists documentation, if I have an unresolved name, then I should be able to get a prompt from rust-analyzer to add an import. So I type something like <code>let x = Transform::new()</code>, then bring up the language server actions, but I only see \"Extract into variable\" and \"Implement default members\", when I would hope to get a suggestion to import from <code>amethyst::core::Transform</code>. Any help would be much appreciated! Also hopefully creating a topic is the way to go for this, first time zulip-er</p>",
        "id": 198276900,
        "sender_full_name": "Marcus Buffett",
        "timestamp": 1590024062
    },
    {
        "content": "<p>Can you try in an empty project, just to make sure it's not related to Amethyst? Importing something like <code>HashMap</code> should work fine.</p>",
        "id": 198286298,
        "sender_full_name": "Laurențiu",
        "timestamp": 1590036406
    },
    {
        "content": "<p>I was unable to get this to work (none of the import-related functionality works for me) in vim and coc.nvim. I haven't had the time to investigate...</p>",
        "id": 198318290,
        "sender_full_name": "simulacrum",
        "timestamp": 1590066599
    },
    {
        "content": "<p>I only tested it in LanguageClient-neovim</p>",
        "id": 198318496,
        "sender_full_name": "Laurențiu",
        "timestamp": 1590066718
    },
    {
        "content": "<p>Autoimport works when using coc.nvim and coc-rust-analyzer, but the default behaviour of <code>coc-codeaction</code> was changed recently to apply to the whole buffer, and rust-analyzer only offers assists if the selection is specific enough.<br>\nSee <a href=\"https://github.com/fannheyward/coc-rust-analyzer/pull/252#issuecomment-632427338\">https://github.com/fannheyward/coc-rust-analyzer/pull/252#issuecomment-632427338</a> and <a href=\"https://github.com/neoclide/coc.nvim/issues/1981\">https://github.com/neoclide/coc.nvim/issues/1981</a><br>\nIf you have a binding to <code>&lt;Plug&gt;(coc-codeaction)</code>, you probably want to change it to call <code>v&lt;Plug&gt;(coc-codeaction-selected)</code> for now</p>",
        "id": 198526314,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1590224659
    },
    {
        "content": "<p>will try that, thanks!</p>",
        "id": 198531832,
        "sender_full_name": "simulacrum",
        "timestamp": 1590234775
    }
]