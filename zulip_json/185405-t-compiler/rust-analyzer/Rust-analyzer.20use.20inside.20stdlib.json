[
    {
        "content": "<p>I have been lead to believe that using rust-analyzer inside the stdlib should now work fine.</p>\n<p>My experience has been that, after configuring it as described in the dev guide, it basically half works. By this I mean, it generally only works inside the same crate. For example, libstd is unable to see things from libcore (oddly, it can see/understand <code>core</code> by nothing from <code>core::</code>), but does see things from inside itself. E.g. I can jump to definition and see methods on <code>Mutex</code>, but anything that originated from libcore, like <code>assert!</code>, <code>AtomicUsize</code>, ... come up unresolved. (However, from inside the libcore source, everything is there).</p>\n<p>I've futzed with <code>rust-analyzer.cargo.unsetTest</code> (I've tried: <code>[]</code>, <code>[\"core\"]</code>, <code>[\"std\"]</code>, and <code>[\"core\", \"std\"]</code>). It feels related to this, since nothing from <code>core</code> is available in <code>std</code>.</p>\n<p>Is this <em>supposed</em> to work? I've just been ignoring it, but it kinda feels like Its my config (which is below)</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>my config</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.checkOnSave.overrideCommand\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"python3\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"x.py\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"check\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"--json-output\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.rustfmt.overrideCommand\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"./build/aarch64-apple-darwin/stage0/bin/rustfmt\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"--edition=2021\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.rustcSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"./Cargo.toml\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.cargo.runBuildScripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.procMacro.enable\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.cargo.unsetTest\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s2\">\"core\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"s2\">\"std\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n</div></div>",
        "id": 278445089,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649560524
    },
    {
        "content": "<p>Okay, the plot thickens: the issue goes away if I remove the <code>#![cfg(not(test))]</code> from <code>:/library/core/src/lib.rs</code>. So it must be related to that. I guess the <code>\"rust-analyzer.cargo.unsetTest\": [\"core\"]</code> is working when inside libcore, but isn't working when inside libstd? hmmm</p>",
        "id": 278446387,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649562972
    },
    {
        "content": "<p>I commented on <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11483#issuecomment-1094172887\">https://github.com/rust-analyzer/rust-analyzer/issues/11483#issuecomment-1094172887</a></p>",
        "id": 278447290,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649564483
    },
    {
        "content": "<p>I remember having the same problem, but now trying it again myself it seems to work oddly enough</p>",
        "id": 278460766,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649586915
    },
    {
        "content": "<p>And my config does not differ from yours</p>",
        "id": 278460850,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649587021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> Huh. What version of rust-analyzer/local rustc do you have</p>",
        "id": 278482024,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614432
    },
    {
        "content": "<p>latest nightly r-a and</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">nightly</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">pc</span><span class=\"o\">-</span><span class=\"n\">windows</span><span class=\"o\">-</span><span class=\"n\">msvc</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"mf\">1.61.0</span><span class=\"o\">-</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">76</span><span class=\"n\">d770ac2</span><span class=\"w\"> </span><span class=\"mi\">2022</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 278482075,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649614460
    },
    {
        "content": "<p>huh</p>",
        "id": 278482079,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614470
    },
    {
        "content": "<p>But ye it used to not work for me either, so I am more confused as to why it works now <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 278482098,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649614490
    },
    {
        "content": "<p>hmmm. i should be the same</p>",
        "id": 278482099,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614491
    },
    {
        "content": "<p>anything in your user settings?</p>",
        "id": 278482113,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614512
    },
    {
        "content": "<p>Sorry -- if this is just my own settings being wrong somehow, that would hugely improve my experience in rust-lang/rust</p>",
        "id": 278482180,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614582
    },
    {
        "content": "<p>No, aside from the settings earlier all the other ones I have set are irrelevant to this :/</p>",
        "id": 278482257,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649614685
    },
    {
        "content": "<p>I can look into places where we could add some logging to be able to debug this later</p>",
        "id": 278482277,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649614717
    },
    {
        "content": "<p>hmmm, is there any chance its because i'm using it as a <code>.code-workspace</code>? and yeah i mean, anything you feel like doing would be appreciated</p>",
        "id": 278482374,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614856
    },
    {
        "content": "<p>just to check</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"folders\"</span>: <span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"path\"</span>: <span class=\"s\">\".\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"settings\"</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"git.ignoreLimitWarning\"</span>: <span class=\"nc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"files.associations\"</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"*.jsm\"</span>: <span class=\"s\">\"javascript\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"*.def\"</span>: <span class=\"s\">\"cpp\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.checkOnSave.overrideCommand\"</span>: <span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"python3\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"x.py\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"check\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"--json-output\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.rustfmt.overrideCommand\"</span>: <span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"./build/aarch64-apple-darwin/stage0/bin/rustfmt\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"--edition=2021\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.rustcSource\"</span>: <span class=\"s\">\"./Cargo.toml\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.cargo.runBuildScripts\"</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.procMacro.enable\"</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.cargo.allFeatures\"</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"rust-analyzer.cargo.unsetTest\"</span>: <span class=\"p\">[</span><span class=\"s\">\"core\"</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>this looks essentially the same?</p>",
        "id": 278482395,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614893
    },
    {
        "content": "<p>thats the full unadulterated version (although some of it I added since the initial message, just to try something)</p>",
        "id": 278482401,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649614917
    },
    {
        "content": "<p>I'll try on windows later too</p>",
        "id": 278482541,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649615050
    },
    {
        "content": "<p>What is a <code>.code-workspace</code>? And ye that looks fine to me</p>",
        "id": 278482546,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649615055
    },
    {
        "content": "<p>ah vscode workspace file</p>",
        "id": 278482555,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649615068
    },
    {
        "content": "<p>are you not using vscode? that might have to do with it</p>",
        "id": 278482559,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649615076
    },
    {
        "content": "<p>I am using vscode, but I am not using workspaces</p>",
        "id": 278482588,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649615149
    },
    {
        "content": "<p>I just open the folders of the projects and thats it, so in this case I open the rust repo as a whole</p>",
        "id": 278482635,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649615168
    },
    {
        "content": "<p>One thing you can check is the <code>Rust Analyzer Client</code> output though, and check if the config printed there matches up with the things you've set.</p>",
        "id": 278483492,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649616462
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">\"rust-analyzer.server.extraEnv\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"RA_LOG\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"project_model=info,rust_analyzer=info\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Also set this, and then load up the rust workspace and copy the <code>Rust Analyzer Language Server</code> log, we already log something of interest there</p>",
        "id": 278483826,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649616962
    },
    {
        "content": "<p>I think the fact that you're opening just subfolders may actually be an important piece of info. But where does the config live in this case? Will r-a find the config that is in <code>~/src/rust/.vscode/settings.json</code> if I've opened <code>~/src/rust/library/std</code>? or do I need to have a bunch of copies</p>",
        "id": 278604215,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705075
    },
    {
        "content": "<p>No I am not opening subfolders, I am opening the repo folder directly.</p>",
        "id": 278604486,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649705224
    },
    {
        "content": "<p>I thought you did something special with VSCode when you said workspaces</p>",
        "id": 278604521,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649705245
    },
    {
        "content": "<p>oh</p>",
        "id": 278605386,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705660
    },
    {
        "content": "<p>i just have my settings in ~/src/rust/rust.code-workspace</p>",
        "id": 278605410,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705674
    },
    {
        "content": "<p>i'll see if ~/src/rust/.vscode/settings.json makes a difference. I dont think it will (i think i've already tried this)</p>",
        "id": 278605450,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705692
    },
    {
        "content": "<p>yeah it happens workspace or no. workspaces are just a different place to store the settings mostly. i only use it because vscode made it for me for the most part.</p>",
        "id": 278605695,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705820
    },
    {
        "content": "<p>log seems to show unsetTest: [\"core\"] as expected. this is in a new checkout too</p>",
        "id": 278605994,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1649705980
    },
    {
        "content": "<p>Let me do a new checkout as well for good measure</p>",
        "id": 278607866,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649706975
    },
    {
        "content": "<p>There we go now it's broken for me too! <a href=\"/user_uploads/4715/U91ErqaTGvDblkQE_xXDgvMC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/U91ErqaTGvDblkQE_xXDgvMC/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/U91ErqaTGvDblkQE_xXDgvMC/image.png\"></a></div>",
        "id": 278610137,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649708099
    },
    {
        "content": "<p>Why can't rustc just be a regular cargo workspace <span aria-label=\"weary\" class=\"emoji emoji-1f629\" role=\"img\" title=\"weary\">:weary:</span></p>",
        "id": 278610283,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649708158
    },
    {
        "content": "<p>(is that a rhetorical question? because I will talk about it at length :P)</p>",
        "id": 278610396,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649708184
    },
    {
        "content": "<p>I know it's not that simple, but one can wish right?</p>",
        "id": 278610447,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649708203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> it can! We need to just glue some backend to rust-analyzer and than outcompete rustc as the primary impl</p>",
        "id": 278611688,
        "sender_full_name": "matklad",
        "timestamp": 1649708666
    },
    {
        "content": "<p>Now I really wonder why it worked for me before <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 278612299,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649708958
    },
    {
        "content": "<p>Though this makes me wonder, does no one working on the compiler use r-a or does it just magically work for most people? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 278613115,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649709361
    },
    {
        "content": "<p>As the rustc dev guide instructions clearly don't seem to (always) work.<br>\nThough I guess this is specific to hacking on the std lib</p>",
        "id": 278613179,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649709379
    },
    {
        "content": "<p>rustc's crate graph is a real beauty (not sure what I expected) <a href=\"/user_uploads/4715/loF-SFf8Gy-yQmDYmt-C8ipw/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/loF-SFf8Gy-yQmDYmt-C8ipw/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/loF-SFf8Gy-yQmDYmt-C8ipw/image.png\"></a></div>",
        "id": 278615076,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649710380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> it works great for me on bootstrap and I don't work on much else these days. I remember rustdoc being a lot less broken than those screenshots though.</p>",
        "id": 278616156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649710872
    },
    {
        "content": "<p>and yeah I think people are more willing to tolerate brokenness for libstd because it's simple enough you can figure it out without go-to def</p>",
        "id": 278616273,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649710925
    },
    {
        "content": "<p>Ye figured</p>",
        "id": 278616354,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649710968
    },
    {
        "content": "<p>funnily enough it works properly for the <code>alloc</code> crate, and to my knowledge <code>std</code> and <code>alloc</code> shouldn't differ here <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 278616397,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649710985
    },
    {
        "content": "<p>So we apparently load the core crate 3 times, 2 of which use the same file id, and one using another. Important part is that one of these of course keeps the test flag enabled for whatever reason and I assume that is the one <code>std</code> depends on. Now why does it depend on a different one than <code>alloc</code> does I have no idea! But I'll push that exciting question to tomorrow.</p>",
        "id": 278618224,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649711923
    },
    {
        "content": "<p>/me is getting flashbacks to <a href=\"https://github.com/rust-lang/rust/pull/75176\">https://github.com/rust-lang/rust/pull/75176</a></p>",
        "id": 278618927,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649712167
    },
    {
        "content": "<p>Okay I lied this bothered me too much so I continued but I figured it out, or at least enough to fix the main problem. <a href=\"/user_uploads/4715/FIRmQeWnDSlAsqBjz5okRwmN/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/FIRmQeWnDSlAsqBjz5okRwmN/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/FIRmQeWnDSlAsqBjz5okRwmN/image.png\"></a></div>",
        "id": 278623534,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649714847
    },
    {
        "content": "<p>On another fun note, apparently <code>alloc</code> was somehow resolving things through the sysroot, as disabling it caused the same issue for it to appear, while using goto def on core things there didnt jump into the sysroot but the actual source <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nWith that said, I think this might be an ordering issue since setting <code>rust-analyzer.rustcSource</code> will add all the rustc source dependencies again so I think that might cause us to add dependencies twice but from different sources</p>",
        "id": 278624046,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649715186
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/11964\">https://github.com/rust-analyzer/rust-analyzer/pull/11964</a></p>",
        "id": 278624881,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649715712
    },
    {
        "content": "<p>Well lovely, that PR didn't fix it actually. Even though it worked once yesterday <em>sigh</em></p>",
        "id": 278721070,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1649782608
    }
]