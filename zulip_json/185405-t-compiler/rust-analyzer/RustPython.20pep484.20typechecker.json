[
    {
        "content": "<p>Hi. I want to implement pep484 type checker for Python in Rust, based on <a href=\"https://github.com/RustPython/RustPython\" target=\"_blank\" title=\"https://github.com/RustPython/RustPython\">https://github.com/RustPython/RustPython</a> AST, as an experiment / learning experience. Is there anything I could reuse from rust-analyser for the implementation? </p>\n<p>For example, salsa for incremental recomputation of AST (not part of rust-analyser, but I got idea for it from your issue tracker).</p>",
        "id": 165817184,
        "sender_full_name": "Maxim Kurnikov",
        "timestamp": 1558018249
    },
    {
        "content": "<p>I don't think you'll be able to reuse a lot of stuff.</p>\n<p>You can use salsa for incrementality, but you probably don't need to be incremental.</p>\n<p>There's ena crate which can be used to implement unification algorithm.</p>",
        "id": 165817596,
        "sender_full_name": "matklad",
        "timestamp": 1558018536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222044\">@Maxim Kurnikov</span>:</p>\n<p>I've been able to re-use quite a bit of Rust Analyzer's code in implementing a similar linter for web application projects.</p>\n<p>See <a href=\"https://github.com/kestred/web-analyzer-wip\" target=\"_blank\" title=\"https://github.com/kestred/web-analyzer-wip\">https://github.com/kestred/web-analyzer-wip</a>.</p>\n<p>In particular, <code>rowan</code> is used to represent an AST, <code>salsa</code> has been nice because I plan LSP support, but as mentioned its probably unnecessary complexity in the general case; though if you go that path <code>ra_vfs</code> that has been broken out from Rust Analyzer is useful for loading files.   I've replicated some of the <code>ra_db</code> crate in <code>utils/analysis</code> and the <code>ra_parser</code>/<code>ra_syntax</code> crates in a more language-generic way in <code>utils/grammar</code>.    There is also <code>codegen/antlr</code> which generates a parser using the <code>utils/grammar</code> crate that products a <code>rowan</code> based AST using a ANTLR-like syntax if you find an existing <code>antlr</code> grammar for python.</p>",
        "id": 165852187,
        "sender_full_name": "Kevin Stenerson",
        "timestamp": 1558043470
    }
]