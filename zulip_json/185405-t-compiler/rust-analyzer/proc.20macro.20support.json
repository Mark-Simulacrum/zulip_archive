[
    {
        "content": "<p>Is there an issue that tracks support for procedural macros in rust-analyzer? I did not find one after a search on GitHub. I recently implemented a proc macro for JSX-like syntax: <code>let html = html!(&lt;div&gt;{text}&lt;/div&gt;);</code>. If rust-analyzer executed the procedural macro like rustc does, it could theoretically support features like \"go to definition\" and \"find references\" when the cursor is over the identifier <code>text</code>.</p>",
        "id": 203151227,
        "sender_full_name": "nitsky",
        "timestamp": 1594151327
    },
    {
        "content": "<p>You need to enable <code>rust-analyzer.loadOutDir</code> and <code>rust-analyzer.proc_macro</code> in the preferences. (not sure about the exact naming, but autocomplete should show them when editing the json preferences in vscode.</p>",
        "id": 203199828,
        "sender_full_name": "bjorn3",
        "timestamp": 1594154335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"294489\">@nitsky</span> ^</p>",
        "id": 203199873,
        "sender_full_name": "bjorn3",
        "timestamp": 1594154359
    },
    {
        "content": "<p>we don't support function-style proc macros yet though, only derives</p>",
        "id": 203199939,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594154395
    },
    {
        "content": "<p>... do we? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 203199952,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594154401
    },
    {
        "content": "<p>Yup, we don't support fun-style proc macros yet</p>",
        "id": 203200447,
        "sender_full_name": "matklad",
        "timestamp": 1594154652
    },
    {
        "content": "<p>thanks, I opened an issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/5265\">https://github.com/rust-analyzer/rust-analyzer/issues/5265</a></p>",
        "id": 203277447,
        "sender_full_name": "nitsky",
        "timestamp": 1594220169
    }
]