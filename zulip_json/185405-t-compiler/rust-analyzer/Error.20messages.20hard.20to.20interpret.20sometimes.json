[
    {
        "content": "<p>Hi! I've been watching on streams how people new to rust use the tools available to them to try and solve compilation errors. One big thing I've noticed, is that they rely on the error message from when they hover over the red squiggly (in vscode), and get frustrated when they cant figure it out. However, I think in most of these cases, manually running cargo check would point them towards the solution. I dont have any concrete examples right now, but I'm sure you can yourself think of situations like this, where you've needed to run cargo check to get the human formatted error message.</p>\n<p>Is there an existing issue for this already or talk about it somewhere?</p>\n<p>Would it be possible to somehow hint to the user to use cargo check/clippy/whatever they are using when they hit something like this?</p>",
        "id": 254199157,
        "sender_full_name": "Emil Gardström",
        "timestamp": 1632227668
    },
    {
        "content": "<p>No issue AFAIK, I noticed it myself, but I'm not sure it's because we don't show some information, because it's harder to pinpoint the errors in the GUI, or because I didn't pay attention. I don't think including a hint to run <code>cargo check</code> would help. It would be just noise.</p>",
        "id": 254199514,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632227837
    },
    {
        "content": "<p>Why can they figure it out with <code>cargo check</code>, but not the in-editor diagnostics? Because related diagnostics aren't connected?</p>",
        "id": 254199573,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632227864
    },
    {
        "content": "<p>We should, at least today, display basically <em>all</em> the information there is in a diagnostic</p>",
        "id": 254199667,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632227905
    },
    {
        "content": "<p>I can believe that it's harder to piece them together in a GUI though</p>",
        "id": 254199711,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632227921
    },
    {
        "content": "<p>It wouldn't be too hard to add a function that runs the check-on-save command in a terminal, but making that discoverable without adding unhelpful noise seems a bit difficult</p>",
        "id": 254199970,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632228044
    },
    {
        "content": "<p>Because the issue is related to something not directly to that squiggly, or the suggestion has been made to show multiple spans etc. Sometimes it can also just be that there's another error that is the real cause, like if you return <code>impl T</code> but return multiple different <code>impl T</code></p>",
        "id": 254200150,
        "sender_full_name": "Emil Gardström",
        "timestamp": 1632228126
    },
    {
        "content": "<p>Maybe we could highlight the related parts of the code when hovering/selecting a problem?</p>",
        "id": 254200261,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632228178
    },
    {
        "content": "<p>oh, that's a cool idea</p>",
        "id": 254200296,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632228200
    },
    {
        "content": "<p>Not sure it's possible, though. Or if it's easy.</p>",
        "id": 254200353,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632228231
    },
    {
        "content": "<p>Multiple hovers maybe? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> That'd probably be messy though</p>",
        "id": 254200436,
        "sender_full_name": "Emil Gardström",
        "timestamp": 1632228260
    },
    {
        "content": "<p><del>There's <a href=\"https://github.com/microsoft/vscode/issues/55253\">https://github.com/microsoft/vscode/issues/55253</a> that seems slightly related and <a href=\"https://github.com/microsoft/vscode/issues/64566\">https://github.com/microsoft/vscode/issues/64566</a>, but that's something else.</del> Ah, I didn't realize linked diagnostics are already available in LSP.</p>",
        "id": 254200686,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632228365
    },
    {
        "content": "<p>Yeah, been thinking about this myself recently. Thoughts:</p>\n<ul>\n<li>fundamentally, GUI is a much better way to show errors. You can highlight specific parts which are wrong, you can <em>cycle</em> through suggestions, you higlight lifetime reagions, etc.</li>\n<li>hover, <code>rustc</code> CLI output is very well optimized. In theory, rustc's snippets infra is just a workaround for an inability to highlight the code directly. In practice though, the CLI experience is very polished. Even if we can do 10x better with GUI in theory, we are 0.1x better in practice today. </li>\n<li>there's a tension between detecting errors in the ide and using compiler output</li>\n<li>default vscode workflow is suboptimal. It doesn't have a concept of \"compiler error\". When I code in code, I disable <code>checkOnSave</code>. Instead, I use <strong>Rust Analyzer: Run</strong> , which shows me the errors in the terminal. I feel that's a superior approach, but I don't feel comfortable pushing our users to it, as it is different form VS Code default UX</li>\n</ul>\n<p>Practically: </p>\n<ul>\n<li>I think we should emit 80% of most common errors ourselves</li>\n<li>For the rest, I think we should just make our persentaiton better. rustc already emits strucured jsons, and vscode already has linked diagnostics, we should make sure we use those as efficiently as possible.</li>\n</ul>",
        "id": 254201465,
        "sender_full_name": "matklad",
        "timestamp": 1632228771
    },
    {
        "content": "<p>linked diagnostics (via <code>DiagnosticRelatedInformation</code>) unfortunately aren't very good in terms of UI</p>",
        "id": 254202223,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632229100
    },
    {
        "content": "<p>For what it’s worth, on both Stack Overflow and Discord it’s basically a copy–paste macro to tell people to stop looking at the error inside Visual Studio code; especially if they’re confused by it.￼</p>",
        "id": 254212444,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1632233223
    },
    {
        "content": "<blockquote>\n<p>Please [edit] your question and paste the exact and entire error that you're getting — that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it's actually a different part of the error message that's important. <strong>Please use the message from running the compiler directly, not the message produced by an IDE, which might be trying to interpret the error for you.</strong></p>\n</blockquote>",
        "id": 254212789,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1632233331
    },
    {
        "content": "<p>Maybe an assist that shows up on errors and shows them in the terminal would help? Might not be super easy to discover though</p>",
        "id": 254212843,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632233356
    },
    {
        "content": "<p>Generally I'm happy to implement any concrete suggestions for better diagnostic mappings</p>",
        "id": 254212946,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632233397
    },
    {
        "content": "<p>On the flip side, I use the in-editor (emacs) errors and when I already know the meaning of an error it's much quicker than reading the full build output.</p>\n<p>If there could be a \"what?\" button on the inline error that then showed the full compiler error (and maybe another \"what?\" button there that showed the <code>--explain</code> output...), that could help.</p>",
        "id": 254213535,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1632233614
    }
]