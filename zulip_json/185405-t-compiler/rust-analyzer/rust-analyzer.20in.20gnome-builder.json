[
    {
        "content": "<p>Hello everybody! :)<br>\nHas anyone of you tested rust-analyzer with gnome-builder yet?</p>",
        "id": 192127090,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585407784
    },
    {
        "content": "<p>It doesn't seem to support LSP</p>",
        "id": 192127946,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585409139
    },
    {
        "content": "<p><a href=\"https://wiki.gnome.org/Projects/Vala/Tools#Language_Server_Protocol_Support\" title=\"https://wiki.gnome.org/Projects/Vala/Tools#Language_Server_Protocol_Support\">https://wiki.gnome.org/Projects/Vala/Tools#Language_Server_Protocol_Support</a> or maybe it does?</p>",
        "id": 192128011,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585409206
    },
    {
        "content": "<p>There's no way to configure which server to use</p>",
        "id": 192128087,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585409314
    },
    {
        "content": "<p>I tried to make it <a href=\"https://gitlab.gnome.org/GNOME/gnome-builder/-/blob/master/src/plugins/rls/rls_plugin.py#L133\" title=\"https://gitlab.gnome.org/GNOME/gnome-builder/-/blob/master/src/plugins/rls/rls_plugin.py#L133\">spawn</a> <code>rust-analyzer</code> instead of <code>rls</code>, but it's not working</p>",
        "id": 192128344,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585409699
    },
    {
        "content": "<p>I haven't looked into it too deeply, but it looks like it's trying to load my entire <code>~</code>, and it also panics a little from time to time. Using the wrong path is definitely a problem, though.</p>",
        "id": 192128902,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585410465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192128087\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192128087\">said</a>:</p>\n<blockquote>\n<p>There's no way to configure which server to use</p>\n</blockquote>\n<p>Yeah it looks like they have a plugin for rls, but no generalized use whatever language server you want support.</p>",
        "id": 192129136,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585410773
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> does <code>RUST_LOG=gen_lsp_server=trace</code> still work? and does it log to <code>stderr</code>?</p>",
        "id": 192129319,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585411039
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3758\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3758\">https://github.com/rust-analyzer/rust-analyzer/issues/3758</a>.</p>",
        "id": 192129683,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585411548
    },
    {
        "content": "<p>I guess that would be for the gnome-builder team to decide, but - from your perspective - would it make more sense to have generalized any language server support in builder, or a toggle on the rls plugin to switch between (legacy)rls and rust-analyzer?</p>",
        "id": 192130496,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585412737
    },
    {
        "content": "<p>I don't know. They seem to prefer having different plugins (e.g. <code>gcc</code> and <code>clang</code>). The <code>rust-analyzer</code> one could be pretty much identical to the RLS plugin. Or maybe they'll do nothing and wait until <code>rust-analyzer</code> replaces RLS (if that ever happens).</p>",
        "id": 192131401,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414037
    },
    {
        "content": "<p>Gee, I wonder what's the best way to intercept the <code>stdout</code> and <code>stderr</code> of a running program.</p>",
        "id": 192131488,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414156
    },
    {
        "content": "<p>You could use <a href=\"https://github.com/nelhage/reptyr\" title=\"https://github.com/nelhage/reptyr\"><code>reptyr</code></a>. It uses ptrace to make the target process perform the necessary steps to change its pty.</p>",
        "id": 192131662,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414334
    },
    {
        "content": "<p>More details how it works here: <a href=\"https://blog.nelhage.com/2011/02/changing-ctty/\" title=\"https://blog.nelhage.com/2011/02/changing-ctty/\">https://blog.nelhage.com/2011/02/changing-ctty/</a></p>",
        "id": 192131678,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414357
    },
    {
        "content": "<p>I tried to use it once to recover a backgrounded program, but it didn't work for me. And I don't want to steal the fds, but rather eavesdrop on them</p>",
        "id": 192131719,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414440
    },
    {
        "content": "<p>I usually <code>strace</code> the process, but it's a bit awkward when someone else spawns it</p>",
        "id": 192131783,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414481
    },
    {
        "content": "<p>I had to use it once when Xorg crashed due to a failing GPU. It worked fine for me.</p>",
        "id": 192131825,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414548
    },
    {
        "content": "<p>It seems to use <code>dup2</code>, so I guess it's not what I'm looking for</p>",
        "id": 192131921,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414667
    },
    {
        "content": "<p><a href=\"https://unix.stackexchange.com/questions/58550/how-to-view-the-output-of-a-running-process-in-another-bash-session/308666#308666\" title=\"https://unix.stackexchange.com/questions/58550/how-to-view-the-output-of-a-running-process-in-another-bash-session/308666#308666\">https://unix.stackexchange.com/questions/58550/how-to-view-the-output-of-a-running-process-in-another-bash-session/308666#308666</a></p>\n<blockquote>\n<p>tail -f /proc/&lt;pid&gt;/fd/1</p>\n</blockquote>\n<p>Maybe that works?</p>",
        "id": 192131966,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414693
    },
    {
        "content": "<blockquote>\n<p>This won't work if the output is going to a tty (or redirected to /dev/null) — it will only work if the output is redirected to a file.</p>\n</blockquote>\n<p>Maybe not</p>",
        "id": 192132013,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414782
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>tail: cannot open &#39;/proc/67363/fd/1&#39; for reading: No such device or address\n</pre></div>",
        "id": 192132080,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414828
    },
    {
        "content": "<p>The other suggestions on that page are using strace and then parsing the output</p>",
        "id": 192132122,
        "sender_full_name": "bjorn3",
        "timestamp": 1585414916
    },
    {
        "content": "<p>Sounds like a fun project</p>",
        "id": 192132178,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585414977
    },
    {
        "content": "<p>One of the snippets on the page worked:</p>\n<div class=\"codehilite\"><pre><span></span>strace -e <span class=\"nv\">trace</span><span class=\"o\">=</span>write -s1000 -fp <span class=\"nv\">$pid</span> <span class=\"m\">2</span>&gt;<span class=\"p\">&amp;</span><span class=\"m\">1</span> <span class=\"se\">\\</span>\n<span class=\"p\">|</span> grep --line-buffered -o <span class=\"s1\">&#39;&quot;.\\+[^&quot;]&quot;&#39;</span> <span class=\"se\">\\</span>\n<span class=\"p\">|</span> grep --line-buffered -o <span class=\"s1\">&#39;[^&quot;]\\+[^&quot;]&#39;</span> <span class=\"se\">\\</span>\n<span class=\"p\">|</span> <span class=\"k\">while</span> <span class=\"nb\">read</span> -r line<span class=\"p\">;</span> <span class=\"k\">do</span>\n  <span class=\"nb\">printf</span> <span class=\"s2\">&quot;%b&quot;</span> <span class=\"nv\">$line</span><span class=\"p\">;</span>\n<span class=\"k\">done</span>\n</pre></div>",
        "id": 192132249,
        "sender_full_name": "bjorn3",
        "timestamp": 1585415081
    },
    {
        "content": "<p>I ended up writing a small program that logs the console IO and passes it through to a child process, but I still can't figure out what the issue is <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192137184,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585422455
    },
    {
        "content": "<p>Does it send any LSP requests at all or do you not make it that far? We don't check a lot of client caps so I could see us returning newer things than are supported by gnome builder</p>",
        "id": 192138287,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585424150
    },
    {
        "content": "<p>It does, but we crash with an OOB access when converting the position: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3758#issuecomment-605501732\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3758#issuecomment-605501732\">https://github.com/rust-analyzer/rust-analyzer/issues/3758#issuecomment-605501732</a></p>",
        "id": 192138337,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585424249
    },
    {
        "content": "<p>Not sure why</p>",
        "id": 192138338,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585424251
    },
    {
        "content": "<p>I tried to debug it, but the CodeLLDB breakpoints don't seem to work on my system</p>",
        "id": 192138399,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585424301
    },
    {
        "content": "<p>Can you try in vscode and see what the LSP is?</p>",
        "id": 192138606,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585424710
    },
    {
        "content": "<p>Not easily :-)</p>",
        "id": 192139190,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585425717
    },
    {
        "content": "<p>I tried it out on your example and it always sends the entire file contents in the <code>didChange</code>. That's the only different I see in that particular request/response</p>",
        "id": 192139265,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585425829
    },
    {
        "content": "<p>ahhh I think the gnome builder lsp client isn't respecting the server's choice of full text synchronization</p>",
        "id": 192139522,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585426222
    },
    {
        "content": "<p>And maybe we take the text from the request instead of our version, so it only has one character</p>",
        "id": 192139535,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585426304
    },
    {
        "content": "<p>Yeah I think that's probably the issue</p>",
        "id": 192139575,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585426329
    },
    {
        "content": "<p>Maybe we should support partial synchronization</p>",
        "id": 192139772,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585426622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278750\">@bronze alibi</span> do you want to give it a try?</p>",
        "id": 192140487,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585427726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192140487\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192140487\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278750\">bronze alibi</span> do you want to give it a try?</p>\n</blockquote>\n<p>try what?</p>",
        "id": 192141319,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585429189
    },
    {
        "content": "<p>Implementing incremental text synchronization support in <code>rust-analyzer</code>. Right now it expects editors to send the full file contents on each edit, but there's a mode where the editor can send only the differences.</p>",
        "id": 192141386,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585429256
    },
    {
        "content": "<p>I think it's a matter of passing the edits through a couple of layers of method calls, then actually applying them. You'd also need to do a line/column -&gt; byte offset conversion, not sure exactly where.</p>",
        "id": 192141463,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585429408
    },
    {
        "content": "<p>I am not familiar with the rust-analyzer codebase and a one university semester coder, so I am not sure I could pull that off.</p>",
        "id": 192141468,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585429423
    },
    {
        "content": "<p>If you want to take a look, you can start from <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/main_loop.rs#L598-L599\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/main_loop.rs#L598-L599\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/main_loop.rs#L598-L599</a>. <code>params.content_changes</code> contains all the changes, but the code only picks one and passes it through. Changes look <a href=\"https://docs.rs/lsp-types/0.73.0/lsp_types/struct.TextDocumentContentChangeEvent.html\" title=\"https://docs.rs/lsp-types/0.73.0/lsp_types/struct.TextDocumentContentChangeEvent.html\">like this</a>, where an empty range means that the full file needs to be replaced. There's a conversion from <code>Range</code> to a <code>rust-analyzer</code> <code>TextRange</code> in <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/conv.rs#L205\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/conv.rs#L205\">conv.rs</a>. And <code>TextRange</code> is a pair of byte offsets, so that's what you need to pass through.</p>",
        "id": 192141585,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585429563
    },
    {
        "content": "<p>I appreciate your helpfulness and I will take a look at it, but I am quite certain that this is quite far beyond my level of understanding.<br>\nI think it would make a lot of sense for you to copy the text your wrote on what to do to the github issue, so someone else too can have an easier time, too.</p>",
        "id": 192141744,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585429867
    },
    {
        "content": "<p>Sure, filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3762\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3762\">https://github.com/rust-analyzer/rust-analyzer/issues/3762</a>.</p>",
        "id": 192142079,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585430438
    },
    {
        "content": "<p>Cool. I really appreciate this community here. A one sentence question that could have reasonably been just met with just a \"no\", let to 3 people responding with a little cooperative investigation and 2 issues filed.<br>\nThis is work too, and I thank y'all for taking the time!</p>",
        "id": 192142214,
        "sender_full_name": "bronze alibi",
        "timestamp": 1585430659
    },
    {
        "content": "<p>Well, it looks like Code sends an update on each keypress so this might make <code>rust-analyzer</code> a tiny bit faster</p>",
        "id": 192142381,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585430989
    },
    {
        "content": "<p>I'm surprised that gnome builder doesn't support <code>Full</code> mode since that sounds easier to implement. I wonder if there's an option.</p>",
        "id": 192180127,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1585496382
    },
    {
        "content": "<p>Maybe they wanted to implement the most efficient mode first instead of the easiest, as they would likely want to implement the most efficient mode at some point anyway.</p>",
        "id": 192182952,
        "sender_full_name": "bjorn3",
        "timestamp": 1585500057
    },
    {
        "content": "<blockquote>\n<p>Well, it looks like Code sends an update on each keypress so this might make rust-analyzer a tiny bit faster</p>\n</blockquote>\n<p>They actually, for a full-sync mode, have a debouncing rate inside of the editor</p>",
        "id": 192185252,
        "sender_full_name": "matklad",
        "timestamp": 1585503289
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192185252\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/rust-analyzer.20in.20gnome-builder/near/192185252\">said</a>:</p>\n<blockquote>\n<p>They actually, for a full-sync mode, have a debouncing rate inside of the editor</p>\n</blockquote>\n<p>Strange, am I typing too slow? :-). I didn't notice any debouncing.</p>",
        "id": 192186021,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585504391
    },
    {
        "content": "<p><a href=\"https://github.com/microsoft/vscode-languageserver-node/blob/b1f6a443efad3d61cf83344589099dab5318ca66/client/src/client.ts#L1003-L1029\" title=\"https://github.com/microsoft/vscode-languageserver-node/blob/b1f6a443efad3d61cf83344589099dab5318ca66/client/src/client.ts#L1003-L1029\">https://github.com/microsoft/vscode-languageserver-node/blob/b1f6a443efad3d61cf83344589099dab5318ca66/client/src/client.ts#L1003-L1029</a></p>",
        "id": 192187280,
        "sender_full_name": "matklad",
        "timestamp": 1585506220
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/_UJtJrRVYpS4NrbQdENFWttF/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_UJtJrRVYpS4NrbQdENFWttF/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/_UJtJrRVYpS4NrbQdENFWttF/image.png\"></a></div>",
        "id": 192187465,
        "sender_full_name": "Laurențiu",
        "timestamp": 1585506427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278750\">@bronze alibi</span> not sure if you've been following that GitHub issue, but Builder should be supported in the latest nightly. There are some instructions here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4236/files\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4236/files\">https://github.com/rust-analyzer/rust-analyzer/pull/4236/files</a>. Testing it would be welcome :-).</p>",
        "id": 195940712,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588321534
    }
]