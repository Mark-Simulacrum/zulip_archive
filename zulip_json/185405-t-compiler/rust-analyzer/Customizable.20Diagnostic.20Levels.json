[
    {
        "content": "<p>I'd like to add a way to opt out of individual diagnostics (since the \"mismatched arg count\" has a couple of false positives), and was thinking that we might want to have a more granular way to configure severity of diagnostics.</p>\n<p>I see that the default CSS plugin allows configuring various lint levels, maybe we want to have the same? Perhaps not on a per-diagnostic level, but I think it would be nice to have individual opt-outs for things like missing match arms (which also occasionally gives false positives) and other diagnostics. Thoughts?</p>",
        "id": 204911443,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595595414
    },
    {
        "content": "<p>If we don't want this, I'd just add a \"Enable Experimental Diagnostics\" toggle instead that turns off diagnostics with many false positives.</p>",
        "id": 204912502,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595596008
    },
    {
        "content": "<p>Maybe \"experimental\" should include <code>MissingOkInTailExpr</code>, since that's just a limited mismatched types diagnostics and I've seen an issue about false positives for that one too</p>",
        "id": 204912643,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595596081
    },
    {
        "content": "<p>I think we might want both -- I think a \"enable experimental diagnostics\" toggle would be a good idea so we can introduce more of them and not have people need to toggle each of them off separately, but also configuring specific diagnostics would be good (though long term that should happen through attributes)</p>",
        "id": 204913635,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596683
    },
    {
        "content": "<p>Attributes as in <code>#[attributes]</code>?</p>",
        "id": 204913683,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595596720
    },
    {
        "content": "<p>maybe we could even have levels of experimental diagnostics, so we could have a super spammy level where we give a diagnostic for every type mismatch (though I might be the only person who enables that <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
        "id": 204913697,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596729
    },
    {
        "content": "<p>yeah</p>",
        "id": 204913702,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596731
    },
    {
        "content": "<p>That sounds like a good fit for hints and warnings, but maybe not for error diagnostics</p>",
        "id": 204913751,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595596769
    },
    {
        "content": "<p>hm that's true</p>",
        "id": 204913766,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596780
    },
    {
        "content": "<p>ok, long-term error diagnostics should be perfect anyway ;)</p>",
        "id": 204913789,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596795
    },
    {
        "content": "<p>heh, yeah</p>",
        "id": 204913845,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595596807
    },
    {
        "content": "<p>so, a general toggle seems more important and useful to me right now</p>",
        "id": 204913881,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595596829
    },
    {
        "content": "<p>OTOH maybe we <em>want</em> people to have to disable each diagnostic separately...</p>",
        "id": 204915023,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595597409
    },
    {
        "content": "<p>I kinda do :)</p>",
        "id": 204915144,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595597488
    },
    {
        "content": "<p>well... I kind of want to have a place for super-experimental diagnostics, and then have them graduate to a default-on state where people can still disable them. I think it's useful if you can add a diagnostic in a not-yet-ready-for-general-consumption state</p>",
        "id": 204915370,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595597617
    },
    {
        "content": "<p>I guess that would be possible with specific toggles as well though</p>",
        "id": 204915453,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595597647
    },
    {
        "content": "<p>soo yeah, maybe individual toggles are the better approach after all <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 204915506,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595597685
    },
    {
        "content": "<p>If we change the default setting, will that update within VS Code or will the old default be kept?</p>",
        "id": 204915527,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595597700
    },
    {
        "content": "<p>I <em>think</em> we can implement defaults on server side that apply if the setting hasn't been explicitly set by the user?</p>",
        "id": 204915712,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595597790
    },
    {
        "content": "<p>Oh, yeah, we already have that</p>",
        "id": 204915796,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595597849
    },
    {
        "content": "<p>But the plugin-side also has defaults, maybe they're optional though</p>",
        "id": 204915825,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595597872
    },
    {
        "content": "<p>yeah I don't know how those work</p>",
        "id": 204916078,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595598011
    },
    {
        "content": "<p>In the stupidest way possible</p>",
        "id": 204916394,
        "sender_full_name": "matklad",
        "timestamp": 1595598195
    },
    {
        "content": "<p>Even if the user has nothing in their settings, VS Code will gladly stomp over every server default</p>",
        "id": 204916431,
        "sender_full_name": "matklad",
        "timestamp": 1595598224
    },
    {
        "content": "<p>hrm</p>",
        "id": 204916440,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595598233
    },
    {
        "content": "<p>But I don't think unsynced defaults are a big problem</p>",
        "id": 204916447,
        "sender_full_name": "matklad",
        "timestamp": 1595598237
    },
    {
        "content": "<p>well, actually the Emacs impl will kind of do the same</p>",
        "id": 204916506,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595598250
    },
    {
        "content": "<p>Like, they'll converge eventually</p>",
        "id": 204916513,
        "sender_full_name": "matklad",
        "timestamp": 1595598254
    },
    {
        "content": "<p>maybe we want to model this as two settings \"disabled diagnostics\" and \"enabled experimental diagnostics\" that are just lists of strings anyway?</p>",
        "id": 204916577,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595598290
    },
    {
        "content": "<p>Yeah, this seems like the best solution</p>",
        "id": 204916760,
        "sender_full_name": "matklad",
        "timestamp": 1595598380
    },
    {
        "content": "<p>Well, impl-wise, for every diagnostic we should have either \"on\" or \"off\", without distinguishing experimental from non-experimental ones</p>",
        "id": 204916797,
        "sender_full_name": "matklad",
        "timestamp": 1595598411
    },
    {
        "content": "<p>but two lists in the UI seem good!</p>",
        "id": 204916813,
        "sender_full_name": "matklad",
        "timestamp": 1595598420
    },
    {
        "content": "<p>yeah</p>",
        "id": 204916837,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595598433
    },
    {
        "content": "<p>Hmm, can we accept an arbitrary string-keyed map as a setting? Then each diagnostic can be mapped to a severity instead of just turned on or off.</p>",
        "id": 204922641,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595601156
    },
    {
        "content": "<p>Like, having a general type mismatch diagnostic that emits errors would be too noisy, but not necessarily if it's only at hint level</p>",
        "id": 204922721,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595601195
    },
    {
        "content": "<p>And when users turn it off completely, they miss out on quick fixes</p>",
        "id": 204922766,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595601213
    },
    {
        "content": "<p>initialization options are <code>any</code>, so... I guess?</p>",
        "id": 204923469,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595601514
    },
    {
        "content": "<p>that would also make it just one map instead of two lists, which is nice</p>",
        "id": 204923513,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595601537
    },
    {
        "content": "<p>well, I guess it's possible that VSCode doesn't allow arbitrary JSON as settings, I can't speak to that</p>",
        "id": 204923577,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595601575
    },
    {
        "content": "<p>Yup, map would be fien</p>",
        "id": 204923578,
        "sender_full_name": "matklad",
        "timestamp": 1595601577
    },
    {
        "content": "<p>Can you provide custom settings UI or would this just be a JSON entry box for users? :D</p>",
        "id": 204924028,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595601765
    },
    {
        "content": "<p>I think it'll be JSON</p>",
        "id": 204924282,
        "sender_full_name": "matklad",
        "timestamp": 1595601874
    },
    {
        "content": "<p>Seems fine by me</p>",
        "id": 204924288,
        "sender_full_name": "matklad",
        "timestamp": 1595601879
    },
    {
        "content": "<p>we are not going to have many false positives, are we? :D</p>",
        "id": 204924333,
        "sender_full_name": "matklad",
        "timestamp": 1595601898
    },
    {
        "content": "<p>I meant this to also be the way to configure warnings and hints, and for those a nicer UI would be good</p>",
        "id": 204924537,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595601983
    },
    {
        "content": "<p>Clearly <code>package.json</code> needs to be produced by xtask</p>",
        "id": 204925748,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595602508
    },
    {
        "content": "<p>I'll just go with the experimental diagnostics checkbox for now. Is there a way to invalidate existing diagnostics when the box is (un)checked?</p>",
        "id": 204930237,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595604575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> <code>sudo reboot</code>? I'd punt on this for the time being</p>",
        "id": 204930576,
        "sender_full_name": "matklad",
        "timestamp": 1595604725
    },
    {
        "content": "<p>I could maybe add it to <code>requiresReloadOpts</code></p>",
        "id": 204930758,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595604832
    }
]