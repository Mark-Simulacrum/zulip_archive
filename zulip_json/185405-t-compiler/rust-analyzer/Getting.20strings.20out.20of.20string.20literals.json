[
    {
        "content": "<p>Do we have a helper to unquote a string out of a <code>Literal</code>? <code>concat</code> in MBE tries to do that manually and mangles some strings.</p>",
        "id": 223878442,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611570576
    },
    {
        "content": "<p>Oh, there's one next to it</p>",
        "id": 223878719,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611570764
    },
    {
        "content": "<p>yeah, there is <code>unquote_str</code> in <code>builtin_macro.rs</code> if you are talking about <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7417\">https://github.com/rust-analyzer/rust-analyzer/issues/7417</a></p>",
        "id": 223880749,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1611572051
    },
    {
        "content": "<p>Yup, found it</p>",
        "id": 223880774,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611572075
    },
    {
        "content": "<p>Heh, <code>concat!(\"foo2\", r#false)</code> doesn't work in <code>rustc</code></p>",
        "id": 223884078,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611574397
    },
    {
        "content": "<p>Should we treat <code>true</code> and <code>false</code> as <code>Literal</code> instead of <code>Ident</code>? They're special-cased in <code>syntax_bridge</code></p>",
        "id": 223884127,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611574435
    },
    {
        "content": "<p><code>macro_rules!</code> accepts them as both <code>ident</code> and <code>literal</code></p>",
        "id": 223884548,
        "sender_full_name": "Laurențiu",
        "timestamp": 1611574768
    },
    {
        "content": "<p>Yeah, I think we should special-cased it in mbe meta variable matching  instead.</p>",
        "id": 223885039,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1611575078
    }
]