[
    {
        "content": "<p>Hi everyone, I'm slowly starting to work on <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4563\">https://github.com/rust-analyzer/rust-analyzer/issues/4563</a><br>\nI'm stuck on a (hopefully) trivial issue again, what can I do when a test fails with the following?<br>\nThis time I checked that the test fixture doesn't have syntax errors etc ;)</p>\n<div class=\"codehilite\"><pre><span></span><code>---- diagnostics::tests::test_add_field_from_usage stdout ----\n[crates/ra_ide/src/diagnostics.rs:132] record_lit.path().unwrap() = Path {\n    syntax: PATH@41..44\n      PATH_SEGMENT@41..44\n        NAME_REF@41..44\n          IDENT@41..44 &quot;Foo&quot;\n    ,\n}\nthread &#39;diagnostics::tests::test_add_field_from_usage&#39; panicked at &#39;\n\nFailed to lookup PATH@41..44 in this Semantics.\nMake sure to use only query nodes, derived from this instance of Semantics.\nroot node:   SOURCE_FILE@0..158\nknown nodes:\n</code></pre></div>\n\n\n<p>The test looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>    #[test]\n    fn test_add_field_from_usage() {\n        check_apply_diagnostic_fix(\n            r&quot;\n            fn main() {\n                Foo { bar: 3, baz: false};\n            }\n            struct Foo {\n                bar: i32\n            }\n            &quot;,\n            r&quot;\n            fn main() {\n                Foo { bar: 3, baz: false};\n            }\n            struct Foo {\n                bar: i32,\n                baz: bool\n            }\n            &quot;,\n        )\n    }\n</code></pre></div>",
        "id": 200449550,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1591810445
    },
    {
        "content": "<p>I think that means you've got a bug in your code? basically, as the message says, you can only pass syntax nodes to <code>Semantics</code> if you derived them from a node you got from it. I'd check the backtrace</p>",
        "id": 200452628,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1591811782
    },
    {
        "content": "<p>hmm, i got the syntax from the same <code>AstDatabase</code> which the <code>Semantics</code> is based on. i'm gonna check the backtrace though.</p>",
        "id": 200456514,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1591813533
    },
    {
        "content": "<p>that's not enough, you need to get it from a <code>parse</code> / <code>expand</code> / etc. call on the same <code>Semantics</code> object</p>",
        "id": 200457441,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1591813960
    },
    {
        "content": "<p>aw man, and <code>Semantics::parse</code> doesn't return the syntax errors which the <code>diagnostics</code> function uses :c</p>",
        "id": 200458491,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1591814463
    },
    {
        "content": "<p>if you're getting the syntax node via <code>AstDiagnostic::ast</code>, you could add a method to <code>Semantics</code> that does the same thing. you just need to call <code>cache</code> with the root node and the correct <code>HirFileId</code> (which you can get from the diagnostic, I think)</p>",
        "id": 200459333,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1591814843
    },
    {
        "content": "<p>Ok, I hoped I wouldn't have to add a new method to <code>Semantics</code>, but if that's necessary <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span><br>\nThanks for the support :)</p>",
        "id": 200465720,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1591817756
    }
]