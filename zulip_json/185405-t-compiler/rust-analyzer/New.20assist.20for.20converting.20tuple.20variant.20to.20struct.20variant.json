[
    {
        "content": "<p>Hi! Aspiring new contributor here. I noticed there's an existing convert_tuple_struct_to_named_struct assist, and I've been toying with copy/paste/munging that into an assist that will do the analogous thing for tuple variants - e.g. <code>enum E { V(usize) }</code> -&gt; <code>enum E { V { field1: usize } }</code></p>\n<p>I think I've gotten the hang of code layout/etc, and I have a new <a href=\"http://convert_tuple_variant_to_named_variant.rs\">convert_tuple_variant_to_named_variant.rs</a> file, with content _mostly_ stolen from the original file. I've adapted some tests (which now fail, of course), as well as some of the code. For instance, it was fairly straight forward to turn <code>edit_struct_def</code> into <code>edit_variant_def</code> that does the obvious thing - and _seems_ to work.</p>\n<p>The trouble comes with <code>edit_struct_references</code>, which starts with:</p>\n<div class=\"codehilite\"><pre><span></span><code>    let strukt_def = Definition::ModuleDef(hir::ModuleDef::Adt(hir::Adt::Struct(strukt)));\n    let usages = strukt_def.usages(&amp;ctx.sema).include_self_refs().all();\n</code></pre></div>\n<p>However, it's not obvious to me how to do the analogous thing to find the usages of a variant. Any tips?<br>\nThanks!</p>",
        "id": 241611750,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1622861135
    },
    {
        "content": "<p>Aha! Nevermind, figured it out. <code>Definition::ModuleDef(hir::ModuleDef::Variant(variant))</code> was the ticket.</p>",
        "id": 241615112,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1622867030
    },
    {
        "content": "<p>Yay! <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/9144\">https://github.com/rust-analyzer/rust-analyzer/pull/9144</a></p>",
        "id": 241616096,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1622868662
    }
]