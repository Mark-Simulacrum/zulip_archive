[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> lets spit this off into a separate topic</p>",
        "id": 236195811,
        "sender_full_name": "matklad",
        "timestamp": 1619451123
    },
    {
        "content": "<p>It seems that, overall, we arrived at this scheme for ids more or less universally:</p>\n<p><code>type id = (id of enclosing thing, position in the parent)</code></p>",
        "id": 236196105,
        "sender_full_name": "matklad",
        "timestamp": 1619451218
    },
    {
        "content": "<p>One annoying exception here is AstId and bdfs. I wonder if we can get rid of those? It seems like they perhaps belong to ItemTree level?</p>",
        "id": 236198195,
        "sender_full_name": "matklad",
        "timestamp": 1619452065
    },
    {
        "content": "<p>That is, insterad of AstId (which is a position in syntax) we can use position in the item tree.</p>",
        "id": 236198289,
        "sender_full_name": "matklad",
        "timestamp": 1619452094
    },
    {
        "content": "<p>Another annoying exception is <code>HirFileId</code>. It's root variant, <code>HirFileId::FileId</code> is sadly ambigious -- the same file might be included twice in the crate graph. I sort-of wish that <code>HirFileId</code> uniquely identified the source file (and a <code>(HirFileId, SyntaxNode)</code> pair uniquely identified a syntax node).</p>",
        "id": 236198547,
        "sender_full_name": "matklad",
        "timestamp": 1619452200
    },
    {
        "content": "<p>I agree, did we ever try making <code>HirFileId::FileId</code> contain the crate?</p>",
        "id": 236199538,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1619452594
    },
    {
        "content": "<p>No</p>",
        "id": 236199817,
        "sender_full_name": "matklad",
        "timestamp": 1619452705
    },
    {
        "content": "<p>Crate won't be enough -- I think it needs to be a Module</p>",
        "id": 236199869,
        "sender_full_name": "matklad",
        "timestamp": 1619452735
    },
    {
        "content": "<p>hrm</p>",
        "id": 236199910,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1619452755
    },
    {
        "content": "<p>ah, because of <code>#[path]</code></p>",
        "id": 236200590,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1619452990
    },
    {
        "content": "<p>Hm, I guess that's complicated. There are really two uses for HirFileId</p>\n<ul>\n<li>an argument to <code>pares_or_expand</code> call</li>\n<li>a way to identify stuff</li>\n</ul>",
        "id": 236200922,
        "sender_full_name": "matklad",
        "timestamp": 1619453126
    },
    {
        "content": "<p>I think the first one has to have the shape it has today. </p>\n<p>The second one though feels like it should made unambigious</p>",
        "id": 236200999,
        "sender_full_name": "matklad",
        "timestamp": 1619453158
    },
    {
        "content": "<p>yeah</p>",
        "id": 236201475,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1619453369
    }
]