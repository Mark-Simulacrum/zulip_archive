[
    {
        "content": "<p>I was wondering if anyone had time to give a light review of <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4873\">#4873</a>. It's a little bit behind master now, but I'd like to get some feedback before I rebase it if possible.</p>",
        "id": 205543282,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1596150841
    },
    {
        "content": "<p>I’ll try to give a look tomorrow. * deps and map lit create create a „this is a wp“ impression for me, so I didn’t react immediately and then it just sitting in the queue. I should have reacted earlier...</p>",
        "id": 205543998,
        "sender_full_name": "matklad",
        "timestamp": 1596151403
    },
    {
        "content": "<p>Thanks, it's definitely a WIP, but I'd love to get some feedback :)</p>",
        "id": 205544668,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1596152088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <br>\nAbout code organisation you suggested creating a <code>resolve_doc_path</code> method on  types in code model. This would work but the code works with <code>Definition</code> which is defined in <code>ra_ide_db</code>. In order to avoid implementing the same method once for every variant of <code>Definition</code> I'd need to expose something like the <code>Resolver</code> in methods on code model types. However, you also said that this shouldn't be exposed. </p>\n<p>Could you give me a bit more advice on how I should organise this? Thanks.</p>",
        "id": 206652173,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1597197121
    },
    {
        "content": "<p>Just a heads up, but I think matklad is on vacation this week. I'm not sure about next.</p>",
        "id": 206654143,
        "sender_full_name": "Paul Faria",
        "timestamp": 1597199358
    },
    {
        "content": "<p>I think this should be a method on <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir/src/code_model.rs#L1696-L1699\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir/src/code_model.rs#L1696-L1699</a></p>",
        "id": 206715732,
        "sender_full_name": "matklad",
        "timestamp": 1597248888
    },
    {
        "content": "<p>Implementing this for every variant of <code>Definition</code> seems appropriate -- rust-analyzer is pretty boilerplate-heavy, and so far it seems like the strategy of writing a bit of boring code to get clearer boundaries between layers pays out</p>",
        "id": 206715827,
        "sender_full_name": "matklad",
        "timestamp": 1597248950
    },
    {
        "content": "<p>The saga of me not knowing where to put code continues...</p>\n<p>I've moved quite a bit of the work into <code>ra_hir</code> which is I <em>think</em> a reasonable place to put most of it. One function I'm struggling to place is <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4873/files#diff-43652efa9797dc89c480b0cb4fd7cdd0R247-R273\"><code>get_doc_url</code></a>. It uses <code>ra_tt</code> to parse the <code>html_doc_url</code> attribute. I was thinking of moving it to a free function somewhere in <code>ra_hir_def</code>, does that sound right?</p>",
        "id": 207056591,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1597556558
    },
    {
        "content": "<p>I think it should be <code>hir::Crate::html_root_url</code>for starters.</p>",
        "id": 207250533,
        "sender_full_name": "matklad",
        "timestamp": 1597752080
    },
    {
        "content": "<p>In the future, I think we'll need some kind of way to flag \"inert\" attributes, so that these kind of features are implemenable outside of the base hir, but for now I think it's better to be simple and handle each attribute on the case-by-case basis.</p>",
        "id": 207250615,
        "sender_full_name": "matklad",
        "timestamp": 1597752140
    },
    {
        "content": "<p>Or, to be more precise, this function should retrieve the value of the attribute. Interpreting as an URL and selecting fallback should be done in the IDE layer I think</p>",
        "id": 207250881,
        "sender_full_name": "matklad",
        "timestamp": 1597752378
    },
    {
        "content": "<p>The problem is being a method on <code>Crate</code> means it needs to be in <code>ra_hir</code>, which doesn't import <code>ra_tt</code>. So I think the actual implementation needs to be lower down, but again I have no idea where to put it. I contemplated <code>ra_hir_def::attr::AttrQuery</code> but all of that code seems a lot lower level, and it seems wrong considering it'll only ever be defined on a root module.</p>\n<p>I'm working on an old version of the codebase (<code>6b7cb8b5a</code>), so things may have moved around a bit since.</p>",
        "id": 207760983,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1598168462
    },
    {
        "content": "<p><code>ra_hir</code> can import <code>ra_tt</code>, it can't re-export it</p>",
        "id": 207772039,
        "sender_full_name": "matklad",
        "timestamp": 1598187736
    },
    {
        "content": "<p>Got it. I think I've resolved most of the issues on the PR now so should be ok for a second review when you have time <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> .</p>",
        "id": 207826948,
        "sender_full_name": "Zac Pullar-Strecker",
        "timestamp": 1598264123
    }
]