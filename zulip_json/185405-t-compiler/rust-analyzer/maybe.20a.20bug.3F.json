[
    {
        "content": "<p>Hello, i'm not sure whether others can reproduce this, but when writing a proc-macro crate (proc-macro = true) the type hints and auto completions all disappear.</p>",
        "id": 187144585,
        "sender_full_name": "Charles Lew",
        "timestamp": 1580527805
    },
    {
        "content": "<p>Hmm, can you open the lsp output? Because I caught a panic from <code>rust-analyzer</code>, though my build of <code>rust-analyzer</code> is not up-to-date.<br>\n<a href=\"user_uploads/4715/RBpo-Su7KYzVz9ouLYm9qg-5/pasted_image.png\" target=\"_blank\" title=\"user_uploads/4715/RBpo-Su7KYzVz9ouLYm9qg-5/pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/4715/RBpo-Su7KYzVz9ouLYm9qg-5/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"user_uploads/4715/RBpo-Su7KYzVz9ouLYm9qg-5/pasted_image.png\"></a></div>",
        "id": 187155150,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1580549290
    },
    {
        "content": "<p>Hmm, its hard to tell what causes it, here is the full backtrace:</p>\n<div class=\"codehilite\"><pre><span></span>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 1 but the index is 2&#39;, /rustc/73528e339aae0f17a15ffa49a8ac608f50c6cf14/src/libcore/slice/mod.rs:2796:10\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print_fmt\n             at src/libstd/sys_common/backtrace.rs:77\n   3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n             at src/libstd/sys_common/backtrace.rs:61\n   4: core::fmt::write\n             at src/libcore/fmt/mod.rs:1028\n   5: std::io::Write::write_fmt\n             at src/libstd/io/mod.rs:1412\n   6: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:65\n   7: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:50\n   8: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:188\n   9: std::panicking::default_hook\n             at src/libstd/panicking.rs:205\n  10: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:464\n  11: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:373\n  12: rust_begin_unwind\n             at src/libstd/panicking.rs:302\n  13: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:139\n  14: core::panicking::panic_bounds_check\n             at src/libcore/panicking.rs:96\n  15: ra_ide::line_index::LineIndex::offset\n  16: ra_lsp_server::main_loop::handlers::handle_code_action\n  17: &lt;F as threadpool::FnBox&gt;::call_box\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n</pre></div>",
        "id": 187155534,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1580550149
    },
    {
        "content": "<p>Hi, i think the problem here is a little flaky. i cannot always reproduce the main issue. However i can always reproduce a small fraction of it. So i created an issue for the separate smaller issue. <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/2984\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/2984\">https://github.com/rust-analyzer/rust-analyzer/issues/2984</a></p>",
        "id": 187202766,
        "sender_full_name": "Charles Lew",
        "timestamp": 1580644879
    }
]