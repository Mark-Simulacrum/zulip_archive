[
    {
        "content": "<p>In thinking about ways to improve the usability of highlighted code, I was wondering how useful it would be to extend the semantic tokens for functions and macros to cover the parens that follow them (and add the closing paren).</p>\n<p>Nested fn calls, arrays, and curly braces from closures are one of the places where I personally find myself getting tripped up, especially as the compilation error may not be near to where the problem is.</p>\n<p>(this idea partially inspired by various \"rainbow parenthesis\" plugins).</p>",
        "id": 207648406,
        "sender_full_name": "woody77",
        "timestamp": 1598023979
    },
    {
        "content": "<p>Hm, this sounds interesting, but I'd say that tracking parantheisi structure shoudl probably be sovled by something other than semhi</p>",
        "id": 207659850,
        "sender_full_name": "matklad",
        "timestamp": 1598030243
    },
    {
        "content": "<p>rainbow parens, breadcrumbs, and  parn guides seem to be an overall better fit here</p>",
        "id": 207659889,
        "sender_full_name": "matklad",
        "timestamp": 1598030272
    },
    {
        "content": "<p>(as an aside, we already expose paran info via \"go to matching brace\" request)</p>",
        "id": 207659947,
        "sender_full_name": "matklad",
        "timestamp": 1598030289
    },
    {
        "content": "<p>I was thinking something less than the full rainbow, where the parens of a fn were included in its semantic highlight.  Which would then allow a pile of closing chars at the end to visually distinguish a bit better:</p>\n<p><code>)]}))</code></p>\n<p>But there are probably other, better ways to do this.</p>",
        "id": 207668597,
        "sender_full_name": "woody77",
        "timestamp": 1598034930
    },
    {
        "content": "<p>There's already extensions in various editors that support this behavior. For example: <a href=\"https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2\">https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2</a></p>",
        "id": 207697157,
        "sender_full_name": "Paul Faria",
        "timestamp": 1598054035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116114\">@Paul Faria</span> -&gt; That's a good point, and probably the right way to go about this.  I'll look into how VSCode deals with multiple extensions applying formatting.</p>\n<p>I think, for me, just hitting these would be a huge win:</p>\n<ul>\n<li>macro bounds</li>\n<li>array bounds</li>\n<li>closure bounds</li>\n</ul>\n<p>It's less the nesting of fns, and more the nesting of the various semantic structures (a closure in an array in a macro...):</p>\n<div class=\"codehilite\"><pre><span></span><code>let ugly = vec!([34, Foo::Builder({ match bar { Some(thing) =&gt; thing.that, None =&gt; 5 }})]);\n</code></pre></div>",
        "id": 207738519,
        "sender_full_name": "woody77",
        "timestamp": 1598124224
    }
]