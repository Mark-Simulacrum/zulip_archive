[
    {
        "content": "<p>Hello everyone, I have been recently getting into parsers and I was going through the architecture and documentation of rust analyzer.</p>\n<p>It seems like a lot of the moving parts of rust-analyzer are implemented from scratch. May I know what motivated this? Why not use a parser generator framework like LALRPOP (<a href=\"https://crates.io/crates/lalrpop\">https://crates.io/crates/lalrpop</a>) ? I have been thinking about implementing a language server for Python in Rust, and any tips would be helpful.</p>",
        "id": 226466167,
        "sender_full_name": "Vikash Balasubramanian",
        "timestamp": 1613444618
    },
    {
        "content": "<p>See <a href=\"https://rust-analyzer.github.io/blog/2020/09/16/challeging-LR-parsing.html\">https://rust-analyzer.github.io/blog/2020/09/16/challeging-LR-parsing.html</a></p>",
        "id": 226481070,
        "sender_full_name": "matklad",
        "timestamp": 1613461139
    },
    {
        "content": "<p>Python has a <a href=\"https://en.wikipedia.org/wiki/Parsing_expression_grammar\">PEG</a> grammar, which is similar to a CFG grammar except that in case of ambiguity the first matching rule applies. This means that it may not be possible to parse Python using the LALR algorithm. Instead you have to use something like Packrat or Pika parsing.</p>",
        "id": 226485658,
        "sender_full_name": "bjorn3",
        "timestamp": 1613464761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> That's actually pretty surprising to me. It seems like RustPython (<a href=\"https://github.com/RustPython/RustPython/tree/master/parser\">https://github.com/RustPython/RustPython/tree/master/parser</a>) is using LALRPOP. I will ask the author if they had any issues. Obviously RustPython didn't really focus on error resilience, so it may not apply anyways.</p>",
        "id": 226602727,
        "sender_full_name": "Vikash Balasubramanian",
        "timestamp": 1613525153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  Thanks that was a really well written blog post. I also did some more reading and the Rowan framework for RA seems to be pretty good. Although I wonder how general it really is. It has been designed with RA in mind. Do you think it might have any limitations when it comes to Python parsing ?</p>",
        "id": 226602921,
        "sender_full_name": "Vikash Balasubramanian",
        "timestamp": 1613525315
    },
    {
        "content": "<p>According to <a href=\"https://www.python.org/dev/peps/pep-0617/\">https://www.python.org/dev/peps/pep-0617/</a> python used a grammar that is almost LL(1), but not completely. That PEP describes the steps to migrate to a new PEG based grammar.</p>",
        "id": 226618812,
        "sender_full_name": "bjorn3",
        "timestamp": 1613543685
    },
    {
        "content": "<p>Guido van Rossum has written a series about PEG grammars: <a href=\"https://medium.com/@gvanrossum_83706/peg-parsing-series-de5d41b2ed60\">https://medium.com/@gvanrossum_83706/peg-parsing-series-de5d41b2ed60</a></p>",
        "id": 226618848,
        "sender_full_name": "bjorn3",
        "timestamp": 1613543741
    },
    {
        "content": "<p>Hello everyone. Good morning. I am new to the rust analyzer project. I would like to contribute in this project. I am looking at the issue <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7454\">https://github.com/rust-analyzer/rust-analyzer/issues/7454</a>. Where can I discuss beginner level stuff about task (which topic)? I can't find the relevant topic.</p>",
        "id": 227095145,
        "sender_full_name": "Chetan Khilosiya",
        "timestamp": 1613831673
    },
    {
        "content": "<p>you can just create a new topic for your question (by entering a new topic name)</p>",
        "id": 227095185,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1613831748
    },
    {
        "content": "<p>ok. Thank you <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span></p>",
        "id": 227095339,
        "sender_full_name": "Chetan Khilosiya",
        "timestamp": 1613831913
    }
]