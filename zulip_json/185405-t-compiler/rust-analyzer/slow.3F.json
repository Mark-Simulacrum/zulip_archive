[
    {
        "content": "<p>Just checking, is this normal?</p>\n<div class=\"codehilite\"><pre><span></span> 1120ms - LibraryData::prepare\n 1372ms - LibraryData::prepare\n 1469ms - LibraryData::prepare\n 1507ms - LibraryData::prepare\n 1685ms - LibraryData::prepare\n 2510ms - LibraryData::prepare\n 1023ms - LibraryData::prepare\n 1497ms - LibraryData::prepare\n 1604ms - LibraryData::prepare\n 2241ms - LibraryData::prepare\n 2281ms - LibraryData::prepare\n 3578ms - LibraryData::prepare\n 2320ms - LibraryData::prepare\n 4202ms - LibraryData::prepare\n 1034ms - LibraryData::prepare\n 1654ms - LibraryData::prepare\n 4652ms - LibraryData::prepare\n 1665ms - LibraryData::prepare\n 4398ms - LibraryData::prepare\n 1685ms - LibraryData::prepare\n 2008ms - LibraryData::prepare\n57160ms - handle_code_action\n    57160ms - diagnostics\n        27521ms - SourceBinder::to_module_def\n            27521ms - crate_def_map\n                27521ms - compute_crate_def_map\n                     1978ms - crate_def_map\n                         1973ms - compute_crate_def_map\n                                5ms - enum_data_query (7 calls)\n                             1937ms - raw_items_query (3900 calls)\n                            4ms - parse_query (1 calls)\n                     4937ms - crate_def_map\n                         4937ms - compute_crate_def_map\n                             4879ms - crate_def_map\n                                 4879ms - compute_crate_def_map\n                                     4844ms - crate_def_map\n                                         4844ms - compute_crate_def_map\n                                                5ms - crate_def_map (11827 calls)\n                                             4364ms - raw_items_query (11810 calls)\n                                        0ms - crate_def_map (7 calls)\n                                        1ms - raw_items_query (1 calls)\n                               51ms - crate_def_map (29 calls)\n                                0ms - enum_data_query (1 calls)\n                                6ms - raw_items_query (17 calls)\n                     1250ms - crate_def_map\n                         1250ms - compute_crate_def_map\n                             1223ms - crate_def_map\n                                 1223ms - compute_crate_def_map\n                                     1049ms - crate_def_map\n                                         1049ms - compute_crate_def_map\n                                             1033ms - crate_def_map (199 calls)\n                                                0ms - enum_data_query (1 calls)\n                                               15ms - raw_items_query (39 calls)\n                                       19ms - crate_def_map (429 calls)\n                                        0ms - enum_data_query (3 calls)\n                                      150ms - raw_items_query (137 calls)\n                                0ms - crate_def_map (81 calls)\n                               26ms - raw_items_query (28 calls)\n                     3057ms - crate_def_map\n                         3057ms - compute_crate_def_map\n                             2389ms - crate_def_map\n                                 2389ms - compute_crate_def_map\n                                     2333ms - crate_def_map\n                                         2333ms - compute_crate_def_map\n                                             2267ms - crate_def_map\n                                                 2267ms - compute_crate_def_map\n                                                     1851ms - crate_def_map\n                                                         1851ms - compute_crate_def_map\n                                                                1ms - crate_def_map (4021 calls)\n                                                             1783ms - raw_items_query (4014 calls)\n                                                      388ms - crate_def_map (153 calls)\n                                                       27ms - raw_items_query (52 calls)\n                                               25ms - crate_def_map (226 calls)\n                                               39ms - raw_items_query (32 calls)\n                                       37ms - crate_def_map (125 calls)\n                                       18ms - raw_items_query (27 calls)\n                               88ms - crate_def_map (1475 calls)\n                                0ms - enum_data_query (1 calls)\n                              556ms - raw_items_query (1271 calls)\n                     2727ms - crate_def_map\n                         2727ms - compute_crate_def_map\n                             2644ms - crate_def_map (311 calls)\n                                0ms - enum_data_query (1 calls)\n                               81ms - raw_items_query (102 calls)\n                     1508ms - crate_def_map\n                         1508ms - compute_crate_def_map\n                             1229ms - crate_def_map (514 calls)\n                                0ms - enum_data_query (6 calls)\n                              274ms - raw_items_query (233 calls)\n                     4739ms - crate_def_map\n                         4739ms - compute_crate_def_map\n                             1489ms - crate_def_map\n                                 1489ms - compute_crate_def_map\n                                     1296ms - crate_def_map (701 calls)\n                                        0ms - enum_data_query (1 calls)\n                                      188ms - raw_items_query (185 calls)\n                             3168ms - crate_def_map (338 calls)\n                               79ms - raw_items_query (52 calls)\n                     1219ms - crate_def_map\n                         1219ms - compute_crate_def_map\n                             1083ms - crate_def_map (485 calls)\n                                0ms - enum_data_query (5 calls)\n                              132ms - raw_items_query (172 calls)\n                     1239ms - crate_def_map\n                         1239ms - compute_crate_def_map\n                             1123ms - crate_def_map (1133 calls)\n                              111ms - raw_items_query (187 calls)\n                     4581ms - crate_def_map (2064 calls)\n                      270ms - raw_items_query (918 calls)\n        29637ms - Module::diagnostics\n            26839ms - Module::diagnostics\n                23858ms - Function::diagnostics\n                    23858ms - infer\n                        23858ms - do_infer\n                             1715ms - impls_in_crate_query\n                                    3ms - crate_def_map (19472 calls)\n                                 1361ms - parse_macro_query (5080 calls)\n                                   88ms - parse_query (28 calls)\n                             2524ms - impls_in_crate_query\n                                   14ms - crate_def_map (80562 calls)\n                                 2133ms - parse_macro_query (9637 calls)\n                             1078ms - impls_in_crate_query\n                                    4ms - crate_def_map (23053 calls)\n                                  941ms - parse_macro_query (2471 calls)\n                             1475ms - impls_in_crate_query\n                                    1ms - crate_def_map (5371 calls)\n                                 1335ms - parse_macro_query (2995 calls)\n                                   33ms - parse_query (23 calls)\n                             1296ms - trait_solve_query\n                                    0ms - crate_def_map (1184 calls)\n                                 1276ms - impl_datum (601 calls)\n                                    3ms - parse_query (1 calls)\n                                0ms - body_with_source_map_query (1 calls)\n                                0ms - crate_def_map (299 calls)\n                            13755ms - impls_in_crate_query (348 calls)\n                             1055ms - parse_macro_query (3115 calls)\n                              384ms - parse_query (102 calls)\n                              441ms - trait_solve_query (16 calls)\n                 1265ms - Function::diagnostics\n                     1265ms - infer\n                         1265ms - do_infer\n                             1263ms - trait_solve_query\n                                    0ms - crate_def_map (1 calls)\n                                 1257ms - impl_datum (446 calls)\n                                0ms - body_with_source_map_query (1 calls)\n                                0ms - crate_def_map (23 calls)\n                                2ms - trait_solve_query (6 calls)\n                 1715ms - Function::diagnostics (4 calls)\n                    0ms - crate_def_map (3 calls)\n             2746ms - Function::diagnostics\n                 2746ms - infer\n                     2746ms - do_infer\n                         1479ms - trait_solve_query\n                                0ms - crate_def_map (1402 calls)\n                              169ms - impl_datum (5891 calls)\n                               20ms - parse_macro_query (13 calls)\n                             1144ms - parse_query (191 calls)\n                            4ms - body_with_source_map_query (1 calls)\n                            0ms - crate_def_map (392 calls)\n                            1ms - parse_macro_query (4 calls)\n                           21ms - parse_query (6 calls)\n                         1233ms - trait_solve_query (40 calls)\n                8ms - Function::diagnostics (1 calls)\n               42ms - Module::diagnostics (1 calls)\n                0ms - crate_def_map (3 calls)\n        0ms - SourceBinder::analyzer (1 calls)\n        0ms - add_missing_impl_members_inner (2 calls)\n</pre></div>",
        "id": 188401583,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581967559
    },
    {
        "content": "<p>I got another one, with <code>inlay_hints</code> taking 55s: <a href=\"https://gist.github.com/lnicola/1ff7a8e195a82b848517f2d483c77e1f\" target=\"_blank\" title=\"https://gist.github.com/lnicola/1ff7a8e195a82b848517f2d483c77e1f\">https://gist.github.com/lnicola/1ff7a8e195a82b848517f2d483c77e1f</a>. I guess that's fine? But why are they called so many times?</p>",
        "id": 188401971,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581967928
    },
    {
        "content": "<p>That's the first call, right?</p>",
        "id": 188402261,
        "sender_full_name": "matklad",
        "timestamp": 1581968280
    },
    {
        "content": "<p>Yup</p>",
        "id": 188402344,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968362
    },
    {
        "content": "<p>For context: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3057#issuecomment-587122420\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3057#issuecomment-587122420\">https://github.com/rust-analyzer/rust-analyzer/issues/3057#issuecomment-587122420</a>. The gist is from the 75 s run.</p>",
        "id": 188402413,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968423
    },
    {
        "content": "<p>I guess in general this is expected, but <code>4364ms - raw_items_query (11810 calls)</code> does seem odd -- that's 11k files/module-level macros</p>",
        "id": 188402435,
        "sender_full_name": "matklad",
        "timestamp": 1581968457
    },
    {
        "content": "<p>The project uses Rocket, so there might be a lot of them, but 11k seems large.</p>",
        "id": 188402528,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968537
    },
    {
        "content": "<p>And why the 30? <code>rust-analyzer/inlayHints</code> requests on a single file?</p>",
        "id": 188402551,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968574
    },
    {
        "content": "<p>Stupid question: should <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/inlay_hints.rs#L35\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/inlay_hints.rs#L35\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_ide/src/inlay_hints.rs#L35</a> be using <code>descendants</code> here?</p>",
        "id": 188402731,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968803
    },
    {
        "content": "<p>Yep, it should, because we want to visit every node</p>",
        "id": 188402810,
        "sender_full_name": "matklad",
        "timestamp": 1581968889
    },
    {
        "content": "<p>Won't it visit nodes multiple times?</p>",
        "id": 188402828,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581968912
    },
    {
        "content": "<p>it probably makes sense to put the profile call to a more reasonable place though -- it doesn't really make sense to count how many times are we calculating hints for every semicolon</p>",
        "id": 188402834,
        "sender_full_name": "matklad",
        "timestamp": 1581968929
    },
    {
        "content": "<blockquote>\n<p>Won't it visit nodes multiple times?</p>\n</blockquote>\n<p>nope, get_inlay_hints is non-recursive</p>",
        "id": 188402865,
        "sender_full_name": "matklad",
        "timestamp": 1581968993
    },
    {
        "content": "<p><code>get_inlay_hints</code> seems to handle statements, but <code>inlay_hints</code> will visit functions, every statement in a function, and so on</p>",
        "id": 188402949,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581969087
    },
    {
        "content": "<p>Just for a context, after we deal with <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1618\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1618\">https://github.com/rust-analyzer/rust-analyzer/issues/1618</a> , we should be able to throw off the majority of the code there, analyzing the PAT's and a bunch of parent nodes for a few cases only.</p>",
        "id": 188403006,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581969142
    },
    {
        "content": "<p>Ah, I see what you meant. Sorry.</p>",
        "id": 188403328,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581969531
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"231447\">Kirill Bulatov</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/slow.3F/near/188403006\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/slow.3F/near/188403006\">said</a>:</p>\n<blockquote>\n<p>Just for a context, after we deal with <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1618\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1618\">https://github.com/rust-analyzer/rust-analyzer/issues/1618</a> , we should be able to throw off the majority of the code there, analyzing the PAT's and a bunch of parent nodes for a few cases only.</p>\n</blockquote>\n<p>So the code can be simplified now?</p>",
        "id": 188824140,
        "sender_full_name": "Laurențiu",
        "timestamp": 1582389905
    },
    {
        "content": "<p>Yes, hopefully.</p>\n<p>I plan to refactor the code as part of <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3273\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3273\">https://github.com/rust-analyzer/rust-analyzer/issues/3273</a> , if nobody comes with the PR for that before.</p>",
        "id": 188826363,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1582393452
    }
]