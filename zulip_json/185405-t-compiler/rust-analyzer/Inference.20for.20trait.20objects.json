[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> I was thinking why not making <code>&amp;dyn Trait</code> behave like <code>&amp;impl Trait</code> at least for the short term. Of course, this is not how it works but I'm just wondering if we can close that gap this way until the proper support is implemented?</p>",
        "id": 195291007,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587830753
    },
    {
        "content": "<p>you mean the other way around?</p>",
        "id": 195291053,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587830787
    },
    {
        "content": "<p>I don't think it's worth doing, proper <code>impl Trait</code> support in Chalk isn't far off</p>",
        "id": 195291070,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587830834
    },
    {
        "content": "<p>Not sure what you mean by \"other way around\", <code>impl Trait</code> works fine, while <code>dyn Trait</code> doesn't...</p>",
        "id": 195291078,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587830861
    },
    {
        "content": "<p>This is especially palpable since we switched to <code>dyn</code> for <code>salsa::Database</code></p>",
        "id": 195291138,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587830932
    },
    {
        "content": "<p>only argument position <code>impl Trait</code> works fine, return position <code>impl Trait</code> doesn't work at all currently</p>",
        "id": 195291145,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587830957
    },
    {
        "content": "<p>whereas <code>dyn Trait</code> mostly works fine, just is missing super trait support</p>",
        "id": 195291151,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587830979
    },
    {
        "content": "<p>which is something that could just be fixed in Chalk</p>",
        "id": 195291155,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587831000
    },
    {
        "content": "<p>Aha, so this is due to the supertaits...</p>",
        "id": 195291157,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587831002
    },
    {
        "content": "<p>(it's on my list...)</p>",
        "id": 195291198,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587831006
    },
    {
        "content": "<p>So, this is the chalk field of responsibility and we cannot put a gag in our code.</p>",
        "id": 195291213,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587831065
    },
    {
        "content": "<p>it would be harder to work around this in our code than in Chalk</p>",
        "id": 195291877,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587832058
    }
]