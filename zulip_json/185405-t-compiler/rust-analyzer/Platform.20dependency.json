[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> , <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> , though <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3101\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3101\">this one</a> is merged, I'd like to settle which specific architectures and on which os are needed to be filtered out. Maybe we should only allow users with the same os and arch as the one we build on ci?</p>",
        "id": 187942722,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581447873
    },
    {
        "content": "<blockquote>\n<p>Maybe we should only allow users with the same os and arch as the one we build on ci?</p>\n</blockquote>\n<p>That's the point, since the binaries aren't really more portable than that. And if we add support for new targets we can relax the self-update check.</p>\n<p>I guess we could also encode the target in e.g. the release artifact name to automatically get support for them, but it might not be worth the effort.</p>",
        "id": 187943054,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581448117
    },
    {
        "content": "<p>I don't think that we should do automation on selecting the proper binaries from the release right now. The amount of platforms is not so big and we support only a tiny bit of them, though if the list will grow out of control the automation won't be avoidable, but it won't be too hard to implement it.</p>",
        "id": 187943784,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581448646
    },
    {
        "content": "<p>So I guess we need to figure out which arch is used on CI and properly select only 3 <code>(os, arch)</code> tuples to match with.</p>",
        "id": 187944004,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581448770
    },
    {
        "content": "<p>Right?</p>",
        "id": 187944039,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581448786
    },
    {
        "content": "<p>I agree. So we only support Windows/x64, Linux/x64 and Darwin/x64 (or so I assume).</p>",
        "id": 187944043,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581448787
    },
    {
        "content": "<p>Just wanted to ask you on how you figured out which arch we support)</p>",
        "id": 187944161,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581448839
    },
    {
        "content": "<p>I cheated and assumed so. We have binaries for Windows, Mac and Linux, and they must be 64-bit (<code>x86-64</code>, or <code>x64</code> in Node terms)</p>",
        "id": 187944297,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581448915
    },
    {
        "content": "<p>They're built by GitHub Actions: <code>os: [ubuntu-latest, windows-latest, macos-latest]</code></p>",
        "id": 187944405,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581448965
    },
    {
        "content": "<p>I hope <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  will be able to settle the 3 <code>(os, arch)</code> tuples for sure. Otherwise we may just send a nodejs script on ci that logs <code>process.platform</code> and <code>process.arch</code> so that we are 100% sure.</p>",
        "id": 187944485,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1581449004
    },
    {
        "content": "<p>I'm pretty sure they'll be <code>win32</code>, <code>linux</code> and <code>darwin</code> on <code>x64</code></p>",
        "id": 187944715,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581449138
    },
    {
        "content": "<p>(platform and arch)</p>",
        "id": 187944811,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581449177
    }
]