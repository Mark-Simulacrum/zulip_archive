[
    {
        "content": "<p>Hey, is there currently an easy way to profile RA when it runs inside as Vscode extension?<br>\nCompletion taking huge amount of time and I would like too look into it :)</p>",
        "id": 174144651,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566828592
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling\">https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling</a></p>",
        "id": 174144805,
        "sender_full_name": "matklad",
        "timestamp": 1566828673
    },
    {
        "content": "<p>Note that the <em>first</em> completion is expected to be slow, as we don't store analysis results to disk yet</p>",
        "id": 174144832,
        "sender_full_name": "matklad",
        "timestamp": 1566828703
    },
    {
        "content": "<p>subsequents completions should be more or less instant</p>",
        "id": 174144848,
        "sender_full_name": "matklad",
        "timestamp": 1566828715
    },
    {
        "content": "<p>Where does it print the profiling output?</p>",
        "id": 174144962,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566828784
    },
    {
        "content": "<p>When I have a workspace, will the first completion be slow in every crate or just for the whole workspace?</p>",
        "id": 174145106,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566828863
    },
    {
        "content": "<p>To stderr</p>",
        "id": 174145224,
        "sender_full_name": "matklad",
        "timestamp": 1566828949
    },
    {
        "content": "<p>it should be visible in the <code>Output</code> pane of vs code</p>",
        "id": 174145232,
        "sender_full_name": "matklad",
        "timestamp": 1566828960
    },
    {
        "content": "<blockquote>\n<p>When I have a workspace, will the first completion be slow in every crate or just for the whole workspace?</p>\n</blockquote>\n<p>In the first crate it would be the slowest one, as it would need to analyse stdlib. First completions in other crates would be much faster, but still can trigger analysis of new crates</p>",
        "id": 174145325,
        "sender_full_name": "matklad",
        "timestamp": 1566829012
    },
    {
        "content": "<p>So, I now had one completion and just tried again to get the same completion in the same file. It again takes some time :D</p>",
        "id": 174145395,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829070
    },
    {
        "content": "<p>That does sound like a bug!</p>",
        "id": 174145485,
        "sender_full_name": "matklad",
        "timestamp": 1566829099
    },
    {
        "content": "<p>And now I'm at 11% RAM(32GB) usage.</p>",
        "id": 174145523,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829126
    },
    {
        "content": "<p>Okay, when I write <code>self.</code> press <code>ctrl  + space</code> it shows the result after some time</p>",
        "id": 174145560,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829148
    },
    {
        "content": "<p>High RAM usage is sort of expected at the moment, unfortunatelly</p>",
        "id": 174145571,
        "sender_full_name": "matklad",
        "timestamp": 1566829158
    },
    {
        "content": "<p>Second time <code>ctrl  + space</code> the result is instant</p>",
        "id": 174145579,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829166
    },
    {
        "content": "<p>could you show what RA_PROF gives?</p>",
        "id": 174145582,
        "sender_full_name": "matklad",
        "timestamp": 1566829170
    },
    {
        "content": "<p>But if I remove the <code>.</code> and add the <code>.</code> again it takes again some time to build</p>",
        "id": 174145597,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829181
    },
    {
        "content": "<p>I have started vscode like: <code>RA_PROFILE=* code</code></p>",
        "id": 174145713,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829239
    },
    {
        "content": "<p>But I don't see any profiling output in the output pane</p>",
        "id": 174145732,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566829255
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/qhyQfg5lNCvLVl8H4trUHLo6/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/qhyQfg5lNCvLVl8H4trUHLo6/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/qhyQfg5lNCvLVl8H4trUHLo6/pasted_image.png\"></a></div>",
        "id": 174145956,
        "sender_full_name": "matklad",
        "timestamp": 1566829390
    },
    {
        "content": "<p>So that's the pane I am talking about</p>",
        "id": 174145974,
        "sender_full_name": "matklad",
        "timestamp": 1566829400
    },
    {
        "content": "<p>if it is empty, that could mean that you are using some very old version of rust-analyzer that doesn't have profilng enabled?</p>",
        "id": 174146000,
        "sender_full_name": "matklad",
        "timestamp": 1566829420
    },
    {
        "content": "<p>I did now know that there are multiple outputs you can select at the right side <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>  Sorry!</p>",
        "id": 174147876,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566830860
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>&#39;, /build/rust-analyzer-0c35d82329bc0952bd179ec37933c0955fd5ed26-vendor/salsa/src/runtime.rs:424:9\nstack backtrace:\n   0: std::sys_common::backtrace::print\n   1: std::panicking::default_hook::{{closure}}\n   2: std::panicking::default_hook\n   3: std::panicking::rust_panic_with_hook\n   4: std::panicking::begin_panic\n   5: salsa::runtime::Runtime&lt;DB&gt;::report_unexpected_cycle\n   6: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir_path\n   7: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir\n   8: ra_hir::ty::lower::type_for_def\n   9: salsa::runtime::Runtime&lt;DB&gt;::execute_query_implementation\n  10: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read_upgrade\n  11: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read\n  12: &lt;salsa::derived::DerivedStorage&lt;DB,Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;DB,Q&gt;&gt;::try_fetch\n  13: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir_path\n  14: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir\n  15: ra_hir::ty::infer::infer_query\n  16: salsa::runtime::Runtime&lt;DB&gt;::execute_query_implementation\n  17: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read_upgrade\n  18: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read\n  19: &lt;salsa::derived::DerivedStorage&lt;DB,Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;DB,Q&gt;&gt;::try_fetch\n  20: ra_hir::source_binder::SourceAnalyzer::new\n  21: &lt;ra_syntax::algo::visit::Vis&lt;V,N,F&gt; as ra_syntax::algo::visit::Visitor&gt;::accept\n  22: ra_ide_api::inlay_hints::get_inlay_hints\n  23: &lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next\n  24: &lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter\n  25: std::panicking::try::do_call\n  26: __rust_maybe_catch_panic\n  27: ra_db::CheckCanceled::catch_canceled\n  28: ra_ide_api::Analysis::inlay_hints\n  29: ra_lsp_server::main_loop::handlers::handle_inlay_hints\n  30: &lt;F as threadpool::FnBox&gt;::call_box\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n          0ms - infer_query\n          0ms - main_loop_inner/loop-turn\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;Internal error, cycle detected:\n- __SalsaDatabaseKey { kind: HirDatabaseStorage(type_for_def((TypeAlias(TypeAlias { id: TypeAliasId(12441) }), Types))) }\n\n&#39;, /build/rust-analyzer-0c35d82329bc0952bd179ec37933c0955fd5ed26-vendor/salsa/src/runtime.rs:424:9\nstack backtrace:\n   0: std::sys_common::backtrace::print\n   1: std::panicking::default_hook::{{closure}}\n   2: std::panicking::default_hook\n   3: std::panicking::rust_panic_with_hook\n   4: std::panicking::begin_panic\n   5: salsa::runtime::Runtime&lt;DB&gt;::report_unexpected_cycle\n   6: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir_path\n   7: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir\n   8: ra_hir::ty::lower::type_for_def\n   9: salsa::runtime::Runtime&lt;DB&gt;::execute_query_implementation\n  10: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read_upgrade\n  11: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read\n  12: &lt;salsa::derived::DerivedStorage&lt;DB,Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;DB,Q&gt;&gt;::try_fetch\n  13: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir_path\n  14: ra_hir::ty::lower::&lt;impl ra_hir::ty::Ty&gt;::from_hir\n  15: ra_hir::ty::infer::infer_query\n  16: salsa::runtime::Runtime&lt;DB&gt;::execute_query_implementation\n  17: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read_upgrade\n  18: salsa::derived::slot::Slot&lt;DB,Q,MP&gt;::read\n  19: &lt;salsa::derived::DerivedStorage&lt;DB,Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;DB,Q&gt;&gt;::try_fetch\n  20: ra_hir::source_binder::SourceAnalyzer::new\n  21: &lt;ra_syntax::algo::visit::Vis&lt;V,N,F&gt; as ra_syntax::algo::visit::Visitor&gt;::accept\n  22: ra_ide_api::inlay_hints::get_inlay_hints\n  23: &lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next\n  24: &lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter\n  25: std::panicking::try::do_call\n  26: __rust_maybe_catch_panic\n  27: ra_db::CheckCanceled::catch_canceled\n  28: ra_ide_api::Analysis::inlay_hints\n  29: ra_lsp_server::main_loop::handlers::handle_inlay_hints\n  30: &lt;F as threadpool::FnBox&gt;::call_box\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n          1ms - infer_query\n          0ms - main_loop_inner/loop-turn\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;Internal error, cycle detected:\n- __SalsaDatabaseKey { kind: HirDatabaseStorage(type_for_def((TypeAlias(TypeAlias { id: TypeAliasId(12441) }), Types))) }\n</pre></div>",
        "id": 174147957,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566830898
    },
    {
        "content": "<p>Is this expected?</p>",
        "id": 174147970,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566830910
    },
    {
        "content": "<p>Not really. There's a known bug about not handling cycles properly, but I think it shouldn't be triggered for type aliass</p>",
        "id": 174148066,
        "sender_full_name": "matklad",
        "timestamp": 1566830996
    },
    {
        "content": "<p>Sorry for the delay:</p>",
        "id": 174155836,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566836473
    },
    {
        "content": "<p><a href=\"https://pastebin.com/WR3rqdZX\" target=\"_blank\" title=\"https://pastebin.com/WR3rqdZX\">https://pastebin.com/WR3rqdZX</a></p>",
        "id": 174155870,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566836518
    },
    {
        "content": "<p>After removing and adding <code>.</code> I get this:<br>\n<a href=\"https://paste.ee/p/NNOvv\" target=\"_blank\" title=\"https://paste.ee/p/NNOvv\">https://paste.ee/p/NNOvv</a></p>",
        "id": 174156096,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566836711
    },
    {
        "content": "<blockquote>\n<p>9549ms - trait_solve_query</p>\n</blockquote>\n<p>yeah, seems like \"chalk is slow\" problem</p>",
        "id": 174156196,
        "sender_full_name": "matklad",
        "timestamp": 1566836801
    },
    {
        "content": "<p>I guess we should maybe put  the fuel back in <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> ?</p>",
        "id": 174156216,
        "sender_full_name": "matklad",
        "timestamp": 1566836825
    },
    {
        "content": "<p><span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span></p>",
        "id": 174156929,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1566837449
    },
    {
        "content": "<p>but yeah</p>",
        "id": 174156940,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1566837462
    },
    {
        "content": "<p>Okay :) No stress! Do you need the code?^^</p>",
        "id": 174159483,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566839579
    },
    {
        "content": "<p>What is a sensible default value for the LRU cache size?</p>",
        "id": 174161811,
        "sender_full_name": "Bastian Köcher",
        "timestamp": 1566841455
    },
    {
        "content": "<p>Default value is sensible enough. There’s no super huge gains to be had from larger LRU, I use twice the default just because</p>",
        "id": 174163485,
        "sender_full_name": "matklad",
        "timestamp": 1566842816
    }
]