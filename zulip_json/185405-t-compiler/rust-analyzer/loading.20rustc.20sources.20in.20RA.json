[
    {
        "content": "<p>Hi, is there a better solution than <code>cfg(NOT_A_PLATFORM)</code> to load rustc sources in RA? It makes things non-portable and hard to share. If there's a config file i where i could give RA additional loadpaths that would solve all my problems (I could keep it out of git)</p>",
        "id": 216257097,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605034576
    },
    {
        "content": "<p>also thanks for the work! I'm a recent convert but it's been a great experience so far!</p>",
        "id": 216257183,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605034602
    },
    {
        "content": "<p>since my project is a rustc driver, I really need RA to find those crates (or it becomes useless) but having them in cargo.toml means I can't use CI or really ever have other contributors</p>",
        "id": 216257589,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605034785
    },
    {
        "content": "<p>I am not aware about any hacks for supporting rustc driver use-case</p>",
        "id": 216260290,
        "sender_full_name": "matklad",
        "timestamp": 1605035854
    },
    {
        "content": "<p>but that should be moderately easy to  support</p>",
        "id": 216260329,
        "sender_full_name": "matklad",
        "timestamp": 1605035872
    },
    {
        "content": "<p>in <code>project_model</code>, we need to have a sepaate codepath to run <code>cargo metadata</code> on rustc's checkout, and plug that into crate graph</p>",
        "id": 216260403,
        "sender_full_name": "matklad",
        "timestamp": 1605035897
    },
    {
        "content": "<p>I think my usecase is the same as anyone that wants to refer to an <code>extern crate</code> honestly</p>",
        "id": 216260983,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036175
    },
    {
        "content": "<p>I mean, for typical use-cases <code>cargo metadata</code> just works</p>",
        "id": 216261113,
        "sender_full_name": "matklad",
        "timestamp": 1605036240
    },
    {
        "content": "<p>hmm right but that's derived from the Cargo.toml</p>",
        "id": 216261245,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036290
    },
    {
        "content": "<p>i wish that having the <code>rustc-dev</code> component would make those crates visible like normal ones...</p>",
        "id": 216261326,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036331
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/loading.20rustc.20sources.20in.20RA/near/216260403\">said</a>:</p>\n<blockquote>\n<p>in <code>project_model</code>, we need to have a sepaate codepath to run <code>cargo metadata</code> on rustc's checkout, and plug that into crate graph</p>\n</blockquote>\n<p>this still comes back to how do you tell RA where the checkout is</p>",
        "id": 216261456,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036378
    },
    {
        "content": "<p>I tried using the <code>linkedProjects</code> functionality but it seems like it treats all the linked projects as actual parts of the project</p>",
        "id": 216261517,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036414
    },
    {
        "content": "<p>so the indexed crates went up from ~500 to 1700</p>",
        "id": 216261537,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036424
    },
    {
        "content": "<p>I mean, you need to write some code inside rust-analyzer to support this use-case</p>",
        "id": 216261561,
        "sender_full_name": "matklad",
        "timestamp": 1605036440
    },
    {
        "content": "<p>it's not only the matter of telling ra where the crates are, you also need to explain that your crate depend on rustc's crate</p>",
        "id": 216261638,
        "sender_full_name": "matklad",
        "timestamp": 1605036473
    },
    {
        "content": "<p>there's no sysroot in ra, all deps are explicit</p>",
        "id": 216261653,
        "sender_full_name": "matklad",
        "timestamp": 1605036481
    },
    {
        "content": "<p>im happy to write code to make this happen!</p>",
        "id": 216261722,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036496
    },
    {
        "content": "<p>So, there are two bits where this needs to be handled</p>",
        "id": 216261981,
        "sender_full_name": "matklad",
        "timestamp": 1605036607
    },
    {
        "content": "<p>(beyond threading various configs)</p>",
        "id": 216262000,
        "sender_full_name": "matklad",
        "timestamp": 1605036613
    },
    {
        "content": "<p>This thing runs <code>cargo metadata</code> on your project, to learn about deps: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5c06e820fa02b47a1550576f2a7071ff94fb0c64/crates/project_model/src/lib.rs#L157-L161\">https://github.com/rust-analyzer/rust-analyzer/blob/5c06e820fa02b47a1550576f2a7071ff94fb0c64/crates/project_model/src/lib.rs#L157-L161</a></p>",
        "id": 216262042,
        "sender_full_name": "matklad",
        "timestamp": 1605036637
    },
    {
        "content": "<p>You need to teach it to <em>also</em> run metadata on rustc_private crates</p>",
        "id": 216262062,
        "sender_full_name": "matklad",
        "timestamp": 1605036652
    },
    {
        "content": "<p>I think the way to do that is to add a <code>rustc_source: Option&lt;AbsPathBuf&gt;</code> field to <code>CargoConfig</code> and then do the stuff</p>",
        "id": 216262130,
        "sender_full_name": "matklad",
        "timestamp": 1605036688
    },
    {
        "content": "<p>k seems reasonable</p>",
        "id": 216262137,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036692
    },
    {
        "content": "<p>The second bit is this 120-lines long match arm :D</p>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5c06e820fa02b47a1550576f2a7071ff94fb0c64/crates/project_model/src/lib.rs#L368-L486\">https://github.com/rust-analyzer/rust-analyzer/blob/5c06e820fa02b47a1550576f2a7071ff94fb0c64/crates/project_model/src/lib.rs#L368-L486</a></p>",
        "id": 216262263,
        "sender_full_name": "matklad",
        "timestamp": 1605036732
    },
    {
        "content": "<p>Here, we lower cargo-metadata representation to our internal <code>CrateGraph</code>, which makes all the deps explicit</p>",
        "id": 216262321,
        "sender_full_name": "matklad",
        "timestamp": 1605036757
    },
    {
        "content": "<p>Here, you'd need to graft rustc's crate onto vanila cargo metadata</p>",
        "id": 216262408,
        "sender_full_name": "matklad",
        "timestamp": 1605036792
    },
    {
        "content": "<p>k well i'll go work on that right now</p>",
        "id": 216262690,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605036922
    },
    {
        "content": "<p>hmm what's the best way to discover the path for the rustc-dev component...</p>",
        "id": 216263275,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037163
    },
    {
        "content": "<p>RA doesn't assume things were installed from rustup does it?</p>",
        "id": 216263293,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037173
    },
    {
        "content": "<blockquote>\n<p>hmm what's the best way to discover the path for the rustc-dev component...</p>\n</blockquote>\n<p>I'd go just for a value in configuration file</p>",
        "id": 216263420,
        "sender_full_name": "matklad",
        "timestamp": 1605037213
    },
    {
        "content": "<p>You need some config to opt-in into this value anyway, so might as well require the user to supply the full path</p>",
        "id": 216263468,
        "sender_full_name": "matklad",
        "timestamp": 1605037233
    },
    {
        "content": "<p>yea, that's fine but that value can't be in <code>Cargo.toml</code></p>",
        "id": 216263504,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037261
    },
    {
        "content": "<p>or it's self-defeating</p>",
        "id": 216263520,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037268
    },
    {
        "content": "<p>I mean, it should work just all the other configs</p>",
        "id": 216263551,
        "sender_full_name": "matklad",
        "timestamp": 1605037286
    },
    {
        "content": "<p>Take a look how <code>CargoConfig</code> is populated</p>",
        "id": 216263566,
        "sender_full_name": "matklad",
        "timestamp": 1605037294
    },
    {
        "content": "<p>(in <code>config.rs</code>)</p>",
        "id": 216263578,
        "sender_full_name": "matklad",
        "timestamp": 1605037300
    },
    {
        "content": "<p>yea that's what im reading rn</p>",
        "id": 216263583,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037302
    },
    {
        "content": "<p>RA works fine on this project ;)</p>",
        "id": 216263597,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037313
    },
    {
        "content": "<p>(yet again I need someone to implement <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/2549\">https://github.com/rust-analyzer/rust-analyzer/issues/2549</a> :D )</p>",
        "id": 216263658,
        "sender_full_name": "matklad",
        "timestamp": 1605037328
    },
    {
        "content": "<p>aha yea i was just thinking how useful that would be</p>",
        "id": 216263751,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605037378
    },
    {
        "content": "<p>hmm is it wrong of me to load the rustc compiler into a <code>CargoWorkspace</code> ?</p>",
        "id": 216279918,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045219
    },
    {
        "content": "<p>or should I really manually iterate over the crates in the <code>compiler/</code> directory and manually build the graph entries?</p>",
        "id": 216279983,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045244
    },
    {
        "content": "<p>it seems like running <code>cargo metadata</code> anywhere in the workspace returns the same info (which I guess is expected)</p>",
        "id": 216280103,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045316
    },
    {
        "content": "<p>Loading it into CargoWOrkspace seems correct</p>",
        "id": 216280287,
        "sender_full_name": "matklad",
        "timestamp": 1605045410
    },
    {
        "content": "<p>So, you'll have something like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[derive(Clone, Eq, PartialEq)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">ProjectWorkspace</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"sd\">/// Project workspace was discovered by running `cargo metadata` and `rustc --print sysroot`.</span>\n<span class=\"w\">    </span><span class=\"n\">Cargo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">cargo</span>: <span class=\"nc\">CargoWorkspace</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sysroot</span>: <span class=\"nc\">Sysroot</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rustc</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">CargoWorkspace</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"sd\">/// Project workspace was manually specified using a `rust-project.json` file.</span>\n<span class=\"w\">    </span><span class=\"n\">Json</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">project</span>: <span class=\"nc\">ProjectJson</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sysroot</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Sysroot</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 216280353,
        "sender_full_name": "matklad",
        "timestamp": 1605045458
    },
    {
        "content": "<p>yep!</p>",
        "id": 216280590,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045602
    },
    {
        "content": "<p>i got all of that working but it seems to load WAY too many packages now</p>",
        "id": 216280644,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045614
    },
    {
        "content": "<p>~2307</p>",
        "id": 216280659,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045626
    },
    {
        "content": "<p>Well, <code>rustc</code> is big :-)</p>",
        "id": 216280671,
        "sender_full_name": "matklad",
        "timestamp": 1605045633
    },
    {
        "content": "<p>previously using the <code>NOT_A_TARGET</code> hack it was around ~400</p>",
        "id": 216280696,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045640
    },
    {
        "content": "<p>Although, yeah, 2307 seems a bit too much</p>",
        "id": 216280704,
        "sender_full_name": "matklad",
        "timestamp": 1605045643
    },
    {
        "content": "<p>around 400 sounds closer to right, yeah</p>",
        "id": 216280723,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605045653
    },
    {
        "content": "<p>is it maybe loading some packages twice?</p>",
        "id": 216280737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605045658
    },
    {
        "content": "<p>which is weird cuz the <code>cargo metadata</code> is ~400</p>",
        "id": 216280750,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/loading.20rustc.20sources.20in.20RA/near/216280737\">said</a>:</p>\n<blockquote>\n<p>is it maybe loading some packages twice?</p>\n</blockquote>\n<p>sounds probable... what's the best way to see all the packages that were loaded?</p>",
        "id": 216280794,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045695
    },
    {
        "content": "<p>I like <code>jq</code> :P</p>",
        "id": 216280904,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605045750
    },
    {
        "content": "<blockquote>\n<p>sounds probable... what's the best way to see all the packages that were loaded?</p>\n</blockquote>\n<p>probably just <code>dbg!(workspace)</code>?</p>",
        "id": 216280946,
        "sender_full_name": "matklad",
        "timestamp": 1605045771
    },
    {
        "content": "<p>there's also some logging this this module, but I don't think we dump the whole projst structure anywahre</p>",
        "id": 216281020,
        "sender_full_name": "matklad",
        "timestamp": 1605045806
    },
    {
        "content": "<p>yea the logs just go by so fast</p>",
        "id": 216281170,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605045888
    },
    {
        "content": "<p>You need to filter by module to get any kind of useful logs</p>",
        "id": 216281264,
        "sender_full_name": "matklad",
        "timestamp": 1605045956
    },
    {
        "content": "<p>otherwise, you'll be swamped with chalk/salsa output</p>",
        "id": 216281312,
        "sender_full_name": "matklad",
        "timestamp": 1605045964
    },
    {
        "content": "<p>Just saw the PR, its on the right track!</p>",
        "id": 216281429,
        "sender_full_name": "matklad",
        "timestamp": 1605046051
    },
    {
        "content": "<p>just need to get it working!</p>",
        "id": 216281645,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605046112
    },
    {
        "content": "<p>The tricky part, yeah</p>",
        "id": 216281701,
        "sender_full_name": "matklad",
        "timestamp": 1605046150
    },
    {
        "content": "<p>interesting.... the workspace has the correct number of entries (488)</p>",
        "id": 216281931,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605046282
    },
    {
        "content": "<p>anyways... time to debug!</p>",
        "id": 216282070,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605046356
    },
    {
        "content": "<p>yea that's what I thought the problem is the <code>crate x target</code> multiplication</p>",
        "id": 216283131,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605046995
    },
    {
        "content": "<p>i just need to rule out non-current targets and it should be good</p>",
        "id": 216283246,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605047047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312719\">@Xavier Denis</span> yeah, there's similar logic in that we only create library targets for non-current-ws crates</p>",
        "id": 216283431,
        "sender_full_name": "matklad",
        "timestamp": 1605047164
    },
    {
        "content": "<p>yea im skipping all targets other than lib and that seems to fix it</p>",
        "id": 216283934,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605047518
    },
    {
        "content": "<p>I'll refactor everything tomorrow morning and push a revised PR</p>",
        "id": 216283996,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605047540
    },
    {
        "content": "<p>ok i have a _janky_ version that works locally! i'll clean it up in the AM but hey! it works!</p>",
        "id": 216287692,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605049871
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 216288735,
        "sender_full_name": "matklad",
        "timestamp": 1605050684
    },
    {
        "content": "<p>ok, i tried cleaning it up a bit, not sure about how testing works for something like this</p>",
        "id": 216337071,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1605096381
    }
]