[
    {
        "content": "<p>I am switching from std benchmarking to criterion, and rust analyzer is freaking out and marking everything with a red underline </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">\"resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/c:/Users/finkelman/Documents/MyProjects/pubgrub-rs/benches/large_case.rs\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"owner\"</span><span class=\"p\">:</span> <span class=\"s2\">\"rustc\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"E0601\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"severity\"</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"`main` function not found in crate `large_case`\\nconsider adding a `main` function to `benches\\\\large_case.rs`\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"s2\">\"rustc\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"startLineNumber\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"startColumn\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"endLineNumber\"</span><span class=\"p\">:</span> <span class=\"mi\">39</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"endColumn\"</span><span class=\"p\">:</span> <span class=\"mi\">26</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>main is provided by <code>criterion_main</code></p>",
        "id": 214068061,
        "sender_full_name": "Eh2406",
        "timestamp": 1603294440
    },
    {
        "content": "<p>Is this a known issue?</p>",
        "id": 214068133,
        "sender_full_name": "Eh2406",
        "timestamp": 1603294463
    },
    {
        "content": "<p>I think it works for me:</p>\n<p><a href=\"/user_uploads/4715/BIjrrbwA79zDu669E5HI4FKv/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/BIjrrbwA79zDu669E5HI4FKv/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/BIjrrbwA79zDu669E5HI4FKv/image.png\"></a></div>",
        "id": 214069116,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603294853
    },
    {
        "content": "<p>Hmmm... that is odd.</p>",
        "id": 214069329,
        "sender_full_name": "Eh2406",
        "timestamp": 1603294935
    },
    {
        "content": "<p>Got it! My benchmarks use serde which is an optional feature. So I added <code>#![cfg(feature = \"serde\")]</code><br>\nThat is what triggers it</p>",
        "id": 214069575,
        "sender_full_name": "Eh2406",
        "timestamp": 1603295039
    },
    {
        "content": "<p>Does putting that on the <code>criterion_group!</code> work?</p>",
        "id": 214069814,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603295139
    },
    {
        "content": "<p>Because it's certainly missing <code>main</code> if you put it on the whole file and the feature is disabled</p>",
        "id": 214069921,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603295172
    },
    {
        "content": "<p>Right makes sense.</p>",
        "id": 214069964,
        "sender_full_name": "Eh2406",
        "timestamp": 1603295194
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg(not(feature = </span><span class=\"s\">\"serde\"</span><span class=\"cp\">))]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">eprintln</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"please run benmarks with --all-features\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Thanks for the help!</p>",
        "id": 214070248,
        "sender_full_name": "Eh2406",
        "timestamp": 1603295318
    },
    {
        "content": "<p>You can also put the feature in <code>rust-analyzer.cargo.features</code></p>",
        "id": 214070270,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603295333
    },
    {
        "content": "<p>this way a new contributor that runs <code>cargo bench</code> will get a helpful error message.</p>",
        "id": 214070570,
        "sender_full_name": "Eh2406",
        "timestamp": 1603295448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span> isn't this the job for <code>required-features</code> feature of Cargo?</p>",
        "id": 214093828,
        "sender_full_name": "matklad",
        "timestamp": 1603304958
    },
    {
        "content": "<p>Grate point!</p>",
        "id": 214094086,
        "sender_full_name": "Eh2406",
        "timestamp": 1603305087
    }
]