[
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  this PR needs you <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3954\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3954\">https://github.com/rust-analyzer/rust-analyzer/pull/3954</a> ðŸ¥° can you provide me some information or your thoughts about my proposal ? I had also another idea, maybe I can not disable sortText when there is some characters after the dot for autocompletion. It will limit risks. What do you think ?</p>",
        "id": 194767756,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587453477
    },
    {
        "content": "<p>Thanks for the review. Can you let me know which tool do you use to make your gif demo of new features in rust-analyzer ? It's awesome</p>",
        "id": 194817369,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587482187
    },
    {
        "content": "<p>peek</p>",
        "id": 194817560,
        "sender_full_name": "matklad",
        "timestamp": 1587482282
    },
    {
        "content": "<p>(sorry for the long review roundtrips and pretty short reviews. I've been swamped as of lately. Probably will be for the forseeable future as well :) )</p>",
        "id": 194817681,
        "sender_full_name": "matklad",
        "timestamp": 1587482319
    },
    {
        "content": "<p>No worry ! Your work is incredible and I know you're very busy ! Thanks for all :)</p>",
        "id": 194817976,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587482413
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/p7ArrN2s1v22eAVQ5lFuyfJe/ra_autocomplete.gif\" title=\"ra_autocomplete.gif\">ra_autocomplete.gif</a> Here is the behavior with a simple example</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/p7ArrN2s1v22eAVQ5lFuyfJe/ra_autocomplete.gif\" title=\"ra_autocomplete.gif\"><img src=\"/user_uploads/4715/p7ArrN2s1v22eAVQ5lFuyfJe/ra_autocomplete.gif\"></a></div>",
        "id": 194821376,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587483786
    },
    {
        "content": "<p>Looks awesome, but I'd like to suggest to have a feature toggle for this one (if it doesn't already exit).<br>\nThe tool is screencast mode:<br>\n<a href=\"/user_uploads/4715/3pCWfTDCkYoYyV_z4FFZqm_n/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/3pCWfTDCkYoYyV_z4FFZqm_n/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/3pCWfTDCkYoYyV_z4FFZqm_n/image.png\"></a></div>",
        "id": 194826463,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587485957
    },
    {
        "content": "<p>About this PR <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\">https://github.com/rust-analyzer/rust-analyzer/pull/4043</a> is anyone to help me find a way to fetch tail expressions easily ? Or redirect me to an example where it's already used ?</p>",
        "id": 194903787,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587545930
    },
    {
        "content": "<p>I think right now we have no easy way of finding all tail expressions, so you probably have to walk through the syntax tree and handle it based on the syntax nodes. The <code>match_ast</code> macro could come in handy there though.</p>",
        "id": 194914502,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587553064
    },
    {
        "content": "<p>I imagine we might need something like it for some analyses later, but we don't have them yet</p>",
        "id": 194915482,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587553830
    },
    {
        "content": "<p>Ok thank you. I started to write a function to fetch it. Not so easy but at least I know that I'm not rewriting this instead of using an existing function.</p>",
        "id": 194915889,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587554179
    },
    {
        "content": "<p>although I wonder how much the assist should really go into expressions -- it's not clear whether turning <code>if x { foo } else { bar }</code> into <code>if x { Ok(foo) } else { Ok(bar) }</code> or <code>Ok(if x { foo } else { bar })</code> is better <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<p>apart from that, finding <code>return</code> expressions is important though</p>",
        "id": 194920795,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587557623
    },
    {
        "content": "<p>But not <code>return</code> expressions in closures or inner functions. Also,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">break</span><span class=\"w\"> </span><span class=\"mi\">42</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 194921469,
        "sender_full_name": "LaurenÈ›iu",
        "timestamp": 1587558032
    },
    {
        "content": "<p>Yes already thought about that. For now I think it's better to go deeper instead of just returing <code>Ok(if...)</code>. I'm not so far. I have some issues with pattern with a tail expression like a match for example and inside this match a return expression lol</p>",
        "id": 194929945,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587562182
    },
    {
        "content": "<p>example: </p>\n<div class=\"codehilite\"><pre><span></span>fn foo() -&gt; i32 {\n                let my_var = 5;\n                match my_var {\n                    5 =&gt; {\n                        if true {\n                            42i32\n                        } else {\n                            25i32\n                        }\n                    },\n                    _ =&gt; {\n                        let test = &quot;test&quot;;\n                        if test == &quot;test&quot; {\n                            return 24i32;\n                        }\n                        53i32\n                    },\n                }\n            }\n</pre></div>",
        "id": 194930039,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587562210
    },
    {
        "content": "<p>Not sure if this applies to this case, but I think when there are many valid results of an assist and the decision is a question of style, it makes sense to implement the easiest version and add another assist for converting between the different versions (example: generating qualified paths or adding a <code>use</code> statement &amp; generating unqualified paths)</p>",
        "id": 194931721,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587562917
    },
    {
        "content": "<p>I think we did talk about having assists that move the <code>Ok</code> around as well, yeah</p>",
        "id": 194936757,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1587564849
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/auEN0ijqr9NGKgajIwKgaMFA/ok_wrapper.gif\" title=\"ok_wrapper.gif\">ok_wrapper.gif</a> I updated the PR, here is an example :)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/auEN0ijqr9NGKgajIwKgaMFA/ok_wrapper.gif\" title=\"ok_wrapper.gif\"><img src=\"/user_uploads/4715/auEN0ijqr9NGKgajIwKgaMFA/ok_wrapper.gif\"></a></div>",
        "id": 194955729,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587572425
    },
    {
        "content": "<p>That looks nice!</p>",
        "id": 194958809,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1587573962
    },
    {
        "content": "<p>bike shed: I think the label should be similar to \"Wrap with Ok\" or \"Wrap return value with Ok\" instead of \"Make...\"</p>",
        "id": 194959041,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1587574078
    },
    {
        "content": "<p>I'd suggest \"Change return type to Result\"</p>",
        "id": 194960335,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1587574677
    },
    {
        "content": "<p>good point</p>",
        "id": 194963884,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1587576117
    },
    {
        "content": "<p>Yes for the function name and the label I was counting on you to make proposals haha</p>",
        "id": 194964931,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587576578
    },
    {
        "content": "<p>If you have time to take a look, this one <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3954\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3954\">https://github.com/rust-analyzer/rust-analyzer/pull/3954</a> is ready to review.<br>\nAnd also this one <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\">https://github.com/rust-analyzer/rust-analyzer/pull/4043</a></p>",
        "id": 195107838,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587669884
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  let me know how can I help you to make the task easier for you to review this kind of PR <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4043\">https://github.com/rust-analyzer/rust-analyzer/pull/4043</a> ? Maybe I can add a better explanation about the implementation ? Let me know :)</p>",
        "id": 195428706,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1587999188
    }
]