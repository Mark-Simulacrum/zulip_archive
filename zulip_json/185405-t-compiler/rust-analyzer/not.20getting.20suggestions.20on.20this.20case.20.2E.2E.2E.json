[
    {
        "content": "<p>Hi, rust-analyzer on vim with my configuration is not showing suggesting in a case like ...</p>",
        "id": 217762789,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606229154
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">some_char_vec</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">some_string</span><span class=\"p\">.</span><span class=\"n\">chars</span><span class=\"p\">().</span><span class=\"n\">collect</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">some_char_vec</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 217762903,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606229191
    },
    {
        "content": "<p>when I write <code>some_char_vec.</code> I don't get anything</p>",
        "id": 217762926,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606229203
    },
    {
        "content": "<p>I'm not sure if this is a limitation, a problem in my configuration or something</p>",
        "id": 217762959,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606229216
    },
    {
        "content": "<p>that should very much work. Do you get suggestions for other standard library types? Since the type is explicitly specified, this can't really be a type inference problem, so the only reason this could fail is if <code>Vec</code> doesn't resolve</p>",
        "id": 217765404,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1606230254
    },
    {
        "content": "<p>I do get suggestions yeah for other standard library types</p>",
        "id": 217765582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606230351
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/mUHF0rTJfAhgPMCUw2ckcUg5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/mUHF0rTJfAhgPMCUw2ckcUg5/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/mUHF0rTJfAhgPMCUw2ckcUg5/image.png\"></a></div>",
        "id": 217765809,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606230457
    },
    {
        "content": "<p><code>some_char_vec.</code> doesn't return anything</p>",
        "id": 217765842,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606230480
    },
    {
        "content": "<p>that's really weird. does go to definition work on <code>Vec</code>?</p>",
        "id": 217765982,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1606230537
    },
    {
        "content": "<p>I was seeing an issue earlier where this happened and my log was spammed with warning messages from the client saying that it did not expect a command (vscode client side code action stuff)</p>",
        "id": 217770013,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1606232270
    },
    {
        "content": "<p>It went away after I restarted r-a</p>",
        "id": 217770030,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1606232277
    },
    {
        "content": "<p>to be honest I have no idea</p>",
        "id": 217807714,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606248863
    },
    {
        "content": "<p>I'm switching to <code>LanguageClient-neovim</code></p>",
        "id": 217807732,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1606248876
    }
]