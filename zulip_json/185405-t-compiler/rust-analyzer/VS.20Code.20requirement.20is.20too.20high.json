[
    {
        "content": "<blockquote>\n<p>Unable to install extension 'matklad.rust-analyzer' as it is not compatible with VS Code '1.51.1'.</p>\n</blockquote>\n<p>Why are we bumping the VS Code requirement so aggressively? NixOS is still on 1.51.1, so using rust-analyzer master is impossible there.</p>",
        "id": 220570564,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1608546704
    },
    {
        "content": "<p>CC <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/6779\">https://github.com/rust-analyzer/rust-analyzer/pull/6779</a></p>",
        "id": 220571080,
        "sender_full_name": "Laurențiu",
        "timestamp": 1608547188
    },
    {
        "content": "<p>We used to support only the latest version, but now that's supposed to be the latest two versions</p>",
        "id": 220571385,
        "sender_full_name": "Laurențiu",
        "timestamp": 1608547448
    },
    {
        "content": "<p>Hm, good call on the latest two versions</p>",
        "id": 220571482,
        "sender_full_name": "matklad",
        "timestamp": 1608547550
    },
    {
        "content": "<p>guess it makes sense to revert that on the reelase branch...</p>",
        "id": 220571528,
        "sender_full_name": "matklad",
        "timestamp": 1608547570
    },
    {
        "content": "<p>Hm, thinking just a bit more about it, seems like \"two releases\" strategy is not tenable... cc <span class=\"user-mention\" data-user-id=\"203366\">@Jeremy Kolb</span> .</p>\n<p>The problem is that the underlying LSP library we use uses \"latest stable\" policy. This is understandable -- they need to bind to the latest VS Code APIs to use new features.  <em>And</em> we need to use the latest library to have access to latest features as well. Sticking to an older release is not an option imo: supporting older vscodes is good, but enforcing older vscodes on everyone is not.</p>",
        "id": 220573386,
        "sender_full_name": "matklad",
        "timestamp": 1608549222
    },
    {
        "content": "<p>I think the simplest thing we can do is reverting to the \"latest stable\" policy, + a provision that old extensions work with new server binary</p>",
        "id": 220573444,
        "sender_full_name": "matklad",
        "timestamp": 1608549260
    },
    {
        "content": "<p>(which, sadly, isn't the case in today's release)</p>",
        "id": 220573470,
        "sender_full_name": "matklad",
        "timestamp": 1608549295
    },
    {
        "content": "<p>Some alternatives are:</p>\n<ul>\n<li>prodding upstream (vscode-langauge-server-node) to support several versions of vscode in one library </li>\n<li>divorcing extension update from server binary updates, by enabling \"call github releases API\" trick on stable as well.</li>\n</ul>",
        "id": 220573594,
        "sender_full_name": "matklad",
        "timestamp": 1608549384
    },
    {
        "content": "<p>I'm not sure how to solve the <code>vscode-languageclient</code> versioning. We could stick with the latest stable package but then we'd be missing out on things like semantic highlighting for 9 months so I'm not a big fan of that option.</p>",
        "id": 220591841,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608562827
    },
    {
        "content": "<p>I think it may make sense to have some sort of extension/server compatibility matrix</p>",
        "id": 220592051,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608562938
    },
    {
        "content": "<p>I think the \"doesn't die on startup\" would be good enough level of compat</p>",
        "id": 220592215,
        "sender_full_name": "matklad",
        "timestamp": 1608563022
    },
    {
        "content": "<p>see <a href=\"https://github.com/gluon-lang/lsp-types/pull/193\">https://github.com/gluon-lang/lsp-types/pull/193</a></p>",
        "id": 220592220,
        "sender_full_name": "matklad",
        "timestamp": 1608563027
    },
    {
        "content": "<p>(and <a href=\"https://github.com/serde-rs/serde/issues/1908\">https://github.com/serde-rs/serde/issues/1908</a>)</p>",
        "id": 220592285,
        "sender_full_name": "matklad",
        "timestamp": 1608563045
    },
    {
        "content": "<p>ah, that's probably <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6979\">rust-analyzer#6979</a> then as well...</p>",
        "id": 220592392,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1608563105
    },
    {
        "content": "<p>... or at least related to that?</p>",
        "id": 220592475,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1608563152
    },
    {
        "content": "<p>:(</p>",
        "id": 220592890,
        "sender_full_name": "matklad",
        "timestamp": 1608563387
    },
    {
        "content": "<p>:( :( :(</p>",
        "id": 220592895,
        "sender_full_name": "matklad",
        "timestamp": 1608563389
    },
    {
        "content": "<p>that's me messing-up release</p>",
        "id": 220592969,
        "sender_full_name": "matklad",
        "timestamp": 1608563410
    },
    {
        "content": "<p>I <em>think</em>...</p>",
        "id": 220593011,
        "sender_full_name": "matklad",
        "timestamp": 1608563440
    },
    {
        "content": "<p>Hm, can anyone spot the bug in <a href=\"https://github.com/gluon-lang/lsp-types/pull/193/files\">https://github.com/gluon-lang/lsp-types/pull/193/files</a> ?</p>",
        "id": 220593203,
        "sender_full_name": "matklad",
        "timestamp": 1608563537
    },
    {
        "content": "<p>It looks right...</p>",
        "id": 220593867,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608563914
    },
    {
        "content": "<p>OH</p>",
        "id": 220593997,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608563997
    },
    {
        "content": "<p>The existing code is wrong. According to the spec it needs to be <code>groups_on_label</code>.</p>",
        "id": 220594222,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608564104
    },
    {
        "content": "<p>That might be causing deserialize to fail</p>",
        "id": 220594423,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1608564209
    },
    {
        "content": "<p>Is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6414#issuecomment-749063940\">https://github.com/rust-analyzer/rust-analyzer/issues/6414#issuecomment-749063940</a> the same problem?</p>",
        "id": 220603238,
        "sender_full_name": "Laurențiu",
        "timestamp": 1608568821
    }
]