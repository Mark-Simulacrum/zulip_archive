[
    {
        "content": "<p>Hi, I made a little \"hack\" nix derivation that essentially downloads a github release of rust-analyzer. In the nix env I already have rust-src and I am then using coc.nvim with a super simple config but I do not get any completions on std? Any ideas what I can try?</p>",
        "id": 196216710,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588615045
    },
    {
        "content": "<p>Currently using it without an extension like</p>\n<div class=\"codehilite\"><pre><span></span><code> &quot;rust-analyzer&quot;: {\n            &quot;command&quot;: &quot;rust-analyzer&quot;,\n            &quot;filetypes&quot;: [&quot;rust&quot;],\n            &quot;rootPatterns&quot;: [&quot;Cargo.toml&quot;]\n        },\n</code></pre></div>",
        "id": 196217716,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588615489
    },
    {
        "content": "<p>i don't know why that setup doesn't work, but i can recommend <a href=\"https://github.com/fannheyward/coc-rust-analyzer\" title=\"https://github.com/fannheyward/coc-rust-analyzer\"><code>coc-rust-analyzer</code></a></p>",
        "id": 196218333,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588615794
    },
    {
        "content": "<p>Yeah, I have seen that one and will most likely try it but I would like to get a simpler case working first :)</p>",
        "id": 196218551,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588615885
    },
    {
        "content": "<p>Another error I get is this one</p>\n<div class=\"codehilite\"><pre><span></span><code>[Error  - 7:39:31 PM] Request textDocument/documentHighlight failed.\n  Message: content modified\n  Code: -32801\n</code></pre></div>",
        "id": 196218614,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588615917
    },
    {
        "content": "<p>Is there some method to debug where it tries to find source?</p>",
        "id": 196218790,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588615987
    },
    {
        "content": "<p>That error isn't really an error. It is just that you edited the document while it was processing a request.</p>",
        "id": 196219286,
        "sender_full_name": "bjorn3",
        "timestamp": 1588616212
    },
    {
        "content": "<p>Ah, makes sense. But what about not getting completions on std? This is what I get from tracing:</p>\n<div class=\"codehilite\"><pre><span></span><code>[Trace - 8:16:54 PM] Sending request &#39;textDocument/completion - (6)&#39;.\nParams: {\n    &quot;textDocument&quot;: {\n        &quot;uri&quot;: &quot;file:///Users/abbe/code/firm/services/avery/src/main.rs&quot;\n    },\n    &quot;position&quot;: {\n        &quot;line&quot;: 5,\n        &quot;character&quot;: 9\n    },\n    &quot;context&quot;: {\n        &quot;triggerKind&quot;: 1\n    }\n}\n\n\n[Trace - 8:16:54 PM] Received response &#39;textDocument/completion - (6)&#39; in 2ms.\nResult: [\n    {\n        &quot;additionalTextEdits&quot;: [],\n        &quot;deprecated&quot;: false,\n        &quot;filterText&quot;: &quot;self&quot;,\n        &quot;insertTextFormat&quot;: 1,\n        &quot;kind&quot;: 14,\n        &quot;label&quot;: &quot;self&quot;,\n        &quot;textEdit&quot;: {\n            &quot;newText&quot;: &quot;self&quot;,\n            &quot;range&quot;: {\n                &quot;end&quot;: {\n                    &quot;character&quot;: 9,\n                    &quot;line&quot;: 5\n                },\n                &quot;start&quot;: {\n                    &quot;character&quot;: 9,\n                    &quot;line&quot;: 5\n                }\n            }\n        }\n    },\n    {\n        &quot;additionalTextEdits&quot;: [],\n        &quot;deprecated&quot;: false,\n        &quot;filterText&quot;: &quot;super&quot;,\n        &quot;insertTextFormat&quot;: 1,\n        &quot;kind&quot;: 14,\n        &quot;label&quot;: &quot;super&quot;,\n        &quot;textEdit&quot;: {\n            &quot;newText&quot;: &quot;super::&quot;,\n            &quot;range&quot;: {\n                &quot;end&quot;: {\n                    &quot;character&quot;: 9,\n                    &quot;line&quot;: 5\n                },\n                &quot;start&quot;: {\n                    &quot;character&quot;: 9,\n                    &quot;line&quot;: 5\n                }\n            }\n        }\n    }\n]\n</code></pre></div>\n\n\n<p>This is after typing <code>std::</code></p>",
        "id": 196219518,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588616313
    },
    {
        "content": "<p>I think rust-analyzer requires <code>rust-src</code> to be in the sysroot of rustc at <code>lib/rustlib/src/rust/src</code>.</p>",
        "id": 196219785,
        "sender_full_name": "bjorn3",
        "timestamp": 1588616413
    },
    {
        "content": "<p>What is the result of <code>ls $(rustc --print sysroot)/lib/rustlib/src/rust/src/</code>?</p>",
        "id": 196219886,
        "sender_full_name": "bjorn3",
        "timestamp": 1588616466
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>ls $(rustc --print sysroot)/lib/rustlib/src/rust/src/\nbuild_helper  libcore         libpanic_unwind  libprofiler_builtins  libterm  libunwind  tools\nliballoc      libpanic_abort  libproc_macro    libstd                libtest  stdarch\n</code></pre></div>",
        "id": 196220026,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588616528
    },
    {
        "content": "<p>That is what it should be. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 196220168,
        "sender_full_name": "bjorn3",
        "timestamp": 1588616604
    },
    {
        "content": "<p>Yeah, that is what I thought as well, and rls completions work :)</p>",
        "id": 196220467,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588616747
    },
    {
        "content": "<p>And I do get completion on other external crates</p>",
        "id": 196220549,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588616773
    },
    {
        "content": "<p>Is there any settings I could try (Is there a list of LSP settings somewhere?)?</p>",
        "id": 196220751,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588616861
    },
    {
        "content": "<p>\"RUST_SRC_PATH\" overrided in editor ?</p>",
        "id": 196221461,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588617185
    },
    {
        "content": "<p>Nope, the above command gives the same output inside of Vim</p>",
        "id": 196221618,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588617253
    },
    {
        "content": "<p>There is a config setting in RA:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;rust-analyzer.withSysroot&quot;: true\n</code></pre></div>\n\n\n<p>but it is true by default.</p>",
        "id": 196222058,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588617484
    },
    {
        "content": "<p>Yeah, setting that did not really change anything :)</p>",
        "id": 196237467,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588624993
    },
    {
        "content": "<p>rust-analyzeri is also in nixpgs already: <a href=\"https://github.com/NixOS/nixpkgs/blob/82dfd10035256585c52053172d67fbffbaa11fc9/pkgs/development/tools/rust/rust-analyzer/default.nix\" title=\"https://github.com/NixOS/nixpkgs/blob/82dfd10035256585c52053172d67fbffbaa11fc9/pkgs/development/tools/rust/rust-analyzer/default.nix\">https://github.com/NixOS/nixpkgs/blob/82dfd10035256585c52053172d67fbffbaa11fc9/pkgs/development/tools/rust/rust-analyzer/default.nix</a></p>\n<p>That specific version might be old, but it should be possible to <code>overrideDerivation</code> / <code>overrideAttrs</code> to get the more recent one</p>",
        "id": 196280809,
        "sender_full_name": "matklad",
        "timestamp": 1588667991
    },
    {
        "content": "<p>Yeah and that is super cool but for this project we are using a pinned downed version of 20.03 for nixpkgs where it is not yet present :)</p>",
        "id": 196620946,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588764921
    },
    {
        "content": "<p>But guess I could try it and see if it makes a difference</p>",
        "id": 196620969,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1588764946
    },
    {
        "content": "<p>Hmm... it _does_ work when using the one in nixpkgs</p>",
        "id": 197336516,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589316256
    },
    {
        "content": "<p>I know what is going on now... The version in nixpkgs is built with a wrapper script hardcoding <code>RUST_SRC_PATH</code> whereas the derivation I created relied on <code>rustc --print sysroot</code>. Seems like maybe rust-analyzer cannot find <code>rustc</code> (it is added to path by nix-shell) to run the <code>rustc --print sysroot</code> command (as seen above, it works when run in shell)</p>",
        "id": 197338607,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589317182
    },
    {
        "content": "<p>As a temp workaround I guess I can set <code>RUST_SRC_PATH</code> (or maybe <code>RUSTC</code> <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/51e4b92c1e/crates/ra_toolchain/src/lib.rs#L32\">https://github.com/rust-analyzer/rust-analyzer/blob/51e4b92c1e/crates/ra_toolchain/src/lib.rs#L32</a> ?) in the derivation</p>",
        "id": 197338759,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589317240
    },
    {
        "content": "<p>Ok, I did some more digging into this... Both rust-analyzers (my derivation and the one from nixpgs) fail to give std completions if I use a <code>$RUST_SRC_PATH</code> that looks like this (this is from rustup):</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ls /nix/store/bz2siw7ip2hin4yjgy7biw2fm38b4vwd-rust-1.43.1-2020-05-04-8d69840ab/lib/rustlib/src/rust/src\nbuild_helper  liballoc  libcore  libpanic_abort  libpanic_unwind  libproc_macro  libprofiler_builtins  libstd  libterm  libtest  libunwind  stdarch  tools\n</code></pre></div>\n\n\n<p>However, both rust-analyzers work as expected if I instead give them a <code>$RUST_SRC_PATH</code> that looks like this (this one is from the rust-analyzer derivation in nixpkgs):</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ls /nix/store/a2071dn4mhsyhp6ql70rj8wbgvrdq9vc-rust-src\nREADME.md     libcore          libproc_macro          librustc_ast_passes      librustc_data_structures  librustc_feature      librustc_interface  librustc_metadata   librustc_plugin_impl    librustc_span    librustdoc    libtest\nbootstrap     libfmt_macros    libprofiler_builtins   librustc_builtin_macros  librustc_driver           librustc_fs_util      librustc_lexer      librustc_mir        librustc_privacy        librustc_target  libserialize  libunwind\nbuild_helper  libgraphviz      librustc               librustc_codegen_llvm    librustc_error_codes      librustc_hir          librustc_lint       librustc_mir_build  librustc_resolve        librustc_traits  libstd        rustc\nliballoc      libpanic_abort   librustc_apfloat       librustc_codegen_ssa     librustc_errors           librustc_incremental  librustc_llvm       librustc_parse      librustc_save_analysis  librustc_ty      libsyntax     stage0.txt\nlibarena      libpanic_unwind  librustc_ast_lowering  librustc_codegen_utils   librustc_expand           librustc_index        librustc_macros     librustc_passes     librustc_session        librustc_typeck  libterm\n</code></pre></div>\n\n\n<p>Any ideas <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> ?</p>",
        "id": 197440732,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589388221
    },
    {
        "content": "<p>We use RUST_SRC_PATH as a substitue for <code>--pirnt sysroot</code>: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/c07050e2753a78e6975a6b78645970c18d7365b3/crates/ra_project_model/src/sysroot.rs#L89-L116\">https://github.com/rust-analyzer/rust-analyzer/blob/c07050e2753a78e6975a6b78645970c18d7365b3/crates/ra_project_model/src/sysroot.rs#L89-L116</a></p>",
        "id": 197444027,
        "sender_full_name": "matklad",
        "timestamp": 1589389476
    },
    {
        "content": "<p>Yeah I have seen that but the only difference between the working case and the mon-working one is the content of what is pointed to by RUST_SRC_PATH as stated above</p>",
        "id": 197459807,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589396244
    },
    {
        "content": "<p>I.e. it works if I point it at the src folder of a git clone of Rust but it does not if I point it at a rustup installed rust-src</p>",
        "id": 197460292,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589396458
    },
    {
        "content": "<p>Plot thickens, I now have one rust-src installed with rustup and one rust-src installed with the mozilla nix overlay. It works with the rustup-installed one but not with the nix overlay installed one and diffing the source folders, they are identical!</p>",
        "id": 197469081,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589400439
    },
    {
        "content": "<p>(except for some shell shebangs)</p>",
        "id": 197469113,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589400450
    },
    {
        "content": "<p>is there something else that is used in sysroot?</p>",
        "id": 197469446,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589400600
    },
    {
        "content": "<p>AH, found it!! There are symlinks inside the nix-packages with rust-src which rust-analyzer does not resolve!</p>",
        "id": 197474779,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589402442
    },
    {
        "content": "<p>Is it expected that rust-analyzer would resolve symlinks?</p>",
        "id": 197475021,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589402569
    },
    {
        "content": "<p>rls seems to FWIW</p>",
        "id": 197476722,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589403485
    },
    {
        "content": "<p>yeah, we currently ignore symlink</p>",
        "id": 197479686,
        "sender_full_name": "matklad",
        "timestamp": 1589404990
    },
    {
        "content": "<p>I have a working workaround now! Thanks for all the help!</p>",
        "id": 197510197,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1589437805
    }
]