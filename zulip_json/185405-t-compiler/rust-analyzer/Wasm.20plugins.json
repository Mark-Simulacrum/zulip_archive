[
    {
        "content": "<p>Hey, I'm a Google Summer of Code student working on <a href=\"https://summerofcode.withgoogle.com/projects/#4595135830032384\">Ruma's automated checks</a>. My mentor forwarded me <a href=\"https://www.reddit.com/r/rust/comments/nh337j/write_rust_lints_without_forking_clippy/gyv3qce/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3\">matklad's redit comment</a> about a possible utopian future where one could \"easily\" write plugins for R-A using wasm. If anyone would be interested in expanding on this there might be a chance for some cross pollination?!</p>",
        "id": 239788128,
        "sender_full_name": "DevinR528",
        "timestamp": 1621619150
    },
    {
        "content": "<p>well, the main problem would be exposing all of the APIs one would need to write a check or assist, presumably even in a stable way (we are still evolving the APIs a lot, they are very much not stable)</p>",
        "id": 239789504,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621619825
    },
    {
        "content": "<p>the rest (loading some wasm, executing it) is probably comparably trivial</p>",
        "id": 239789546,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621619847
    },
    {
        "content": "<p>I don't know how easy current wasm engines make exposing APIs from Rust, admittedly</p>",
        "id": 239789681,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621619920
    },
    {
        "content": "<p>one application that would also benefit normal r-a usage would be WASM proc macros, but that seems fairly unrelated to allowing arbitrary assist and diagnostic plugins</p>",
        "id": 239790150,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621620106
    },
    {
        "content": "<p>When you say \"exposing APIs from Rust do you mean <a href=\"https://github.com/zellij-org/zellij/blob/main/zellij-server/src/wasm_vm.rs\">this direction</a>? So it would be up to RA to deal with running the wasm? </p>\n<p>Will it be helpful for me to occasionally let you know how the tool is coming, giving everyone an idea of what the exports might be? Maybe help with a public API when the RA crates are used outside RA.</p>\n<p>Are the WASM proc-macros about sandboxing or is this something specific?</p>",
        "id": 239791379,
        "sender_full_name": "DevinR528",
        "timestamp": 1621620663
    },
    {
        "content": "<blockquote>\n<p>When you say \"exposing APIs from Rust do you mean this direction? So it would be up to RA to deal with running the wasm?</p>\n</blockquote>\n<p>yes</p>",
        "id": 239791675,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621620836
    },
    {
        "content": "<blockquote>\n<p>Are the WASM proc-macros about sandboxing or is this something specific?</p>\n</blockquote>\n<p>I was more thinking about improving reliability â€“ we currently run them in a separate process, and when that crashes we just stop expanding them. With WASM we could retry the execution much easier.</p>",
        "id": 239792286,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621621129
    },
    {
        "content": "<p>Sandboxing is also useful of course</p>",
        "id": 239792336,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621621155
    }
]