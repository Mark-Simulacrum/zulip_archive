[
    {
        "content": "<p>Since when can we do hover and goto def in attribute macros? I don't remember fixing this <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>  <a href=\"/user_uploads/4715/7dsnDTThI5zERZndkNOo-SLH/screenshot-2021-07-19-143853.png\">screenshot-2021-07-19-143853.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/7dsnDTThI5zERZndkNOo-SLH/screenshot-2021-07-19-143853.png\" title=\"screenshot-2021-07-19-143853.png\"><img src=\"/user_uploads/4715/7dsnDTThI5zERZndkNOo-SLH/screenshot-2021-07-19-143853.png\"></a></div>",
        "id": 246449114,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626698427
    },
    {
        "content": "<p>very cool though <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 246449123,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626698437
    },
    {
        "content": "<p>I fixed that two weeks ago or so I think</p>",
        "id": 246449289,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626698537
    },
    {
        "content": "<p>Though its very much just heuristics</p>",
        "id": 246449306,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626698555
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/9420\">https://github.com/rust-analyzer/rust-analyzer/pull/9420</a> and <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/9437\">https://github.com/rust-analyzer/rust-analyzer/pull/9437</a>, I thought I only implemented that for attribute paths and not the token trees though <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 246449688,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626698808
    },
    {
        "content": "<p>ah, nice :)</p>",
        "id": 246449959,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626698945
    },
    {
        "content": "<p>It bothered me not seeing a hover for hover/goto def/syntax highlighting etc not working there so I just had the urge to fix it <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 246450141,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626699057
    },
    {
        "content": "<p>so how far are we from completing paths inside <code>salsa::invoke(&lt;|&gt;)</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 246450459,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626699249
    },
    {
        "content": "<p>Actually, no the the tokentree stuff in the attributes is different is it not? Thats macro token mappings right? That I didn't touch <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 246450462,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626699250
    },
    {
        "content": "<p>yeah, I would have expected some changes to token mapping to be required here</p>",
        "id": 246450680,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699394
    },
    {
        "content": "<p>Ye then I can't take credit for this, I only made it work for the path of attributes again</p>",
        "id": 246450707,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626699421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/hover.20in.20attribute.20macros/near/246450459\">said</a>:</p>\n<blockquote>\n<p>so how far are we from completing paths inside <code>salsa::invoke(&lt;|&gt;)</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>Once we get a proper way to understand paths in attribute token trees I suppose. We still have the completion problem with clippy lints that adds the full path even if qualified again resulting in<code>clippy::clippy::foo</code></p>",
        "id": 246450756,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626699455
    },
    {
        "content": "<p>I think we're very far off from completing <code>salsa::invoke(&lt;|&gt;)</code>, but very close to completing <code>salsa::invoke(a&lt;|&gt;)</code></p>",
        "id": 246450904,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699534
    },
    {
        "content": "<p>well I mean, if you have a proc macro <code>foo!(something_used_as_a_path)</code> I think we can already complete the path. Certainly we can for macro_rules</p>",
        "id": 246450957,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626699577
    },
    {
        "content": "<p>For the first one, salsa's macros themselves would need to be error-tolerant, and we'd still have no token to map into the expansion</p>",
        "id": 246450961,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699580
    },
    {
        "content": "<p>yeah that'd require error-tolerance or speculative expansion again</p>",
        "id": 246451040,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626699607
    },
    {
        "content": "<p>For the second one, that should be a matter of just mapping the token into the output like we do for fn-like macros</p>",
        "id": 246451105,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699631
    },
    {
        "content": "<p>hmm, the completion context already tries to do that</p>",
        "id": 246451242,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699698
    },
    {
        "content": "<p>hmm, this code looks a bit questionable:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">original_token</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">original_file</span><span class=\"p\">.</span><span class=\"n\">syntax</span><span class=\"p\">().</span><span class=\"n\">token_at_offset</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">.</span><span class=\"n\">offset</span><span class=\"p\">).</span><span class=\"n\">left_biased</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">token</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">descend_into_macros</span><span class=\"p\">(</span><span class=\"n\">original_token</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">scope_at_offset</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">token</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">position</span><span class=\"p\">.</span><span class=\"n\">offset</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>it calls <code>scope_at_offset</code> with the original offset, but the token from the macro expansion. is that correct?</p>",
        "id": 246451418,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626699782
    },
    {
        "content": "<p>Good question, do we even need an offset there at all?</p>",
        "id": 246454476,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626701299
    },
    {
        "content": "<p>Apparently we do</p>",
        "id": 246454665,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626701381
    },
    {
        "content": "<p>Actually this seems fine? We seem to iterate the scopes at that position which have the original ranges again once out of the macro if i see this right</p>",
        "id": 246455584,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626701848
    },
    {
        "content": "<p>yeah, the real reason this doesn't work is probably because the code at the bottom of <code>CompletionContext::new</code> only handles <code>ast::MacroCall</code></p>",
        "id": 246456156,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626702137
    },
    {
        "content": "<p>and we have to implement speculative expansion for attribute macros for this to work</p>",
        "id": 246456189,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626702157
    }
]