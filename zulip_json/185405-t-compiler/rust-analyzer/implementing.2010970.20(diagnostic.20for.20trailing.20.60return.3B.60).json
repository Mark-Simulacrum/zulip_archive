[
    {
        "content": "<p>... diagnostic for trailing:<br>\n<code>return</code>, <code>return;</code> <code>return &lt;expr&gt;</code>, <code>return &lt;expr&gt;;</code><br>\nin function bodies and closure bodies, since, those are all the same thing (not literally, but, they'd be expected to behave the same)</p>\n<p>So, trying to read through the related code, specifically for actually _emitting_ the diagnostic</p>\n<p>It looks like what I have to _somewhere_ (<code>hir_ty/src/diagnostics/decl_check.rs</code>? adjacent to it in <code>expr.rs</code>?) check all functions and closures- recursively- for if the last statement or tail (if there's a block at all), or the expr (ie, <code>|| return 2</code>) is a <code>return</code>, emit a diagnostic for that expression (<code>RemoveTrailingReturn</code>, open to bikeshedding), then, properly emit that diagnostic to the client over in <code>ide_diagnostics</code> as a weak warning(?) and with a fix to remove the <code>return</code> (and semicolon, if any)?</p>\n<p>The umm, thing I'm having trouble with is _where_ to put the emission code, and if I might be missing something major, like \"maybe just start with function bodies, and then make a second pr for closures, and a third for recursion\"</p>",
        "id": 264587951,
        "sender_full_name": "Skyler Ross",
        "timestamp": 1639260739
    },
    {
        "content": "<p>You can definitely start small and only do it for functions first, no need to do it all at once if you don't want to.</p>",
        "id": 264589830,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639262968
    },
    {
        "content": "<p>So what you want to do is make a <code>BodyValidationDiagnostic</code>, so the emission of the diagnostic should probably live here <a href=\"https://github.com/Veykril/rust-analyzer/blob/d03397fe1173eaeb2e04c9e55ac223289e7e08ee/crates/hir_ty/src/diagnostics/expr.rs#L76\">https://github.com/Veykril/rust-analyzer/blob/d03397fe1173eaeb2e04c9e55ac223289e7e08ee/crates/hir_ty/src/diagnostics/expr.rs#L76</a><br>\n(forgot to mention that part in the issue comment)</p>",
        "id": 264589986,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639263156
    },
    {
        "content": "<p>and the rest should be straight forward in copying from what the other diagnostics do</p>",
        "id": 264589991,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639263172
    },
    {
        "content": "<p>(if not feel free to ask of course)</p>",
        "id": 264590001,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639263187
    },
    {
        "content": "<p>You will probably have to iterate the expressions again separately just for this diagnostic, like its done in <a href=\"https://github.com/Veykril/rust-analyzer/blob/d03397fe1173eaeb2e04c9e55ac223289e7e08ee/crates/hir_ty/src/diagnostics/expr.rs#L144-L193\">https://github.com/Veykril/rust-analyzer/blob/d03397fe1173eaeb2e04c9e55ac223289e7e08ee/crates/hir_ty/src/diagnostics/expr.rs#L144-L193</a><br>\nWe don't have a nice infra for visiting things yet I think</p>",
        "id": 264590075,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639263288
    }
]