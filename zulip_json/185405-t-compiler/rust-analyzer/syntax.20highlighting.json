[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> you might like this:</p>\n<p><a href=\"/user_uploads/4715/__b2QTxXGIYg5GT6OiFxBvWQ/image.png\" target=\"_blank\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/__b2QTxXGIYg5GT6OiFxBvWQ/image.png\" target=\"_blank\" title=\"image.png\"><img src=\"/user_uploads/4715/__b2QTxXGIYg5GT6OiFxBvWQ/image.png\"></a></div>",
        "id": 189222780,
        "sender_full_name": "matklad",
        "timestamp": 1582816916
    },
    {
        "content": "<p><span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 189223276,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1582817232
    },
    {
        "content": "<p>Lol, it's even recursive. Didn't expect that</p>",
        "id": 189223388,
        "sender_full_name": "matklad",
        "timestamp": 1582817295
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/cXUeqd0lMBw2xY64iySLdokm/image.png\" target=\"_blank\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/cXUeqd0lMBw2xY64iySLdokm/image.png\" target=\"_blank\" title=\"image.png\"><img src=\"/user_uploads/4715/cXUeqd0lMBw2xY64iySLdokm/image.png\"></a></div>",
        "id": 189223392,
        "sender_full_name": "matklad",
        "timestamp": 1582817298
    },
    {
        "content": "<p>That's awesome !</p>",
        "id": 189223490,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1582817372
    },
    {
        "content": "<p>Does it highlight the code inside of string literals?</p>",
        "id": 189226312,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582819053
    },
    {
        "content": "<p>yup, if the literal is a an argument to the function, whose corresponding parameter is named <code>ra_fixture</code></p>",
        "id": 189226411,
        "sender_full_name": "matklad",
        "timestamp": 1582819101
    },
    {
        "content": "<p>Hmm, I wish we could make it more general.<br>\nI know that vscode detects quasi quotation with TypeScript (JavaScript) <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">tag functions</a>:<br>\n<a href=\"/user_uploads/4715/ekDWH7D4QEXeWF5T00VUtfe7/image.png\" target=\"_blank\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ekDWH7D4QEXeWF5T00VUtfe7/image.png\" target=\"_blank\" title=\"image.png\"><img src=\"/user_uploads/4715/ekDWH7D4QEXeWF5T00VUtfe7/image.png\"></a></div>",
        "id": 189226769,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582819284
    },
    {
        "content": "<p>We could kinda reserve the special number of hashes <code>#</code>, e.g. 3 of them to denote a rust source code string literal</p>",
        "id": 189226954,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582819384
    },
    {
        "content": "<p>we'll use attrs once they are stable: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3349#issuecomment-592022476\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3349#issuecomment-592022476\">https://github.com/rust-analyzer/rust-analyzer/pull/3349#issuecomment-592022476</a></p>",
        "id": 189227201,
        "sender_full_name": "matklad",
        "timestamp": 1582819558
    },
    {
        "content": "<p>Hmm, yeah really, that's a nice application of the attributes!</p>",
        "id": 189228100,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582820075
    },
    {
        "content": "<p><code>ra_fixture::code(r#\"...\"#)</code> <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 189234433,
        "sender_full_name": "Laurențiu",
        "timestamp": 1582824040
    },
    {
        "content": "<p>But I think the current solution is fine. Nobody will know.</p>",
        "id": 189234665,
        "sender_full_name": "Laurențiu",
        "timestamp": 1582824205
    },
    {
        "content": "<p>Easter egg)</p>",
        "id": 189237404,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582825951
    },
    {
        "content": "<p>there's one intentional Easter egg in rust-analyzer....</p>",
        "id": 189237725,
        "sender_full_name": "matklad",
        "timestamp": 1582826153
    },
    {
        "content": "<p>Hmm, gonna read all da code to find it!</p>",
        "id": 189239069,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582826932
    },
    {
        "content": "<p>Does <a href=\"https://github.com/rust-analyzer/rust-analyzer/blame/master/docs/dev/README.md#L137\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blame/master/docs/dev/README.md#L137\">the following</a> still work, <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> ?</p>\n<div class=\"codehilite\"><pre><span></span>env RUST_LOG=gen_lsp_server=trace code .\n</pre></div>\n\n\n<p>I would like to enable <code>trace</code> logging for <code>Run extension</code> debug configurations in VSCode...</p>",
        "id": 189247974,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582831896
    },
    {
        "content": "<p><code>rust-analyzer.trace.server = verbose</code> is better</p>",
        "id": 189266976,
        "sender_full_name": "matklad",
        "timestamp": 1582844530
    },
    {
        "content": "<p>Hi all I'm currently trying to debug this issue <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4202\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/4202\">https://github.com/rust-analyzer/rust-analyzer/issues/4202</a> but when I inspect with vscode I don't have the part about semantic token type. I think it's because I don't really use rust-analyzer for my syntax highlighting ? Can you give me a tips to enable this kind of view with the syntax highlighting coming from ra ?</p>",
        "id": 195747771,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588183322
    },
    {
        "content": "<p>Sorry for the noise I find the solution. I just had to select a default theme (dark +) for example</p>",
        "id": 195748284,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588183567
    },
    {
        "content": "<p>do you have <code>editor.semanticTokens = true;</code> or something like that in settings.json?</p>",
        "id": 195806839,
        "sender_full_name": "matklad",
        "timestamp": 1588232383
    },
    {
        "content": "<p>I thin it is required to enable highlighting</p>",
        "id": 195806842,
        "sender_full_name": "matklad",
        "timestamp": 1588232391
    },
    {
        "content": "<p>I think it's enabled by default now -- it was the theme.</p>",
        "id": 195807094,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588232622
    },
    {
        "content": "<p>I'd just like to say kudos for implementing it in the rust-analyzer - I believe that's the feature I missed most in the IDE environment. Just switching to rust-analyzer in the extension makes a big difference and I'm excited for the feature <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 196813581,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1588876907
    },
    {
        "content": "<p>This is so much faster in today's vscode release</p>",
        "id": 196824365,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1588882306
    }
]