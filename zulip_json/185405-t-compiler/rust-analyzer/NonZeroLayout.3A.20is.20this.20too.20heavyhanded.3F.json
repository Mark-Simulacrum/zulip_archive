[
    {
        "content": "<p>Raising requirements to the type level is generally a good thing. But especially given that manual allocation is inherently an <code>unsafe</code> operation, I'm wondering if it's a bit heavy-handed and not really necessary.</p>\n<p>Rust does pride itself on zero-cost abstractions and pick-your-costs, but moreso than that, I think Rust also is useful because it is _safe by default_. IOW, the first API you tend to reach for should be the safest to use; for the case of allocators, that would mean requiring them to handle zero-sized allocations transparently, rather than pushing that to the user.</p>\n<p>Going through the list of <code>Alloc</code>-friends traits in alloc-wg, per that concept, the available methods that could reasonably need to handle zero-sized \"allocations\", or can pretend they don't exist would be:</p>\n<ul>\n<li><code>alloc(Layout)</code></li>\n<li><code>alloc_zeroed(Layout)</code></li>\n<li><code>dealloc(ptr, Layout)</code></li>\n<li><code>realloc(ptr, Layout, Layout)</code></li>\n<li><code>grow_in_place(ptr, Layout, usize)</code></li>\n<li><code>shrink_in_place(ptr, Layout, usize)</code></li>\n</ul>\n<p>i.e. all of them could fairly reasonably be expected to work transparently with zero sized allocations.</p>",
        "id": 188665900,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582224580
    },
    {
        "content": "<p>Might've posted this in the wrong stream :)</p>",
        "id": 188666196,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1582224733
    },
    {
        "content": "<p>How did this happen :P</p>",
        "id": 188666226,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582224749
    },
    {
        "content": "<p>I am too unfamiliar with Zulip apparently...</p>",
        "id": 188666263,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582224773
    },
    {
        "content": "<p>Really, when my narrow is t-libs/wg-allocators, &lt;kbd&gt;New topic&lt;/kbd&gt; really should default to being in that stream</p>",
        "id": 188666379,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582224840
    },
    {
        "content": "<p>Hi m8, great to see you again!</p>",
        "id": 188666666,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582224994
    },
    {
        "content": "<p>Yeah I don't keep up with Zulip enough</p>",
        "id": 188668430,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582226172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132829\">@Christopher Durham</span> hey, do you want to push for alloc_layout_extras to be stabilized? :D </p>\n<p>I am slowly doing that rowan refactoring, and I could use a way to allocate stuff without doing all the layout calculations wrongly myself</p>",
        "id": 188691430,
        "sender_full_name": "matklad",
        "timestamp": 1582242500
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> just use <a href=\"https://github.com/cad97/pointer-utils\" target=\"_blank\" title=\"https://github.com/cad97/pointer-utils\">pointer-utils</a> now that it's published :P</p>\n<p>But yeah, alloc_layout_extras seems worth to push to stabilize</p>",
        "id": 188691505,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582242591
    },
    {
        "content": "<p>And honestly just give me an actual target of what to do and I'll probably nerd snipe myself into banging it out</p>",
        "id": 188691592,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582242646
    },
    {
        "content": "<p>I sort-of lean towards vendoring the exact combo of union of tagged DST arcs into rowan</p>",
        "id": 188692454,
        "sender_full_name": "matklad",
        "timestamp": 1582243388
    },
    {
        "content": "<p>As we maybe might want to swticht to u32 ref count without weekrefs as well</p>",
        "id": 188692484,
        "sender_full_name": "matklad",
        "timestamp": 1582243432
    },
    {
        "content": "<p>I've started <a href=\"https://github.com/rust-analyzer/bonsai\" target=\"_blank\" title=\"https://github.com/rust-analyzer/bonsai\">https://github.com/rust-analyzer/bonsai</a> a while back, which I think is even sort-of works, except for the bit where I need to cacl the layout :D</p>",
        "id": 188692544,
        "sender_full_name": "matklad",
        "timestamp": 1582243470
    },
    {
        "content": "<p>I'll take a look at bonsai and push for alloc_layout_extras I guess</p>",
        "id": 188694078,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1582245082
    }
]