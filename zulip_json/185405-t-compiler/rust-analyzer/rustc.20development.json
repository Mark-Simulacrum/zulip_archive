[
    {
        "content": "<p>I'm trying to run <code>rust-analyzer</code> while working on rustc. Since I'm mostly working on stage1, I set</p>\n<ul>\n<li><code>rustup override set beta</code></li>\n<li><code>env RUSTC_BOOTSTRAP=1 RUSTFLAGS=--cfg=bootstrap</code> before launching <code>code</code></li>\n</ul>",
        "id": 183490005,
        "sender_full_name": "oli",
        "timestamp": 1576419573
    },
    {
        "content": "<p>This gets me beyond libcore at least, but then I get amusing errors :D</p>",
        "id": 183490009,
        "sender_full_name": "oli",
        "timestamp": 1576419590
    },
    {
        "content": "<blockquote>\n<p>the size for values of type <code>Stream</code> cannot be known at compilation time<br>\nthe trait <code>core::marker::Sized</code> is not implemented for <code>Stream</code><br>\nto learn more, visit &lt;<a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait\" target=\"_blank\" title=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait\">https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait</a>&gt;</p>\n</blockquote>",
        "id": 183490055,
        "sender_full_name": "oli",
        "timestamp": 1576419618
    },
    {
        "content": "<p>There's two things amusing about this, the errors themselves (there's more like <code>can't index \"Vec&lt;&amp;str&gt;\"</code> and similar</p>",
        "id": 183490064,
        "sender_full_name": "oli",
        "timestamp": 1576419666
    },
    {
        "content": "<p>The second amusing thing is that I get paths like <code>/home/oliver/Projects/rust/rustc/workdirs/rust7/home/oliver/.cargo/registry/src/github.com-1ecc6299db9ec823/atty-0.2.11/src/lib.rs</code></p>",
        "id": 183490072,
        "sender_full_name": "oli",
        "timestamp": 1576419697
    },
    {
        "content": "<p>Note that my pwd is <code>/home/oliver/Projects/rust/rustc/workdis/rust7</code></p>",
        "id": 183490112,
        "sender_full_name": "oli",
        "timestamp": 1576419724
    },
    {
        "content": "<p>I'll keep posting here with my progress</p>",
        "id": 183490115,
        "sender_full_name": "oli",
        "timestamp": 1576419745
    },
    {
        "content": "<p>I'm moderately certain that the <code>Sized</code> errors are happening because of bootstrapping issues where the <code>beta</code> libcore and the stage0 libcore are somehow messing with everything</p>",
        "id": 183490184,
        "sender_full_name": "oli",
        "timestamp": 1576419920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> these errors are from running <code>cargo watch</code>, which internally is using <code>cargo check</code>. I think vanilla <code>cargo check</code> won't work with rustc though</p>",
        "id": 183490231,
        "sender_full_name": "matklad",
        "timestamp": 1576419979
    },
    {
        "content": "<p>So perhaps the best solution here is to override <code>cargo check</code> command with appropriate <code>./x.py check</code> (there's a config option for that).</p>",
        "id": 183490237,
        "sender_full_name": "matklad",
        "timestamp": 1576420011
    },
    {
        "content": "<p>oh</p>",
        "id": 183490239,
        "sender_full_name": "oli",
        "timestamp": 1576420017
    },
    {
        "content": "<p>neat</p>",
        "id": 183490240,
        "sender_full_name": "oli",
        "timestamp": 1576420019
    },
    {
        "content": "<p>/me tries</p>",
        "id": 183490244,
        "sender_full_name": "oli",
        "timestamp": 1576420022
    },
    {
        "content": "<p>Note that I personally don't use <code>cargo watch</code> functionality: for me the lag on non-trivial projects is significant, so I stick with just invoking an approriate complation command with a shortcut (which still gives you inline errors, which are <em>not</em> updated as you type)</p>",
        "id": 183490296,
        "sender_full_name": "matklad",
        "timestamp": 1576420106
    },
    {
        "content": "<p>oh I didn't know that existed</p>",
        "id": 183490364,
        "sender_full_name": "oli",
        "timestamp": 1576420204
    },
    {
        "content": "<p>The shortcut to run compilation? There are two of them:</p>\n<ul>\n<li>one which runs a VS Code task. This is what I use for rustc, by having this in my config:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">15</span>:<span class=\"mi\">30</span>:<span class=\"mi\">31</span><span class=\"o\">|~</span><span class=\"w\"></span>\n<span class=\"err\">Î»</span><span class=\"w\"> </span><span class=\"n\">bat</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">vscode</span><span class=\"o\">/</span><span class=\"n\">tasks</span><span class=\"p\">.</span><span class=\"n\">json</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">&quot;version&quot;</span>: <span class=\"s\">&quot;2.0.0&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">&quot;tasks&quot;</span>: <span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;label&quot;</span>: <span class=\"s\">&quot;check&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;type&quot;</span>: <span class=\"s\">&quot;shell&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;command&quot;</span>: <span class=\"s\">&quot;./x.py check&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;problemMatcher&quot;</span>: <span class=\"s\">&quot;$rustc&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;group&quot;</span>: <span class=\"s\">&quot;build&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;presentation&quot;</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"s\">&quot;clear&quot;</span>: <span class=\"nc\">true</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<ul>\n<li>one which compiles/runs thing at cursor (if the cursor is on <code>#[test]</code>, thet test will be run, if on <code>fn main</code>, that binary, otherwise, the crate at cursor will be compiled). This is what I use when hacking on rust-analyzer, but it needs a proper cargo build to function</li>\n</ul>",
        "id": 183490436,
        "sender_full_name": "matklad",
        "timestamp": 1576420368
    },
    {
        "content": "<p>Oh that's even better, then I can keep building everything on the remote machine</p>",
        "id": 183490612,
        "sender_full_name": "oli",
        "timestamp": 1576420731
    },
    {
        "content": "<p>I just tried <code>rust-analyzer</code> with rustc. It seems to work pretty well. Having path contexts in VS Code is quite handy for large impls. It does give errors about <code>static move || { yield }</code> though.</p>",
        "id": 184486074,
        "sender_full_name": "Zoxc",
        "timestamp": 1577726416
    },
    {
        "content": "<p>Oh, it can goto proc macro impls too :D</p>",
        "id": 184486249,
        "sender_full_name": "Zoxc",
        "timestamp": 1577726614
    }
]