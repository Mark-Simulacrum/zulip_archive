[
    {
        "content": "<p>i am trying to take a stab at solving this... <a href=\"https://github.com/rust-analyzer/rust-analyzer/compare/master...jhgg:ide/symbol-index-from-def-map?expand=1\">https://github.com/rust-analyzer/rust-analyzer/compare/master...jhgg:ide/symbol-index-from-def-map?expand=1</a></p>\n<p>but i'm running into a snag, which is that Semantics does not seem to know about nodes from the expanded macros, so I get panics like:</p>\n<div class=\"codehilite\"><pre><span></span><code>Failed to lookup STRUCT@0..24 in this Semantics.\nMake sure to use only query nodes, derived from this instance of Semantics.\nroot node:   MACRO_ITEMS@0..24\nknown nodes: SOURCE_FILE@0..302\n\n&#39;, crates/hir/src/semantics.rs:977:13\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/09c42c45858d5f3aedfa670698275303a3d19afa/library/std/src/panicking.rs:517:5\n   1: core::panicking::panic_fmt\n             at /rustc/09c42c45858d5f3aedfa670698275303a3d19afa/library/core/src/panicking.rs:101:14\n   2: hir::semantics::SemanticsImpl::find_file::{{closure}}\n   3: hir::semantics::SemanticsImpl::find_file\n   4: hir::semantics::Semantics&lt;DB&gt;::to_def\n   5: ide_db::defs::NameClass::classify\n   6: ide_db::items_locator::get_name_definition\n   7: &lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold\n   8: &lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend\n   9: ide_db::helpers::import_assets::path_applicable_imports\n  10: ide_db::helpers::import_assets::ImportAssets::search_for\n  11: ide_db::helpers::import_assets::ImportAssets::search_for_imports\n  12: ide_assists::handlers::auto_import::auto_import\n  13: ide_assists::assists\n  14: ide::Analysis::assists_with_fixes::{{closure}}\n  15: std::panicking::try\n  16: ide::Analysis::assists_with_fixes\n  17: rust_analyzer::handlers::handle_code_action\n  18: std::panicking::try\n  19: &lt;F as threadpool::FnBox&gt;::call_box\n</code></pre></div>\n<p>am i going in the wrong direction, any pointers? <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 262868657,
        "sender_full_name": "jhgg",
        "timestamp": 1638012893
    },
    {
        "content": "<p>i think i got it... <a href=\"https://github.com/rust-analyzer/rust-analyzer/commit/a69af9daa3e9b3f61ce83d904b0b27022d759869\">https://github.com/rust-analyzer/rust-analyzer/commit/a69af9daa3e9b3f61ce83d904b0b27022d759869</a></p>",
        "id": 262869243,
        "sender_full_name": "jhgg",
        "timestamp": 1638013828
    },
    {
        "content": "<p>assuming my pr isn't absolute garbage, I'm just about done with this, but with one oustanding question: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10872#issuecomment-980818333\">https://github.com/rust-analyzer/rust-analyzer/pull/10872#issuecomment-980818333</a> - when anyone has the time to answer!!</p>",
        "id": 262968639,
        "sender_full_name": "jhgg",
        "timestamp": 1638163832
    },
    {
        "content": "<blockquote>\n<p>it looks like library_symbols is a bit bespoke, insofar as it operates directly on re-parsed source text. is there a specific reason for this? would changing it to use a def map be problematic?</p>\n</blockquote>\n<p>Wasn't that the point of this rewrite? Making it be dependent on the DefMap instead of source files?</p>\n<blockquote>\n<p>it looks like library_symbols additionally does not seem to have a way to access RootDatabase? if not, what would be the advisable strategy to parallelize. (i figure i need a RootDatabase to do a snapshot to distribute to worker threads)</p>\n</blockquote>\n<p>You might be able to add a <code>Send</code> bound to the <code>SymbolsDatabase</code> trait which would allow you to parallelize it potentially. Though I am not sure whether that would be the correct way to go about this.</p>",
        "id": 262998224,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1638187030
    },
    {
        "content": "<blockquote>\n<p>Wasn't that the point of this rewrite? Making it be dependent on the DefMap instead of source files?</p>\n</blockquote>\n<p>Yeah it was. This code path is a bit awkward because it does not try to use the source syntax nodes from salsa, but instead grabs the source text from salsa and re-parses it. Hence why I was a bit suspect.  (<a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ide_db/src/symbol_index.rs#L118-L121\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ide_db/src/symbol_index.rs#L118-L121</a>). My question was mainly as to the <em>why</em> it was done this way. And whether that had any significance when it comes to this code path. </p>\n<blockquote>\n<p>You might be able to add a Send bound to the SymbolsDatabase trait which would allow you to parallelize it potentially. Though I am not sure whether that would be the correct way to go about this.</p>\n</blockquote>\n<p>Hmm, yeah that might work. I don't think it's too necessary though, I was able to get it parallel on the crate level. But it is not parallel on the module level (like it is for local_roots). I think this is OK for now. If it's too slow in practice we can always speed it up.</p>\n<p>FWIW: I still want to land my parallel indexing branch too, probably this week/weekend, I think it'll help pre-populate the def maps for indexing. The code is pretty messy and I understood much less about r-a when I started, so gonna start from scratch again with all I know.</p>",
        "id": 263088653,
        "sender_full_name": "jhgg",
        "timestamp": 1638233172
    },
    {
        "content": "<blockquote>\n<p>My question was mainly as to the why it was done this way. And whether that had any significance when it comes to this code path.</p>\n</blockquote>\n<p>Ah I see now, judging from the commit that introduced that it looks like an oversight from refactoring to me.</p>",
        "id": 263089569,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1638233721
    },
    {
        "content": "<blockquote>\n<p>FWIW: I still want to land my parallel indexing branch too, probably this week/weekend, I think it'll help pre-populate the def maps for indexing.</p>\n</blockquote>\n<p>TBH I'm not so sure those changes are a good idea.</p>",
        "id": 263181485,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1638294308
    },
    {
        "content": "<p>Oh yeah? Why so? My tests so far have shown like 2-3x indexing speed increase ?</p>",
        "id": 263193033,
        "sender_full_name": "jhgg",
        "timestamp": 1638299220
    },
    {
        "content": "<p>Oh I see your msg in other thread</p>",
        "id": 263193130,
        "sender_full_name": "jhgg",
        "timestamp": 1638299268
    }
]