[
    {
        "content": "<p>Hey, I'm using vim with coc-rust-analyzer and while it works pretty well the startup time is a pretty big problem. My workflow involves a lot of quitting/reopening vim which makes rust-analyze start from scratch every time. Is there any work in progress to get better starting time or caching ?</p>",
        "id": 195331773,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587902828
    },
    {
        "content": "<p>If you read the code for a while before invoking any rust-analyzer commands, <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4133\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4133\">https://github.com/rust-analyzer/rust-analyzer/pull/4133</a> (merged yesterday) will help a little. But there's no support for persisting the database.</p>",
        "id": 195331909,
        "sender_full_name": "Laurențiu",
        "timestamp": 1587903038
    },
    {
        "content": "<p>Well it seems to re run cargo check every time. Is that expected ?</p>",
        "id": 195331932,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587903113
    },
    {
        "content": "<p>Yes by default, but it should be fast if there are no modifications.</p>",
        "id": 195331972,
        "sender_full_name": "Laurențiu",
        "timestamp": 1587903157
    },
    {
        "content": "<p>There's no immediate work on this. </p>\n<p>Althogh, I wonder if something can be done on the editor's side? One of the ideas behind LSP is that you have a persistent process.</p>",
        "id": 195331989,
        "sender_full_name": "matklad",
        "timestamp": 1587903175
    },
    {
        "content": "<p>The best workaround for now would be to keep vim running and use a file picker or <code>:open</code>.</p>",
        "id": 195331993,
        "sender_full_name": "Laurențiu",
        "timestamp": 1587903191
    },
    {
        "content": "<p>I used to keep vim open but my workflow was ^Z fix error, if fixed open new vim with next error else do fg. I ended up with stuff like <a href=\"https://gist.github.com/Eijebong/ce0d6848a4d5664baae4fd8c6b39a51a\" title=\"https://gist.github.com/Eijebong/ce0d6848a4d5664baae4fd8c6b39a51a\">https://gist.github.com/Eijebong/ce0d6848a4d5664baae4fd8c6b39a51a</a> (I think that was when I updated bitflags in servo). I stopped doing that after setting up r-a because it ate my RAM.</p>",
        "id": 195332046,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587903299
    },
    {
        "content": "<p>I guess I could just start r-a manually and modify the extension to connect to it ?</p>",
        "id": 195332055,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587903326
    },
    {
        "content": "<p>(And yes my workflow is dumb, but muscle memory is strong...)</p>",
        "id": 195332101,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587903371
    },
    {
        "content": "<p>I don't think these necessary needs a change of workflow. Ideally, you have the same workflow, but the editor reuses servers</p>",
        "id": 195332248,
        "sender_full_name": "matklad",
        "timestamp": 1587903682
    },
    {
        "content": "<p>Time to learn typescript then <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 195332298,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1587903752
    },
    {
        "content": "<p>Has something changed recently ? It stopped doing full <code>cargo check</code> on startup !</p>",
        "id": 196175017,
        "sender_full_name": "Bastien Orivel",
        "timestamp": 1588596287
    }
]