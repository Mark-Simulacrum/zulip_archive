[
    {
        "content": "<p>Name classification seems to have a \"small\" problem. We don't classify names correctly if they exist in multiple namespaces,  see <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7408\">https://github.com/rust-analyzer/rust-analyzer/issues/7408</a> and <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7479\">https://github.com/rust-analyzer/rust-analyzer/issues/7479</a> for examples</p>",
        "id": 224359886,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611854083
    },
    {
        "content": "<p>Basically if a name appears in multiple namespaces we seem to resolve it in the macro, type and then value namespace in that order. So if we find a name in the macro namespace for example we immediately return it and therefor skip going through the type and value namespace even if we actually want the type behind the name.</p>",
        "id": 224360038,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611854158
    },
    {
        "content": "<p>On the other hand maybe we just need some more <code>ast</code> matches to fix these two occurences up, I haven't looked at classification too much yet. Actually for semantic highlighting issue I think its just missing a check ye, but the other issue seems a bit more problematic?</p>",
        "id": 224360268,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611854246
    },
    {
        "content": "<p>So I think <code>classify_**name**</code> should always just return a definition, as the namespaces can be inferred from the def itself</p>",
        "id": 224362041,
        "sender_full_name": "matklad",
        "timestamp": 1611854940
    },
    {
        "content": "<p>for <strong>name_ref</strong>, yeah, those can be genuinely multinamespaced</p>",
        "id": 224362160,
        "sender_full_name": "matklad",
        "timestamp": 1611854986
    },
    {
        "content": "<p>but I think only in actual uses? <code>use serde::Sedialize</code> is both a macro and a trait</p>",
        "id": 224362283,
        "sender_full_name": "matklad",
        "timestamp": 1611855023
    },
    {
        "content": "<p>So I think we need to do two things:</p>\n<ul>\n<li>fix the bugs -- those two issues seem like we just return the wrong thing</li>\n<li>change the interface to account for multple namespaces. This'll go as far as the editor showing a multiresolve dialog for uses</li>\n</ul>",
        "id": 224362623,
        "sender_full_name": "matklad",
        "timestamp": 1611855150
    },
    {
        "content": "<p>As for fixing the actual bugs, I think they might be related to <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3407\">https://github.com/rust-analyzer/rust-analyzer/issues/3407</a></p>",
        "id": 224363071,
        "sender_full_name": "matklad",
        "timestamp": 1611855328
    },
    {
        "content": "<p>Yes only use statements should have multinamespaced NameRefs I believe.</p>",
        "id": 224365049,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611855983
    },
    {
        "content": "<p>The bugs do seem related to that issue, which looks like a quite tough one.</p>",
        "id": 224365145,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611856027
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> you have a talent for poking at \"we need to rewrite the underlying abstraction\" issues in rust-analyzer ) This is sooo helpful!)</p>",
        "id": 224365697,
        "sender_full_name": "matklad",
        "timestamp": 1611856243
    },
    {
        "content": "<p><span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 224365962,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611856379
    },
    {
        "content": "<p>Without looking too much into the rest, the function calls being shadowed by types was simple to fix <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7483\">https://github.com/rust-analyzer/rust-analyzer/pull/7483</a> we were indeed simply missing a check here <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7483/files#diff-0da7dd327a598aadb8c360d534aedf26f76c26b5a877a6a543649323509e3aecR236-R238\">https://github.com/rust-analyzer/rust-analyzer/pull/7483/files#diff-0da7dd327a598aadb8c360d534aedf26f76c26b5a877a6a543649323509e3aecR236-R238</a></p>",
        "id": 224368557,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611857517
    }
]