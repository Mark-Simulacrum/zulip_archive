[
    {
        "content": "<p>I was wondering if there's a reason why function renaming isn't supported yet? Is it just a matter of priority? If so, I was looking into what it'd take to implement it, and one of the things I noticed is that <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/bbaf750b10810c21d42710a5d12181ca73099525/crates/ra_ide_api/src/references.rs#L87\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/bbaf750b10810c21d42710a5d12181ca73099525/crates/ra_ide_api/src/references.rs#L87\"><code>find_node_at_offset</code> returns <code>None</code></a> if I add a test for function renaming. Looking at the AST, the function name is of type <code>NAME</code>, and that check expects <code>NAME_REF</code>. Any pointers on what to do to make this work?</p>",
        "id": 159956032,
        "sender_full_name": "Jean Mertz",
        "timestamp": 1551737561
    },
    {
        "content": "<p>I think one problem is that we don't currently handle project wide references, including functions. Meaning you cannot use find all references on a function currently, which is used when renaming non-modules.</p>",
        "id": 159979461,
        "sender_full_name": "vipentti",
        "timestamp": 1551765626
    },
    {
        "content": "<p>Tracking issue for project wide references can be found in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/200\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/200\">rust-analyzer#200</a></p>",
        "id": 159980982,
        "sender_full_name": "vipentti",
        "timestamp": 1551768306
    },
    {
        "content": "<p>Thanks for the pointer. Yeah, that seems like a big one to tackle.</p>",
        "id": 159983020,
        "sender_full_name": "Jean Mertz",
        "timestamp": 1551771508
    },
    {
        "content": "<p>Still though, I'm curious if you have any feedback on my question of NAME_REF vs NAME, what their differences are, and why the function signature returns NAME (which incidentally doesn't match in the link I gave above)?</p>",
        "id": 159983048,
        "sender_full_name": "Jean Mertz",
        "timestamp": 1551771566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124920\">@Jean Mertz</span> there should be two cases for renaming:</p>\n<p>renaming the declaration (where we do find references and then renaming)</p>\n<p>renaming the reference (where we first need to to goto definition, and <em>than</em> find usages&amp;rename)</p>",
        "id": 159983783,
        "sender_full_name": "matklad",
        "timestamp": 1551772591
    },
    {
        "content": "<p>I think that bit of code doesn't handle the first case, while it should</p>",
        "id": 159983804,
        "sender_full_name": "matklad",
        "timestamp": 1551772639
    },
    {
        "content": "<p>The test case would be something like this:</p>\n<div class=\"codehilite\"><pre><span></span>fn main() {\n    let foo&lt;|&gt; = 92;\n    foo + foo;\n}\n</pre></div>",
        "id": 159983811,
        "sender_full_name": "matklad",
        "timestamp": 1551772666
    },
    {
        "content": "<p>Ah. That makes sense. Thanks. I’ll look at this after work.</p>",
        "id": 159989190,
        "sender_full_name": "Jean Mertz",
        "timestamp": 1551778850
    },
    {
        "content": "<p>I think you may be able to use <code>find_node_at_offset::&lt;ast::BindPat&gt;</code> directly in the non-<code>NameRef</code> case.  and combining it with <code>source_binder::function_from_child_node</code></p>",
        "id": 159990121,
        "sender_full_name": "vipentti",
        "timestamp": 1551779738
    },
    {
        "content": "<p>Or perhaps you first have to check that the node is <code>Name</code> before getting the bind pattern</p>",
        "id": 159990375,
        "sender_full_name": "vipentti",
        "timestamp": 1551780005
    },
    {
        "content": "<p>I just took a quick peek, and that's already what's happening here. And indeed, I added a test and it passes, so this already works, it just doesn't work for functions yet (which is then – I suspect – related to project wide references not being a thing yet).</p>",
        "id": 159997042,
        "sender_full_name": "Jean Mertz",
        "timestamp": 1551787556
    },
    {
        "content": "<p>Yep it's because of project wide references. Note that renaming is broken into two steps at the LSP layer: a prepare step where we should do validation (and we currently don't  really do any) and the actual rename operation</p>",
        "id": 160008374,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1551797134
    },
    {
        "content": "<p>What kind of validation should be done?</p>",
        "id": 160012406,
        "sender_full_name": "vipentti",
        "timestamp": 1551799951
    },
    {
        "content": "<p>probably things like: is the input blank, is it a valid identifier, can we actually rename the thing we are on etc.</p>",
        "id": 160094351,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1551878523
    }
]