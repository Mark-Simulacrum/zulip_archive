[
    {
        "content": "<p>In regards to this issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6110\">https://github.com/rust-analyzer/rust-analyzer/issues/6110</a><br>\nThe issue is for reordering methods either alphabetically or by trait definition.</p>\n<p>I have what seems to be a working method of reordering impl methods and I have a test that \"works\", it just shows that the <code>Left</code> and the <code>Right</code> are different, but they look exactly the same in the error output. Am I missing some sort of zero-width character, or did I not do the replacement correctly?</p>\n<p>Here's the code that does the replacement: <a href=\"https://github.com/fisherdarling/rust-analyzer/blob/6fb5c4b0a70cc9837396ddc164a47802b747229c/crates/assists/src/handlers/reorder_methods_sort.rs#L36\">https://github.com/fisherdarling/rust-analyzer/blob/6fb5c4b0a70cc9837396ddc164a47802b747229c/crates/assists/src/handlers/reorder_methods_sort.rs#L36</a></p>\n<p>Here's the test I am looking at: <a href=\"https://github.com/fisherdarling/rust-analyzer/blob/master/crates/assists/src/handlers/reorder_methods_sort.rs#L151\">https://github.com/fisherdarling/rust-analyzer/blob/master/crates/assists/src/handlers/reorder_methods_sort.rs#L151</a></p>\n<p>Here's the PR (ignore the obvious copy-paste for the other tests): <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/6809\">https://github.com/rust-analyzer/rust-analyzer/pull/6809</a></p>\n<p>Here's the test output:</p>\n<div class=\"codehilite\"><pre><span></span><code>Left:\nstruct Foo {c: usize}\n\nimpl Foo {\n    fn add(&amp;mut self, b: usize) { self.c += b }\n    fn sub(&amp;mut self, b: usize) { self.c -= b }\n    fn ten() -&gt; usize { 10 }\n}\n\n\nRight:\nstruct Foo {c: usize}\n\nimpl Foo {\n    fn add(&amp;mut self, b: usize) { self.c += b }\n    fn sub(&amp;mut self, b: usize) { self.c -= b }\n    fn ten() -&gt; usize { 10 }\n}\n\n\nDiff:\nstruct Foo {c: usize}\n\nimpl Foo {\n    fn add(&amp;mut self, b: usize) { self.c += b } // &lt;- red\n    fn sub(&amp;mut self, b: usize) { self.c -= b } // &lt;- red\n    fn add(&amp;mut self, b: usize) { self.c += b } // &lt;- green\n    fn sub(&amp;mut self, b: usize) { self.c -= b } // &lt;- green\n    fn ten() -&gt; usize { 10 }\n}\n</code></pre></div>",
        "id": 219524874,
        "sender_full_name": "Fisher Darling",
        "timestamp": 1607629980
    },
    {
        "content": "<p>It most likely is trailing whitespace</p>",
        "id": 219525408,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1607630236
    },
    {
        "content": "<p>as those become invisible in these diffs</p>",
        "id": 219525431,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1607630249
    },
    {
        "content": "<p>Oh man thank you so much!</p>",
        "id": 219525620,
        "sender_full_name": "Fisher Darling",
        "timestamp": 1607630328
    },
    {
        "content": "<p>Jeez, I really should've thought of that</p>",
        "id": 219525645,
        "sender_full_name": "Fisher Darling",
        "timestamp": 1607630340
    },
    {
        "content": "<p>I guess we should patch diff-rendering code to render trailing ws visibly</p>",
        "id": 219525722,
        "sender_full_name": "matklad",
        "timestamp": 1607630379
    },
    {
        "content": "<p>Should I let users sort alphabetically even if it's an <code>impl Trait</code>?</p>",
        "id": 219552757,
        "sender_full_name": "Fisher Darling",
        "timestamp": 1607646524
    },
    {
        "content": "<p>I decided to just have it sort alphabetically if it's an <code>impl Struct</code> and match the def order if it's an <code>impl Trait</code></p>",
        "id": 219561417,
        "sender_full_name": "Fisher Darling",
        "timestamp": 1607656336
    },
    {
        "content": "<p>SGTM!</p>\n<p>I am not entirely sure if we should have \"sort alphabetically\" at all. I think almost all guides suggesting sorting in semantic order</p>",
        "id": 219582244,
        "sender_full_name": "matklad",
        "timestamp": 1607679519
    },
    {
        "content": "<p>OTOH, if you <em>do</em> want to sort alphabetically, I wish the IDE has some way to do that....</p>",
        "id": 219582264,
        "sender_full_name": "matklad",
        "timestamp": 1607679543
    },
    {
        "content": "<p>I what I'd want personally is \"reorder methods\", with an interactive prompt</p>",
        "id": 219604199,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607692574
    },
    {
        "content": "<p>Then I can choose the order I want and possibly even the groupings if there are impl blocks</p>",
        "id": 219604234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607692594
    },
    {
        "content": "<p>Because yeah alphabetical doesn't make sense to me, that would put <code>unwrap</code> and <code>expect</code> across the file from each other</p>",
        "id": 219604434,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607692683
    },
    {
        "content": "<p>I wouldn't want an interactive prompt -- I'd just want a hotkey to move methods up/down</p>",
        "id": 219611409,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1607696756
    },
    {
        "content": "<p>That... is actually something we should do</p>",
        "id": 219613547,
        "sender_full_name": "matklad",
        "timestamp": 1607697777
    },
    {
        "content": "<p><a href=\"https://github.com/intellij-rust/intellij-rust/tree/25f37175094192ba88f345f03b2a4b5b941dd395/src/main/kotlin/org/rust/ide/actions/mover\">https://github.com/intellij-rust/intellij-rust/tree/25f37175094192ba88f345f03b2a4b5b941dd395/src/main/kotlin/org/rust/ide/actions/mover</a></p>",
        "id": 219613551,
        "sender_full_name": "matklad",
        "timestamp": 1607697778
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6823\">https://github.com/rust-analyzer/rust-analyzer/issues/6823</a></p>",
        "id": 219613870,
        "sender_full_name": "matklad",
        "timestamp": 1607697922
    }
]