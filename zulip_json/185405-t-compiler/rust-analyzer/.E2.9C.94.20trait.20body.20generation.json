[
    {
        "content": "<p>PR for <code>PartialOrd</code> <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10529\">https://github.com/rust-analyzer/rust-analyzer/pull/10529</a></p>",
        "id": 257200962,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634044771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211722\">Yoshua Wuyts [he/they]</span> has marked this topic as resolved.</p>",
        "id": 257349878,
        "sender_full_name": "Notification Bot",
        "timestamp": 1634125014
    },
    {
        "content": "<p>Okay, so uhhh the PartialOrd impl has a bit of an issue.</p>",
        "id": 258002107,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550258
    },
    {
        "content": "<p>In the tuple case I think we can always add the <code>&amp;</code></p>",
        "id": 258002197,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634550313
    },
    {
        "content": "<p>I'm writing up a playground to show what's up: there's another issue</p>",
        "id": 258002433,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> here is: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c7508bdba6f4bf0b20234dd54c93dfb0\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c7508bdba6f4bf0b20234dd54c93dfb0</a></p>",
        "id": 258002916,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550698
    },
    {
        "content": "<p>Unless we can resolve this, I think what we should do is disable <code>PartialOrd</code> implementation for enums until std supports this.</p>",
        "id": 258003006,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550745
    },
    {
        "content": "<p>So you can't compare the discriminants directly, and <code>discriminant_value</code> is unstable?</p>",
        "id": 258003106,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634550815
    },
    {
        "content": "<p>yep exactly</p>",
        "id": 258003133,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550836
    },
    {
        "content": "<p>also oddly: <code>discriminant_value</code> has no requirement to be <code>PartialOrd</code>, I think that's just a guarantee that the impl on enum provides?</p>",
        "id": 258003216,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550864
    },
    {
        "content": "<p>Yeah, I think so</p>",
        "id": 258003257,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634550890
    },
    {
        "content": "<p>So I'm not even sure what the path for bringing this to stable would look like :/</p>",
        "id": 258003268,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550895
    },
    {
        "content": "<p>Sad, but we should probably disable it</p>",
        "id": 258003277,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634550897
    },
    {
        "content": "<p>sounds good; I'll put that together with the <code>&amp;</code> fix patch (:</p>",
        "id": 258003340,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1634550928
    }
]