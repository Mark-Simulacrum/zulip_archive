[
    {
        "content": "<p>Hey, in <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4350\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4350\">https://github.com/rust-analyzer/rust-analyzer/pull/4350</a> I propose to change our API for assists. I feel like the new version is better, but I want to bump the visibility of this, in case someone comes up with even a better improvement, before I refactored all 30-ish existing assists :)</p>",
        "id": 196764520,
        "sender_full_name": "matklad",
        "timestamp": 1588855698
    },
    {
        "content": "<p>The new API mirrors the one from completions, where we split <code>&amp;</code> context and <code>&amp;mut</code> accumulator.</p>",
        "id": 196764587,
        "sender_full_name": "matklad",
        "timestamp": 1588855734
    },
    {
        "content": "<p>The two main changes are:</p>\n<ul>\n<li>there's no awkwardness when <code>ctx</code> can't be captured into assist closure</li>\n<li>we now return <code>Option&lt;()&gt;</code> rather than <code>Option&lt;Assist&gt;</code>, so groups and multi-assists become easier</li>\n</ul>",
        "id": 196765021,
        "sender_full_name": "matklad",
        "timestamp": 1588855934
    },
    {
        "content": "<p>Yay multi assists &lt;3</p>",
        "id": 196765582,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856198
    },
    {
        "content": "<p>I think it could also be easier with this refactor if as in completions we want to have a kind of scoring to manage assists orders</p>",
        "id": 196765909,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856356
    },
    {
        "content": "<p>For assist, we already have this actually</p>",
        "id": 196765967,
        "sender_full_name": "matklad",
        "timestamp": 1588856391
    },
    {
        "content": "<p>Based on alphabetical order ?</p>",
        "id": 196766074,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856421
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L93\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L93\">https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L93</a></p>",
        "id": 196766078,
        "sender_full_name": "matklad",
        "timestamp": 1588856423
    },
    {
        "content": "<p>Oh ok ! I missed it</p>",
        "id": 196766114,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856441
    },
    {
        "content": "<p>and then, solely for tie-breaking, <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L177-L180\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L177-L180\">https://github.com/rust-analyzer/rust-analyzer/blob/f4cd75ac06dff7f5a95065a6c3868669e5c2ab27/crates/ra_assists/src/lib.rs#L177-L180</a></p>",
        "id": 196766115,
        "sender_full_name": "matklad",
        "timestamp": 1588856442
    },
    {
        "content": "<p>Why does it return <code>Option&lt;()&gt;</code> instead of <code>()</code>?</p>",
        "id": 196766510,
        "sender_full_name": "bjorn3",
        "timestamp": 1588856611
    },
    {
        "content": "<p>That's a hack to make <code>?</code> work</p>",
        "id": 196766912,
        "sender_full_name": "matklad",
        "timestamp": 1588856808
    },
    {
        "content": "<p>Ideally, it should return some ZST which is convertable from <code>NoneError</code>, but that's not stable yet</p>",
        "id": 196766995,
        "sender_full_name": "matklad",
        "timestamp": 1588856874
    },
    {
        "content": "<p>What is ZST ? :)</p>",
        "id": 196767065,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856900
    },
    {
        "content": "<p>zero sized type</p>",
        "id": 196767081,
        "sender_full_name": "bjorn3",
        "timestamp": 1588856914
    },
    {
        "content": "<p>Ok sorry :)</p>",
        "id": 196767099,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1588856924
    },
    {
        "content": "<p>That's no reason to say sorry :) It's useful to know jargon, but we all at some point didn't know it</p>",
        "id": 196767272,
        "sender_full_name": "matklad",
        "timestamp": 1588857010
    },
    {
        "content": "<p>What's the difference between an unresolved/resolved assist?</p>",
        "id": 196767849,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1588857326
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assist_ctx.rs#L47-L77\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assist_ctx.rs#L47-L77\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assist_ctx.rs#L47-L77</a></p>",
        "id": 196768027,
        "sender_full_name": "matklad",
        "timestamp": 1588857420
    },
    {
        "content": "<p>see these docs</p>",
        "id": 196768031,
        "sender_full_name": "matklad",
        "timestamp": 1588857423
    },
    {
        "content": "<p>We want to optimize assists to only compute the edit if the user selected the assist</p>",
        "id": 196768084,
        "sender_full_name": "matklad",
        "timestamp": 1588857457
    },
    {
        "content": "<p>We dont' do this in practice yet, (as LSP doesn't have <code>resolveAssist</code>), but our internal API is build around this idea</p>",
        "id": 196768158,
        "sender_full_name": "matklad",
        "timestamp": 1588857489
    },
    {
        "content": "<p>(that's the reason for <code>-&gt; Option&lt;_&gt;</code> and closure-based <code>.add_assist</code>)</p>",
        "id": 196768188,
        "sender_full_name": "matklad",
        "timestamp": 1588857508
    }
]