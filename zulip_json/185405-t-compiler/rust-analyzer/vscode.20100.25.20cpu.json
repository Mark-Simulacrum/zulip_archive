[
    {
        "content": "<p>Hey, I'm using vscode with the rust-anlayzer and each time I run <code>x check</code> the whole app freeze for a dozen of seconds after the execution is done, and the fan start making a lot of noise. I'm using mac os. Is there a way to avoid this ?<br>\n<a href=\"/user_uploads/4715/PeD6fBV9zK2OzVSVs88FSst4/Screenshot-2021-04-26-at-22.21.17.png\">Screenshot-2021-04-26-at-22.21.17.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/PeD6fBV9zK2OzVSVs88FSst4/Screenshot-2021-04-26-at-22.21.17.png\" title=\"Screenshot-2021-04-26-at-22.21.17.png\"><img src=\"/user_uploads/4715/PeD6fBV9zK2OzVSVs88FSst4/Screenshot-2021-04-26-at-22.21.17.png\"></a></div>",
        "id": 236414664,
        "sender_full_name": "tdelabro",
        "timestamp": 1619559384
    },
    {
        "content": "<p>Did you disable \"check on save\" in RA? That <code>rustc</code> process is either started by RA (for \"check on save\"), or by your <code>./x.py check</code>. The other one (Code Renderer) is unrelated, does Code show anything new (maybe a lot of errors) when it starts working again?</p>",
        "id": 236455995,
        "sender_full_name": "Laurențiu",
        "timestamp": 1619590715
    },
    {
        "content": "<p>And can you also keep an eye on the available RAM?</p>",
        "id": 236456352,
        "sender_full_name": "Laurențiu",
        "timestamp": 1619590996
    },
    {
        "content": "<p>Yes I disabled the check on save for RA. After some research I figured out that it was a common problem for vscode when working on huge repos (<a href=\"https://github.com/Microsoft/vscode/issues/3998\">https://github.com/Microsoft/vscode/issues/3998</a>) and the only workaround was to exclude files from watch. So I added:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code>  <span class=\"nt\">\"files.watcherExclude\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"**/build/**\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"**/node_modules/**\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"**/src/test/**\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n</code></pre></div>\n<p>to my settings.json and it's usable again. The pike over 100% cpu only last for less than a second now.<br>\nThere is probably  other folders I can exclude without ruining the coding experience.</p>",
        "id": 236480595,
        "sender_full_name": "tdelabro",
        "timestamp": 1619604166
    },
    {
        "content": "<p>heh, file watching is an unsolved problem. Porting <code>watchman</code>'s design to Rust, such that it can work both as an external service and as a library, would be a big deal</p>",
        "id": 236482157,
        "sender_full_name": "matklad",
        "timestamp": 1619604905
    }
]