[
    {
        "content": "<p>Hi,</p>\n<p>I'd like to discuss a possible UX improvement, called it <code>hover actions</code> :)<br>\nTwo screencasts to demonstrate the idea:</p>\n<p><a href=\"/user_uploads/4715/iSVs16yQag9Fu1kbgFMezsJB/hover_actions_run.gif\">hover_actions_run.gif</a><br>\nThe first one is the Run|Debug lens alternative. Personally I do not like CodeLens and prefer to turn them off. Though sometimes it's handy to run a test with a single mouse click.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/iSVs16yQag9Fu1kbgFMezsJB/hover_actions_run.gif\" title=\"hover_actions_run.gif\"><img src=\"/user_uploads/4715/iSVs16yQag9Fu1kbgFMezsJB/hover_actions_run.gif\"></a></div><p>And while implementing this it has dawned upon me that such <code>hover actions</code> might be super useful for inlay hints:<br>\n<a href=\"/user_uploads/4715/fOsTdrNpyoRorvExBrIBEZrG/hover_actions_goto.gif\">hover_actions_goto.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/fOsTdrNpyoRorvExBrIBEZrG/hover_actions_goto.gif\" title=\"hover_actions_goto.gif\"><img src=\"/user_uploads/4715/fOsTdrNpyoRorvExBrIBEZrG/hover_actions_goto.gif\"></a></div><p>vscode has <code>Go to Type Definition</code> command, but it is almost useless for generics. In a hover it is possible to select a particular type.</p>\n<p>What do you think?</p>",
        "id": 198442711,
        "sender_full_name": "vsrs",
        "timestamp": 1590155270
    },
    {
        "content": "<p>The best part is that everything is done on the server side, and it should work with all clients out of the box.</p>\n<p>Well, not in the real world :) It depends on how a client renderers markdown. It should support command links:<br>\n<code>[title](command:${command.id}?${commandArguments} \"hint\")</code></p>",
        "id": 198442862,
        "sender_full_name": "vsrs",
        "timestamp": 1590155351
    },
    {
        "content": "<p>Love the second hover. I always keep trying to jump to definitions to using the variables which is pretty lengthy sometimes</p>",
        "id": 198445814,
        "sender_full_name": "pksunkara",
        "timestamp": 1590156743
    },
    {
        "content": "<p>One other idea: would it be possible to have control+click on the inlay hint trigger go to definition?</p>",
        "id": 198452329,
        "sender_full_name": "detrumi",
        "timestamp": 1590160076
    },
    {
        "content": "<p>Afaik, it is impossible. There is not way to check a key state in vscode.</p>",
        "id": 198455608,
        "sender_full_name": "vsrs",
        "timestamp": 1590161737
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Hover.20actions/near/198452329\">said</a>:</p>\n<blockquote>\n<p>One other idea: would it be possible to have control+click on the inlay hint trigger go to definition?</p>\n</blockquote>\n<p>I think we could do that if we supported commands returned from inlay hints.</p>",
        "id": 198458579,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1590163115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"298653\">vsrs</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Hover.20actions/near/198442862\">said</a>:</p>\n<blockquote>\n<p>The best part is that everything is done on the server side, and it should work with all clients out of the box.</p>\n<p>Well, not in the real world :) It depends on how a client renderers markdown. It should support command links:<br>\n<code>[title](command:${command.id}?${commandArguments} \"hint\")</code></p>\n</blockquote>\n<p>vscode supports custom markdown renderers so I think that could work?</p>",
        "id": 198458914,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1590163261
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203366\">Jeremy Kolb</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Hover.20actions/near/198458914\">said</a>:</p>\n<blockquote>\n<p>vscode supports custom markdown renderers so I think that could work?</p>\n</blockquote>\n<p>I'm talking about other editors.</p>\n<p>The gifs are recorded in vscode. The implementation needs some polishing, but already works :) I'm just wondering if someone else will like it.</p>",
        "id": 198466904,
        "sender_full_name": "vsrs",
        "timestamp": 1590166867
    },
    {
        "content": "<p>Right... my suggestion only applies to vscode</p>",
        "id": 198475473,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1590171161
    },
    {
        "content": "<p>I completely missed that this is something that works. I thought you had mocked it up. I like both of those</p>",
        "id": 198475567,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1590171230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Did you have a chance to look at this? I'd like to add at least Run Debug actions.</p>",
        "id": 199010314,
        "sender_full_name": "vsrs",
        "timestamp": 1590665836
    },
    {
        "content": "<p>Yes, I like this!</p>",
        "id": 199010439,
        "sender_full_name": "matklad",
        "timestamp": 1590665904
    },
    {
        "content": "<p>I imagine there should be some amount of protocl-level design here, but that's just some work that needs to be done</p>",
        "id": 199010475,
        "sender_full_name": "matklad",
        "timestamp": 1590665938
    },
    {
        "content": "<p>Not at all :) It is pure markdown generated on the server side.</p>",
        "id": 199010519,
        "sender_full_name": "vsrs",
        "timestamp": 1590666001
    },
    {
        "content": "<p>Nice!</p>",
        "id": 199010591,
        "sender_full_name": "matklad",
        "timestamp": 1590666035
    },
    {
        "content": "<p>(as a general cleanp refactoring, we might want to introduce <code>struct Markdown(String)</code> type during this work)</p>",
        "id": 199010615,
        "sender_full_name": "matklad",
        "timestamp": 1590666064
    },
    {
        "content": "<p>with something like add_section, add_link, etc?</p>",
        "id": 199011016,
        "sender_full_name": "vsrs",
        "timestamp": 1590666382
    },
    {
        "content": "<p>I don't think we need to go as far as providing a type-safe builder, the main benefit I see is that <em>consumers</em> see if it is a String or a Markdown content or what not</p>",
        "id": 199011045,
        "sender_full_name": "matklad",
        "timestamp": 1590666420
    },
    {
        "content": "<p>ok</p>",
        "id": 199011092,
        "sender_full_name": "vsrs",
        "timestamp": 1590666466
    },
    {
        "content": "<p>Newtypes are actually very nice to encode any kind of invariants/subsets/brending (attaching new meaning) like <code>RelativePathBuf(PathBuf)</code>, <code>NonZeroU32(u32)</code>, <code>ValidRustSourceCode(String)</code>,  <code>NonEmptyString(String)</code>, <code>IsValid(bool)</code></p>",
        "id": 199017584,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1590670391
    },
    {
        "content": "<p>I'm aware of the newtype idiom :) Just wanted to clarify if I got the idea right (nope, it turns out to be much simpler)</p>",
        "id": 199024155,
        "sender_full_name": "vsrs",
        "timestamp": 1590673620
    },
    {
        "content": "<p>We just need to keep in mind that some clients don't support markdown but that's probably not a big deal and maybe irrelevant here (I haven't looked)</p>",
        "id": 199035032,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1590678396
    },
    {
        "content": "<p>Of course. By default, the server does not add any hover actions. Only if the client explicitly sets in the initializationOptions that he supports them.</p>",
        "id": 199138466,
        "sender_full_name": "vsrs",
        "timestamp": 1590749538
    }
]