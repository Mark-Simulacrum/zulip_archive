[
    {
        "content": "<p>With <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10232\">https://github.com/rust-analyzer/rust-analyzer/pull/10232</a> merged, all the tasks in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9868\">https://github.com/rust-analyzer/rust-analyzer/issues/9868</a> are now checked. Adding those ide tests revealed a lot of small problems which are now fixed as well.<br>\nWould be good to maybe brainstorm once more for things that still need testing. Pretty much everything macro related in the <code>ide</code> crate has tests now, <code>ide_completion</code> also has a few tests now. <code>ide_assists</code> doesn't really though since all of the <code>ide</code> and <code>ide_assists</code> stuff goes through semantics which is the main entry point for descension and ascension logic it is technically also pretty much tested I believe.</p>",
        "id": 253249087,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631625754
    },
    {
        "content": "<p>wow, amazing work <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 253249250,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1631625820
    },
    {
        "content": "<p>Might be a good opportunity to re-visit <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9403\">https://github.com/rust-analyzer/rust-analyzer/issues/9403</a></p>",
        "id": 253249876,
        "sender_full_name": "matklad",
        "timestamp": 1631626060
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/hZ42lgF20VXOW5gdAZ6GKPF1/image.png\">image.png</a> <br>\nI think enabling inlay hints wasn't such a great idea after all <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/hZ42lgF20VXOW5gdAZ6GKPF1/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/hZ42lgF20VXOW5gdAZ6GKPF1/image.png\"></a></div>",
        "id": 253297039,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631643203
    },
    {
        "content": "<p>do we ignore where the identifier is located in the input when displaying the hints?</p>",
        "id": 253297875,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1631643503
    },
    {
        "content": "<p>Not really, I made a logic mistake. The inlay hint logic is traversing the expansion now, then I'm mapping the generated inlay hints up out of the macro again which then of course lifts up all the inlay hints of generated code from the macro.</p>",
        "id": 253298098,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631643593
    },
    {
        "content": "<p>Should instead descend the expressions we can see in the original body only and try to compute the inlay hints for the descended note.</p>",
        "id": 253298212,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631643617
    },
    {
        "content": "<p>So the inlay hints visible there are all from the expressions generated by salsa in that attribute invocation that arent visible in the input <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 253298376,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631643684
    },
    {
        "content": "<p>This might be tricky to do though, since this requires descending a syntax node, but we only really have infra for descending tokens  currently. Is this something we would be able to do with a different token mapping abstraction?<br>\nWill revert for now until I give that another look.</p>",
        "id": 253299631,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631644126
    },
    {
        "content": "<p>hm. could we do something like only add the inlay hint if the token it's attached to is actually in the original code?</p>",
        "id": 253301874,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1631644995
    },
    {
        "content": "<p>That might work.<br>\nThinking this again, for inlay hints this is a bit odd anyways, because we want to inspect the structure of the nodes in the (non-descended) macro input but we also need to inspect the descended expansion for some things as well, like type fetching. Since some inlay hints, like type hints for example do not trigger if the type is already annotated, but if the attribute expansion annotates it we still wanna show it in the input if there is no annotation there.</p>",
        "id": 253302342,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631645207
    },
    {
        "content": "<p>If important, I've also noted the same for runnables: once include!d the bindgen output with tests and got a lot of \"Run test\" lens.</p>",
        "id": 253395541,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1631703962
    },
    {
        "content": "<p>That is intentional, just unfortunate when a macro creates <em>a lot</em> of tests like including bindgen output</p>",
        "id": 253396297,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631704342
    },
    {
        "content": "<p>maybe we could have some way of having just one lens that prompts you for the test to run if there are multiple on the same place</p>",
        "id": 253397755,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1631705164
    },
    {
        "content": "<p>Oh that sounds like a good idea <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 253398376,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631705557
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10244\">https://github.com/rust-analyzer/rust-analyzer/issues/10244</a></p>",
        "id": 253400105,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1631706564
    }
]