[
    {
        "content": "<p><a href=\"/user_uploads/4715/SmezQNgo5DGXwzkZBGQ8XRZC/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/SmezQNgo5DGXwzkZBGQ8XRZC/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/SmezQNgo5DGXwzkZBGQ8XRZC/pasted_image.png\"></a></div><p>The first one is from <code>add_import.rs</code> and it turns the fully qualified name into an import + the end of the FQN.<br>\nThe 2nd one is auto import.</p>\n<p>I want to change this, any proposals on the naming?</p>",
        "id": 187646038,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581087615
    },
    {
        "content": "<p>it's weird that the 'import ast' shows up when the cursor is on <code>cast</code>, I think</p>",
        "id": 187646096,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581087659
    },
    {
        "content": "<p>on the other hand, importing <code>ast</code> is actually the more useful one here <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 187646162,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581087716
    },
    {
        "content": "<p>Yes, we need to auto import <code>ast</code> in such cases IMO, not the <code>cast</code> if we don't modify the string under the caret (which we don't now).</p>\n<p>The other question is why do we propose to import the <code>cast</code> in the first place, that's what I tried to debug but instantly got confused by two similarly named actions :)</p>",
        "id": 187646929,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581088207
    },
    {
        "content": "<p>that's the <code>add_import</code> action, which adds an import for a fully qualified path</p>",
        "id": 187647685,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581088595
    },
    {
        "content": "<p>maybe we shouldn't propose that one if the path doesn't actually resolve</p>",
        "id": 187647724,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581088624
    },
    {
        "content": "<p>Damn, I just wanted to quickly ask a naming question without diving into the details <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>\n<p><code>ast::UserItem::cast</code> fully resolves, the code compiles, here's the code pointer: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assists/auto_import.rs#L35\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assists/auto_import.rs#L35\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_assists/src/assists/auto_import.rs#L35</a></p>\n<p><code>Import ast::UserItem::cast</code> is brought by the <code>add_import.rs</code>and is fully valid from the functionality point of view: move FQN to <code>use</code> statement, leave the last part of it in the code.<br>\n<code>Import ast</code> is brought by <code>auto_import.rs</code> and is not valid at all, it should not appear. I think that happens due to <code>source_analyzer.resolve_path</code> returning <code>None</code>, but that's another thing, I'll bother you about it later.</p>\n<p>What I want now is to get rid of two equally named <code>Import ...</code> pop-ups hence asking your opinions on the naming.</p>",
        "id": 187648242,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581088898
    },
    {
        "content": "<p>My opinion: change the <code>add_import.rs</code> one to show the <code>Add import ...</code> pop-up.</p>",
        "id": 187648451,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581089016
    },
    {
        "content": "<p>Well, in this situation one of the actions shouldn't actually be there, so I'm not convinced that the name collision is actually a problem :)</p>",
        "id": 187648637,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581089136
    },
    {
        "content": "<p>Ah is one of these <code>add_import</code> and the other <code>auto_import</code>?</p>",
        "id": 187648656,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581089151
    },
    {
        "content": "<p>If so they should definitely have different labels</p>",
        "id": 187648720,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581089179
    },
    {
        "content": "<blockquote>\n<p>Well, in this situation one of the actions shouldn't actually be there, so I'm not convinced that the name collision is actually a problem :)</p>\n</blockquote>\n<p>That actually makes sense. Still, one more argument for the renaming: if you open the action list twice (first for the unresolved path, then for the resolved path after the auto import), we'll get the same label twice which may be a bit confusing.</p>",
        "id": 187648790,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581089234
    },
    {
        "content": "<p>I think you're both right :)</p>",
        "id": 187648924,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581089294
    },
    {
        "content": "<p>well, you'd have imported <code>ast</code>, and then you'd get the option to import <code>ast::UseItem::cast</code>. I think they're both doing kind of the same thing, adding an import. Writing <code>Add import foo</code> for one and <code>Import foo</code> for the other doesn't really make things clearer for the user</p>",
        "id": 187648965,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581089330
    },
    {
        "content": "<p>Yeah, and I'm almost happy after hearing the latest Florian's idea, funny that I did not think about it from that perspective.</p>\n<p>Still confuses me a lot when debugging those false-positives since sometimes I have no idea which label does what :)<br>\nBut I'll concentrate on the actuall error now, thank you.</p>",
        "id": 187649189,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1581089469
    },
    {
        "content": "<p>So what's the difference between add import and auto import?</p>",
        "id": 187649704,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581089827
    },
    {
        "content": "<p>add import works on any qualified path (like <code>a::b::c</code>), adds an import for that path and replaces the original path by the last segment (so <code>use a::b::c; (...) c</code>).<br>\nauto import works on a name that doesn't resolve and looks for paths that you could import for it. so you'd have <code>c</code> and it'd find the <code>a::b::c</code> automatically</p>",
        "id": 187649869,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581089930
    },
    {
        "content": "<p>I see. I wouldn't mind if they were the same action.</p>",
        "id": 187649958,
        "sender_full_name": "Laurențiu",
        "timestamp": 1581089992
    },
    {
        "content": "<p>well, effectively they are (as it looks to the user)</p>",
        "id": 187650035,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1581090020
    },
    {
        "content": "<p>While in IDE, do as IDEA does:</p>\n<p><a href=\"/user_uploads/4715/yhLCepPo8zZAaC9CDUMdtMc5/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/yhLCepPo8zZAaC9CDUMdtMc5/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/yhLCepPo8zZAaC9CDUMdtMc5/pasted_image.png\"></a></div><p>\"Replace qualified path with use\"</p>",
        "id": 187655643,
        "sender_full_name": "matklad",
        "timestamp": 1581093747
    }
]