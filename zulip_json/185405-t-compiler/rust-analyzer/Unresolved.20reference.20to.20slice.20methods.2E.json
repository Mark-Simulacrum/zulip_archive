[
    {
        "content": "<p>I seem to have a lot of unresolved references for slice functions.</p>\n<p>For example, see: this image: <a href=\"/user_uploads/4715/8GVlBZq-1tU-FHMYRbgKpNu_/Screen-Shot-2022-04-01-at-5.54.14-PM.png\">Screen-Shot-2022-04-01-at-5.54.14-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/8GVlBZq-1tU-FHMYRbgKpNu_/Screen-Shot-2022-04-01-at-5.54.14-PM.png\" title=\"Screen-Shot-2022-04-01-at-5.54.14-PM.png\"><img src=\"/user_uploads/4715/8GVlBZq-1tU-FHMYRbgKpNu_/Screen-Shot-2022-04-01-at-5.54.14-PM.png\"></a></div><p>The red+underline on <code>len()</code> and such are coming from the semantic scope for <code>unresolvedReference</code>. This happens on prerelease and stable. Is this a known issue?</p>",
        "id": 277495511,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648861169
    },
    {
        "content": "<p>This is not a known problem no</p>",
        "id": 277495745,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1648861425
    },
    {
        "content": "<p>Is there anything special going in that file? <code>#[cfg(...)]</code> attributes etc?</p>",
        "id": 277495800,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1648861469
    },
    {
        "content": "<p>Not at all</p>",
        "id": 277496145,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648861851
    },
    {
        "content": "<p>Hmm, it works fine for me for slice methods like in the screenshot :/</p>",
        "id": 277496163,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1648861902
    },
    {
        "content": "<p>is that code inside of an proc-macro attribute annotated item?</p>",
        "id": 277496340,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1648862122
    },
    {
        "content": "<p>Judging from the indentation I'd guess not, odd. Not sure what could cause that</p>",
        "id": 277496390,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1648862164
    },
    {
        "content": "<p>No, it's just a normal module</p>",
        "id": 277496963,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648862860
    },
    {
        "content": "<p>give me a second and i'll upload it to github</p>",
        "id": 277496965,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648862863
    },
    {
        "content": "<p><a href=\"https://github.com/thomcc/envparse/blob/main/src/parse.rs#L81-L100\">https://github.com/thomcc/envparse/blob/main/src/parse.rs#L81-L100</a></p>",
        "id": 277497129,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863071
    },
    {
        "content": "<p>(that code is not yet tested very much fyi, but that is probably irrelevant)</p>",
        "id": 277497135,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863089
    },
    {
        "content": "<p>(... tbh i did the <code>matches!</code> mostly because r-a wouldn't autocomplete is_ascii_whitespace() and i couldn't remember if there was a _ between white and space)</p>",
        "id": 277497182,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863136
    },
    {
        "content": "<p>This is on vscode insiders, if it matters. version:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Version</span>: <span class=\"mf\">1.67.0</span><span class=\"o\">-</span><span class=\"n\">insider</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Universal</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">Commit</span>: <span class=\"mi\">8</span><span class=\"n\">b7086afdbfd42bf6e7b8c0bb586530bf7cf1396</span><span class=\"w\"></span>\n<span class=\"n\">Date</span>: <span class=\"mi\">2022</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"n\">T05</span>:<span class=\"mi\">16</span>:<span class=\"mf\">51.251</span><span class=\"n\">Z</span><span class=\"w\"></span>\n<span class=\"n\">Electron</span>: <span class=\"mf\">17.3.0</span><span class=\"w\"></span>\n<span class=\"n\">Chromium</span>: <span class=\"mf\">98.0.4758.141</span><span class=\"w\"></span>\n<span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"n\">js</span>: <span class=\"mf\">16.13.0</span><span class=\"w\"></span>\n<span class=\"n\">V8</span>: <span class=\"mf\">9.8.177.13</span><span class=\"o\">-</span><span class=\"n\">electron</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">OS</span>: <span class=\"nc\">Darwin</span><span class=\"w\"> </span><span class=\"n\">arm64</span><span class=\"w\"> </span><span class=\"mf\">21.4.0</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277497213,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863240
    },
    {
        "content": "<p>which is the latest.</p>",
        "id": 277497255,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863251
    },
    {
        "content": "<p>it actually seems like a lot of things from libcore don't have methods. str, Option, etc.</p>",
        "id": 277497263,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648863278
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11876\">https://github.com/rust-analyzer/rust-analyzer/issues/11876</a></p>",
        "id": 277498382,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648864358
    },
    {
        "content": "<p>It has some more info. In particular it seems like r-a might be failing to resolve inherent methods of things from libcore. It manages to resolve other things, including non-inherent methods.</p>\n<p>This is not specific to this workspace, and is true for all workspaces on this machine. I haven't checked other machines, but I didn't notice this before (although my work machine may have a pinned r-a version, so that may mean nothing).</p>\n<p>It doesn't seem to be impacted by the existence of the <a href=\"http://build.rs\">build.rs</a>, by the <code>#[no_std]</code>, or by the <code>const</code>ness of the function.</p>",
        "id": 277498588,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648864517
    },
    {
        "content": "<p>Oh, it seems like it goes away if I don't use nightly rust.</p>",
        "id": 277498832,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648864715
    },
    {
        "content": "<p>I can live with that for a little bit I guess</p>",
        "id": 277498843,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648864758
    }
]