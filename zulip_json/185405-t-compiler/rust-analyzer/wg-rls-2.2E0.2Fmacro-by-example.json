[
    {
        "content": "<p>One piece of infrastructure we need to unlock macro-expansion/name resolution experimentation is handling of macro by example. Specifically:</p>\n<ul>\n<li>compiling a token tree into a macro (handling macro_rules itself)</li>\n<li>matching a token stream against the set of patterns (first phase of mbe expansion)</li>\n<li>producig a resulting token stream from the rules template and matched fragments (second phase of mbe expansion)</li>\n</ul>\n<p>There's a super prototype implementation in rust-analyzer already, and I wonder how we should expand  it further. For example, I can imagine we can fully libariify this, and share code with rustc (so, macro-by-example working subgroup can be formed). Or we can  write something useful for proc-macro authors (perhaps sharing code with nrc's proc-macro-rules). Or we can decide that full support of mbe is out of scope, and just make a minimal impl that allows experimentation with hygiene and incremental name resolution.</p>\n<p>I don't really have any opinion here :) Perhaps someone from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> has more experience in this area?</p>",
        "id": 160950666,
        "sender_full_name": "matklad",
        "timestamp": 1552741012
    },
    {
        "content": "<p>This commit sums up the current state of mbe in rust-analyzer pretty well <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/fb6576b6b7f500c37123fd10b1c8f90d6d90219a\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/fb6576b6b7f500c37123fd10b1c8f90d6d90219a\">https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/fb6576b6b7f500c37123fd10b1c8f90d6d90219a</a> :)</p>",
        "id": 160950678,
        "sender_full_name": "matklad",
        "timestamp": 1552741057
    },
    {
        "content": "<blockquote>\n<p>We went looking everywhere, but couldnâ€™t find those commits.</p>\n</blockquote>\n<p>I hope that's not the actual state of mbe in rust-analyzer ;)</p>",
        "id": 160955814,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1552750354
    },
    {
        "content": "<p>Usually indicates that the branch was force-pushed and indeed that specific commit hash is gone.</p>",
        "id": 160955953,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1552750653
    },
    {
        "content": "<p>Editing the URL to remove the SHA and go back to the PR proper is usually a good step</p>",
        "id": 160955996,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1552750687
    },
    {
        "content": "<p>Yeah, the situation is a tiny bit better: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/1bcc01822dbfc4f917105b5e22032ad8a728b33b\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/1bcc01822dbfc4f917105b5e22032ad8a728b33b\">https://github.com/rust-analyzer/rust-analyzer/pull/968/commits/1bcc01822dbfc4f917105b5e22032ad8a728b33b</a> :D (link to commit, b/c PR is <em>huge</em>)</p>",
        "id": 160956260,
        "sender_full_name": "matklad",
        "timestamp": 1552751214
    }
]