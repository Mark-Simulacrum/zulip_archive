[
    {
        "content": "<p>I'm starting work on the next feature of the <code>add_function</code> assist: generating the function in another module if a qualified path is used! (inspired by <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3969#issuecomment-613910383\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3969#issuecomment-613910383\">matklad's feature request</a>)<br>\nAnd I'm obviously getting stuck.</p>\n<p>I assume I want to find the target module via <code>code_model::Module::find_use_path</code>? <br>\nIt would be nice to pass a <code>ModuleDefId::FunctionId</code> for the <code>item</code> argument, only the given function doesn't exist yet.<br>\nI could probably remove the last segment from the path and try to pass that to <code>find_use_path</code> (as a <code>ModuleDefId::ModuleId</code>), does that sound reasonable?<br>\nIf yes, do you also have some tips on how to do that path manipulation?</p>",
        "id": 194351945,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587063628
    },
    {
        "content": "<p>No, <code>find_use_path</code> is a reverse operation, you want <code>Semantic::resolve_path</code></p>",
        "id": 194352228,
        "sender_full_name": "matklad",
        "timestamp": 1587063743
    },
    {
        "content": "<p>ah. thanks!</p>",
        "id": 194352288,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587063771
    },
    {
        "content": "<p>will that resolve a path to <code>foo::bar</code>, if the module <code>foo</code> exists but the function <code>bar</code> doesn't?</p>",
        "id": 194352386,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587063817
    },
    {
        "content": "<p>nope.<br>\nagain, do i want to try to resolve <code>foo</code> in that example to find the module? and then generate <code>fn bar ...</code> in there?</p>",
        "id": 194352848,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587064040
    },
    {
        "content": "<p>You'll need to get only the <code>foo</code> path</p>",
        "id": 194353333,
        "sender_full_name": "matklad",
        "timestamp": 1587064268
    },
    {
        "content": "<p><code>ast::Path::qualifier</code> will give you a parent path</p>",
        "id": 194353396,
        "sender_full_name": "matklad",
        "timestamp": 1587064297
    },
    {
        "content": "<p>oh. i'm already using <code>path.qualifier().is_some()</code> to purposefully disable the assist <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span><br>\nlooks like i can make some progress, thanks for the support!</p>",
        "id": 194354110,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587064640
    },
    {
        "content": "<p>so generating the function in another module in the same file works: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3998\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3998\">https://github.com/rust-analyzer/rust-analyzer/pull/3998</a><br>\nbut generating it in another file doesn't, it inserts it in the original file with the offset calculated from the other file...<br>\ndoes that require changes in the whole assist infrastructure?</p>",
        "id": 194480547,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587147522
    },
    {
        "content": "<p>alright, i see that in <code>ra_ide::assists::assists</code>, the <code>AssistAction</code> in <code>ResolvedAssist.action</code> that doesn't contain any file information is turned into a <code>SourceChange</code> which <em>does</em> contain a <code>FileId</code> (for each <code>SourceFileEdit</code>).<br>\nI think I might add a new field to <code>ra_assists::AssistAction</code>, something like <code>enum AssistTargetFile {CurrentFile, TargetFile(FileId)}</code></p>",
        "id": 194484326,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587149453
    },
    {
        "content": "<p>alright, that worked, functions can be added to other files now. what's missing is the assist navigating to the changed file though...<br>\nthe file shows up in the <code>codeAction</code> response in <code>command.arguments.0.cursorPosition.textDocument</code>,  so is that functionality missing in the lsp clients?</p>\n<p>right now, the response looks like this:</p>\n<div class=\"codehilite\"><pre><span></span>{\n        &quot;command&quot;: {\n            &quot;arguments&quot;: [\n                {\n                    &quot;cursorPosition&quot;: {\n                        &quot;position&quot;: {\n                            &quot;character&quot;: 4,\n                            &quot;line&quot;: 8\n                        },\n                        &quot;textDocument&quot;: {\n                            &quot;uri&quot;: &quot;file:///tmp/bla/src/main.rs&quot;\n                        }\n                    },\n                    &quot;label&quot;: &quot;Add function&quot;,\n                    &quot;workspaceEdit&quot;: {\n                        &quot;documentChanges&quot;: [\n                            {\n                                &quot;edits&quot;: [\n                                    {\n                                        &quot;newText&quot;: &quot;\\n\\nfn bar() {\\n    todo!()\\n}&quot;,\n                                        &quot;range&quot;: {\n                                            &quot;end&quot;: {\n                                                &quot;character&quot;: 1,\n                                                &quot;line&quot;: 5\n                                            },\n                                            &quot;start&quot;: {\n                                                &quot;character&quot;: 1,\n                                                &quot;line&quot;: 5\n                                            }\n                                        }\n                                    }\n                                ],\n                                &quot;textDocument&quot;: {\n                                    &quot;uri&quot;: &quot;file:///tmp/bla/src/main.rs&quot;,\n                                    &quot;version&quot;: null\n                                }\n                            }\n                        ]\n                    }\n                }\n            ],\n            &quot;command&quot;: &quot;rust-analyzer.applySourceChange&quot;,\n            &quot;title&quot;: &quot;Add function&quot;\n        },\n        &quot;title&quot;: &quot;Add function&quot;\n    }\n</pre></div>",
        "id": 194564588,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587245481
    },
    {
        "content": "<blockquote>\n<p>that functionality missing in the lsp clients?</p>\n</blockquote>\n<p>Which client do you use? It works with VS Code (the \"add module\" extension makes use of it)</p>",
        "id": 194565619,
        "sender_full_name": "matklad",
        "timestamp": 1587247019
    },
    {
        "content": "<p>Hmm then I'm missing something, it doesn't work for me with nvim(coc-rust-analyzer) and with vs code. Gonna take another look tomorrow :)</p>",
        "id": 194565877,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587247398
    },
    {
        "content": "<p>A good way to check would be to apply the fixit for <code>mod some_non_existent_module;</code> It should move you to the new file</p>",
        "id": 194565928,
        "sender_full_name": "matklad",
        "timestamp": 1587247446
    },
    {
        "content": "<p>Upstream issue: <a href=\"https://github.com/microsoft/language-server-protocol/issues/724\" title=\"https://github.com/microsoft/language-server-protocol/issues/724\">https://github.com/microsoft/language-server-protocol/issues/724</a></p>",
        "id": 194566486,
        "sender_full_name": "matklad",
        "timestamp": 1587248399
    },
    {
        "content": "<p>Hmm... the <code>codeAction</code> response for the \"add module\" assist looks like this:</p>\n<div class=\"codehilite\"><pre><span></span>{\n        &quot;command&quot;: {\n            &quot;arguments&quot;: [\n                {\n                    &quot;cursorPosition&quot;: null,\n                    &quot;label&quot;: &quot;create module&quot;,\n                    &quot;workspaceEdit&quot;: {\n                        &quot;documentChanges&quot;: [\n                            {\n                                &quot;kind&quot;: &quot;create&quot;,\n                                &quot;uri&quot;: &quot;file:///tmp/bla/src/foo.rs&quot;\n                            }\n                        ]\n                    }\n                }\n            ],\n            &quot;command&quot;: &quot;rust-analyzer.applySourceChange&quot;,\n            &quot;title&quot;: &quot;create module&quot;\n        },\n        &quot;title&quot;: &quot;create module&quot;\n    }\n</pre></div>\n\n\n<p>I don't think I can use this for <code>add_function</code> :/</p>",
        "id": 194587725,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587287793
    },
    {
        "content": "<p>the plot thickens!<br>\n<code>cursorPosition.textDocument.uri</code> is read <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/36840bd6c71eaf18cdf418c92af51c24e547a4a7/editors/code/src/source_change.ts#L40\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/36840bd6c71eaf18cdf418c92af51c24e547a4a7/editors/code/src/source_change.ts#L40\">here</a>, but if it differs from the currently opened URI(?), the function exits early<br>\ni guess this needs to be changed as well?</p>",
        "id": 194599735,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587305741
    },
    {
        "content": "<p>Alright, the only thing really missing is having unit tests for generating the function in another file. Unfortunately, <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates/ra_assists/src/lib.rs#L229\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates/ra_assists/src/lib.rs#L229\">the assist helper </a> always applies the assist to the starting file and only compares the <code>expected</code> with that file.<br>\nI guess I see where changes need to be made... This has proven to be more complex than I thought!</p>",
        "id": 194708624,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1587404261
    }
]