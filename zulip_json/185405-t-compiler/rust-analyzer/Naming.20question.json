[
    {
        "content": "<p>We have a <code>Source&lt;T&gt;</code> type which is basically a pair of <code>T</code> and <code>HirFileId</code>, where <code>T</code> is somthing relative to file. </p>\n<p>What's the best name for the field which holds <code>T</code>? Currently it's called <code>ast</code>, but that doesn't always makes sense:</p>\n<ul>\n<li><code>Source&lt;ast::FnDef&gt;</code> -- ast is ast, OK</li>\n<li><code>Source&lt;SyntaxNode&gt;</code> -- ast is cst, hmm...</li>\n<li><code>Source&lt;TextUnit&gt;</code> -- ast is offset, wat?</li>\n</ul>",
        "id": 180907235,
        "sender_full_name": "matklad",
        "timestamp": 1573900847
    },
    {
        "content": "<p>Maybe <code>of</code>?</p>",
        "id": 180907243,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1573900886
    },
    {
        "content": "<p>Hm,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">node</span>: <span class=\"nc\">Source</span><span class=\"o\">&lt;</span><span class=\"n\">SyntaxNode</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">parent</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">parent</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 180907308,
        "sender_full_name": "matklad",
        "timestamp": 1573900987
    },
    {
        "content": "<p>I was just thinking that <code>this is the Source of T</code> makes some sense. You're right -  as a field to access, it's not very clear.</p>",
        "id": 180907377,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1573901126
    },
    {
        "content": "<p>Otoh,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">node</span>: <span class=\"nc\">Source</span><span class=\"o\">&lt;</span><span class=\"n\">SyntaxNode</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">parent</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">parent</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>might actually not look that bad...</p>",
        "id": 180907547,
        "sender_full_name": "matklad",
        "timestamp": 1573901482
    },
    {
        "content": "<p>Ahem, is <code>value</code> too traditional?</p>",
        "id": 180907990,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1573902356
    },
    {
        "content": "<p>I like value!</p>",
        "id": 180908035,
        "sender_full_name": "matklad",
        "timestamp": 1573902420
    }
]