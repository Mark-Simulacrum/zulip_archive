[
    {
        "content": "<p>is it a design goal for rls to be abused as a code generator through it's autocomplete support?</p>",
        "id": 176527702,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1569378050
    },
    {
        "content": "<p>e.g. selecting a random element from the autocomplete list including any snippet such as for loop or if conditions then filling in random parameters, would rls offer completion when it knows using some variable wouldnt violate borrow checking for example?</p>",
        "id": 176527773,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1569378156
    },
    {
        "content": "<p>I assume that has to be resource hungry to somehow check every variable currently in scope for possible borrow checking violations and filter out the ones that will</p>",
        "id": 176527801,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1569378238
    },
    {
        "content": "<p>I want to make a valid Rust random code generator</p>",
        "id": 176527863,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1569378327
    },
    {
        "content": "<p>By code generator you mean <em>source</em> code generator (as opposed to machine code generator)?</p>",
        "id": 176537395,
        "sender_full_name": "matklad",
        "timestamp": 1569393145
    },
    {
        "content": "<p>rust-analyzer already have some facilities to generate source code, and the'll grow in the future</p>",
        "id": 176537400,
        "sender_full_name": "matklad",
        "timestamp": 1569393168
    },
    {
        "content": "<p>See the <code>AstBuilder</code>, <code>AstEditor</code> types</p>",
        "id": 176537404,
        "sender_full_name": "matklad",
        "timestamp": 1569393177
    },
    {
        "content": "<p>I think it's unlikely that we would hide completions if they e.g. violate borrow checking, even if we could do that (which we are a long way from). It's surprising, and often the desired fix would actually be elsewhere</p>",
        "id": 176547075,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1569403096
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Yes, that's what I mean. Thank you, I'll have a look, though, all the challenge is into making valid generation choices, even with access to an AST.<br>\n<span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> Okay. Thanks.</p>",
        "id": 176579010,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1569426933
    }
]