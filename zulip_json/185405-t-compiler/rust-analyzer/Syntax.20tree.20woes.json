[
    {
        "content": "<p>Fun bug:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"p\">{[</span><span class=\"mi\">0</span><span class=\"p\">]}</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>here we think that the loop body is <code>{[0]}</code> because that's the first <code>BlockExpr</code> child. The actual body isn't lowered or inferred.</p>\n<p>This is again caused by our weakly typed AST structure. I guess this is another data point for moving to <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6584\">https://github.com/rust-analyzer/rust-analyzer/issues/6584</a>?</p>",
        "id": 256459895,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1633544720
    },
    {
        "content": "<p>This isn't related to whitespace tokens though is it? So I don't think that issue has anything to do with this</p>",
        "id": 256552647,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633601227
    },
    {
        "content": "<p>So I guess we can fix this by either introducing a new intermediary syntax node for the <code>pat in expr</code> part, or we special case the <code>HasLoopBody</code> implementation for <code>for</code> loops to check if it has two expressions or not</p>",
        "id": 256553957,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633601946
    },
    {
        "content": "<p>I think the issue is related because it lets us have a fixed syntax tree structure, so we wouldn't need the <code>children(...).nth(..)</code> anymore</p>",
        "id": 256580586,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1633614744
    },
    {
        "content": "<p>Ah right, I forgot about the fixed structure proposed in there. Ye then that might be a solution to this.</p>",
        "id": 256581281,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633615002
    }
]