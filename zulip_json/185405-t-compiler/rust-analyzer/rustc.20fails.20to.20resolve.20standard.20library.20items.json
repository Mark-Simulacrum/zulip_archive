[
    {
        "content": "<p>It looks like r-a is failing to resolve libcore/std items on the rustc code base. I'm getting this output:</p>\n<div class=\"codehilite\"><pre><span></span><code>[ERROR project_model::workspace] cyclic deps: cargo_test_support(CrateId(156)) -&gt; cargo(CrateId(144))\n[ERROR project_model::workspace] cyclic deps: rustc_std_workspace_core(CrateId(1133)) -&gt; core(CrateId(222))\n[ERROR project_model::workspace] cyclic deps: wasi(CrateId(1649)) -&gt; rustc_std_workspace_alloc(CrateId(1132))\n</code></pre></div>",
        "id": 219392219,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607545276
    },
    {
        "content": "<p>These cyclic deps errors have shown up quite a bit in the past â€“ is our project model broken somehow, or why do they appear?</p>",
        "id": 219392270,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607545310
    },
    {
        "content": "<p>sounds like something to do with bootstrapping?</p>",
        "id": 219392279,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607545315
    },
    {
        "content": "<p>although I guess libstd doesn't depend on rustc in the same sense as rust-analyzer thinks of it</p>",
        "id": 219392360,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607545345
    },
    {
        "content": "<p>Seems like r-a usually ends up using the standard library of whichever toolchain is installed, not libstd from the Rust checkout</p>",
        "id": 219392474,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607545411
    },
    {
        "content": "<p>Looks like <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> has recently refactored the code dealing with cyclic deps</p>",
        "id": 219392611,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607545471
    },
    {
        "content": "<p>ah yeah, rustc depending on master libstd strikes again <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 219392651,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607545496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> yeah, cyclic deps are a long-standing bug.</p>\n<p>The problem is that cargo doesn't <em>quite</em> forbid cyclic dependencies between packages. I think what cargo allows is for <code>src/lib.rs</code> with <code>--test</code> to depend on <code>src/lib.rs</code> without <code>--test</code>, and that doesn't quite pass our logic of optimistically enabling test.</p>",
        "id": 219469379,
        "sender_full_name": "matklad",
        "timestamp": 1607605989
    },
    {
        "content": "<p>That is,  to solve this properly we need to dupe packages. Let me <code>.entry().or_insert()</code> this issue....</p>",
        "id": 219469417,
        "sender_full_name": "matklad",
        "timestamp": 1607606019
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/2414#issuecomment-561213070\">https://github.com/rust-analyzer/rust-analyzer/issues/2414#issuecomment-561213070</a></p>",
        "id": 219469636,
        "sender_full_name": "matklad",
        "timestamp": 1607606132
    },
    {
        "content": "<p>Although I am not sure why my changes cause it to fail if it worked before...</p>",
        "id": 219469907,
        "sender_full_name": "matklad",
        "timestamp": 1607606280
    },
    {
        "content": "<p>I see, that makes sense. Yeah, I'm not sure why it suddenly broke.</p>",
        "id": 219470142,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607606402
    },
    {
        "content": "<p>My current workaround:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/project_model/src/workspace.rs b/crates/project_model/src/workspace.rs</span>\n<span class=\"gh\">index 7f4a7e56b..47aaad197 100644</span>\n<span class=\"gd\">--- a/crates/project_model/src/workspace.rs</span>\n<span class=\"gi\">+++ b/crates/project_model/src/workspace.rs</span>\n<span class=\"gu\">@@ -358,8 +358,8 @@ fn cargo_to_crate_graph(</span>\n\n     // Now add a dep edge from all targets of upstream to the lib\n     // target of downstream.\n<span class=\"gd\">-    for pkg in cargo.packages() {</span>\n<span class=\"gd\">-        for dep in cargo[pkg].dependencies.iter() {</span>\n<span class=\"gi\">+    for pkg in cargo.packages().collect::&lt;Vec&lt;_&gt;&gt;().into_iter().rev() {</span>\n<span class=\"gi\">+        for dep in cargo[pkg].dependencies.iter().rev() {</span>\n             let name = CrateName::new(&amp;dep.name).unwrap();\n             if let Some(&amp;to) = pkg_to_lib_crate.get(&amp;dep.pkg) {\n                 for &amp;from in pkg_crates.get(&amp;pkg).into_iter().flatten() {\n</code></pre></div>",
        "id": 219664305,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607721935
    },
    {
        "content": "<p>Welp, this line breaks r-a in libcore of a Rust checkout <a href=\"https://github.com/rust-lang/rust/blob/2225ee1b62ff089917434aefd9b2bf509cfa087f/library/core/src/lib.rs#L51\">https://github.com/rust-lang/rust/blob/2225ee1b62ff089917434aefd9b2bf509cfa087f/library/core/src/lib.rs#L51</a></p>",
        "id": 219664942,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607722267
    },
    {
        "content": "<p>At least there I know why it happens and who did it (me)</p>",
        "id": 219664965,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607722285
    },
    {
        "content": "<p>I guess we don't set the <code>--cfg test</code> for sysroot crates, otherwise I would have broken <em>everything</em></p>",
        "id": 219665252,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607722435
    }
]