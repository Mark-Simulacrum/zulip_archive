[
    {
        "content": "<p>If I have a method call like <code>x.method()</code>, it's easy to figure out that <code>method</code> is from a trait. But is there a way to access the inferred type parameters of the trait ref from the IDE layer? The fully inferred trait ref would work too.</p>",
        "id": 267451764,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1641827991
    },
    {
        "content": "<p>I don't think so, at least I don't remember us having anything like that yet</p>",
        "id": 267453963,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641829001
    },
    {
        "content": "<p><code>Semantics::resolve_method_call_as_callable</code> returns a <code>Callable</code> which contains the full type with type parameters of the called method</p>",
        "id": 267463842,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1641832707
    },
    {
        "content": "<p>That doesn't contain the method's trait type arguments though</p>",
        "id": 267470710,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641835508
    },
    {
        "content": "<p>maybe I'm misunderstanding, but if we have <code>trait Trait&lt;T1, T2&gt; { fn method&lt;T3&gt;() }</code> then the type of the callable should be the function type of the method with parameters <code>Self, T1, T2, T3</code>, right?</p>",
        "id": 267476515,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1641837775
    },
    {
        "content": "<p>Oh right, that should be the case. Never mind then.</p>",
        "id": 267480306,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641839525
    },
    {
        "content": "<p>looks like we don't have an IDE concept for \"thing with substs\" or even just \"<code>TraitRef</code>\"</p>",
        "id": 267607972,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1641918895
    },
    {
        "content": "<p>we probably do need to complete the <code>Ty : Type :: TraitRef : ???</code></p>",
        "id": 267618502,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1641923169
    }
]