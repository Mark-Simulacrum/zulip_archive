[
    {
        "content": "<p>Hey, I've recorded a couple of \"real\" explaining rust-analyzer videos!</p>",
        "id": 246260958,
        "sender_full_name": "matklad",
        "timestamp": 1626459886
    },
    {
        "content": "<p>Here's the playlist: <a href=\"https://www.youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\">https://www.youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y</a></p>\n<p>First two videos are:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=I3RXottNwk0&amp;list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\">overview</a><div class=\"youtube-video message_inline_image\"><a data-id=\"I3RXottNwk0\" href=\"https://www.youtube.com/watch?v=I3RXottNwk0&amp;list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\"><img src=\"https://uploads.zulipusercontent.net/7f9d3cdaa9eeee980c487335df26800eca0b1e9c/68747470733a2f2f692e7974696d672e636f6d2f76692f493352586f74744e776b302f64656661756c742e6a7067\"></a></div></li>\n<li><a href=\"https://www.youtube.com/watch?v=SaSULKoSlWI&amp;list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\">vfs</a><div class=\"youtube-video message_inline_image\"><a data-id=\"SaSULKoSlWI\" href=\"https://www.youtube.com/watch?v=SaSULKoSlWI&amp;list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\"><img src=\"https://uploads.zulipusercontent.net/956c71ab01d5d52cb23aa5ddde20ddff0334fe02/68747470733a2f2f692e7974696d672e636f6d2f76692f536153554c4b6f536c57492f64656661756c742e6a7067\"></a></div></li>\n</ul>",
        "id": 246261248,
        "sender_full_name": "matklad",
        "timestamp": 1626460054
    },
    {
        "content": "<p>I wonder how long that playlist will be in hours in the end given how big RA is <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 246279894,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626469718
    },
    {
        "content": "<p>New video: the IDE crate: <a href=\"https://www.youtube.com/watch?v=5l31PsZJ2Cc\">https://www.youtube.com/watch?v=5l31PsZJ2Cc</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"5l31PsZJ2Cc\" href=\"https://www.youtube.com/watch?v=5l31PsZJ2Cc\"><img src=\"https://uploads.zulipusercontent.net/6c31b67d587f5ca08e4cc871b2b089892b1c4196/68747470733a2f2f692e7974696d672e636f6d2f76692f356c333150735a4a3243632f64656661756c742e6a7067\"></a></div>",
        "id": 246379402,
        "sender_full_name": "matklad",
        "timestamp": 1626615665
    },
    {
        "content": "<p>I really like your desktop background.</p>",
        "id": 246381034,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1626617864
    },
    {
        "content": "<p>New video: the main loop: <a href=\"https://www.youtube.com/watch?v=bfE_ZVDLHmo\">https://www.youtube.com/watch?v=bfE_ZVDLHmo</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"bfE_ZVDLHmo\" href=\"https://www.youtube.com/watch?v=bfE_ZVDLHmo\"><img src=\"https://uploads.zulipusercontent.net/d5dccd2a3c86941894788ab6f0ab6fc1f608270b/68747470733a2f2f692e7974696d672e636f6d2f76692f6266455f5a56444c486d6f2f64656661756c742e6a7067\"></a></div>",
        "id": 246510133,
        "sender_full_name": "matklad",
        "timestamp": 1626726831
    },
    {
        "content": "<p>Next video: the crate graph: <a href=\"https://www.youtube.com/watch?v=STiKE1ES2fQ\">https://www.youtube.com/watch?v=STiKE1ES2fQ</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"STiKE1ES2fQ\" href=\"https://www.youtube.com/watch?v=STiKE1ES2fQ\"><img src=\"https://uploads.zulipusercontent.net/251aa2ef7382a08c3d25225ab91e5cc1394cca35/68747470733a2f2f692e7974696d672e636f6d2f76692f5354694b453145533266512f64656661756c742e6a7067\"></a></div>",
        "id": 246643851,
        "sender_full_name": "matklad",
        "timestamp": 1626812334
    },
    {
        "content": "<p>I've been watching this series for a while.I'd like to know if it makes sense to share my own notes from the videos with others. These notes are my own interpretation of the content and include a summary of the important points in the video.</p>",
        "id": 246763430,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626893898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"424024\">@Mahdi Faramarzpour</span> most definitely! I bet it'll be useful to someone!</p>",
        "id": 246833673,
        "sender_full_name": "matklad",
        "timestamp": 1626952524
    },
    {
        "content": "<p>So how should I do that?<br>\nI can prepare them as .md files, but where should I post them?</p>",
        "id": 246834554,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626953329
    },
    {
        "content": "<p>I suggest using this stream as a point of coordination. </p>\n<p>I guess, keeping them in some kind of a repo might be smart as well -- maybe other folks would want to expand on notes</p>",
        "id": 246834611,
        "sender_full_name": "matklad",
        "timestamp": 1626953402
    },
    {
        "content": "<p><a href=\"https://github.com/mahdi-frms/rust-analyzer-notes\">https://github.com/mahdi-frms/rust-analyzer-notes</a></p>",
        "id": 246849271,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626961897
    },
    {
        "content": "<p>Next video: the base database: <a href=\"https://youtu.be/m1EXCpIHSKA\">https://youtu.be/m1EXCpIHSKA</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"m1EXCpIHSKA\" href=\"https://youtu.be/m1EXCpIHSKA\"><img src=\"https://uploads.zulipusercontent.net/5699aeb43f67ce1a8511dcc1b92a85e3b8fa9a3a/68747470733a2f2f692e7974696d672e636f6d2f76692f6d31455843704948534b412f64656661756c742e6a7067\"></a></div>",
        "id": 247023928,
        "sender_full_name": "matklad",
        "timestamp": 1627069949
    },
    {
        "content": "<p>27:00 it's embarrassing when your software is so fast that you can't even show that big-O algorithmic improvement leads to faster code.</p>",
        "id": 247024801,
        "sender_full_name": "matklad",
        "timestamp": 1627070453
    },
    {
        "content": "<p>I've got a question about VFS lecture...<br>\nThree reasons were provided in this video for using a vfs rather than the OS filesystem, one being the repeatable read property.<br>\nThe idea is, Rust Analyzer needs more memory than a compiler. For that, it tends to forget about the derived data.<br>\nSo I open a file in a library crate for a 'go to definition', and close it. Thus, RA parses it but when I closed the file, RA forgot about the parsing result. Now it was said that if we rely on OS filesystem and we want to get back that derived data, the file might have changed and we'll get inconsistency, which is something I do not get really. What sort of inconsistency? If it has really changed, why do we need that old derived data?</p>",
        "id": 247346004,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627398390
    },
    {
        "content": "<p>Here's a semi-hypothetical example:</p>\n<p>Let's say that file contained a <code>pub struct Foo</code> at line 92. When parsing the file, rust-analyzer will store the fact that there's an entity with name <code>Foo</code> at that line in the index of all names. But, to same memory, it wouldn't store it visibility</p>\n<p>Now, let's say you invoke \"workspace symbol\" functionality, and give <code>Foo</code> as a query. You ask the index about known <code>Foo</code>s and get that one from stdlib back. When displaying results to the user, you want to learn about visibility (to, eg, show a different icon). You then fetch the next of the file, and go to the line 92. This is the point where you need this line to still contain the <code>Foo</code> struct. </p>\n<p>In other words, if we forgot <em>everything</em>, then, yeah, this wouldn't be a problem. However we forget only partially -- we hang onto some derived stuff. And that derived data might become inconsistent.</p>",
        "id": 247347076,
        "sender_full_name": "matklad",
        "timestamp": 1627398843
    },
    {
        "content": "<p>Maybe it's this scenario:</p>\n<ul>\n<li>we're computing a query on file A</li>\n<li>for that, we need to run a query on file B</li>\n<li>we drop some information about file A here</li>\n<li>for the query on B we need to run a query on A</li>\n<li>A changes on disk</li>\n<li>we re-read and, but have an inconsistent view of what's in A</li>\n</ul>",
        "id": 247347383,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1627398972
    },
    {
        "content": "<p>To give a real-life example of this, we generally identify symbols by their positions: \"function <code>foo</code> is the third item in this file\".  We used to have a bug where we didn't persist the results of proc macros. And there was a procc macro, whose output dependend on hash-map iteration order, and thus it generated items in different oreded with different runs.</p>\n<p>So it happened that we looked at the expansion of this macro, marked that we have a function at the third position, then forgot the expansion, then re-calculated expansion (when, eg, we decided to look at the fn body), but there weren't a function at that position</p>",
        "id": 247347474,
        "sender_full_name": "matklad",
        "timestamp": 1627399012
    },
    {
        "content": "<p>So we got a panic for this unwrap:</p>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/3a59b56324db99475ea2027cb94f82785b16ad14/crates/hir_expand/src/ast_id_map.rs#L112\">https://github.com/rust-analyzer/rust-analyzer/blob/3a59b56324db99475ea2027cb94f82785b16ad14/crates/hir_expand/src/ast_id_map.rs#L112</a></p>",
        "id": 247347587,
        "sender_full_name": "matklad",
        "timestamp": 1627399063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <span class=\"user-mention\" data-user-id=\"203546\">@Lauren»õiu</span>  thanks for the answers.<br>\nSo that's generally because we partially forget, not totally.</p>",
        "id": 247348595,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627399533
    },
    {
        "content": "<p>We had an issue for compressing the source code (<a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/869\">https://github.com/rust-analyzer/rust-analyzer/issues/869</a>), but I'm not sure what I measured there :(</p>",
        "id": 247349000,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1627399728
    },
    {
        "content": "<p>We're at 638 MB RSS today, despite probably having more code</p>",
        "id": 247349035,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1627399747
    },
    {
        "content": "<p>Next video: syntax overview <a href=\"https://youtu.be/8jryEJRnPfU\">https://youtu.be/8jryEJRnPfU</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"8jryEJRnPfU\" href=\"https://youtu.be/8jryEJRnPfU\"><img src=\"https://uploads.zulipusercontent.net/2a25b9e31877881fb8532b71406ef479c2e8ba64/68747470733a2f2f692e7974696d672e636f6d2f76692f386a7279454a526e5066552f64656661756c742e6a7067\"></a></div>",
        "id": 247382213,
        "sender_full_name": "matklad",
        "timestamp": 1627415499
    },
    {
        "content": "<p>I'm not getting the actual difference between a crate, FileSet and SourceRoot:</p>\n<ul>\n<li>I think SourceRoot is just a FileSet with a boolean flag, right?</li>\n<li>Each file belongs to only one FileSet, thus one SourceRoot, right?</li>\n<li>I thought crates have a one-to-one relation with FileSet/SourceRoots, is that true?</li>\n</ul>\n<p>by crate I mean the nodes in CrateGraph.</p>",
        "id": 247783529,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627703349
    },
    {
        "content": "<p>1&amp;2 are correct, 3 is not: a single source root can host many crates</p>",
        "id": 247791189,
        "sender_full_name": "matklad",
        "timestamp": 1627716440
    },
    {
        "content": "<p>in particular, a single cargo package (directory with Cargo.toml) is a single source root, but it contains many crates -- </p>\n<ul>\n<li>src/lib.rs crate</li>\n<li>src/lib.rs  with <code>--test</code> crate</li>\n<li>src/bin/* crates</li>\n<li>examples/* crates</li>\n<li>tests/* crates</li>\n</ul>",
        "id": 247791252,
        "sender_full_name": "matklad",
        "timestamp": 1627716530
    },
    {
        "content": "<p>So, what if I open a whole cargo workspace? (like RA source directory) then all of that becomes one SourceRoot or each package becomes a SourceRoot?</p>",
        "id": 247793262,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627719848
    },
    {
        "content": "<p>eachc packeage becomes a source root</p>",
        "id": 247794498,
        "sender_full_name": "matklad",
        "timestamp": 1627721995
    },
    {
        "content": "<p>and I think for sysroot (libstd, libcore and their deps) we use a single source root</p>",
        "id": 247794561,
        "sender_full_name": "matklad",
        "timestamp": 1627722018
    },
    {
        "content": "<p>Got it now, thanks.</p>",
        "id": 247794670,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627722217
    },
    {
        "content": "<p>question about the base db lecture:<br>\nwhat is the <code>SourceDatabaseExt</code> exposing that the <code>FileLoader</code>is not doing so?</p>",
        "id": 247892079,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627878169
    },
    {
        "content": "<p><code>fn source_root(&amp;self, id: SourceRootId) -&gt; Arc&lt;SourceRoot&gt;</code></p>\n<p>With SdbExt, you can get a list of files in the same source root at the current file. It let's you discover files without knowing their paths. </p>\n<p>In file loader, the only way to get a new file is <code>fn resolve_path(&amp;self, path: AnchoredPath) -&gt; Option&lt;FileId&gt;;</code>, where AnchoredPath is a pair of <code>FileId</code> and  a utf8 path. That is,  to get a FileId, you need to know its path first.</p>",
        "id": 247902230,
        "sender_full_name": "matklad",
        "timestamp": 1627895127
    },
    {
        "content": "<p>My real problem is that I sort of don't understand how you're using the whole thing <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> <br>\nMaybe I should see how Salsa and RootDatabase work.</p>",
        "id": 247904030,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627897057
    },
    {
        "content": "<p>BTW I think that would be good to cover RootDatabase and it's API in the next videos.</p>",
        "id": 247905228,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1627898175
    },
    {
        "content": "<p>Next video: got carried away and started implementing rowan from scratch: <a href=\"https://youtu.be/n5LDjWIAByM\">https://youtu.be/n5LDjWIAByM</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"n5LDjWIAByM\" href=\"https://youtu.be/n5LDjWIAByM\"><img src=\"https://uploads.zulipusercontent.net/49e1bd0222b62e2a198c39fea35aab8ef1f7802d/68747470733a2f2f692e7974696d672e636f6d2f76692f6e354c446a57494142794d2f64656661756c742e6a7067\"></a></div>",
        "id": 248626775,
        "sender_full_name": "matklad",
        "timestamp": 1628264350
    }
]