[
    {
        "content": "<p>The way I envision this would integrate into salsa similarly to how incremental compilation integrates into rustc's query system. Since the stored data is always a result of a pure query function, it would also be machine-independent by construction (unless the format happens to be pointer width or endianness-dependent). Once we have that, precomputing caches and sharing them between machines should not be terribly difficult to add on top.</p>",
        "id": 250645886,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629909852
    },
    {
        "content": "<p>I wonder if we could get some support in salsa for iterating over the entire database, and maybe for putting things back in there. That would at least be useful for a prototype.</p>",
        "id": 250646243,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629910049
    },
    {
        "content": "<p>There's also the question of the amount of data. Right now, we're storing what, up to about 900 MB in the database on <code>self</code>. We probably wouldn't want anything about the item bodies in something we get off <a href=\"http://crates.io\">crates.io</a>, but it can still add up pretty fast.</p>",
        "id": 250646815,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629910304
    },
    {
        "content": "<p>Is this the relevant salsa parallelization issue? <a href=\"https://github.com/salsa-rs/salsa/issues/80\">https://github.com/salsa-rs/salsa/issues/80</a></p>",
        "id": 250650470,
        "sender_full_name": "Josh Kuhn",
        "timestamp": 1629911860
    },
    {
        "content": "<p>yeah</p>",
        "id": 250650638,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629911917
    }
]