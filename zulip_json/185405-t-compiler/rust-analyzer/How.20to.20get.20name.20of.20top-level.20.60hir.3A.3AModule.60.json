[
    {
        "content": "<p>Calling <code>hir::Module::name</code> on a top-level module (crate?) always returns <code>None</code>, since <code>hir::Module::name</code> early-returns with <code>None</code> for modules which don’t have parents. How can I get the name of a top-level <code>hir::Module</code>?</p>",
        "id": 255574576,
        "sender_full_name": "Aramis Razzaghipour",
        "timestamp": 1633008898
    },
    {
        "content": "<p>The root module isn't named so you probably would have to derive it from its path if you are interested in whether its <code>lib.rs</code>, <code>main.rs</code> etc</p>",
        "id": 255575504,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633009280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/How.20to.20get.20name.20of.20top-level.20.60hir.3A.3AModule.60/near/255575504\">said</a>:</p>\n<blockquote>\n<p>The root module isn't named so you probably would have to derive it from its path if you are interested in whether its <code>lib.rs</code>, <code>main.rs</code> etc</p>\n</blockquote>\n<p>Thanks for the quick reply! I don’t care about <code>lib.rs</code> vs <code>main.rs</code>, just the crate name as listed in its <code>Cargo.toml</code>. How can I obtain this?</p>",
        "id": 255576768,
        "sender_full_name": "Aramis Razzaghipour",
        "timestamp": 1633009794
    },
    {
        "content": "<p>There is this <br>\n<a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/533ca584c31a251bc47f978b55df9b69058dabba\\crates\\hir\\src\\lib.rs#L186\">https://github.com/rust-analyzer/rust-analyzer/blob/533ca584c31a251bc47f978b55df9b69058dabba\\crates\\hir\\src\\lib.rs#L186</a></p>",
        "id": 255577042,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633009887
    },
    {
        "content": "<p>I am not 100% this will always work though as crate names are a bit tricky, see the following comment</p>\n<div class=\"codehilite\"><pre><span></span><code>    /// A name used in the package&#39;s project declaration: for Cargo projects,\n    /// its `[package].name` can be different for other project types or even\n    /// absent (a dummy crate for the code snippet, for example).\n    ///\n    /// For purposes of analysis, crates are anonymous (only names in\n    /// `Dependency` matters), this name should only be used for UI.\n</code></pre></div>",
        "id": 255577188,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633009937
    },
    {
        "content": "<p>It should do what you want I assume though</p>",
        "id": 255577266,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633009963
    },
    {
        "content": "<p>Would it be unreasonable to modify <code>hir::Module::name</code> to always return a <code>hir::Name </code>instead of an <code>Option&lt;hir::Name&gt;</code>, using the crate’s display name where appropriate?</p>",
        "id": 255578288,
        "sender_full_name": "Aramis Razzaghipour",
        "timestamp": 1633010324
    },
    {
        "content": "<p>It would seem somewhat odd to me, as the root module isn't the same as the crate. Note that wouldn't get rid of the Option anyways as as the comment states, the display name can be absent as well</p>",
        "id": 255579411,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633010666
    },
    {
        "content": "<p>Hmm, that is a good point. In any case, I realised that I was approaching the problem in the wrong way, and inspecting the textual name isn’t necessary. Thank you for the help, regardless!</p>",
        "id": 255590083,
        "sender_full_name": "Aramis Razzaghipour",
        "timestamp": 1633014321
    }
]