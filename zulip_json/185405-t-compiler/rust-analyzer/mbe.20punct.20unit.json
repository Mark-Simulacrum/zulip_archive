[
    {
        "content": "<p>I just want to confirm what is correct punct token (single / composited) should be used in mbe parsing. Imagine the following program:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"w\"> </span>-&gt; <span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">&quot;-&gt;&quot;</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">&quot;-&quot;</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"cp\">$first</span>:<span class=\"nc\">tt</span><span class=\"w\"> </span><span class=\"cp\">$($tail</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">m</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"cp\">$first</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">!</span><span class=\"p\">(</span>-&gt; <span class=\"nc\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>I tested it in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=82cdf8e53cb3ca97a0309c7edd824de1\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=82cdf8e53cb3ca97a0309c7edd824de1\">rust-playground</a> , the output is <code>-&gt;</code>. I am quite surprised that it use composited token as <code>tt</code>. How about proc-macro token stream ? Does its use composited punct token as well ?</p>",
        "id": 189658410,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1583293512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> yeah, this is one of the warts of the language. mbe matchers do observe composed tokens.</p>",
        "id": 189675689,
        "sender_full_name": "matklad",
        "timestamp": 1583315820
    },
    {
        "content": "<p>Proc macros operate on tokens which carry jointness information with them, so they can do whatever</p>",
        "id": 189675719,
        "sender_full_name": "matklad",
        "timestamp": 1583315852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Do you think we could just handle this case by solely treat <code>$var:tt</code> meta-variable as composited token, without changing the whole mbe parsing infrastructure ?</p>",
        "id": 189677403,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1583317431
    },
    {
        "content": "<p>sort of. When we match <code>$var:tt</code>, we should capture several tokens</p>",
        "id": 189677785,
        "sender_full_name": "matklad",
        "timestamp": 1583317729
    },
    {
        "content": "<p>To be honest, I don't remmeber of the top of my hand how our mbe parsing infra works, but i think it should be fixable with relatively little effort</p>",
        "id": 189677826,
        "sender_full_name": "matklad",
        "timestamp": 1583317775
    }
]