[
    {
        "content": "<p>Hi there - I've been studying <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/8774\">https://github.com/rust-analyzer/rust-analyzer/pull/8774</a> in relation to a problem I'm experiencing. My problem is that I have a VS code workspace with multiple crates where some have a build target specified (not all do). It doesn't appear that the build target is being picked up from the associated cargo config. Instead, I must be explicit and use the <code>rust-analyzer.cargo.target</code>. </p>\n<p>I'm using a nightly toolchain (nightly-2021-12-16) and I can see a \"Discovering cargo config target\" appear in the debug log at times. Thus, I think I'm using \"rust-analyzer 0f8c96c92 2022-01-10 stable\" according to the client log.</p>",
        "id": 267684554,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1641965751
    },
    {
        "content": "<p>Here's a reproducer for interest: <a href=\"https://github.com/titanclass/embassy-start/pull/4\">https://github.com/titanclass/embassy-start/pull/4</a></p>",
        "id": 267684603,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1641965803
    },
    {
        "content": "<p>If the <code>rust-analyzer.cargo.target</code> line is removed: <a href=\"https://github.com/titanclass/embassy-start/pull/4/files#diff-be6aa88ba7800a9afe4df5a1ca4a1ca3a3cc6549107b0ad9db60f1d281bb56b1R17\">https://github.com/titanclass/embassy-start/pull/4/files#diff-be6aa88ba7800a9afe4df5a1ca4a1ca3a3cc6549107b0ad9db60f1d281bb56b1R17</a>, then the <code>interrupt::take!</code> macro becomes undefined (<a href=\"https://github.com/titanclass/embassy-start/blob/master/client/embedded-app/src/boards/nrf52840_dk.rs#L18\">https://github.com/titanclass/embassy-start/blob/master/client/embedded-app/src/boards/nrf52840_dk.rs#L18</a>).</p>",
        "id": 267684673,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1641965953
    },
    {
        "content": "<p>I made some progress by printing out the cargo.toml's that were being used to determine the various targets. In my example, this is what I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>config ManifestPath { file: AbsPathBuf(&quot;/Users/huntc/Projects/titanclass/embassy-start/client/Cargo.toml&quot;) } &quot;cargo&quot; &quot;-Z&quot; &quot;unstable-options&quot; &quot;config&quot; &quot;get&quot; &quot;build.target&quot;\nresult None\nconfig ManifestPath { file: AbsPathBuf(&quot;/Users/huntc/Projects/titanclass/embassy-start/network-protocol/Cargo.toml&quot;) } &quot;cargo&quot; &quot;-Z&quot; &quot;unstable-options&quot; &quot;config&quot; &quot;get&quot; &quot;build.target&quot;\nresult None\nconfig ManifestPath { file: AbsPathBuf(&quot;/Users/huntc/Projects/titanclass/embassy-start/server/Cargo.toml&quot;) } &quot;cargo&quot; &quot;-Z&quot; &quot;unstable-options&quot; &quot;config&quot; &quot;get&quot; &quot;build.target&quot;\nresult None\n</code></pre></div>\n<p>...meaning that no target is being resolved out of the cargo.toml's that are used.</p>\n<p>client/embedded-app/Cargo.toml and server/embedded-app/Cargo.toml would be needed to determine specific build targets here. Is it only the root Cargo.toml files that are loaded?</p>",
        "id": 267689300,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1641971926
    },
    {
        "content": "<p>I've now made this into an issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11268\">https://github.com/rust-analyzer/rust-analyzer/issues/11268</a></p>",
        "id": 267784109,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642020584
    },
    {
        "content": "<p>I'm attempting a PR on this. No cigar yet, but I don't really know what I'm doing. :-)</p>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/11270\">https://github.com/rust-analyzer/rust-analyzer/pull/11270</a></p>",
        "id": 267831275,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642057698
    },
    {
        "content": "<p>I'm really struggling on this one. I can see diagnostics being performed and yielding the diagnostic in relation to the unresolved <code>interrupt::take</code> macro, but I've no idea why the file isn't being resolved in the context of the right target.</p>",
        "id": 267839350,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642064016
    },
    {
        "content": "<p>My problem here is understanding how metadata relates to the file receiving diagnostics.</p>",
        "id": 267854272,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642072387
    },
    {
        "content": "<p>Thanks for any pointers!</p>",
        "id": 267854294,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642072399
    },
    {
        "content": "<p>I might have to leave this draft PR of mine for a while. I'm happy to come back to it if I can have some guidance. Thanks.</p>",
        "id": 267940604,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642112989
    },
    {
        "content": "<p>UPDATE: I'm abandoning this. Reasons outlined on the issue, but in summary, RA is doing the right thing.</p>",
        "id": 267958018,
        "sender_full_name": "Christopher Hunt",
        "timestamp": 1642124867
    }
]