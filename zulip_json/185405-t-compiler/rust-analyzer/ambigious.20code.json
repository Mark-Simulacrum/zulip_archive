[
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/e67cd766f750ddf377ad13552c68465861b09715/crates/ide_assists/src/utils.rs#L310-L317\">https://github.com/rust-analyzer/rust-analyzer/blob/e67cd766f750ddf377ad13552c68465861b09715/crates/ide_assists/src/utils.rs#L310-L317</a></p>\n<p>what does the doc mean by fn:</p>\n<blockquote>\n<p>Returns None if we've found an existing fn</p>\n</blockquote>",
        "id": 246106869,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626361264
    },
    {
        "content": "<p><code>Option&lt;Option&lt;ast::Impl&gt;&gt;</code>?</p>",
        "id": 246107308,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361395
    },
    {
        "content": "<p>If I'm reading it right, it returns <code>None</code> if there was an error, <code>Some(None)</code> if it find a block which contains an existing function called <code>name</code> and <code>Some(Some(block))</code> with some arbitrary impl block otherwise.</p>",
        "id": 246107584,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361518
    },
    {
        "content": "<p>It seems targeted towards adding a new function, as in the \"Create method\" assist</p>",
        "id": 246107716,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361568
    },
    {
        "content": "<p>the <code>Option&lt;Option&lt;_&gt;&gt;</code> should probably be replaced by defining a dedicated enum</p>",
        "id": 246107816,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626361612
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">S</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>So if you call it with <code>\"foo\"</code> as <code>name</code>, you get <code>Some(None)</code> and if you call it with <code>\"bar\"</code> you get <code>Some(Some(..))</code></p>",
        "id": 246107896,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361641
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>if let Some(ref impl_blk) = block {\n        if has_fn(impl_blk, name) {\n            return None;\n        }\n    }\n</code></pre></div>",
        "id": 246108248,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626361802
    },
    {
        "content": "<p>Are you sure? looks like it returns None in case of the function existing</p>",
        "id": 246108348,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626361840
    },
    {
        "content": "<p>That's in a <code>find_map</code></p>",
        "id": 246108415,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361885
    },
    {
        "content": "<p>Ah, no</p>",
        "id": 246108436,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361896
    },
    {
        "content": "<p>Well, it returns.. something. <code>None</code> if the function exists or there was an error, <code>Some(None)</code> if there's no block and a block otherwise? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 246108573,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626361951
    },
    {
        "content": "<p>yeah, maybe that's the case<br>\nthnx</p>",
        "id": 246109400,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1626362331
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/80f522091a44234bd7ccdbe2ef759252d496227d/crates/ide_assists/src/handlers/generate_function.rs#L229-L232\">https://github.com/rust-analyzer/rust-analyzer/blob/80f522091a44234bd7ccdbe2ef759252d496227d/crates/ide_assists/src/handlers/generate_function.rs#L229-L232</a></p>\n<p>Can anyone tell me purpose of this struct ?</p>",
        "id": 248476706,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1628170216
    },
    {
        "content": "<p>I think that's used as the insertion position of the generated function</p>",
        "id": 248476814,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1628170278
    },
    {
        "content": "<p>Basically whether to put the function after(behind) an item or whether to put it into an ItemList(of a module or block) that is currently empty</p>",
        "id": 248476976,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1628170362
    }
]