[
    {
        "content": "<p>Every now and then (especially when I see a complex inlay hint), I want to open a file with a declaration of the specifically named enum/trait/struct/method, either in the project code or in some dependency's.</p>\n<p>Intellij Rust achieves this by providing \"Go to anywhere\" action: it's basically a text input with a panel that displays the search results based on the input.</p>\n<p>It feels like RA is with its <code>symbol_index::world_symbols</code> from ra_ide has everything we need to suppord this kind of functionality.</p>\n<p>Am I right or is there something I've missed?<br>\nDoes it make sense to implement this feature?<br>\nDoes LSP support this on the API level or should we come up with some custom action again?</p>",
        "id": 186180091,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579611789
    },
    {
        "content": "<p>VSCode has \"Go to Symbol in Workspace...\" which works decently right now,  although it's a little tricky with regards to how it returns types or functions. Not sure how it works LSP wise</p>",
        "id": 186180495,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1579612086
    },
    {
        "content": "<p>Yeah, no methods resolved and no results shown for the dependencies.<br>\nI wonder if that can be improved somehow.</p>",
        "id": 186180734,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579612299
    },
    {
        "content": "<p>Thank you for <code>Go to Symbol in Workspace</code> reference, I always used just a simple project-wide text search for that task xD</p>",
        "id": 186180740,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1579612306
    },
    {
        "content": "<blockquote>\n<p>Yeah, no methods resolved and no results shown for the dependencies.<br>\nI wonder if that can be improved somehow.</p>\n</blockquote>\n<p>It will resolve functions but only when your search becomes \"specific enough\", and at that point it seems like it only returns functions.</p>",
        "id": 186180869,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1579612404
    },
    {
        "content": "<p>Indeed.<br>\nWell, that's something I can live with already, thank you :)</p>",
        "id": 186181097,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579612572
    },
    {
        "content": "<p>I think there are special characters you can append to search in functions and/or dependencies, one of them was <code>#</code>, I don't remember the other one</p>",
        "id": 186181243,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1579612700
    },
    {
        "content": "<blockquote>\n<p>I think there are special characters you can append to search in functions and/or dependencies, one of them was <code>#</code>, I don't remember the other one</p>\n</blockquote>\n<p>The symbols modify behavior of the file picker:<code>#</code> is workspace wide, <code>@</code> is current file, not sure if there's equivalents to search for specific kinds of things in those scopes.</p>",
        "id": 186181409,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1579612843
    },
    {
        "content": "<p>Looks like those are the options available:</p>\n<p><a href=\"/user_uploads/4715/s1w38wcUGuUvvmW8L3xLxOHU/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/s1w38wcUGuUvvmW8L3xLxOHU/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/s1w38wcUGuUvvmW8L3xLxOHU/pasted_image.png\"></a></div>",
        "id": 186181427,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579612856
    },
    {
        "content": "<p>no, I was thinking of this: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md#workspace-symbol-ctrlt\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md#workspace-symbol-ctrlt\">https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md#workspace-symbol-ctrlt</a></p>",
        "id": 186182147,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1579613338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> you can append <code>#</code> and <code>*</code> symbols to the symbols query to get symbols from dependeices / symbols including the function</p>",
        "id": 186182818,
        "sender_full_name": "matklad",
        "timestamp": 1579613857
    },
    {
        "content": "<p>Lovely, now I get all I need. <br>\nThank you all.</p>",
        "id": 186183200,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579614116
    },
    {
        "content": "<p>Recorded a demo: <a href=\"https://twitter.com/rust_analyzer/status/1219647139149754368\" target=\"_blank\" title=\"https://twitter.com/rust_analyzer/status/1219647139149754368\">https://twitter.com/rust_analyzer/status/1219647139149754368</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/rust_analyzer/status/1219647139149754368\" target=\"_blank\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1217461647377420289/HXHa6hZU_normal.jpg\"></a><p>Little known feature of rust-analyzer: in symbol search, you can use # to search for functions and fields (the default is type) and use * to search across dependencies.\n\nWould love to see first class support for this in LSP! <a href=\"https://t.co/3G2akBULG0\" target=\"_blank\" title=\"https://t.co/3G2akBULG0\">https://twitter.com/rust_analyzer/status/1219647139149754368/photo/1</a></p><span>- rust-analyzer (@rust_analyzer)</span></div></div>",
        "id": 186195327,
        "sender_full_name": "matklad",
        "timestamp": 1579621547
    },
    {
        "content": "<p>Getting back there.<br>\nIs this feature something that we implement?</p>\n<p>I find it a bit confusing that there's no <code>std::sync::Arc</code> in the results:<br>\n<a href=\"/user_uploads/4715/EUcfiiDCLDzqNiOo4kgjLecx/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/EUcfiiDCLDzqNiOo4kgjLecx/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/EUcfiiDCLDzqNiOo4kgjLecx/pasted_image.png\"></a></div><p>Also there are no results for the <code>std::io::Read</code> for some reason:<br>\n<a href=\"/user_uploads/4715/H5lp7jZiWhNCYDc504zUa0Sz/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/H5lp7jZiWhNCYDc504zUa0Sz/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/H5lp7jZiWhNCYDc504zUa0Sz/pasted_image.png\"></a></div>",
        "id": 186894585,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1580311093
    },
    {
        "content": "<p>\"the same reason\" we show only the original struct and not the reexport?</p>",
        "id": 186894812,
        "sender_full_name": "matklad",
        "timestamp": 1580311231
    },
    {
        "content": "<p>Right, reexports.</p>\n<p>But what's up with <code>Read</code>?</p>",
        "id": 186894843,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1580311256
    },
    {
        "content": "<p>Hm, my guess would be that it collides with lowercase <code>read</code> method</p>",
        "id": 186897237,
        "sender_full_name": "matklad",
        "timestamp": 1580312575
    },
    {
        "content": "<p>I think we've fixed that a long time ago, but maybe not fully</p>",
        "id": 186897262,
        "sender_full_name": "matklad",
        "timestamp": 1580312593
    },
    {
        "content": "<p>(we store lowercased names in the index)</p>",
        "id": 186897286,
        "sender_full_name": "matklad",
        "timestamp": 1580312606
    },
    {
        "content": "<p>The relevant file to look into is <code>symbol_index</code> (I highly recommend checking it and the underlying fst crate out, it's good stuff)</p>",
        "id": 186897405,
        "sender_full_name": "matklad",
        "timestamp": 1580312650
    },
    {
        "content": "<p>Thanks for the pointers.</p>",
        "id": 186898763,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1580313420
    }
]