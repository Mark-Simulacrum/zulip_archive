[
    {
        "content": "<p>Hello I'm trying to solve this issue <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6492\">https://github.com/rust-analyzer/rust-analyzer/issues/6492</a> so I have the Ty and now want to use this method <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir/src/code_model.rs#L1406:L1406\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir/src/code_model.rs#L1406:L1406</a> but I don't really know how I can create the <code>Trait</code> struct to correspond to my <code>Default</code> trait. Any idea to help me ? Thanks a lot</p>",
        "id": 216623068,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605279728
    },
    {
        "content": "<p>You need to use <code>FamousDefs</code> to find <code>Default</code> <code>Trait</code></p>",
        "id": 216623387,
        "sender_full_name": "matklad",
        "timestamp": 1605279850
    },
    {
        "content": "<p>Yes I already try that, but when using find_trait from FamousDefs, it returns None, Maybe I'm missing something ? Should I include something in my tests code or not ?</p>",
        "id": 216623673,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605279999
    },
    {
        "content": "<p>The <code>Default</code> trait itself should be present in the test code, yeah</p>",
        "id": 216624046,
        "sender_full_name": "matklad",
        "timestamp": 1605280218
    },
    {
        "content": "<p>Not sure if FamousDEfs::Fixture already has it</p>",
        "id": 216624067,
        "sender_full_name": "matklad",
        "timestamp": 1605280227
    },
    {
        "content": "<p>No not yet, But I implemented it. Will try to include fake trait in my test code :)</p>",
        "id": 216624120,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605280264
    },
    {
        "content": "<p>derive trait doesn't work in test code ?</p>",
        "id": 216624170,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605280292
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">default</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"nb\">Default</span>: <span class=\"nb\">Sized</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">fn</span> <span class=\"nf\">default</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">S</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">foo</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bar</span>: <span class=\"kt\">usize</span> <span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">default</span>::<span class=\"nb\">Default</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">default</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">foo</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">bar</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"n\">f</span>: <span class=\"nc\">S</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">other</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">foo</span>: <span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"o\">&lt;|&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 216624524,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605280455
    },
    {
        "content": "<p>here is my test code</p>",
        "id": 216624549,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605280470
    },
    {
        "content": "<p>and I added this in FamousDefs</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">default</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"nb\">Default</span>: <span class=\"nb\">Sized</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">fn</span> <span class=\"nf\">default</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>with the right export in prelude<br>\nIt's weird</p>",
        "id": 216624647,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605280536
    },
    {
        "content": "<p>Ok got it, in fact I have to include <code>FamousDefs::FIXTURES</code> inside my code test fixture, my bad</p>",
        "id": 216632785,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1605283769
    }
]