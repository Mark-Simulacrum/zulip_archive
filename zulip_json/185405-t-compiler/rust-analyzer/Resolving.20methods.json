[
    {
        "content": "<p>I'm not sure how to address this comment: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7062/files#r550238723\">https://github.com/rust-analyzer/rust-analyzer/pull/7062/files#r550238723</a>. Could someone please point me in the right direction. I can use self.infer.method_resolution to get hold of a FunctionId for the method being called (e.g. filter_map) and Resolver::resolve_known_trait to get hold of a TraitId for std::iter::Iterator, but I'm not sure what I can do to relate the two (i.e. how to conclude that this FunctionId is for a method on the iterator trait identified by TraitId).</p>",
        "id": 221366093,
        "sender_full_name": "Phil Ellison",
        "timestamp": 1609530957
    },
    {
        "content": "<p>with the <code>FunctionId</code>, you can do <code>id.lookup(db.upcast()).container</code> to get the container, which you can then check whether it's equal to <code>AssocContainerId::TraitId(iterator_trait_id)</code> to see whether it's a method from Iterator</p>",
        "id": 221366722,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609531850
    },
    {
        "content": "<p>I wish there was a more straightforward way to do that in the HIR crates (in code_model, it's easier)</p>",
        "id": 221366819,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532009
    },
    {
        "content": "<p>Thanks! I'll give this a go.</p>",
        "id": 221366976,
        "sender_full_name": "Phil Ellison",
        "timestamp": 1609532177
    },
    {
        "content": "<p>alternatively, you could do <code>db.trait_data(trait_id).items.get(name![filter_map])</code> to get the method by name</p>",
        "id": 221367405,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532919
    },
    {
        "content": "<p>Perfect, thanks.</p>",
        "id": 221367615,
        "sender_full_name": "Phil Ellison",
        "timestamp": 1609533273
    },
    {
        "content": "<p>This turned out to be surprisingly easy! <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7062/commits/b667328e74859dd1b5c1dd9a48c97f5f58277d3c\">https://github.com/rust-analyzer/rust-analyzer/pull/7062/commits/b667328e74859dd1b5c1dd9a48c97f5f58277d3c</a></p>",
        "id": 221369139,
        "sender_full_name": "Phil Ellison",
        "timestamp": 1609535597
    }
]