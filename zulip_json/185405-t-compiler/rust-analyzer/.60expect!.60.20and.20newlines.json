[
    {
        "content": "<p>I wanted to convert a couple of tests to <code>expect!</code>, but it fails because the expected value has an extra newline at the end, so I need to make sure not to include one (like below). Am I missing something?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">r</span><span class=\"s\">&quot;</span>\n<span class=\"s\">        fn test() {</span>\n<span class=\"s\">            let a: i32 = { 1i64 };</span>\n<span class=\"s\">        }</span>\n<span class=\"s\">        &quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">expect</span><span class=\"o\">!</span><span class=\"p\">[[</span><span class=\"n\">r</span><span class=\"s\">&quot;</span>\n<span class=\"s\">            10..40 &#39;{     ...4 }; }&#39;: ()</span>\n<span class=\"s\">            20..21 &#39;a&#39;: i32</span>\n<span class=\"s\">            29..37 &#39;{ 1i64 }&#39;: i64</span>\n<span class=\"s\">            31..35 &#39;1i64&#39;: i64&quot;</span><span class=\"p\">]],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 204436706,
        "sender_full_name": "Laurențiu",
        "timestamp": 1595258829
    },
    {
        "content": "<p>(matklad: you seem to have some specific preferences about where the whitespace should go in these tests, I wouldn't care/ask otherwise)</p>",
        "id": 204437544,
        "sender_full_name": "Laurențiu",
        "timestamp": 1595259227
    },
    {
        "content": "<p>Yup, expect! tests to <code>deindent</code>, which removes first blank line and strips common indent, but leaves the trailing newline in place</p>",
        "id": 204437768,
        "sender_full_name": "matklad",
        "timestamp": 1595259325
    },
    {
        "content": "<p>The fix here is to append <code>\\n</code> to the \"actual\" output</p>",
        "id": 204437802,
        "sender_full_name": "matklad",
        "timestamp": 1595259345
    },
    {
        "content": "<p>Which I think is generally a good idea -- if something is multiline, it should include a trailing newline, otherwise it can get squashed to other things in printing</p>",
        "id": 204437890,
        "sender_full_name": "matklad",
        "timestamp": 1595259375
    },
    {
        "content": "<p>Makes sense, I guess</p>",
        "id": 204437939,
        "sender_full_name": "Laurențiu",
        "timestamp": 1595259402
    },
    {
        "content": "<p>Ugh, now I can't make <code>rustfmt</code> keep the newline before <code>]]</code> <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 204438140,
        "sender_full_name": "Laurențiu",
        "timestamp": 1595259503
    },
    {
        "content": "<p>To clarify, this should look like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>    check(\n        r&quot;\n        fn test() {\n            let a: i32 = { 1i64 };\n        }\n        &quot;,\n        expect![[r&quot;\n            10..40 &#39;{     ...4 }; }&#39;: ()\n            20..21 &#39;a&#39;: i32\n            29..37 &#39;{ 1i64 }&#39;: i64\n            31..35 &#39;1i64&#39;: i64\n        &quot;]],\n    );\n</code></pre></div>",
        "id": 204438240,
        "sender_full_name": "matklad",
        "timestamp": 1595259550
    },
    {
        "content": "<p>So, if this fails, the <code>check</code> functions should be fixed to append <code>\\n</code></p>",
        "id": 204438295,
        "sender_full_name": "matklad",
        "timestamp": 1595259574
    },
    {
        "content": "<p>the <code>]]</code> is there specifically to prevet rustfmt from messing up newlines badly :D</p>",
        "id": 204438346,
        "sender_full_name": "matklad",
        "timestamp": 1595259593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.60expect!.60.20and.20newlines/near/204438346\">said</a>:</p>\n<blockquote>\n<p>the <code>]]</code> is there specifically to prevet rustfmt from messing up newlines badly :D</p>\n</blockquote>\n<p>Yeah, I think I need to make it specifically <code>\"]]</code> (and not <code>]]</code>)</p>",
        "id": 204438473,
        "sender_full_name": "Laurențiu",
        "timestamp": 1595259637
    }
]