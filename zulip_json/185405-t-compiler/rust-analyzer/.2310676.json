[
    {
        "content": "<p>Hello, I'm trying to fix <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10676\">#10676</a>  </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">SomeStruct</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">SomeStruct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">fn</span> <span class=\"nf\">is_even</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeStruct</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">is_even</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">.</span><span class=\"n\">is_even</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>For the above example, I found that it can't find the inherent method <code>is_even</code>  in the scope of crate root. The relative code is <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/2c0f433fd2e838ae181f87019b6f1fefe33c6f54/crates/hir_ty/src/method_resolution.rs#L748\">hir_ty/src/method_resolution.rs</a>.  There is no <code>impl</code> in crate root, but there is an <code>impl</code> in the body of <code>main</code>,  I have no idea what to do next to fix this issue <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 260652827,
        "sender_full_name": "zhou fan",
        "timestamp": 1636376282
    },
    {
        "content": "<p><code>impl</code>s inside items don't exist in the crate block def map which is what is being queried for <code>impl</code>s there, they exist in the corresponding block def map(the definition map just for the interior of the item, that is the <code>main</code> function in this case) hence why you we do not see the impl there.<br>\n<em>I think</em> at least.</p>",
        "id": 260654645,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636377239
    },
    {
        "content": "<p>I am not too familiar with that part of the code, but we probably need query the block def maps here as well or something along those lines, cc <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span></p>",
        "id": 260654748,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636377298
    },
    {
        "content": "<p>hm yeah. For traits we look in the local def maps for the trait and self type:<br>\n<a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/2c0f433fd2e838ae181f87019b6f1fefe33c6f54/crates/hir_ty/src/chalk_db.rs#L132-L133\">https://github.com/rust-analyzer/rust-analyzer/blob/2c0f433fd2e838ae181f87019b6f1fefe33c6f54/crates/hir_ty/src/chalk_db.rs#L132-L133</a><br>\nsomehow I thought we also did that for inherent impls already; apparently not</p>",
        "id": 260657764,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1636378985
    },
    {
        "content": "<p>I think that would basically be the fix here as well</p>",
        "id": 260657898,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1636379043
    },
    {
        "content": "<p>huh, yeah I also thought this should work already. the fix sounds right.</p>",
        "id": 260659718,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636379971
    }
]