[
    {
        "content": "<p>I'm currently working on a feature to be able to goto definition a trait impl to get to the trait on the other side (kinda like <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/8988\">https://github.com/rust-analyzer/rust-analyzer/pull/8988</a> but the other way around) and I'm having trouble actually finding the trait. I'm currently trying to do it through the route of getting the AssocItem and then the container, to get the impl.</p>\n<p>From that impl, I can get a TraitRef, but as per the comment:</p>\n<div class=\"codehilite\"><pre><span></span><code>    // FIXME: the return type is wrong. This should be a hir version of\n    // `TraitRef` (ie, resolved `TypeRef`).\n</code></pre></div>\n<p>this is not a really useful object to have, as is also supported by poking through the rustdocs. So I'm stuck here.</p>\n<p>To be specific, I want to get the trait items in such a way that I can find the function on the trait itself matching the name of the function on the impl, then get its position.</p>",
        "id": 240920585,
        "sender_full_name": "Jade",
        "timestamp": 1622542411
    },
    {
        "content": "<p>you can use <code>db.impl_trait</code> to get the implement Chalk <code>TraitRef</code>; then you can use <code>hir_ty::from_chalk_trait_id(trait_ref.trait_id)</code> to get the trait ID and turn that into a <code>hir::Trait</code>. I think you could make that function just return <code>Option&lt;Trait&gt;</code> for now; it seems all uses of it just call <code>is_some</code> or <code>is_none</code> anyway?</p>",
        "id": 240925836,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1622545841
    },
    {
        "content": "<p>ideally we'd have something like <code>hir::Type</code> that wraps a <code>chalk_ir::TraitRef</code> there (that's what the FIXME means), but for now just returning the <code>Trait</code>would be fine</p>",
        "id": 240925905,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1622545895
    }
]