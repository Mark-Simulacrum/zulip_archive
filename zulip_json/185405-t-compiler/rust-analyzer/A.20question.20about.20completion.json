[
    {
        "content": "<p>Hello, I'm confused about some tests of completion, such as the following</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">target_type_in_trait_impl_block</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">impl Trait for Str$0</span>\n<span class=\"s\">\"#</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">expect</span><span class=\"o\">!</span><span class=\"p\">[[</span><span class=\"s\">r##\"</span>\n<span class=\"s\">            kw self</span>\n<span class=\"s\">            kw super</span>\n<span class=\"s\">            kw crate</span>\n<span class=\"s\">            tt Trait</span>\n<span class=\"s\">            en Enum</span>\n<span class=\"s\">            st Record</span>\n<span class=\"s\">            st Tuple</span>\n<span class=\"s\">            md module</span>\n<span class=\"s\">            st Unit</span>\n<span class=\"s\">            ma makro!(…) #[macro_export] macro_rules! makro</span>\n<span class=\"s\">            un Union</span>\n<span class=\"s\">            bt u32</span>\n<span class=\"s\">        \"##</span><span class=\"p\">]],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>These expectations are very strange to me. What is the relationship between this and the auto completion in VSCode?<br>\n<a href=\"/user_uploads/4715/RcVyiTRQ4PIc-lMq3IfqiLc7/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/RcVyiTRQ4PIc-lMq3IfqiLc7/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/RcVyiTRQ4PIc-lMq3IfqiLc7/image.png\"></a></div>",
        "id": 258636087,
        "sender_full_name": "zhou fan",
        "timestamp": 1634860509
    },
    {
        "content": "<p>The expect test lists all completions we generate, unfiltered</p>",
        "id": 258636271,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634860639
    },
    {
        "content": "<p>As the filtering is done by the client</p>",
        "id": 258636277,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634860645
    },
    {
        "content": "<p>So whatever is written before the cursor position($0) in the tests doesn't really affect the test results</p>",
        "id": 258636304,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634860670
    },
    {
        "content": "<p>Assuming that's what you were asking about</p>",
        "id": 258636379,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634860707
    },
    {
        "content": "<p>Yes, that is what I want to ask. In addition, where is the client code? where is the filtering code?</p>",
        "id": 258636940,
        "sender_full_name": "zhou fan",
        "timestamp": 1634861080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"432755\">zhou fan</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/A.20question.20about.20completion/near/258636940\">said</a>:</p>\n<blockquote>\n<p>Yes, this is what I want to ask. In addition, where is the client code? where is the filtering code?</p>\n</blockquote>\n<p>Probably in the source code of whatever IDE / editor you're using</p>",
        "id": 258637013,
        "sender_full_name": "sim",
        "timestamp": 1634861141
    },
    {
        "content": "<p>The filtering is done by the client</p>",
        "id": 258637029,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861151
    },
    {
        "content": "<p>And ye as said, completions are fully handled by vscode, there is no extension code by us for that.</p>",
        "id": 258637113,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861192
    },
    {
        "content": "<p>Everything completion related fully lives in ide_completion</p>",
        "id": 258637123,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861200
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/A.20question.20about.20completion/near/258637113\">said</a>:</p>\n<blockquote>\n<p>And ye as said, completions are fully handled by vscode, there is no extension code by us for that.</p>\n</blockquote>\n<p>I see, thank you. It’s very interesting that vscode can actually help filtering</p>",
        "id": 258637301,
        "sender_full_name": "zhou fan",
        "timestamp": 1634861335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/A.20question.20about.20completion/near/258637113\">said</a>:</p>\n<blockquote>\n<p>And ye as said, completions are fully handled by vscode, there is no extension code by us for that.</p>\n</blockquote>\n<p>There is another question,  Where can I find the rules for vscode filtering?</p>",
        "id": 258637993,
        "sender_full_name": "zhou fan",
        "timestamp": 1634861805
    },
    {
        "content": "<p>Not sure whether you can modify those</p>",
        "id": 258638035,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861835
    },
    {
        "content": "<p>or find them rather</p>",
        "id": 258638046,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861849
    },
    {
        "content": "<p>I wouldn't know where at least</p>",
        "id": 258638170,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861926
    },
    {
        "content": "<p>Though there shouldn't be much around  them aside from filtering by prefix I imagine</p>",
        "id": 258638212,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1634861957
    },
    {
        "content": "<p>I don’t think I need to worry about this now. Thanks again</p>",
        "id": 258638527,
        "sender_full_name": "zhou fan",
        "timestamp": 1634862171
    }
]