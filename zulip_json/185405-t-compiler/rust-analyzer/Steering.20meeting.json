[
    {
        "content": "<p>Placeholder message. Stay tuned!</p>",
        "id": 222580630,
        "sender_full_name": "matklad",
        "timestamp": 1610545549
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> (and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> especially), I think we have a pretty awesome cadence with weekly releases , delivering new features and bugs like a clockwork! Shoutouts to <span class=\"user-mention\" data-user-id=\"203366\">@Jeremy Kolb</span>, <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span>, <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> , and <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> for helping a lot with keeping the rolling stone in the air, or whatever is the appropriate idiom. </p>\n<p>However, I've noticed that we've run out of steam a bit with respect to longer term roadmaps and projects. Ie, what is the next <em>big</em> thing we are working on? I personally don't know <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> </p>\n<p>To take a more proactive approach here, I've decided to cannibalize every sixsth weekly meeting and hold a steering meeting instead.</p>",
        "id": 222582148,
        "sender_full_name": "matklad",
        "timestamp": 1610546178
    },
    {
        "content": "<p>The next one will happen next Monday, in this stream. The purpose is to force us to think in a more long-term way, and, well, to steer the direction of the project!</p>",
        "id": 222582512,
        "sender_full_name": "matklad",
        "timestamp": 1610546326
    },
    {
        "content": "<blockquote>\n<p>weekly releases , delivering new features and bugs</p>\n</blockquote>\n<p>Yaay for new bugs each week</p>",
        "id": 222582537,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610546337
    },
    {
        "content": "<p>I guess not much has changed, but <a href=\"https://rust-analyzer.github.io/blog/2020/05/18/next-few-years.html\">https://rust-analyzer.github.io/blog/2020/05/18/next-few-years.html</a> is probably worth a re-read. The VFS should be in a much better state now, though.</p>",
        "id": 222582964,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610546517
    },
    {
        "content": "<p>And I have solved a lot of personal things in the last six months, and hopefully will have more time to contribute, especially for macro related stuffs.</p>",
        "id": 222584763,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610547316
    },
    {
        "content": "<p>Yeah, it's also true that the last n months were pretty challenging for a lot of folks, so a bit of a slowdown is expected and I would say healthy )</p>",
        "id": 222586212,
        "sender_full_name": "matklad",
        "timestamp": 1610547923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> thanks for that link, it's still a good read!</p>",
        "id": 222586268,
        "sender_full_name": "matklad",
        "timestamp": 1610547949
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/rust/pull/80984\">https://github.com/rust-lang/rust/pull/80984</a> to update the version shipped with <code>rustup</code>, we had one from September</p>",
        "id": 222586689,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610548109
    },
    {
        "content": "<p>We should include this in the release workflow</p>",
        "id": 222586775,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610548140
    },
    {
        "content": "<p>I was going to say that we should probably start doing that more regularly, thanks!</p>",
        "id": 222586780,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610548141
    },
    {
        "content": "<p>I still consider myself more like a rust-analyzer user rather then a developer and apparently percepting the majority of the features things from this standpoint (mainly due to complete absence of fundamental knowledge on the compiler/ide domain).<br>\nThis puts me into a weird position, where I understand the necessity of the things mentioned in the blogpost above, but don't care about any of those <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n<p>Insead, I have a bunch of scattered semi-formed ideas (and rants apparently, after re-reading) about what I want to see in RA eventually, maybe some of them can be useful:</p>\n<ul>\n<li><code>Cargo.toml</code> ide support, including various features toggles, dependencies' completion (integrated with <a href=\"http://crates.io\">crates.io</a>), formatting, etc.</li>\n</ul>\n<p>IMO this is not just big, it's huge (for the resources it will require and for the impact it can bring) and heavily underrated: when I see things like <a href=\"https://github.com/intellij-rust/intellij-rust/pull/5189\">https://github.com/intellij-rust/intellij-rust/pull/5189</a> I'm really excited to see this in action and sad, thinking of how far we're from there.</p>\n<ul>\n<li>persistent state with incremental updates</li>\n</ul>\n<p>Feels like this can be done at this stage already, although not sure if feasible still: it also seems huge.</p>\n<ul>\n<li>somewhat mediocre usability</li>\n</ul>\n<p>RA is still more like a CLI Linux tool for me, with a ton of parameters and not that many docs related to them, with almost no UI elements to hide them behind.</p>\n<p>For instance, when I see this</p>\n<p><a href=\"/user_uploads/4715/7U1Yq8mlSg4JzQYImVNWpR9i/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/7U1Yq8mlSg4JzQYImVNWpR9i/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/7U1Yq8mlSg4JzQYImVNWpR9i/image.png\"></a></div><p>I'm always dreaming of some sort of intelli-like panel where I could have adjusted those instead.<br>\nThere are more I can come up with and I understand that there are big limitations on the editor + LSP side for those, but still current UX (and the documentation) look as crafted by the professional developers, not by the professional designers :)</p>\n<ul>\n<li>lack of <code>I</code> from <code>IDE</code> (the way I understand this letter)</li>\n</ul>\n<p>That is far-streched, but still: currently all we have is our codebase and almost zero knowledge on how to add, say, custom macro syntax highlighting &amp; completion plugin.<br>\n(a few other good examples, remembering the new intellij-rust, would be the ML completion and repl integration)</p>\n<ul>\n<li>lack of stability and ways to diagnose the issue</li>\n</ul>\n<p>Maybe it's too early to think of this now, since we're still \"expetimental\", but nice to mention nonetheless.<br>\nThere were a bunch of \"I've reinstalled the RA and now it works\" reports (I think I've hit it myself recently) and lots of closed issues with \"it had been fixed at some point, please recheck\" resolution.</p>\n<p>Basically, we have no idea what breaks and how bad it's broken, there's no clearly visible indication of whether the plugin is up-to-date, whether something panics inside or not, etc.<br>\nWorse, usually we get to know about this from the flood of issues/reddit/other external places, not our tests.<br>\nAnd the users have to make some sorcery to provide us some way to detect what's wrong, which is not always optimal too.</p>\n<ul>\n<li>lack of RA awareness</li>\n</ul>\n<p>Surprisingly, there's plenty of people (especially the new ones, which is super weird) unaware of RA and difference between RA, RLS and others.</p>\n<p>Maybe it's time to close the RLS-RA gap finally and propagate the knowledge a bit better.</p>\n<ul>\n<li>polishing, improvements and public relations</li>\n</ul>\n<p>Just a neverending task that consumes plenty of time and will consume more and more as the time goes and the features become more abundant.</p>\n<p>I'm pretty surprised by the fact that we were not only able to maintain the same good development pace we've had before the greater popularity had struck RA project, but also kept on reviewing, houskeeping, mentoring and doing whatever public things needed to be done.</p>\n<p>Yet I'm still concerned that the development is done by ~3 persons on the payroll and otherwise enthusiastic volunteers without liabilities.<br>\nI understand the compexity of the situation (especially with the <code>rustc</code> events on the background) and stunned by the results that had been achieved by the people during the time I observe the development, but still would appreciate more support from big players on the market here.</p>",
        "id": 222594235,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610550752
    },
    {
        "content": "<blockquote>\n<p>Yet I'm still concerned that the development is done by ~3 persons on the payroll and otherwise enthusiastic volunteers without liabilities.</p>\n</blockquote>\n<p>lol you clearly haven't seen how few people are on the other rust teams</p>",
        "id": 222594446,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610550828
    },
    {
        "content": "<p>3 people on payroll is <em>giant</em></p>",
        "id": 222594526,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610550847
    },
    {
        "content": "<blockquote>\n<p>lack of stability and ways to diagnose the issue</p>\n</blockquote>\n<p>This doesn't seem so bad to me. We've had some badly-reported issues, and other older ones got fixed without being referenced in the PRs, but that's because people have been doing a great job at fixing long-standing stuff.</p>\n<blockquote>\n<p>lack of RA awareness</p>\n</blockquote>\n<p>Because none of the official materials mention RA, but indeed, a lot of people only know about RLS.</p>",
        "id": 222595640,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610551152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/222594526\">said</a>:</p>\n<blockquote>\n<p>3 people on payroll is <em>giant</em></p>\n</blockquote>\n<p>To be clear, it's not 3 people working full-time, the open collective doesn't even fund one full-time position IIRC (but I was able to do a lot of paid work last year, so it ended up being more than 1 full-time position, which is a nice improvement)</p>",
        "id": 222596005,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610551297
    },
    {
        "content": "<p>right, sure, but <a href=\"http://docs.rs\">docs.rs</a>, clippy, rustup, don't even have a <em>single</em> full-time person</p>",
        "id": 222596147,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610551338
    },
    {
        "content": "<p>or forget full-time, anyone who's paid at all</p>",
        "id": 222596180,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610551353
    },
    {
        "content": "<p>The IntelliJ plugin has a couple of full-time employees working on it I think</p>",
        "id": 222596370,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610551433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/222595640\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>lack of stability and ways to diagnose the issue</p>\n</blockquote>\n<p>This doesn't seem so bad to me. We've had some badly-reported issues, and other older ones got fixed without being referenced in the PRs, but that's because people have been doing a great job at fixing long-standing stuff.</p>\n</blockquote>\n<p>I think there's more _perceived_ instability than actual instability (though we had some real problems recently), caused mostly by misconfigurations and by introducing new diagnostics that show things not working that were previously just invisible. That perception does annoy me, but I don't know if it's actually worth doing much about</p>",
        "id": 222596547,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1610551493
    },
    {
        "content": "<p>Yeah, the new diagnostics affected a lot of people, but we've fixed a ton of bugs thanks to them</p>",
        "id": 222596829,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610551586
    },
    {
        "content": "<p>Yeah certainly. I expect a similar wave when we add type checking / body name resolution diagnostics</p>",
        "id": 222597331,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1610551755
    },
    {
        "content": "<p>Can't wait for that. At least there we have a good number of false positives in RA itself</p>",
        "id": 222597607,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610551836
    },
    {
        "content": "<p>One thing I'd like to do if I find the time is figure out how to upstream some of our LSP modifications (especially around snippets and inlay hints) and get them into the protocol like matklad did with the extend selection request.</p>",
        "id": 222597629,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1610551844
    },
    {
        "content": "<p>Is there any progress on rust-analyzer support in the official plugin since that was added initially?</p>",
        "id": 222597807,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610551913
    },
    {
        "content": "<p>Last commit on 22 Jul 2020</p>",
        "id": 222598010,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610551979
    },
    {
        "content": "<p>I think it's pretty much broken, but of course, a lot of users try it then complain that RA doesn't work</p>",
        "id": 222598095,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610552006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/222598095\">said</a>:</p>\n<blockquote>\n<p>I think it's pretty much broken, but of course, a lot of users try it then complain that RA doesn't work</p>\n</blockquote>\n<p>I've noticed that too.</p>",
        "id": 222598304,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1610552077
    },
    {
        "content": "<p>We need to get the message out somehow (we also get a lot of duplicate bug reports)</p>",
        "id": 222598378,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1610552104
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/222582148\">said</a>:</p>\n<blockquote>\n<p>To take a more proactive approach here, I've decided to cannibalize every sixsth weekly meeting and hold a steering meeting instead.</p>\n</blockquote>\n<p>big fan</p>",
        "id": 222610590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610556796
    },
    {
        "content": "<blockquote>\n<p>I think there's more _perceived_ instability than actual instability (though we had some real problems recently), caused mostly by misconfigurations and by introducing new diagnostics that show things not working that were previously just invisible. That perception does annoy me, but I don't know if it's actually worth doing much about</p>\n</blockquote>\n<p>Some of these misconfigurations bug is related to <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6448\">https://github.com/rust-analyzer/rust-analyzer/issues/6448</a> , and I think we could enable it as default ?</p>",
        "id": 222627120,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610563690
    },
    {
        "content": "<blockquote>\n<p>Yeah certainly. I expect a similar wave when we add type checking / body name resolution diagnostics</p>\n</blockquote>\n<p>Can't wait for that too! And other thing is attrib proc-macro. One of difficulties is attrib proc-macro is \"rewrite\" (compare to derive macro which is additive), it will generate tons of problem if  it generate incorrect ouptuts.</p>",
        "id": 222627720,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610563980
    },
    {
        "content": "<p>about <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6448#issuecomment-759646837\">https://github.com/rust-analyzer/rust-analyzer/issues/6448#issuecomment-759646837</a>: I know because bootstrapping is hard :( <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F/near/222529165\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F/near/222529165</a></p>",
        "id": 222628184,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610564210
    },
    {
        "content": "<p>\"Load out dirs from check\" (which really should be renamed, since it loads all kinds of stuff) seems like something we might want to integrate with check-on-save, no?</p>",
        "id": 222628542,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610564359
    },
    {
        "content": "<p>As in, we'll start analysis without this information, and feed the cargo check data back into the analysis everytime the user saves</p>",
        "id": 222628607,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610564397
    },
    {
        "content": "<p>Right now we only \"load out dirs from check\" once on startup, which means that proc macros don't get properly refreshed if they change</p>",
        "id": 222628714,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610564429
    },
    {
        "content": "<p>oh, <a href=\"https://github.com/rust-lang/cargo/pull/9071\">https://github.com/rust-lang/cargo/pull/9071</a> is relevant</p>",
        "id": 222629216,
        "sender_full_name": "matklad",
        "timestamp": 1610564617
    },
    {
        "content": "<blockquote>\n<p>\"Load out dirs from check\" (which really should be renamed, since it loads all kinds of stuff) seems like something we might want to integrate with check-on-save, no?</p>\n</blockquote>\n<p>It should be, but how about people whom don't use check on save but still want to use proc-macro ? IIRC <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  mentioned he does not use check on save too :)</p>",
        "id": 222630962,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610565299
    },
    {
        "content": "<p>I don't use check on save and would appreciate if you spare me from using it: I occasionally work on some projects with tremendous amounts of dependencies that take <em>extended</em> time to rebuild incrementally and have weird <code>build.rs</code> that retrigger crate rebuilds even though there were no real changes (seems also that rustc has some issues with that too).<br>\nThat also impacts my laptop battery severely.</p>",
        "id": 222633936,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610566630
    },
    {
        "content": "<p>Finally caught up with the therad. Thanks <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> for taking time to write that comment, it's very helpful! I think it will be a great starting point for the discussion on Monday; in the meantime, let me think about it a bit more :)</p>",
        "id": 222844573,
        "sender_full_name": "matklad",
        "timestamp": 1610709223
    },
    {
        "content": "<p>Welcome <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> to our first ever steering meeting!</p>",
        "id": 223130509,
        "sender_full_name": "matklad",
        "timestamp": 1610982140
    },
    {
        "content": "<p>The rough agenda for today's meeting:</p>\n<ul>\n<li>overview of the current state</li>\n<li>discussion of the steering process (how we track and follow through)</li>\n<li>planning for the next six weeks</li>\n</ul>",
        "id": 223130750,
        "sender_full_name": "matklad",
        "timestamp": 1610982230
    },
    {
        "content": "<p>Let's start with the current state</p>",
        "id": 223130825,
        "sender_full_name": "matklad",
        "timestamp": 1610982249
    },
    {
        "content": "<p>The biggest goal for last year was to cross the rubicon and to make rust-analyzer official</p>",
        "id": 223130917,
        "sender_full_name": "matklad",
        "timestamp": 1610982301
    },
    {
        "content": "<p>Sadly, this is blocked at the moment: moving rust-analyzer into rust-lang org softly waits on the foundation stuff</p>",
        "id": 223131040,
        "sender_full_name": "matklad",
        "timestamp": 1610982355
    },
    {
        "content": "<p>This I think is the reason why we sort-of missed the big goal by the end of the year</p>",
        "id": 223131191,
        "sender_full_name": "matklad",
        "timestamp": 1610982418
    },
    {
        "content": "<p>I think this is not a big problem though: there's a lot of things we can do keeping rust-analyzer in its current steady state.</p>",
        "id": 223131292,
        "sender_full_name": "matklad",
        "timestamp": 1610982470
    },
    {
        "content": "<p>And yeah, one bit here is to figuring out goals process, so that we know what we are working on )</p>",
        "id": 223131432,
        "sender_full_name": "matklad",
        "timestamp": 1610982537
    },
    {
        "content": "<p>I have a couple of questions about that:</p>\n<ul>\n<li>do you feel that 6 week is the right time frame here?</li>\n<li>what would be the most convenient and transparent way to document the current roadmap?</li>\n</ul>",
        "id": 223131650,
        "sender_full_name": "matklad",
        "timestamp": 1610982634
    },
    {
        "content": "<p>6 weeks makes sense to me. It also coincides with the Rust release schedule, so we could sync submodule updates to the steering meetings.</p>",
        "id": 223131764,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982710
    },
    {
        "content": "<p>Re scheduling, there's a minor risk of forgetting about them because 6 weeks is hard to keep track of, but it's probably not much of a problem</p>",
        "id": 223131838,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610982738
    },
    {
        "content": "<p>We can make a recurring calendar entry</p>",
        "id": 223131878,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982761
    },
    {
        "content": "<p>And mention the steering meeting in the preceding weekly sync</p>",
        "id": 223131917,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> already did that</p>",
        "id": 223131927,
        "sender_full_name": "matklad",
        "timestamp": 1610982785
    },
    {
        "content": "<p>We could also time it to be the Monday after rust-lang release...</p>",
        "id": 223131985,
        "sender_full_name": "matklad",
        "timestamp": 1610982815
    },
    {
        "content": "<p><a href=\"https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com\">https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com</a></p>",
        "id": 223132115,
        "sender_full_name": "matklad",
        "timestamp": 1610982867
    },
    {
        "content": "<p>If we do want to sync the submodule update I'd prefer the monday <em>before</em> a Rust release (which is always on a thursday)</p>",
        "id": 223132118,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982869
    },
    {
        "content": "<p>that's the calendar where the meeting it</p>",
        "id": 223132129,
        "sender_full_name": "matklad",
        "timestamp": 1610982879
    },
    {
        "content": "<p>Since otherwise people will be 6 more weeks behind</p>",
        "id": 223132136,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982885
    },
    {
        "content": "<p>oh, nice, I keep forgetting about that calendar</p>",
        "id": 223132199,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982910
    },
    {
        "content": "<p>there are both sync and steering meetings</p>",
        "id": 223132230,
        "sender_full_name": "oliver",
        "timestamp": 1610982926
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> hm, do you want to be the cheif submodule updater(/</p>",
        "id": 223132284,
        "sender_full_name": "matklad",
        "timestamp": 1610982956
    },
    {
        "content": "<p>Yeah I can do that</p>",
        "id": 223132340,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610982965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> that's intentional -- it is a meeting stealing algorithm!</p>",
        "id": 223132361,
        "sender_full_name": "matklad",
        "timestamp": 1610982980
    },
    {
        "content": "<p>then to 'sync the submodule update' would be a steering meeting?</p>",
        "id": 223132464,
        "sender_full_name": "oliver",
        "timestamp": 1610983028
    },
    {
        "content": "<p>yup</p>",
        "id": 223132489,
        "sender_full_name": "matklad",
        "timestamp": 1610983046
    },
    {
        "content": "<p>Ok, I guess 6 weeks is ok, and ther's calendar, and it makes to nail down that as we go</p>",
        "id": 223132525,
        "sender_full_name": "matklad",
        "timestamp": 1610983066
    },
    {
        "content": "<p>The next question is how do we track descisons and progress?</p>",
        "id": 223132610,
        "sender_full_name": "matklad",
        "timestamp": 1610983087
    },
    {
        "content": "<p>I've thought about creating a GitHub project for that , but maybe just a pinned issue would do?</p>",
        "id": 223132732,
        "sender_full_name": "matklad",
        "timestamp": 1610983135
    },
    {
        "content": "<p>The issue:</p>\n<ul>\n<li>will inclued the plan for the current iteration</li>\n</ul>",
        "id": 223132783,
        "sender_full_name": "matklad",
        "timestamp": 1610983156
    },
    {
        "content": "<ul>\n<li>will be closed with a retro after the iteration</li>\n<li>can be used as a parent issue and main discussion point?</li>\n</ul>",
        "id": 223132847,
        "sender_full_name": "matklad",
        "timestamp": 1610983192
    },
    {
        "content": "<p>we're already using 3/3 pinned issues</p>",
        "id": 223132939,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983223
    },
    {
        "content": "<p>This feels like overthinking, to be honest, but I want to have <em>some</em> artifact as an outcome of the meeting</p>",
        "id": 223132969,
        "sender_full_name": "matklad",
        "timestamp": 1610983240
    },
    {
        "content": "<p>yeah makes sense</p>",
        "id": 223133017,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> yeah, I want to unpin project.json changes )</p>",
        "id": 223133028,
        "sender_full_name": "matklad",
        "timestamp": 1610983269
    },
    {
        "content": "<p>And the transition issue is sort of a part of a roadmap anyway.</p>",
        "id": 223133085,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610983304
    },
    {
        "content": "<p>ah, just noticed that beta promotion happens on mondays, so if we wanna sync with the submodule update we should have the meeting a week before the release</p>",
        "id": 223133090,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983308
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> maybe it's better to not sync them though?</p>",
        "id": 223133184,
        "sender_full_name": "matklad",
        "timestamp": 1610983349
    },
    {
        "content": "<p>could be, yeah</p>",
        "id": 223133200,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983360
    },
    {
        "content": "<p>I guss, it's a good point to check that we did't forget the update</p>",
        "id": 223133259,
        "sender_full_name": "matklad",
        "timestamp": 1610983378
    },
    {
        "content": "<p>but that could also act as an artifact</p>",
        "id": 223133262,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983379
    },
    {
        "content": "<p>to deliver the results of the 6 weeks to upstream</p>",
        "id": 223133284,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983395
    },
    {
        "content": "<p>Hm</p>",
        "id": 223133317,
        "sender_full_name": "matklad",
        "timestamp": 1610983423
    },
    {
        "content": "<p>why is it important to have two types of meetings?</p>",
        "id": 223133326,
        "sender_full_name": "oliver",
        "timestamp": 1610983425
    },
    {
        "content": "<p>we are nightly only anyways. so I guess beta promotion isn't strictly necessary</p>",
        "id": 223133404,
        "sender_full_name": "matklad",
        "timestamp": 1610983453
    },
    {
        "content": "<p>ah, right, then this is probably irrelevant</p>",
        "id": 223133465,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610983494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> to have different mindsets: immediate problems vs med-term future</p>",
        "id": 223133475,
        "sender_full_name": "matklad",
        "timestamp": 1610983498
    },
    {
        "content": "<p>Ok, so meeting every 6 weeks + pinned issue + <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> promotion sounds right!</p>",
        "id": 223133529,
        "sender_full_name": "matklad",
        "timestamp": 1610983541
    },
    {
        "content": "<p>Let's move one meta level down and think about next weeks then</p>",
        "id": 223133627,
        "sender_full_name": "matklad",
        "timestamp": 1610983581
    },
    {
        "content": "<p>I have three large areas in mind:</p>\n<ul>\n<li>end-user experience (as exemplified by <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> comment)</li>\n<li>internal maintainability</li>\n<li>integration with rustc</li>\n</ul>",
        "id": 223133748,
        "sender_full_name": "matklad",
        "timestamp": 1610983661
    },
    {
        "content": "<p>/poll priorities</p>",
        "id": 223133889,
        "sender_full_name": "matklad",
        "timestamp": 1610983727
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/_UIIbQSk_sHqbMUhy7RFMgvp/Screenshot_20210118-102908_Zulip.jpg\">Screenshot_20210118-102908_Zulip.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_UIIbQSk_sHqbMUhy7RFMgvp/Screenshot_20210118-102908_Zulip.jpg\" title=\"Screenshot_20210118-102908_Zulip.jpg\"><img src=\"/user_uploads/4715/_UIIbQSk_sHqbMUhy7RFMgvp/Screenshot_20210118-102908_Zulip.jpg\"></a></div>",
        "id": 223133969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610983779
    },
    {
        "content": "<p>FYI polls don't work on mobile</p>",
        "id": 223133976,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610983784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/223133976\">said</a>:</p>\n<blockquote>\n<p>FYI polls don't work on mobile</p>\n</blockquote>\n<p>They work in Firefox</p>",
        "id": 223134086,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610983813
    },
    {
        "content": "<p>I am curious which of the 3 you think we should focus next 6 weeks?</p>",
        "id": 223134120,
        "sender_full_name": "matklad",
        "timestamp": 1610983836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> do <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> work? I might go with separate messages than</p>",
        "id": 223134209,
        "sender_full_name": "matklad",
        "timestamp": 1610983880
    },
    {
        "content": "<p>Yes, reactions work. <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> wrote a triagebot command for it I think</p>",
        "id": 223134260,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610983915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> you have only one vote</p>",
        "id": 223134325,
        "sender_full_name": "matklad",
        "timestamp": 1610983931
    },
    {
        "content": "<p>doing two things is doing zero things )</p>",
        "id": 223134365,
        "sender_full_name": "matklad",
        "timestamp": 1610983948
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I didn't know that this meeting would be today.</p>",
        "id": 223134379,
        "sender_full_name": "bjorn3",
        "timestamp": 1610983956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> sorry about that -- itis the first one, hard to get routine going</p>",
        "id": 223134504,
        "sender_full_name": "matklad",
        "timestamp": 1610984012
    },
    {
        "content": "<p>theres' an event in the t-compiler calendar now</p>",
        "id": 223134538,
        "sender_full_name": "matklad",
        "timestamp": 1610984030
    },
    {
        "content": "<p>No problem. I don't have access to the T-compiler calendar though as far as I know.</p>",
        "id": 223134649,
        "sender_full_name": "bjorn3",
        "timestamp": 1610984078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> <a href=\"https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com\">https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com</a> ?</p>",
        "id": 223134699,
        "sender_full_name": "matklad",
        "timestamp": 1610984110
    },
    {
        "content": "<p>does it work?</p>",
        "id": 223134711,
        "sender_full_name": "matklad",
        "timestamp": 1610984118
    },
    {
        "content": "<p>It works for me and I'm not a team member</p>",
        "id": 223134741,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610984135
    },
    {
        "content": "<p>Yes, thanks for the link.</p>",
        "id": 223134743,
        "sender_full_name": "bjorn3",
        "timestamp": 1610984135
    },
    {
        "content": "<p>As an outsider, I would like better integration with rustc, but for a different reason than you may expect: I've found RA has a <em>much</em> easier to understand codebase and I hope integrating it with rustc will rub off so to speak</p>",
        "id": 223134751,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610984140
    },
    {
        "content": "<p>is it possible to add notifications to all of the events?</p>",
        "id": 223134752,
        "sender_full_name": "oliver",
        "timestamp": 1610984141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> I don't know -- not very fluent with org stuff (</p>",
        "id": 223134910,
        "sender_full_name": "matklad",
        "timestamp": 1610984208
    },
    {
        "content": "<p>/me has been trying to understand the trait system for almost a month now</p>",
        "id": 223134948,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610984227
    },
    {
        "content": "<p>Ok, I think it does make sense to focus on shipping things next 6weeks -- it's the best way to try stearing meeting</p>",
        "id": 223135039,
        "sender_full_name": "matklad",
        "timestamp": 1610984279
    },
    {
        "content": "<p>And, to be clear, the goal here is not to try to define work, but form shared <em>values</em>: I am going go hack on rowan regardless, but <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> post changed the way I see things a bit, and <strong>that</strong> is the reason why we are talking here</p>",
        "id": 223135235,
        "sender_full_name": "matklad",
        "timestamp": 1610984382
    },
    {
        "content": "<p>What are medium-term things we can do to make the users extatic?</p>",
        "id": 223135341,
        "sender_full_name": "matklad",
        "timestamp": 1610984424
    },
    {
        "content": "<p>One thing that comes to mind for me personally is <strong>enabling proc macros by default</strong></p>",
        "id": 223135431,
        "sender_full_name": "matklad",
        "timestamp": 1610984468
    },
    {
        "content": "<p>If sorting issues by number of <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> reactions is anything to go by, reducing memory usage and supporting inner items properly are high on the list</p>",
        "id": 223135485,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610984494
    },
    {
        "content": "<p>My personal one is type inference and nameres accuracy (for autocompletion). Macros would be a second one, since they're needed for that anyway</p>",
        "id": 223135511,
        "sender_full_name": "Laurențiu",
        "timestamp": 1610984509
    },
    {
        "content": "<p>How many time <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> copy and paste that setting in issues ? :)</p>",
        "id": 223135526,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610984513
    },
    {
        "content": "<p>Support for attribute macros is huge for some users, but doesn't matter to others</p>",
        "id": 223135536,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610984521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216201\">Edwin Cheng</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/223135526\">said</a>:</p>\n<blockquote>\n<p>How many time <span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> copy and paste that setting in issues ? :)</p>\n</blockquote>\n<p>I added a saved reply, so not a lot :)</p>",
        "id": 223135626,
        "sender_full_name": "bjorn3",
        "timestamp": 1610984559
    },
    {
        "content": "<p>Not sure if feasible, but might be good to suport better our features in macros, similar to <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7321\">https://github.com/rust-analyzer/rust-analyzer/pull/7321</a></p>",
        "id": 223135634,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610984564
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/223135485\">said</a>:</p>\n<blockquote>\n<p>If sorting issues by number of <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> reactions is anything to go by, reducing memory usage and supporting inner items properly are high on the list</p>\n</blockquote>\n<p>big +1 to less memory usage, I don't even use RA on <a href=\"http://docs.rs\">docs.rs</a> because it crashes my laptop</p>",
        "id": 223135648,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610984572
    },
    {
        "content": "<p>(most other codebases are fine though)</p>",
        "id": 223135679,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610984588
    },
    {
        "content": "<p>I also do think that Cargo.toml support would be huge, and <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> is eyeing this</p>",
        "id": 223135706,
        "sender_full_name": "matklad",
        "timestamp": 1610984604
    },
    {
        "content": "<p>+1 for Cargo.toml</p>",
        "id": 223135759,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610984631
    },
    {
        "content": "<p>(very slowly, with any actual work kicked off somewhere in the end of Feb by a single amateur dev, so it's not even a 6-week effort)</p>",
        "id": 223135847,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610984657
    },
    {
        "content": "<p>Inner items are tough -- it needs someone pretty dedicated...</p>",
        "id": 223135938,
        "sender_full_name": "matklad",
        "timestamp": 1610984713
    },
    {
        "content": "<p>I could probably implement that, since it's mostly tied to nameres. Not sure I'll find the time though.</p>",
        "id": 223136054,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610984772
    },
    {
        "content": "<p>I proposed restricting inner items a bit in the 2021 edition: <a href=\"#narrow/stream/268952-edition/topic/forbid.20item.20definitions.20inside.20function.20bodies\">https://rust-lang.zulipchat.com/#narrow/stream/268952-edition/topic/forbid.20item.20definitions.20inside.20function.20bodies</a></p>",
        "id": 223136057,
        "sender_full_name": "bjorn3",
        "timestamp": 1610984773
    },
    {
        "content": "<p>Another metaidea for the usability would be to make a list of cool intellij-rust features and pick some.</p>\n<p>I personally love their refactorings and diagnostics a lot (but the latter might irritate a lot of people rather then bring them joy in the beginning)</p>",
        "id": 223136108,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610984798
    },
    {
        "content": "<p>oh, another stream I didn't know about</p>",
        "id": 223136122,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1610984807
    },
    {
        "content": "<p>No worries -- it is the first one!</p>",
        "id": 223136192,
        "sender_full_name": "matklad",
        "timestamp": 1610984848
    },
    {
        "content": "<p>Speaking of irritation, adding a generic assist(?) to suppress diagnostics and or/messages might be beneficial (at least you don't have to explain the users which magic string should be put into RA settings)</p>",
        "id": 223136311,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610984904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> with intellij, some things are sadly client-side (</p>\n<p>I really want \"run cargo command\" in vs code <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 223136339,
        "sender_full_name": "matklad",
        "timestamp": 1610984925
    },
    {
        "content": "<blockquote>\n<p>I really want \"run cargo command\" in vs code</p>\n</blockquote>\n<p>That sounds like a 6-week framable thing actually, I've had it in my tattered list of \"cool things to have\" for months.<br>\nIMO a very simple input field with some completion is enough and that's not that huge to do.</p>",
        "id": 223136429,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610984996
    },
    {
        "content": "<p>Ok, so the plan for the next Rust relase seems to be:</p>\n<ul>\n<li>overal focus on features</li>\n<li>proc macros work by default</li>\n<li>plan for reduced memory usage</li>\n<li>maybe nameres</li>\n<li>mutable rowan shipped or intentiolally abandonded</li>\n</ul>",
        "id": 223136610,
        "sender_full_name": "matklad",
        "timestamp": 1610985077
    },
    {
        "content": "<blockquote>\n<p>IMO a very simple input field with some completion is enough and that's not that huge to do.</p>\n</blockquote>\n<p>The problem is, there's no API for that afaik</p>",
        "id": 223136676,
        "sender_full_name": "matklad",
        "timestamp": 1610985120
    },
    {
        "content": "<p>Also not for vscode extensions?</p>",
        "id": 223136770,
        "sender_full_name": "bjorn3",
        "timestamp": 1610985148
    },
    {
        "content": "<p>OTOH, there's no API for inlay hints neither, and that didn't stop <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> ...</p>",
        "id": 223136774,
        "sender_full_name": "matklad",
        "timestamp": 1610985150
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> yup</p>",
        "id": 223136819,
        "sender_full_name": "matklad",
        "timestamp": 1610985175
    },
    {
        "content": "<p>is anyone still working on that <code>ra_fmt</code> crate ??</p>",
        "id": 223136843,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1610985195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> no</p>",
        "id": 223136884,
        "sender_full_name": "matklad",
        "timestamp": 1610985219
    },
    {
        "content": "<p>For the \"run cargo command\", IMO a fully homegrown VSCode solution is fine to start with, similar to the way we display gc stats or propose multiple imports to pick from (the latter is actually the way I imagine it, but it might involve plenty of client side code and suffering)</p>",
        "id": 223136885,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1610985220
    },
    {
        "content": "<p>Ok, I guess it is time to wrap it up! I'll spawn a bunch of issues than, and link back into this thread!</p>",
        "id": 223137100,
        "sender_full_name": "matklad",
        "timestamp": 1610985329
    },
    {
        "content": "<p>Thanks folks for participating! We'll see in six weeks where we are at!</p>",
        "id": 223137217,
        "sender_full_name": "matklad",
        "timestamp": 1610985380
    },
    {
        "content": "<p>Our first steering issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7325#issue-788410886\">https://github.com/rust-analyzer/rust-analyzer/issues/7325#issue-788410886</a></p>",
        "id": 223147462,
        "sender_full_name": "matklad",
        "timestamp": 1610991162
    },
    {
        "content": "<p>Feel free to edit, obviously!</p>",
        "id": 223147488,
        "sender_full_name": "matklad",
        "timestamp": 1610991181
    },
    {
        "content": "<p>Wrote down a brief plan for handling local items: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7336\">https://github.com/rust-analyzer/rust-analyzer/pull/7336</a></p>",
        "id": 223156474,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610997989
    },
    {
        "content": "<p>Steering meeting next week, right?</p>",
        "id": 227487385,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614107798
    },
    {
        "content": "<p>Yup!</p>",
        "id": 227490023,
        "sender_full_name": "matklad",
        "timestamp": 1614108871
    },
    {
        "content": "<p>Do we want a blog post or something?</p>",
        "id": 227491954,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614109636
    },
    {
        "content": "<p>My gut feeling is now: I’d rather keep steering and promotion separate</p>",
        "id": 227494730,
        "sender_full_name": "matklad",
        "timestamp": 1614110737
    },
    {
        "content": "<p>I mean, we had this \"sprint\", we could write what happened. But I'm not sure it's worth it.</p>",
        "id": 227497370,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614111786
    },
    {
        "content": "<p>A retrospective would be good, but we can fold that into the next steering meeting</p>",
        "id": 227497485,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614111833
    },
    {
        "content": "<p>Since it's mostly useful for us, not the general user base</p>",
        "id": 227497556,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614111848
    },
    {
        "content": "<p>That said, this would probably make an excellent blog post too</p>",
        "id": 227497606,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614111866
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> !</p>",
        "id": 228244615,
        "sender_full_name": "matklad",
        "timestamp": 1614610831
    },
    {
        "content": "<p>we have our second steering meeting now!</p>",
        "id": 228244666,
        "sender_full_name": "matklad",
        "timestamp": 1614610845
    },
    {
        "content": "<p>As a reminder, the tracking issue for the last one is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7325\">https://github.com/rust-analyzer/rust-analyzer/issues/7325</a></p>",
        "id": 228244788,
        "sender_full_name": "matklad",
        "timestamp": 1614610876
    },
    {
        "content": "<p>The progress's been great: we did 0 out of 3 required items and 1 out of 1 optional items!</p>",
        "id": 228244963,
        "sender_full_name": "matklad",
        "timestamp": 1614610925
    },
    {
        "content": "<p>Although, we did advance the three issues quite a bit!</p>",
        "id": 228245037,
        "sender_full_name": "matklad",
        "timestamp": 1614610954
    },
    {
        "content": "<p>This happened because I work as per <a href=\"/user_uploads/4715/XVgHBNB_hp4qe2vAH1Js2XFM/urgency-importance.png\">urgency-importance.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/XVgHBNB_hp4qe2vAH1Js2XFM/urgency-importance.png\" title=\"urgency-importance.png\"><img src=\"/user_uploads/4715/XVgHBNB_hp4qe2vAH1Js2XFM/urgency-importance.png\"></a></div>",
        "id": 228245123,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614610987
    },
    {
        "content": "<p>and inner item support neither felt urgent nor important</p>",
        "id": 228245196,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> you know, I am just about to publish my new library for parsing command line flags</p>",
        "id": 228245249,
        "sender_full_name": "matklad",
        "timestamp": 1614611029
    },
    {
        "content": "<p>more yaks to shave!</p>",
        "id": 228245424,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611080
    },
    {
        "content": "<p>So, do we want to keep the 3 items for the next 6 week cycle or retarget?</p>",
        "id": 228245704,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611170
    },
    {
        "content": "<p>I think we need to keep them</p>",
        "id": 228245750,
        "sender_full_name": "matklad",
        "timestamp": 1614611187
    },
    {
        "content": "<p>what we probably need to change is to try to more proactively follow through them</p>",
        "id": 228245800,
        "sender_full_name": "matklad",
        "timestamp": 1614611212
    },
    {
        "content": "<p>not sure what's the best porcess here... My tentative suggestion would be <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> finishes up the rowan work, and then finished up all the other items</p>",
        "id": 228245927,
        "sender_full_name": "matklad",
        "timestamp": 1614611260
    },
    {
        "content": "<p>Althoug, I am wondering if we should drop memory usage</p>",
        "id": 228246066,
        "sender_full_name": "matklad",
        "timestamp": 1614611298
    },
    {
        "content": "<p>We make some improvemnt there, with <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> interning and <code>countme</code></p>",
        "id": 228246123,
        "sender_full_name": "matklad",
        "timestamp": 1614611320
    },
    {
        "content": "<p><em>And</em> we've been secretly discussing picking up salsa parallelization work</p>",
        "id": 228246186,
        "sender_full_name": "matklad",
        "timestamp": 1614611346
    },
    {
        "content": "<p><code>||</code> and memory usage always go hand in hand</p>",
        "id": 228246245,
        "sender_full_name": "matklad",
        "timestamp": 1614611360
    },
    {
        "content": "<p>There's still an actionable thing with the virtual macro-expansion files, right?</p>",
        "id": 228246250,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611363
    },
    {
        "content": "<p>The investigation? right</p>",
        "id": 228246369,
        "sender_full_name": "matklad",
        "timestamp": 1614611402
    },
    {
        "content": "<p>global TypeRef/Path interning is actionable</p>",
        "id": 228246422,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611409
    },
    {
        "content": "<p>Or you mean spilling to disk?</p>",
        "id": 228246443,
        "sender_full_name": "matklad",
        "timestamp": 1614611414
    },
    {
        "content": "<p>No, there was something about item collection from recursive MBE expansions</p>",
        "id": 228246521,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611442
    },
    {
        "content": "<p>ah, I prototyped that, didn't seem to improve memory usage though</p>",
        "id": 228246571,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611468
    },
    {
        "content": "<p>Ah, too bad. And we still can't run DHAT, I guess?</p>",
        "id": 228246688,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611521
    },
    {
        "content": "<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>",
        "id": 228246771,
        "sender_full_name": "matklad",
        "timestamp": 1614611535
    },
    {
        "content": "<p>Or maybe in making the salsa storage more cache-friendly?</p>",
        "id": 228246884,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611575
    },
    {
        "content": "<p>Perhaps another thing to work towards at this point is not parsing item bodies?</p>",
        "id": 228246942,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611595
    },
    {
        "content": "<p>I think <code>rustc</code> ended up punting on the parallelization, maybe that one is too hard to crack</p>",
        "id": 228247013,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611623
    },
    {
        "content": "<p>I have some ItemTree changes in mind that are useful anyways, and would help with that</p>",
        "id": 228247014,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611624
    },
    {
        "content": "<p>btw, I've recently learned that we walk the whole syntax tree after parsing for validation</p>",
        "id": 228247101,
        "sender_full_name": "matklad",
        "timestamp": 1614611646
    },
    {
        "content": "<p>(but I didn't measure the impact of skiping validation)</p>",
        "id": 228247169,
        "sender_full_name": "matklad",
        "timestamp": 1614611671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> maybe? It definitelly incersects with mutable trees.</p>",
        "id": 228247245,
        "sender_full_name": "matklad",
        "timestamp": 1614611704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228246688\">said</a>:</p>\n<blockquote>\n<p>Ah, too bad. And we still can't run DHAT, I guess?</p>\n</blockquote>\n<p>We can run valgrind DHAT, if you have heaps of RAM and a lot of time</p>",
        "id": 228247390,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611754
    },
    {
        "content": "<p>It's what pointed me towards memory usage of TypeRef/Path</p>",
        "id": 228247479,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611771
    },
    {
        "content": "<p>And there's a chance that we actually need something fancier still -- like building ItemTree out of green nodes or even straight forme the event stream, to not materialse syntax tree at all</p>",
        "id": 228247480,
        "sender_full_name": "matklad",
        "timestamp": 1614611771
    },
    {
        "content": "<p>yeah, that'd be neat</p>",
        "id": 228247539,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228246771\">said</a>:</p>\n<blockquote>\n<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>\n</blockquote>\n<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 228247608,
        "sender_full_name": "matklad",
        "timestamp": 1614611825
    },
    {
        "content": "<p>?</p>",
        "id": 228247616,
        "sender_full_name": "matklad",
        "timestamp": 1614611827
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> is there anything more to report regarding inlay hints impl?</p>",
        "id": 228247776,
        "sender_full_name": "matklad",
        "timestamp": 1614611886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228246771\">said</a>:</p>\n<blockquote>\n<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>\n</blockquote>\n<p>Personally I'm more bothered by high memory usage than startup time, and would also like to finish off procedural attribute macro support</p>",
        "id": 228247894,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614611939
    },
    {
        "content": "<p>Yeah, that makes sense...</p>",
        "id": 228247961,
        "sender_full_name": "matklad",
        "timestamp": 1614611967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228246771\">said</a>:</p>\n<blockquote>\n<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>\n</blockquote>\n<p>It seems to me there might be larger wins in other areas (not parsing item bodies, salsa storage), and parallelization might make them less visible</p>",
        "id": 228248034,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614611998
    },
    {
        "content": "<p>I guess, now that I have 64 gigs and 12 cores, my personal priorities are skewed...</p>",
        "id": 228248066,
        "sender_full_name": "matklad",
        "timestamp": 1614612004
    },
    {
        "content": "<p>but figuring out the story for parallelization certainly seems good too, since we will need that eventually</p>",
        "id": 228248098,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612008
    },
    {
        "content": "<p>I actually think persisting stuff to disk should be our last resort</p>",
        "id": 228248246,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612050
    },
    {
        "content": "<p>yup, presitance is why I am eyeing ||</p>",
        "id": 228248333,
        "sender_full_name": "matklad",
        "timestamp": 1614612080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228248246\">said</a>:</p>\n<blockquote>\n<p>I actually think persisting stuff to disk should be our last resort</p>\n</blockquote>\n<p>I was thinking of using arenas for <code>salsa</code>. Which may be a path forward to persistence, but is still worth it even outside of that</p>",
        "id": 228248363,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614612093
    },
    {
        "content": "<p>I think that's better solution for slow startup then on-disk caches</p>",
        "id": 228248399,
        "sender_full_name": "matklad",
        "timestamp": 1614612112
    },
    {
        "content": "<blockquote>\n<p>Which may be a path forward to persistence, </p>\n</blockquote>\n<p>Good point! Indixes are easire to mmap than pointers</p>",
        "id": 228248549,
        "sender_full_name": "matklad",
        "timestamp": 1614612158
    },
    {
        "content": "<p>So it seems like <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> is tentatively volounteering to finish up the mem usage issue?</p>",
        "id": 228248693,
        "sender_full_name": "matklad",
        "timestamp": 1614612208
    },
    {
        "content": "<blockquote>\n<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>\n</blockquote>\n<p>No idea, but looks like a reasonable step, considering the diagram brought by Jonas <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<blockquote>\n<p>is there anything more to report regarding inlay hints impl?</p>\n</blockquote>\n<p>Nothing new, I rebase &amp; force-push the branch and recheck it every week, but so far feels like nothing was done at all.<br>\nAs I've mentioned already some time ago, I've sent the letter with the initial feedback and have gotten an abrupt reply, so nothing more actionable there for now, I guess.<br>\nI'll wait a couple more weeks and post a comment into the \"upstream hints\" issue,  just to throw it away from my head and go on doing something else meanwhile.</p>",
        "id": 228248834,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1614612250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228248693\">said</a>:</p>\n<blockquote>\n<p>So it seems like <span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> is tentatively volounteering to finish up the mem usage issue?</p>\n</blockquote>\n<p>I can look into that, yeah</p>",
        "id": 228249071,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612350
    },
    {
        "content": "<p>but it seems there are still bugs around inner item handling that have to be fixed</p>",
        "id": 228249177,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612374
    },
    {
        "content": "<p>uhu</p>",
        "id": 228249244,
        "sender_full_name": "matklad",
        "timestamp": 1614612396
    },
    {
        "content": "<p>I hope that won't take up all 6 weeks</p>",
        "id": 228249269,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612404
    },
    {
        "content": "<p>I've also looked at the name res code again, when fixing that diagnostic issue, and it (at least the diagnistics part) was very hard to read</p>",
        "id": 228249372,
        "sender_full_name": "matklad",
        "timestamp": 1614612442
    },
    {
        "content": "<p>How about proc-macro options ?? :)</p>",
        "id": 228249409,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612455
    },
    {
        "content": "<p>So maybe some general cleanups are worth it as well in that area</p>",
        "id": 228249425,
        "sender_full_name": "matklad",
        "timestamp": 1614612459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216201\">Edwin Cheng</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228249409\">said</a>:</p>\n<blockquote>\n<p>How about proc-macro options ?? :)</p>\n</blockquote>\n<p>Oof, we need to figure what to do about that <code>rustc</code> version PR</p>",
        "id": 228249478,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614612482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> you mean <code>settings.json</code> options? loadDirs, etc?</p>",
        "id": 228249538,
        "sender_full_name": "matklad",
        "timestamp": 1614612489
    },
    {
        "content": "<p>yes</p>",
        "id": 228249570,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612499
    },
    {
        "content": "<p>I think I am not the best person to clean up settings and docs :)</p>",
        "id": 228249639,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612531
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> I'll finish that up then!</p>",
        "id": 228249671,
        "sender_full_name": "matklad",
        "timestamp": 1614612545
    },
    {
        "content": "<p>After all, <span class=\"user-mention silent\" data-user-id=\"216201\">Edwin Cheng</span> did the hardest part (lazy loading), so I might as well bring the stuff over the finish line :D</p>",
        "id": 228249807,
        "sender_full_name": "matklad",
        "timestamp": 1614612599
    },
    {
        "content": "<blockquote>\n<p>Oof, we need to figure what to do about that rustc version PR</p>\n</blockquote>\n<p>I could take it and finish it if the PR author want</p>",
        "id": 228249867,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> I guess you can ask on the issue? But also just doing doesn't seem bad to me, if you take care to  preserve their commits and ensure proper attribution in general</p>",
        "id": 228250050,
        "sender_full_name": "matklad",
        "timestamp": 1614612671
    },
    {
        "content": "<p>So do we</p>\n<ol>\n<li>want to check the <code>rustc</code> version in the proc macro metadata?</li>\n<li>support more than one proc macro ABI (maybe up to three for nightly/beta/stable)?</li>\n<li>try to figure out the <code>rustc</code> version range of the proc macro ABI? I did that for <code>nightly</code> in the PR, but blanked out when it came to the <code>beta</code> version; still, it should be doable, I guess.</li>\n</ol>",
        "id": 228250087,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614612688
    },
    {
        "content": "<p>It makes sense to start just with check I think</p>",
        "id": 228250293,
        "sender_full_name": "matklad",
        "timestamp": 1614612755
    },
    {
        "content": "<p>Yes I would ask the author later on.</p>",
        "id": 228250321,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612767
    },
    {
        "content": "<p>Why not run <code>rustc -V</code> instead?</p>",
        "id": 228250428,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614612803
    },
    {
        "content": "<blockquote>\n<p>Why not run rustc -V instead?</p>\n</blockquote>\n<p>Oh, it should be the same ..... you r right.</p>",
        "id": 228250741,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1614612907
    },
    {
        "content": "<p>that's not necessarily the compiler Cargo uses to build the proc macro</p>",
        "id": 228250904,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614612966
    },
    {
        "content": "<p>though I think non-cargo build systems would be the bigger issue here</p>",
        "id": 228251079,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614613037
    },
    {
        "content": "<p>All right. So we try to finish the stuff in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7325\">rust-analyzer#7325</a></p>",
        "id": 228251881,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614613338
    },
    {
        "content": "<p>Jup! With the difference being that @<strong>_matklad</strong>  is now responsible to see to the stuff followed through</p>",
        "id": 228252029,
        "sender_full_name": "matklad",
        "timestamp": 1614613402
    },
    {
        "content": "<p>And we put <code>||</code> as an optional item, to not keep that bottom right quadrant empty?</p>",
        "id": 228252086,
        "sender_full_name": "matklad",
        "timestamp": 1614613425
    },
    {
        "content": "<p>Re rowan, I suppose we want the better assists API, so I'd say we take the memory and parsing time hit?</p>",
        "id": 228252261,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614613483
    },
    {
        "content": "<p>Yeah, that's my feels as well, + vague ideas for more radical opts for read only case</p>",
        "id": 228252450,
        "sender_full_name": "matklad",
        "timestamp": 1614613554
    },
    {
        "content": "<p>rad = events, or storing tree in an array</p>",
        "id": 228252523,
        "sender_full_name": "matklad",
        "timestamp": 1614613567
    },
    {
        "content": "<p>What I wanted to bring up was switching to chalks type representation, since I worked on that a bit the past day(s). Bring up as in whether this is something we would potentially want to target</p>",
        "id": 228253019,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1614613757
    },
    {
        "content": "<p>Bringing this up especially since I unfortunately brought in some regression as lnicola noted <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7813#issuecomment-787936638\">https://github.com/rust-analyzer/rust-analyzer/pull/7813#issuecomment-787936638</a></p>",
        "id": 228253090,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1614613791
    },
    {
        "content": "<p>Is the upstream type IR library done already?</p>",
        "id": 228253095,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614613793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> I'd classify that  as \"refactor\", and I'd always put refactoring over almost everything else</p>",
        "id": 228253924,
        "sender_full_name": "matklad",
        "timestamp": 1614614059
    },
    {
        "content": "<p>That is, you don't need this to be on the roadmap to deem it high prirority</p>",
        "id": 228253999,
        "sender_full_name": "matklad",
        "timestamp": 1614614096
    },
    {
        "content": "<blockquote>\n<p>Jonas Schievink [he/him]: Is the upstream type IR library done already?</p>\n</blockquote>\n<p>that's a good question. my assumption was that chalk-ir would mostly stay the same, but that may be completely wrong. <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span>  do you know?</p>",
        "id": 228254108,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614614132
    },
    {
        "content": "<p>but yeah, let's put this onto this cycle as well, to have that feeling of responsibility and anxiety! This is bit stuff, in the grand scheme of things</p>",
        "id": 228254157,
        "sender_full_name": "matklad",
        "timestamp": 1614614148
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"231447\">Kirill Bulatov</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228248834\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Do folks think that sinking focused hours into parallelizing salsa/rust-analyzer is the appropriate goal for the next sprint?</p>\n</blockquote>\n<p>No idea, but looks like a reasonable step, considering the diagram brought by Jonas <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<blockquote>\n<p>is there anything more to report regarding inlay hints impl?</p>\n</blockquote>\n<p>Nothing new, I rebase &amp; force-push the branch and recheck it every week, but so far feels like nothing was done at all.<br>\nAs I've mentioned already some time ago, I've sent the letter with the initial feedback and have gotten an abrupt reply, so nothing more actionable there for now, I guess.<br>\nI'll wait a couple more weeks and post a comment into the \"upstream hints\" issue,  just to throw it away from my head and go on doing something else meanwhile.</p>\n</blockquote>\n<p>They are not the most responsive. I think the big thing we'll need to watch out for is the timeline for stabilization of the API. We just want to make sure that by that point vscode supports what we need.</p>",
        "id": 228255121,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1614614468
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228254108\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Jonas Schievink [he/him]: Is the upstream type IR library done already?</p>\n</blockquote>\n<p>that's a good question. my assumption was that chalk-ir would mostly stay the same, but that may be completely wrong. <span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span>  do you know?</p>\n</blockquote>\n<p>There might be some small missing details, and the ongoing chalk integration into rustc might lead to some small changes in chalk-ir, but overall I would expect chalk-ir to stay mostly the same</p>",
        "id": 228255597,
        "sender_full_name": "detrumi",
        "timestamp": 1614614616
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting/near/228253090\">said</a>:</p>\n<blockquote>\n<p>Bringing this up especially since I unfortunately brought in some regression as lnicola noted <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7813#issuecomment-787936638\">https://github.com/rust-analyzer/rust-analyzer/pull/7813#issuecomment-787936638</a></p>\n</blockquote>\n<p>Chalk hasn't really been optimized so far, so some temporary performance regressions are expected. But integration also makes it easier to identify where performance can be improved.</p>",
        "id": 228256923,
        "sender_full_name": "detrumi",
        "timestamp": 1614615015
    },
    {
        "content": "<p>I imagine swapping to chalks IR fully will help out here as well, or as you said at least aid in identifying performance things.</p>",
        "id": 228258179,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1614615406
    },
    {
        "content": "<p>fully switching to Chalk's types may already help performance since we get rid of all the transformation code (maybe not though)</p>",
        "id": 228260529,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1614616252
    },
    {
        "content": "<p>Seems like there's a few upsides to switching to chalk-ir early, but at the same time there's the risk of additional churn in case chalk-ir has to change because of something that comes up in rustc integration. Integrating chalk-ir into both rustc and RA at the same time might guide the design faster but might also complicate things</p>",
        "id": 228262882,
        "sender_full_name": "detrumi",
        "timestamp": 1614617038
    },
    {
        "content": "<p>The biggest thing that comes to mind on things that <em>could</em> change with chalk-ir is adding <code>Param</code> to <code>TyKind</code>. I think we <em>want</em> to instead remove that in rustc, but it's a big ask and so we'll see.</p>",
        "id": 228269843,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614619322
    },
    {
        "content": "<p>Most everything else should be \"minor\"</p>",
        "id": 228269904,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614619330
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> vscode 1.54 (just released) contains a blurb about the proposed inline values</p>",
        "id": 228828105,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1614883620
    },
    {
        "content": "<p>though... just in the context of the debugger</p>",
        "id": 228828342,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1614883694
    },
    {
        "content": "<p>Is it the thing you were referring to? <br>\n<a href=\"https://github.com/microsoft/vscode-docs/blob/vnext/release-notes/v1_54.md#inline-value-provider-api\">https://github.com/microsoft/vscode-docs/blob/vnext/release-notes/v1_54.md#inline-value-provider-api</a></p>\n<p>Looks like they have two different proposals/APIs: </p>\n<ul>\n<li>\n<p><a href=\"https://github.com/microsoft/vscode/issues/105690\">inline value</a> for debugger hints</p>\n</li>\n<li>\n<p><a href=\"https://github.com/microsoft/vscode/issues/16221\">inline hints</a> for something I look occasionally at</p>\n</li>\n</ul>\n<p>Looks like the debugger party is <a href=\"https://github.com/microsoft/vscode/issues/105690#issuecomment-771693695\">aware</a> of the other api, but still keeps it separated, interesting.</p>\n<p>But I've just rechecked and repushed the inline hints proposal and no changes are there yet:<br>\n<a href=\"/user_uploads/4715/CSfFIifvPhypcts2QoX8XMI-/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/CSfFIifvPhypcts2QoX8XMI-/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/CSfFIifvPhypcts2QoX8XMI-/image.png\"></a></div><p>I'll keep waiting, but thanks for your vigilance nonetheless.</p>",
        "id": 228841317,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1614888446
    },
    {
        "content": "<p>Ahhh that makes sense.</p>",
        "id": 228867207,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1614899416
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> !</p>",
        "id": 234174427,
        "sender_full_name": "matklad",
        "timestamp": 1618239674
    },
    {
        "content": "<p>It's time for our third steering meeting!</p>",
        "id": 234174539,
        "sender_full_name": "matklad",
        "timestamp": 1618239694
    },
    {
        "content": "<p>Our tracking issuer looks much better than the last time: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7838\">https://github.com/rust-analyzer/rust-analyzer/issues/7838</a></p>",
        "id": 234174787,
        "sender_full_name": "matklad",
        "timestamp": 1618239734
    },
    {
        "content": "<ul>\n<li>we've enabled proc macros by default (and today's hack, stolen from IntelliJ, should make intial <code>cargo check</code> much faster)</li>\n<li>we are now using new rowan with mutable syntax trees!</li>\n<li>we removed a whole lot of code by switching to chalk repersentation of types</li>\n<li>and we made the analyzer <em>smaller</em></li>\n</ul>",
        "id": 234175214,
        "sender_full_name": "matklad",
        "timestamp": 1618239829
    },
    {
        "content": "<p><span aria-label=\"medal\" class=\"emoji emoji-1f3c5\" role=\"img\" title=\"medal\">:medal:</span> indeed, we all deserved it for this sprint!</p>",
        "id": 234175341,
        "sender_full_name": "matklad",
        "timestamp": 1618239854
    },
    {
        "content": "<p>Let's write what you think we can/should focus next in a \"brainstorm\" fashion? We should pick a couple objectives by the end of the meeting, but let's start with enumerating everything</p>",
        "id": 234175592,
        "sender_full_name": "matklad",
        "timestamp": 1618239919
    },
    {
        "content": "<p>I'm checking off memory usage and inner items, we did most of that</p>",
        "id": 234175669,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618239940
    },
    {
        "content": "<p>I have 0 time to devote to anything but I LOVE the progress made lately.</p>",
        "id": 234175845,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1618239979
    },
    {
        "content": "<p>personally I have the goal of \"finishing\" <code>hir_def</code>, meaning reaching feature parity with rustc's name resolution and macro expansion implementation</p>",
        "id": 234175938,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240000
    },
    {
        "content": "<p>Here's my list:</p>\n<p>Features:</p>\n<ul>\n<li>fast completion (completion in VS Code is instanteneous, rust-analyzer lags)</li>\n<li>completion scoring and relevance</li>\n<li>attribute proc macros</li>\n<li>diagnostics for most of the things, let's make <code>cargo check</code> unnecessary</li>\n</ul>\n<p>Debt:</p>\n<ul>\n<li>removing <code>SyntaxRewriter</code>. It should be easier to use mutable syntax trees, right?</li>\n<li>Simplifying diagnostics. Let's get rid of <code>dyn</code> and just make one giant enum?</li>\n<li>Refactoring completion (context has 100-ish fields)</li>\n</ul>\n<p>Merging with Rustc:</p>\n<ul>\n<li>publishing rust-analyzer parser as a stand-alone library with the right interface.</li>\n</ul>",
        "id": 234176425,
        "sender_full_name": "matklad",
        "timestamp": 1618240163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> , <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> ?</p>",
        "id": 234176468,
        "sender_full_name": "matklad",
        "timestamp": 1618240182
    },
    {
        "content": "<p>Maybe consider trying to push RA to become more official? A lot of people still seem to fall for the RLS \"trap\"</p>",
        "id": 234176629,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1618240225
    },
    {
        "content": "<p>Uhu, I guess I should start talking to foundation folks about that...</p>",
        "id": 234176797,
        "sender_full_name": "matklad",
        "timestamp": 1618240296
    },
    {
        "content": "<p>I am working on ra_fmt</p>",
        "id": 234176897,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240325
    },
    {
        "content": "<p>Yeah, that's long overdue...</p>",
        "id": 234176979,
        "sender_full_name": "matklad",
        "timestamp": 1618240355
    },
    {
        "content": "<p>I finally understand the reddit comment from <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> a while back about rust-analyzer only being 30% of what it could be, just by thinking about other possible features and reading past issues.</p>",
        "id": 234177116,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1618240421
    },
    {
        "content": "<p>Oh, I guess there's one more wish list item for me: reducing the number of broken windows.</p>",
        "id": 234177255,
        "sender_full_name": "matklad",
        "timestamp": 1618240467
    },
    {
        "content": "<p>For attr macro, I would recommend we support proc-macro-hack as the first step, alike what we did for the macro 2.0 support (choose a smaller set to test the functionality first)</p>",
        "id": 234177292,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240483
    },
    {
        "content": "<p>my current prototype for proc macro attrs will just support everything at once</p>",
        "id": 234177427,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240529
    },
    {
        "content": "<p>It seems like before we had a breakneck dev speed to reach feature parity with rustc.  Now that we did the first 90% of that, it seems to be wise to slow down to speed up: <a href=\"http://joeduffyblog.com/2013/04/12/software-leadership-4-slow-down-to-speed-up/\">http://joeduffyblog.com/2013/04/12/software-leadership-4-slow-down-to-speed-up/</a></p>",
        "id": 234177478,
        "sender_full_name": "matklad",
        "timestamp": 1618240555
    },
    {
        "content": "<p>And for macro, I will propose we should do some research on how to proper handle span and L_DOLLAR related problems</p>",
        "id": 234177544,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216201\">Edwin Cheng</span> yeah, that intersects with \"extract rust parser\" thing</p>",
        "id": 234177640,
        "sender_full_name": "matklad",
        "timestamp": 1618240608
    },
    {
        "content": "<p>I'm still dreaming to carve the time for completion benches, but if you <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  plan to work on that, I'd gladly step aside and hunt some small things to fix as I was usually doing.</p>\n<p>(my dreams might come true very soon though, I've managed to offload all kids to the grannies at the very long last)</p>",
        "id": 234177700,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618240634
    },
    {
        "content": "<p>I could imagine if we enable attr macro, it will break alot of completion features</p>",
        "id": 234177777,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240651
    },
    {
        "content": "<p>yeah, attr macros still have a lot of questions around fallbacks and UX</p>",
        "id": 234178033,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240700
    },
    {
        "content": "<p>I imagine we'll want to switch the symbol index to use <code>DefMap</code> to get better completions too?</p>",
        "id": 234178286,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240768
    },
    {
        "content": "<p>Thats why I recommand we hardcode the name of selected attr macro only to limit the bug report</p>",
        "id": 234178292,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240771
    },
    {
        "content": "<p>yeah, I guess we could start with that</p>",
        "id": 234178359,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240802
    },
    {
        "content": "<p>We discussed with vlad20012 of IntelliJ some way to mark \"trivial\" attr macros in Cargo.toml</p>",
        "id": 234178605,
        "sender_full_name": "matklad",
        "timestamp": 1618240884
    },
    {
        "content": "<p>Such that macros a-la tokio::main aren't actually expanded for the purposes of code completion.</p>",
        "id": 234178697,
        "sender_full_name": "matklad",
        "timestamp": 1618240923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> Do you have any idea about span and source file handling in proc macro? We currently don’t support it</p>",
        "id": 234178788,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618240948
    },
    {
        "content": "<p>hmm, since we throw out span info, we couldn't report accurate proc macro errors, right?</p>",
        "id": 234178803,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240954
    },
    {
        "content": "<p>hah</p>",
        "id": 234178819,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618240961
    },
    {
        "content": "<p>that's a good question wrt. incrementality, I guess we'd somehow want a query that constructs span mappings, which is only invoked if the proc macro actually makes use of the span APIs?</p>",
        "id": 234178935,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241006
    },
    {
        "content": "<p>but even without that, it would be nice to properly map spans in the macro output back to the input</p>",
        "id": 234179155,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241086
    },
    {
        "content": "<p>Can we make proc-macros look only at the relative spans(/</p>",
        "id": 234179181,
        "sender_full_name": "matklad",
        "timestamp": 1618241093
    },
    {
        "content": "<p>for example I think syn will emit <code>compile_error!(\"parse error\")</code> with a span pointing to the location of the syntax error</p>",
        "id": 234179228,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241110
    },
    {
        "content": "<p>such that the query isn't invalidated when you type outside of the proc macro?</p>",
        "id": 234179238,
        "sender_full_name": "matklad",
        "timestamp": 1618241113
    },
    {
        "content": "<p>yeah, the query would only be used if some proc macro API is used that <em>requires</em> absolute positions, I think</p>",
        "id": 234179327,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241148
    },
    {
        "content": "<p>sorry, got distracted</p>",
        "id": 234179539,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618241239
    },
    {
        "content": "<p>for me, probably starting to emit more diagnostics is the next step</p>",
        "id": 234179610,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618241275
    },
    {
        "content": "<p>I think we also need more tests for proc macros, I broke fn-like proc macros last week and no test failed</p>",
        "id": 234179731,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241308
    },
    {
        "content": "<p>I'm not sure about <em>more</em> diagnostics, but improvements to them would be very nice</p>",
        "id": 234179888,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> that's an interesting topic... I think we get a lot of leverage out of our \"pure\" test suite which doesn't do IO. I wonder what's the right testing strategy for proc macros, which gives us max coverage with minimilal deps on the stuff we don't controll.</p>",
        "id": 234179908,
        "sender_full_name": "matklad",
        "timestamp": 1618241391
    },
    {
        "content": "<p>I did add <code>proc_macro_test</code> as a dumping ground for proc macros that are used by the test suite</p>",
        "id": 234180051,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241433
    },
    {
        "content": "<p>that crate should remain as small as possible, with 0 deps, so that cargo can build it quickly</p>",
        "id": 234180087,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618241451
    },
    {
        "content": "<p>Ok, we are past half of the meeting, so let's try to prioritize now!</p>",
        "id": 234180376,
        "sender_full_name": "matklad",
        "timestamp": 1618241570
    },
    {
        "content": "<p>I remember there was a discussion about utilizing VSCode IT tests and we turned them down.<br>\nWould that be a tolerable middleground here, with all macros and other features enabled on some project?</p>",
        "id": 234180387,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618241574
    },
    {
        "content": "<p>(uh, nvm then)</p>",
        "id": 234180411,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618241584
    },
    {
        "content": "<p>/poll</p>",
        "id": 234180413,
        "sender_full_name": "matklad",
        "timestamp": 1618241585
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22\">https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22</a> not sure we have enough of these, though</p>",
        "id": 234181180,
        "sender_full_name": "Laurențiu",
        "timestamp": 1618241841
    },
    {
        "content": "<p>I imagine there are some in there that aren't labeled yet</p>",
        "id": 234181324,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1618241888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> I think that's more about attitudal change rather that fixing specific bugs.</p>",
        "id": 234181331,
        "sender_full_name": "matklad",
        "timestamp": 1618241890
    },
    {
        "content": "<p>Like, I kicked lazy fixes down the road for half a year already. I need a bit of targeted acceleration to actually see through that it is done.</p>",
        "id": 234181486,
        "sender_full_name": "matklad",
        "timestamp": 1618241943
    },
    {
        "content": "<p>And I fear that that salsa panic on cycle is a similar thing -- I'll be all to happy to pretend it doesn't exist :P</p>",
        "id": 234181601,
        "sender_full_name": "matklad",
        "timestamp": 1618241994
    },
    {
        "content": "<p>Is any false positive diagnostics \"broken windows\"?</p>",
        "id": 234182094,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618242139
    },
    {
        "content": "<p>Good question: at this stage, I'd say no.</p>",
        "id": 234182189,
        "sender_full_name": "matklad",
        "timestamp": 1618242184
    },
    {
        "content": "<p>Are non-technical debt issues \"broken windows\" when they're bad enough that someone running into them might think RA doesn't work at all?</p>",
        "id": 234182284,
        "sender_full_name": "Laurențiu",
        "timestamp": 1618242233
    },
    {
        "content": "<p>the problem is that almost all nontrivial diagnostics will have false positives until hir_def/hir_ty reach parity with rustc</p>",
        "id": 234182288,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242235
    },
    {
        "content": "<p>Though, once we do attr-like proc macros, that'd change to yes</p>",
        "id": 234182304,
        "sender_full_name": "matklad",
        "timestamp": 1618242242
    },
    {
        "content": "<p>today's release seem to have broken r-a for a few people</p>",
        "id": 234182437,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> I guess, I see broken window as a combination of the two:</p>\n<ul>\n<li>ra <em>devs</em> run into the issue while working on unrelated stuff (basically, any perf regression causes me to triage it, several times when we don't fix it immediatlly and I forget (yes, lazy diags did really get to me))</li>\n<li>something breaks UX significanty and is actionably</li>\n<li>something is percieved as an obvious bug (panic in the logs)</li>\n</ul>",
        "id": 234182826,
        "sender_full_name": "matklad",
        "timestamp": 1618242408
    },
    {
        "content": "<blockquote>\n<p>today's release seem to have broken r-a for a few people</p>\n</blockquote>\n<p>Mea culpa. That was a fix for a broken window by the way.</p>",
        "id": 234182969,
        "sender_full_name": "matklad",
        "timestamp": 1618242467
    },
    {
        "content": "<p>Ok, I think, in the last 10 minutes, we should hone our focus a bit!</p>",
        "id": 234183142,
        "sender_full_name": "matklad",
        "timestamp": 1618242514
    },
    {
        "content": "<p>focus on what?</p>",
        "id": 234183279,
        "sender_full_name": "oliver",
        "timestamp": 1618242566
    },
    {
        "content": "<ul>\n<li>fast completion</li>\n<li>making rust-analyzer the official LS </li>\n<li>no broken windows</li>\n<li>issues backlog</li>\n<li>attribute proc macros</li>\n<li>duplicate crates in crate graph for different feature sets</li>\n</ul>",
        "id": 234183320,
        "sender_full_name": "matklad",
        "timestamp": 1618242586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> on this specific subset of issues for the next sprint!</p>",
        "id": 234183344,
        "sender_full_name": "matklad",
        "timestamp": 1618242600
    },
    {
        "content": "<p>rust-analyzer isn't the official LS? false</p>",
        "id": 234183455,
        "sender_full_name": "oliver",
        "timestamp": 1618242625
    },
    {
        "content": "<p>what's \"per feature crates\" in the poll?</p>",
        "id": 234183470,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242630
    },
    {
        "content": "<p>RLS is the official one</p>",
        "id": 234183535,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242651
    },
    {
        "content": "<p>Enable some set of features per crate for solving cycle deps bugs</p>",
        "id": 234183573,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618242667
    },
    {
        "content": "<p>ah</p>",
        "id": 234183592,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242674
    },
    {
        "content": "<p>Yeah, \"error: cycle detected\" in the logs is def a broken window</p>",
        "id": 234183626,
        "sender_full_name": "matklad",
        "timestamp": 1618242694
    },
    {
        "content": "<p>who should use RLS over RA?</p>",
        "id": 234183730,
        "sender_full_name": "oliver",
        "timestamp": 1618242726
    },
    {
        "content": "<p>IMO,  we should impl it as soon as possible since it may affect the performance a lot.</p>",
        "id": 234183784,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618242754
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> riight, crate forking for features might be the easiest way to fix our recent memory usage \"regression\" <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 234183786,
        "sender_full_name": "matklad",
        "timestamp": 1618242755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> strongly agree, added it to the suggested list!</p>",
        "id": 234183936,
        "sender_full_name": "matklad",
        "timestamp": 1618242824
    },
    {
        "content": "<p>crate forking would mean... adding non-<code>cfg(test)</code> duplicates of all crates in the workspace (but not from <a href=\"http://crates.io/sysroot\">crates.io/sysroot</a>), right?</p>",
        "id": 234184037,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> right</p>",
        "id": 234184061,
        "sender_full_name": "matklad",
        "timestamp": 1618242858
    },
    {
        "content": "<p>definitely seems like a good thing to fix</p>",
        "id": 234184087,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618242869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> I'd say, at this point, probably anybody <em>should</em> be using rust-analyzer. RLS, however, is still the official one, with the links from the website and such.</p>",
        "id": 234184120,
        "sender_full_name": "matklad",
        "timestamp": 1618242880
    },
    {
        "content": "<p>instead of saying 'making rust-analyzer the official LS ' maybe it should be 'notarize rust-analyzer the official LS' for clarity since RA already is built</p>",
        "id": 234184307,
        "sender_full_name": "oliver",
        "timestamp": 1618242943
    },
    {
        "content": "<p>Yeah, I'll try to phrase that more clearly.</p>",
        "id": 234184568,
        "sender_full_name": "matklad",
        "timestamp": 1618243047
    },
    {
        "content": "<p>or is that too focused?</p>",
        "id": 234184585,
        "sender_full_name": "oliver",
        "timestamp": 1618243055
    },
    {
        "content": "<p>like I'm not sure it even matters it's that focused</p>",
        "id": 234184623,
        "sender_full_name": "oliver",
        "timestamp": 1618243073
    },
    {
        "content": "<p>but it seems nice</p>",
        "id": 234184631,
        "sender_full_name": "oliver",
        "timestamp": 1618243081
    },
    {
        "content": "<p>Ok <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>  it seems that we went through the agenda!, any last minute things?</p>",
        "id": 234184754,
        "sender_full_name": "matklad",
        "timestamp": 1618243113
    },
    {
        "content": "<p>I want to re-iterate that this sprint was a blast! You all are awesome <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> !</p>",
        "id": 234184865,
        "sender_full_name": "matklad",
        "timestamp": 1618243157
    },
    {
        "content": "<p>Um.. I would like to know who is the official members on rust-analzyers workgroup ?</p>",
        "id": 234184891,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618243172
    },
    {
        "content": "<p>and where can I find these information ?</p>",
        "id": 234184931,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1618243193
    },
    {
        "content": "<p>Heh, good question! I don't think we have supper official membership</p>",
        "id": 234184943,
        "sender_full_name": "matklad",
        "timestamp": 1618243197
    },
    {
        "content": "<p>Maybe the contents of the <code>WG-rls2.0</code> could be considered as the list?</p>",
        "id": 234185004,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618243213
    },
    {
        "content": "<p>only <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <a href=\"https://github.com/rust-lang/team/blob/master/teams/wg-rls-2.toml\">https://github.com/rust-lang/team/blob/master/teams/wg-rls-2.toml</a></p>",
        "id": 234185012,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243216
    },
    {
        "content": "<p>Ther's a list of folks who get pinged on zulip, and it should be available in the groop settings</p>",
        "id": 234185030,
        "sender_full_name": "matklad",
        "timestamp": 1618243220
    },
    {
        "content": "<p>I don't have any links for this wg</p>",
        "id": 234185066,
        "sender_full_name": "oliver",
        "timestamp": 1618243233
    },
    {
        "content": "<p>yeah, there's wg toml, but it's not true, and not that useful</p>",
        "id": 234185107,
        "sender_full_name": "matklad",
        "timestamp": 1618243245
    },
    {
        "content": "<p><a href=\"https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/\">https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/</a></p>",
        "id": 234185168,
        "sender_full_name": "oliver",
        "timestamp": 1618243264
    },
    {
        "content": "<p>soon someday</p>",
        "id": 234185194,
        "sender_full_name": "oliver",
        "timestamp": 1618243270
    },
    {
        "content": "<p>yeah, but it's the closest thing to \"official\" I could find :D</p>",
        "id": 234185207,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243277
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#permissions\">https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#permissions</a></p>",
        "id": 234185241,
        "sender_full_name": "matklad",
        "timestamp": 1618243288
    },
    {
        "content": "<p>I got distracted again <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 234185269,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618243300
    },
    {
        "content": "<p>I think that's the place which documents team membership.</p>",
        "id": 234185281,
        "sender_full_name": "matklad",
        "timestamp": 1618243306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> no worries, here's your presonal todo list: <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/234183320\">https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/234183320</a> :D</p>",
        "id": 234185377,
        "sender_full_name": "matklad",
        "timestamp": 1618243327
    },
    {
        "content": "<p>ok, I guess I should get to work then</p>",
        "id": 234185513,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618243369
    },
    {
        "content": "<p>We just need to clone Florian a few times and we're set</p>",
        "id": 234185620,
        "sender_full_name": "detrumi",
        "timestamp": 1618243404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> so, I guess <a href=\"https://github.com/orgs/rust-analyzer/teams/review\">https://github.com/orgs/rust-analyzer/teams/review</a> is the closest approximation to \"who is rls2.0 wg\"</p>",
        "id": 234185752,
        "sender_full_name": "matklad",
        "timestamp": 1618243451
    },
    {
        "content": "<p>you need to login to follow that link <span aria-label=\"wrong way\" class=\"emoji emoji-26d4\" role=\"img\" title=\"wrong way\">:wrong_way:</span></p>",
        "id": 234185807,
        "sender_full_name": "oliver",
        "timestamp": 1618243478
    },
    {
        "content": "<p>does it make sense to sync that with the teams repo?</p>",
        "id": 234185900,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243517
    },
    {
        "content": "<p>Weird, the link seem to contain a number of broken profile links (see the first one, for example) despite all avatars being in place.</p>",
        "id": 234185981,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618243555
    },
    {
        "content": "<p>It seems to work for me.</p>",
        "id": 234186130,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1618243603
    },
    {
        "content": "<p>redirects directly to login page</p>",
        "id": 234186186,
        "sender_full_name": "oliver",
        "timestamp": 1618243633
    },
    {
        "content": "<p>Guess I'm missing some permissions then (or the order is different for you).</p>\n<p>I get 404 for any profile url containing <code>orgs/rust-analyzer/people</code></p>",
        "id": 234186208,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618243645
    },
    {
        "content": "<p>is this a protected repo?</p>",
        "id": 234186237,
        "sender_full_name": "oliver",
        "timestamp": 1618243659
    },
    {
        "content": "<p>you can only see team memberships if you're a member of the org</p>",
        "id": 234186264,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"231447\">Kirill Bulatov</span> should be able to see it though</p>",
        "id": 234186284,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243682
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/0xtViHHqNRJui8_xQxk3lYwp/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/0xtViHHqNRJui8_xQxk3lYwp/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/0xtViHHqNRJui8_xQxk3lYwp/image.png\"></a></div><p>Yes, I seem to be a member.</p>\n<p>Not that important for me though, so no need to waste time on that just for me.</p>",
        "id": 234186387,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1618243712
    },
    {
        "content": "<p>migrate the information off of gh?</p>",
        "id": 234186500,
        "sender_full_name": "oliver",
        "timestamp": 1618243758
    },
    {
        "content": "<p>if anything it should go into the official team repo</p>",
        "id": 234186561,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618243798
    },
    {
        "content": "<p>Steering issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8486\">https://github.com/rust-analyzer/rust-analyzer/issues/8486</a></p>",
        "id": 234195701,
        "sender_full_name": "matklad",
        "timestamp": 1618247436
    },
    {
        "content": "<p>re: broken windows, it might also be a good idea to review completions in various places and make more of an effort that completions don't show up in places where they shouldn't? (e.g. snippets showing up in struct literal completions)</p>",
        "id": 234489082,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618403287
    },
    {
        "content": "<p>Maybe? To my mind, the  quality of our completions is so low at the moment, that this is more of \"there will be a building here one day\", rather than a broken window :)</p>",
        "id": 234493482,
        "sender_full_name": "matklad",
        "timestamp": 1618405113
    },
    {
        "content": "<p>As in, I do think we should focus on this near/mid term, but it doesn't give the \"brokenness of something which should just work\" vibe.</p>",
        "id": 234493590,
        "sender_full_name": "matklad",
        "timestamp": 1618405167
    },
    {
        "content": "<p>(but, eg, bug about <code>&amp;</code> being inserted in the wrong place in <code>foo.&amp;bar</code> def was a broken window)</p>",
        "id": 234493727,
        "sender_full_name": "matklad",
        "timestamp": 1618405209
    },
    {
        "content": "<p>hmm, I might be misunderstanding the broken window metaphor. I thought that was mostly about tech debt that, if left unfixed, will result in more tech debt accumulating over time, rather than UX issues?</p>",
        "id": 234494147,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618405373
    },
    {
        "content": "<p>They both can be -- completion is bad -&gt; a regression shows up -&gt; nobody fixes it because completion is bad anyway and maybe they don't even notice it.</p>",
        "id": 234494324,
        "sender_full_name": "Laurențiu",
        "timestamp": 1618405442
    },
    {
        "content": "<p>aah, yeah I've done that <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 234494419,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618405472
    },
    {
        "content": "<p>yeah to me \"wrong completions are showing up all over the place\" feels kind of like a broken window, because it regularly annoys me but I kind of ignore it at this point</p>",
        "id": 234495039,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618405717
    },
    {
        "content": "<p>similarly with autoimport completions not showing up when I expect them, btw</p>",
        "id": 234495081,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618405738
    },
    {
        "content": "<p>I kind of disagree that the quality of our completions is so bad, _except_ for those points ;)</p>",
        "id": 234495179,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618405781
    },
    {
        "content": "<p>I see the point... I guess, if you could screen-shot an instance of bad completion and post an issue with \"this, specifically, is wrong\", then that can be a broken window</p>",
        "id": 234495881,
        "sender_full_name": "matklad",
        "timestamp": 1618406018
    },
    {
        "content": "<p>point taken ;)</p>",
        "id": 234497048,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618406445
    },
    {
        "content": "<p>Yeah. I'd say, 80% my personal motivation for \"broken windows\" thing is to disallow me wiggling out of filing bugs :)</p>",
        "id": 234499218,
        "sender_full_name": "matklad",
        "timestamp": 1618407220
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8519\">https://github.com/rust-analyzer/rust-analyzer/issues/8519</a> is surely a broken window though, isn't it</p>",
        "id": 234554448,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618426553
    },
    {
        "content": "<p>I thought that was fixed, by the way</p>",
        "id": 234554596,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1618426614
    },
    {
        "content": "<p>Indeed that one is</p>",
        "id": 234557157,
        "sender_full_name": "matklad",
        "timestamp": 1618427515
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>, we have another steering meeting today!</p>",
        "id": 240062873,
        "sender_full_name": "matklad",
        "timestamp": 1621868457
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, I believe you wanted to sync in as well</p>",
        "id": 240062906,
        "sender_full_name": "matklad",
        "timestamp": 1621868476
    },
    {
        "content": "<p>Here are results for our previous sprint: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8486#issuecomment-847100224\">https://github.com/rust-analyzer/rust-analyzer/issues/8486#issuecomment-847100224</a></p>",
        "id": 240062953,
        "sender_full_name": "matklad",
        "timestamp": 1621868507
    },
    {
        "content": "<p>Seems like we did most of the things we wanted to!</p>",
        "id": 240063091,
        "sender_full_name": "matklad",
        "timestamp": 1621868567
    },
    {
        "content": "<p>Although (this might, or might not be the recency bias), we also shipped a couple of broken releases recently :(</p>",
        "id": 240063200,
        "sender_full_name": "matklad",
        "timestamp": 1621868610
    },
    {
        "content": "<p>we made <em>some</em> progress of duplicated crates: build scripts now have more correct dependencies, and we can display the crate graph for debugging</p>",
        "id": 240063244,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621868635
    },
    {
        "content": "<p>Ah, that's the backstory behind the crate graph featues, I somehow missed that :D</p>",
        "id": 240063379,
        "sender_full_name": "matklad",
        "timestamp": 1621868699
    },
    {
        "content": "<p>Let's spend the next 30 minutes or so brainstorming potential priorities for the next sprint</p>",
        "id": 240063598,
        "sender_full_name": "matklad",
        "timestamp": 1621868799
    },
    {
        "content": "<p>JFYI: I've been working on refactoring chalk + salsa</p>",
        "id": 240063636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621868821
    },
    {
        "content": "<p>so that we can move the caching of chalk queries into salsa</p>",
        "id": 240063660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621868835
    },
    {
        "content": "<p>and have them fully integrated with the incremental compilation system</p>",
        "id": 240063679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621868848
    },
    {
        "content": "<p>I'm also thinking about next month's CTCFT and wondering whether there are rust-analyzer related agenda items :) I'm <em>mostly</em> thinking of things like \"here is a proposal that affects &gt;2 teams and is at a point where someone would like to present about it\". This may not be relevant yet.</p>",
        "id": 240063811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621868907
    },
    {
        "content": "<p>I believe <span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> on our side did a lot of refactors removing code from rust-analyzer and switching to chalk!</p>",
        "id": 240063853,
        "sender_full_name": "matklad",
        "timestamp": 1621868923
    },
    {
        "content": "<p>Cool! the other thing that we've been doing is gearing up more and more for a rustc-ty library, but there's not enough progress to be worth thinking about during this 6 week period</p>",
        "id": 240063933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621868964
    },
    {
        "content": "<p>I don't think we have anything that needs cross-team coordination at this point, and that itself is a problem.</p>",
        "id": 240063944,
        "sender_full_name": "matklad",
        "timestamp": 1621868970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> could you give a quick update on the status of chalk in rustc?</p>",
        "id": 240063983,
        "sender_full_name": "matklad",
        "timestamp": 1621868993
    },
    {
        "content": "<p>We could target extracting something like match checking</p>",
        "id": 240063994,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869001
    },
    {
        "content": "<p>As in, we are not very succesful with general library-ification, so I am wondering if we should stop worrying about that until chalk is \"done\"?</p>",
        "id": 240064117,
        "sender_full_name": "matklad",
        "timestamp": 1621869039
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240063983\">said</a>:</p>\n<blockquote>\n<p>could you give a quick update on the status of chalk in rustc?</p>\n</blockquote>\n<p>sure-- so <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> has been doing some pretty intense refactors, helping to move the rustc types in closer alignment with chalk, and we have some ongoing work e.g. by <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> in a similar direction.</p>",
        "id": 240064127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869046
    },
    {
        "content": "<p>We've created a shared type library but it has only a few simple things in it</p>",
        "id": 240064175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869073
    },
    {
        "content": "<p>There is a stalled PR to take the next step and start moving some of the interner logic</p>",
        "id": 240064204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869087
    },
    {
        "content": "<p>There are a few questions that concern rust-analyzer too</p>",
        "id": 240064227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869096
    },
    {
        "content": "<p>Notably how to represent generic type parameters and how much context is required to interpret them</p>",
        "id": 240064257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869109
    },
    {
        "content": "<p>We're still working on firming up the roadmap there; there is a <a href=\"https://github.com/rust-lang/wg-traits/projects/5\">project board</a></p>",
        "id": 240064394,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869167
    },
    {
        "content": "<p>ah yeah and <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> is looking at changing how rustc represents <code>dyn</code> types</p>",
        "id": 240064473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869207
    },
    {
        "content": "<p>I guess it would be helpful to have a sense for how closely aligned rust-analyzer's types are with chalk's</p>",
        "id": 240064481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869215
    },
    {
        "content": "<p>So much action <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>",
        "id": 240064486,
        "sender_full_name": "Jack Huey",
        "timestamp": 1621869218
    },
    {
        "content": "<p>we should perhaps add items in there talking about work to help them get aligned as well</p>",
        "id": 240064525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> we exclusively use chalk types in inference now, we don't have our own <code>Ty</code> anymore</p>",
        "id": 240064642,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869275
    },
    {
        "content": "<p>OK :)</p>",
        "id": 240064657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869282
    },
    {
        "content": "<p>I'm curious: any changes to perf?</p>",
        "id": 240064678,
        "sender_full_name": "Jack Huey",
        "timestamp": 1621869296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240063944\">said</a>:</p>\n<blockquote>\n<p>I don't think we have anything that needs cross-team coordination at this point, and that itself is a problem.</p>\n</blockquote>\n<p>can you elaborate on what you meant by \"and that itself is a problem\", <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> ?</p>",
        "id": 240064709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869313
    },
    {
        "content": "<p>We still implement type params in a hacky way though</p>",
        "id": 240064716,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240064716\">said</a>:</p>\n<blockquote>\n<p>We still implement type params in a hacky way though</p>\n</blockquote>\n<p>That seems relevant to the <code>ParamTy</code> vs <code>BoundVar</code> story</p>",
        "id": 240064803,
        "sender_full_name": "Jack Huey",
        "timestamp": 1621869353
    },
    {
        "content": "<p>I think perf is hard to say, in total it's better because we also did some optimizations at the same time, some of which were enabled by it</p>",
        "id": 240064970,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the usual, it feels like rust-analyzer is a thing of its own, which doesn't integrate super well technically with the rest of rust-project.</p>",
        "id": 240064982,
        "sender_full_name": "matklad",
        "timestamp": 1621869385
    },
    {
        "content": "<p>got it</p>",
        "id": 240065192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869429
    },
    {
        "content": "<p>In particular, we don't have any ongoing stories about extracting more libraries out of compiler</p>",
        "id": 240065287,
        "sender_full_name": "matklad",
        "timestamp": 1621869448
    },
    {
        "content": "<p>What kind of focus areas were you thinking for this 6 week period?</p>",
        "id": 240065302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869453
    },
    {
        "content": "<p>I do feel like it would be reasonable not to worry about that until the type library is available</p>",
        "id": 240065353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869480
    },
    {
        "content": "<p>at the same time, <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>'s suggestion of the exhaustiveness checking code <em>could</em> be nice</p>",
        "id": 240065422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869499
    },
    {
        "content": "<p>I think that is based on thir... we'd have to extract that too</p>",
        "id": 240065448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> is also actively refactoring <em>that</em> :) (EDIT: thir, that is)</p>",
        "id": 240065479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869523
    },
    {
        "content": "<p>What I have in mind for the next sprint:</p>\n<ul>\n<li>quality and performance of completion</li>\n<li>re-designing our diagnostics infrastrcuture</li>\n</ul>",
        "id": 240065492,
        "sender_full_name": "matklad",
        "timestamp": 1621869532
    },
    {
        "content": "<p>the last one might be related to salsa</p>",
        "id": 240065518,
        "sender_full_name": "matklad",
        "timestamp": 1621869543
    },
    {
        "content": "<p>oh yes</p>",
        "id": 240065551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869561
    },
    {
        "content": "<p>I really want to implement that <em>side effects</em> concept (also for rustc)</p>",
        "id": 240065573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869572
    },
    {
        "content": "<p>Basically, we now support more or less all the Rust (well, exccept for const-eval), so we could, in theory, do low FPR diagnostics.</p>",
        "id": 240065589,
        "sender_full_name": "matklad",
        "timestamp": 1621869579
    },
    {
        "content": "<p>\"FPR\"?</p>",
        "id": 240065614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869593
    },
    {
        "content": "<p>false positive rate</p>",
        "id": 240065627,
        "sender_full_name": "matklad",
        "timestamp": 1621869600
    },
    {
        "content": "<blockquote>\n<p>more or less all the Rust (well, exccept for const-eval)</p>\n</blockquote>\n<p>Also except attribute proc macros? <br>\n<a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6029\">https://github.com/rust-analyzer/rust-analyzer/issues/6029</a></p>",
        "id": 240065695,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621869619
    },
    {
        "content": "<p>(Random nit: I once read something suggesting the terminology \"false error\" or \"false warning\" instead, and I've found it's so much clearer, since \"false positive\" doesn't tell you what a \"positive\" is...)</p>",
        "id": 240065725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869632
    },
    {
        "content": "<p>in practice, our diagnostics infra is overenginered, so we need to clean it up before adding a ton of new error codes</p>",
        "id": 240065779,
        "sender_full_name": "matklad",
        "timestamp": 1621869662
    },
    {
        "content": "<p>That's interesting architecturally, because errors are emitted in the guts of the compiler, but are rendered by the IDE. So this is related to the general proglem of mapping back out of IR into surface-level syntax.</p>",
        "id": 240065943,
        "sender_full_name": "matklad",
        "timestamp": 1621869728
    },
    {
        "content": "<p>I'd like to get to 0 type mismatches on the RA repo</p>",
        "id": 240065982,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869746
    },
    {
        "content": "<p>I'd like to get to 0 type mismatches on the RA repo</p>",
        "id": 240065987,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869749
    },
    {
        "content": "<p>Then we can start emitting type check diagnostics</p>",
        "id": 240065990,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621869749
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240065982\">said</a>:</p>\n<blockquote>\n<p>I'd like to get to 0 type mismatches on the RA repo</p>\n</blockquote>\n<p>how far is that?</p>",
        "id": 240066057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869778
    },
    {
        "content": "<p>my wishlist for the next sprint:</p>\n<ul>\n<li>salsa improvements:<ul>\n<li>parallelization</li>\n<li>persistent storage</li>\n</ul>\n</li>\n<li>make <code>hir_def</code> feature-complete, support attribute macros<ul>\n<li>then, start making some more diagnostics here non-experimental</li>\n</ul>\n</li>\n</ul>",
        "id": 240066059,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621869780
    },
    {
        "content": "<p>ooh, I'd be interested to help push those salsa improvements along a bit</p>",
        "id": 240066127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869811
    },
    {
        "content": "<p>Another couple of things I sort of want to focus on (provided I have infinite focus):</p>\n<ul>\n<li>extracting rust-analyzer parser in a standalone crate with a nice API, as a stepping stone to parser library-ification</li>\n<li>experimenting with \"tree-based HIR\" -- a new IDE for the intreface between compiler and IDE parts.</li>\n</ul>",
        "id": 240066285,
        "sender_full_name": "matklad",
        "timestamp": 1621869859
    },
    {
        "content": "<p>(I'm already doing some parallelization related refactoring)</p>",
        "id": 240066308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621869866
    },
    {
        "content": "<p>And yeah, salsa parallelization would be big! I think it should markedly improved rust-analyzer's UX.</p>",
        "id": 240066612,
        "sender_full_name": "matklad",
        "timestamp": 1621869984
    },
    {
        "content": "<p>I'm curious <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> whether you would have time to hack on salsa par personally-- or have someone in mind</p>",
        "id": 240066660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870006
    },
    {
        "content": "<p>I might be able to do some work there, yes</p>",
        "id": 240066762,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621870051
    },
    {
        "content": "<p>I'm thinking about how much time I can realistically commit</p>",
        "id": 240066777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870058
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span>, <span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> , <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> , <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span>,  (sorry if I am forgetting someone) -- any wish list items for the next sprint?</p>",
        "id": 240066807,
        "sender_full_name": "matklad",
        "timestamp": 1621870068
    },
    {
        "content": "<p>I would definitely like to salsa reinvigorated, particularly if it will help rust-analyzer's UX</p>",
        "id": 240066811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870069
    },
    {
        "content": "<p>I've been working to carve out 1 or 2 days for coding per week</p>",
        "id": 240066885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870088
    },
    {
        "content": "<p>another item to maybe look into:</p>\n<ul>\n<li>WASM proc macros</li>\n</ul>\n<p>(the server process approach is not very efficient and has poor UX when it crashes)</p>",
        "id": 240066892,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621870092
    },
    {
        "content": "<p>I am still slowing working on ra fmt</p>",
        "id": 240067064,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621870165
    },
    {
        "content": "<p>Realistically I probably can't spend <em>that</em> much time on coding, maybe 2-3 days a week? Depending on how much I do in my free time of course :/</p>",
        "id": 240067121,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621870200
    },
    {
        "content": "<p>I second the completions improvements idea: In my dreams, I'm soon starting with <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8518\">https://github.com/rust-analyzer/rust-analyzer/issues/8518</a> and then switch over some bullets from  <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7542\">https://github.com/rust-analyzer/rust-analyzer/issues/7542</a> in the near future</p>\n<p>I also like the standalone Rust files topic I've barely scratched: plenty of low hanging fruits.<br>\nI guess, I can touch the crate tree dependency improvements along the way, since very adjacent.</p>",
        "id": 240067242,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621870232
    },
    {
        "content": "<p>I haven't been able to do much lately, but maybe I'll try to look through the older issues and see if there's any low hanging fruit. I think we're getting more bug reports than we used to.</p>",
        "id": 240067329,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621870271
    },
    {
        "content": "<p>I'd like to get to 0 type mismatches on the RA repo</p>",
        "id": 240067358,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870286
    },
    {
        "content": "<p>Maybe looking at refactoring completions a bit. As the <code>CompletionContext</code> has a huge number of  specific fields currently and the code looks a bit odd in some places imo.</p>",
        "id": 240067361,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1621870288
    },
    {
        "content": "<p>That requires working attribute macros though</p>",
        "id": 240067362,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870288
    },
    {
        "content": "<p>Then we can start emitting type check diagnostics</p>",
        "id": 240067363,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870289
    },
    {
        "content": "<p>improving completion quality and perf sounds like a good goal</p>",
        "id": 240067527,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621870344
    },
    {
        "content": "<p>Ok, so let's see what we got here...</p>",
        "id": 240067714,
        "sender_full_name": "matklad",
        "timestamp": 1621870404
    },
    {
        "content": "<p>/poll</p>",
        "id": 240067723,
        "sender_full_name": "matklad",
        "timestamp": 1621870409
    },
    {
        "content": "<p>(is this a <em>preference</em> or some form of volunteering :)</p>",
        "id": 240068065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870534
    },
    {
        "content": "<p>A wish list i guess?</p>",
        "id": 240068162,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621870565
    },
    {
        "content": "<p>Preference -- the goal is to align the vision.</p>",
        "id": 240068164,
        "sender_full_name": "matklad",
        "timestamp": 1621870566
    },
    {
        "content": "<p>Everyone will end up working on the most nerd-sniping items anyway, but we can try to steer that just a little bit with figuring out priorities :)</p>",
        "id": 240068244,
        "sender_full_name": "matklad",
        "timestamp": 1621870609
    },
    {
        "content": "<p>I don't know enough about \"tree-based HIR\"-- but that sounds useful/imp't too to work out</p>",
        "id": 240068293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870635
    },
    {
        "content": "<p>I'd like to get to 0 type mismatches on the RA repo</p>",
        "id": 240068610,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870779
    },
    {
        "content": "<p>That requires working attribute macros though</p>",
        "id": 240068611,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870779
    },
    {
        "content": "<p>Then we can start emitting type check diagnostics</p>",
        "id": 240068612,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870779
    },
    {
        "content": "<p>Yeah. The crux of the idea is to take the API we have for syntax trees (parent/children), and to \"make it work\" for sematic info as well. </p>\n<p>The core idea is that we can make tree-based API work for macros. For something like <code>format!(\"hello {}\", name)</code>, the <code>sem::MacroCall</code> will have two children: <code>.expansion() -&gt; sem::Expr</code> and <code>.argument() -&gt; sem::TokenTree</code>.</p>",
        "id": 240068614,
        "sender_full_name": "matklad",
        "timestamp": 1621870780
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> are you on a spotty WiFi connection?)</p>",
        "id": 240068782,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621870841
    },
    {
        "content": "<p>Sorry <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 240068809,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> , is your zulip buggy, or are you just <strong>that</strong> dedicated to getting zero type saymismatches? I wholeheartedly support your efforts!</p>",
        "id": 240068820,
        "sender_full_name": "matklad",
        "timestamp": 1621870859
    },
    {
        "content": "<p>I had just entered a train without wifi</p>",
        "id": 240068828,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870866
    },
    {
        "content": "<p>They have actually managed to fix it now</p>",
        "id": 240068859,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870882
    },
    {
        "content": "<p>It was just my zulip client retrying though, I didn't resend the message</p>",
        "id": 240068918,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621870911
    },
    {
        "content": "<p>(all the hearts on all of the messages are genuine though!)</p>",
        "id": 240069006,
        "sender_full_name": "matklad",
        "timestamp": 1621870942
    },
    {
        "content": "<p>I'm still wondering how far the RA repo is from 0 :)</p>",
        "id": 240069056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870976
    },
    {
        "content": "<p><a href=\"https://rust-analyzer.github.io/metrics/\">https://rust-analyzer.github.io/metrics/</a></p>",
        "id": 240069092,
        "sender_full_name": "matklad",
        "timestamp": 1621870993
    },
    {
        "content": "<p>looking at the poll above -- one thing I note is that it is a bit inconsistent on whether it desribes a <em>mechanism</em> or a <em>user experience goal</em></p>",
        "id": 240069097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621870999
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961\">https://github.com/rust-analyzer/rust-analyzer/issues/8961</a></p>\n<p>says</p>\n<blockquote>\n<p>We've got about 1000 type mismatches remaining when running rust-analyzer analysis-stats . on the rust-analyzer repo</p>\n</blockquote>",
        "id": 240069110,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621871008
    },
    {
        "content": "<p>there are 1075 errors</p>",
        "id": 240069113,
        "sender_full_name": "matklad",
        "timestamp": 1621871012
    },
    {
        "content": "<p>salsa parallelization is clearly a mechanism, but I guess the UX goal is <em>snappier</em></p>",
        "id": 240069133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871025
    },
    {
        "content": "<p>(Oof, I should fix those <code>diesel</code> charts. Although they maybe don't look to bad)</p>",
        "id": 240069150,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621871032
    },
    {
        "content": "<p>I do think that, speaking as a user, completions don't really seem to  work reliably enough</p>",
        "id": 240069222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871051
    },
    {
        "content": "<p>that is, sometimes they work, but I'm always a bit surprised, and I don't rely on them, and sometimes there's just a lot of <em>stuff</em> in there</p>",
        "id": 240069270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  we're at about 1000 errors, 700 of which come from salsa macros not working</p>",
        "id": 240069273,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871072
    },
    {
        "content": "<p>There's a bigger tension even, between immediate UX and long-term maintanence.</p>",
        "id": 240069284,
        "sender_full_name": "matklad",
        "timestamp": 1621871077
    },
    {
        "content": "<p>Yes</p>",
        "id": 240069305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240069222\">said</a>:</p>\n<blockquote>\n<p>I do think that, speaking as a user, completions don't really seem to  work reliably enough</p>\n</blockquote>\n<p>That's usually either attribute proc macros or <code>chalk</code></p>",
        "id": 240069315,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621871098
    },
    {
        "content": "<p>To me, salsa parallelization is more about getting the architecture right, than about UX benefits.</p>",
        "id": 240069331,
        "sender_full_name": "matklad",
        "timestamp": 1621871106
    },
    {
        "content": "<p>That makes sense to me</p>",
        "id": 240069361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871117
    },
    {
        "content": "<p>IIRC, we are not enable proc-macro in perf yet</p>",
        "id": 240069402,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621871132
    },
    {
        "content": "<p>I think the goal of focusing on underlying architecture still feels right for where rust-analyer is in its lifecycle</p>",
        "id": 240069412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871135
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216201\">Edwin Cheng</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240069402\">said</a>:</p>\n<blockquote>\n<p>IIRC, we are not enable proc-macro in pref yet</p>\n</blockquote>\n<p>I think we do</p>",
        "id": 240069429,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621871144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240069315\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240069222\">said</a>:</p>\n<blockquote>\n<p>I do think that, speaking as a user, completions don't really seem to  work reliably enough</p>\n</blockquote>\n<p>That's usually either attribute proc macros or <code>chalk</code></p>\n</blockquote>\n<p>Or them being terribly slow, forcing the VSCode to fallback towards its own completion mechanisms.</p>",
        "id": 240069436,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621871147
    },
    {
        "content": "<p>but completions are indeed 100% UX. Well, except for that part where we need to do speculative things, which needs some first-class support in salsa</p>",
        "id": 240069460,
        "sender_full_name": "matklad",
        "timestamp": 1621871159
    },
    {
        "content": "<p>BTW, speaking of type-errors. Why are we not resolving salsa methods? Is it attribute proc macros, or <code>dyn Trait</code> support?</p>",
        "id": 240069600,
        "sender_full_name": "matklad",
        "timestamp": 1621871214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/240069460\">said</a>:</p>\n<blockquote>\n<p>...except for that part where we need to do speculative things, which needs some first-class support in salsa</p>\n</blockquote>\n<p>this is super useful to talk about too (not at this moment...)</p>",
        "id": 240069644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871239
    },
    {
        "content": "<p>Pretty sure we mostly are?</p>",
        "id": 240069647,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871241
    },
    {
        "content": "<p>Just not stuff like interning methods because they're generated by the macros</p>",
        "id": 240069698,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871268
    },
    {
        "content": "<p>salsa methods mostly work, just not on <code>RootDatabase</code> because of missing attribute macro support</p>",
        "id": 240069704,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621871272
    },
    {
        "content": "<p>Ah yeah</p>",
        "id": 240069739,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871283
    },
    {
        "content": "<p>and yeah the interning lookup methods</p>",
        "id": 240069763,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621871287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> could you expand on \"a lot of stuff in there\"?</p>",
        "id": 240069877,
        "sender_full_name": "matklad",
        "timestamp": 1621871340
    },
    {
        "content": "<p>is it that there are a lot of wrong suggestions, or is it some missing prioritization?</p>",
        "id": 240069952,
        "sender_full_name": "matklad",
        "timestamp": 1621871380
    },
    {
        "content": "<p>I'm not sure</p>",
        "id": 240069961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871385
    },
    {
        "content": "<p>I think it's more about just having generic suggestions</p>",
        "id": 240069979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871393
    },
    {
        "content": "<p>I'll try to pay more careful attention</p>",
        "id": 240070010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871403
    },
    {
        "content": "<p>well, ok, prioritization is part of it</p>",
        "id": 240070072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871422
    },
    {
        "content": "<p>e.g. I was just experimenting with <code>.</code> on a <code>Vec&lt;T&gt;</code>...</p>",
        "id": 240070100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871430
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/qiijxq8AUimy9dixbkh--ABJ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/qiijxq8AUimy9dixbkh--ABJ/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/qiijxq8AUimy9dixbkh--ABJ/image.png\"></a></div>",
        "id": 240070135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871447
    },
    {
        "content": "<p>lots of random stuff in there :)</p>",
        "id": 240070151,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871454
    },
    {
        "content": "<p>certainly those are applicable methods</p>",
        "id": 240070206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871487
    },
    {
        "content": "<p>just very few of them are methods I've ever called</p>",
        "id": 240070233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871500
    },
    {
        "content": "<p>We totally need some AI-powered completion ordering (AKA sorting by frequency)</p>",
        "id": 240070236,
        "sender_full_name": "Laurențiu",
        "timestamp": 1621871501
    },
    {
        "content": "<p>I think the tree-based hir would be nice for implementing diagnostics on</p>",
        "id": 240070272,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871519
    },
    {
        "content": "<p>Hm, yeah.... I certainly feels like we should have some way to not show correct, but low probability suggestions...</p>",
        "id": 240070449,
        "sender_full_name": "matklad",
        "timestamp": 1621871585
    },
    {
        "content": "<p>I wonder how hard it would be to do some simple frequency ordering <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 240070457,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871588
    },
    {
        "content": "<p>I guess the first step is to look into what IntelliJ is doing. I've never got to this part of completion engine myself....</p>",
        "id": 240070518,
        "sender_full_name": "matklad",
        "timestamp": 1621871626
    },
    {
        "content": "<blockquote>\n<p>IntelliJ is doing</p>\n</blockquote>\n<p>Afaik, the latest thing for them is an actual ML(?) on datasets from EAP users.</p>",
        "id": 240070635,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621871659
    },
    {
        "content": "<p><a href=\"https://github.com/intellij-rust/intellij-rust/issues/6411\">https://github.com/intellij-rust/intellij-rust/issues/6411</a></p>",
        "id": 240070785,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1621871741
    },
    {
        "content": "<p>Ok, so we have 5 minutes left, lets see what we have</p>",
        "id": 240070816,
        "sender_full_name": "matklad",
        "timestamp": 1621871761
    },
    {
        "content": "<p>These are the winners:</p>\n<ul>\n<li>0 type mismatches on the RA repo</li>\n<li>quality and performance of completion</li>\n<li>support attribute macros</li>\n</ul>",
        "id": 240070944,
        "sender_full_name": "matklad",
        "timestamp": 1621871817
    },
    {
        "content": "<p>Clearly, we have a bias towards UX rather than architectural work</p>",
        "id": 240070971,
        "sender_full_name": "matklad",
        "timestamp": 1621871834
    },
    {
        "content": "<p>Well, I did advertise the mismatches a lot <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 240071005,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1621871858
    },
    {
        "content": "<p>And I'd love to through:</p>\n<ul>\n<li>salsa parallelization</li>\n</ul>\n<p>into the mix as well -- I think it'll massively importatn for both arch and UX actually</p>",
        "id": 240071045,
        "sender_full_name": "matklad",
        "timestamp": 1621871882
    },
    {
        "content": "<p>Yes, let's do that</p>",
        "id": 240071188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871937
    },
    {
        "content": "<p>We have a basic model, i'd love to prove it out and decide if it is working or what</p>",
        "id": 240071222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871955
    },
    {
        "content": "<p>Plus it fits with our opinionated cancellation model</p>",
        "id": 240071233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871961
    },
    {
        "content": "<p>I think I've overcome my resistsance to salsa managing threads</p>",
        "id": 240071253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871970
    },
    {
        "content": "<p>(this is also related to speculation, I suppose)</p>",
        "id": 240071273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621871979
    },
    {
        "content": "<p>(sorry, got distracted before actually completing the meeting)</p>\n<p>Ok, I think we have a plan for the next sprint, see you'all in a six weeks!</p>\n<p>(and, <span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> , I am intrigued by your formatter work -- this is also one of the core bits of tech that can unlock many intreseting cases. I wonder if we need to sync about that?)</p>",
        "id": 240072255,
        "sender_full_name": "matklad",
        "timestamp": 1621872337
    },
    {
        "content": "<p>Sure, basically I am trying to mimics nix-fmt with intellj rust code rules</p>",
        "id": 240073069,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621872700
    },
    {
        "content": "<p>But I am thinking it is possible do it as a general roman based formatter</p>",
        "id": 240073159,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621872735
    },
    {
        "content": "<p>Seem like there are a lot of code which can be shared</p>",
        "id": 240073243,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1621872786
    },
    {
        "content": "<p>Ow, I actually havent' thought of a formatting engine which is based directly on rowan and doesn't depend on rust-analyzer bits. That potentailly can be very cool!</p>",
        "id": 240075501,
        "sender_full_name": "matklad",
        "timestamp": 1621873846
    },
    {
        "content": "<p>Steering issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8972\">https://github.com/rust-analyzer/rust-analyzer/issues/8972</a></p>",
        "id": 240077053,
        "sender_full_name": "matklad",
        "timestamp": 1621874486
    },
    {
        "content": "<p>Hey, we have a steering meeting today, but it unfortunately clashes with another meeting I have, and I am <em>just</em> back from vacation. </p>\n<p>Let's maybe move the steering meeting to the Monday <em>next</em> week?</p>",
        "id": 244912758,
        "sender_full_name": "matklad",
        "timestamp": 1625476951
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and warm welcome to the today's steering meeting!</p>",
        "id": 245698539,
        "sender_full_name": "matklad",
        "timestamp": 1626102055
    },
    {
        "content": "<p>The current steering issue is: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8972\">https://github.com/rust-analyzer/rust-analyzer/issues/8972</a></p>",
        "id": 245698709,
        "sender_full_name": "matklad",
        "timestamp": 1626102089
    },
    {
        "content": "<p>I suggest structuring the meeting roughly as follows:</p>\n<ul>\n<li>first 10 minutes or so we discuss previous sprint</li>\n<li>then, for 20 minutes, we brainstorm what would be our focus next</li>\n<li>then, for 20 minutes, we narrow brainstorming results</li>\n</ul>",
        "id": 245698992,
        "sender_full_name": "matklad",
        "timestamp": 1626102166
    },
    {
        "content": "<p>Note that the absence of <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> on the steering issue is a bit misleading -- the subissues themselves have a whole lot of checkboxes, and most of them are actually checked!</p>",
        "id": 245699130,
        "sender_full_name": "matklad",
        "timestamp": 1626102228
    },
    {
        "content": "<p>My personal observation that this sprint was a lot about \"filling-in the gaps\", and that I think is a very good long-term strategy. I especially like that we improved our test suite (minicore, completion relevance tests, new typechecking tests)</p>",
        "id": 245699385,
        "sender_full_name": "matklad",
        "timestamp": 1626102341
    },
    {
        "content": "<p>At the same time, we sadly accumulated a bit too many of the broken windows at the moment: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22\">https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22</a> :(</p>",
        "id": 245699609,
        "sender_full_name": "matklad",
        "timestamp": 1626102445
    },
    {
        "content": "<p>Finally, I think the \"hir 2.0\" discussion was and is hightly important: <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Tree.20Based.20HIR/near/243560600\">https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Tree.20Based.20HIR/near/243560600</a></p>\n<p>I still don't know where it goes, but I like the progress so far. I personally now have a much better understanding of the macro related issues</p>",
        "id": 245699889,
        "sender_full_name": "matklad",
        "timestamp": 1626102562
    },
    {
        "content": "<p>Any other summarising and reflecting thoughts?</p>",
        "id": 245699927,
        "sender_full_name": "matklad",
        "timestamp": 1626102586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/245699609\">said</a>:</p>\n<blockquote>\n<p>At the same time, we sadly accumulated a bit too many of the broken windows at the moment: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22\">https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22</a> :(</p>\n</blockquote>\n<p>Just added one more :(</p>",
        "id": 245699934,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626102590
    },
    {
        "content": "<p>I'm hyped up for the type checking and proc macro work.</p>",
        "id": 245700039,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626102623
    },
    {
        "content": "<p>(not able to attend this one, sorry)</p>",
        "id": 245700081,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626102644
    },
    {
        "content": "<p>No problems <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> !</p>",
        "id": 245700126,
        "sender_full_name": "matklad",
        "timestamp": 1626102660
    },
    {
        "content": "<p>same here unfortunately <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 245700176,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1626102678
    },
    {
        "content": "<p>Oh, one more thing from me -- no progress on \"rust-anlyzer is a part of rust-lang/rust organizaion\" , guess I'll do another round of pings</p>",
        "id": 245700183,
        "sender_full_name": "matklad",
        "timestamp": 1626102682
    },
    {
        "content": "<p>regarding type checking, we got to 175 type mismatches, 150 of which come from two issues: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9560\">https://github.com/rust-analyzer/rust-analyzer/issues/9560</a> and <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8984\">https://github.com/rust-analyzer/rust-analyzer/issues/8984</a></p>",
        "id": 245700193,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626102688
    },
    {
        "content": "<p>the remaining 25 I haven't looked into in detail yet</p>",
        "id": 245700325,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626102731
    },
    {
        "content": "<p>Also, I've been thinking about overlall progress recently, and I want to give shoutouts to <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> (and a steering meeting ping, while we are at it) for identifing the most improtant issues to work on. IIRC, the recently added single-file mode was warmly welcomed by the users :)</p>",
        "id": 245700516,
        "sender_full_name": "matklad",
        "timestamp": 1626102826
    },
    {
        "content": "<p>I'm also excited that we're recording coercion adjustments now, I think that'll come in useful for quite a few things</p>",
        "id": 245700617,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626102851
    },
    {
        "content": "<p>Uhu, I feel when &amp; how coercions happen (or don't happen) is an important learnability aspect, woulr be cool to expose that better, in hover &amp; such.</p>",
        "id": 245700758,
        "sender_full_name": "matklad",
        "timestamp": 1626102912
    },
    {
        "content": "<p>I guess, it's time for us to brainstorm the next 6 weeks?</p>",
        "id": 245700798,
        "sender_full_name": "matklad",
        "timestamp": 1626102927
    },
    {
        "content": "<p>Looking at the steering issue again, it seems that we accumulated a bunch of \"almost done\" things, so perhaps its time for another round of finishing the work up? </p>\n<p>I personally would want to look into completion some more -- I know that <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> have been doing some pretty great refactors and improvemnts in that area!</p>",
        "id": 245701006,
        "sender_full_name": "matklad",
        "timestamp": 1626103023
    },
    {
        "content": "<p>yeah</p>",
        "id": 245701042,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626103036
    },
    {
        "content": "<p>I def do want to mend all of the broken windows though!</p>",
        "id": 245701066,
        "sender_full_name": "matklad",
        "timestamp": 1626103049
    },
    {
        "content": "<p>(also, to be fair, the O(N^2) findings fixes in hightlighting were epic this sprint)</p>",
        "id": 245701116,
        "sender_full_name": "matklad",
        "timestamp": 1626103074
    },
    {
        "content": "<p>I think what I also would want to look into is <code>include!</code> handling. Namely, making goto definition land into the actual file</p>",
        "id": 245701550,
        "sender_full_name": "matklad",
        "timestamp": 1626103258
    },
    {
        "content": "<p>that could be related to refactoring our span handling / token mapping more generally, right?</p>",
        "id": 245701636,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626103298
    },
    {
        "content": "<p>That's important in itself, and seems to be a good testing ground for the new approach to macro expansion location tracking, once we have it.</p>",
        "id": 245701637,
        "sender_full_name": "matklad",
        "timestamp": 1626103298
    },
    {
        "content": "<p>Oh wow. One thing I was thinking about is \"could proc macro set a span to some random unrelated file, which is not part of the original input\".</p>\n<p>I guess, that's exactly what <code>include!</code> does, oh dear...z</p>",
        "id": 245701803,
        "sender_full_name": "matklad",
        "timestamp": 1626103359
    },
    {
        "content": "<p>And one more thing I was thinking about recently -- I've recored a video guide to rust-analyzer couple of years ago, I wonder if it makes sense to repeat that.</p>",
        "id": 245702096,
        "sender_full_name": "matklad",
        "timestamp": 1626103474
    },
    {
        "content": "<p>Specicically, I was thinking abou maybe recording short, 30-min long fragments about various areas of rust-analyzer, such that they are digestable in one go, and can be easily re-recorded when a specific area is refactored</p>",
        "id": 245702246,
        "sender_full_name": "matklad",
        "timestamp": 1626103527
    },
    {
        "content": "<p>oh noes, so many checkmarks, guess I gotta do it now <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span></p>",
        "id": 245702463,
        "sender_full_name": "matklad",
        "timestamp": 1626103618
    },
    {
        "content": "<p>Anyone else have ideas about what we might want to do for the next 6 weeks? I wonder if we should ask <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> to just tell us what to work on? :)</p>",
        "id": 245703057,
        "sender_full_name": "matklad",
        "timestamp": 1626103838
    },
    {
        "content": "<p>depending on how far we get with the false positive type mismatches, I'm planning to add a proper diagnostic for them</p>",
        "id": 245703149,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626103880
    },
    {
        "content": "<p>resp. unify the existing ad-hoc ones (\"wrap return expression in Ok\", \"remove semicolon\" and \"add reference\") into one</p>",
        "id": 245703259,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626103924
    },
    {
        "content": "<p>hiiiight, i completely forgot that we did overhaul diagnostic infra as welll</p>",
        "id": 245703440,
        "sender_full_name": "matklad",
        "timestamp": 1626103996
    },
    {
        "content": "<p>Ok, so let's move to prunnig then! This seems to be a quite meeting, so not much to be done here</p>",
        "id": 245703918,
        "sender_full_name": "matklad",
        "timestamp": 1626104215
    },
    {
        "content": "<p>Seems like completion and type-missmatches issues are carried over, and we add two items:</p>\n<ul>\n<li>initial support for some type-mismatch diagnostics</li>\n<li>proper span tracking in <code>include!</code></li>\n</ul>",
        "id": 245704111,
        "sender_full_name": "matklad",
        "timestamp": 1626104310
    },
    {
        "content": "<p>seems good</p>",
        "id": 245704152,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626104336
    },
    {
        "content": "<p>I wonder if we should put hir2.0 there as well? I think I'd rather not -- seems something we should think about in the background, rather that something we should actively pursue</p>",
        "id": 245704204,
        "sender_full_name": "matklad",
        "timestamp": 1626104373
    },
    {
        "content": "<p>it might also be a bit much</p>",
        "id": 245704416,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1626104464
    },
    {
        "content": "<p>New steering issues: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9580\">https://github.com/rust-analyzer/rust-analyzer/issues/9580</a></p>",
        "id": 245705551,
        "sender_full_name": "matklad",
        "timestamp": 1626104972
    },
    {
        "content": "<p>I suggest not moving the time of the next steering meeting. that is, this sprint will be one week shorter. Sorry for moving this one in the first place!</p>",
        "id": 245705672,
        "sender_full_name": "matklad",
        "timestamp": 1626105014
    },
    {
        "content": "<p>Sorry, got out of the loop today too, but thanks for pointing out the development directions.<br>\nI will share some late thoughts in this message, for clarity.</p>\n<p>I have the list of new features I imagine cool to have, but recently I've got influenced by the talks about getting \"more mature\" on the features that we have alreadys, so I try not to propose anything but rather fix bugs and do completion perf. improvements (or rather I imagine myself trying in the recent weeks).</p>\n<p>I'd personally love to work further on standalone files-snippets with dynamic crate trees, but it feels better to make completions faster at this moment in time.</p>",
        "id": 245708581,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1626106174
    },
    {
        "content": "<p>Publish a couple of test videos to <a href=\"https://www.youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y\">https://www.youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y</a></p>",
        "id": 245727704,
        "sender_full_name": "matklad",
        "timestamp": 1626114831
    },
    {
        "content": "<p>There's a fair bit of noise in there :-(. Oh, somebody already complained <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>.</p>",
        "id": 245852824,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626194730
    },
    {
        "content": "<p>OBS has a fairly good noise suppressor you can enable</p>",
        "id": 245854928,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626195658
    },
    {
        "content": "<blockquote>\n<p>Oh dear. I <em>was</em> using noise cancelling filter, but I added it to my audio output (speakers) rather than to audio input (mic).</p>\n</blockquote>\n<p>Solid UX there</p>",
        "id": 245855144,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626195740
    },
    {
        "content": "<p>heh, not sure why you'd want to do that but the flexibility is kinda neat I guess?</p>",
        "id": 245858871,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626197348
    },
    {
        "content": "<p>Yeah, it got me down the rabbit hole where I installed NoiseTorch and I'm actually watching that video with the noise reduction enabled for the output</p>",
        "id": 245859047,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626197409
    },
    {
        "content": "<p>ah that looks neat, I've played with RNNoise before</p>",
        "id": 245859223,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626197497
    },
    {
        "content": "<p>so that might be easier to use</p>",
        "id": 245859245,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626197507
    },
    {
        "content": "<p>It seems to work a bit better with PipeWire than pulseeffects</p>",
        "id": 245859417,
        "sender_full_name": "Laurențiu",
        "timestamp": 1626197567
    },
    {
        "content": "<p>Previous steering issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9580\">https://github.com/rust-analyzer/rust-analyzer/issues/9580</a>. We now have more relevant completions, and slightly fewer type mismatches, I think, but there's been less progress on the other fronts.</p>",
        "id": 249601115,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629126503
    },
    {
        "content": "<p>unfortunately I wasn't able to put as much time into r-a as I wanted to this sprint, I'm hoping to have some more time starting next week</p>",
        "id": 249602125,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629126928
    },
    {
        "content": "<p>same for me <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> Dawer finished the <code>Sized</code> bounds issue though, so now there's just my task remaining on the type mismatch issue (and then I'll have to take a look what remains)</p>",
        "id": 249602336,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1629127012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts</span> and I have been working on a few assists and having fun. We hope to be able to contribute here and there.</p>",
        "id": 249602412,
        "sender_full_name": "rylev",
        "timestamp": 1629127048
    },
    {
        "content": "<p>I've noticed that some crates really suffer from us not handling const generics, even without type mismatch diagnostics. Might be a good item for this sprint?</p>",
        "id": 249602435,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127061
    },
    {
        "content": "<p>The type mismatch metrics didn't really improve with that PR, maybe something's not working correctly there?</p>",
        "id": 249602440,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629127063
    },
    {
        "content": "<p>I'll look into it, but maybe it's also related to the remaining item</p>",
        "id": 249602565,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1629127106
    },
    {
        "content": "<p>hi, i was wondering if there was any way/any plans getting inline type hints working for emacs?</p>",
        "id": 249603220,
        "sender_full_name": "132ikl",
        "timestamp": 1629127404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"433297\">@132ikl</span> they do</p>",
        "id": 249603253,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1629127423
    },
    {
        "content": "<p>Inlay hints are getting upstreamed in the LSP protocol \"soon\", so the other LSP clients should implement them anyway.</p>",
        "id": 249603351,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629127455
    },
    {
        "content": "<p>I wonder where <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> is at <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 249603372,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"433297\">@132ikl</span> see <a href=\"https://emacs-lsp.github.io/lsp-mode/page/lsp-rust-analyzer/#inlay-hints\">https://emacs-lsp.github.io/lsp-mode/page/lsp-rust-analyzer/#inlay-hints</a></p>",
        "id": 249603373,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1629127465
    },
    {
        "content": "<p>let's start brainstorming what to do for the next sprint, I think</p>",
        "id": 249603474,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127507
    },
    {
        "content": "<ul>\n<li>make progress on const generics</li>\n</ul>",
        "id": 249603532,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127534
    },
    {
        "content": "<p>I guess matklad can't join?</p>",
        "id": 249603535,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629127535
    },
    {
        "content": "<p>I'd be happy to commit to finishing up the trait assist codegen things for next sprint (:</p>",
        "id": 249603569,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1629127554
    },
    {
        "content": "<p>How do you make a poll?</p>",
        "id": 249603605,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629127563
    },
    {
        "content": "<p><code>/poll</code></p>",
        "id": 249603655,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629127577
    },
    {
        "content": "<p>we can make a poll once we've gathered some ideas</p>",
        "id": 249603686,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127588
    },
    {
        "content": "<p>wait, how is this true if what florian linked above shows inlay hints working?</p>",
        "id": 249603751,
        "sender_full_name": "132ikl",
        "timestamp": 1629127620
    },
    {
        "content": "<p>er, that was supposed to be a reply to <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span></p>",
        "id": 249603842,
        "sender_full_name": "132ikl",
        "timestamp": 1629127657
    },
    {
        "content": "<p>I've also opened <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9868\">https://github.com/rust-analyzer/rust-analyzer/issues/9868</a> to track some attribute macro related items, perhaps it makes sense to put \"push them over the finish line and turn them on by default\" on the list too?</p>",
        "id": 249603846,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127659
    },
    {
        "content": "<p>new to zulip lol</p>",
        "id": 249603877,
        "sender_full_name": "132ikl",
        "timestamp": 1629127672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"433297\">@132ikl</span> please discuss feature requests outside the steering meeting</p>",
        "id": 249603879,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127674
    },
    {
        "content": "<p>Ye I think improving attribute handling seems like a good item</p>",
        "id": 249603973,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629127702
    },
    {
        "content": "<p>also, I keep getting annoyed that we still cannot handle <code>core::arch</code>, but that might not be worth its own item here</p>",
        "id": 249604100,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127765
    },
    {
        "content": "<p>I guess we also want to carry over the items from the last steering issue?</p>",
        "id": 249604166,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629127800
    },
    {
        "content": "<p>maybe? most of them have already been carried over once, do we want to do that indefinitely?</p>",
        "id": 249604257,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127824
    },
    {
        "content": "<p>we can certainly put them in the poll</p>",
        "id": 249604284,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127839
    },
    {
        "content": "<p>Oh right, some of those are even already</p>",
        "id": 249604293,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629127843
    },
    {
        "content": "<p>maybe opinions on what's important to work on have changed</p>",
        "id": 249604311,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127850
    },
    {
        "content": "<p>Ye that's a good point</p>",
        "id": 249604330,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629127857
    },
    {
        "content": "<p>does anyone else have some items to add?</p>",
        "id": 249604400,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629127895
    },
    {
        "content": "<p>The type mismatches might still be worth looking into, same for the token map thing. These seem more \"actionable\" than the others, so we could carry them over.</p>",
        "id": 249604406,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629127899
    },
    {
        "content": "<p>Sounds like we have:</p>\n<ul>\n<li>Fix remaining type mismatches in rust-analyzer repo (+ type mismatch diagnostic)</li>\n<li>completion performance</li>\n<li>server-side completion sorting and filtering</li>\n<li>replace <code>TokenMap</code> with an abstraction that matches reality</li>\n<li>push procedural attribute macros over the finish line</li>\n<li>support const generics</li>\n<li>support <code>core::arch</code></li>\n</ul>\n<p>now to figure out how to make a poll</p>",
        "id": 249604869,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128091
    },
    {
        "content": "<p>/poll</p>",
        "id": 249604899,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128099
    },
    {
        "content": "<p>sounds like we'll have 3 items this time</p>",
        "id": 249605328,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128311
    },
    {
        "content": "<p>fixing broken windows is already part of our usual process, so I'm not sure if we should add that to the issue</p>",
        "id": 249605370,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128335
    },
    {
        "content": "<p>Fair enough, we don't have a lot marked as such anyway.</p>",
        "id": 249605388,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629128351
    },
    {
        "content": "<p>Ye I think we can leave that out</p>",
        "id": 249605405,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1629128363
    },
    {
        "content": "<p>Okay, opened <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9925\">https://github.com/rust-analyzer/rust-analyzer/issues/9925</a></p>",
        "id": 249605728,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128533
    },
    {
        "content": "<p>Thanks everyone for joining the steering meeting!</p>",
        "id": 249605832,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629128588
    },
    {
        "content": "<p>Oh dear, today's meeting slipped my mind :( My head is a potato. </p>\n<p>On the positive side, it's clear that I am not required for steering meetings!</p>",
        "id": 249609427,
        "sender_full_name": "matklad",
        "timestamp": 1629130253
    },
    {
        "content": "<p>Read through the discussion, it all makes sense to me! This sprint, I was mostly tied up with mending broken windows. I feel we probably want yet another \"reactivish\" sprint -- it seems we have a lot of work to do with accommodating \"feature\" PRs -- at least I am under the impression that we have uptick in contributions (even if we exclude <del>@_<strong>Yoshua Wuyts</strong> &amp; <span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> </del> outliers). </p>\n<p>After that, I think we might want to try to pick some larger task and focus of that though!</p>",
        "id": 249614497,
        "sender_full_name": "matklad",
        "timestamp": 1629132682
    },
    {
        "content": "<p>Hello everyone. The current steering issue is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9925\">https://github.com/rust-analyzer/rust-analyzer/issues/9925</a>. Out of that, we made some good progress on the first and third points, but they're not finished yet (and the work stalled a bit).</p>",
        "id": 255063566,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632754991
    },
    {
        "content": "<p>Regarding attribute macro progress, there is only the inlay hint issue left which I believe requires the TokenMap changes to properly work(though I am not 100% certain on that have to investigate a bit more in that regard).</p>",
        "id": 255063821,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755082
    },
    {
        "content": "<p>Otherwise attribute macro support is basically done I believe? Unless we find some new issues that is <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 255063938,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755123
    },
    {
        "content": "<p>Unrelated to attributes but notable mention that happened since the last meeting is a problematic panic we somehow introduced <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10084\">https://github.com/rust-analyzer/rust-analyzer/issues/10084</a> that doesn't seem to be deterministic <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 255064172,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755191
    },
    {
        "content": "<p>Yup, I think so. But I'd expect a lot of issues for the inlay hints if we enable them right now</p>",
        "id": 255064186,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755198
    },
    {
        "content": "<p>Inlay hints work, just not always</p>",
        "id": 255064247,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755223
    },
    {
        "content": "<p>On the unknown types front, I triaged the remaining ones in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961#issuecomment-899742289\">https://github.com/rust-analyzer/rust-analyzer/issues/8961#issuecomment-899742289</a>, but that's probably old news by now</p>",
        "id": 255064344,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255064247\">said</a>:</p>\n<blockquote>\n<p>Inlay hints work, just not always</p>\n</blockquote>\n<p>Do you think we should turn them on?</p>",
        "id": 255064368,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755266
    },
    {
        "content": "<p>good question</p>",
        "id": 255064495,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755303
    },
    {
        "content": "<p>They are already turned on by default when you enable attribute expansion</p>",
        "id": 255064526,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755315
    },
    {
        "content": "<p>I think attribute macros will always be somewhat second-class until the ecosystem becomes more IDE-friendly</p>",
        "id": 255064572,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755331
    },
    {
        "content": "<p>Yeah, I meant turn on attribute proc macros ^</p>",
        "id": 255064588,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755335
    },
    {
        "content": "<p>oh I see sorry</p>",
        "id": 255064600,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755340
    },
    {
        "content": "<p>so \"inlay hints sometimes don't work\" doesn't seem like too big a deal</p>",
        "id": 255064619,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755347
    },
    {
        "content": "<p>I'd say we should try and see, most IDE things have tests for attributes now as well</p>",
        "id": 255064672,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755373
    },
    {
        "content": "<p>So as Jonas said the pain point is proc-macro implementations not being IDE friendly yet</p>",
        "id": 255064705,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755389
    },
    {
        "content": "<p>Maybe turn them on today, see if people using nightly start complaining, then maybe leave them enabled if not.</p>",
        "id": 255064706,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755390
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  are you around, maybe?)</p>",
        "id": 255064876,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755449
    },
    {
        "content": "<p>Not sure if editing a mention into a message actually pings</p>",
        "id": 255064987,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755483
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 255065073,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755513
    },
    {
        "content": "<p>yup, I am here!</p>",
        "id": 255065075,
        "sender_full_name": "matklad",
        "timestamp": 1632755514
    },
    {
        "content": "<p>and yeah, ping work</p>",
        "id": 255065115,
        "sender_full_name": "matklad",
        "timestamp": 1632755522
    },
    {
        "content": "<p>I do think enabling inlay hinth for macros woudl be a good idea -- they'll give us immediate feedback for when proc mattrs break</p>",
        "id": 255065271,
        "sender_full_name": "matklad",
        "timestamp": 1632755585
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255064706\">said</a>:</p>\n<blockquote>\n<p>Maybe turn them on today, see if people using nightly start complaining, then maybe leave them enabled if not.</p>\n</blockquote>\n<p>Okay, I did just that</p>",
        "id": 255065274,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632755588
    },
    {
        "content": "<p>I'd love us to come back to <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9403\">https://github.com/rust-analyzer/rust-analyzer/issues/9403</a> soon though :)</p>",
        "id": 255065391,
        "sender_full_name": "matklad",
        "timestamp": 1632755634
    },
    {
        "content": "<p>I assume changing our token map should help with inlay hints not working in some/most proc-macros</p>",
        "id": 255065509,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755661
    },
    {
        "content": "<p>Or, rather, I'd love someone (preferably not me) to focus on that -- it seems like a rather important architecture-level thing</p>",
        "id": 255065556,
        "sender_full_name": "matklad",
        "timestamp": 1632755678
    },
    {
        "content": "<p>The current 'node up-mapping' is anything but fancy and probably the reason why inlay hints don't work in a lot of proc-macros</p>",
        "id": 255065599,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755694
    },
    {
        "content": "<p>hmm, I was under the  impression that the tokenmap only matters in very specific circumstances</p>",
        "id": 255065611,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755697
    },
    {
        "content": "<p>More generally, I am not entirely happy how macros fit into our overall compilation pipeline, so straightening that out might be appropriate</p>",
        "id": 255065658,
        "sender_full_name": "matklad",
        "timestamp": 1632755714
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255065611\">said</a>:</p>\n<blockquote>\n<p>hmm, I was under the  impression that the tokenmap only matters in very specific circumstances</p>\n</blockquote>\n<p>It might be irrelevant, I'm not sure anymore been 2 weeks since I worked on inlay hints. I'll try to investigate the matter again.</p>",
        "id": 255065878,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632755786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> it is true that, in terms of UX, our current impl gets us 90% there. But I'd love us to be 100% correct here at least in principle -- absolute correctness is required for merging with rustc, and nine nines correctness is required to emit diagnostics without false postives</p>",
        "id": 255065894,
        "sender_full_name": "matklad",
        "timestamp": 1632755791
    },
    {
        "content": "<p>yeah, that makes sense</p>",
        "id": 255065941,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755810
    },
    {
        "content": "<p>I'm just unsure if the inlay hints issue is caused by this</p>",
        "id": 255065990,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632755827
    },
    {
        "content": "<p>But maybe that's a prioritization question -- <em>should</em> we care about correctness? <em>Should</em> we care about correctness everywhere?</p>",
        "id": 255066023,
        "sender_full_name": "matklad",
        "timestamp": 1632755842
    },
    {
        "content": "<p>Yeah, I don't mean to imply that this'll solve inlay hints bugs, rather \"now that we've built cool features on top of iffy fondation, it might be good time to revisit the foundation, as now usages are in mental L1 cache\"</p>",
        "id": 255066273,
        "sender_full_name": "matklad",
        "timestamp": 1632755917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255065990\">said</a>:</p>\n<blockquote>\n<p>I'm just unsure if the inlay hints issue is caused by this</p>\n</blockquote>\n<p>Does <code>syn</code> keep spans for punctuation tokens? If not then I know the reason why it doesn't work for most.<br>\nI imagine the root cause is me having made a wrong assumption about things when descending nodes(and conveniently trying to blame our token map for this :^)).</p>",
        "id": 255066581,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632756018
    },
    {
        "content": "<p>I think syn should preserve all spans</p>",
        "id": 255066969,
        "sender_full_name": "matklad",
        "timestamp": 1632756160
    },
    {
        "content": "<p>Ye I would think so as well</p>",
        "id": 255067014,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632756176
    },
    {
        "content": "<p><em>but</em> I think span preservation isn't necessary visible for us</p>",
        "id": 255067021,
        "sender_full_name": "matklad",
        "timestamp": 1632756177
    },
    {
        "content": "<p>I think as a first easy step we can implement all the stubbed-out proc_macro methods</p>",
        "id": 255067114,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756213
    },
    {
        "content": "<p>Ie, if you \"clone\" the token with the same span, location and contents, our token map won't resolve it (which is the core issue).</p>",
        "id": 255067117,
        "sender_full_name": "matklad",
        "timestamp": 1632756214
    },
    {
        "content": "<p>If you copy the <code>Span</code> it should work though</p>",
        "id": 255067276,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756265
    },
    {
        "content": "<p>since that's our <code>TokenId</code></p>",
        "id": 255067294,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756273
    },
    {
        "content": "<p>our somewhat hacky <code>proc_macro</code> implementation is why I initially wanted to test that in our proc macro unit tests</p>",
        "id": 255067498,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756350
    },
    {
        "content": "<p>but I guess we can still write a full test for this, or something</p>",
        "id": 255067571,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255067114\">said</a>:</p>\n<blockquote>\n<p>I think as a first easy step we can implement all the stubbed-out proc_macro methods</p>\n</blockquote>\n<p>Can we even implement <code>Span::join</code> with our current implementation? As in can we join two TokenIds?</p>",
        "id": 255067580,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632756372
    },
    {
        "content": "<p>(I am on vacation and hence can't contribute much today <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 255067595,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1632756381
    },
    {
        "content": "<p>No, <code>Span::join</code> does require the new token map abstraction</p>",
        "id": 255067714,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756432
    },
    {
        "content": "<p>But IIRC things like <code>set_span</code> are unimplemented too</p>",
        "id": 255067742,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756444
    },
    {
        "content": "<p>yeah <code>set_span</code>/<code>with_span</code> simply does nothing <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/ffcaceb80f230cffac51bd1e0d206c18f89a15e5/crates/proc_macro_srv/src/abis/abi_1_56/rustc_server.rs#L494-L501\">https://github.com/rust-analyzer/rust-analyzer/blob/ffcaceb80f230cffac51bd1e0d206c18f89a15e5/crates/proc_macro_srv/src/abis/abi_1_56/rustc_server.rs#L494-L501</a></p>",
        "id": 255068027,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1632756542
    },
    {
        "content": "<p>There's also <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10235\">https://github.com/rust-analyzer/rust-analyzer/issues/10235</a>, which will become a problem soon</p>",
        "id": 255068322,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632756642
    },
    {
        "content": "<p>So what are the plans for the next sprint?</p>",
        "id": 255068950,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632756855
    },
    {
        "content": "<p>Do we make a poll?</p>",
        "id": 255068967,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632756861
    },
    {
        "content": "<p>I'd say so yes</p>",
        "id": 255069035,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632756877
    },
    {
        "content": "<p>/poll  What should we work on?</p>",
        "id": 255069111,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632756904
    },
    {
        "content": "<p>I'm not sure about this (I've written less Rust lately), but does it seem to anyone else that RA got visibly slower? We had quite a bit of performance improvements, but it feels slower when I use it.</p>",
        "id": 255069770,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757150
    },
    {
        "content": "<p>Completions do feel slower to me</p>",
        "id": 255069877,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757190
    },
    {
        "content": "<p>I am annoyed by completion perfomance, yeah</p>",
        "id": 255069909,
        "sender_full_name": "matklad",
        "timestamp": 1632757201
    },
    {
        "content": "<p>Highlighting, too, seems slower than before. Or maybe it's the same and I'm only noticing it now?</p>",
        "id": 255070058,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757250
    },
    {
        "content": "<p>Well, in rust-analyzer repo it's mostly OK, but in NEAR it sometimes lags enough to not show auto-popup,  which is jarring.</p>",
        "id": 255070081,
        "sender_full_name": "matklad",
        "timestamp": 1632757257
    },
    {
        "content": "<p>Highlighting does feel kinda slow at times as well ye</p>",
        "id": 255070195,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757312
    },
    {
        "content": "<p>Unsure whether it got worse or not though</p>",
        "id": 255070209,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757318
    },
    {
        "content": "<p><code>391ms - highlight</code> right. So on RA highlighting seems to take about 400 ms after typing one letter, most of that spent in <code>descend_into_macros</code></p>",
        "id": 255070588,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757462
    },
    {
        "content": "<p>While typing inside or outside a macro invocation?</p>",
        "id": 255070809,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757552
    },
    {
        "content": "<p>I did change a lot of code in that function over the past weeks</p>",
        "id": 255070883,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757573
    },
    {
        "content": "<blockquote>\n<p>most of that spent in descend_into_macros</p>\n</blockquote>\n<p>Note that <code>descend_into_macros</code> currently triggers type inference (for no good reason), so this doesn't tell us much</p>",
        "id": 255070905,
        "sender_full_name": "matklad",
        "timestamp": 1632757588
    },
    {
        "content": "<p>Outside, e.g. in <code>Config::json_schema</code> from <code>config.rs</code></p>",
        "id": 255070909,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757588
    },
    {
        "content": "<p>So that we return all mapped to tokens instead of just the first now</p>",
        "id": 255070911,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757589
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255070905\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>most of that spent in descend_into_macros</p>\n</blockquote>\n<p>Note that <code>descend_into_macros</code> currently triggers type inference (for no good reason), so this doesn't tell us much</p>\n</blockquote>\n<p>That's on a repeated edit, so probably not related to inference. Type one char, remove it, type it again</p>",
        "id": 255070958,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757615
    },
    {
        "content": "<p>I also noticed very very slow highlighting in <code>sourcegen_ast</code> due to the <code>quote</code> macro invocations even though we shouldn't even be doing a full highlight on every typed char I presume<br>\n4672ms for one changed character <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 255071284,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757729
    },
    {
        "content": "<p>I've filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10370\">https://github.com/rust-analyzer/rust-analyzer/issues/10370</a>, feel free to edit</p>",
        "id": 255071901,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632757973
    },
    {
        "content": "<p>Huh we do the same amount of <code>descend_into_macros</code> calls for full and delta-only highlighting, this seems wrong?</p>",
        "id": 255071903,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632757974
    },
    {
        "content": "<p>Not really -- we don't do real deltas anywhere</p>",
        "id": 255071980,
        "sender_full_name": "matklad",
        "timestamp": 1632758004
    },
    {
        "content": "<p>The smallest change granularity salsa has is one file</p>",
        "id": 255072033,
        "sender_full_name": "matklad",
        "timestamp": 1632758023
    },
    {
        "content": "<p><del>Right, though its still odd to me because the editor can request a partial highlight</del></p>",
        "id": 255072243,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632758094
    },
    {
        "content": "<p><del>But I just realized we probably highlight the entire file still for those because we take the <code>covering_range</code> of that which most likely evaluates to the <code>SourceFile</code></del></p>",
        "id": 255072315,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632758125
    },
    {
        "content": "<p>Even inlay  hints spend some good amount of time in <code>descend_into_macros</code>, though there's no macro in the code I have on screen.</p>",
        "id": 255072505,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632758183
    },
    {
        "content": "<p>Need to double check, but I think <code>descend_into_macros</code> is just the unfortunate fn that triggers type inference and a host of other processing.</p>",
        "id": 255072752,
        "sender_full_name": "matklad",
        "timestamp": 1632758267
    },
    {
        "content": "<p>I don't think it's that. It happens on every change, not only on the first one</p>",
        "id": 255072912,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632758314
    },
    {
        "content": "<p>So it isn't necessary slow, it's just the easiest to blame thing! Would be cool to fix it -- we <em>can</em> descend into macros pre type-inference, so we need to make sure we don't accidently trigger ty</p>",
        "id": 255072916,
        "sender_full_name": "matklad",
        "timestamp": 1632758316
    },
    {
        "content": "<p>There's a profile in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10369\">https://github.com/rust-analyzer/rust-analyzer/issues/10369</a></p>",
        "id": 255072979,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632758339
    },
    {
        "content": "<p>Looks like we need some more profiling scopes there?</p>",
        "id": 255073333,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632758442
    },
    {
        "content": "<p>curions!</p>\n<p>here's what I see</p>\n<div class=\"codehilite\"><pre><span></span><code>   77ms - handle_inlay_hints\n       77ms - inlay_hints\n           56ms - descend_into_macros\n               56ms - Semantics::analyze_impl\n                   21ms - SourceBinder::to_module_def\n                       21ms - crate_def_map:wait\n                        0   - crate_def_map:wait (1 calls)\n                        0   - relevant_crates (1 calls)\n                   34ms - infer:wait @ ALL_COSTS\n</code></pre></div>",
        "id": 255073418,
        "sender_full_name": "matklad",
        "timestamp": 1632758475
    },
    {
        "content": "<p>That <code>82ms - ???</code> in your trace is definitelly a bug though</p>",
        "id": 255073496,
        "sender_full_name": "matklad",
        "timestamp": 1632758505
    },
    {
        "content": "<p>Is that a first change? Try my test -- add a character, remove it, add it again</p>",
        "id": 255073511,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632758513
    },
    {
        "content": "<p>as in, we shouldn't have ??? and should add the traces</p>",
        "id": 255073515,
        "sender_full_name": "matklad",
        "timestamp": 1632758515
    },
    {
        "content": "<p>yeah, thts for edits</p>",
        "id": 255073760,
        "sender_full_name": "matklad",
        "timestamp": 1632758594
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 255074384,
        "sender_full_name": "matklad",
        "timestamp": 1632758795
    },
    {
        "content": "<p>Let's add single-threaded mode to rust-analyzer, where we spawn only one background thread for syntax highlighing and stuff.</p>",
        "id": 255074478,
        "sender_full_name": "matklad",
        "timestamp": 1632758828
    },
    {
        "content": "<p>That should remove <code>:wait</code>s from the profile, and make it much easier to understand.</p>",
        "id": 255074526,
        "sender_full_name": "matklad",
        "timestamp": 1632758850
    },
    {
        "content": "<p><code>descend_into_macros_impl</code> seems relatively gnarly :(</p>",
        "id": 255074733,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632758916
    },
    {
        "content": "<p>Ye I should probably add some comments to that function body</p>",
        "id": 255074921,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632758992
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/ffcaceb80f230cffac51bd1e0d206c18f89a15e5/crates/rust-analyzer/src/thread_pool.rs#L12\">https://github.com/rust-analyzer/rust-analyzer/blob/ffcaceb80f230cffac51bd1e0d206c18f89a15e5/crates/rust-analyzer/src/thread_pool.rs#L12</a> -- is the place where we can select only one thread</p>",
        "id": 255075437,
        "sender_full_name": "matklad",
        "timestamp": 1632759168
    },
    {
        "content": "<blockquote>\n<p>Let's add single-threaded mode to rust-analyzer, where we spawn only one background thread for syntax highlighing and stuff.</p>\n</blockquote>\n<p>I can't believe it took me this many years to figure this out. This makes the trace so much more readables</p>",
        "id": 255076193,
        "sender_full_name": "matklad",
        "timestamp": 1632759466
    },
    {
        "content": "<p>In particular, this clearly show that I am wrong and that <span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> is correct -- descend into macros is the hot thing</p>",
        "id": 255076435,
        "sender_full_name": "matklad",
        "timestamp": 1632759562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/255074921\">said</a>:</p>\n<blockquote>\n<p>Ye I should probably add some comments to that function body</p>\n</blockquote>\n<p>Heh, that's a nice queue you've got there.</p>",
        "id": 255076621,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632759631
    },
    {
        "content": "<p>Isn't this kind of quadratic? We call it for every token and it goes up in the syntax tree to look at the ancestors.</p>",
        "id": 255078581,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632760398
    },
    {
        "content": "<p>I think it somewhat is? there isn't much we can do about this though, we have to walk up the ancestors everytime to find possible macro invocations</p>",
        "id": 255078975,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632760557
    },
    {
        "content": "<p>Then maybe it's not the best API? Could we do a single pass (for e.g. highlighting) and keep a macro call stack?</p>",
        "id": 255080481,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632761117
    },
    {
        "content": "<p>I think O(N^2) in the number of ancestods shouldn't be too bad -- trees are mostly shallow</p>",
        "id": 255080809,
        "sender_full_name": "matklad",
        "timestamp": 1632761258
    },
    {
        "content": "<p>I mean, if we go through the ancestors of N tokens, it's N * O(depth), right?</p>",
        "id": 255082487,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632761906
    },
    {
        "content": "<p>Right, and that shouldn't be too bad, I think. But maybe I am wrong.</p>",
        "id": 255082645,
        "sender_full_name": "matklad",
        "timestamp": 1632761980
    },
    {
        "content": "<p>Hmm, actually <code>traverse</code> seems to only call <code>descend_into_tokens</code> if it's in a macro, so why is it spending so much time for non-macro code?</p>",
        "id": 255082682,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632761999
    },
    {
        "content": "<p>Well the function does allocate now, always</p>",
        "id": 255085137,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632762938
    },
    {
        "content": "<p>Should probably use a <code>SmallVec&lt;_, 1&gt;</code> instead of a vec</p>",
        "id": 255085179,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632762955
    },
    {
        "content": "<p>for the queue that is</p>",
        "id": 255085241,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632762965
    },
    {
        "content": "<p>I meant it's more of a stack</p>",
        "id": 255085315,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632763000
    },
    {
        "content": "<p>oh right it is</p>",
        "id": 255085344,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763014
    },
    {
        "content": "<p>not that it really matters</p>",
        "id": 255085366,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763023
    },
    {
        "content": "<p>Yeah, just a bit funny</p>",
        "id": 255085399,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632763036
    },
    {
        "content": "<p>Ye, was wondering what you meant with your comment but now I see, whoops</p>",
        "id": 255085424,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763048
    },
    {
        "content": "<p>Actually, doesn't it reorder the tokens? Or it works because it doesn't see nested macros there?</p>",
        "id": 255086693,
        "sender_full_name": "Laurențiu",
        "timestamp": 1632763565
    },
    {
        "content": "<p>It changes the order of the tokens we return in the end</p>",
        "id": 255086808,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763619
    },
    {
        "content": "<p>but otherwise it doesn't matter</p>",
        "id": 255086817,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763623
    },
    {
        "content": "<p>Since we derive the expansion context and all from just the token itself</p>",
        "id": 255086871,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763645
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 255087038,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763714
    },
    {
        "content": "<blockquote>\n<p>I meant it's more of a stack</p>\n</blockquote>\n<p>we usually call this thing <code>work</code> or worklist</p>",
        "id": 255087359,
        "sender_full_name": "matklad",
        "timestamp": 1632763837
    },
    {
        "content": "<p>Ye I think I was thinking of work<strong>queue</strong> when I wrote that</p>",
        "id": 255087553,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632763918
    },
    {
        "content": "<p>On the note of various issues coming back haunting, I've got a several issues with RA process stuck(?) and consuming a lot of CPU, making my laptop fans spin :) </p>\n<p>I'm not sure whether that's a project, macOs or something else to blame and I have no reliable repro too, it just happens.<br>\nOne day it won't catch me off-guard and I'll have time to record the trace, but maybe somebody else experience this, just to raise the topic.</p>",
        "id": 255100683,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1632768788
    },
    {
        "content": "<p>Hello everyone, steering meeting today. <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10370\">https://github.com/rust-analyzer/rust-analyzer/issues/10370</a>. From that we've extended the proc macro API to be compatible with more crates and <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> made some good progress on <a href=\"https://github.com/rust-lang/rust/issues/10369\">#10369</a>, which I'm not sure it's fully fixed but should be in a better shape now.</p>",
        "id": 260668590,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636383812
    },
    {
        "content": "<p>r-a issue link: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10369\">https://github.com/rust-analyzer/rust-analyzer/issues/10369</a> (do we still not have a linkifier shorthand for r-a?)</p>",
        "id": 260668848,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636383919
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10369\">rust-analyzer#10369</a></p>",
        "id": 260668901,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636383943
    },
    {
        "content": "<p>Highlighting should be plenty fast again, that is as fast as before the multi token macro descension changes, completions havent improved too much</p>",
        "id": 260668918,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636383950
    },
    {
        "content": "<p>Other highlights of the sprint were LSIF support, a good number of new assists and lots of macro and IDE-related fixes.</p>",
        "id": 260669275,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384091
    },
    {
        "content": "<p>(and maybe some other stuff I'm missing)</p>",
        "id": 260669356,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384131
    },
    {
        "content": "<p>Seems like there isn't much to chat about this time</p>",
        "id": 260669675,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636384282
    },
    {
        "content": "<p>If there's no other stuff to discuss, I'd like to nominate <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10483\">rust-analyzer#10483</a> for the next sprint, and maybe also simplifying our client-side testing setup. This should pretty much clean up our dependency tree, which feels moderately important these days with npm coming so often in the news.</p>",
        "id": 260669683,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384284
    },
    {
        "content": "<p>Sounds reasonable</p>",
        "id": 260669839,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384344
    },
    {
        "content": "<p>I'm still busy with other projects, so I haven't managed to look into <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10084\">https://github.com/rust-analyzer/rust-analyzer/issues/10084</a> (which still isn't fixed, even after the salsa update). If someone else want to take a look that would be great, if not then I'll probably be able to look into it more in a week or two.</p>",
        "id": 260669892,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636384371
    },
    {
        "content": "<p>I haven't seen that panic for a week or two now interestingly</p>",
        "id": 260670110,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384455
    },
    {
        "content": "<p>Yeah, I haven't seen it either, maybe it's harder to trigger</p>",
        "id": 260670152,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384476
    },
    {
        "content": "<p>Or enough code shifted around for us to not hit it anymore <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 260670192,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384495
    },
    {
        "content": "<p>I see it pretty often. It seems to require a change in the crate graph, so adding an example or a dependency can cause it.</p>",
        "id": 260670304,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636384538
    },
    {
        "content": "<p>Ah, ye I do recall that causing it pretty often before</p>",
        "id": 260670385,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384565
    },
    {
        "content": "<p>I can look into it as well if I get some pointers how otherwise, as this is pretty much confirmed a salsa issue right?</p>",
        "id": 260670443,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384593
    },
    {
        "content": "<p>Do we have other ideas for the next sprint? Should we carry over some stuff from the last one?</p>",
        "id": 260670741,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384721
    },
    {
        "content": "<p>Got nothing to propose, will probably look some more into completion performance so we can carry over that part I guess.</p>",
        "id": 260670948,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636384811
    },
    {
        "content": "<p>/poll Items for the next sprint</p>",
        "id": 260671090,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636384882
    },
    {
        "content": "<p>Okay, I guess we have three items for the next sprint :-).</p>",
        "id": 260672820,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636385581
    },
    {
        "content": "<p>Very quiet round this time <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 260672890,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636385619
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10724\">rust-analyzer#10724</a></p>",
        "id": 260673044,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636385672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/260670443\">said</a>:</p>\n<blockquote>\n<p>I can look into it as well if I get some pointers how otherwise, as this is pretty much confirmed a salsa issue right?</p>\n</blockquote>\n<p>Not anymore, but there definitely <em>was</em> some salsa interning bug. I <em>hope</em> that one is now fixed.</p>",
        "id": 260673052,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636385676
    },
    {
        "content": "<p>If you want to verify that, you can check against a custom interner, like I did to find the original salsa bug</p>",
        "id": 260673152,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636385720
    },
    {
        "content": "<p>But at this point it seems more likely to be a bug with how we reload the project graph or something like that.</p>",
        "id": 260673262,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1636385765
    },
    {
        "content": "<p>Hello! Previous issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10724\">https://github.com/rust-analyzer/rust-analyzer/issues/10724</a></p>",
        "id": 265582201,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016142
    },
    {
        "content": "<p>With holidays coming up we should probably target little work for this sprint <span aria-label=\"santa\" class=\"emoji emoji-1f385\" role=\"img\" title=\"santa\">:santa:</span></p>",
        "id": 265582565,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1640016299
    },
    {
        "content": "<p>Yeah....  I personally continue to try to chip at shared parser library...</p>",
        "id": 265582632,
        "sender_full_name": "matklad",
        "timestamp": 1640016340
    },
    {
        "content": "<p>I'd like to tackle <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11026\">https://github.com/rust-analyzer/rust-analyzer/issues/11026</a> and the follow-up cleanups, including <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10371\">r-a#10371</a>, but I'm not sure that's feasible (because of the Code compatibility thing)</p>",
        "id": 265582637,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016343
    },
    {
        "content": "<p>I guess, I'll call the thing <code>sisyphus</code> once it is finished</p>",
        "id": 265582705,
        "sender_full_name": "matklad",
        "timestamp": 1640016370
    },
    {
        "content": "<p>oh, and the fully library ified and merged <code>rustc/rust-analyzer</code> theseus, obviously</p>",
        "id": 265582738,
        "sender_full_name": "matklad",
        "timestamp": 1640016395
    },
    {
        "content": "<p>Might make sense to check some of the bigger distros and their shipped Code versions?</p>",
        "id": 265582919,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1640016475
    },
    {
        "content": "<p>I'd rather avoid a \"Debian ships Code 1.20\" thing</p>",
        "id": 265583006,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016504
    },
    {
        "content": "<p>And maybe also see if there's any low-hanging fruit in <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961\">https://github.com/rust-analyzer/rust-analyzer/issues/8961</a>, but I doubt so</p>",
        "id": 265583137,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016573
    },
    {
        "content": "<p>Would be nice to get that done but I don't grasp type inference enough to be able to work on that personally</p>",
        "id": 265583298,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1640016654
    },
    {
        "content": "<p>I might be able to make some more progress again</p>",
        "id": 265583323,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1640016668
    },
    {
        "content": "<p>We need to <code>impl Clone for FloDiebold</code></p>",
        "id": 265583345,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016686
    },
    {
        "content": "<p>Any other ideas for a slightly easier sprint?</p>",
        "id": 265583692,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016850
    },
    {
        "content": "<p>/poll things to do while on vacation</p>",
        "id": 265583958,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640016982
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11068\">r-a#11068</a> just in case</p>",
        "id": 265585291,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640017674
    },
    {
        "content": "<p>Looks like we ran out of steam pretty quickly <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>. I'll still be around, but have some nice holidays! <span aria-label=\"snowflake\" class=\"emoji emoji-2744\" role=\"img\" title=\"snowflake\">:snowflake:</span></p>",
        "id": 265585995,
        "sender_full_name": "Laurențiu",
        "timestamp": 1640017990
    },
    {
        "content": "<p>Hello! Steering meeting time. Previous issue was <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11068\">https://github.com/rust-analyzer/rust-analyzer/issues/11068</a>. At least we've managed to tick off something from there, but not without some pretty bad fallout on the VS Code side. But it was pretty uneventful otherwise, especially for me.</p>",
        "id": 270055272,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643644875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span> from Facebook is with us today <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 270055770,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645037
    },
    {
        "content": "<p>hello! nice to meet y’all, but i think we spoke in some form at some time. facebook pays me to work on the rust IDE/development experience, and i’ve just started that job.</p>",
        "id": 270055973,
        "sender_full_name": "David Barsky",
        "timestamp": 1643645101
    },
    {
        "content": "<p>Haven't done too much these past weeks either since my focus was on other things, except for a few fixes here and there</p>",
        "id": 270056364,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643645219
    },
    {
        "content": "<p>I'd love to make some progress on <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8676\">https://github.com/rust-analyzer/rust-analyzer/issues/8676</a> if I can manage to though, since that is still a blocker for me being able to enable the <code>addCallParenthesis</code> setting for completions and I'd really like to be able to enable that sometime <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 270056638,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643645291
    },
    {
        "content": "<p>We've still had a couple of nice PRs. I think some const expression support was the most user-visible. The recent parallel cache priming is nice, too. I'm curious if people will complain about macro expansion perf now that we actually respect the recursion limit.</p>",
        "id": 270056763,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198819\">David Barsky</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270055973\">said</a>:</p>\n<blockquote>\n<p>hello! nice to meet y’all, but i think we spoke in some form at some time. facebook pays me to work on the rust IDE/development experience, and i’ve just started that job.</p>\n</blockquote>\n<p>(i should be clear as to why i'm here to set expectations: i'm just listening in; i haven't actually started working yet.)</p>",
        "id": 270056924,
        "sender_full_name": "David Barsky",
        "timestamp": 1643645386
    },
    {
        "content": "<p>It also seems to me that we're getting more and more bug reports, sometimes I can't even keep up with the emails. (I think <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> said he actually disabled GitHub issue notifications <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>.)</p>",
        "id": 270057055,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645415
    },
    {
        "content": "<p>Ye, we are definitely getting more than usual, we are also starting to slowly accumulate more broken windows(16 issues are tagged with it currently)<br>\nWe also seems to ease in on the 1000 open issues mark <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 270057193,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643645460
    },
    {
        "content": "<p>Out of those, I'm somewhat worried about <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10051\">https://github.com/rust-analyzer/rust-analyzer/issues/10051</a>. I tried to look into it for a bit, but couldn't figure out what's happening. We get the <code>cargo check</code> diagnostics, but I think we stop sending the right ones to the client.</p>",
        "id": 270057422,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645523
    },
    {
        "content": "<p>It doesn't happen every time, but I managed to reproduce it in a couple of tries.</p>",
        "id": 270057908,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645687
    },
    {
        "content": "<p>The <code>select</code> macro in general was one that made r-a very unhappy if I remember correctly <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 270058092,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643645750
    },
    {
        "content": "<p>at the risk of derailing the meeting—what would potentially cause that bug to happen, from ra's perspective? are there thing that could reduce the blast radius of bad parses like that, or...?</p>",
        "id": 270058269,
        "sender_full_name": "David Barsky",
        "timestamp": 1643645797
    },
    {
        "content": "<p>(Unrelated, I hope I'll finally find some time to change our Windows release package to a ZIP file, so we can include the PDB. But I've been somewhat burnt out from CI and packaging changes <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>).</p>",
        "id": 270058325,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645816
    },
    {
        "content": "<p>(if the answer is too long, feel free to explain after.)</p>",
        "id": 270058326,
        "sender_full_name": "David Barsky",
        "timestamp": 1643645816
    },
    {
        "content": "<p>I think we had some troubles with allocating diagnostics very oddly in the past(not sure if we fixed that by now), so I could imagine something similar being at work here. Otherwise I have no idea either.</p>",
        "id": 270058444,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643645859
    },
    {
        "content": "<p>One thing that sometimes happens (but probably not this time) is that we end up looping trying to do type inference and trait solving (the latter, mostly), so in the end we stop responding to client requests and you can't save if you have \"Format on save\" enabled, features no longer work, stuff like that.</p>",
        "id": 270058675,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643645937
    },
    {
        "content": "<p>This has bitten a lot of users, it would be nice to make it more visible (users generally report these as \"RA has stopped working\", not as \"100% CPU usage\")</p>",
        "id": 270058974,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646053
    },
    {
        "content": "<p>gotcha, ty</p>",
        "id": 270059035,
        "sender_full_name": "David Barsky",
        "timestamp": 1643646080
    },
    {
        "content": "<p>The diagnostics are pretty tricky IMO, I recently ran into <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11273\">https://github.com/rust-analyzer/rust-analyzer/issues/11273</a> too</p>",
        "id": 270059064,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646095
    },
    {
        "content": "<p>Hey all <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>\n<p>I've also noticed the accumulation of broken windows, so I'd propose adding that to the next sprint.</p>\n<p>As far as feature requests go, this is still the highest-voted one: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8654\">https://github.com/rust-analyzer/rust-analyzer/issues/8654</a>. It requires lowering of anonymous constants and proper support for const generics. Might be too much for a single sprint, but it would be great to make some progress here.</p>",
        "id": 270059410,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1643646211
    },
    {
        "content": "<p>Oh my, 54 <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> on that isuse</p>",
        "id": 270059555,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643646254
    },
    {
        "content": "<p>Yeah, I think the entire Rust gamedev community must hate us for that one</p>",
        "id": 270059597,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646275
    },
    {
        "content": "<p>Yes, that issue affects much of gamedev, and also scientific computing</p>",
        "id": 270059666,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1643646301
    },
    {
        "content": "<p>Mostly the nalgebra users I assume</p>",
        "id": 270059679,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643646306
    },
    {
        "content": "<blockquote>\n<p>I'm just thinking it would be pretty reasonable-- when/if rust-analyzer becomes first-party-- to block language features from entering stable rust until they're supported by rust-analyzer. This is the bar that well-supported languages set.</p>\n</blockquote>\n<p>That would be.. fun to see</p>",
        "id": 270059782,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646351
    },
    {
        "content": "<p>(guessing that it'd require additional sharing of code between r-a and rustc to be an effective bar?)</p>",
        "id": 270059974,
        "sender_full_name": "David Barsky",
        "timestamp": 1643646414
    },
    {
        "content": "<p>Sounds like a great plan on getting more people to work on r-a <span aria-label=\"silence\" class=\"emoji emoji-1f910\" role=\"img\" title=\"silence\">:silence:</span></p>",
        "id": 270059983,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1643646417
    },
    {
        "content": "<p>Well.. so do we make a list of stuff to look into next?</p>",
        "id": 270060169,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646487
    },
    {
        "content": "<p>/poll stuff to look into next</p>",
        "id": 270060190,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646498
    },
    {
        "content": "<p>Third one being <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961\">r-a#8961</a>, I didn't realize you can't edit poll entries</p>",
        "id": 270060477,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span> any specific pain points that you've noticed? Besides the tracing thing, I guess. Feel free to add them above.</p>",
        "id": 270060562,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> some folks who work on the hack language (<a href=\"https://github.com/facebook/hhvm/tree/master/hphp/hack\">https://github.com/facebook/hhvm/tree/master/hphp/hack</a>) have noticed that there's somewhat... unfortunate startup times in rust analyzer, ranging anywhere from 10 to 30 seconds. they're requesting that i dedicate some engineering work to potentially speed that up</p>",
        "id": 270060857,
        "sender_full_name": "David Barsky",
        "timestamp": 1643646755
    },
    {
        "content": "<p>(but it's early days, and i haven't really asked questions along the lines of \"what do you need fixed in rust analyzer _specifically_; most of the low hanging fruit are not in ra.)</p>",
        "id": 270060969,
        "sender_full_name": "David Barsky",
        "timestamp": 1643646799
    },
    {
        "content": "<p>One thing to be aware of: if the status bar says \"Indexing\", the project is actually loaded.</p>",
        "id": 270061148,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646853
    },
    {
        "content": "<p>Broken windows: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22\">https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3A%22Broken+Window%22</a></p>",
        "id": 270061367,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643646920
    },
    {
        "content": "<p>I think we should try to prioritize them if they keep piling up. I <em>think</em> that label means different things, but something like \"Memory Usage (Clears Database) panicks\" is probably less important than \"diagnostics stop working randomly\"</p>",
        "id": 270061676,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647022
    },
    {
        "content": "<p>Re <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9932\">r-a#9932</a>, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> do you know if we can maybe patch the PDB path in the executable?</p>",
        "id": 270061880,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647085
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270061676\">said</a>:</p>\n<blockquote>\n<p>I think we should try to prioritize them if they keep piling up. I <em>think</em> that label means different things, but something like \"Memory Usage (Clears Database) panicks\" is probably less important than \"diagnostics stop working randomly\"</p>\n</blockquote>\n<p>if there's a bunch of those issues with similar contributors factors/\"root causes\", it would be interesting to dig in and find out</p>",
        "id": 270062601,
        "sender_full_name": "David Barsky",
        "timestamp": 1643647328
    },
    {
        "content": "<p>I <em>think</em> these ones mostly independent</p>",
        "id": 270062839,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647416
    },
    {
        "content": "<p>Maybe next time we'll vote on them individually, but I just listed them all: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11387\">https://github.com/rust-analyzer/rust-analyzer/issues/11387</a>. Feel free to remove the unactionable or unimportant ones.</p>",
        "id": 270062891,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647436
    },
    {
        "content": "<p>Any other topics?</p>",
        "id": 270063342,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270062891\">said</a>:</p>\n<blockquote>\n<p>Maybe next time we'll vote on them individually, but I just listed them all: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11387\">https://github.com/rust-analyzer/rust-analyzer/issues/11387</a>. Feel free to remove the unactionable or unimportant ones.</p>\n</blockquote>\n<p>i'll go through them.</p>",
        "id": 270063630,
        "sender_full_name": "David Barsky",
        "timestamp": 1643647697
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270063342\">said</a>:</p>\n<blockquote>\n<p>Any other topics?</p>\n</blockquote>\n<p>I guess not. See you in the next meeting on March 14, then.</p>",
        "id": 270063898,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198819\">David Barsky</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270060857\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> some folks who work on the hack language (<a href=\"https://github.com/facebook/hhvm/tree/master/hphp/hack\">https://github.com/facebook/hhvm/tree/master/hphp/hack</a>) have noticed that there's somewhat... unfortunate startup times in rust analyzer, ranging anywhere from 10 to 30 seconds. they're requesting that i dedicate some engineering work to potentially speed that up</p>\n</blockquote>\n<p>Is there a <code>rust-project.json</code> or some way we could try to load it?</p>",
        "id": 270064113,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643647901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270064113\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198819\">David Barsky</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270060857\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> some folks who work on the hack language (<a href=\"https://github.com/facebook/hhvm/tree/master/hphp/hack\">https://github.com/facebook/hhvm/tree/master/hphp/hack</a>) have noticed that there's somewhat... unfortunate startup times in rust analyzer, ranging anywhere from 10 to 30 seconds. they're requesting that i dedicate some engineering work to potentially speed that up</p>\n</blockquote>\n<p>Is there a <code>rust-project.json</code> or some way we could try to load it?</p>\n</blockquote>\n<p>the person who mentioned this is onboarding two interns right now, but i will ask them about it to get a reproduction.</p>",
        "id": 270064998,
        "sender_full_name": "David Barsky",
        "timestamp": 1643648184
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling\">https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/dev#profiling</a> might help</p>",
        "id": 270065394,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643648330
    },
    {
        "content": "<p>yeah, i'll try to get a profile as well.</p>",
        "id": 270067085,
        "sender_full_name": "David Barsky",
        "timestamp": 1643648915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270061880\">said</a>:</p>\n<blockquote>\n<p>Re <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9932\">r-a#9932</a>, <span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> do you know if we can maybe patch the PDB path in the executable?</p>\n</blockquote>\n<p>It seems you can pass <code>/PDBALTPATH</code> to the linker to change the path recorded in the <code>.dll</code> file without changing the actual location the <code>.pdb</code> file is written to. You can also use <code>/PDB</code> to change the location to which the <code>.pdb</code> file is written to. As for changing the path in an already linked dll that should be possible, though I can't find any existing program to do this. It seems to be included in the <code>IMAGE_DEBUG_DIRECTORY</code> section, so removing this section may work.</p>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/reference/pdbaltpath-use-alternate-pdb-path?view=msvc-170\">https://docs.microsoft.com/en-us/cpp/build/reference/pdbaltpath-use-alternate-pdb-path?view=msvc-170</a><br>\n<a href=\"https://docs.microsoft.com/en-us/cpp/build/reference/pdb-use-program-database?view=msvc-170\">https://docs.microsoft.com/en-us/cpp/build/reference/pdb-use-program-database?view=msvc-170</a><br>\n<a href=\"https://www.mandiant.com/resources/definitive-dossier-of-devilish-debug-details-part-one-pdb-paths-malware\">https://www.mandiant.com/resources/definitive-dossier-of-devilish-debug-details-part-one-pdb-paths-malware</a></p>",
        "id": 270067361,
        "sender_full_name": "bjorn3",
        "timestamp": 1643649010
    },
    {
        "content": "<p>Removing it might not be ideal (what if you want to debug a proc macro server crash?), but I think it's the most reasonable thing to do. But <code>/PDB</code> might work, too.</p>",
        "id": 270067587,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643649107
    },
    {
        "content": "<p>Editing it rather than removing it should also be possible I think.</p>",
        "id": 270068210,
        "sender_full_name": "bjorn3",
        "timestamp": 1643649339
    },
    {
        "content": "<p>got a profile of the hack profile: <a href=\"https://gist.github.com/davidbarsky/7263eb19864b31bdfe29722524dbc63e\">https://gist.github.com/davidbarsky/7263eb19864b31bdfe29722524dbc63e</a>.</p>",
        "id": 270095794,
        "sender_full_name": "David Barsky",
        "timestamp": 1643659396
    },
    {
        "content": "<p>if i'm interpreting things correctly, rust analyzer is spending a lot of time in trait solving?</p>",
        "id": 270095861,
        "sender_full_name": "David Barsky",
        "timestamp": 1643659423
    },
    {
        "content": "<p>That's probably to be expected, but <code>analysis-stats</code> is somewhat of a worst case because it runs for everything. For example, on RA itself  I get 45s inference, 54s total, but it doesn't mean it takes 45 or 54 seconds to load. With cache priming disabled, it loads in about 3s (eyeballed) in Code.</p>",
        "id": 270096366,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643659613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270096366\">said</a>:</p>\n<blockquote>\n<p>That's probably to be expected, but <code>analysis-stats</code> is somewhat of a worst case because it runs for everything. For example, on RA itself  I get 45s inference, 54s total, but it doesn't mean it takes 45 or 54 seconds to load. With cache priming disabled, it loads in about 3s (eyeballed) in Code.</p>\n</blockquote>\n<p>oh, that's neat. are there docs/issues you can point me to that would help me interpret this data?</p>",
        "id": 270100005,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661013
    },
    {
        "content": "<p>(also, sorry: here's a slightly better one profile, i think: <a href=\"https://gist.github.com/davidbarsky/e8820fda0bfb781e5293b2c662580ab2\">https://gist.github.com/davidbarsky/e8820fda0bfb781e5293b2c662580ab2</a>)</p>",
        "id": 270100028,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661027
    },
    {
        "content": "<p>effectively: 33 seconds of inference is reasonable for what it's doing? <a href=\"https://gist.github.com/davidbarsky/e8820fda0bfb781e5293b2c662580ab2#file-hack-parser-profile-all-over-100ms-txt-L550\">https://gist.github.com/davidbarsky/e8820fda0bfb781e5293b2c662580ab2#file-hack-parser-profile-all-over-100ms-txt-L550</a></p>",
        "id": 270100118,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661079
    },
    {
        "content": "<p>RA itself has about 226 KLOC, and 45 s for inference seems.. reasonable, I guess? More than we'd like, but it's fine up to an order of magnitude</p>",
        "id": 270100359,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661191
    },
    {
        "content": "<p>Hack is smaller, I guess (146 KLOC)</p>",
        "id": 270100476,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661245
    },
    {
        "content": "<p>yeah, on this laptop, i think it's probably fair and reasonable.</p>",
        "id": 270100531,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661274
    },
    {
        "content": "<p>Oh, I'm on a 5950X :D</p>",
        "id": 270100546,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661284
    },
    {
        "content": "<p>You can also set that environment variable when running Code (there's a preference for env variables), so you can see in the Output window what takes too long</p>",
        "id": 270100596,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661311
    },
    {
        "content": "<p>it's a 2019 macbook pro with a 2.4 GHz 8-Core Intel Core i9 :(</p>",
        "id": 270100603,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661314
    },
    {
        "content": "<p>i gotta try it on my m1 pro macbook pro, which, historically, is very good at this thing</p>",
        "id": 270100652,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661342
    },
    {
        "content": "<p>As for docs, the comments in the source code are probably a good place to start</p>",
        "id": 270100674,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661351
    },
    {
        "content": "<p>(would it make sense to make this a separate thread?)</p>",
        "id": 270100741,
        "sender_full_name": "David Barsky",
        "timestamp": 1643661371
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198819\">David Barsky</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/270100741\">said</a>:</p>\n<blockquote>\n<p>(would it make sense to make this a separate thread?)</p>\n</blockquote>\n<p>Yes</p>",
        "id": 270100761,
        "sender_full_name": "Laurențiu",
        "timestamp": 1643661389
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>, we have a steering meeting today!</p>\n<p>The last steering issue is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11387\">https://github.com/rust-analyzer/rust-analyzer/issues/11387</a></p>",
        "id": 275248788,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270378
    },
    {
        "content": "<p>Did DST start? I think it used to be an hour later</p>",
        "id": 275248859,
        "sender_full_name": "Laurențiu",
        "timestamp": 1647270407
    },
    {
        "content": "<p>In the US, yes. The meeting is set in Moscow time.</p>",
        "id": 275248944,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270442
    },
    {
        "content": "<p>According to my calendar this is the correct time</p>",
        "id": 275249145,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270516
    },
    {
        "content": "<p>On the other hand, the compiler team calendar says it happens in <strong>two</strong> hours, uuh</p>",
        "id": 275249411,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270620
    },
    {
        "content": "<p>Please lead this one, if you want :)</p>",
        "id": 275249426,
        "sender_full_name": "Laurențiu",
        "timestamp": 1647270630
    },
    {
        "content": "<p>Timezones are fun :)</p>",
        "id": 275249441,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1647270639
    },
    {
        "content": "<p>Ah, it happens at 6pm moscow time, which is 4pm my time, aka 12 minutes ago</p>",
        "id": 275249709,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270746
    },
    {
        "content": "<p>Well, with that distraction out of the way, I guess let's look at last sprint?</p>",
        "id": 275249758,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270763
    },
    {
        "content": "<p>We decided to look at some broken window issues. It looks like a few got fixed, but there are still quite a few remaining.</p>",
        "id": 275249863,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270799
    },
    {
        "content": "<p>\"Fix type mismatches\" made some great progress thanks to <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>, so I propose that we add that back onto the agenda for next sprint to keep track of it. <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961#issuecomment-1066663571\">https://github.com/rust-analyzer/rust-analyzer/issues/8961#issuecomment-1066663571</a></p>",
        "id": 275250004,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270853
    },
    {
        "content": "<p>I am going to continue with at least <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> would be great if someone looked into hygiene before I get to it though ;)</p>",
        "id": 275250204,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1647270949
    },
    {
        "content": "<p>There has also been some movement in adding const generics support thanks to <span class=\"user-mention\" data-user-id=\"401078\">@hkalbasi</span> <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/11688\">https://github.com/rust-analyzer/rust-analyzer/pull/11688</a>, perhaps it's time to focus on that as part of the next sprint too?</p>",
        "id": 275250326,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647270992
    },
    {
        "content": "<p>On the topic of type mismatches, I'm happy we got rid of <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9997\">https://github.com/rust-analyzer/rust-analyzer/issues/9997</a>, I was quite worried about that one</p>",
        "id": 275250332,
        "sender_full_name": "Laurențiu",
        "timestamp": 1647270994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Steering.20meeting/near/275250204\">said</a>:</p>\n<blockquote>\n<p>I am going to continue with at least <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> would be great if someone looked into hygiene before I get to it though ;)</p>\n</blockquote>\n<p>Yeah, hygiene is a thing we could look into (this is, in part, <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11681\">https://github.com/rust-analyzer/rust-analyzer/issues/11681</a>)</p>",
        "id": 275250492,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271070
    },
    {
        "content": "<p>const generics is a good idea, though I'm not sure what would be the next steps there</p>",
        "id": 275250711,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1647271154
    },
    {
        "content": "<p>\"anon const lowering\" presumably?</p>",
        "id": 275250773,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271186
    },
    {
        "content": "<p>tracking issue for that: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8655\">https://github.com/rust-analyzer/rust-analyzer/issues/8655</a></p>",
        "id": 275250868,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271217
    },
    {
        "content": "<p>/poll What should we focus on?</p>",
        "id": 275250950,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271260
    },
    {
        "content": "<p>right, yeah</p>",
        "id": 275250977,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1647271273
    },
    {
        "content": "<p>Since these are quite big items, I think that's enough for the next sprint, but if someone has something to add, please do so</p>",
        "id": 275251258,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271380
    },
    {
        "content": "<p>I'd be interested in looking into macro hygiene ( which probably somewhat includes our tokenmap rewrite? )</p>",
        "id": 275251349,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1647271417
    },
    {
        "content": "<p>(I'm not actually sure how many of those items we want to add in the end, maybe a poll is unnecessary?)</p>",
        "id": 275251403,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271438
    },
    {
        "content": "<p>Okay, so it looks like we're looking at broken windows and type mismatches, and perhaps into macro hygiene as a bonus item?</p>",
        "id": 275251965,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271643
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 275252035,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1647271674
    },
    {
        "content": "<p>technically macro hygiene is required to finish the type mismatches though ;) unless we cheat and remove the izip usage</p>",
        "id": 275252231,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1647271756
    },
    {
        "content": "<p>Yeah, I think it's fine to omit items that aren't caused specifically by bugs in <code>hir_ty</code> or chalk</p>",
        "id": 275252337,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271801
    },
    {
        "content": "<p>Okay, thanks everyone for joining, I'll edit the next tracking issue <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/11704\">https://github.com/rust-analyzer/rust-analyzer/issues/11704</a></p>",
        "id": 275252654,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1647271914
    }
]