[
    {
        "content": "<p>Hello All ! I'm pretty new here and as I use rust-analyzer for a while now I would like to contribute to this project. In fact I detected a bug in ra and would like to solve it by myself. But the code seems pretty dense for now for me. I would like to have a start point :) . The issue is when I have an attribute in a struct covered by a feature flag. I have 2 <code>new</code> function to create this struct. One for feature enabled and one without. So one with the field and another one without. And rust analyzer drop me an error because it seems it didn't catch the feature flag. So the struct <code>MissingFields</code> is created here <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L109:L109\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L109:L109\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L109:L109</a> and should not. Can you give me the file or the place in the codebase where I can find how to not create this kind of error ?</p>",
        "id": 193061340,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586188042
    },
    {
        "content": "<p>yup, that might be a less-than-easy issue to fix</p>",
        "id": 193063613,
        "sender_full_name": "matklad",
        "timestamp": 1586189123
    },
    {
        "content": "<p>Here's how we handle cfg at the top level: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/nameres/collector.rs#L697\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/nameres/collector.rs#L697\">https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/nameres/collector.rs#L697</a></p>",
        "id": 193063712,
        "sender_full_name": "matklad",
        "timestamp": 1586189164
    },
    {
        "content": "<p>But for impls I htink we don't yet take that into account: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/data.rs#L214-L222\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/data.rs#L214-L222\">https://github.com/rust-analyzer/rust-analyzer/blob/c859a6480af7baece2eec38c19f71cb714db9e3b/crates/ra_hir_def/src/data.rs#L214-L222</a></p>",
        "id": 193063841,
        "sender_full_name": "matklad",
        "timestamp": 1586189229
    },
    {
        "content": "<p>Ok so the idea would be to implement a kind of <code>is_cfg_enabled</code> on StructFieldData ?</p>",
        "id": 193065059,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586189695
    },
    {
        "content": "<p>yup</p>",
        "id": 193065123,
        "sender_full_name": "matklad",
        "timestamp": 1586189727
    },
    {
        "content": "<p>StructFieldData or StructData ?</p>",
        "id": 193065151,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586189739
    },
    {
        "content": "<p>for struct fields -- structs themsleves are handled by the code in <a href=\"http://collector.rs\" title=\"http://collector.rs\">collector.rs</a> linked above</p>",
        "id": 193066050,
        "sender_full_name": "matklad",
        "timestamp": 1586190153
    },
    {
        "content": "<p>Ok thank you. I really want to tackle this issue. What the best way to indicate I'm working on this ? I create an issue about that ?</p>",
        "id": 193066379,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586190320
    },
    {
        "content": "<p>Hello, just a question, I'm in the crate ra_hir_ty,  precisely in this function <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L64:L64\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L64:L64\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_ty/src/expr.rs#L64:L64</a> and I want to have access to data from ModCollector here <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/nameres/collector.rs#L659:L659\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/nameres/collector.rs#L659:L659\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/nameres/collector.rs#L659:L659</a> How can I do ? Can I use the database ?</p>",
        "id": 193161921,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586252612
    },
    {
        "content": "<p>I have the file_id, I don't know if it can help</p>",
        "id": 193162104,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586252718
    },
    {
        "content": "<p>So the collectors are transient data structures, which ultimatelly collect all into into a <code>CrateDefMap</code>. You can get hold of it by calling <code>db.crate_def_map(file_id)</code></p>",
        "id": 193162719,
        "sender_full_name": "matklad",
        "timestamp": 1586253074
    },
    {
        "content": "<p>But I am not sure that the logic for fixing cfg-ed out fields should go to <code>validate_record_literal</code>. I think it already should see only the fields with active cfgs, we should rather disable extra fields when we create <code>StructData</code></p>",
        "id": 193162860,
        "sender_full_name": "matklad",
        "timestamp": 1586253142
    },
    {
        "content": "<p>Hmm ok</p>",
        "id": 193162900,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586253174
    },
    {
        "content": "<p>Ok now I'm stuck hre <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/adt.rs#L59:L59\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/adt.rs#L59:L59\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/adt.rs#L59:L59</a> because I only have StructId and I need CrateId to call db.crate_def_map(...). Is there any way to fetch CrateId at this point ? :)</p>",
        "id": 193164266,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586253996
    },
    {
        "content": "<p>Found a solution thank you :)</p>",
        "id": 193166127,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586255130
    },
    {
        "content": "<p>Is there a way when I'm at a struct level to get the function in which I am ? With db ?</p>",
        "id": 193191439,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586267996
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  as you helped me a lot :)</p>",
        "id": 193191629,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586268075
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282393\">@Coenen Benjamin</span>  if you are talking about a struct litreal, you might be looking for <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/d89c189ad1efe87e54855e6488184d7a3825a534/crates/ra_hir_def/src/lib.rs#L246-L250\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/d89c189ad1efe87e54855e6488184d7a3825a534/crates/ra_hir_def/src/lib.rs#L246-L250\"><code>DefWithBodyId</code> </a> somewhere nearby, e.g. the inference itself happens inside of a <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/d89c189ad1efe87e54855e6488184d7a3825a534/crates/ra_hir_ty/src/infer.rs#L195\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/d89c189ad1efe87e54855e6488184d7a3825a534/crates/ra_hir_ty/src/infer.rs#L195\"><code>const/static</code> initializer or a <code>fn</code> body</a>. After that you will be able to query function/const/static data from the <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/db.rs#L75\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/ra_hir_def/src/db.rs#L75\"><code>DefDatabase</code></a> which is a supertrait of <code>HirDatabase</code></p>",
        "id": 193223902,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1586281736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"258149\">@std::Veetaha</span> thanks a lot ! I really need your help to let me dig and understand the code and become efficient after. I created a Draft PR about that. If you want to help me feel free <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880\">https://github.com/rust-analyzer/rust-analyzer/pull/3880</a> I really want to involve all my free time in this project because it helps me a lot in my day to day job !</p>",
        "id": 193225294,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586282446
    },
    {
        "content": "<p>Sorry, can't say nothing more elaborate ) <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> is really who can help</p>",
        "id": 193242896,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1586291196
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I read your comment here <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#r405451522\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#r405451522\">https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#r405451522</a> but I think I don't understand. In fact, I'm in the situation in which I write a crate with different feature so I write 2 methods with the same name but different behavior depending the feature. As I understand you say I have to check the cfg_options from the crate. But I want to check the syntax for both features. So cfg_options wouldn't help me to achieve that. I have to check parent attributes to know in which case I wrote this method. Am I wrong somewhere ?</p>",
        "id": 193319947,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586352761
    },
    {
        "content": "<p>So, the way rustc (and, currently, rust-analyzer) is implemented is that it only \"sees\" one of the functions anyway, the one which passes currect cfg config</p>",
        "id": 193320117,
        "sender_full_name": "matklad",
        "timestamp": 1586352841
    },
    {
        "content": "<p>Ideally, we should somehow check both of them, but this is not currently implemented</p>",
        "id": 193320257,
        "sender_full_name": "matklad",
        "timestamp": 1586352877
    },
    {
        "content": "<p>But in my situation there aren't any \"correct\" feature because it's not coming from a dependency. It's my own crate with my own feature. So ... it's impossible for me to solve this issue for now ?</p>",
        "id": 193320509,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586352985
    },
    {
        "content": "<p>By default, rust-analyzer uses <code>default</code> feature for the crates in current workspace. This is overridable via config option, sort of how you specify the features on the command line.</p>",
        "id": 193320694,
        "sender_full_name": "matklad",
        "timestamp": 1586353067
    },
    {
        "content": "<p>I was thinking about passing a kind of context with enabled configurations from parent to children and then each time checking the configuration for the node. But maybe not the best implementations. Hmmm I definitely can't solve my issue now :(</p>",
        "id": 193321221,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586353328
    },
    {
        "content": "<p>The problem of rust-analyzer giving a false positive is definitely solvable without doing any major refactorings, and I think you PR already goes about 60% towads the solution</p>",
        "id": 193322294,
        "sender_full_name": "matklad",
        "timestamp": 1586353820
    },
    {
        "content": "<p>hmm ok I really want to finish it and find the best workaround for now. Thanks for your help. If I understand your solution is based on usage of cfg_option at the crate level ? In this crate level the cfg_options just check the default features. If my feature is not in the default then it's disabled and I should not make any checks about these children ?</p>",
        "id": 193324156,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586354579
    },
    {
        "content": "<p>My first implementation here <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#diff-df1c60833b4d654e53af1a24e549facfR226\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#diff-df1c60833b4d654e53af1a24e549facfR226\">https://github.com/rust-analyzer/rust-analyzer/pull/3880/files#diff-df1c60833b4d654e53af1a24e549facfR226</a> was to check with these cfg_options at the <code>crate_graph</code> level. Is it the correct solution ?</p>",
        "id": 193324403,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586354679
    },
    {
        "content": "<p>Yes, I think so</p>",
        "id": 193324855,
        "sender_full_name": "matklad",
        "timestamp": 1586354879
    },
    {
        "content": "<p>Ok great I will do that :)</p>",
        "id": 193324931,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586354896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Ok I reimplemented what I did before with cfg_options from the crate. But the fact is I should not create a StructData if my functionData is not in the default feature. Could you send me a link please to find where I can basically stop a creation of a FunctionData. If I go on the query function it just returns an Arc so I can't return None or something like that. When I find this location I think I just have to use my function is_cfg_enabled with current attributes and that's all</p>",
        "id": 193330432,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586357264
    },
    {
        "content": "<p><a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Need.20help.20for.20a.20contribution.20in.20ra/near/193063841\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Need.20help.20for.20a.20contribution.20in.20ra/near/193063841\">https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Need.20help.20for.20a.20contribution.20in.20ra/near/193063841</a></p>",
        "id": 193334145,
        "sender_full_name": "matklad",
        "timestamp": 1586358734
    },
    {
        "content": "<p>That I think the place where func-data is wrongly created</p>",
        "id": 193334166,
        "sender_full_name": "matklad",
        "timestamp": 1586358747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Yeah ! My test pass when I mock the situation. So last question :p  How can I force my test to have default features. Here is what I tried:</p>\n<div class=\"codehilite\"><pre><span></span>//- Cargo.toml\n        [package]\n        name = &quot;test&quot;\n        version = &quot;0.0.1&quot;\n        [features]\n        default = [&quot;foo&quot;]\n\n        //- /lib.rs cfg:feature=foo\n        struct MyStruct {\n            my_val: usize,\n            #[cfg(feature = &quot;foo&quot;)]\n            bar: bool,\n        }\n\n        impl MyStruct {\n            #[cfg(feature = &quot;foo&quot;)]\n            pub(crate) fn new(my_val: usize, bar: bool) -&gt; Self {\n                Self { my_val, bar }\n            }\n\n            #[cfg(not(feature = &quot;foo&quot;))]\n            pub(crate) fn new(my_val: usize, _bar: bool) -&gt; Self {\n                Self { my_val }\n            }\n        }\n</pre></div>",
        "id": 193340228,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586361288
    },
    {
        "content": "<p>Without any success when I display cfg_options in fixture it's always empty :(</p>",
        "id": 193340267,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586361306
    },
    {
        "content": "<p>Ok I found the issue, the <code>crate:foo</code> in meta was missing</p>",
        "id": 193341900,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586362017
    },
    {
        "content": "<p>I updated my PR ! Thanks a lot for your help</p>",
        "id": 193344573,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586363247
    },
    {
        "content": "<p>Just for my culture. Does anyone know what the acronym hir means ?</p>",
        "id": 193420685,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586420960
    },
    {
        "content": "<p>High-level IR, see also <a href=\"https://rustc-dev-guide.rust-lang.org/appendix/glossary.html\" title=\"https://rustc-dev-guide.rust-lang.org/appendix/glossary.html\">the glossary in rustc-dev-guide</a></p>",
        "id": 193421000,
        "sender_full_name": "detrumi",
        "timestamp": 1586421169
    },
    {
        "content": "<p>Thanks a lot ! That's what I'm looking for :)</p>",
        "id": 193421629,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586421633
    },
    {
        "content": "<p>Is anyone has good resources about green nodes ra uses ?</p>",
        "id": 193567226,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586524262
    },
    {
        "content": "<p>I think this might be helpful <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/syntax.md\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/syntax.md\">https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/syntax.md</a></p>",
        "id": 193567828,
        "sender_full_name": "Muhammad Mominul Huque",
        "timestamp": 1586524737
    },
    {
        "content": "<p>Ok thanks there is a link inside which seems very interesting <a href=\"https://docs.microsoft.com/en-ie/archive/blogs/ericlippert/persistence-facades-and-roslyns-red-green-trees\" title=\"https://docs.microsoft.com/en-ie/archive/blogs/ericlippert/persistence-facades-and-roslyns-red-green-trees\">https://docs.microsoft.com/en-ie/archive/blogs/ericlippert/persistence-facades-and-roslyns-red-green-trees</a> Have a nice day</p>",
        "id": 193568788,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586525444
    },
    {
        "content": "<p>I would like to work on this issue but don't understand the issue. Can you give me a simple example to reproduce <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  ?</p>",
        "id": 193661750,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586613390
    },
    {
        "content": "<p>With the link to the issue <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3903\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/3903\">https://github.com/rust-analyzer/rust-analyzer/issues/3903</a> it is far better</p>",
        "id": 193663363,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1586615844
    }
]