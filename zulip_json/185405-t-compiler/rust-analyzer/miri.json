[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  Is <a href=\"https://gist.github.com/lnicola/b037765b02d0d573d73c4302d14ea03e\" target=\"_blank\" title=\"https://gist.github.com/lnicola/b037765b02d0d573d73c4302d14ea03e\">this</a> a limitation of <code>miri</code>, or a bug in the program? Sorry for subscribing you, I'm not sure how else to ping you.</p>",
        "id": 163488051,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555435014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> subscribing is fine. ;) alternatively try the \"general\" stream; the question does not seem particularily RLS-related</p>",
        "id": 163489373,
        "sender_full_name": "RalfJ",
        "timestamp": 1555435866
    },
    {
        "content": "<p>to answer your question, the error means that Miri thinks this code has UB for using pointers the wrong way</p>",
        "id": 163489423,
        "sender_full_name": "RalfJ",
        "timestamp": 1555435912
    },
    {
        "content": "<p>those checks and the models they use are experimental, so this does not mean your program is wrong. but it is an interesting result, when Miri disallows something people expect to work we should figure out what it is.</p>",
        "id": 163489485,
        "sender_full_name": "RalfJ",
        "timestamp": 1555435939
    },
    {
        "content": "<p>it is hard to say more than that without a way for me to reproduce the problem. the code seems to do crazy stuff with transmutes/unions, so I wouldnt be surprised if there was something wrong in it^^</p>",
        "id": 163489549,
        "sender_full_name": "RalfJ",
        "timestamp": 1555436001
    },
    {
        "content": "<p>it is related to rls :D</p>",
        "id": 163489670,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436085
    },
    {
        "content": "<p>okay^^ I dont see the connection then ;)</p>",
        "id": 163489690,
        "sender_full_name": "RalfJ",
        "timestamp": 1555436105
    },
    {
        "content": "<p>or rust-analyzer</p>",
        "id": 163489693,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436107
    },
    {
        "content": "<p>I tried to run some of its tests under miri</p>",
        "id": 163489775,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436164
    },
    {
        "content": "<p>if you could minimize this to an as-small-as-possible testcase that still fails, that'd be awesome</p>",
        "id": 163490051,
        "sender_full_name": "RalfJ",
        "timestamp": 1555436386
    },
    {
        "content": "<p>but even if not, please report an issue at <a href=\"https://github.com/rust-lang/miri/\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/\">https://github.com/rust-lang/miri/</a> with instructions for how to reproduce the problem</p>",
        "id": 163490328,
        "sender_full_name": "RalfJ",
        "timestamp": 1555436561
    },
    {
        "content": "<p>that code is way over my head</p>",
        "id": 163490384,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436608
    },
    {
        "content": "<p>I don't think it's a miri bug</p>",
        "id": 163490426,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436643
    },
    {
        "content": "<p>I'm sure <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> will be happy to see this</p>",
        "id": 163490507,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436697
    },
    {
        "content": "<p>oh yeah, I am doing completely crazy stuff in rowan, and I am totally not sure if it works.</p>\n<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> how did you get miri to work with rowan? Last time I've checked, it failed because of random numbers somewhere...</p>",
        "id": 163490848,
        "sender_full_name": "matklad",
        "timestamp": 1555436955
    },
    {
        "content": "<p>I have this nightly</p>",
        "id": 163490879,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436992
    },
    {
        "content": "<p><code>rustc 1.35.0-nightly (aa99abeb2 2019-04-14)</code></p>",
        "id": 163490883,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555436997
    },
    {
        "content": "<p>And what command are you running?</p>",
        "id": 163490956,
        "sender_full_name": "matklad",
        "timestamp": 1555437021
    },
    {
        "content": "<p>I installed miri with rustup, then ran <code>~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri miri test</code> in the <code>ra_syntax</code> crate</p>",
        "id": 163490971,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437034
    },
    {
        "content": "<p><code>ra_assists</code> also reports an uninitialized read somewhere</p>",
        "id": 163490983,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437048
    },
    {
        "content": "<p><code>ra_arena</code> seems clean</p>",
        "id": 163491013,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437065
    },
    {
        "content": "<p><code>rowan</code>'s tests also pass</p>",
        "id": 163491148,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437183
    },
    {
        "content": "<p>that's because rowan basically has no tests, everything is tested in rust-analyzer :D</p>",
        "id": 163491170,
        "sender_full_name": "matklad",
        "timestamp": 1555437205
    },
    {
        "content": "<p>ah, I didn't check :D</p>",
        "id": 163491187,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437228
    },
    {
        "content": "<p>Miri supports random numbers since very recently</p>",
        "id": 163491656,
        "sender_full_name": "RalfJ",
        "timestamp": 1555437565
    },
    {
        "content": "<p>you need to pass <code>-Zmiri-seed=&lt;some hex&gt;</code></p>",
        "id": 163491665,
        "sender_full_name": "RalfJ",
        "timestamp": 1555437573
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> didnt seem to do that so maybe that test doesnt even need entropy?</p>",
        "id": 163491698,
        "sender_full_name": "RalfJ",
        "timestamp": 1555437601
    },
    {
        "content": "<p>I don't see any <code>rand</code> dependency</p>",
        "id": 163492010,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437778
    },
    {
        "content": "<p>does it actually support the rand crate? how does that work?</p>",
        "id": 163492068,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555437814
    },
    {
        "content": "<p>that was a while ago, maybe I am remembering the things incorrectly.</p>\n<p>Looking at the error, it looks like it's in the <code>colleseum</code> crate, which is <code>typed-arena</code>, but with a mutex on top</p>",
        "id": 163492184,
        "sender_full_name": "matklad",
        "timestamp": 1555437875
    },
    {
        "content": "<p>a-ha, reproduced the error locally</p>",
        "id": 163492196,
        "sender_full_name": "matklad",
        "timestamp": 1555437884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> you remember correctly, entropy support in Miri was added less than a week ago^^</p>",
        "id": 163492220,
        "sender_full_name": "RalfJ",
        "timestamp": 1555437900
    },
    {
        "content": "<blockquote>\n<p>does it actually support the rand crate? how does that work?</p>\n</blockquote>\n<p>you pass Miri a seed and it uses that to generate \"entropy\" whenever the program asks for it</p>",
        "id": 163492280,
        "sender_full_name": "RalfJ",
        "timestamp": 1555437944
    },
    {
        "content": "<p>but there are a lot of ways to request entropy, how does it hook all of them?</p>",
        "id": 163492431,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438039
    },
    {
        "content": "<p>what does <code>mem::transmute::&lt;&amp;mut T, &amp;mut T&gt;</code> do?</p>",
        "id": 163492447,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> made a relatively easy repro. This is not rust-analyzer related, the famous typed-arena crate is affected</p>\n<div class=\"codehilite\"><pre><span></span>λ git clone git@github.com:SimonSapin/rust-typed-arena.git\n\n21:06:50|~/tmp\nλ cd rust-typed-arena/\n\n21:06:53|~/tmp/rust-typed-arena|master✓\nλ ~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri miri test # cargo miri doesn&#39;t work for me for whatever reason\n...\n constant evaluation error: stopping looking for borrow being accessed (Alias(None)) because of barrier (38549)\n</pre></div>",
        "id": 163492550,
        "sender_full_name": "matklad",
        "timestamp": 1555438117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> it thransmutes lifetimes</p>",
        "id": 163492564,
        "sender_full_name": "matklad",
        "timestamp": 1555438130
    },
    {
        "content": "<p>oooh</p>",
        "id": 163492578,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438141
    },
    {
        "content": "<p>I guess, I'll open a bug in typed arena and CC you. The code looks reasonable to me</p>",
        "id": 163492635,
        "sender_full_name": "matklad",
        "timestamp": 1555438183
    },
    {
        "content": "<p>yeah, I should have checked all of the deps first (:</p>",
        "id": 163492809,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438312
    },
    {
        "content": "<p>typed_arena is not a dependency, collesseum is. but collesseum is a fancier typed_arena, and the same bug triggers for later</p>",
        "id": 163492891,
        "sender_full_name": "matklad",
        "timestamp": 1555438357
    },
    {
        "content": "<p>it triggers in both of them, yup</p>",
        "id": 163492944,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> filed <a href=\"https://github.com/SimonSapin/rust-typed-arena/issues/26\" target=\"_blank\" title=\"https://github.com/SimonSapin/rust-typed-arena/issues/26\">https://github.com/SimonSapin/rust-typed-arena/issues/26</a></p>",
        "id": 163493057,
        "sender_full_name": "matklad",
        "timestamp": 1555438465
    },
    {
        "content": "<p>there's also one in ra_assists</p>",
        "id": 163493227,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555438591
    },
    {
        "content": "<blockquote>\n<p>but there are a lot of ways to request entropy, how does it hook all of them?</p>\n</blockquote>\n<p>it just hooks whatever <code>rand</code> uses on Windows and Linux. That's good enough for now ;)</p>",
        "id": 163493289,
        "sender_full_name": "RalfJ",
        "timestamp": 1555438647
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> filed <a href=\"https://github.com/SimonSapin/rust-typed-arena/issues/26\" target=\"_blank\" title=\"https://github.com/SimonSapin/rust-typed-arena/issues/26\">https://github.com/SimonSapin/rust-typed-arena/issues/26</a></p>\n</blockquote>\n<p>thanks! I'll have a look once I find some time.</p>",
        "id": 163493325,
        "sender_full_name": "RalfJ",
        "timestamp": 1555438680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> the second error you are observing is <a href=\"https://github.com/servo/rust-smallvec/issues/126\" target=\"_blank\" title=\"https://github.com/servo/rust-smallvec/issues/126\">https://github.com/servo/rust-smallvec/issues/126</a></p>",
        "id": 163493793,
        "sender_full_name": "matklad",
        "timestamp": 1555439029
    },
    {
        "content": "<p>I suppose there's no way to tell miri to continue after it finds an error?</p>",
        "id": 163495256,
        "sender_full_name": "Laurențiu",
        "timestamp": 1555440022
    },
    {
        "content": "<p>No, Miri is not able to distinguish between fatal errors and those that it could in principle ignore.</p>",
        "id": 163534862,
        "sender_full_name": "RalfJ",
        "timestamp": 1555482063
    },
    {
        "content": "<p>Turns out this is a somewhat deep problem that would have to be fixed in <code>Vec::push</code>: <a href=\"https://github.com/SimonSapin/rust-typed-arena/issues/26#issuecomment-484507322\" target=\"_blank\" title=\"https://github.com/SimonSapin/rust-typed-arena/issues/26#issuecomment-484507322\">https://github.com/SimonSapin/rust-typed-arena/issues/26#issuecomment-484507322</a></p>",
        "id": 163651287,
        "sender_full_name": "RalfJ",
        "timestamp": 1555594179
    },
    {
        "content": "<p>Cool! So that means that C++ style guarantee of \"no refernces/iteraros are invalidated in push if there's enough capcity\" has a real, checkable code underneath it! I am absolutely amazed by how powerful miri's approach of \"let's check for UB by definition\" is in practice.</p>",
        "id": 163653299,
        "sender_full_name": "matklad",
        "timestamp": 1555595740
    },
    {
        "content": "<p>:)</p>",
        "id": 163655406,
        "sender_full_name": "RalfJ",
        "timestamp": 1555597066
    },
    {
        "content": "<p>there's \"just\" the caveat that you need some code that actually exhibits the problematic behavior -- basically we need people to write test cases for all sorts of things that they think should be legal unsafe interactions with types like <code>Vec</code>, and have them all be checked by Miri.</p>",
        "id": 163655565,
        "sender_full_name": "RalfJ",
        "timestamp": 1555597152
    }
]