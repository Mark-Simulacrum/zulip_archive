[
    {
        "content": "<p>Hey all, I've created the following fixture for my work on <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/4273\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/4273\">https://github.com/rust-analyzer/rust-analyzer/pull/4273</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>            r&quot;//- /main.rs\n              mod foo;\n              fn main() { foo::Foo&lt;|&gt; }\n\n              //- /foo.rs\n              struct Foo;\n              &quot;,\n            r&quot;\n</code></pre></div>\n\n\n<p>But <code>resolve_path</code> can't resolve the path <code>foo::Foo</code>.<br>\nTesting the same case manually works, so something is broken with the test setup.<br>\nCan anyone tell me what I'm doing wrong?</p>",
        "id": 196118179,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588533612
    },
    {
        "content": "<p>pub struct Foo; ?</p>",
        "id": 196118198,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588533698
    },
    {
        "content": "<p>well that's what the assist is meant to add :/<br>\nit works in a manual test!</p>",
        "id": 196118543,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588534236
    },
    {
        "content": "<p>and even with <code>pub struct Foo;</code>, <code>resolve_path</code> returns <code>None</code></p>",
        "id": 196118581,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588534278
    },
    {
        "content": "<p><code>r\"//-</code> could you add a <code>\\n</code> here? perhaps \"strip indent\" logic is going haywire?</p>",
        "id": 196118749,
        "sender_full_name": "matklad",
        "timestamp": 1588534461
    },
    {
        "content": "<p>try this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">change_visibility_of_adt_in_other_file_via_path</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">check_assist</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">change_visibility</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">r</span><span class=\"s\">&quot;</span>\n<span class=\"s\">              //- /main.rs</span>\n<span class=\"s\">              mod foo;</span>\n<span class=\"s\">              fn main() { foo::Foo&lt;|&gt; }</span>\n\n<span class=\"s\">              //- /foo.rs</span>\n<span class=\"s\">              struct Foo;</span>\n<span class=\"s\">              &quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">r</span><span class=\"s\">&quot;</span>\n<span class=\"s\">            &lt;|&gt;pub(crate) struct Foo;</span>\n<span class=\"s\">            &quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 196118751,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588534462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> yes, I just tried my version, it works</p>",
        "id": 196118769,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588534493
    },
    {
        "content": "<p>yep that's it.<br>\nthanks a ton!</p>",
        "id": 196118784,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588534509
    },
    {
        "content": "<p>(also, the format of fixtures needs some docs... I regularly forget the syntax myself :( )</p>",
        "id": 196118791,
        "sender_full_name": "matklad",
        "timestamp": 1588534523
    },
    {
        "content": "<p>i'm gonna try to improve those areas a bit in the PR while I'm there :)</p>",
        "id": 196118805,
        "sender_full_name": "Timo Freiberg",
        "timestamp": 1588534548
    },
    {
        "content": "<p>And, in this particular case, seems like we can implement some sort of a check? basically, <code>if any file contains \"//-\" panic!(\":-(\")</code></p>",
        "id": 196118808,
        "sender_full_name": "matklad",
        "timestamp": 1588534555
    },
    {
        "content": "<p>Speaking of formatting, any plan to works on <code>ra_fmt</code> ?</p>",
        "id": 196118855,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588534581
    },
    {
        "content": "<p>I would like to implement it for better output of expanded macro display .... but it seem like needing more design works.</p>",
        "id": 196118886,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588534661
    },
    {
        "content": "<p>fwiw, I kinda like IntelliJ's design</p>",
        "id": 196119067,
        "sender_full_name": "matklad",
        "timestamp": 1588534819
    },
    {
        "content": "<p>The problem is, it's not trivial to understand what that design is, among thousands of highly OOP Java loc :D</p>",
        "id": 196119104,
        "sender_full_name": "matklad",
        "timestamp": 1588534864
    },
    {
        "content": "<p><a href=\"https://www.jetbrains.org/intellij/sdk/docs/reference_guide/custom_language_support/code_formatting.html\" title=\"https://www.jetbrains.org/intellij/sdk/docs/reference_guide/custom_language_support/code_formatting.html\">https://www.jetbrains.org/intellij/sdk/docs/reference_guide/custom_language_support/code_formatting.html</a></p>",
        "id": 196119645,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1588535509
    }
]