[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I also ran with your mutation points idea today and this is what I've come up with so far: <a href=\"/user_uploads/4715/NX2MqcZzB0MNsyFCvUxTAMKp/Screenshot-from-2020-08-02-15-41-44.png\">Screenshot-from-2020-08-02-15-41-44.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/NX2MqcZzB0MNsyFCvUxTAMKp/Screenshot-from-2020-08-02-15-41-44.png\" title=\"Screenshot-from-2020-08-02-15-41-44.png\"><img src=\"/user_uploads/4715/NX2MqcZzB0MNsyFCvUxTAMKp/Screenshot-from-2020-08-02-15-41-44.png\"></a></div><p>In this test, I changed <code>mutable</code> to just be bold, and <code>mutation</code> to have the underlines. Does it make sense to add the <code>mutation</code> modifier to ever name within the expr? I currently have it set to do that for all names/name ref in the lhs of an assignment expr, and in the expr of all method call expr where the self is <code>&amp;mut</code>.</p>",
        "id": 205741176,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596397444
    },
    {
        "content": "<p>Though I feel like such an algorithm falls apart if you have some kind of temporary. Something like <code>(Struct {x: 5, g: 4}).mutation_fn().some_result</code> would have the names in the temporary incorrectly highlighted. I'm not sure what to do for those kinds of cases.</p>",
        "id": 205741234,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596397559
    },
    {
        "content": "<p>Hm, I wonder it makes sense to underling <em>function call</em> instead</p>",
        "id": 205741291,
        "sender_full_name": "matklad",
        "timestamp": 1596397598
    },
    {
        "content": "<p>That way, you'll be able to intuitively re-use underlining</p>",
        "id": 205741295,
        "sender_full_name": "matklad",
        "timestamp": 1596397618
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>let mut *x* = ....;\n\n*x*.foo();\n*x*.*bar*();\n</code></pre></div>",
        "id": 205741312,
        "sender_full_name": "matklad",
        "timestamp": 1596397647
    },
    {
        "content": "<p>I <em>think</em> <code>(&amp;mut self)</code> methods is probably the single place where  mutation happens implicitly, so maybe only highlight it</p>",
        "id": 205741366,
        "sender_full_name": "matklad",
        "timestamp": 1596397698
    },
    {
        "content": "<p>as in, <code>&amp;mut some_var</code> is already syntactically visible</p>",
        "id": 205741374,
        "sender_full_name": "matklad",
        "timestamp": 1596397717
    },
    {
        "content": "<p>Oh, that's already done in the PR in the other thread. I thought you had mentioned wanting to also highlight mutation points separately</p>",
        "id": 205741759,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596398364
    },
    {
        "content": "<p>Copying here so no one needs to jump around: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/5643\">https://github.com/rust-analyzer/rust-analyzer/pull/5643</a></p>",
        "id": 205741766,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596398394
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Adding.20mut.2Fowning.20semantic.20modifiers.20for.20fns/near/205482863\">said</a>:</p>\n<blockquote>\n<p>(there's more general idea of highlighing not mutable types, but rather mutation points)</p>\n</blockquote>\n<p>This is the comment I was referring to.</p>",
        "id": 205741819,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596398446
    }
]