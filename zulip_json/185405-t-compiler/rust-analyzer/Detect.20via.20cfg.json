[
    {
        "content": "<p>Is there a way to detect RA via a <code>cfg()</code> statement?</p>",
        "id": 212859306,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267508
    },
    {
        "content": "<p>I would like to hide some <code>use</code> statements that cause problems for RA</p>",
        "id": 212859344,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267535
    },
    {
        "content": "<p>No</p>",
        "id": 212859395,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1602267549
    },
    {
        "content": "<p>Which ones cause issues?</p>",
        "id": 212859422,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1602267568
    },
    {
        "content": "<p>I have two crate features which are mutually exclusive</p>",
        "id": 212859443,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267586
    },
    {
        "content": "<p>and I want that to be an error if a downstream crate tries to enable both features, but I don't want RA to complain about it whilst I'm developing the crate</p>",
        "id": 212859569,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267634
    },
    {
        "content": "<p>You could do something like that once <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/6099\">https://github.com/rust-analyzer/rust-analyzer/pull/6099</a> lands I think</p>",
        "id": 212859648,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1602267688
    },
    {
        "content": "<p>By having RA always set a specific env var</p>",
        "id": 212859666,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1602267706
    },
    {
        "content": "<p><del><code>rust-analyzer.cargo.allFeatures</code> is disabled these days, shouldn't it avoid that issue?</del></p>\n<p>Hmm.</p>",
        "id": 212859724,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1602267723
    },
    {
        "content": "<p>I would still like RA to run on both features though</p>",
        "id": 212859772,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267749
    },
    {
        "content": "<p>I just want to disable the conflicting <code>use</code> statement</p>",
        "id": 212859807,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267771
    },
    {
        "content": "<p>I suppose I could add a feature for RA</p>",
        "id": 212860065,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267910
    },
    {
        "content": "<p>and cfg on that</p>",
        "id": 212860086,
        "sender_full_name": "Diggsey",
        "timestamp": 1602267929
    },
    {
        "content": "<p>Yeah, adding a feature is the way to go.</p>",
        "id": 213020832,
        "sender_full_name": "matklad",
        "timestamp": 1602498167
    },
    {
        "content": "<p>Should have designed the language such that cfg-ing happens during monomorphisation, but that ship has sailed :)</p>",
        "id": 213020869,
        "sender_full_name": "matklad",
        "timestamp": 1602498198
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 213024659,
        "sender_full_name": "matklad",
        "timestamp": 1602500813
    }
]