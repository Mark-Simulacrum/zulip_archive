[
    {
        "content": "<p>I'm a little confused. If I have an empty macro in my file:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Any nav target I generate falls outside of the range that shows up from the show sytnax tree command</p>",
        "id": 181154859,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574197953
    },
    {
        "content": "<p>For instance this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">fo</span><span class=\"o\">&lt;|&gt;</span><span class=\"n\">o</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Generates  <code>foo FN_DEF FileId(1) [0; 11) [3; 6)</code>Which makes sense to me.. </p>\n<div class=\"codehilite\"><pre><span></span>FN_DEF@[0; 11)\n    FN_KW@[0; 2) &quot;fn&quot;\n    WHITESPACE@[2; 3) &quot; &quot;\n    NAME@[3; 6)\n      IDENT@[3; 6) &quot;foo&quot;\n    PARAM_LIST@[6; 8)\n      L_PAREN@[6; 7) &quot;(&quot;\n      R_PAREN@[7; 8) &quot;)&quot;\n    WHITESPACE@[8; 9) &quot; &quot;\n    BLOCK_EXPR@[9; 11)\n      BLOCK@[9; 11)\n        L_CURLY@[9; 10) &quot;{&quot;\n        R_CURLY@[10; 11) &quot;}&quot;\n</pre></div>",
        "id": 181155269,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574198224
    },
    {
        "content": "<p>While</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">fo</span><span class=\"o\">&lt;|&gt;</span><span class=\"n\">o</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Gives </p>\n<div class=\"codehilite\"><pre><span></span>SOURCE_FILE@[0; 140)\n  MACRO_CALL@[0; 56)\n    PATH@[0; 11)\n      PATH_SEGMENT@[0; 11)\n        NAME_REF@[0; 11)\n          IDENT@[0; 11) &quot;macro_rules&quot;\n    EXCL@[11; 12) &quot;!&quot;\n    WHITESPACE@[12; 13) &quot; &quot;\n    NAME@[13; 15)\n      IDENT@[13; 15) &quot;id&quot;\n    WHITESPACE@[15; 16) &quot; &quot;\n    TOKEN_TREE@[16; 56)\n      L_CURLY@[16; 17) &quot;{&quot;\n      WHITESPACE@[17; 34) &quot;\\n                &quot;\n      TOKEN_TREE@[34; 36)\n        L_PAREN@[34; 35) &quot;(&quot;\n        R_PAREN@[35; 36) &quot;)&quot;\n      WHITESPACE@[36; 37) &quot; &quot;\n      EQ@[37; 38) &quot;=&quot;\n      R_ANGLE@[38; 39) &quot;&gt;&quot;\n      WHITESPACE@[39; 40) &quot; &quot;\n      TOKEN_TREE@[40; 42)\n        L_CURLY@[40; 41) &quot;{&quot;\n        R_CURLY@[41; 42) &quot;}&quot;\n      WHITESPACE@[42; 55) &quot;\\n            &quot;\n      R_CURLY@[55; 56) &quot;}&quot;\n  WHITESPACE@[56; 69) &quot;\\n            &quot;\n  FN_DEF@[69; 80)\n    FN_KW@[69; 71) &quot;fn&quot;\n    WHITESPACE@[71; 72) &quot; &quot;\n    NAME@[72; 75)\n      IDENT@[72; 75) &quot;foo&quot;\n    PARAM_LIST@[75; 77)\n      L_PAREN@[75; 76) &quot;(&quot;\n      R_PAREN@[76; 77) &quot;)&quot;\n    WHITESPACE@[77; 78) &quot; &quot;\n    BLOCK_EXPR@[78; 80)\n      BLOCK@[78; 80)\n        L_CURLY@[78; 79) &quot;{&quot;\n        R_CURLY@[79; 80) &quot;}&quot;\n  WHITESPACE@[80; 93) &quot;\\n            &quot;\n  FN_DEF@[93; 140)\n    FN_KW@[93; 95) &quot;fn&quot;\n    WHITESPACE@[95; 96) &quot; &quot;\n    NAME@[96; 99)\n      IDENT@[96; 99) &quot;bar&quot;\n    PARAM_LIST@[99; 101)\n      L_PAREN@[99; 100) &quot;(&quot;\n      R_PAREN@[100; 101) &quot;)&quot;\n    WHITESPACE@[101; 102) &quot; &quot;\n    BLOCK_EXPR@[102; 140)\n      BLOCK@[102; 140)\n        L_CURLY@[102; 103) &quot;{&quot;\n        WHITESPACE@[103; 120) &quot;\\n                &quot;\n        EXPR_STMT@[120; 126)\n          CALL_EXPR@[120; 125)\n            PATH_EXPR@[120; 123)\n              PATH@[120; 123)\n                PATH_SEGMENT@[120; 123)\n                  NAME_REF@[120; 123)\n                    IDENT@[120; 123) &quot;foo&quot;\n            ARG_LIST@[123; 125)\n              L_PAREN@[123; 124) &quot;(&quot;\n              R_PAREN@[124; 125) &quot;)&quot;\n          SEMI@[125; 126) &quot;;&quot;\n        WHITESPACE@[126; 139) &quot;\\n            &quot;\n        R_CURLY@[139; 140) &quot;}&quot;\n</pre></div>\n\n\n<p>with <code>foo FN_DEF FileId(1) [33; 44) [36; 39)</code> That range is not within the fn def</p>",
        "id": 181155472,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574198371
    },
    {
        "content": "<p>But goto def works in this case</p>",
        "id": 181155518,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574198396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203366\">@Jeremy Kolb</span> hm, <code>[33; 44)</code> is exactly the range of the fn node. Tests strip leadning indentation I think</p>",
        "id": 181181559,
        "sender_full_name": "matklad",
        "timestamp": 1574228553
    },
    {
        "content": "<p>Why isn't it <code>[69; 80)</code>?</p>",
        "id": 181200772,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574251634
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/F6lo9DO220eQlKghxhJJQmtu/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/F6lo9DO220eQlKghxhJJQmtu/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/F6lo9DO220eQlKghxhJJQmtu/pasted_image.png\"></a></div>",
        "id": 181200908,
        "sender_full_name": "matklad",
        "timestamp": 1574251773
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/qZQ2oB-wDo1WIWBnGjU2GJ6i/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/qZQ2oB-wDo1WIWBnGjU2GJ6i/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/qZQ2oB-wDo1WIWBnGjU2GJ6i/pasted_image.png\"></a></div>",
        "id": 181200923,
        "sender_full_name": "matklad",
        "timestamp": 1574251789
    },
    {
        "content": "<p>(33 is the start of the <code>fn</code></p>",
        "id": 181200992,
        "sender_full_name": "matklad",
        "timestamp": 1574251817
    },
    {
        "content": "<p>So... then what do the ranges in the syntax tree represent?</p>",
        "id": 181201324,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574252123
    },
    {
        "content": "<p>I've always assumed they were the character offsets.</p>",
        "id": 181201351,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574252157
    },
    {
        "content": "<p>Character offsets</p>",
        "id": 181201745,
        "sender_full_name": "matklad",
        "timestamp": 1574252426
    },
    {
        "content": "<p>33-44 is exactly the range of <code>fn foo() {}</code> (exactly 11 chars)</p>",
        "id": 181201763,
        "sender_full_name": "matklad",
        "timestamp": 1574252449
    },
    {
        "content": "<p>Right... so why is it <code>FN_DEF@[69; 80)</code> above?</p>",
        "id": 181201918,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574252585
    },
    {
        "content": "<p>Because it is indented</p>",
        "id": 181201960,
        "sender_full_name": "matklad",
        "timestamp": 1574252625
    },
    {
        "content": "<p>if it is not indended, it's 33-44</p>",
        "id": 181201964,
        "sender_full_name": "matklad",
        "timestamp": 1574252632
    },
    {
        "content": "<p>ah. gotcha</p>",
        "id": 181202074,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1574252694
    }
]