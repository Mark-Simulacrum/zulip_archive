[
    {
        "content": "<p>Hi! I found that after this <a href=\"https://github.com/rust-lang/rust/pull/90473\">PR</a>, rust-analyzer can't go to definition or declaration for a format arg, like <a href=\"/user_uploads/4715/VqjFx_grGXD6y4Ao3uygcpZY/2021-12-15_01-11.png\">2021-12-15_01-11.png</a>. </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/VqjFx_grGXD6y4Ao3uygcpZY/2021-12-15_01-11.png\" title=\"2021-12-15_01-11.png\"><img src=\"/user_uploads/4715/VqjFx_grGXD6y4Ao3uygcpZY/2021-12-15_01-11.png\"></a></div><div class=\"codehilite\"><pre><span></span><code>fn main() {\n    let a = String::from(&quot;a&quot;);\n    println!(&quot;{a}&quot;);\n}\n</code></pre></div>\n<p>I'm trying to fix this. I'm new to rust-analyzer and it seems that I need some guidance. I figured out that the function <code>ide_db::defs::Definition::from_node()</code> and related things need to be updated. Is this right?</p>",
        "id": 265071415,
        "sender_full_name": "VitalyR",
        "timestamp": 1639600419
    },
    {
        "content": "<p><code>Definition::from_node</code> won't help you here since the <code>a</code> is inside a string node. what you need to do is parse the string as a format string, figure out what part of the string the cursor is on and then do a look up for the name in the functions locals, that is in a <code>SemanticsScope</code> for the current position</p>",
        "id": 265072026,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639600761
    },
    {
        "content": "<p><code>crates\\ide\\src\\syntax_highlighting\\format.rs</code> already has things to figure out what the format string consists of so that is probably a good starting point</p>",
        "id": 265072201,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1639600861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> Thanks!</p>",
        "id": 265073241,
        "sender_full_name": "VitalyR",
        "timestamp": 1639601442
    },
    {
        "content": "<p>I wonder if it makes sense to do this on a lower-level, and just write macro expansion for format?</p>",
        "id": 265126683,
        "sender_full_name": "matklad",
        "timestamp": 1639644913
    },
    {
        "content": "<p>Ah, no, that won't work, because we assueme that tokens come out of tokens, not out of string literals. That is, even before we get to a semantic analysis, we just bail out because \"of course there can't be a definition in a string literal\". Holly karp, how would one even handle this in a proper way</p>",
        "id": 265126845,
        "sender_full_name": "matklad",
        "timestamp": 1639645023
    },
    {
        "content": "<p>Ah, I know remember thinking about this as a theoretical problem for HIR2.0. Now I realise that this is very practical already.</p>",
        "id": 265128118,
        "sender_full_name": "matklad",
        "timestamp": 1639645810
    },
    {
        "content": "<p>This is also related to the \"better <code>TokenMap</code>\" issue that we never got to</p>",
        "id": 265141307,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1639653571
    },
    {
        "content": "<p>I suppose instead of mapping down tokens we'd walk the whole <code>TokenMap</code> and piece together ranges or something</p>",
        "id": 265141403,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1639653611
    },
    {
        "content": "<p>Regarding format args capture, that's not even restricted to locals, it works with any name in value namespace:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[derive(Debug)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">a</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{a:?}\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 265141495,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1639653675
    }
]