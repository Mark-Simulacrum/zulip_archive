[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> I saw your comments here <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/5003\">https://github.com/rust-analyzer/rust-analyzer/issues/5003</a> and was wondering if this issue is being used to track resolution of associated types. I was taking a look at fixing cases like:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">B</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">act</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span>::<span class=\"n\">B</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">Impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Impl</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">B</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">act</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span>::<span class=\"n\">B</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>Where the <code>B</code> in <code>Self::B</code> in both cases above is an unresolved reference.</p>",
        "id": 206364124,
        "sender_full_name": "Paul Faria",
        "timestamp": 1596920968
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/3407\">https://github.com/rust-analyzer/rust-analyzer/issues/3407</a> also</p>",
        "id": 206675944,
        "sender_full_name": "matklad",
        "timestamp": 1597225691
    },
    {
        "content": "<p>I <em>think</em> we actually resolve these cases, we just stupidly forget this by the time we compute highlights &amp; goto def</p>",
        "id": 206675969,
        "sender_full_name": "matklad",
        "timestamp": 1597225720
    },
    {
        "content": "<p>yeah. I'm still working on that, kind of, it's just taking a while <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 206676116,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1597225847
    },
    {
        "content": "<p>Ah, so that is also a part of SIR (secret IR)? Nice!</p>",
        "id": 206676299,
        "sender_full_name": "matklad",
        "timestamp": 1597225952
    },
    {
        "content": "<p>well, the SIR would contain the ID of the selected associated type</p>",
        "id": 206686928,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1597235212
    }
]