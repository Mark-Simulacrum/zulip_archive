[
    {
        "content": "<p>Hello!</p>\n<p>I was recently looking at <a href=\"https://source.chromium.org/\">https://source.chromium.org/</a> and i thought it would be cool to have a rust version of something like that, i wanted to experiment just for fun. However, i am not quite sure how i would go about loading a crate from the file system with RA and then getting info like variables, modules, structs, etc from it. What structures/crates should i use? i look at <code>ra_ap_hir</code> and <code>ra_ap_ide</code> but i am a bit confused on:</p>\n<ul>\n<li>ide defines things like reference search results but i could not find any place to actually ask for it</li>\n<li>what is the actual initial procedure for loading a crate?</li>\n</ul>",
        "id": 225065024,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612379257
    },
    {
        "content": "<p>you probably mostly want the API of the hir crate. The code of the <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/rust-analyzer/src/cli/analysis_stats.rs\">analysis-stats command</a> should give some pointers</p>",
        "id": 225065736,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1612379558
    },
    {
        "content": "<p>Cool, ill look through that. I looked through hir already but was a bit confused on how to get the data that the ide crate gets. I think looking at the ide crate source code should help</p>",
        "id": 225065887,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612379635
    },
    {
        "content": "<p>Since RA keeps a DB of basically everything is it possible to just serialize that entire db then load it back at a later date? or would that be way too much info to store efficiently?</p>",
        "id": 225073385,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612382652
    },
    {
        "content": "<p>That would require everything stored in it to be serializable</p>",
        "id": 225073693,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612382783
    },
    {
        "content": "<p>I don't think it's really supported by salsa either</p>",
        "id": 225073725,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612382798
    },
    {
        "content": "<p>I see, because to do this i need to keep a database of things like every variable in a file, its type, its definition location, etc</p>",
        "id": 225073799,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612382839
    },
    {
        "content": "<p>RA doesn't really keep a full database of all that information. it's lazily computed, so you've got to ask for it before it's in the DB</p>",
        "id": 225073891,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1612382877
    },
    {
        "content": "<p>oh right <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 225073968,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612382898
    },
    {
        "content": "<p>theoretically it should be possible to store and reload the DB to reduce startup times; that's how rustc incremental compilation works. as Jonas wrote, it'd require everything to be serializable and salsa support though</p>",
        "id": 225074220,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1612383011
    },
    {
        "content": "<p>I see, then i think ill just do it the brute force way and have a program to call RA and load the data into postgres. How would i go about crawling every file and getting stuff like the variables in there, etc?</p>",
        "id": 225074484,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612383140
    },
    {
        "content": "<p>analysis-stats already loops over items, so you can pattern match all the way down</p>",
        "id": 225082324,
        "sender_full_name": "detrumi",
        "timestamp": 1612386573
    },
    {
        "content": "<p>Yeah getting items seems super easy, but i cant find a way of getting defined variables :/</p>",
        "id": 225083186,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612386914
    },
    {
        "content": "<p>it's a bit obscure, but maybe this <code>From</code> impl helps? <a href=\"https://rust-analyzer.github.io/rust-analyzer/hir/struct.Local.html#impl-From%3C(DefWithBodyId%2C%20Idx%3CPat%3E)%3E\">https://rust-analyzer.github.io/rust-analyzer/hir/struct.Local.html#impl-From%3C(DefWithBodyId%2C%20Idx%3CPat%3E)%3E</a></p>",
        "id": 225083670,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612387100
    },
    {
        "content": "<p>isnt this only for functions, statics, and consts?</p>",
        "id": 225083779,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612387141
    },
    {
        "content": "<p>Oh i see what you mean</p>",
        "id": 225083957,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1612387211
    }
]