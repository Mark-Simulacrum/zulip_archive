[
    {
        "content": "<p>Hey, the new rowan finally at the stage where we can meaningfully compare performance and API changes.</p>",
        "id": 227467274,
        "sender_full_name": "matklad",
        "timestamp": 1614100430
    },
    {
        "content": "<p>Take a look at this PR: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7498\">https://github.com/rust-analyzer/rust-analyzer/pull/7498</a></p>",
        "id": 227467344,
        "sender_full_name": "matklad",
        "timestamp": 1614100445
    },
    {
        "content": "<p>I'd love to see some input from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> on whether we should or should not switch to it.</p>\n<p>The main benefit is that the API for mutating trees is much better and composable. </p>\n<p>The main drawback is that's not zero cost  -- even if you don't touch trees, there's still some fluff happening.</p>",
        "id": 227467575,
        "sender_full_name": "matklad",
        "timestamp": 1614100550
    },
    {
        "content": "<p>What about the memory usage? It looks like <code>mallinfo</code> is overflowing again in your test. It goes from 392 MB to -1223 MB, which seems worse than slightly more memory.</p>",
        "id": 227469036,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614101115
    },
    {
        "content": "<p>The slowdown (5.88s to 6.33s) seems quite reasonable to me. I think assists are quite popular, and might become even more so in the future, so it's not a bad idea to invest in the API.</p>",
        "id": 227469465,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614101284
    },
    {
        "content": "<p>Agreed on both of those comment. The API improvements look really nice and should unlock some assists that would otherwise be a PITA to implement. The slowdown isn't terrible but the memory usage is concerning.</p>",
        "id": 227470006,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1614101480
    },
    {
        "content": "<p>urgh, I might have left some memory leaks in?</p>",
        "id": 227474984,
        "sender_full_name": "matklad",
        "timestamp": 1614103260
    },
    {
        "content": "<p>updated the numbers: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7498#issuecomment-784359922\">https://github.com/rust-analyzer/rust-analyzer/pull/7498#issuecomment-784359922</a></p>",
        "id": 227483099,
        "sender_full_name": "matklad",
        "timestamp": 1614106184
    },
    {
        "content": "<p><em><code>malloc()</code> goes brr..</em> :D. That's quite an increase in memory usage</p>",
        "id": 227483348,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614106274
    },
    {
        "content": "<p>Hm, I just realized a thing which makes me more optimistic about the idea.</p>\n<p>The fundamental trick we employ here is using different representations for “mutable” and “immutable” trees. At the moment, the two reprs are quite similar, and differ only in the number of fields. </p>\n<p>But it feels like explicit switch between mutable and immutable tree pages the way to introducing an array-based immutable impl</p>",
        "id": 227485298,
        "sender_full_name": "matklad",
        "timestamp": 1614106965
    },
    {
        "content": "<p>That would be awesome</p>",
        "id": 227487100,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614107662
    }
]