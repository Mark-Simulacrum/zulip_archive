[
    {
        "content": "<p><a href=\"/user_uploads/4715/DVvbhvq2xATx6picIH7JJvD4/image.png\" target=\"_blank\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/DVvbhvq2xATx6picIH7JJvD4/image.png\" target=\"_blank\" title=\"image.png\"><img src=\"/user_uploads/4715/DVvbhvq2xATx6picIH7JJvD4/image.png\"></a></div><p>One of the users got this during the client update.<br>\nIt got away and updated normally after a few attempts, he reported, so I could not squeeze any extra info out of him unfortunately.</p>\n<p>But, IMO, we could process <code>null</code>'s better and show some meaningful message instead.<br>\nI have a suspicion that this behavior is caused by this line (simply because it seems to be the only place destructuring <code>releaseName</code>): <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/58d44c6ba2de32a31a09bbcaf61365a69b69374c/editors/code/src/installation/download_artifact.ts#L18\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/58d44c6ba2de32a31a09bbcaf61365a69b69374c/editors/code/src/installation/download_artifact.ts#L18\">https://github.com/rust-analyzer/rust-analyzer/blob/58d44c6ba2de32a31a09bbcaf61365a69b69374c/editors/code/src/installation/download_artifact.ts#L18</a></p>\n<p>which might be caused by the <code>fetchArtifactReleaseInfo</code> function returning <code>null</code> here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/49b9c8a0524e53f9bd75b50b6e87d7d88587629f/editors/code/src/installation/fetch_artifact_release_info.ts#L38\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/49b9c8a0524e53f9bd75b50b6e87d7d88587629f/editors/code/src/installation/fetch_artifact_release_info.ts#L38\">https://github.com/rust-analyzer/rust-analyzer/blob/49b9c8a0524e53f9bd75b50b6e87d7d88587629f/editors/code/src/installation/fetch_artifact_release_info.ts#L38</a> </p>\n<p>Or maybe I'm completely wrong and this is an artifact caused by something else.</p>",
        "id": 188940957,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1582561373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> see the \"Update the bin server?\" thread</p>",
        "id": 188941066,
        "sender_full_name": "Laurențiu",
        "timestamp": 1582561441
    },
    {
        "content": "<p>Interesting, a different field caused the issue here and there. </p>\n<p>But glad that it's a single thing we need to just tolerate, thanks for the pointer.</p>",
        "id": 188941258,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1582561559
    },
    {
        "content": "<p>I do want an <code>assert()</code> there ...</p>",
        "id": 188941334,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582561600
    },
    {
        "content": "<p>Postfix <code>!</code> is nothing like <code>unwrap</code>, the <code>null</code> error may appear in any unrelated part of your code...</p>",
        "id": 188941409,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582561657
    },
    {
        "content": "<blockquote>\n<p>But, IMO, we could process null's better and show some meaningful message instead.</p>\n</blockquote>\n<p>agree on that</p>",
        "id": 188941456,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582561682
    },
    {
        "content": "<p>Let me clarify, <span class=\"user-mention\" data-user-id=\"231447\">@Kirill Bulatov</span> , you are right in your assumptions. <code>fetchArtifactReleaseInfo()</code> did return <code>null</code>, but we <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/bd4ea87f7442541123e3bbd7e17bfecdfb3c18c6/editors/code/src/installation/server.ts#L66\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/bd4ea87f7442541123e3bbd7e17bfecdfb3c18c6/editors/code/src/installation/server.ts#L66\">just ignored</a> it with a postfix <code>!</code> operator (which just silences the compiler and does nothing in runtime)</p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"kr\">const</span> <span class=\"nx\">releaseInfo</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">await</span> <span class=\"nx\">fetchArtifactReleaseInfo</span><span class=\"p\">(</span><span class=\"nx\">source</span><span class=\"p\">.</span><span class=\"nx\">repo</span><span class=\"p\">,</span> <span class=\"nx\">source</span><span class=\"p\">.</span><span class=\"nx\">file</span><span class=\"p\">,</span> <span class=\"nx\">source</span><span class=\"p\">.</span><span class=\"nx\">version</span><span class=\"p\">))</span><span class=\"o\">!</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>There was an <code>assert(releaseInfo !== null)</code> before, but we removed it...</p>",
        "id": 188941835,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582561896
    },
    {
        "content": "<p>the main reason to remvoe that assert was that it pulled in a 3rd party lib. Sorry if didn't clarified that initially, I'll be totally ok with adding</p>\n<div class=\"codehilite\"><pre><span></span>function checkNonNull&lt;T&gt;(value: T | undefined): T\n</pre></div>\n\n\n<p>function to utils.ts</p>",
        "id": 188942324,
        "sender_full_name": "matklad",
        "timestamp": 1582562190
    },
    {
        "content": "<p>Thanks for the clarification.</p>\n<p>It's not like you've asked for my opinion, but here it is anyway <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> <br>\nI would have used neither <code>!</code> nor <code>assert</code> and did a nullability check instead, seems like a logical way to be happy both with the compiler and with the unknown disturbances in the network, that may cause the function return <code>null</code> (if I got it right, we return <code>null</code> in the function if we fail to get the release via the network, seems like a possible enough usecase to process it instead of silencing).</p>",
        "id": 188942416,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1582562267
    },
    {
        "content": "<p>Can we show a message instead of the assert? I don't expect the LSP server name to change often, but it's data coming from GitHub and it's reasonable to handle errors and such.</p>",
        "id": 188942489,
        "sender_full_name": "Laurențiu",
        "timestamp": 1582562283
    },
    {
        "content": "<p>The function returns <code>null</code> only when the request was successful but the artifact was not found, otherwise all network errors are considered unrecoverable and are just caught by the <code>catch</code> clause <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/bd4ea87f7442541123e3bbd7e17bfecdfb3c18c6/editors/code/src/installation/server.ts#L70-L89\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/bd4ea87f7442541123e3bbd7e17bfecdfb3c18c6/editors/code/src/installation/server.ts#L70-L89\">here</a>, an assertion error would be caught too.</p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">vscode</span><span class=\"p\">.</span><span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">showErrorMessage</span><span class=\"p\">(</span>\n            <span class=\"sb\">`Failed to download language server from </span><span class=\"si\">${</span><span class=\"nx\">source</span><span class=\"p\">.</span><span class=\"nx\">repo</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\"> `</span> <span class=\"o\">+</span>\n            <span class=\"sb\">`GitHub repository: </span><span class=\"si\">${</span><span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n        <span class=\"p\">);</span>\n\n        <span class=\"nx\">log</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\n        <span class=\"nx\">dns</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"s1\">&#39;example.com&#39;</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">(</span>\n            <span class=\"nx\">addrs</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">log</span><span class=\"p\">.</span><span class=\"nx\">debug</span><span class=\"p\">(</span><span class=\"s2\">&quot;DNS resolution for example.com was successful&quot;</span><span class=\"p\">,</span> <span class=\"nx\">addrs</span><span class=\"p\">),</span>\n            <span class=\"nx\">err</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"nx\">log</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;DNS resolution for example.com failed, &quot;</span> <span class=\"o\">+</span>\n                    <span class=\"s2\">&quot;there might be an issue with Internet availability&quot;</span>\n                <span class=\"p\">);</span>\n                <span class=\"nx\">log</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">);</span>\n        <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>",
        "id": 188942898,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582562545
    },
    {
        "content": "<p>Another approach would be to make <code>featchArtifactReleaseInfo()</code> return non-nullable value and throw <code>Artifact was not found</code> error instead of returning <code>null</code>.</p>",
        "id": 188943121,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1582562694
    }
]