[
    {
        "content": "<p>Interesting post about Lezer -- Tree Sitter for JavaScript: <a href=\"https://marijnhaverbeke.nl/blog/lezer.html\">https://marijnhaverbeke.nl/blog/lezer.html</a></p>\n<p>I especially like this idea: <a href=\"https://marijnhaverbeke.nl/blog/lezer.html#buffer-trees\">https://marijnhaverbeke.nl/blog/lezer.html#buffer-trees</a></p>\n<p>Basicially, for small subtrees, we store green subtree as a single array</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"132829\">@Christopher Durham</span></p>",
        "id": 204205861,
        "sender_full_name": "matklad",
        "timestamp": 1594992732
    },
    {
        "content": "<p>There's definitely some interesting concepts in here that I'd like to experiment with. Unfortunately, I don't know at a glance how simple it will be to get working with Rust's static GC rather than a fully dynamic GC, and it's definitely enough different from how rowan/sorbus are set up that it will require another complete restructuring of the tree <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 204365204,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1595184456
    },
    {
        "content": "<p>My opinion: sorbus's tree is a good incremental improvement over rowan's current, and solves the <strong><em>O</em>(<em>n</em>)</strong> <code>SyntaxPtr</code> problem, so we should work on getting sorbus integrated with the current design first, then I can look at using some of the ideas from tree-sitter and lezer.</p>",
        "id": 204365256,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1595184528
    }
]