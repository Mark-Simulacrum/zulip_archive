[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> so I've been wanting to redesign the settings keys in the extension and was wondering what might be a good approach since we'd introduce a new swath of settings for rust-analyzer.</p>\n<p>I've had a look at how other extensions do it and the approach I liked best was C#'s - e.g. it used tool-specific prefix without a common extension-wide prefix so <code>omnisharp.{path, autoStart, ...}</code> for OmniSharp-specific settings, <code>razor.{...}</code> for Razor-specific ones and <code>csharp.{...}</code> for regular/top-level settings.</p>\n<p>This renders quite nicely in the new graphical UI for vscode settings and it' still discoverable by navigating to <code>Extensions &gt; C# &gt; Feature Contributions</code> where there's an entire list of them - obviously that's the same for 'C# configuration' section in the graphical UI for vscode settings.</p>\n<p>What do you think?</p>",
        "id": 196813202,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1588876737
    },
    {
        "content": "<p>I believe this has the benefit of retaining the existing <code>rust-analyzer.{...}</code> settings already used by the RA extension</p>",
        "id": 196813264,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1588876767
    },
    {
        "content": "<p>Hm, I think, in the end, I'd prefer to namespace just everything under <code>rust</code></p>",
        "id": 196813741,
        "sender_full_name": "matklad",
        "timestamp": 1588876976
    },
    {
        "content": "<p>It's better for json completion, where you can do <code>rust.</code></p>",
        "id": 196813768,
        "sender_full_name": "matklad",
        "timestamp": 1588876992
    },
    {
        "content": "<p>But using several different keys doesn't seem to bad to me either.</p>",
        "id": 196813811,
        "sender_full_name": "matklad",
        "timestamp": 1588877017
    },
    {
        "content": "<p>Isn't there already a <code>language.</code> convention for vscode?</p>",
        "id": 196824330,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1588882273
    },
    {
        "content": "<p>I'm strongly in favor of a <code>rust.</code> prefix, even if only for discoverability.</p>",
        "id": 196862900,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1588920555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203366\">Jeremy Kolb</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/merged.20vscode.20settings/near/196824330\">said</a>:</p>\n<blockquote>\n<p>Isn't there already a <code>language.</code> convention for vscode?</p>\n</blockquote>\n<p>The above settings such as <code>razor.</code> prefixed one come from official Microsoft's C# extension so I assume it depends on the team</p>",
        "id": 197147297,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1589204849
    },
    {
        "content": "<p>there is also the <code>[$langId]: { &lt;settings_for_any_$langId_file&gt; }</code> which applies for anything activated for a specific language</p>",
        "id": 197147389,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1589204899
    }
]