[
    {
        "content": "<p>I just ran the memory usage command and it only freed up something like 400 MB. r-a is still consuming almost 2 GB of RAM after that. Has anyone seen this happen?</p>",
        "id": 214177673,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603368869
    },
    {
        "content": "<p>No</p>",
        "id": 214177969,
        "sender_full_name": "matklad",
        "timestamp": 1603369021
    },
    {
        "content": "<p>I think I saw the report that recent release increased memory usage for someone from 2GB to 4GB</p>",
        "id": 214177993,
        "sender_full_name": "matklad",
        "timestamp": 1603369040
    },
    {
        "content": "<p>Could it be that freeing is run concurrently with prefetching, and it evens out to no-change?</p>",
        "id": 214178135,
        "sender_full_name": "matklad",
        "timestamp": 1603369106
    },
    {
        "content": "<p>Probably makes sense to add a config flag to disable priming, it would be useulf in the futur to debug all kinds of issues</p>",
        "id": 214178189,
        "sender_full_name": "matklad",
        "timestamp": 1603369138
    },
    {
        "content": "<p>Priming only happens once on startup</p>",
        "id": 214180603,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603370490
    },
    {
        "content": "<p>Hm, maybe&amp;</p>",
        "id": 214180693,
        "sender_full_name": "matklad",
        "timestamp": 1603370536
    },
    {
        "content": "<p>I would think the opposite</p>",
        "id": 214180706,
        "sender_full_name": "matklad",
        "timestamp": 1603370542
    },
    {
        "content": "<p>We trigger it from <code>update_file_notifications_on_threadpool</code></p>",
        "id": 214180802,
        "sender_full_name": "matklad",
        "timestamp": 1603370606
    },
    {
        "content": "<p>so, after every change</p>",
        "id": 214180808,
        "sender_full_name": "matklad",
        "timestamp": 1603370610
    },
    {
        "content": "<p>Oh, right, nevermind me</p>",
        "id": 214181364,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603370900
    },
    {
        "content": "<p>6.7 GB... this might be a problem</p>",
        "id": 214524429,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603676337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Memory.20usage.20issue/near/214177673\">said</a>:</p>\n<blockquote>\n<p>I just ran the memory usage command and it only freed up something like 400 MB. r-a is still consuming almost 2 GB of RAM after that. Has anyone seen this happen?</p>\n</blockquote>\n<p>I've checked this again and it doesn't seem to be caused by cache priming. Computing memory usage twice in a row correctly yields 0mb across the board for the second run. RSS stays high, so that might be a different issue, or just weird allocator behavior.</p>\n<p>When modifying a file, \"indexing...\" starts, RSS immediately goes down by a lot, and then slowly grows back to where it was before.</p>",
        "id": 214569640,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603717337
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> have zero idea about what might be the issue. The best I can suggest is dropping things one by one and noting when it floats :)</p>",
        "id": 214569828,
        "sender_full_name": "matklad",
        "timestamp": 1603717443
    },
    {
        "content": "<p>I'll try with mimalloc</p>",
        "id": 214570222,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603717617
    },
    {
        "content": "<p>Does <code>massif</code> work?</p>",
        "id": 214570282,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603717643
    },
    {
        "content": "<p>Yes, but it's excruciatingly slow</p>",
        "id": 214570329,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603717675
    },
    {
        "content": "<p>so i'd rather avoid it</p>",
        "id": 214570379,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603717684
    },
    {
        "content": "<p>mimalloc behaves the same way, but is less memory efficient</p>",
        "id": 214570892,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603717934
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Inference: 23.91s, 115428mi\nTotal: 36.84s, 206986mi\n</code></pre></div>\n\n\n<p>???</p>",
        "id": 214571397,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603718269
    },
    {
        "content": "<p>TBH, I don't remmeber if those are diffs or totals</p>",
        "id": 214571507,
        "sender_full_name": "matklad",
        "timestamp": 1603718320
    },
    {
        "content": "<p>Oh, that's million instructions, not megabytes of RAM</p>",
        "id": 214571511,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603718321
    },
    {
        "content": "<p>and yes, that as well</p>",
        "id": 214571544,
        "sender_full_name": "matklad",
        "timestamp": 1603718339
    },
    {
        "content": "<p>We still use some 1.2-1.3 GB on RA itself, that's maybe a bit much?</p>",
        "id": 214571644,
        "sender_full_name": "Laurențiu",
        "timestamp": 1603718396
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Inference: 41.06ms, 96mi, -57kb\nTotal: 30.17s, 100352mi, 1225mb\n</code></pre></div>\n\n\n<p>-57kb????</p>",
        "id": 214577323,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603721187
    },
    {
        "content": "<p>Oh, it's just a diff, that seems confusing</p>",
        "id": 214577731,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603721370
    },
    {
        "content": "<p>Looks like we <em>actually</em> use around 1.4G</p>",
        "id": 214577754,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603721380
    }
]