[
    {
        "content": "<p>I'm trying to work out problems with my installation of the VS Code extension; I'm seeing essentially a bunch of \"unknown file: /Users/fklock/Dev/Rust/play/src/main.rs\" (see also <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/717\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/717\">rust-analyzer#717</a>)</p>",
        "id": 160195933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964698
    },
    {
        "content": "<p>but my most immediate question is: what is the best way to try to debug this? The two routes I can imagine are:</p>",
        "id": 160195975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964751
    },
    {
        "content": "<p>have you updated recently?</p>",
        "id": 160196000,
        "sender_full_name": "matklad",
        "timestamp": 1551964784
    },
    {
        "content": "<p>Either 1. Try to emulate whatever request that Code is sending to <code>ra_lsp_server</code>, and use that locally</p>",
        "id": 160196002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964786
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/940\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/940\">https://github.com/rust-analyzer/rust-analyzer/pull/940</a> should give you feedback for when stuff was loaded succesfully.</p>",
        "id": 160196010,
        "sender_full_name": "matklad",
        "timestamp": 1551964797
    },
    {
        "content": "<blockquote>\n<p>have you updated recently?</p>\n</blockquote>\n<p>I believe I'm using currently nightly</p>",
        "id": 160196012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964798
    },
    {
        "content": "<p>I mean, updating rust-analyzer itself. <code>git pull &amp; cargo jinstall-lsp</code></p>",
        "id": 160196077,
        "sender_full_name": "matklad",
        "timestamp": 1551964828
    },
    {
        "content": "<p>(<code>j</code> for jemalloc)</p>",
        "id": 160196083,
        "sender_full_name": "matklad",
        "timestamp": 1551964836
    },
    {
        "content": "<blockquote>\n<p>Either 1. Try to emulate whatever request that Code is sending to <code>ra_lsp_server</code>, and use that locally</p>\n</blockquote>\n<p>Or 2. Figure out how to get <em>more</em> debug info from the Code output terminal; e.g. figure out how to make it set RUST_LOG etc</p>",
        "id": 160196092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964844
    },
    {
        "content": "<p>by \"nightly\" I meant</p>",
        "id": 160196102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964856
    },
    {
        "content": "<p>a locally built rust-analyzer</p>",
        "id": 160196104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964860
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md\">https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md</a> can this be used ?</p>",
        "id": 160196121,
        "sender_full_name": "vipentti",
        "timestamp": 1551964873
    },
    {
        "content": "<p>let me try to double-check whether that belief is true</p>",
        "id": 160196129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964885
    },
    {
        "content": "<p>For debugging, I just to </p>\n<div class=\"codehilite\"><pre><span></span>$ env RUST_LOG=gen_lsp_server=trace code .\n</pre></div>",
        "id": 160196130,
        "sender_full_name": "matklad",
        "timestamp": 1551964885
    },
    {
        "content": "<p>Hmm okay</p>",
        "id": 160196137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964895
    },
    {
        "content": "<p>(I'm on Mac OS X so I don't always invoke things from command line)</p>",
        "id": 160196144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964913
    },
    {
        "content": "<p>but I think I can get the same effect</p>",
        "id": 160196192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964924
    },
    {
        "content": "<p>why \"gen_lsp_server\" and not \"ra_lsp_server\" ?</p>",
        "id": 160196228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551964956
    },
    {
        "content": "<p>I belive we can set debug level here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/editors/code/src/server.ts#L15-L18\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/editors/code/src/server.ts#L15-L18\">https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/editors/code/src/server.ts#L15-L18</a></p>",
        "id": 160196229,
        "sender_full_name": "matklad",
        "timestamp": 1551964959
    },
    {
        "content": "<p><code>gen_lsp_server</code> is the \"generic\" lsp library, so it's the thing which actually sends and reads JSON</p>",
        "id": 160196263,
        "sender_full_name": "matklad",
        "timestamp": 1551964988
    },
    {
        "content": "<p>tracing it gives you the most complete picture, though its a lot of data</p>",
        "id": 160196273,
        "sender_full_name": "matklad",
        "timestamp": 1551965004
    },
    {
        "content": "<p>ah okay. So doing RUST_LOG=gen_lsp_server would let me see the actual JSON that is sent on the \"pipe\"</p>",
        "id": 160196293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965029
    },
    {
        "content": "<p>I belive @DJMcNab implemented some cool tracing of requests on the client side as well: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/302\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/302\">https://github.com/rust-analyzer/rust-analyzer/pull/302</a></p>",
        "id": 160196358,
        "sender_full_name": "matklad",
        "timestamp": 1551965059
    },
    {
        "content": "<p>though I've never had a chance to try that infra</p>",
        "id": 160196366,
        "sender_full_name": "matklad",
        "timestamp": 1551965076
    },
    {
        "content": "<p>Yeah , you can set <code>\"rust-analyzer.trace.server\": \"verbose\"</code> in your settings.json to get tracing from the client</p>",
        "id": 160196471,
        "sender_full_name": "vipentti",
        "timestamp": 1551965165
    },
    {
        "content": "<blockquote>\n<p>Yeah , you can set <code>\"rust-analyzer.trace.server\": \"verbose\"</code> in your settings.json to get tracing from the client</p>\n</blockquote>\n<p>oh okay well I actually did do that. But it didn't quite tell me enough for me to immediately figure out how to replicate the same input stream manually when interacting with a manually invoked <code>ra_lsp_server</code></p>",
        "id": 160196505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965221
    },
    {
        "content": "<p>or at least, I didn't know how to take the trace output and feed it into the running <code>ra_lsp_server</code>; it errors out after the first input I provided saying it expected an initialization</p>",
        "id": 160196537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965252
    },
    {
        "content": "<p>(and that's about when I decided to ask in here rather than dissect further)</p>",
        "id": 160196546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965269
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md\">https://github.com/rust-analyzer/rust-analyzer/blob/master/DEBUGGING.md</a> can this be used ?</p>\n</blockquote>\n<p>I hadn't actually looked at this yet, let me look now</p>",
        "id": 160196606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965287
    },
    {
        "content": "<p>Heh, I personally never try to manually feed rust-analyzer with data. Rather, I use logging/printf + running the real VS Code instance.</p>",
        "id": 160196646,
        "sender_full_name": "matklad",
        "timestamp": 1551965363
    },
    {
        "content": "<p>basically, if you press <code>F5</code>, you'll get a new vscode instance with isolated rust-analyzer</p>",
        "id": 160196654,
        "sender_full_name": "matklad",
        "timestamp": 1551965384
    },
    {
        "content": "<p>build freshly from source</p>",
        "id": 160196660,
        "sender_full_name": "matklad",
        "timestamp": 1551965389
    },
    {
        "content": "<p>If you do want to feed it \"manually\", the best way is probably to write a \"heavy_test\" in \"heavy_tests/main.rs\", which has some infra for communicating with ra set up</p>",
        "id": 160196750,
        "sender_full_name": "matklad",
        "timestamp": 1551965455
    },
    {
        "content": "<p>okay. I'm not committed to either strategy (of trying to isolate ra_lsp_server vs working with the integrated setup)</p>",
        "id": 160196786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965498
    },
    {
        "content": "<p>I think you can perform the requests manually if you run the initialization from <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/gen_lsp_server/src/lib.rs#L86-L105\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/gen_lsp_server/src/lib.rs#L86-L105\">https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/gen_lsp_server/src/lib.rs#L86-L105</a></p>",
        "id": 160196790,
        "sender_full_name": "vipentti",
        "timestamp": 1551965506
    },
    {
        "content": "<p>though some of the docs in DEBUGGING.md is definitely linux-centric. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> <span aria-label=\"apple\" class=\"emoji emoji-1f34e\" role=\"img\" title=\"apple\">:apple:</span></p>",
        "id": 160196795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965515
    },
    {
        "content": "<p>:-) </p>\n<p>That's for debugger as in lldb. If you don't need that, <code>F5</code> (Launch the Debug Extension, this will build the extension and the lsp server.) should \"Just Work\".</p>",
        "id": 160196896,
        "sender_full_name": "matklad",
        "timestamp": 1551965625
    },
    {
        "content": "<p>okay I'll try <code>F5</code></p>",
        "id": 160196905,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551965640
    },
    {
        "content": "<p>That said, I have \"overhaul developer docs\" on my todo list: we have contributing.md, architecture.md, guide.md, debugging.md, and this is just not great :(</p>",
        "id": 160196953,
        "sender_full_name": "matklad",
        "timestamp": 1551965662
    },
    {
        "content": "<p>hmm. Now I'm not even sure if I was running the <code>ra_lsp_server</code> that I thought I was; I hasn't overrode that setting in my settings.json for VS Code</p>",
        "id": 160198712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967156
    },
    {
        "content": "<p>is there a way to tell the ra_lsp to quit and restart itself from VS Code? Or do I need to quit VS Code and restart it (or disable the extension and reenable it?)</p>",
        "id": 160198751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967196
    },
    {
        "content": "<p>/me is a VS Code newbie</p>",
        "id": 160198846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967235
    },
    {
        "content": "<p>I think you need to restart VS Code</p>",
        "id": 160198847,
        "sender_full_name": "matklad",
        "timestamp": 1551967236
    },
    {
        "content": "<p>/me was VS Code newbie in september</p>",
        "id": 160198872,
        "sender_full_name": "matklad",
        "timestamp": 1551967256
    },
    {
        "content": "<p>So, coming back to the original issue of \"unknown file\". My first hypothesis would be that this file just don't reside under any root, known to rust-analyzer, so I would try to add a <code>println</code> to the place where we initialize workspace.</p>",
        "id": 160199520,
        "sender_full_name": "matklad",
        "timestamp": 1551967641
    },
    {
        "content": "<p>I think you can also run \"Reload Window\" in vscode to get it to restart lsp</p>",
        "id": 160199566,
        "sender_full_name": "vipentti",
        "timestamp": 1551967682
    },
    {
        "content": "<p>If we don't have the root of the workspace as root that meanas that VS Code/rust-analyzer integration layer contains a bug</p>",
        "id": 160199610,
        "sender_full_name": "matklad",
        "timestamp": 1551967687
    },
    {
        "content": "<p>how/where does rust-analyzer decide what/where is the sysroot? When I run it from the command line, I'm getting messages about rust-src missing and asking me to install that via rustup, but I've already done that.</p>",
        "id": 160199681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967742
    },
    {
        "content": "<p>If we do have the root, but don't see the file, that either means a bug in VFS, or some timing issues/misconceptions (i.e, VS Code asks as about file before we've scanned it, and without sending didOpenDOcument event)</p>",
        "id": 160199693,
        "sender_full_name": "matklad",
        "timestamp": 1551967746
    },
    {
        "content": "<p>it runts <code>rustc --print sysroot</code> and looks for src dir there</p>",
        "id": 160199737,
        "sender_full_name": "matklad",
        "timestamp": 1551967780
    },
    {
        "content": "<p>ah!</p>",
        "id": 160199750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967792
    },
    {
        "content": "<p>perhaps ra uses different toolchain than the one you've added roots to?</p>",
        "id": 160199755,
        "sender_full_name": "matklad",
        "timestamp": 1551967795
    },
    {
        "content": "<p>yeah, I have some wonkiness in my setup that can cause all kinds of problems there I bet</p>",
        "id": 160199817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967809
    },
    {
        "content": "<p>Hmm, do you need RUST_SRC_PATH set?</p>",
        "id": 160199821,
        "sender_full_name": "vipentti",
        "timestamp": 1551967810
    },
    {
        "content": "<p>Or do we figure out the rust-src automatically?</p>",
        "id": 160199875,
        "sender_full_name": "vipentti",
        "timestamp": 1551967836
    },
    {
        "content": "<p>franktly, I don't know <em>which</em> toolchain is used by rust-analyzer exactly :) I guess, the one in the <code>PATH</code> that Vscode sees?</p>",
        "id": 160199884,
        "sender_full_name": "matklad",
        "timestamp": 1551967843
    },
    {
        "content": "<p>(e.g. I have things set up to use homebrew by default, which <em>does</em> have rust installed, but I never use that; I manually source <code>~/.cargo/env</code> when I want to actually hack)</p>",
        "id": 160199894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967851
    },
    {
        "content": "<p>code wide, the entry point to project discovery is here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/ra_project_model/src/lib.rs#L44-L48\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/ra_project_model/src/lib.rs#L44-L48\">https://github.com/rust-analyzer/rust-analyzer/blob/5232099977d07492c1b6d5e6163c70d4f6eb07df/crates/ra_project_model/src/lib.rs#L44-L48</a></p>",
        "id": 160199943,
        "sender_full_name": "matklad",
        "timestamp": 1551967897
    },
    {
        "content": "<p>okay, now that I (remembered to) run <code>source ~/.cargo/env</code> in my terminal before running <code>code</code> from that terminal, <code>rust-analyzer</code> seems to work. Next step: figure out whether the same root problem is what is plaguing Visual Studio Code when I <em>don't</em> run it from the terminal.</p>",
        "id": 160200062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967964
    },
    {
        "content": "<p>Do you have rustc in your path?</p>",
        "id": 160200103,
        "sender_full_name": "vipentti",
        "timestamp": 1551967990
    },
    {
        "content": "<p>I did and do</p>",
        "id": 160200115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551967998
    },
    {
        "content": "<p>but the default, from homebrew, was not the one I normally use</p>",
        "id": 160200146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968018
    },
    {
        "content": "<p>its like 1.30 and doesn't have the src installed, etc</p>",
        "id": 160200161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968036
    },
    {
        "content": "<p>I should just de-install it</p>",
        "id": 160200173,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968041
    },
    {
        "content": "<p>because i think when it gets used it just ends up causing problems/confusion for me</p>",
        "id": 160200240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968063
    },
    {
        "content": "<p>(and likewise I think I was also using an out-of-date versus of rust-analyzer, because I hadn't previously told the settings.json to point at the one I had locally built.)</p>",
        "id": 160200297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968106
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/945\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/945\">https://github.com/rust-analyzer/rust-analyzer/issues/945</a> to help with \"unexpected version of rustc is picked up\".</p>",
        "id": 160200712,
        "sender_full_name": "matklad",
        "timestamp": 1551968344
    },
    {
        "content": "<p>ah that is an excellent point</p>",
        "id": 160200763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968385
    },
    {
        "content": "<p>though... if there are multiple workspaces, can't they have distinct overrides?</p>",
        "id": 160200782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968399
    },
    {
        "content": "<p>I may not be using the word \"workspace\" correctly there</p>",
        "id": 160200874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968426
    },
    {
        "content": "<p>VS Code has a single workspace. But you can add multiple directories to it, and they can each represent distinct crates with distinct overrides</p>",
        "id": 160200912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968455
    },
    {
        "content": "<p>that is what I am musing about</p>",
        "id": 160200921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968460
    },
    {
        "content": "<p>(maybe I should be posting these thoughts elsewhere, or hold back on them until I inspect more carefully.)</p>",
        "id": 160200955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968479
    },
    {
        "content": "<p>well, yes, I think \"if you work on a set of projects, they must use the same rustc version for rust-analyzer\"  is just the constraint we have to leave with.</p>",
        "id": 160201107,
        "sender_full_name": "matklad",
        "timestamp": 1551968558
    },
    {
        "content": "<p>seems reasonable. Probably should detect when they differ and issue a warning</p>",
        "id": 160201167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968600
    },
    {
        "content": "<p>I'll make a note on the ticket</p>",
        "id": 160201177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968608
    },
    {
        "content": "<p>Though, ideally, we should be able to state \"language level\" so that, for example, you can use <code>rustc 1.92.0</code> for code analysis, but have a setting to check that the code is in fact compatible with <code>rustc 1.62.0</code></p>",
        "id": 160201193,
        "sender_full_name": "matklad",
        "timestamp": 1551968618
    },
    {
        "content": "<p>In general, this \"misconfiguraton\" problems are a bane for IDE developers: they crop up fairly regularly, because folks use all kinds of weird set ups and you can't debug them, because everything works on your machine. </p>\n<p>It pays off to build-in \"smartness\" into workspace discovery, so that users don't have to configure stuff themselves (that's why \"using rustc from project dir\" is better than an explicit setting for rustc). It's also helpful to issue \"positive\" notifications when stuff does work. In the recent versions of rust-analyzer, you get \"workspace loaded\" notification</p>",
        "id": 160201575,
        "sender_full_name": "matklad",
        "timestamp": 1551968844
    },
    {
        "content": "<p>right, I have been seeing that</p>",
        "id": 160201684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968896
    },
    {
        "content": "<p>but it was a little confusing, because it was coming up after the notficatin about the failure to find the rust src at the sysroot</p>",
        "id": 160201708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968918
    },
    {
        "content": "<p>and so I was trying to understand whether the second notification represented some sort of recovery after the first failure</p>",
        "id": 160201751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968943
    },
    {
        "content": "<p>or if they were unrelated</p>",
        "id": 160201762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968946
    },
    {
        "content": "<p>(by the way, now that I've pointed my settings.json at my local build of <code>ra_lsp_server</code>, everything actually seems to be going very smoothly.)</p>",
        "id": 160201835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551968986
    },
    {
        "content": "<blockquote>\n<p>(that's why \"using rustc from project dir\" is better than an explicit setting for rustc)</p>\n</blockquote>\n<p>i definitely agree inferring from project dir is the better initial <em>default</em>.</p>",
        "id": 160202002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551969066
    },
    {
        "content": "<blockquote>\n<p>but it was a little confusing</p>\n</blockquote>\n<p>yeah... We do try to fail gracefully if Cargo or rustc is misconfigured. Ideally, if you don't have rust installed <em>at all</em>, you still should have completions for local variables and such. </p>\n<p>I am fixing the \"workspace loaded\" notification to say \"loaded $n packages\", whihc should make it clearer if stuf works or fails</p>",
        "id": 160202532,
        "sender_full_name": "matklad",
        "timestamp": 1551969430
    },
    {
        "content": "<p>BTW, the \"unknown file\" is a sort-of intentional dirty hack to surface misoconfiguration problems. </p>\n<p>I think that to be 100% correct we should just go and read the unknown files from disk. Nothing in the LSP speck prevents that.</p>\n<p>However, I've decided to treat that condition as a lound error for the time being, because it shows cleary if things are misconfigured. Looks like this hack worked as intended in this particular case .</p>",
        "id": 160202693,
        "sender_full_name": "matklad",
        "timestamp": 1551969530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> curious, which editor do you usually use? If that's Emacs, we do have a config for it in rust-analyer's repo</p>",
        "id": 160293083,
        "sender_full_name": "matklad",
        "timestamp": 1552054923
    },
    {
        "content": "<p>yes I usually use Emacs and plan to try to investigate the .el code I saw in rust-analyzer</p>",
        "id": 160293150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552054963
    },
    {
        "content": "<p>but I figured I would be better off using VS Code at the outset</p>",
        "id": 160293177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552054987
    },
    {
        "content": "<p>since I figured that had a larger audience and thus would provide a better initial out-of-the-box experience.</p>",
        "id": 160293203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552055011
    }
]