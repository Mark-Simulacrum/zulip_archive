[
    {
        "content": "<p>Hello I would like to write a tool which parses a rust crate and generates metadata about fn/structs etc.. This should include the places they are used and at the place of their use I'd need to figure out where they were defined. So I basically would like an iterator over all items in a file and get their source location/ comments/ type/ metadata if applicable or else get where they are used. I think using rust analyzer this should be fairly easy and would make things like \"go to definition\" on sourcehut possible <a href=\"https://drewdevault.com/2019/07/08/Announcing-annotations-for-sourcehut.html\">https://drewdevault.com/2019/07/08/Announcing-annotations-for-sourcehut.html</a> . I tried the ra_ide crate and ra_syntax crate but could not quite find the right part of the API. As far as I can see my use case is a bit unusual for RA because its kind of greedy whereas RA is more lazy/ on demand so if its not really supported API that would be a helpful answer as well. Thanks!</p>",
        "id": 203882818,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1594758232
    },
    {
        "content": "<p>AFAIK you should look at ra_hir, it provides name resolution, type inference and so on.</p>",
        "id": 203900977,
        "sender_full_name": "Mikail Bagishov",
        "timestamp": 1594769493
    },
    {
        "content": "<p>So what I think I can do is something along the lines of using ra_syntax to iterate over all tokens or some other nodes of the tree and for the ones that are interesting (like e.g. function, struct definitions and uses) invoke ra_ide to get the information for that position in the file but maybe there is an existing iterator-like thing I'm missing that would make this easier. <br>\nFor ha_hir I was not sure how to deal with the databases/ construct them/ there are a few of them. My approach was whenever I saw some struct I wanted to use, search where it was returned and this did not yield the information I wanted in these cases.</p>",
        "id": 203943336,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1594812852
    },
    {
        "content": "<p>Using ra_syntax and ra_ide in that way is probably the right approach</p>",
        "id": 203947588,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594815622
    },
    {
        "content": "<p>you could also take a look at the syntax highlighting code (<code>syntax_highlighting.rs</code>) for an example of something similar</p>",
        "id": 203947772,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594815738
    },
    {
        "content": "<p>and at <code>analysis_stats.rs</code> for an example of doing semantic analysis on a crate, but you're probably better off with the IDE level abstractions unless you want to do something special that they don't provide</p>",
        "id": 203947923,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594815847
    },
    {
        "content": "<p>you get a database by calling <code>raw_database()</code> on an <code>AnalysisHost</code></p>",
        "id": 203948001,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594815911
    },
    {
        "content": "<p>Ok thanks!</p>",
        "id": 203965351,
        "sender_full_name": "Benedikt Mandelkow",
        "timestamp": 1594824740
    }
]