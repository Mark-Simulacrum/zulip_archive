[
    {
        "content": "<p>hey folks,</p>\n<p>I've been using rust-analyzer w/ the nvim-lsp for a little while, and its been pretty great. However a few days ago I bumped up a dependency on one of the crates i've been building I noticed that all diagnostics were not being omitted, even with the most egregious of mistakes! On other projects on my machine, diagnostics seem to be working. some examples below:</p>\n<p>working: <a href=\"https://asciinema.org/a/fAqy1FVh82MT5SUUjaLMiUwko\">https://asciinema.org/a/fAqy1FVh82MT5SUUjaLMiUwko</a></p>\n<p>broken, on my little toy: <a href=\"https://asciinema.org/a/hNJ4Phu6APZTBciFB8wp4yHXo\">https://asciinema.org/a/hNJ4Phu6APZTBciFB8wp4yHXo</a></p>\n<p>I'd like to dig down a little and figure this out. has anyone done debug work w/ neovim-lsp and rust-analyzer and would have some tips on where to start? </p>\n<p>I poked around git issues, but there doesnt seem to be an exact match for this (maybe <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8622\">https://github.com/rust-analyzer/rust-analyzer/issues/8622</a>, but my project structure doesnt seem particularly exotic). If this behaviour is worth reporting as an issue on github I can be a little more precise with what i'm seeing there</p>\n<p>fwiw, rust-analyzer version: rust-analyzer 2021-04-19-95-g07fb65abb</p>\n<p>thanks, <br>\njimmy</p>",
        "id": 235991958,
        "sender_full_name": "Jimmy C",
        "timestamp": 1619288419
    },
    {
        "content": "<p>Does everything else work fine, like completions and assists?</p>",
        "id": 235992142,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1619288525
    },
    {
        "content": "<p>yeah everything else (completetion, assists, inlay type hints, etc) is working swimmingly.</p>\n<p>The one thing I forgot to mention is that diagnostics for derive macros are present, but diagnostics for \"normal\" code are all missing</p>",
        "id": 235993236,
        "sender_full_name": "Jimmy C",
        "timestamp": 1619289019
    },
    {
        "content": "<p>So I've been digging a bit, and I noticed that I am getting no AddDiagnostics messages being seen by main_loop.rs:handle (full enum variant is flycheck::Message::AddDiagnostic). I have a recent version of rust-analyzer built w/ debug signals, so I'm willing to step through this further.Has anyone seen this before or could anyone point me to the interface that generally emits diagnostics to be consumed by <code>handle_events</code>?</p>",
        "id": 237246091,
        "sender_full_name": "Jimmy C",
        "timestamp": 1620084356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407830\">@Jimmy C</span> see the <code>flycheck</code> module, it emits <code>cargo check</code> diagnosticsz</p>",
        "id": 237311736,
        "sender_full_name": "matklad",
        "timestamp": 1620130118
    },
    {
        "content": "<p>thanks a ton! turns out after finnicking a little bit with log messages, I got flycheck to spit out an error saying that <code>cargo check --workspace --message-format=json --manifest-path /path/to/my/project --all-targets --all-features</code> was failing. When I reran this command locally, I saw it was failing with with \"error: multiple packages link to native library <code>fontconfig</code>, but a native library can be linked only once\" .</p>\n<p>Lo and behold, there was a neglected member of this project's workspace that was causing this command to fail. once I fixed that, I had \"normal\" diagnostics back up across my project :) thanks for the tips. </p>\n<p>TL;DR: if you lose diagnostics suddenly, but the rest of rust-analyzer works, try running <code>cargo check --workspace --message-format=json --manifest-path /path/to/Cargo.toml --all-targets --all-features</code> to see if anything fails. thanks for the tip <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 237419966,
        "sender_full_name": "Jimmy C",
        "timestamp": 1620173064
    }
]