[
    {
        "content": "<p>thread for gh issue</p>",
        "id": 164454647,
        "sender_full_name": "matklad",
        "timestamp": 1556546475
    },
    {
        "content": "<p>I think I resolved it</p>",
        "id": 164454697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546520
    },
    {
        "content": "<p>nvm, problem solved</p>",
        "id": 164454702,
        "sender_full_name": "matklad",
        "timestamp": 1556546521
    },
    {
        "content": "<p>but i am curious</p>",
        "id": 164454749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546529
    },
    {
        "content": "<p>whether we should attempt to support both stable and nightly channels?</p>",
        "id": 164454762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546540
    },
    {
        "content": "<p>or maybe that's not worth it. I don't know</p>",
        "id": 164454773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546547
    },
    {
        "content": "<p>the dependence on the absence/presence of trailing commas in json output format seems quite unfortunate. Don't know which entity is to blame there, I guess its us.</p>",
        "id": 164454820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546587
    },
    {
        "content": "<p>I hope that this colon issue is an odd one</p>",
        "id": 164454827,
        "sender_full_name": "matklad",
        "timestamp": 1556546594
    },
    {
        "content": "<p>But people aren't <em>supposed</em> to rely on <code>{:?}</code> formatting...</p>",
        "id": 164454835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546600
    },
    {
        "content": "<p>Oh, is RA using <code>{:?}</code> as the way to generate the test output there? Maybe <strong>that</strong> is the real bug then.</p>",
        "id": 164454874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546631
    },
    {
        "content": "<p>yeah, I wonder if we should change our testing strategy</p>",
        "id": 164454884,
        "sender_full_name": "matklad",
        "timestamp": 1556546638
    },
    {
        "content": "<p>we do use <code>{:?}</code> for snapshot testing</p>",
        "id": 164454933,
        "sender_full_name": "matklad",
        "timestamp": 1556546650
    },
    {
        "content": "<p>I'll maybe see if there's something easy we can fix there.</p>",
        "id": 164454934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546653
    },
    {
        "content": "<p>e.g. use a Display or something</p>",
        "id": 164454947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546661
    },
    {
        "content": "<p>(some more stable format)</p>",
        "id": 164454953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1556546669
    },
    {
        "content": "<p>I also wondered that. The main problem with just using <code>Debug</code> is that test-results are less readable: a hand-crafted <code>Display</code> is almost always better than derived debug</p>",
        "id": 164455030,
        "sender_full_name": "matklad",
        "timestamp": 1556546726
    },
    {
        "content": "<p>OTOH, <code>#[derive(Debug)]</code> is so much easier to use, and it guarantess that, if you add a field, you'll need to update the tests (with manual display, you'll need to remember to add the field to Display yourself)</p>",
        "id": 164455122,
        "sender_full_name": "matklad",
        "timestamp": 1556546788
    },
    {
        "content": "<p>I am currently inclined to think that, as this is strictly about tests, it's ok to rely on <code>Debug</code>, and just update the expected results if it ever changes</p>",
        "id": 164455189,
        "sender_full_name": "matklad",
        "timestamp": 1556546852
    },
    {
        "content": "<blockquote>\n<p>if you add a field, you'll need to update the tests</p>\n</blockquote>\n<p>that could also count on the downsides ;)<br>\nI would guess usually if you add a field that's relevant for tests, you'll want to write tests for it and so naturally have to add it to the test representation</p>",
        "id": 164455192,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1556546858
    },
    {
        "content": "<p>FWIW, for completion, we <strong>do</strong> use custom representation, because the default one is very verbose</p>",
        "id": 164455277,
        "sender_full_name": "matklad",
        "timestamp": 1556546902
    },
    {
        "content": "<p>which tests actually use Debug?</p>",
        "id": 164455325,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1556546930
    },
    {
        "content": "<p>almost all of them, except for type inference and completion?</p>",
        "id": 164455371,
        "sender_full_name": "matklad",
        "timestamp": 1556546952
    },
    {
        "content": "<p>If <a href=\"https://github.com/rust-lang/rust/pull/60444\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/60444\">https://github.com/rust-lang/rust/pull/60444</a> fixes that annoying caching problem, that would be enough motivation for me to swtitch to nightly and fix the tests to not rely on <code>Debug</code> :P</p>",
        "id": 164642078,
        "sender_full_name": "matklad",
        "timestamp": 1556732979
    },
    {
        "content": "<p>Hm... I'm probably misunderstanding the comments, but this sounds to me like the compiler error is actually correct and we need to change the code to fix the cycle?</p>",
        "id": 164646058,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1556735797
    },
    {
        "content": "<p>I guess we'll see when the PR is merged ;)</p>",
        "id": 164646088,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1556735819
    }
]