[
    {
        "content": "<p>Hi everyone! Not sure how critical this is or why this is the case, but I noticed that the LSP specification says that CodeLens ranges should span a single line (<a href=\"https://microsoft.github.io/language-server-protocol/specifications/specification-3-15/#textDocument_codeLens\" target=\"_blank\" title=\"https://microsoft.github.io/language-server-protocol/specifications/specification-3-15/#textDocument_codeLens\">https://microsoft.github.io/language-server-protocol/specifications/specification-3-15/#textDocument_codeLens</a>) but some of the ones I get span multiple lines. For example this one:</p>\n<p><code> CodeLens { range: Range { start: Position { line: 16, character: 0 }, end: Position { line: 23, character: 1 } }, command: Some(Command { title: \"Run\", command: \"rust-analyzer.runSingle\", arguments: Some([Object({\"args\": Array([String(\"run\")]), \"bin\": String(\"cargo\"), \"cwd\": Null, \"env\": Object({\"RUST_BACKTRACE\": String(\"short\")}), \"label\": String(\"run binary\"), \"range\": Object({\"end\": Object({\"character\": Number(1), \"line\": Number(23)}), \"start\": Object({\"character\": Number(0), \"line\": Number(16)})})})]) }), data: None }</code></p>\n<p>Is this intended? Or should I open an issue?</p>\n<p>(Also, and completely off-topic, I just saw a couple of days ago some mentions re: migration to LSP 3.15 and the lsp-types crate PR which updated it to 3.15, sorry for the mistakes in that PR, I know there were some fixes around that, and also for not being available to fix them, I just relocated to London about a month ago and I'm just starting to get things back to normal now)</p>",
        "id": 184166535,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1577190335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246514\">@Martin Asquino</span>  Hm... I forgot about the 'one line' think. I think you should ask for clarification on <a href=\"https://github.com/Microsoft/language-server-protocol/\" target=\"_blank\" title=\"https://github.com/Microsoft/language-server-protocol/\">https://github.com/Microsoft/language-server-protocol/</a></p>",
        "id": 184171061,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1577196176
    },
    {
        "content": "<p>No worries on the 3.15. It happens and I've made more than my share of mistakes there.</p>",
        "id": 184171138,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1577196251
    },
    {
        "content": "<p>I wish there was a way to autogenerate rust from the protocol spec.</p>",
        "id": 184171149,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1577196275
    },
    {
        "content": "<p>On a related note: I'm getting different results in the same project when running 1.39 vs 1.40. 1.39 gives me some CodeLens items back, while 1.40 gives me <code>None</code>. Maybe this one does deserve an issue? Or is it a known one already?</p>",
        "id": 184176487,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1577203021
    },
    {
        "content": "<p>And project is an over-statement, it's a just dummy project with only a few lines to test stuff out. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 184176650,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1577203230
    },
    {
        "content": "<p>File an issue and include the dummy project.</p>",
        "id": 184178219,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1577205364
    },
    {
        "content": "<p>You're talking about vscode or rust 1.39 vs 1.40? I don't think the rust version would make a difference.</p>",
        "id": 184178238,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1577205417
    },
    {
        "content": "<p>I'm on vim, and switching rust version causes that difference.</p>",
        "id": 184178715,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1577206019
    },
    {
        "content": "<p>Ok turns out it was not so much the rust version, but how I specified it. <code>rustup override set 1.40.0</code> and it works. <code>rustup override set stable</code> and it doesn't. I opened <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/2665\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/2665\">https://github.com/rust-analyzer/rust-analyzer/issues/2665</a> and tried to explain that.</p>",
        "id": 184179281,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1577206901
    }
]