[
    {
        "content": "<p><a href=\"/user_uploads/4715/ODisrHZ48O3VFT66QSUmKKmJ/screenshot-2020-12-02-202249.png\">screenshot-2020-12-02-202249.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ODisrHZ48O3VFT66QSUmKKmJ/screenshot-2020-12-02-202249.png\" title=\"screenshot-2020-12-02-202249.png\"><img src=\"/user_uploads/4715/ODisrHZ48O3VFT66QSUmKKmJ/screenshot-2020-12-02-202249.png\"></a></div><p>It looks like diagnostics are attached to the outer file instead of the macro file? This is odd, it does not seem to happen with <code>macro_rules!</code> macros.</p>",
        "id": 218606229,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606937067
    },
    {
        "content": "<p>This looks correct to me? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">source_map</span><span class=\"p\">.</span><span class=\"n\">diagnostics</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">BodyDiagnostic</span>::<span class=\"n\">InactiveCode</span><span class=\"p\">(</span><span class=\"n\">InactiveCode</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">file</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">expander</span><span class=\"p\">.</span><span class=\"n\">current_file_id</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">node</span>: <span class=\"nc\">SyntaxNodePtr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">owner</span><span class=\"p\">.</span><span class=\"n\">syntax</span><span class=\"p\">()),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">opts</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">expander</span><span class=\"p\">.</span><span class=\"n\">cfg_options</span><span class=\"p\">().</span><span class=\"n\">clone</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"p\">}));</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(from <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/5a1306a43652d914035b2cf0b703f4bfd3451a33/crates/hir_def/src/body/lower.rs#L923-L928\">https://github.com/rust-analyzer/rust-analyzer/blob/5a1306a43652d914035b2cf0b703f4bfd3451a33/crates/hir_def/src/body/lower.rs#L923-L928</a>)</p>",
        "id": 218693207,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607002782
    },
    {
        "content": "<p>Ah, it's a general issue with all diagnostics</p>\n<p><a href=\"/user_uploads/4715/fARYw76ciq6AncsGnB5qRRKm/screenshot-2020-12-03-144337.png\">screenshot-2020-12-03-144337.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/fARYw76ciq6AncsGnB5qRRKm/screenshot-2020-12-03-144337.png\" title=\"screenshot-2020-12-03-144337.png\"><img src=\"/user_uploads/4715/fARYw76ciq6AncsGnB5qRRKm/screenshot-2020-12-03-144337.png\"></a></div>",
        "id": 218693689,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607003038
    },
    {
        "content": "<p>Found the problem, and opened a fix here: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/6712\">https://github.com/rust-analyzer/rust-analyzer/pull/6712</a></p>",
        "id": 218729163,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607017485
    },
    {
        "content": "<p>Haven't found an easy way to add a test though</p>",
        "id": 218729202,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607017503
    },
    {
        "content": "<p>Maybe we should start writing a couple of \"quick\" proc macro tests that use only the <code>proc_macro_test</code> crate</p>",
        "id": 218729283,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1607017539
    }
]