[
    {
        "content": "<p>is ra only works for vscode with <code>rustc_private</code>? I installed the rust-src component and enabled rust-analyzer in my Cargo.toml:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package.metadata.rust-analyzer]</span>\n<span class=\"n\">rustc_private</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</code></pre></div>\n<p>but it still error with <code>unresolved extern crate</code>.<br>\n<a href=\"/user_uploads/4715/02RF7f7AkTkkTGxWFjTkw68m/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/02RF7f7AkTkkTGxWFjTkw68m/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/02RF7f7AkTkkTGxWFjTkw68m/image.png\"></a></div>",
        "id": 235471089,
        "sender_full_name": "csmoe",
        "timestamp": 1618992649
    },
    {
        "content": "<p>I'm not sure, but from the docs it sounds like you also need to set <code>rust-analyzer.rustcSource</code>. <code>rust-src</code> has the standard library, not compiler source code</p>",
        "id": 235481597,
        "sender_full_name": "Laurențiu",
        "timestamp": 1618998237
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> do you have this working currently? I'm trying to get types on clippy, which has the rustc_private, and added rust-src as the source. I still can't get working info on rustc_*</p>",
        "id": 258568651,
        "sender_full_name": "divma",
        "timestamp": 1634830891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"259439\">@divma</span> do you have <code>rustc-src</code>?</p>",
        "id": 258569221,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634831077
    },
    {
        "content": "<p>I did <code>rustup component add rust-src --toolchain nightly</code> and stable too, same for <code>rustc-dev</code></p>",
        "id": 258569959,
        "sender_full_name": "divma",
        "timestamp": 1634831357
    },
    {
        "content": "<p>I just realized it's <code>rust-src</code> (without c) and if I do the same with <code>rustc-src</code> I get <code>does not contain component 'rustc-src'</code>. Do I get this in any other way, or are those one and the same?</p>",
        "id": 258570202,
        "sender_full_name": "divma",
        "timestamp": 1634831457
    },
    {
        "content": "<p>Sorry, it's <code>rustc-dev</code>, including the target tuple, e.g. <code>rustc-dev-x86_64-unknown-linux-gnu</code>.</p>",
        "id": 258570544,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634831589
    },
    {
        "content": "<p>Oh wait</p>",
        "id": 258570591,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634831609
    },
    {
        "content": "<p>Do you want to use the <code>rust-lang/rust</code> version of <code>rustc</code> or the one in your toolchain?</p>",
        "id": 258570627,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634831626
    },
    {
        "content": "<p>I'm trying to use it with clippy. They already have a <code>rust-toolchain</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[toolchain]</span>\n<span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"s\">\"nightly-2021-10-07\"</span>\n<span class=\"n\">components</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"llvm-tools-preview\"</span><span class=\"p\">,</span> <span class=\"s\">\"rustc-dev\"</span><span class=\"p\">,</span> <span class=\"s\">\"rust-src\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I.. want to use whatever lets me get it working there <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span>  If I understand correctly, this is what you suggest?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ rustup component add rust-src --toolchain nightly-2021-10-07 --target x86_64-unknown-linux-gnu\ninfo: component <span class=\"s1\">'rust-src'</span> is up to date\n$ rustup component add rustc-dev --toolchain nightly-2021-10-07 --target x86_64-unknown-linux-gnu\ninfo: component <span class=\"s1\">'rustc-dev'</span> <span class=\"k\">for</span> target <span class=\"s1\">'x86_64-unknown-linux-gnu'</span> is up to date\n</code></pre></div>\n<p>What am I missing?</p>",
        "id": 258572055,
        "sender_full_name": "divma",
        "timestamp": 1634832138
    },
    {
        "content": "<p>BTW I did the same with <code>llvm-tools-preview</code></p>",
        "id": 258572162,
        "sender_full_name": "divma",
        "timestamp": 1634832178
    },
    {
        "content": "<p>Oh, so <code>rustc-dev</code> works too? It's confusing that it doesn't show up in <code>rustup component list</code></p>",
        "id": 258572711,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634832378
    },
    {
        "content": "<p>Did you set <code>rust-analyzer.rustcSource</code>? <code>\"discover\"</code> should work.</p>",
        "id": 258572777,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634832404
    },
    {
        "content": "<p>That's what I've always used (<code>\"discover\"</code>) and tried changing it to <code>\"rust-src\"</code>but no luck</p>",
        "id": 258574548,
        "sender_full_name": "divma",
        "timestamp": 1634833065
    },
    {
        "content": "<p>I do not get errors tho, no \"crate not found\" or similar</p>",
        "id": 258574584,
        "sender_full_name": "divma",
        "timestamp": 1634833080
    },
    {
        "content": "<p>But hovering, going to type definition, etc.. nothing works with <code>rustc_*</code></p>",
        "id": 258574686,
        "sender_full_name": "divma",
        "timestamp": 1634833111
    },
    {
        "content": "<p>Hmm, go to def works for me on <code>rustc_hir::BinOpKind</code></p>",
        "id": 258575218,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634833293
    },
    {
        "content": "<p>could you share your ra setup?</p>",
        "id": 258575331,
        "sender_full_name": "divma",
        "timestamp": 1634833325
    },
    {
        "content": "<p>No, sorry, I only tested in Code</p>",
        "id": 258575464,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634833379
    },
    {
        "content": "<p>this is my lua config for RA</p>\n<div class=\"codehilite\" data-code-language=\"Lua\"><pre><span></span><code><span class=\"kd\">local</span> <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">lsp</span><span class=\"p\">.</span><span class=\"n\">protocol</span><span class=\"p\">.</span><span class=\"n\">make_client_capabilities</span><span class=\"p\">()</span>\n<span class=\"n\">capabilities</span><span class=\"p\">.</span><span class=\"n\">textDocument</span><span class=\"p\">.</span><span class=\"n\">completion</span><span class=\"p\">.</span><span class=\"n\">completionItem</span><span class=\"p\">.</span><span class=\"n\">snippetSupport</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n\n<span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'lspconfig'</span><span class=\"p\">).</span><span class=\"n\">rust_analyzer</span><span class=\"p\">.</span><span class=\"n\">setup</span><span class=\"p\">({</span>\n    <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"n\">capabilities</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"rust-analyzer\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">rustcSource</span> <span class=\"o\">=</span> <span class=\"s2\">\"rust-src\"</span><span class=\"p\">,</span> <span class=\"c1\">-- I had \"discover\" before, same result</span>\n        <span class=\"n\">cargo</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">loadOutDirsFromCheck</span> <span class=\"o\">=</span> <span class=\"kc\">true</span> <span class=\"c1\">--added this recetly but doesn't seem related</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">procMacro</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">enable</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"s2\">\"nightly\"</span><span class=\"p\">,</span> <span class=\"c1\">-- added this to try and get it to work</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">completion</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">snippets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">arc</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"n\">postfix</span> <span class=\"o\">=</span> <span class=\"s2\">\"arc\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"s2\">\"Arc::new(${receiver})\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">scope</span> <span class=\"o\">=</span> <span class=\"s2\">\"expr\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">requires</span> <span class=\"o\">=</span> <span class=\"s2\">\"std::sync::Arc\"</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div>",
        "id": 258575670,
        "sender_full_name": "divma",
        "timestamp": 1634833454
    },
    {
        "content": "<p>most use VS Code right? where's the vim gang :(</p>",
        "id": 258575747,
        "sender_full_name": "divma",
        "timestamp": 1634833487
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"428521\">@sim</span> :)</p>",
        "id": 258575795,
        "sender_full_name": "matklad",
        "timestamp": 1634833507
    },
    {
        "content": "<p>Yeah, I can't make it work in <code>rust-tools</code></p>",
        "id": 258576110,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634833614
    },
    {
        "content": "<p>Weird, the log file doesn't catch the LSP config</p>",
        "id": 258577273,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634834036
    },
    {
        "content": "<p>Oh, I think nvim sends an empty <code>initializationOptions</code> at start-up. We get a <code>workspace/didChangeConfiguration</code>, but we don't support that for some of the settings.</p>",
        "id": 258578962,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634834697
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/neovim/nvim-lspconfig/issues/1334\">https://github.com/neovim/nvim-lspconfig/issues/1334</a></p>",
        "id": 258580628,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634835402
    },
    {
        "content": "<p>Well, that was embarrassing.</p>",
        "id": 258595509,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634841144
    },
    {
        "content": "<p>I found someone that has their configuration working and the only difference is that they use a different package manager</p>",
        "id": 258597934,
        "sender_full_name": "divma",
        "timestamp": 1634842191
    },
    {
        "content": "<p>then we did what you suggested in the issue, used trace logs</p>",
        "id": 258598003,
        "sender_full_name": "divma",
        "timestamp": 1634842209
    },
    {
        "content": "<p>and indeed they get a didChangeConfiguration</p>",
        "id": 258598028,
        "sender_full_name": "divma",
        "timestamp": 1634842222
    },
    {
        "content": "<p>I do have one, but it's empty</p>",
        "id": 258598036,
        "sender_full_name": "divma",
        "timestamp": 1634842226
    },
    {
        "content": "<p>we believe it's because the configuration is done before lsp is ready</p>",
        "id": 258598059,
        "sender_full_name": "divma",
        "timestamp": 1634842239
    },
    {
        "content": "<p>his package manager calls the configuration for each package after those are loaded</p>",
        "id": 258598098,
        "sender_full_name": "divma",
        "timestamp": 1634842263
    },
    {
        "content": "<p>for the future soul that arrives here suffering I'm using plug, the other guy whose config is used (same config as mine) uses packer <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 258598225,
        "sender_full_name": "divma",
        "timestamp": 1634842325
    },
    {
        "content": "<p>tbbh i have no idea what it is or how to solve it</p>",
        "id": 258598402,
        "sender_full_name": "divma",
        "timestamp": 1634842426
    },
    {
        "content": "<p>oh GOD</p>",
        "id": 258598917,
        "sender_full_name": "divma",
        "timestamp": 1634842659
    },
    {
        "content": "<p>ignore everything</p>",
        "id": 258598924,
        "sender_full_name": "divma",
        "timestamp": 1634842662
    },
    {
        "content": "<p>I'm an idiot (I'm probably arriving to the same conclusion of the issue)</p>",
        "id": 258599003,
        "sender_full_name": "divma",
        "timestamp": 1634842688
    },
    {
        "content": "<p>all of that needed to go inside settings</p>",
        "id": 258599024,
        "sender_full_name": "divma",
        "timestamp": 1634842698
    },
    {
        "content": "<p>forgive me <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> you had to suffer the embarrassment on my behalf</p>",
        "id": 258599122,
        "sender_full_name": "divma",
        "timestamp": 1634842738
    },
    {
        "content": "<p>TLDR this configuration works:</p>\n<div class=\"codehilite\" data-code-language=\"Lua\"><pre><span></span><code><span class=\"kd\">local</span> <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">lsp</span><span class=\"p\">.</span><span class=\"n\">protocol</span><span class=\"p\">.</span><span class=\"n\">make_client_capabilities</span><span class=\"p\">()</span>\n<span class=\"n\">capabilities</span><span class=\"p\">.</span><span class=\"n\">textDocument</span><span class=\"p\">.</span><span class=\"n\">completion</span><span class=\"p\">.</span><span class=\"n\">completionItem</span><span class=\"p\">.</span><span class=\"n\">snippetSupport</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n\n<span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'lspconfig'</span><span class=\"p\">).</span><span class=\"n\">rust_analyzer</span><span class=\"p\">.</span><span class=\"n\">setup</span><span class=\"p\">({</span>\n    <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"n\">capabilities</span><span class=\"p\">,</span>\n    <span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"c1\">-- this higher level was missing :facepalm:</span>\n        <span class=\"p\">[</span><span class=\"s2\">\"rust-analyzer\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">rustcSource</span> <span class=\"o\">=</span> <span class=\"s2\">\"discover\"</span><span class=\"p\">,</span>\n            <span class=\"n\">procMacro</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">enable</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">completion</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">snippets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"n\">arc</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                        <span class=\"n\">postfix</span> <span class=\"o\">=</span> <span class=\"s2\">\"arc\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"s2\">\"Arc::new(${receiver})\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">scope</span> <span class=\"o\">=</span> <span class=\"s2\">\"expr\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">requires</span> <span class=\"o\">=</span> <span class=\"s2\">\"std::sync::Arc\"</span><span class=\"p\">,</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div>",
        "id": 258599495,
        "sender_full_name": "divma",
        "timestamp": 1634842869
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I wonder if nvim can print some kind of diagnistics here? When I was playing with it, figuring out the exact syntax to use for settings was a pain as well.</p>",
        "id": 258599674,
        "sender_full_name": "matklad",
        "timestamp": 1634842936
    },
    {
        "content": "<p>at some point I even added a <code>garbage: asdfas</code>entry to check if it would complain or something.. it is confusing  to get it right</p>",
        "id": 258599895,
        "sender_full_name": "divma",
        "timestamp": 1634843025
    },
    {
        "content": "<p>(it did not complain ofc)</p>",
        "id": 258599920,
        "sender_full_name": "divma",
        "timestamp": 1634843039
    },
    {
        "content": "<p>Seems like a good idea to open an issue upstream about emitting a warning for an unknown key in this case!</p>",
        "id": 258600100,
        "sender_full_name": "matklad",
        "timestamp": 1634843108
    },
    {
        "content": "<p>How does that work? You're not setting <code>init_options</code>.</p>",
        "id": 258603416,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634844543
    },
    {
        "content": "<p>I changed mine to <code>init_options</code> and I see it passed in the LSP log like in Code, but it's still not working</p>",
        "id": 258604809,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634845142
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/nvim.2Bnvim-lsp.20rustc_private/near/258604809\">said</a>:</p>\n<blockquote>\n<p>I changed mine to <code>init_options</code> and I see it passed in the LSP log like in Code, but it's still not working</p>\n</blockquote>\n<p>In the lspconfig repo they had a minimal config added this year (my wrong config is at least two years old). I edited it to get the bare bare minimals</p>",
        "id": 258612276,
        "sender_full_name": "divma",
        "timestamp": 1634848208
    },
    {
        "content": "<p>Here it is:</p>",
        "id": 258612287,
        "sender_full_name": "divma",
        "timestamp": 1634848211
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lua\"><pre><span></span><code><span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">cmd</span> <span class=\"s\">[[set runtimepath=$VIMRUNTIME]]</span>\n<span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">cmd</span> <span class=\"s\">[[set packpath=/tmp/nvim/site]]</span>\n\n<span class=\"kd\">local</span> <span class=\"n\">package_root</span> <span class=\"o\">=</span> <span class=\"s1\">'/tmp/nvim/site/pack'</span>\n<span class=\"kd\">local</span> <span class=\"n\">install_path</span> <span class=\"o\">=</span> <span class=\"n\">package_root</span> <span class=\"o\">..</span> <span class=\"s1\">'/packer/start/packer.nvim'</span>\n\n<span class=\"c1\">-- get a package manager without too much hassle.</span>\n<span class=\"kd\">local</span> <span class=\"kr\">function</span> <span class=\"nf\">load_plugins</span><span class=\"p\">()</span>\n  <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'packer'</span><span class=\"p\">).</span><span class=\"n\">startup</span> <span class=\"p\">{</span>\n    <span class=\"p\">{</span>\n      <span class=\"s1\">'wbthomason/packer.nvim'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'neovim/nvim-lspconfig'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"n\">package_root</span> <span class=\"o\">=</span> <span class=\"n\">package_root</span><span class=\"p\">,</span>\n      <span class=\"n\">compile_path</span> <span class=\"o\">=</span> <span class=\"n\">install_path</span> <span class=\"o\">..</span> <span class=\"s1\">'/plugin/packer_compiled.lua'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">}</span>\n<span class=\"kr\">end</span>\n\n<span class=\"n\">_G</span><span class=\"p\">.</span><span class=\"n\">load_config</span> <span class=\"o\">=</span> <span class=\"kr\">function</span><span class=\"p\">()</span>\n    <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">lsp</span><span class=\"p\">.</span><span class=\"n\">set_log_level</span><span class=\"p\">(</span><span class=\"s1\">'trace'</span><span class=\"p\">)</span>\n    <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'lspconfig'</span><span class=\"p\">).</span><span class=\"n\">rust_analyzer</span><span class=\"p\">.</span><span class=\"n\">setup</span> <span class=\"p\">{</span>\n        <span class=\"n\">on_attach</span> <span class=\"o\">=</span> <span class=\"n\">on_attach</span><span class=\"p\">,</span>\n        <span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"rust-analyzer\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">rustcSource</span> <span class=\"o\">=</span> <span class=\"s2\">\"discover\"</span><span class=\"p\">,</span>\n                <span class=\"n\">procMacro</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"n\">enable</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"kr\">end</span>\n\n<span class=\"kr\">if</span> <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">fn</span><span class=\"p\">.</span><span class=\"n\">isdirectory</span><span class=\"p\">(</span><span class=\"n\">install_path</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"kr\">then</span>\n  <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">fn</span><span class=\"p\">.</span><span class=\"n\">system</span> <span class=\"p\">{</span> <span class=\"s1\">'git'</span><span class=\"p\">,</span> <span class=\"s1\">'clone'</span><span class=\"p\">,</span> <span class=\"s1\">'https://github.com/wbthomason/packer.nvim'</span><span class=\"p\">,</span> <span class=\"n\">install_path</span> <span class=\"p\">}</span>\n  <span class=\"n\">load_plugins</span><span class=\"p\">()</span>\n  <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'packer'</span><span class=\"p\">).</span><span class=\"n\">sync</span><span class=\"p\">()</span>\n  <span class=\"n\">vim</span><span class=\"p\">.</span><span class=\"n\">cmd</span> <span class=\"s\">[[autocmd User PackerComplete ++once lua load_config()]]</span>\n<span class=\"kr\">else</span>\n  <span class=\"n\">load_plugins</span><span class=\"p\">()</span>\n  <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"s1\">'packer'</span><span class=\"p\">).</span><span class=\"n\">sync</span><span class=\"p\">()</span>\n  <span class=\"n\">_G</span><span class=\"p\">.</span><span class=\"n\">load_config</span><span class=\"p\">()</span>\n<span class=\"kr\">end</span>\n</code></pre></div>",
        "id": 258612324,
        "sender_full_name": "divma",
        "timestamp": 1634848223
    },
    {
        "content": "<p>that's a <code>init.lua</code></p>",
        "id": 258612342,
        "sender_full_name": "divma",
        "timestamp": 1634848231
    },
    {
        "content": "<p>and now you call vim <code>nvim -u path_to/init.lua path_to/rust_file.rs</code></p>",
        "id": 258612408,
        "sender_full_name": "divma",
        "timestamp": 1634848261
    },
    {
        "content": "<p>I tried it inside clippy and I get hover with rustc_* and the rest as well</p>",
        "id": 258612461,
        "sender_full_name": "divma",
        "timestamp": 1634848287
    },
    {
        "content": "<p>by calling <code>lua vim.lsp.buf.hover()</code>while the cursor is somewhere relevant. I didn't even add key mappings..</p>",
        "id": 258612682,
        "sender_full_name": "divma",
        "timestamp": 1634848376
    },
    {
        "content": "<p>maybe with that you can check what's different and why is the config you have still not working</p>",
        "id": 258613469,
        "sender_full_name": "divma",
        "timestamp": 1634848694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"259439\">divma</span> has marked this topic as resolved.</p>",
        "id": 258614038,
        "sender_full_name": "Notification Bot",
        "timestamp": 1634848934
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"259439\">divma</span> has marked this topic as unresolved.</p>",
        "id": 258614059,
        "sender_full_name": "Notification Bot",
        "timestamp": 1634848943
    },
    {
        "content": "<p>should we add this to the rust-tools wiki?</p>",
        "id": 258636212,
        "sender_full_name": "sim",
        "timestamp": 1634860584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"259439\">divma</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/nvim.2Bnvim-lsp.20rustc_private/near/258613469\">said</a>:</p>\n<blockquote>\n<p>maybe with that you can check what's different and why is the config you have still not working</p>\n</blockquote>\n<p>Well, everything is different: my <code>init.vim</code> is Vimscript with some bits of Lua, I'm using a different plugin manager and a different Rust plugin (<code>rust-tools</code>).</p>",
        "id": 258836834,
        "sender_full_name": "Laurențiu",
        "timestamp": 1635014207
    },
    {
        "content": "<p>I should probably look into it, but I'll need to spend a week-end on this, or on trying to make this <del>awful</del> Bluetooth mouse work on the awful Linux Bluetooth stack and TBH neither option seems too appealing. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 258836916,
        "sender_full_name": "Laurențiu",
        "timestamp": 1635014336
    }
]