[
    {
        "content": "<p>There exists a number of custom test annotations:  <code>#[async_std::test]</code>, <code>#[actix_rt::test]</code>, <code>#[tokio::test]</code>.</p>\n<p>Currently RA does not provide any runnables for those, but at least for those 3 it's the same Cargo command used to run them: you can check it by removing the <code>tokio::</code> prefix first to force the runneer to appear, run it, return the prefix and rerun the task: the test will run.</p>\n<p>Would it make sense to detect those and create runners for them? <br>\nWe can look for attributes ending with <code>::test</code> and create a runner for every one found.</p>",
        "id": 186330785,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579727102
    },
    {
        "content": "<p>There are, of course, attributes that require a different command to run the tests, for example, the <code>#[wasm_bindgen_test]</code> one, so we might eventually produce some false-positives, but that seems better than no way to run the tests at all.</p>\n<p>Thinking of alternative ways to achieve this, we can add some setting with a list of attribute values to look for to create the runners for them.</p>",
        "id": 186330990,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579727235
    },
    {
        "content": "<p>To clarify, are you talking about this button over there?<br>\n<a href=\"/user_uploads/4715/_J0wg30Y_3dd847AhqzAarOl/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_J0wg30Y_3dd847AhqzAarOl/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/_J0wg30Y_3dd847AhqzAarOl/pasted_image.png\"></a></div>",
        "id": 186334156,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1579729468
    },
    {
        "content": "<p>I think just checking \"if it ends with test\" should be good enough!</p>",
        "id": 186344746,
        "sender_full_name": "matklad",
        "timestamp": 1579737552
    },
    {
        "content": "<blockquote>\n<p>To clarify, are you talking about this button over there?</p>\n</blockquote>\n<p>Yes, this is what I want to have for various <code>#[whatever::test]</code> annotated methods.</p>\n<blockquote>\n<p>I think just checking \"if it ends with test\" should be good enough!</p>\n</blockquote>\n<p>Great, my thoughts also. <br>\nI'm not entirely sure how to extract the info I need from the <code>ast::Attr</code>, but I'll work on that and find a way hopefully.</p>",
        "id": 186371398,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579771834
    },
    {
        "content": "<p>Hey, I'm maintainer of <code>test-case</code> (<a href=\"https://github.com/frondeus/test-case\" target=\"_blank\" title=\"https://github.com/frondeus/test-case\">https://github.com/frondeus/test-case</a>)</p>\n<p>My macros are <code>#[test_case(...)]</code> which are expanded into one or more functions with <code>#[test]</code> attribute.<br>\nIt'd be great if RA could support not only <code>.*test</code> but also <code>test.*</code>. Maybe <code>.*test.*</code>?</p>",
        "id": 186372869,
        "sender_full_name": "Wojciech Polak",
        "timestamp": 1579773242
    },
    {
        "content": "<p>Sounds reasonable, I'll try to come up with a better heuristics.</p>",
        "id": 186374079,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579774196
    },
    {
        "content": "<p>I bet we can benefit from the experience of other tools. For example, I know that Java extension provides an ability to run and debug a single JUnit test from VSCode. I don't believe that extension tries to heuristically determine tests, but rather I suppose they just integrate with major test frameworks.</p>",
        "id": 186374712,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1579774694
    },
    {
        "content": "<p>the long-term approach would be to expand the attribute macros and detect test cases in the expanded code, but we're not there yet</p>",
        "id": 186375266,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1579775115
    },
    {
        "content": "<p>I think waiting for the macros expansion would be the best way, since it's more generic.</p>\n<p>I've had a quick glance and the way the JUnit tests are supported in the RedHat plugin and it looks like the VSCode extension needs another one to run the tests: <a href=\"https://github.com/redhat-developer/vscode-java/blob/master/CONTRIBUTING.md#b-1-setting-up-the-jdt-language-server-in-vs-code\" target=\"_blank\" title=\"https://github.com/redhat-developer/vscode-java/blob/master/CONTRIBUTING.md#b-1-setting-up-the-jdt-language-server-in-vs-code\">https://github.com/redhat-developer/vscode-java/blob/master/CONTRIBUTING.md#b-1-setting-up-the-jdt-language-server-in-vs-code</a><br>\nand they call it by simply hardcoding the logic and assuming that any test is a JUnit test: <a href=\"https://github.com/testforstephen/vscode-pde/blob/master/src/extension.ts#L76\" target=\"_blank\" title=\"https://github.com/testforstephen/vscode-pde/blob/master/src/extension.ts#L76\">https://github.com/testforstephen/vscode-pde/blob/master/src/extension.ts#L76</a> (also see the <code>isTestMethodNode</code> method).</p>\n<p>So, it's more or less as simple as my heuristics now :)</p>",
        "id": 186375792,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579775532
    },
    {
        "content": "<p>Hmm, so does it mean that they support only JUnit test framework?</p>",
        "id": 186377701,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1579777282
    },
    {
        "content": "<p>That is how I've understood it from a quick look at the sources.<br>\nBut don't believe me, check it yourself, I've posted the related links above.</p>",
        "id": 186378864,
        "sender_full_name": "Kirill Bulatov",
        "timestamp": 1579778456
    }
]