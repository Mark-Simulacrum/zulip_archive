[
    {
        "content": "<p>I'm trying to look into <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1165\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1165\">https://github.com/rust-analyzer/rust-analyzer/issues/1165</a>, and I'm trying to add <code>ModuleItem</code> to <code>Block</code>s. I've changed the grammar.ron, but where should I actually put the parsed things into the AST?</p>",
        "id": 182415226,
        "sender_full_name": "ice1000",
        "timestamp": 1575346856
    },
    {
        "content": "<p>Oh, is RA parsing things by trying to cast them? Then it looks like the items are naturally collected</p>",
        "id": 182415353,
        "sender_full_name": "ice1000",
        "timestamp": 1575346998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243635\">@ice1000</span> be warned that <a href=\"https://github.com/rust-lang/rust/issues/1165\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/1165\">#1165</a> is a rather involved issue, which requires a bit of up-front design. </p>\n<p>I don't think it requires any changes on the parser level though... Rather, it probably needs:</p>\n<ul>\n<li>integration of <code>DefCollector</code> and <code>ExprScopes</code> into a single thing</li>\n<li>ability to create these dependent <code>DefCollectors</code> for items</li>\n</ul>",
        "id": 182422661,
        "sender_full_name": "matklad",
        "timestamp": 1575358070
    },
    {
        "content": "<p>Yes, but the grammar.ron needs to be changed</p>",
        "id": 182458460,
        "sender_full_name": "ice1000",
        "timestamp": 1575386282
    },
    {
        "content": "<p>Yes, but the grammar.ron needs to be changed</p>",
        "id": 182458555,
        "sender_full_name": "ice1000",
        "timestamp": 1575386312
    },
    {
        "content": "<p>Oh, you are of course right, <span class=\"user-mention\" data-user-id=\"243635\">@ice1000</span> ! Yeah, I think we should add <code>ModuleItemOwner</code> to the list of traits that is implemented by <code>ast::Block</code>.</p>",
        "id": 182458799,
        "sender_full_name": "matklad",
        "timestamp": 1575386430
    },
    {
        "content": "<p>My WIP branch is <a href=\"https://github.com/ice1000/rust-analyzer/tree/oxa-very-cute\" target=\"_blank\" title=\"https://github.com/ice1000/rust-analyzer/tree/oxa-very-cute\">https://github.com/ice1000/rust-analyzer/tree/oxa-very-cute</a></p>",
        "id": 182459194,
        "sender_full_name": "ice1000",
        "timestamp": 1575386672
    },
    {
        "content": "<p>I'm not sure if I'm on the right direction</p>",
        "id": 182459235,
        "sender_full_name": "ice1000",
        "timestamp": 1575386694
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> , do you have any suggestions on the next step to take? I think I've did the def collection, but I'm not sure if the approach works. What sort of test should I add?</p>",
        "id": 182467883,
        "sender_full_name": "ice1000",
        "timestamp": 1575391062
    },
    {
        "content": "<p>There are like, a lot of questions</p>",
        "id": 182468913,
        "sender_full_name": "ice1000",
        "timestamp": 1575391505
    },
    {
        "content": "<p>The first step would be to send a PR which justs makes a <code>Block</code> an <code>ItemOwner</code></p>",
        "id": 182468958,
        "sender_full_name": "matklad",
        "timestamp": 1575391530
    },
    {
        "content": "<p>And you are very right that there are many questions :)</p>",
        "id": 182468993,
        "sender_full_name": "matklad",
        "timestamp": 1575391551
    },
    {
        "content": "<p>I think we probably should start with something relatively simple: not trying to properly link ExprScopes and CrateDefMap, but just treating functions as a separate scope for items</p>",
        "id": 182469121,
        "sender_full_name": "matklad",
        "timestamp": 1575391614
    },
    {
        "content": "<p>The Module's data contains <code>AstId&lt;Module&gt;</code>, while I'm using the blocks' Ids in <code>ModuleData::Block</code></p>",
        "id": 182469216,
        "sender_full_name": "ice1000",
        "timestamp": 1575391665
    },
    {
        "content": "<p>I'm having stacktraces when running ra on my computer</p>",
        "id": 182469304,
        "sender_full_name": "ice1000",
        "timestamp": 1575391698
    },
    {
        "content": "<p>Where should I send them</p>",
        "id": 182469312,
        "sender_full_name": "ice1000",
        "timestamp": 1575391702
    },
    {
        "content": "<p>Cus ra is paralyzed now, I can't even navigate</p>",
        "id": 182469346,
        "sender_full_name": "ice1000",
        "timestamp": 1575391713
    },
    {
        "content": "<p>I think this can work like this:</p>\n<ul>\n<li>we add <code>ModuleScope</code> field to <code>Body</code></li>\n<li>when lowering the <code>Body</code>, we also populate module scope (here, we completely ignore the fact that block scope is also important)</li>\n<li>in the <code>Resolver</code>, we take this Body's <code>ModuleScope</code> into account</li>\n</ul>",
        "id": 182469347,
        "sender_full_name": "matklad",
        "timestamp": 1575391714
    },
    {
        "content": "<p>Is it even possible to restart ra?</p>",
        "id": 182469436,
        "sender_full_name": "ice1000",
        "timestamp": 1575391765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243635\">@ice1000</span> there's \"reload window\" action in VS Code</p>",
        "id": 182469461,
        "sender_full_name": "matklad",
        "timestamp": 1575391784
    },
    {
        "content": "<p>And also <code>Rust Analyzer: restart server</code></p>",
        "id": 182469495,
        "sender_full_name": "matklad",
        "timestamp": 1575391802
    },
    {
        "content": "<blockquote>\n<p>I'm having stacktraces when running ra on my computer</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/2467\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/2467\">https://github.com/rust-analyzer/rust-analyzer/issues/2467</a> ? maybe check that you're on newest master</p>",
        "id": 182469537,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1575391806
    },
    {
        "content": "<p>I am</p>",
        "id": 182469570,
        "sender_full_name": "ice1000",
        "timestamp": 1575391835
    },
    {
        "content": "<p>I've <code>cargo xtask install --server</code> 10 minutes ago after my PR gets merged</p>",
        "id": 182469620,
        "sender_full_name": "ice1000",
        "timestamp": 1575391863
    },
    {
        "content": "<p>Another option is to properly design this merging of crate def map and bodies, and do the right thing from the start... But I personally don't have a design blueprint in my hand for this</p>",
        "id": 182469631,
        "sender_full_name": "matklad",
        "timestamp": 1575391869
    },
    {
        "content": "<p>Oh my god it's my own change that causes the panicking</p>",
        "id": 182469685,
        "sender_full_name": "ice1000",
        "timestamp": 1575391907
    },
    {
        "content": "<p><span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 182469703,
        "sender_full_name": "ice1000",
        "timestamp": 1575391916
    },
    {
        "content": "<p>It says <code>thread '&lt;unnamed&gt;' panicked at 'Can't find BLOCK@[1031; 1053) in AstIdMap</code>, which probably because I was adding things like blocks' Ids to the database but it's somehow not collected</p>",
        "id": 182469814,
        "sender_full_name": "ice1000",
        "timestamp": 1575391971
    },
    {
        "content": "<blockquote>\n<p>Another option is to properly design this merging of crate def map and bodies, and do the right thing from the start... But I personally don't have a design blueprint in my hand for this</p>\n</blockquote>\n<p>yeah, I feel like we need to start experimenting before we'll come up with a proper design :)</p>",
        "id": 182469892,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1575392032
    },
    {
        "content": "<p>I think that's what I'm doing</p>",
        "id": 182469963,
        "sender_full_name": "ice1000",
        "timestamp": 1575392061
    },
    {
        "content": "<p>I mean, \"merging of crate def map and bodies\"</p>",
        "id": 182469971,
        "sender_full_name": "ice1000",
        "timestamp": 1575392070
    },
    {
        "content": "<p>Starting experimentation is not a problem. Finishing it properly is the hard bit :)</p>",
        "id": 182469989,
        "sender_full_name": "matklad",
        "timestamp": 1575392084
    },
    {
        "content": "<p>Do I PR for unfinished features?</p>",
        "id": 182470026,
        "sender_full_name": "ice1000",
        "timestamp": 1575392106
    },
    {
        "content": "<p>Like, is it preferred to send small PRs about the nonbreaking things added before the big thing launches</p>",
        "id": 182470084,
        "sender_full_name": "ice1000",
        "timestamp": 1575392145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243635\">@ice1000</span> it depends. If it's a self-contained thing which will be needed <em>regardless</em> of the final direction the feature takes, than it's best to send it in a separate PR, however small it is. For example, adding <code>ModuleItemsOwner</code> trait to <code>Block</code> is an example of such change. </p>\n<p>On the other hand, for something bigger, which represent a part of <em>possible</em>, but not unique path to the solution, it's better to send something which has user-visible effects and can be tested</p>",
        "id": 182470268,
        "sender_full_name": "matklad",
        "timestamp": 1575392266
    },
    {
        "content": "<p>Ok that sounds cool, I'll PR right after rust analyzer compiles</p>",
        "id": 182470354,
        "sender_full_name": "ice1000",
        "timestamp": 1575392308
    },
    {
        "content": "<p>The metric here is that we want to minimize the size of PR (there's no such thing as too small a PR), <em>but</em> we want to make sure that the merged code actually works: it's to easy to start building something. only to realise later that it can't possible work</p>",
        "id": 182470436,
        "sender_full_name": "matklad",
        "timestamp": 1575392351
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/2471\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/2471\">https://github.com/rust-analyzer/rust-analyzer/pull/2471</a></p>",
        "id": 182471001,
        "sender_full_name": "ice1000",
        "timestamp": 1575392643
    },
    {
        "content": "<p>looks liek the correct trait name is <code>ModuleItemOwner</code></p>",
        "id": 182471442,
        "sender_full_name": "matklad",
        "timestamp": 1575392884
    },
    {
        "content": "<p>Just fixed</p>",
        "id": 182471450,
        "sender_full_name": "ice1000",
        "timestamp": 1575392893
    },
    {
        "content": "<p>Cool, rust analyzer starts working again</p>",
        "id": 182471488,
        "sender_full_name": "ice1000",
        "timestamp": 1575392920
    },
    {
        "content": "<p>I have seen some tabs mixed along with the spaces, and I changed them all to spaces</p>",
        "id": 182471534,
        "sender_full_name": "ice1000",
        "timestamp": 1575392951
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/QRUBXaEPpr3WEx1Y9Z4t8a6m/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> This resolution is really weird</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/QRUBXaEPpr3WEx1Y9Z4t8a6m/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/QRUBXaEPpr3WEx1Y9Z4t8a6m/pasted_image.png\"></a></div>",
        "id": 182471865,
        "sender_full_name": "ice1000",
        "timestamp": 1575393170
    },
    {
        "content": "<p>Is it a known bug?</p>",
        "id": 182471878,
        "sender_full_name": "ice1000",
        "timestamp": 1575393182
    },
    {
        "content": "<p>I think that's and index-based fallback: if we can't resolve the name properly, we just pick any declaration with a matching naming, in hope that it would be corrct</p>",
        "id": 182471938,
        "sender_full_name": "matklad",
        "timestamp": 1575393237
    },
    {
        "content": "<p>so, it's a \"feature\"</p>",
        "id": 182471977,
        "sender_full_name": "matklad",
        "timestamp": 1575393243
    },
    {
        "content": "<p>It's a bug because the really correct result is not resolved</p>",
        "id": 182472166,
        "sender_full_name": "ice1000",
        "timestamp": 1575393375
    },
    {
        "content": "<p>The wrong resolution result is a feature</p>",
        "id": 182472184,
        "sender_full_name": "ice1000",
        "timestamp": 1575393389
    },
    {
        "content": "<p>Seem like we still not implement   <code>std::ops::Index</code> handling yet.</p>",
        "id": 182477342,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1575396126
    },
    {
        "content": "<p>I'm not sure about some compilation failures in <a href=\"https://github.com/ice1000/rust-analyzer/tree/114514\" target=\"_blank\" title=\"https://github.com/ice1000/rust-analyzer/tree/114514\">https://github.com/ice1000/rust-analyzer/tree/114514</a>, can anyone take a look? I'm trying to change <code>ModuleData.declaration &amp; definition</code> pair into a three-state enum, <code>ModuleOrigin</code> (with one more state, as my ongoing PR will support block level modules), but that requires me to implement <code>Default</code> for it, while I don't know how.</p>",
        "id": 182477970,
        "sender_full_name": "ice1000",
        "timestamp": 1575396532
    },
    {
        "content": "<p>Something like <code>trait `std::convert::From&lt;&amp;ra_db::input::FileId&gt;` is not implemented for `ra_hir_expand::HirFileId</code></p>",
        "id": 182478236,
        "sender_full_name": "ice1000",
        "timestamp": 1575396676
    },
    {
        "content": "<p><code>self.def_map.modules[module_id].definition = Some(file_id)</code></p>",
        "id": 182478253,
        "sender_full_name": "ice1000",
        "timestamp": 1575396688
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243635\">@ice1000</span> Add an enum variant  in ModuleOrigin to indicate it is empty and make it default ?</p>",
        "id": 182478683,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1575396951
    },
    {
        "content": "<p>Or change to :</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">origin</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">ModuleOrigin</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182479438,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1575397394
    },
    {
        "content": "<p>I wonder if the <code>Default</code> trait is really used</p>",
        "id": 182482605,
        "sender_full_name": "ice1000",
        "timestamp": 1575399275
    },
    {
        "content": "<p>It's used only twice</p>",
        "id": 182482826,
        "sender_full_name": "ice1000",
        "timestamp": 1575399380
    },
    {
        "content": "<p>I got it. It's the root module that is initialized <em>after</em> (or during? Not sure) collecting def</p>",
        "id": 182483461,
        "sender_full_name": "ice1000",
        "timestamp": 1575399812
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/2473\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/2473\">https://github.com/rust-analyzer/rust-analyzer/pull/2473</a></p>",
        "id": 182489184,
        "sender_full_name": "ice1000",
        "timestamp": 1575403211
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/2474\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/2474\">https://github.com/rust-analyzer/rust-analyzer/pull/2474</a></p>",
        "id": 182493694,
        "sender_full_name": "ice1000",
        "timestamp": 1575406205
    },
    {
        "content": "<p>If you admins prefer taking 2474 directly, then feel free to close 2473</p>",
        "id": 182496300,
        "sender_full_name": "ice1000",
        "timestamp": 1575407591
    },
    {
        "content": "<p>I've closed 2473 myself</p>",
        "id": 182497054,
        "sender_full_name": "ice1000",
        "timestamp": 1575407978
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> could you please take a look at this code <a href=\"https://github.com/ice1000/rust-analyzer/commit/541eb7e12e948058e8efa563f303828b3bebb713#diff-f26837190e672b2e01be4ca7511e50f8L535\" target=\"_blank\" title=\"https://github.com/ice1000/rust-analyzer/commit/541eb7e12e948058e8efa563f303828b3bebb713#diff-f26837190e672b2e01be4ca7511e50f8L535\">https://github.com/ice1000/rust-analyzer/commit/541eb7e12e948058e8efa563f303828b3bebb713#diff-f26837190e672b2e01be4ca7511e50f8L535</a>? I essentially added <code>block_id</code> to <code>FunctionLoc</code>, and try to find the (block-level anonymous) module corresponds to the <code>block_id</code>. This is making tests to fail, and I have no idea what's going on.</p>",
        "id": 182518736,
        "sender_full_name": "ice1000",
        "timestamp": 1575426208
    },
    {
        "content": "<p>I'm like dying, debugging &amp; refactoring rust analyzer is just so hard</p>",
        "id": 182519103,
        "sender_full_name": "ice1000",
        "timestamp": 1575426627
    },
    {
        "content": "<p>I have made a \"reviewable webpage\" aka an in-fork pull request (<a href=\"https://github.com/ice1000/rust-analyzer/pull/1/files\" target=\"_blank\" title=\"https://github.com/ice1000/rust-analyzer/pull/1/files\">https://github.com/ice1000/rust-analyzer/pull/1/files</a>) to show the change after the rust-analyzer pull request.</p>",
        "id": 182528001,
        "sender_full_name": "ice1000",
        "timestamp": 1575438859
    },
    {
        "content": "<p>Ok, finally got 2474 done</p>",
        "id": 182659574,
        "sender_full_name": "ice1000",
        "timestamp": 1575553170
    },
    {
        "content": "<p>Anyone wanna take this on</p>",
        "id": 183713674,
        "sender_full_name": "ice1000",
        "timestamp": 1576636049
    }
]