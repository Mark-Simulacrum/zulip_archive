[
    {
        "content": "<p>I've added <code>generate_method</code> assist, and created this new test:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">create_method</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">check_assist</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">generate_method</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">r\"</span>\n<span class=\"s\">struct S;</span>\n\n<span class=\"s\">fn foo() {</span>\n<span class=\"s\">    S.bar$0();</span>\n<span class=\"s\">}</span>\n\n<span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">r\"</span>\n<span class=\"s\">struct S;</span>\n\n<span class=\"s\">fn foo() {</span>\n<span class=\"s\">    S.bar();</span>\n<span class=\"s\">}</span>\n<span class=\"s\">impl S {</span>\n\n\n<span class=\"s\">fn bar(&amp;self) -&gt; () {</span>\n<span class=\"s\">    todo!()</span>\n<span class=\"s\">}</span>\n<span class=\"s\">}</span>\n\n<span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But it fails, with the following message:</p>\n<div class=\"codehilite\"><pre><span></span><code>Left:\nstruct S;\n\nfn foo() {\n    S.bar();\n}\nimpl S {\n\n\nfn bar(&amp;self) -&gt; () {\n    todo!()\n}\n}\n\n\n\nRight:\nstruct S;\n\nfn foo() {\n    S.bar();\n}\nimpl S {\n\n\nfn bar(&amp;self) ${0:-&gt; ()} {\n    todo!()\n}\n}\n</code></pre></div>\n<p>The assist already works well, I have no idea why it adds this piece of code in the signature: <code>${0:-&gt; ()}</code></p>",
        "id": 248846173,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1628515974
    },
    {
        "content": "<p>Not sure about the syntax, but that's probably the cursor position after applying the assist.</p>",
        "id": 248846344,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628516067
    },
    {
        "content": "<p>That's the snippet for the return type</p>",
        "id": 248846732,
        "sender_full_name": "matklad",
        "timestamp": 1628516256
    },
    {
        "content": "<p>Oh! I didn't know the cursor position should also be mentioned in that fixture.</p>",
        "id": 248846748,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1628516266
    },
    {
        "content": "<p>Does it mean that <code>-&gt; ()</code> should be selected?</p>",
        "id": 248846887,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628516323
    },
    {
        "content": "<p>yeah</p>",
        "id": 248846942,
        "sender_full_name": "matklad",
        "timestamp": 1628516356
    },
    {
        "content": "<p>Yes, that's actually the case.</p>",
        "id": 248846961,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1628516369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"424024\">@Mahdi Faramarzpour</span> yeah, it actually one of the important bits of the assist experince -- where does the cursor end up being after the edit. In general, proper cursor positioning is what creates the fluidity feeling when using an IDE</p>",
        "id": 248847076,
        "sender_full_name": "matklad",
        "timestamp": 1628516416
    },
    {
        "content": "<p>(and VS Code cursor positioning logic is, well, less than optimal)</p>",
        "id": 248847109,
        "sender_full_name": "matklad",
        "timestamp": 1628516433
    },
    {
        "content": "<p>So can you give me some insight about the syntax regarding this <code>$0</code> or <code>${0:-&gt; ()}</code> ? what exactly do these symbols mean?</p>",
        "id": 248847383,
        "sender_full_name": "Mahdi Faramarzpour",
        "timestamp": 1628516536
    },
    {
        "content": "<p>They're like tab stops IIRC, so the cursor is on <code>$0</code>, but you can tab to <code>$1</code> etc.</p>",
        "id": 248847916,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628516790
    },
    {
        "content": "<p>And <code>${0:xoxo}</code> means \"output <code>xoxo</code> here and select it\"</p>",
        "id": 248847974,
        "sender_full_name": "Laurențiu",
        "timestamp": 1628516833
    }
]