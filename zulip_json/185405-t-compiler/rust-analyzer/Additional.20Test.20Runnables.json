[
    {
        "content": "<p>Hiya! I wanted to ask a slightly uninformed question. I was interested in adding support for macros like <code>tokio::test</code>/<code>runtime::test</code> to the runnables in <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates/ra_ide_api/src/runnables.rs#L39\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates/ra_ide_api/src/runnables.rs#L39\">https://github.com/rust-analyzer/rust-analyzer/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates/ra_ide_api/src/runnables.rs#L39</a> as part of the \"test\" runnables, but I'm not sure if I should send a PR for that _or_ wait for proc macro expansion with a mechanism similar to <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/688#issuecomment-504171869\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/688#issuecomment-504171869\">https://github.com/rust-analyzer/rust-analyzer/issues/688#issuecomment-504171869</a></p>",
        "id": 174992394,
        "sender_full_name": "David Barsky",
        "timestamp": 1567701963
    },
    {
        "content": "<p>We don't have any support for proc macros yet, so doing this properly has a pretty large and hairy yak attached.  However I'd be fine with just hard-coding <code>tokio::test</code> or <code>runtime::test</code></p>",
        "id": 174992440,
        "sender_full_name": "matklad",
        "timestamp": 1567701997
    },
    {
        "content": "<p>Gotcha, sounds good! I might send subsequent PRs for proptest once <a href=\"https://github.com/AltSysrq/proptest/pull/166\" target=\"_blank\" title=\"https://github.com/AltSysrq/proptest/pull/166\">https://github.com/AltSysrq/proptest/pull/166</a> lands</p>",
        "id": 174993782,
        "sender_full_name": "David Barsky",
        "timestamp": 1567702853
    },
    {
        "content": "<p>FYI, I am cosidering switching rust-analyzer itself from proptest to quickcheck :)</p>",
        "id": 174994038,
        "sender_full_name": "matklad",
        "timestamp": 1567702996
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ cargo bloat --time\n29.57s ra_ide_api\n27.23s ra_hir\n16.94s proptest  :(\n16.35s syn\n14.24s clap\n12.85s syn\n</pre></div>",
        "id": 174994061,
        "sender_full_name": "matklad",
        "timestamp": 1567703014
    },
    {
        "content": "<p>I did see that! I'm not the biggest fan of the <code>Arbitrary</code> typeclass and I like Hypothesis/Hedgehog-style generators more :)</p>",
        "id": 174996239,
        "sender_full_name": "David Barsky",
        "timestamp": 1567704380
    },
    {
        "content": "<p>unrelated, if I wanted to share my syntax highlighting config—e.g., for Night Owl—should I open an issue for that? Could be handy to have a shared repo of highlighed syntax colors!</p>",
        "id": 174996303,
        "sender_full_name": "David Barsky",
        "timestamp": 1567704433
    },
    {
        "content": "<p>Yeah, I also <strong>love</strong> hypothesis, but I feel that such compile time is excessive, especially given that proptest ends up as a <code>[dependency]</code> and not a <code>[dev-dependency]</code></p>",
        "id": 174996432,
        "sender_full_name": "matklad",
        "timestamp": 1567704508
    },
    {
        "content": "<p>what is Night Owl? A theme for VS Code?</p>",
        "id": 174996462,
        "sender_full_name": "matklad",
        "timestamp": 1567704532
    },
    {
        "content": "<p>It might be a good idea to make a shared repo, yeah, but probably outside of rust-analyzer's main repo</p>",
        "id": 174996515,
        "sender_full_name": "matklad",
        "timestamp": 1567704564
    },
    {
        "content": "<p>I'd contribute the One True Theme: Emacs-flawored zenburn: <a href=\"https://github.com/matklad/config/blob/f49c2a52122550006cd81bda2221426ad869e3ba/vscode/settings.json#L96-L177\" target=\"_blank\" title=\"https://github.com/matklad/config/blob/f49c2a52122550006cd81bda2221426ad869e3ba/vscode/settings.json#L96-L177\">https://github.com/matklad/config/blob/f49c2a52122550006cd81bda2221426ad869e3ba/vscode/settings.json#L96-L177</a> :D</p>",
        "id": 174996604,
        "sender_full_name": "matklad",
        "timestamp": 1567704603
    },
    {
        "content": "<p>Yep! One that I'm pretty happy with. <a href=\"https://github.com/sdras/night-owl-vscode-theme\" target=\"_blank\" title=\"https://github.com/sdras/night-owl-vscode-theme\">https://github.com/sdras/night-owl-vscode-theme</a></p>",
        "id": 174996749,
        "sender_full_name": "David Barsky",
        "timestamp": 1567704682
    },
    {
        "content": "<p>Outside, for sure. feel free to make a repo, I can send a PR with the config!</p>",
        "id": 174996866,
        "sender_full_name": "David Barsky",
        "timestamp": 1567704736
    },
    {
        "content": "<p>remove the duplicated syn, switch from clap to pico-args, keep proptest ;)</p>",
        "id": 174996889,
        "sender_full_name": "lqd",
        "timestamp": 1567704753
    },
    {
        "content": "<p>To remove duplicated syn, I think we should poke <span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span> to release failure <code>0.1</code> with upgraded syn :-)</p>\n<p>Bumping MSRV in non-semver breaking way can be ok: lazy_static recently bumped from 1.24 to 1.27. Bumping to 1.31 is more questionable though.</p>",
        "id": 174997231,
        "sender_full_name": "matklad",
        "timestamp": 1567704980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> switching to pico-args is genuinely great idea: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1768\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1768\">https://github.com/rust-analyzer/rust-analyzer/issues/1768</a></p>",
        "id": 174997394,
        "sender_full_name": "matklad",
        "timestamp": 1567705067
    },
    {
        "content": "<p>it's a little more verbose than clap/structopt for sure, but the 20s+ reduction on compile times (in release) seemed worth it</p>",
        "id": 174997666,
        "sender_full_name": "lqd",
        "timestamp": 1567705230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Funny enough, I can't actually _publish_ changes—I can only merge them :)</p>",
        "id": 174998635,
        "sender_full_name": "David Barsky",
        "timestamp": 1567705863
    },
    {
        "content": "<p>To make sure I'm on the same page—bumping failure's syn/quote dependency to 1.0 is okay _even if_ the MSRV goes up to 1.31?</p>",
        "id": 174998774,
        "sender_full_name": "David Barsky",
        "timestamp": 1567705963
    },
    {
        "content": "<p>So, there are different opinions about this, but, it's fair to say that this is not outright wrong</p>",
        "id": 174998960,
        "sender_full_name": "matklad",
        "timestamp": 1567706108
    },
    {
        "content": "<p>For example, this PR bumps MSRV of lazy_static while staying semver compatible <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs/pull/156\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/lazy-static.rs/pull/156\">https://github.com/rust-lang-nursery/lazy-static.rs/pull/156</a></p>",
        "id": 174999076,
        "sender_full_name": "matklad",
        "timestamp": 1567706176
    },
    {
        "content": "<p>regex policy also allows bumping regex without making a breaking release: <a href=\"https://github.com/rust-lang/regex#minimum-rust-version-policy\" target=\"_blank\" title=\"https://github.com/rust-lang/regex#minimum-rust-version-policy\">https://github.com/rust-lang/regex#minimum-rust-version-policy</a></p>",
        "id": 174999105,
        "sender_full_name": "matklad",
        "timestamp": 1567706204
    },
    {
        "content": "<p>hmm, good to know. i'm sorry about my conservatism here—I don't want to make any dumb mistakes here :)</p>",
        "id": 174999354,
        "sender_full_name": "David Barsky",
        "timestamp": 1567706400
    },
    {
        "content": "<p>So I'd say it's definitely OK to bump MSRV to \"at least two year old Rust\", and it's definitelly not OK to bump MSRV of a widely supported crate to \"current stable\". I'd say the latter is not OK even with a breaking semver release, but is more exusable that way. </p>\n<p>It's unclear where on this spectrum 1.31 lays, but, given that rand recently bumped to 1.32, I guess it's closer to \"two year old Rust\"</p>",
        "id": 174999434,
        "sender_full_name": "matklad",
        "timestamp": 1567706424
    },
    {
        "content": "<p><code>failure</code> is only used by <code>chalk</code>, right?</p>",
        "id": 174999853,
        "sender_full_name": "Laurențiu",
        "timestamp": 1567706746
    },
    {
        "content": "<p>right: <a href=\"https://github.com/rust-lang/chalk/pull/236\" target=\"_blank\" title=\"https://github.com/rust-lang/chalk/pull/236\">https://github.com/rust-lang/chalk/pull/236</a></p>",
        "id": 175000011,
        "sender_full_name": "matklad",
        "timestamp": 1567706837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span> added you as a maintainer of <a href=\"https://github.com/rust-analyzer/VsCode-themes/\" target=\"_blank\" title=\"https://github.com/rust-analyzer/VsCode-themes/\">https://github.com/rust-analyzer/VsCode-themes/</a></p>",
        "id": 175000382,
        "sender_full_name": "matklad",
        "timestamp": 1567707072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> thanks!</p>",
        "id": 175000911,
        "sender_full_name": "David Barsky",
        "timestamp": 1567707412
    },
    {
        "content": "<p>I worry more about turning failure into rand—I know some people have their complaints about its maintence. in fairness, failure probably also has a similar reputation, but _far_ off into the other direction</p>",
        "id": 175001040,
        "sender_full_name": "David Barsky",
        "timestamp": 1567707493
    }
]