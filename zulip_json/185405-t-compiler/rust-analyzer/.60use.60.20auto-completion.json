[
    {
        "content": "<p>hello, should <code>use</code> statement auto-completion be expected to work?</p>",
        "id": 180900488,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1573887259
    },
    {
        "content": "<p><em>Paths</em> in use statements should be completed: <code>use std::coll</code> -&gt; <code>use std::collection</code>. The <code>use</code> keyword itself is not yet completed, this should be fixed</p>",
        "id": 180904345,
        "sender_full_name": "matklad",
        "timestamp": 1573895341
    },
    {
        "content": "<p>Hello!</p>",
        "id": 180904351,
        "sender_full_name": "matklad",
        "timestamp": 1573895348
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> , well on my side it's not, any way I could help troubleshooting?</p>",
        "id": 180939314,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1573959670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I'm getting these in the output : <code>async fn</code> is not permitted in the 2015 edition</p>",
        "id": 180949380,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1573981002
    },
    {
        "content": "<p>hmm things are working now. Don't know why.</p>",
        "id": 180949582,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1573981421
    },
    {
        "content": "<p>Probably the cargo project wasn't imported properly</p>",
        "id": 180950231,
        "sender_full_name": "matklad",
        "timestamp": 1573982824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Well! I am using a pretty standard setup with VSCode. How could that happen? I just opened a folder with my git repo containing Cargo.toml etc.</p>",
        "id": 181183390,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1574231673
    },
    {
        "content": "<p>It's hard to tell retroactively, but a couple of reasons why this could have happened:</p>\n<ul>\n<li>the rust toolchain didn't have the rust-src component installed</li>\n<li>the project structure was changed dynamically (ie, a new binary is added) without reloading the analyzer. We don't handle dynamic changes to Cargo.toml yet</li>\n</ul>",
        "id": 181183458,
        "sender_full_name": "matklad",
        "timestamp": 1574231779
    },
    {
        "content": "<p>hmm, for missing rust-src, it's not possible because I didnt switch toolchain or install anything when it started working again, and I have rust-src installed on all my toolchains<br>\nand I didnt add any new binary</p>",
        "id": 181283357,
        "sender_full_name": "Leo Le Bouter",
        "timestamp": 1574323282
    }
]