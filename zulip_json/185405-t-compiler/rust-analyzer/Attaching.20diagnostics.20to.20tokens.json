[
    {
        "content": "<p>I'd like to attach a diagnostic to a specific token in an attribute. This token is not its own syntax node, since it's just part of the attributes <code>TokenTree</code>.</p>\n<p>Is there any existing way to accomplish this? I don't see any, since diagnostics are always attached to <code>SyntaxNodePtr</code>s, which only work for nodes, not <code>SyntaxElement</code>s.</p>",
        "id": 218087566,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606480986
    },
    {
        "content": "<p>on the IDE level the diagnostic just has a TextRange, so it should be possible to narrow the range during diagnostic collection there. You could use the token ID of the token in the tree in the HIR diagnostic, I guess?</p>",
        "id": 218088278,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1606481491
    },
    {
        "content": "<p>hmm, yeah, that's right</p>",
        "id": 218088701,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606481731
    },
    {
        "content": "<p>Yeah, the idea is that diagnostic struct are more semantic-based, and that rendering them into specific ranges is handled by an IDE. It might make sense to document that somewhere though.</p>",
        "id": 218167975,
        "sender_full_name": "matklad",
        "timestamp": 1606576023
    }
]