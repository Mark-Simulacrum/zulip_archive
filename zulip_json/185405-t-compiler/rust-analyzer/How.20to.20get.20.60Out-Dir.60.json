[
    {
        "content": "<p>In <a href=\"https://github.com/rust-lang/cargo/issues/7622\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/issues/7622\">cargo#7622</a>,  <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> introduce a new build-script-executed JSON message <code>out-dir</code>. However,  calling <code>cargo metadata</code>solely will not include these data because they are compiler-messages. So do we want to run <code>cargo check</code> at  RA server start up to get these messages explicitly?  Or there are some magical sub-command in cargo which would build the build-scripts only, but not all deps ?</p>",
        "id": 190023792,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1583693548
    },
    {
        "content": "<p>Yeah, I think we need to run <code>cargo-check</code>. Id started though with many<br>\njust a way to manually specify <code>OUT_DIR</code> via config?</p>",
        "id": 190024027,
        "sender_full_name": "matklad",
        "timestamp": 1583693969
    },
    {
        "content": "<blockquote>\n<p>Or there are some magical sub-command in cargo which would build the build-scripts only, but not all deps ?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> has an issue currently open for approximately that <a href=\"https://github.com/rust-lang/cargo/issues/7178\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/issues/7178\">https://github.com/rust-lang/cargo/issues/7178</a></p>",
        "id": 190024383,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583694626
    },
    {
        "content": "<p>This is actually a pretty interesting question when you get into it: <code>cargo check</code> on an existing workspace (i.e. one that hasn't been cleaned) _won't recompile (recheck) dependencies_. So you won't even get to run dependencies' build scripts to get the build-script-executed message.</p>",
        "id": 190024398,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583694692
    },
    {
        "content": "<p>I believe cargo replaces cached output of <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a></p>",
        "id": 190024795,
        "sender_full_name": "matklad",
        "timestamp": 1583695438
    },
    {
        "content": "<p>Correct, if the inputs to <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> are not changed, cargo won't rerun the <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a></p>",
        "id": 190024836,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583695471
    },
    {
        "content": "<p>I think the \"best user experience\" would be to have a persistent cache of dependencies' OUT_DIR to avoid the need to re-run build scripts on project load. Roughly:</p>\n<ul>\n<li>Check persistence cache.</li>\n<li>\n<p>If cache is present:</p>\n<ul>\n<li>\n<p>If OUT_DIR exists:</p>\n<ul>\n<li>Use that OUT_DIR.</li>\n</ul>\n</li>\n<li>\n<p>Compilation cache has been cleared since last project launch.</p>\n</li>\n<li>Delete current persistence cache.</li>\n</ul>\n</li>\n<li>\n<p>If cache is not present (or was just deleted):</p>\n<ul>\n<li>Prompt user to check or build dependencies.</li>\n<li>Convince cargo that the crates without a cached OUT_DIR are dirty and need recompile/recheck (when invoked through the LS)</li>\n</ul>\n</li>\n<li>When user triggers a check or build through the LS:<ul>\n<li>Use the build-script-executed message to persist the OUT_DIR.</li>\n<li>Somehow mark build-script-free dependencies as not requiring the cached OUT_DIR.</li>\n</ul>\n</li>\n</ul>",
        "id": 190024893,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583695574
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#rerun-if-changed\" target=\"_blank\" title=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#rerun-if-changed\">Here's the docs for buildscript rerun-if-changed</a>. TL;DR: by default, buildscripts rerun if any file \"in the package\" changes. The buildscript can, however, request to be rerun on any closed set of file changes and any set of (non-cargo) environment variables.</p>",
        "id": 190025026,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583695867
    },
    {
        "content": "<p>There's also the issue I opened that's still open for adding OUT_DIR information to <code>cargo metadata</code>: <a href=\"https://github.com/rust-lang/cargo/issues/7546\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/issues/7546\">https://github.com/rust-lang/cargo/issues/7546</a></p>",
        "id": 190025159,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583696147
    },
    {
        "content": "<p>But the current way it's accessible is purely through the build-script-executed message IIUC.</p>",
        "id": 190025197,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583696164
    },
    {
        "content": "<p>And ofc <code>cargo metadata</code> has less information than an actual build, so it can't really know the correct <code>OUT_DIR</code> (currently?) relies on target-specific information.</p>",
        "id": 190025250,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583696283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Sound reasonable. I would start from config.</p>",
        "id": 190025599,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1583696945
    },
    {
        "content": "<p>Relevant snippets from IntelliJ IDEA:</p>\n<p>On the \"fetch and index dependencies\" step, if the \"run build scripts\" experimental feature is enabled, run <code>cargo check</code> on the project and extract build script json outputs <a href=\"https://github.com/intellij-rust/intellij-rust/blob/8b3c4edc66774d3c94dfced742febfb23c56a706/src/main/kotlin/org/rust/cargo/toolchain/Cargo.kt#L94-L165\" target=\"_blank\" title=\"https://github.com/intellij-rust/intellij-rust/blob/8b3c4edc66774d3c94dfced742febfb23c56a706/src/main/kotlin/org/rust/cargo/toolchain/Cargo.kt#L94-L165\">https://github.com/intellij-rust/intellij-rust/blob/8b3c4edc66774d3c94dfced742febfb23c56a706/src/main/kotlin/org/rust/cargo/toolchain/Cargo.kt#L94-L165</a>  <br>\nIf I'm not mistaken that means that it doesn't actually get dependency build scripts if they've already been cached. However, I think this isn't a problem for IntelliJ Rust because I think IDEA caches indexing information?</p>",
        "id": 190025660,
        "sender_full_name": "Christopher Durham",
        "timestamp": 1583697049
    },
    {
        "content": "<p>I remember IntelliJ use build-plan ?</p>",
        "id": 190025715,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1583697152
    },
    {
        "content": "<p>Ah, sorry for typo. Cargo <strong>replays</strong> build output of cached bulid scripts: <a href=\"https://gist.github.com/matklad/a685495d4f67a17b62b29ac278af1afa\" target=\"_blank\" title=\"https://gist.github.com/matklad/a685495d4f67a17b62b29ac278af1afa\">https://gist.github.com/matklad/a685495d4f67a17b62b29ac278af1afa</a></p>",
        "id": 190025794,
        "sender_full_name": "matklad",
        "timestamp": 1583697318
    }
]