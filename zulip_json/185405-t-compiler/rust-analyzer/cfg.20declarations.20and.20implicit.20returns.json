[
    {
        "content": "<p>I've been looking into solving <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8378\">rust-analyzer#8378</a>. </p>\n<p>I think the solution would look like modifying <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/a8f1e41f0f15fee02a73850db559752a9124d014/crates/hir_def/src/body/lower.rs#L697\">https://github.com/rust-analyzer/rust-analyzer/blob/a8f1e41f0f15fee02a73850db559752a9124d014/crates/hir_def/src/body/lower.rs#L697</a> to fallback to the last not cfged out statement, if and only if that statement is an expression statement without a semicolon. However, I can't inerate backwards through AstChildren, because that is not implemented (in rowan), although the impl should be cheap. I could just allocate a temporary vector, but I don't feel like that's the best solution.</p>",
        "id": 233468705,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1617793628
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/8398\">https://github.com/rust-analyzer/rust-analyzer/pull/8398</a></p>\n<p>Wasn't too bad, if people think this design makes sense.</p>",
        "id": 233472776,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1617796023
    }
]