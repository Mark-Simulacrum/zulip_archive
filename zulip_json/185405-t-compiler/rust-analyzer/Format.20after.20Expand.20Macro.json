[
    {
        "content": "<p>Hey all, I'm investigating how much effort it would be to format after expanding a macro, I found this in the code: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/cf41e1410a0cf87a05b2dd632e3b5d67f8d55327/crates/ide/src/expand_macro.rs#L36-L38\">https://github.com/rust-analyzer/rust-analyzer/blob/cf41e1410a0cf87a05b2dd632e3b5d67f8d55327/crates/ide/src/expand_macro.rs#L36-L38</a> , is there alot to accomplish this? Why is whitespace lost and re-added on expansion?</p>",
        "id": 233421673,
        "sender_full_name": "Emmanuel Thompson",
        "timestamp": 1617762896
    },
    {
        "content": "<p>The difficult part here is adding a source code formatter in the first place, hooking it up to macros should be fairly straightforward</p>",
        "id": 233422093,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1617763206
    },
    {
        "content": "<p>Ahh because RA LSP calls out to rustfmt?</p>",
        "id": 233422302,
        "sender_full_name": "Emmanuel Thompson",
        "timestamp": 1617763388
    },
    {
        "content": "<p>In fact, I am working on this right now, we need a proper ast formatter internally for different purposes.</p>",
        "id": 233425383,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1617765856
    },
    {
        "content": "<blockquote>\n<p>Why is whitespace lost </p>\n</blockquote>\n<p>Because our macro expansion code ignores whitespace information and even we preserve it we still need to reformat for proc-macro etc.</p>",
        "id": 233425610,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1617766062
    },
    {
        "content": "<blockquote>\n<p>Ahh because RA LSP calls out to rustfmt?</p>\n</blockquote>\n<p>yes</p>",
        "id": 233425689,
        "sender_full_name": "Edwin Cheng",
        "timestamp": 1617766116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216201\">@Edwin Cheng</span> neat! Thanks for the info.</p>",
        "id": 233426358,
        "sender_full_name": "Emmanuel Thompson",
        "timestamp": 1617766671
    },
    {
        "content": "<p>We can't use it, but this just came out: <a href=\"https://github.com/dtolnay/prettyplease\">https://github.com/dtolnay/prettyplease</a></p>",
        "id": 267778776,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642017975
    },
    {
        "content": "<p>why can't we use it :o</p>",
        "id": 267859331,
        "sender_full_name": "jhgg",
        "timestamp": 1642075486
    },
    {
        "content": "<p><code>syn</code> is a whole parser in itself (which we don't need) and isn't designed to work with invalid syntax</p>",
        "id": 267859383,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642075518
    },
    {
        "content": "<p>is the source code produced by expand macro invalid syntax?? </p>\n<p>i guess it is, i tried experimenting piping it to rust-fmt internally and it did not like when the file was just an expr <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 267859458,
        "sender_full_name": "jhgg",
        "timestamp": 1642075559
    },
    {
        "content": "<p>very excited to hear that edwin is working on an ast formatter tho. this would for sure solve it.</p>",
        "id": 267859560,
        "sender_full_name": "jhgg",
        "timestamp": 1642075593
    },
    {
        "content": "<p>We still want a formatter for e.g. code generated by assists, so it's not all macro-generated</p>",
        "id": 267859567,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642075597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421086\">jhgg</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Format.20after.20Expand.20Macro/near/267859560\">said</a>:</p>\n<blockquote>\n<p>very excited to hear that edwin is working on an ast formatter tho. this would for sure solve it.</p>\n</blockquote>\n<p>I think he's taking a break from rust-analyzer, but I'm sure he'll be back at some point :-)</p>",
        "id": 267859632,
        "sender_full_name": "Laurențiu",
        "timestamp": 1642075635
    },
    {
        "content": "<p>i will miss the days of applying an assist then formatting the document to snap things back into the right places haha.</p>",
        "id": 267859640,
        "sender_full_name": "jhgg",
        "timestamp": 1642075640
    },
    {
        "content": "<p>oh my word that message was from april 2021</p>",
        "id": 267859652,
        "sender_full_name": "jhgg",
        "timestamp": 1642075648
    },
    {
        "content": "<p>i don't use zulip much. whoops!</p>",
        "id": 267859672,
        "sender_full_name": "jhgg",
        "timestamp": 1642075662
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  181ms - GlobalState::handle_event\n      180ms - GlobalState::handle_event/flycheck\n</code></pre></div>",
        "id": 267862324,
        "sender_full_name": "jhgg",
        "timestamp": 1642077281
    }
]