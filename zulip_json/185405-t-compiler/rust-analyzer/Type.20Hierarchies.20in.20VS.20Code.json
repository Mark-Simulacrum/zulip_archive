[
    {
        "content": "<p>Hey, I just found out the new version of VS Code ships with a type hierarchies view <a href=\"https://github.com/microsoft/vscode/issues/126666\">https://github.com/microsoft/vscode/issues/126666</a>. LSP proposal here: <a href=\"https://github.com/microsoft/language-server-protocol/pull/1231\">https://github.com/microsoft/language-server-protocol/pull/1231</a>. Do we need to add support for this in Rust-Analyzer? Should I open an issue for this?</p>",
        "id": 257066455,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1633960003
    },
    {
        "content": "<p>What would we return there? Supertraits/Subtraits? Deref targets?</p>",
        "id": 257066725,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1633960131
    },
    {
        "content": "<p>For traits, Sub/Supertraits, Deref otherwise sounds reasonable to me</p>",
        "id": 257066988,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633960236
    },
    {
        "content": "<p>the LSP support specifically calls it subtypes and supertypes, which if we took it literally doesn't make sense in Rust</p>",
        "id": 257067048,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1633960268
    },
    {
        "content": "<p>I guess the question is, is there something _useful_ we can provide with that? tbh I'm not sure trait or deref hierarchies are very interesting to show</p>",
        "id": 257067344,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633960417
    },
    {
        "content": "<p>I think a <code>Deref</code> would be interesting to view when dealing with say <code>MutexGuard</code>. The following <code>Deref</code> tree could be useful to show:</p>\n<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>-&gt; array\n  -&gt; Vec\n    -&gt; MutexGuard\n</code></pre></div>\n<p>Dereferencing a mutexguard gives you access to all methods defined by array. Which could be non-obvious in some cases.</p>",
        "id": 257068298,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1633960816
    },
    {
        "content": "<p>but maybe I'm reaching, lol</p>",
        "id": 257068764,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1633961028
    },
    {
        "content": "<p>it's good information to have, but I don't know if the type hierarchy view is the best place for it. It feels a bit... heavy <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 257069272,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633961262
    },
    {
        "content": "<p>like, it's a few lines max, and you're not going to be using the navigation capabilities</p>",
        "id": 257069377,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633961302
    },
    {
        "content": "<p>there'd be nothing to expand, for example</p>",
        "id": 257069462,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633961346
    },
    {
        "content": "<p>could we show the <em>module</em> hierarchy there? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 257070590,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633961857
    }
]