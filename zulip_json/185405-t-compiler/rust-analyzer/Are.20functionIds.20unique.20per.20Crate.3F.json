[
    {
        "content": "<p>Hi, </p>\n<p>I noticed that ModuleId was defined as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">ModuleId</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">krate</span>: <span class=\"nc\">CrateId</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">local_id</span>: <span class=\"nc\">LocalModuleId</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and FunctionId was </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">FunctionId</span><span class=\"p\">(</span><span class=\"n\">salsa</span>::<span class=\"n\">InternId</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In this method: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir_def/src/item_scope.rs#L357\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir_def/src/item_scope.rs#L357</a></p>\n<p>I think we are able to get the CrateID from just the FunctionID, does this mean that FunctionId's are unique across crates? And it is only true while Crates are processed sequentially?</p>",
        "id": 221366748,
        "sender_full_name": "kev",
        "timestamp": 1609531914
    },
    {
        "content": "<p>FunctionIds are unique globally</p>",
        "id": 221366789,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609531925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Are.20functionIds.20unique.20per.20Crate.3F/near/221366789\">said</a>:</p>\n<blockquote>\n<p>FunctionIds are unique globally</p>\n</blockquote>\n<p>Ah so if you wanted to process the dependencies for a crate in parallel, this would need to change? Or you would maybe have a LocalFunctionId and FunctionId like ModuleId?</p>",
        "id": 221366817,
        "sender_full_name": "kev",
        "timestamp": 1609531993
    },
    {
        "content": "<p>Or maybe it will always be this way?</p>",
        "id": 221366818,
        "sender_full_name": "kev",
        "timestamp": 1609532003
    },
    {
        "content": "<p>why would it need to change?</p>",
        "id": 221366875,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Are.20functionIds.20unique.20per.20Crate.3F/near/221366875\">said</a>:</p>\n<blockquote>\n<p>why would it need to change?</p>\n</blockquote>\n<p>I thought it was a blocker for processing dependencies in parallel?</p>",
        "id": 221366901,
        "sender_full_name": "kev",
        "timestamp": 1609532091
    },
    {
        "content": "<p>Hmm or maybe that would not matter for incremental compilation as much, as it would only help on the first compilation</p>",
        "id": 221366927,
        "sender_full_name": "kev",
        "timestamp": 1609532161
    },
    {
        "content": "<p>I don't see why it would be a blocker for that. FunctionIds aren't guaranteed to be in any kind of sequential order</p>",
        "id": 221366977,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532180
    },
    {
        "content": "<p>they are interned IDs referring to the location of the function, i.e. the ID of the container plus the index in the container</p>",
        "id": 221366997,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532230
    },
    {
        "content": "<p>the interning is synchronized, but it's very fast</p>",
        "id": 221367008,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Are.20functionIds.20unique.20per.20Crate.3F/near/221366977\">said</a>:</p>\n<blockquote>\n<p>I don't see why it would be a blocker for that. FunctionIds aren't guaranteed to be in any kind of sequential order</p>\n</blockquote>\n<p>Oh my thought process was that if the FunctionID is unique globally, then you cannot process two crates at the same time. Because then you may not have the functionIds be synchronised. </p>\n<p>Hmm can you see where my logic fails?</p>",
        "id": 221367057,
        "sender_full_name": "kev",
        "timestamp": 1609532320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Are.20functionIds.20unique.20per.20Crate.3F/near/221367008\">said</a>:</p>\n<blockquote>\n<p>the interning is synchronized, but it's very fast</p>\n</blockquote>\n<p>Oh, so the processing of dependencies will be parallel, but the IDs will be given out by the Interner which will guarantee that each Crate gets a unique FunctionID? And this would not be a bottleneck because the internet is fast?</p>",
        "id": 221367126,
        "sender_full_name": "kev",
        "timestamp": 1609532411
    },
    {
        "content": "<p>yes</p>",
        "id": 221367133,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609532437
    },
    {
        "content": "<p>Okay got it, thanks for explaining!</p>",
        "id": 221367161,
        "sender_full_name": "kev",
        "timestamp": 1609532506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"369769\">kev</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Are.20functionIds.20unique.20per.20Crate.3F/near/221366927\">said</a>:</p>\n<blockquote>\n<p>Hmm or maybe that would not matter for incremental compilation as much, as it would only help on the first compilation</p>\n</blockquote>\n<p>What I said here is not entirely true when I think it through, because external dependencies once downloaded would not change but if you are in a workspace then I think parallel processing would help since all crates in the workspace have an _equal_ chance of being changed.</p>",
        "id": 221367401,
        "sender_full_name": "kev",
        "timestamp": 1609532907
    }
]