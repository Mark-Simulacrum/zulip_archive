[
    {
        "content": "<p>Small sneak peek of custom (postfix) snippets <a href=\"/user_uploads/4715/zZS8KQoSr86ljGlJBf9x-YZl/nruByiHaIA.gif\">nruByiHaIA.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/zZS8KQoSr86ljGlJBf9x-YZl/nruByiHaIA.gif\" title=\"nruByiHaIA.gif\"><img src=\"/user_uploads/4715/zZS8KQoSr86ljGlJBf9x-YZl/nruByiHaIA.gif\"></a></div>",
        "id": 256072938,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633359593
    },
    {
        "content": "<p>Mainly putting that here to potentially collect ideas for this</p>",
        "id": 256073040,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633359612
    },
    {
        "content": "<p>Basically what I'm thinking of currently is, postfix snippets should be able to require Items and Traits to be in scope specified by paths(as with the <code>imports</code> field here), have access to the receiver(in case of a postfix snippet) and tab points($0, $1 etc. forgot the name of these).</p>",
        "id": 256073542,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633359793
    },
    {
        "content": "<p>Assuming we will have type postfix snippets at some point it would probably make sense to have these split on expr and type snippets</p>",
        "id": 256073659,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633359832
    },
    {
        "content": "<p>Okay added both postfix and normal snippets, tabpoints working and <code>$receiver</code> being replaced by the postfix receiver. Form of a snippet is currently(in typescript notation with <code>null | ...</code> being optional):</p>\n<div class=\"codehilite\" data-code-language=\"TypeScript\"><pre><span></span><code><span class=\"kd\">interface</span> <span class=\"nx\">UserSnippet</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"snippet\"</span><span class=\"o\">:</span> <span class=\"kt\">string</span> <span class=\"o\">|</span> <span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"description\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span> <span class=\"o\">|</span> <span class=\"kt\">string</span> <span class=\"o\">|</span> <span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"requires\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span> <span class=\"o\">|</span> <span class=\"kt\">string</span> <span class=\"o\">|</span> <span class=\"p\">[</span><span class=\"kt\">string</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"scope\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span> <span class=\"o\">|</span> <span class=\"s2\">\"item\"</span> <span class=\"o\">|</span> <span class=\"s2\">\"expr\"</span> <span class=\"c1\">// \"expr\" | \"type\" for postfix</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>For <code>snippet</code> and <code>description</code> the array variant just joins all of the strings with a newline(this is similar to how usual vscode snippet definitions work). Might make sense to have <code>description</code> <em>and</em> <code>detail</code> here which render differently.</p>\n<p><code>requires</code> is just a bunch of item paths that will be resolved to which we will then try and  find an import path again. That means the path given is not necessarily the import path that will be used, this has the advantage that we will adhere to the selected import prefix. If the item path does not resolve to an item the snippet will be discarded for the current completion attempt, which also has the nice property that a snippet completion doesn't work in a crate if the crate can't see the item but it may work in another crate in the same workspace if the item is visible from there.</p>\n<p><code>scope</code> is just a filter for when the snippets may apply(will flesh this part out).</p>\n<p>If you got any suggestions, ideas etc feel free to drop them here. Implementation PR <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10458\">#10458</a></p>",
        "id": 256127437,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633379318
    },
    {
        "content": "<p>Changed some ideas while writing a feature doc, adoc render -&gt; <a href=\"https://gist.github.com/Veykril/7a6ff91966beff1abebc9e8e8f16a4bc\">https://gist.github.com/Veykril/7a6ff91966beff1abebc9e8e8f16a4bc</a></p>",
        "id": 256237678,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633437668
    },
    {
        "content": "<p>One thing I am thinking about is whether we should allow more than one tab stop</p>",
        "id": 256266863,
        "sender_full_name": "matklad",
        "timestamp": 1633447803
    },
    {
        "content": "<p>I don't see why we should only allow a single one</p>",
        "id": 256267083,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633447876
    },
    {
        "content": "<p>When completing keywords, we currently have several tab-stops (ie, in <code>match</code>) and that causse very practical problems in that tab-stops disable completions. (So for the last month I've been wanting to revert that change, but didn't get to it yet). </p>\n<p>More generally, since my IntelliJ days, I've felt like snippet UI with tabs for navigation is pretty bad. The mode of being \"in\" snippet is very transient and path dependent, the same action behaved differently depending on whether the snippet is active or not</p>",
        "id": 256267316,
        "sender_full_name": "matklad",
        "timestamp": 1633447958
    },
    {
        "content": "<p>So, my ideal UX would be:</p>\n<ul>\n<li>the cursor is positioned to the right place after expansion</li>\n<li>given the cursor placement, we provide navigation facilites regargless of whether you expanded the snippet or typed the thing yourself</li>\n</ul>",
        "id": 256267925,
        "sender_full_name": "matklad",
        "timestamp": 1633448158
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/kGd1hNdXzTzqM9oUE8BMgoGM/Peek-2021-10-05-18-35.gif\">Peek-2021-10-05-18-35.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/kGd1hNdXzTzqM9oUE8BMgoGM/Peek-2021-10-05-18-35.gif\" title=\"Peek-2021-10-05-18-35.gif\"><img src=\"/user_uploads/4715/kGd1hNdXzTzqM9oUE8BMgoGM/Peek-2021-10-05-18-35.gif\"></a></div>",
        "id": 256268009,
        "sender_full_name": "matklad",
        "timestamp": 1633448174
    },
    {
        "content": "<p>^ note how there's no completion, and how there's relatively little feedback about whether the tab will bring me to the next tab stop or whether it'll just tab</p>",
        "id": 256268153,
        "sender_full_name": "matklad",
        "timestamp": 1633448237
    },
    {
        "content": "<p>huh, that is not the behaviour I observe <a href=\"/user_uploads/4715/SI-352SSANOcFQw3qKlpWvWE/RZRNdqL8a3.gif\">RZRNdqL8a3.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/SI-352SSANOcFQw3qKlpWvWE/RZRNdqL8a3.gif\" title=\"RZRNdqL8a3.gif\"><img src=\"/user_uploads/4715/SI-352SSANOcFQw3qKlpWvWE/RZRNdqL8a3.gif\"></a></div>",
        "id": 256268192,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448249
    },
    {
        "content": "<p>Do you have <code>\"editor.suggest.snippetsPreventQuickSuggestions\"</code> in your settings?</p>",
        "id": 256268445,
        "sender_full_name": "matklad",
        "timestamp": 1633448328
    },
    {
        "content": "<p>I have that set to <code>false</code></p>",
        "id": 256268494,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448348
    },
    {
        "content": "<p>So I guess that why it works for me</p>",
        "id": 256268551,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448374
    },
    {
        "content": "<p>Yeah,the default is false</p>",
        "id": 256268579,
        "sender_full_name": "matklad",
        "timestamp": 1633448386
    },
    {
        "content": "<p>No the default is <code>true</code></p>",
        "id": 256268601,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448396
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/kbywiyf1b4RkP4zRpl8u4fV9/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/kbywiyf1b4RkP4zRpl8u4fV9/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/kbywiyf1b4RkP4zRpl8u4fV9/image.png\"></a></div>",
        "id": 256268680,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448407
    },
    {
        "content": "<p>Yeah, that's what I wanted to say</p>",
        "id": 256268696,
        "sender_full_name": "matklad",
        "timestamp": 1633448414
    },
    {
        "content": "<p>Ah okay, ye that makes more sense anyways right</p>",
        "id": 256268724,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448424
    },
    {
        "content": "<p>I still don't think the server should disallow more than one tabstop though, this is something the client does and for custom snippets its the user who is in charge of these anyhow</p>",
        "id": 256268890,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448491
    },
    {
        "content": "<p>I think I had this set to <code>false</code> once, to fix this issue. And then I thought that I shoudl be running with default configs, as majority of the users do, such that I am motivated to fix the problem. So I was runing with this set to default for many months -- I am annoyed each time I complete the keyword, but not enough to get this fixed XD</p>",
        "id": 256268949,
        "sender_full_name": "matklad",
        "timestamp": 1633448509
    },
    {
        "content": "<p>I can see your point in regards to the snippets the server has built-in given the default setting, but I disagree with forbidding multiple tab stops in custom snippets specifically as that is up to the user to manage anyways.</p>",
        "id": 256269306,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633448642
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I guess the right fix here:</p>\n<ul>\n<li>in the vscode client, snoop the value of <code>snippetsPreventQuickSuggestions</code> config, tell it to the server</li>\n<li>in the server, erase all-but-the-first tab-stops from the snippets as a post-processing step unless that option is fixed</li>\n</ul>",
        "id": 256269524,
        "sender_full_name": "matklad",
        "timestamp": 1633448727
    },
    {
        "content": "<p>Yeah, I agree that doing something jusb because VS Code is wrong. </p>\n<p>I do feel that my overall point about \"snippets are poor UX in general\" is right, but we need to fix <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7280\">https://github.com/rust-analyzer/rust-analyzer/issues/7280</a> before it becomes actionable and verifyiable</p>",
        "id": 256269764,
        "sender_full_name": "matklad",
        "timestamp": 1633448818
    },
    {
        "content": "<p>snippets in emacs have similar problems, they do allow completions but e.g. disable parenthesis matching (smartparens)</p>",
        "id": 256270110,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633448962
    },
    {
        "content": "<p>Is Emacs behavior different between snippets with one tab stop and with multiple?</p>",
        "id": 256270321,
        "sender_full_name": "matklad",
        "timestamp": 1633449032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Custom.20Postfix.20snippets/near/256269764\">said</a>:</p>\n<blockquote>\n<p>Yeah, I agree that doing something jusb because VS Code is wrong. </p>\n<p>I do feel that my overall point about \"snippets are poor UX in general\" is right, but we need to fix <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7280\">https://github.com/rust-analyzer/rust-analyzer/issues/7280</a> before it becomes actionable and verifyiable</p>\n</blockquote>\n<p>Ye I think it would be better to go with this, that is change builtin snippets to only use one tabstop and nudge users to instead use structural navigation.</p>",
        "id": 256272533,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633449803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/Custom.20Postfix.20snippets/near/256270321\">said</a>:</p>\n<blockquote>\n<p>Is Emacs behavior different between snippets with one tab stop and with multiple?</p>\n</blockquote>\n<p>I think if you have just one tab stop smartparens doesn't get disabled, yes. (I haven't tried this recently though, so maybe things have improved)</p>",
        "id": 256274856,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633450625
    },
    {
        "content": "<p>Can we let crates add custom snippets too (e.g. in our Cargo.toml metadata section)</p>",
        "id": 256279773,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1633452594
    },
    {
        "content": "<p>That's an idea I had as well in the back of my head. Cargo.toml metadata might work, we could also maybe use tool attributes for this(honestly no idea how they work as there seems to be almost no resources on these)?</p>",
        "id": 256280290,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633452794
    },
    {
        "content": "<p>Hmm, I'm not sure that tool attributes are the right tool for this job.</p>",
        "id": 256280825,
        "sender_full_name": "Daniel Mcnab",
        "timestamp": 1633453001
    },
    {
        "content": "<p>Ye probably, cargo metadata does seem like a good spot to put these if we want crates to have this ability</p>",
        "id": 256280948,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1633453058
    }
]