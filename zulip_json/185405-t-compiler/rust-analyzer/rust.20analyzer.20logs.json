[
    {
        "content": "<p>How do I see the logs of rust-analyzer? I want rust-analyzer to write log to my specified file.</p>",
        "id": 189882363,
        "sender_full_name": "B YI",
        "timestamp": 1583493474
    },
    {
        "content": "<p>Rust analyzer logs to stderr</p>",
        "id": 189885692,
        "sender_full_name": "matklad",
        "timestamp": 1583496397
    },
    {
        "content": "<p>Thanks. The thing is rust-analyzer is started by the lsp client. I have to create a wrapper to view stderr of rust analyzer. Does rust-analyzer has some command line flag to specify the log file?</p>",
        "id": 189886643,
        "sender_full_name": "B YI",
        "timestamp": 1583497291
    },
    {
        "content": "<p>Nope, logging destination is not configurable. It's the job of the client to redirect logs to the appropriate location</p>",
        "id": 189886787,
        "sender_full_name": "matklad",
        "timestamp": 1583497413
    },
    {
        "content": "<p>Which client are you using?</p>",
        "id": 189886806,
        "sender_full_name": "matklad",
        "timestamp": 1583497437
    },
    {
        "content": "<p>lsp-mode. It has a variable lsp-log-io to log all the requests. But viewing it within emacs is kind of awkward for me.</p>",
        "id": 189886929,
        "sender_full_name": "B YI",
        "timestamp": 1583497547
    },
    {
        "content": "<p>Yeah, I think the best way would be to either use that Emacs log (I think it might be possible to save it to a file?) or to start rust-analyzer via <code>tee</code></p>",
        "id": 189887069,
        "sender_full_name": "matklad",
        "timestamp": 1583497639
    },
    {
        "content": "<p>Ok. I will then create a wrapper. Thanks for your help.</p>",
        "id": 189887184,
        "sender_full_name": "B YI",
        "timestamp": 1583497695
    },
    {
        "content": "<p>you could just save the stderr buffer to a file?</p>",
        "id": 189902415,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1583507772
    },
    {
        "content": "<p>oh, matklad proposed that already</p>",
        "id": 189902443,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1583507797
    }
]