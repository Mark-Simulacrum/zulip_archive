[
    {
        "content": "<p>Hi,</p>\n<p>I was wondering what the &lt;|&gt; marker means in tests?</p>\n<p>An example that I saw of it was here:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"n\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">            fn foo(x: String) {</span>\n<span class=\"s\">                let x : &amp;str = &amp;x&lt;|&gt;;</span>\n<span class=\"s\">            }\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n</code></pre></div>\n<p>loc: crates/hir_def/src/body/scope.rs [func: test_shadow_variable]</p>",
        "id": 221536739,
        "sender_full_name": "kev",
        "timestamp": 1609774131
    },
    {
        "content": "<p>It places the cursor position</p>",
        "id": 221536997,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609774209
    },
    {
        "content": "<p>Oh, why do you need to do that in tests?</p>",
        "id": 221537185,
        "sender_full_name": "kev",
        "timestamp": 1609774277
    },
    {
        "content": "<p>because many of them test functionality that depends on the cursor position</p>",
        "id": 221537491,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609774382
    },
    {
        "content": "<p>like completions, goto def, etc.</p>",
        "id": 221537512,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609774389
    },
    {
        "content": "<p>in the end, it's just a way to specify a position in the text. what it actually means depends on the test</p>",
        "id": 221537592,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609774422
    },
    {
        "content": "<p>I think the test I was looking at was for resolving definitions, in this case it is not needed at all, I'm guessing?</p>",
        "id": 221537747,
        "sender_full_name": "kev",
        "timestamp": 1609774488
    },
    {
        "content": "<p>But it needs to be specified by default?</p>",
        "id": 221537789,
        "sender_full_name": "kev",
        "timestamp": 1609774506
    },
    {
        "content": "<p>no, if it wasn't needed it wouldn't be there. these tests check that the name at the cursor position resolves to a specific variable (given by specifying a position as a number; really it'd be nice to be able to specify two positions for these tests)</p>",
        "id": 221538084,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609774616
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">position</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TestDB</span>::<span class=\"n\">with_position</span><span class=\"p\">(</span><span class=\"n\">ra_fixture</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>you can just look at what the test function does with that <code>position</code></p>",
        "id": 221538171,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1609774657
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221538084\">said</a>:</p>\n<blockquote>\n<p>no, if it wasn't needed it wouldn't be there. these tests check that the name at the cursor position resolves to a specific variable (given by specifying a position as a number; really it'd be nice to be able to specify two positions for these tests)</p>\n</blockquote>\n<p>This was also my initial thinking, then I saw also this test:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"n\">do_check</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">            fn quux(foo: i32) {</span>\n<span class=\"s\">                let f = |bar, baz: i32| {</span>\n<span class=\"s\">                    &lt;|&gt;</span>\n<span class=\"s\">                };</span>\n<span class=\"s\">            }\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"s\">\"bar\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"baz\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"foo\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Where multiple variables are being resolved with only one marker</p>",
        "id": 221538554,
        "sender_full_name": "kev",
        "timestamp": 1609774805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221538171\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">position</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TestDB</span>::<span class=\"n\">with_position</span><span class=\"p\">(</span><span class=\"n\">ra_fixture</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>you can just look at what the test function does with that <code>position</code></p>\n</blockquote>\n<p>Alright will check this out now to see where I am misunderstanding</p>",
        "id": 221538715,
        "sender_full_name": "kev",
        "timestamp": 1609774884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"369769\">kev</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221538554\">said</a>:</p>\n<blockquote>\n<p>Where multiple variables are being resolved with only one marker</p>\n</blockquote>\n<p>But the functionality tested there enumerates the variables visible in a lexical scope, so it's reasonable that a single cursor position will more than one variable.</p>",
        "id": 221538984,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609774990
    },
    {
        "content": "<p>btw, a long-standing task is to replace <code>&lt;|&gt;</code> with <code>$0</code>, to match snippets</p>",
        "id": 221539506,
        "sender_full_name": "matklad",
        "timestamp": 1609775234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221538984\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"369769\">kev</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221538554\">said</a>:</p>\n<blockquote>\n<p>Where multiple variables are being resolved with only one marker</p>\n</blockquote>\n<p>But the functionality tested there enumerates the variables visible in a lexical scope, so it's reasonable that a single cursor position will more than one variable.</p>\n</blockquote>\n<p>That makes sense to me , parroting what Florian said earlier \"in the end, it's just a way to specify a position in the text. what it actually means depends on the test\"</p>\n<p>So for resolution it is used to mark a position in the code, where lexically a set of variables should be visible</p>",
        "id": 221539950,
        "sender_full_name": "kev",
        "timestamp": 1609775484
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/.3C.7C.3E.20marker/near/221539506\">said</a>:</p>\n<blockquote>\n<p>btw, a long-standing task is to replace <code>&lt;|&gt;</code> with <code>$0</code>, to match snippets</p>\n</blockquote>\n<p>I think this can be done by changing CURSOR_MARKER to $0 and then replace the usage of the old cursor marker in the code?</p>",
        "id": 221540365,
        "sender_full_name": "kev",
        "timestamp": 1609775647
    },
    {
        "content": "<p>yup</p>",
        "id": 221541338,
        "sender_full_name": "matklad",
        "timestamp": 1609776022
    },
    {
        "content": "<p>Oh alright, I thought that it would cause problems with tests that involve macros</p>",
        "id": 221543000,
        "sender_full_name": "kev",
        "timestamp": 1609776735
    },
    {
        "content": "<p>Is this also something that could be fixed?: <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir_def/src/item_scope.rs#L231\">https://github.com/rust-analyzer/rust-analyzer/blob/master/crates/hir_def/src/item_scope.rs#L231</a></p>",
        "id": 221543033,
        "sender_full_name": "kev",
        "timestamp": 1609776746
    },
    {
        "content": "<p>To me it seems that the if let may not be needed and you can do <code>Some(fld)</code> ?</p>",
        "id": 221543109,
        "sender_full_name": "kev",
        "timestamp": 1609776783
    }
]