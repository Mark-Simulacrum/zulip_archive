[
    {
        "content": "<p>How would I go about comparing two <code>Vec&lt;Option&lt;TypeInfo&gt;&gt;</code> to see if both refer to the same types? I'm working on <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9337\">https://github.com/rust-analyzer/rust-analyzer/issues/9337</a> but I can't seem to figure out how I can effectively see whether they are the same or not. My WIP code can be found here: <a href=\"https://github.com/Vannevelj/rust-analyzer/commit/6c413de74f7c094a84405b1f0bcad5588e0b313b\">https://github.com/Vannevelj/rust-analyzer/commit/6c413de74f7c094a84405b1f0bcad5588e0b313b</a></p>",
        "id": 267261052,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641600545
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> Do you have an idea on how I can best approach this?</p>",
        "id": 267429766,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641816037
    },
    {
        "content": "<p>Should'nt you gbe able to just do simple equality?</p>",
        "id": 267429842,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641816090
    },
    {
        "content": "<p>That's what I thought as well but I see this: <a href=\"/user_uploads/4715/1TVyMoLQ1lH9MmQa858PICjM/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/1TVyMoLQ1lH9MmQa858PICjM/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/1TVyMoLQ1lH9MmQa858PICjM/image.png\"></a></div><p>Am I missing something?</p>",
        "id": 267430471,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641816503
    },
    {
        "content": "<p>Ah you probably want to check with just the <code>original</code> field on <code>TypeInfo</code></p>",
        "id": 267430784,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641816744
    },
    {
        "content": "<p>also that <code>if</code> can be rewritten as an <code>if let (Some(other_arm_type), Some(current_arm_type)) = (other_arm_type, current_arm_type) {</code></p>",
        "id": 267430869,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641816817
    },
    {
        "content": "<p>Or maybe even <code>if let Some((other_arm_type, current_arm_type)) = other_arm_type.zip(current_arm_type) {</code></p>",
        "id": 267431387,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1641817215
    },
    {
        "content": "<p>Ah, thanks both that seems to compile <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> My test itself is failing though so the types must not be what I expect them to be. What is the easiest way to turn a <code>TypeInfo</code> into something concrete when debugging?</p>",
        "id": 267431913,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641817574
    },
    {
        "content": "<p>debug printing should show you differences between them already I think</p>",
        "id": 267432167,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641817753
    },
    {
        "content": "<p>This is the output I see: <a href=\"/user_uploads/4715/x82B9KIjX_rMjrNAli9sIipR/image.png\">image.png</a> <br>\nDid you have something else in mind? I'm not sure what to make of this print</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/x82B9KIjX_rMjrNAli9sIipR/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/x82B9KIjX_rMjrNAli9sIipR/image.png\"></a></div>",
        "id": 267432834,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641818250
    },
    {
        "content": "<p><code>{error}</code>?</p>",
        "id": 267432986,
        "sender_full_name": "Laurențiu",
        "timestamp": 1641818337
    },
    {
        "content": "<p>ye the <code>ty: {error}</code> part is the one of interest mainly</p>",
        "id": 267433124,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818412
    },
    {
        "content": "<p>whats the test fixture?</p>",
        "id": 267433140,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818420
    },
    {
        "content": "<p>Maybe that's why it doesn't work. Are <code>{error}</code> and <code>{error}</code> the same type?</p>",
        "id": 267433175,
        "sender_full_name": "Laurențiu",
        "timestamp": 1641818440
    },
    {
        "content": "<p>ah I see it</p>",
        "id": 267433177,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818441
    },
    {
        "content": "<p>tests dont know about std lib by default, so <code>Result</code> is unresolved in your test</p>",
        "id": 267433201,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818459
    },
    {
        "content": "<p><code>to_string()</code> doesnt work either</p>",
        "id": 267433214,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818469
    },
    {
        "content": "<p>you can put a <code>//- minicore: result</code> as the first line of your test fixture to get <code>Result</code> to work, the <code>to_string</code> you should replace with something else thats not relying on core/std</p>",
        "id": 267433273,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1641818513
    },
    {
        "content": "<p>Oh my. I've been pulling my hair out over this for days</p>",
        "id": 267433399,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641818584
    },
    {
        "content": "<p>Adding the minicore makes all tests pass <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> I'll look for an alternative to the <code>to_string()</code> as well</p>",
        "id": 267433427,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641818604
    },
    {
        "content": "<p>Thanks for all the help here! I'll clean up my changes later and hopefully get a PR up</p>",
        "id": 267433462,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641818634
    },
    {
        "content": "<p>PR is up: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/11248\">https://github.com/rust-analyzer/rust-analyzer/pull/11248</a></p>",
        "id": 267483512,
        "sender_full_name": "Jeroen Vannevel",
        "timestamp": 1641841081
    }
]