[
    {
        "content": "<p>@matklad do you think it's reasonable if <code>WorldState::options</code> holds a <code>Vec</code> of <code>lsp_types::SemanticTokenTypes</code> and modifiers? In other words do we care if it knows about lsp types directly or should I store them as strings instead?</p>",
        "id": 188248112,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581715240
    },
    {
        "content": "<p>at some point we need the server to compare its list of supported token types/modifiers with the clients and use that as the list to generate tokens and modifiers from</p>",
        "id": 188248151,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581715277
    },
    {
        "content": "<p>I would probably put that info in <code>conv.rs</code></p>",
        "id": 188248266,
        "sender_full_name": "matklad",
        "timestamp": 1581715341
    },
    {
        "content": "<p>I think we need</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">token_legend</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">LspLegend</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>and just the usual <code>ConvWith</code> impl? Ie, we don't need to hold any state apparently?</p>",
        "id": 188248305,
        "sender_full_name": "matklad",
        "timestamp": 1581715388
    },
    {
        "content": "<p>Well... I think you need to loop through the server tokens and compare them with what the client supports and use that as the legend to send back from the server capabilities: <a href=\"https://github.com/microsoft/vscode-languageserver-node/blob/master/testbed/server/src/server.ts#L111\" target=\"_blank\" title=\"https://github.com/microsoft/vscode-languageserver-node/blob/master/testbed/server/src/server.ts#L111\">https://github.com/microsoft/vscode-languageserver-node/blob/master/testbed/server/src/server.ts#L111</a></p>",
        "id": 188248532,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581715552
    },
    {
        "content": "<p>Hm, I would think this is advisory? Like, the server <em>could</em> adapt its tokens to the client ones, but it doesn't have to?</p>",
        "id": 188248700,
        "sender_full_name": "matklad",
        "timestamp": 1581715672
    },
    {
        "content": "<p>That's not how I'm reading the code but I do see in the comments that describe the encoding that \"at index <code>5*i+3</code> - <code>tokenType</code>: will be looked up in <code>SemanticTokensLegend.tokenTypes</code>\" so maybe you are right. It would certainly make it easier and I wouldn't have to deal with client caps</p>",
        "id": 188249133,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581716005
    },
    {
        "content": "<p>I'll go with that</p>",
        "id": 188249168,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1581716034
    }
]