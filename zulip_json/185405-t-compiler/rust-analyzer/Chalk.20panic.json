[
    {
        "content": "<p>I'm seeing panics in chalk due to <code>unimplemeted!()</code> macros being hit. This is causing RA to crash. Is it expected that chalk is publishing with unimplemented calls? I would imagine it should continue rather than completely panic, that <code>unimplemented</code> would be something left in for debugging, but wanted to check here before filing a bug in chalk. Cc <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span></p>",
        "id": 212350162,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601928598
    },
    {
        "content": "<p>Can you post a backtrace?</p>",
        "id": 212350394,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601928705
    },
    {
        "content": "<p>The panic is happening somewhere around here <a href=\"https://github.com/rust-lang/chalk/blob/8f2805620b6928ad76aab3f11b322ad0771c7cbe/chalk-solve/src/clauses.rs#L80\">https://github.com/rust-lang/chalk/blob/8f2805620b6928ad76aab3f11b322ad0771c7cbe/chalk-solve/src/clauses.rs#L80</a> but it's hard to tell exactly because it's inlined inside of <a href=\"https://github.com/rust-lang/chalk/blob/8f2805620b6928ad76aab3f11b322ad0771c7cbe/chalk-solve/src/clauses.rs#L117\">https://github.com/rust-lang/chalk/blob/8f2805620b6928ad76aab3f11b322ad0771c7cbe/chalk-solve/src/clauses.rs#L117</a> in my backtrace</p>",
        "id": 212350669,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601928846
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Panic context:\n\n&gt; request: textDocument/hover HoverParams {\n\ntext_document_position_params: TextDocumentPositionParams {\n\ntext_document: TextDocumentIdentifier {\n\nuri: &quot;&lt;stripped&gt;&quot;,\n\n},\n\nposition: Position {\n\nline: 49,\n\ncharacter: 24,\n\n},\n\n},\n\nwork_done_progress_params: WorkDoneProgressParams {\n\nwork_done_token: None,\n\n},\n\n}\n\n\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;not implemented&#39;, /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/macros.rs:13:23\n\nstack backtrace:\n\n0: backtrace::backtrace::libunwind::trace\n\nat /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\n\n1: backtrace::backtrace::trace_unsynchronized\n\nat /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\n\n2: std::sys_common::backtrace::_print_fmt\n\nat src/libstd/sys_common/backtrace.rs:78\n\n3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n\nat src/libstd/sys_common/backtrace.rs:59\n\n4: core::fmt::write\n\nat src/libcore/fmt/mod.rs:1076\n\n5: std::io::Write::write_fmt\n\nat src/libstd/io/mod.rs:1537\n\n6: std::sys_common::backtrace::_print\n\nat src/libstd/sys_common/backtrace.rs:62\n\n7: std::sys_common::backtrace::print\n\nat src/libstd/sys_common/backtrace.rs:49\n\n8: std::panicking::default_hook::{{closure}}\n\nat src/libstd/panicking.rs:198\n\n9: std::panicking::default_hook\n\nat src/libstd/panicking.rs:217\n\n10: std::thread::local::LocalKey&lt;T&gt;::with\n\n11: stdx::panic_context::PanicContext::init::{{closure}}\n\n12: std::panicking::rust_panic_with_hook\n\nat src/libstd/panicking.rs:530\n\n13: std::panicking::begin_panic\n\n14: chalk_solve::clauses::push_auto_trait_impls\n\n15: chalk_solve::clauses::builder::ClauseBuilder&lt;I&gt;::push_binders\n\n16: chalk_solve::clauses::program_clauses_that_could_match\n\n17: chalk_solve::clauses::program_clauses_for_goal\n\n18: &lt;chalk_recursive::recursive::Solver&lt;I&gt; as chalk_recursive::solve::SolveDatabase&lt;I&gt;&gt;::solve_goal\n\n19: &lt;chalk_recursive::recursive::RecursiveSolver&lt;I&gt; as chalk_solve::solve::Solver&lt;I&gt;&gt;::solve_limited\n\n20: hir_ty::traits::trait_solve_query\n\n21: salsa::runtime::Runtime::execute_query_implementation\n\n22: salsa::derived::slot::Slot&lt;Q,MP&gt;::read_upgrade\n\n23: salsa::derived::slot::Slot&lt;Q,MP&gt;::read\n\n24: &lt;salsa::derived::DerivedStorage&lt;Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;Q&gt;&gt;::try_fetch\n\n25: salsa::QueryTable&lt;Q&gt;::get\n\n26: &lt;DB as hir_ty::db::HirDatabase&gt;::trait_solve::__shim\n\n27: &lt;DB as hir_ty::db::HirDatabase&gt;::trait_solve\n\n28: hir_ty::infer::InferenceContext::resolve_ty_as_possible\n\n29: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n\n30: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::check_call_arguments\n\n31: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n\n32: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr\n\n33: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_method_call\n\n34: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n\n35: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr\n\n36: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n\n37: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n\n38: hir_ty::infer::infer_query\n\n39: salsa::runtime::Runtime::execute_query_implementation\n\n40: salsa::derived::slot::Slot&lt;Q,MP&gt;::read_upgrade\n\n41: salsa::derived::slot::Slot&lt;Q,MP&gt;::read\n\n42: &lt;salsa::derived::DerivedStorage&lt;Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;Q&gt;&gt;::try_fetch\n\n43: &lt;DB as hir_ty::db::HirDatabase&gt;::infer_query::__shim\n\n44: hir_ty::db::infer_wait\n\n45: hir::source_analyzer::SourceAnalyzer::new_for_body\n\n46: hir::semantics::SemanticsImpl::analyze2\n\n47: hir::semantics::SemanticsImpl::descend_into_macros\n\n48: ide::hover::hover\n\n49: ide::Analysis::hover\n\n50: rust_analyzer::handlers::handle_hover\n\n51: &lt;F as threadpool::FnBox&gt;::call_box\n\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n</code></pre></div>",
        "id": 212351078,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601929071
    },
    {
        "content": "<p>The stripped url was something I did because I'm not sure if I'm allowed to share work machine paths</p>",
        "id": 212351170,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601929114
    },
    {
        "content": "<p>full backtrace:  </p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;not implemented&#39;, /Users/aaronwood/.cargo/registry/src/github.com-1ecc6299db9ec823/chalk-solve-0.30.0/src/clauses.rs:60:40\nstack backtrace:\n   0: std::panicking::begin_panic\n   1: chalk_solve::clauses::push_auto_trait_impls\n   2: chalk_solve::clauses::builder::ClauseBuilder&lt;I&gt;::push_binders\n   3: chalk_solve::clauses::program_clauses_for_goal\n   4: chalk_recursive::recursive::Solver&lt;I&gt;::solve_new_subgoal\n   5: &lt;chalk_recursive::recursive::Solver&lt;I&gt; as chalk_recursive::solve::SolveDatabase&lt;I&gt;&gt;::solve_goal\n   6: chalk_recursive::fulfill::Fulfill&lt;I,Solver,Infer&gt;::prove\n   7: chalk_recursive::fulfill::Fulfill&lt;I,Solver,Infer&gt;::solve\n   8: chalk_recursive::recursive::Solver&lt;I&gt;::solve_new_subgoal\n   9: &lt;chalk_recursive::recursive::Solver&lt;I&gt; as chalk_recursive::solve::SolveDatabase&lt;I&gt;&gt;::solve_goal\n  10: chalk_recursive::fulfill::Fulfill&lt;I,Solver,Infer&gt;::prove\n  11: chalk_recursive::fulfill::Fulfill&lt;I,Solver,Infer&gt;::solve\n  12: chalk_recursive::recursive::Solver&lt;I&gt;::solve_new_subgoal\n  13: &lt;chalk_recursive::recursive::Solver&lt;I&gt; as chalk_recursive::solve::SolveDatabase&lt;I&gt;&gt;::solve_goal\n  14: &lt;chalk_recursive::recursive::RecursiveSolver&lt;I&gt; as chalk_solve::solve::Solver&lt;I&gt;&gt;::solve_limited\n  15: hir_ty::traits::trait_solve_query\n  16: salsa::runtime::Runtime::execute_query_implementation\n  17: salsa::derived::slot::Slot&lt;Q,MP&gt;::read_upgrade\n  18: salsa::derived::slot::Slot&lt;Q,MP&gt;::read\n  19: &lt;salsa::derived::DerivedStorage&lt;Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;Q&gt;&gt;::try_fetch\n  20: &lt;DB as hir_ty::db::HirDatabase&gt;::trait_solve::__shim\n  21: &lt;DB as hir_ty::db::HirDatabase&gt;::trait_solve\n  22: hir_ty::infer::InferenceContext::resolve_ty_as_possible\n  23: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  24: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::check_call_arguments\n  25: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  26: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  27: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::check_call_arguments\n  28: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  29: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  30: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  31: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr\n  32: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  33: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  34: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  35: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  36: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  37: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  38: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_inner\n  39: hir_ty::infer::expr::&lt;impl hir_ty::infer::InferenceContext&gt;::infer_expr_coerce\n  40: hir_ty::infer::infer_query\n  41: salsa::runtime::Runtime::execute_query_implementation\n  42: salsa::derived::slot::Slot&lt;Q,MP&gt;::read_upgrade\n  43: salsa::derived::slot::Slot&lt;Q,MP&gt;::read\n  44: &lt;salsa::derived::DerivedStorage&lt;Q,MP&gt; as salsa::plumbing::QueryStorageOps&lt;Q&gt;&gt;::try_fetch\n  45: &lt;DB as hir_ty::db::HirDatabase&gt;::infer_query::__shim\n  46: hir_ty::db::infer_wait\n  47: hir::source_analyzer::SourceAnalyzer::new_for_body\n  48: hir::semantics::SemanticsImpl::analyze2\n  49: hir::semantics::SemanticsImpl::type_of_pat\n  50: ide::inlay_hints::inlay_hints\n  51: std::panicking::try\n  52: ide::Analysis::inlay_hints\n  53: rust_analyzer::handlers::handle_inlay_hints\n  54: &lt;F as threadpool::FnBox&gt;::call_box\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nPanic context:\n&gt; request: rust-analyzer/inlayHints InlayHintsParams {\n    text_document: TextDocumentIdentifier {\n        uri: &quot;file:///[omitted by aaronwood@]&quot;,\n    },\n}\n</code></pre></div>",
        "id": 212351653,
        "sender_full_name": "woody77",
        "timestamp": 1601929367
    },
    {
        "content": "<p>eek yeah we probably should have not done that</p>",
        "id": 212352366,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601929688
    },
    {
        "content": "<p>Should be a super simple fix</p>",
        "id": 212352896,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601929974
    },
    {
        "content": "<p>Forgot to follow up. I should file a bug against chalk, right?</p>",
        "id": 212361150,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601934631
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/chalk/issues/621\">https://github.com/rust-lang/chalk/issues/621</a></p>",
        "id": 212361854,
        "sender_full_name": "Paul Faria",
        "timestamp": 1601935145
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/622\">chalk#622</a></p>",
        "id": 212363925,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601936641
    }
]