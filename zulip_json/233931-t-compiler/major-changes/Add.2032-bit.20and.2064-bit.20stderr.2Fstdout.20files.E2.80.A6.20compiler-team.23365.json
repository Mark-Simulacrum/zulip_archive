[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">Add 32-bit and 64-bit stderr/stdout files for ui tests #365</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 210656886,
        "sender_full_name": "triagebot",
        "timestamp": 1600592339
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256313\">@Hameer Abbasi</span> this is the discussion zulip for the MCP. The issues are not meant for discussion of the content, only of procedure</p>",
        "id": 210657830,
        "sender_full_name": "oli",
        "timestamp": 1600594002
    },
    {
        "content": "<p>Copying over the <a href=\"#narrow/stream/146212-t-compiler.2Fconst-eval/topic/Looking.20for.20help.20on.20.2353325/near/210657121\">concern on another thread</a> for visibility: It'd be hard to generate <code>*.32bit.stderr</code> files on macOS 10.15+ due to <a href=\"https://support.apple.com/en-us/HT208436\">32-bit binaries being forbidden</a>.</p>",
        "id": 210657954,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1600594205
    },
    {
        "content": "<p>so we can't use this feature for running tests. I didn't even think about running tests at all, we should just forbid that if used together with that feature, in order to make cross compilation as feasible as possible</p>",
        "id": 210658020,
        "sender_full_name": "oli",
        "timestamp": 1600594331
    },
    {
        "content": "<p>building for another target should be unproblematic</p>",
        "id": 210658030,
        "sender_full_name": "oli",
        "timestamp": 1600594357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Add.2032-bit.20and.2064-bit.20stderr.2Fstdout.20files.E2.80.A6.20compiler-team.23365/near/210658030\">said</a>:</p>\n<blockquote>\n<p>building for another target should be unproblematic</p>\n</blockquote>\n<p>usually building for another target requires being able to link for that target, which is tricky</p>",
        "id": 212218939,
        "sender_full_name": "RalfJ",
        "timestamp": 1601810867
    },
    {
        "content": "<p>Miri gets away with it by doing check-only builds of the standard library and the crate</p>",
        "id": 212218961,
        "sender_full_name": "RalfJ",
        "timestamp": 1601810884
    },
    {
        "content": "<p>I don't know how to build for other targets without <code>xargo-check</code></p>",
        "id": 212218990,
        "sender_full_name": "RalfJ",
        "timestamp": 1601810896
    },
    {
        "content": "<p>This is in the context of UI tests. Do separate <code>*.rs</code> files need linking? If so, this is a problem. If only separate crates need linking; then we're good, as UI tests are all in one crate.</p>",
        "id": 212660469,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1602146016
    },
    {
        "content": "<p>I think the problem is that we can't even get a <code>libstd</code> compiled</p>",
        "id": 212663689,
        "sender_full_name": "oli",
        "timestamp": 1602148083
    },
    {
        "content": "<p>(or well, linked)</p>",
        "id": 212663741,
        "sender_full_name": "oli",
        "timestamp": 1602148102
    },
    {
        "content": "<p>indeed, libstd needs linking</p>",
        "id": 212912600,
        "sender_full_name": "RalfJ",
        "timestamp": 1602330786
    },
    {
        "content": "<p>So... for this specific issue, all we need to be able to do is to link for the 32-bit or 64-bit target of the same platform. Alternatively, can we find a 32 bit platform that every host is able to link for?</p>",
        "id": 213918697,
        "sender_full_name": "oli",
        "timestamp": 1603200646
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/365#issuecomment-769380293\">#365</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 224390560,
        "sender_full_name": "triagebot",
        "timestamp": 1611866899
    },
    {
        "content": "<p>I have an implementation of this over at <a href=\"https://github.com/rust-lang/rust/issues/81817\">#81817</a>.</p>",
        "id": 225390466,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1612593671
    }
]