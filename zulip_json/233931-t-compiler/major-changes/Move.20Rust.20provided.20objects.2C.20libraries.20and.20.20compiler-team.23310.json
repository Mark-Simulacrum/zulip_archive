[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/310\">#310</a>. It will be<br>\n                announced at the next meeting to try and draw attention to it,<br>\n                but usually MCPs are not discussed during triage meetings. If<br>\n                you think this would benefit from discussion amongst the<br>\n                team, consider proposing a design meeting.</p>",
        "id": 202677492,
        "sender_full_name": "triagebot",
        "timestamp": 1593690827
    },
    {
        "content": "<p>I'd be willing to second this proposal but I don't really know much about it. I'm curious to hear from <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> as I saw that the WASI target was mentioned; I might expect <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> to have an opinion as well.</p>",
        "id": 204088262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594908584
    },
    {
        "content": "<p>It sounds like a reasonable proposal to me, it would indeed be nice if using our precompiled artifacts worked very easily with both external toolchains as well as with bundled support in rustc itself. The main thing I think needs to keep working is rustc by default works on platforms missing the libraries (e.g. missing mingw compiler/objects), but I suspect everyone feels the same way about that :)</p>",
        "id": 204088563,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594908721
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/310#issuecomment-659445025\">#310</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 204089842,
        "sender_full_name": "triagebot",
        "timestamp": 1594909288
    },
    {
        "content": "<p>OK. Well let's kick off FCP and see if anyone has any concerns in the meantime..</p>",
        "id": 204089878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20Rust.20provided.20objects.2C.20libraries.20and.20.20compiler-team.23310/near/204088563\">said</a>:</p>\n<blockquote>\n<p>The main thing I think needs to keep working is rustc by default works on platforms missing the libraries (e.g. missing mingw compiler/objects), but I suspect everyone feels the same way about that :)</p>\n</blockquote>\n<p>I'm happy to answer any questions.<br>\nWhether binaries/libs/objects from <code>self-contained</code> directory are taken into account is controlled by <a href=\"https://github.com/rust-lang/rust/blob/125c58caebc67c32ec45ac6c0581b596fd532082/src/librustc_codegen_ssa/back/link.rs#L1286\">crt_objects_fallback</a>. So nothing really changes for end users yet, rustlib looks a bit cleaner with less irrelevant things laying next to Rust stuff.</p>\n<p>This might require another MCP but the goal is to have heuristic for every affected target that can be overridden by currently unstable <code>link-self-contained=yes/no</code> option.<br>\nI'm going to prepare heuristic for MinGW, <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> was experimenting with musl. Would be great if somebody experienced with WASM could weight in.</p>",
        "id": 204098938,
        "sender_full_name": "mati865",
        "timestamp": 1594913021
    },
    {
        "content": "<p>Please ping me when this gets implemented, it is likely that xargo will need adjustment to keep working for those targets.</p>",
        "id": 206232861,
        "sender_full_name": "RalfJ",
        "timestamp": 1596787751
    }
]