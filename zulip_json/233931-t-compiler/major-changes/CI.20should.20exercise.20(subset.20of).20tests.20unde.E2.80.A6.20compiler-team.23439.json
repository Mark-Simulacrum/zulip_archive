[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">CI should exercise (subset of) tests under --stage 1 #439</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 243040636,
        "sender_full_name": "triagebot",
        "timestamp": 1623945538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I like this idea (as discussed in the planning meeting today) :) what do you think about running just UI tests for now and seeing how much CI time that adds? we could maybe only do it for a full bors test since I don't expect it to come up much</p>",
        "id": 250942997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075834
    },
    {
        "content": "<p>(\"UI tests\" -&gt; <code>x.py test --stage 1 src/test/{ui,rustdoc-ui}</code>)</p>",
        "id": 250943033,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075848
    },
    {
        "content": "<p>we should probably loop in <span class=\"user-group-mention\" data-user-group-id=\"2943\">@T-infra</span> too - I don't know how much \"slack\" we have for CI time</p>",
        "id": 250943447,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075987
    },
    {
        "content": "<p>Linux builders generally have a good bit of slack</p>",
        "id": 250943499,
        "sender_full_name": "simulacrum",
        "timestamp": 1630076008
    },
    {
        "content": "<p>ah ok, so run this on linux-only instead of bors-only? that seems fine too :)</p>",
        "id": 250943630,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630076046
    },
    {
        "content": "<p>and yeah let's do it just for a full bors test</p>",
        "id": 250943643,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1630076053
    },
    {
        "content": "<p>no, no, bors-only</p>",
        "id": 250943648,
        "sender_full_name": "simulacrum",
        "timestamp": 1630076055
    },
    {
        "content": "<p>e.g. x86_64-gnu builder should be good</p>",
        "id": 250943670,
        "sender_full_name": "simulacrum",
        "timestamp": 1630076066
    },
    {
        "content": "<p>linux bors takes 40/50 minutes, macos bors takes 2hr45min</p>",
        "id": 250943681,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1630076072
    },
    {
        "content": "<p>I also am in favor of this idea in general. I usually <em>only</em> run tests locally with stage1 and rarely encounter issues with the ui, debuginfo, codegen, codegen-units, incremental and mir-opt test suites.</p>",
        "id": 250945279,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630076674
    },
    {
        "content": "<p>I think running on <code>ui</code> alone will be a good step</p>",
        "id": 250978387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090578
    },
    {
        "content": "<p>but note that my original problem, as <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> reminded me, was that I was hitting a <code>rustdoc-ui</code> test failure</p>",
        "id": 250978704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090694
    },
    {
        "content": "<p>so, I guess in my ideal world, we’d push on identifying the right superset</p>",
        "id": 250978764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090715
    },
    {
        "content": "<p>of ui</p>",
        "id": 250978776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090719
    },
    {
        "content": "<p>the <code>ui</code> / <code>ui-fulldeps</code> distinction used to be in support of the stage1/stage2 distinction, if I remember correctly</p>",
        "id": 250978829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/CI.20should.20exercise.20.28subset.20of.29.20tests.20unde.E2.80.A6.20compiler-team.23439/near/250978829\">said</a>:</p>\n<blockquote>\n<p>the <code>ui</code> / <code>ui-fulldeps</code> distinction used to be in support of the stage1/stage2 distinction, if I remember correclty</p>\n</blockquote>\n<p>yeah, I think a lot of the ui-fulldeps tests could be moved to ui</p>",
        "id": 250978867,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630090759
    },
    {
        "content": "<p>as in, stuff in <code>-fulldeps</code> was only guaranteed to work against stage2</p>",
        "id": 250978881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090764
    },
    {
        "content": "<p>I don’t really understand how things got moved around</p>",
        "id": 250978897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630090777
    },
    {
        "content": "<p>I don't know if stuff was moved, I think it's just that proc-macros are now supported with stage 1</p>",
        "id": 250979157,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630090874
    },
    {
        "content": "<p>No, stuff was definitely moved, but I mean back with PR’s like PR <a href=\"https://github.com/rust-lang/rust/issues/32009\">#32009</a></p>",
        "id": 250979681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091082
    },
    {
        "content": "<p>Okay, to be fair: The test family I was looking at here was things like <a href=\"http://dropck-tarena-cycle-checked.rs\">dropck-tarena-cycle-checked.rs</a></p>",
        "id": 250979934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091167
    },
    {
        "content": "<p>which does use <code>extern crate arena;</code></p>",
        "id": 250979971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091183
    },
    {
        "content": "<p>I think my confusion here might stem from my use of <code>-fulldeps</code> as a proxy for “requires stage2”, when that’s really not precisely what it means.</p>",
        "id": 250980098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091239
    },
    {
        "content": "<p>I was pretty sure that's what it meant <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> what does it mean?</p>",
        "id": 250980126,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630091254
    },
    {
        "content": "<p>Well, consider the case I just gave: The issue there isn’t whether that test requires a stage2 compiler</p>",
        "id": 250980169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091279
    },
    {
        "content": "<p>it is that the test uses <code>extern crate arena;</code>. It has a dependency on something that we do not distribute with <code>rust-std</code> package.</p>",
        "id": 250980271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630091309
    },
    {
        "content": "<blockquote>\n<p>This leads to scenarios where the common case for a contributor can break, and there is no record of it in the CI or in the offending PR.</p>\n</blockquote>\n<p>The same justification would also apply to some stage 0 tests. Especially libs. That would have caught <a href=\"https://github.com/rust-lang/rust/issues/89564\">#89564</a></p>",
        "id": 257543246,
        "sender_full_name": "The 8472",
        "timestamp": 1634221267
    },
    {
        "content": "<p>I also wonder if we want to test with <code>debug_assertions</code>, if stage 1 is the right place for that (this has been mentioned elsewhere)</p>",
        "id": 257549378,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634223452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> so are you thinking we should be running tests against <code>—stage 0</code> too? That would be interesting, even if <em>only</em> as a way to sanity-check the test suite itself. (Which is not the same as the benefit you described, which was more about catching a missing beta backport, but seems like a good thing to me nonetheless.)</p>",
        "id": 257707752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634308538
    },
    {
        "content": "<p>although testing against <code>—stage 0</code> would mean we’d need to annotate tests of beta-regressions with <code>// ignore-stage0</code> until beta backports happen.</p>",
        "id": 257707942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634308618
    },
    {
        "content": "<p>I mostly mean library tests. And maybe some tools tests... stuff that isn't testing the compiler itself and which contributors actually run with <code>--stage 0</code>.</p>",
        "id": 257709762,
        "sender_full_name": "The 8472",
        "timestamp": 1634309347
    },
    {
        "content": "<p>The UI tests strongly discourage stage 0 testing after all:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: `--stage 0` runs compiletest on the beta compiler, not your local changes, and will almost always cause tests to fail\nhelp: to test the compiler, use `--stage 1` instead\nhelp: to test the standard library, use `--stage 0 library/std` instead\nnote: if you&#39;re sure you want to do this, please open an issue as to why. In the meantime, you can override this with `COMPILETEST_FORCE_STAGE0=1`.\n</code></pre></div>",
        "id": 257709995,
        "sender_full_name": "The 8472",
        "timestamp": 1634309421
    },
    {
        "content": "<p>Yeah I don't see why we would run tests against beta on nightly, that seems wrong</p>",
        "id": 257730985,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634317395
    },
    {
        "content": "<p>Okay, I updated the text of the proposal to specifically say that we should start with deployment with just the ui and rustdoc-ui test suites driving the stage1-specific CI tests, and I included the detail that it would be Linux bors-only (if I understood the conversation correctly so far).</p>",
        "id": 265920011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640268803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> suggested above that we also run the libstd tests with --stage 0 - <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> did you miss that or is it intentional to start with just UI tests for now?</p>",
        "id": 266017387,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640370530
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/439#issuecomment-1000913567\">#439</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 266017511,
        "sender_full_name": "triagebot",
        "timestamp": 1640370661
    },
    {
        "content": "<p>well, I think this is a good idea either way  - left a second</p>",
        "id": 266017513,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640370662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/CI.20should.20exercise.20.28subset.20of.29.20tests.20unde.E2.80.A6.20compiler-team.23439/near/266017387\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> suggested above that we also run the libstd tests with --stage 0 - <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> did you miss that or is it intentional to start with just UI tests for now?</p>\n</blockquote>\n<p>My intent is to focus on the stage1 case on the ui* suites for now. We can adjust later, or have a separate MCP, based on how this experience goes.</p>",
        "id": 266034670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640395247
    },
    {
        "content": "<p>This proposal has been accepted: <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">#439</a>.</p>",
        "id": 268706318,
        "sender_full_name": "triagebot",
        "timestamp": 1642691539
    }
]