[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/402\">refactor the unsafe checking to work on the THIR #402</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 223572546,
        "sender_full_name": "triagebot",
        "timestamp": 1611264302
    },
    {
        "content": "<p>Note: assuming we decide to do this, I'd want to work with someone on the implementation.</p>",
        "id": 223572586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611264320
    },
    {
        "content": "<p>That seems… reasonable enough.</p>",
        "id": 223582036,
        "sender_full_name": "nagisa",
        "timestamp": 1611269257
    },
    {
        "content": "<p>(the proposal, I mean)</p>",
        "id": 223582046,
        "sender_full_name": "nagisa",
        "timestamp": 1611269265
    },
    {
        "content": "<p>Though it seems to me that we aren't necessarily constrained to checking unsafe in one place</p>",
        "id": 223582137,
        "sender_full_name": "nagisa",
        "timestamp": 1611269310
    },
    {
        "content": "<p>if there are still things that make sense to check in MIR, I don't see why we wouldn't keep it that way.</p>",
        "id": 223582160,
        "sender_full_name": "nagisa",
        "timestamp": 1611269327
    },
    {
        "content": "<p>the linked issue (<a href=\"https://github.com/rust-lang/rust/issues/80059\">https://github.com/rust-lang/rust/issues/80059</a>) is not about dead code afaict, so the description confused me a bit here</p>",
        "id": 223614805,
        "sender_full_name": "oli",
        "timestamp": 1611304601
    },
    {
        "content": "<p>I do have to admit that there are other reasons I like doing unsafety checking on the THIR beyond that the code becomes simpler and we get a tree like checking: unsafety checking accesses to (extern) static (mut) items finally becomes non-hacky again</p>",
        "id": 223614911,
        "sender_full_name": "oli",
        "timestamp": 1611304685
    },
    {
        "content": "<p>Regarding packed fields, note that \"borrowing the fields of packed structs\" is not (just) unsafe, it is UB. It should not be allowed anywhere. The only reason we permit it is past mistakes and backwards compatibility. Also see <a href=\"https://github.com/rust-lang/rust/issues/27060\">https://github.com/rust-lang/rust/issues/27060</a>.</p>",
        "id": 223615224,
        "sender_full_name": "RalfJ",
        "timestamp": 1611304983
    },
    {
        "content": "<p>Once <a href=\"https://github.com/rust-lang/rust/pull/72270\">https://github.com/rust-lang/rust/pull/72270</a> is made an err-by-default future-incompat lint, unsafety checking will not have to be concerned with borrows of packed fields any more.</p>",
        "id": 223615252,
        "sender_full_name": "RalfJ",
        "timestamp": 1611305021
    },
    {
        "content": "<blockquote>\n<p>unsafety checking accesses to (extern) static (mut) items finally becomes non-hacky again</p>\n</blockquote>\n<p>arguably that's a definiciency of the way we represent statics in MIR (and IIRC we had some ideas for improvements?)</p>",
        "id": 223615337,
        "sender_full_name": "RalfJ",
        "timestamp": 1611305081
    },
    {
        "content": "<p>That said, MIR is just not a very safe language -- e.g. indexing and division can raise UB, so a \"proper\" safety check would have to ensure that the appropriate bounds and null-checks have been done before the operation</p>",
        "id": 223615378,
        "sender_full_name": "RalfJ",
        "timestamp": 1611305148
    },
    {
        "content": "<blockquote>\n<p>I would be happy to mentor, but I am looking for someone to do the implementation work!</p>\n</blockquote>\n<p>I had a little bit of free time today and I was kind of curious, so I read some docs and tinkered around with the code. I could maybe help with the implementation if needed?</p>",
        "id": 223706445,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1611352578
    },
    {
        "content": "<p>So, where do I have to put <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/refactor.20the.20unsafe.20checking.20to.20work.20on.20t.E2.80.A6.20compiler-team.23402/near/223615224\">comments like this</a> to make sure they do not get lost?</p>",
        "id": 223810945,
        "sender_full_name": "RalfJ",
        "timestamp": 1611490116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> that would be most welcome!</p>",
        "id": 224077555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611683797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> sounds like you would be willing to second :)</p>",
        "id": 224077574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611683804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> I will update the mcp issue</p>",
        "id": 224077611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611683816
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/402#issuecomment-767719858\">#402</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 224077667,
        "sender_full_name": "triagebot",
        "timestamp": 1611683840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/refactor.20the.20unsafe.20checking.20to.20work.20on.20t.E2.80.A6.20compiler-team.23402/near/224077611\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> I will update the mcp issue</p>\n</blockquote>\n<p>thanks!</p>\n<p>to be clear, what I meant by this comment is that unsafety checking (long-term) need not be concerned with borrows-to-packed-fields. so \"we want to enforce some condition on borrows\" is not a good argument, since it's not something unsafety checking should even be doing.</p>",
        "id": 224182799,
        "sender_full_name": "RalfJ",
        "timestamp": 1611755411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> are you still interested in working on this? We should find a time to sync up a bit and share context</p>",
        "id": 224343490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611848335
    },
    {
        "content": "<p>That would be awesome :)</p>",
        "id": 224343566,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1611848356
    },
    {
        "content": "<p>What probably works is to try and do a 1h sync meeting over zoom -- presuming voice is ok for you -- that we can record</p>",
        "id": 224346079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611849277
    },
    {
        "content": "<p>That would work for me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 224346276,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1611849362
    },
    {
        "content": "<p>I usually have more time on Wednesdays and Thursdays, if it helps</p>",
        "id": 224346600,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1611849493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Friendly ping, just in case you forgot</p>",
        "id": 225546153,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1612792184
    },
    {
        "content": "<p>This is not urgent by any means however, so if you don't have time, just tell me so, I can wait :D</p>",
        "id": 225546217,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1612792206
    },
    {
        "content": "<p>Hi :)</p>",
        "id": 225546226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612792212
    },
    {
        "content": "<p>Thanks for the reminder.</p>",
        "id": 225546233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612792219
    },
    {
        "content": "<p>This proposal has been accepted: <a href=\"https://github.com/rust-lang/compiler-team/issues/402\">#402</a>.</p>",
        "id": 225818978,
        "sender_full_name": "triagebot",
        "timestamp": 1612954199
    }
]