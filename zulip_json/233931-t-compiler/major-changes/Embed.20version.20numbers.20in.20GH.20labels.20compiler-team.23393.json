[
    {
        "content": "<p>Manually creating the zulip thread as the bot is on strike. New MCP by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>: \"Embed version numbers in backport nominations and regression labels\"</p>",
        "id": 221070056,
        "sender_full_name": "lqd",
        "timestamp": 1609171291
    },
    {
        "content": "<p>yeah working on bot</p>",
        "id": 221070137,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171342
    },
    {
        "content": "<p>don't worry about it, I'm french I'm used to the strikes <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 221070154,
        "sender_full_name": "lqd",
        "timestamp": 1609171367
    },
    {
        "content": "<p>I am in favor of this, fwiw, I would like to figure out if we can get away with not having the beta/nightly labels at all</p>",
        "id": 221070158,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221070158\">said</a>:</p>\n<blockquote>\n<p>I am in favor of this, fwiw, I would like to figure out if we can get away with not having the beta/nightly labels at all</p>\n</blockquote>\n<p>beyond what is in the proposal, you mean?</p>",
        "id": 221070200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171401
    },
    {
        "content": "<p>Hmm, I didn't actually write an example of what the new version numbers would look like, so the intended outcome here (as to whether the words \"beta\" or \"nightly\" would be in the new labels) was ambiguous at best.</p>",
        "id": 221070280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171454
    },
    {
        "content": "<p>yeah</p>",
        "id": 221070290,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171465
    },
    {
        "content": "<p>I think something like regression-in-1.x is what I would prefer</p>",
        "id": 221070295,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171479
    },
    {
        "content": "<p>or perhaps from-stable-to-1.x, but just in-1.x seems best (e.g. if the regression is beta-to-nightly which I guess we just call stable to nightly right now)</p>",
        "id": 221070320,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171511
    },
    {
        "content": "<p>and nominated-for-1.x</p>",
        "id": 221070347,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171525
    },
    {
        "content": "<p>the downside is that you need to reference <a href=\"http://forge.rust-lang.org\">forge.rust-lang.org</a> to know how urgent things are</p>",
        "id": 221070371,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171546
    },
    {
        "content": "<p>I added some text to the first paragraph to clarify my intent</p>",
        "id": 221070437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171569
    },
    {
        "content": "<p>could we use in-1.x and the bot would mark it nightly/beta and update the label along the release cycle ?</p>",
        "id": 221070503,
        "sender_full_name": "lqd",
        "timestamp": 1609171636
    },
    {
        "content": "<p>We can definitely automate creating labels, and the advantage of this scheme is that there is no need to retire them I think, there's no \"label limit\"</p>",
        "id": 221070505,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171637
    },
    {
        "content": "<p>I think having both is going to end up confusing and people will (by mistake) add the wrong one</p>",
        "id": 221070526,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171660
    },
    {
        "content": "<p>well there may be a label limit in terms of the UX for people who use the web interface</p>",
        "id": 221070533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171668
    },
    {
        "content": "<p>what you sort of want is github to have \"label views\"</p>",
        "id": 221070537,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171672
    },
    {
        "content": "<p>i.e. we don't want old labels cluttering the list when people are trying to scan the labels for what they want to write</p>",
        "id": 221070616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171707
    },
    {
        "content": "<p>it should be relatively straightforward to retire them if needed</p>",
        "id": 221070617,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171708
    },
    {
        "content": "<p>is it possible that this meta-data ... just shouldn't be represented as a label at all?</p>",
        "id": 221070643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171734
    },
    {
        "content": "<p>What's the alternative?</p>",
        "id": 221070657,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171747
    },
    {
        "content": "<p>what do you mean both ? like having regression-in-1.50-nightly and regression-in-1.50-beta ?</p>",
        "id": 221070661,
        "sender_full_name": "lqd",
        "timestamp": 1609171751
    },
    {
        "content": "<p>I don't know, I was thinking first line of description. But the reality is that we probably <em>do</em> want labels because they show up in other contexts, namely issue lists</p>",
        "id": 221070677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171772
    },
    {
        "content": "<p>I assumed you meant we would have regression-in-1.50 regression-from-stable-to-beta at the same time by \"both\"</p>",
        "id": 221070702,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171795
    },
    {
        "content": "<p>(cc <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> who might be interested)</p>",
        "id": 221070706,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609171799
    },
    {
        "content": "<p>yeah it must be searchable</p>",
        "id": 221070718,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221070503\">said</a>:</p>\n<blockquote>\n<p>could we use in-1.x and the bot would mark it nightly/beta and update the label along the release cycle ?</p>\n</blockquote>\n<p>this is what I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> meant by \"having both\"</p>",
        "id": 221070759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171808
    },
    {
        "content": "<p>that's table stakes :)</p>",
        "id": 221070760,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171809
    },
    {
        "content": "<p>but its possible that the current system is still \"right\" for searches</p>",
        "id": 221070805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171842
    },
    {
        "content": "<p>and that the thing with embedded version numbers would go in description</p>",
        "id": 221070817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171855
    },
    {
        "content": "<p>ah no I was imagining people could generally use nightly or the version to add the tag, but the bot would rename them from 1.50-nightly to 1.50-beta along the release cycle is what I meant</p>",
        "id": 221070821,
        "sender_full_name": "lqd",
        "timestamp": 1609171858
    },
    {
        "content": "<p>and a bot would maintain the labels</p>",
        "id": 221070822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609171858
    },
    {
        "content": "<p>we could have a tiny script to generate the searches</p>",
        "id": 221070839,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609171868
    },
    {
        "content": "<p>you say \"I want to search beta\" and it generates the 1.49 label search</p>",
        "id": 221070854,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609171884
    },
    {
        "content": "<p>i.e there's only one versioned tag (and the bot updates whether that tag is nightly/beta/stable)</p>",
        "id": 221070856,
        "sender_full_name": "lqd",
        "timestamp": 1609171885
    },
    {
        "content": "<p>I think we could autorename labels and have both current channel and a version number in them</p>",
        "id": 221070957,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171953
    },
    {
        "content": "<p>that seems not too hard, I guess</p>",
        "id": 221070962,
        "sender_full_name": "simulacrum",
        "timestamp": 1609171959
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221070537\">said</a>:</p>\n<blockquote>\n<p>what you sort of want is github to have \"label views\"</p>\n</blockquote>\n<p>Is your idea here, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , that the web interface would should only a subset of the full set of labels that are actually available to select?</p>",
        "id": 221071045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172036
    },
    {
        "content": "<p>sort of</p>",
        "id": 221071086,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172044
    },
    {
        "content": "<p>also: are we missing an opportunity here to use the <em>milestone</em> github feature for this?</p>",
        "id": 221071119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172077
    },
    {
        "content": "<p>I am thinking basically that what you mostly want is that you can always say \"beta\" and that is <em>stored</em> as a version number, I guess</p>",
        "id": 221071126,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172080
    },
    {
        "content": "<p>I like milestones - I add them today - and maybe they are better. the disadvantage is you can only have one per issue</p>",
        "id": 221071153,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071119\">said</a>:</p>\n<blockquote>\n<p>also: are we missing an opportunity here to use the <em>milestone</em> github feature for this?</p>\n</blockquote>\n<p>(I guess that would only handle the backports, not the regression tagging. Or maybe we could abuse it for regression tagging.)</p>",
        "id": 221071179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172111
    },
    {
        "content": "<p>I think it makes a lot of sense for backports</p>",
        "id": 221071279,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609172137
    },
    {
        "content": "<p>what if you want to backport to both beta and stable?</p>",
        "id": 221071450,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609172184
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071126\">said</a>:</p>\n<blockquote>\n<p>I am thinking basically that what you mostly want is that you can always say \"beta\" and that is <em>stored</em> as a version number, I guess</p>\n</blockquote>\n<p>I see, so that at any time, the set of available labels would have only one version associated with labels that have the word \"beta\" in them, and so someone using the web UX would be able to type \"beta\" and the right subset of labels would come up in the prompt.</p>",
        "id": 221071454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172191
    },
    {
        "content": "<p>backport tracking on PRs doesn't make sense to use milestones for I think</p>",
        "id": 221071463,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172210
    },
    {
        "content": "<p>(or then we need to stop attaching milestones for all PRs)</p>",
        "id": 221071470,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172221
    },
    {
        "content": "<p>but tracking regressions via milestones as a \"must be fixed when X hits stable\" makes sense</p>",
        "id": 221071492,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172245
    },
    {
        "content": "<p>there could be a '1.50 backports' milestone maybe</p>",
        "id": 221071495,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609172249
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071450\">said</a>:</p>\n<blockquote>\n<p>what if you want to backport to both beta and stable?</p>\n</blockquote>\n<p>The MCP text says that we would keep the current stable labels. I didn't really elaborate why, but my thinking was that once a problem is in stable, its not really something where its too useful  to track the version any more (apart from knowing if its become ancient).</p>",
        "id": 221071498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172254
    },
    {
        "content": "<p>no milestones don't make sense for backports, there's too many states</p>",
        "id": 221071512,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172276
    },
    {
        "content": "<p>backports have multiple targets (beta/stable), and go through at least 3 groups of people: proposer, team decision, backporter</p>",
        "id": 221071574,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172308
    },
    {
        "content": "<p>but for regression tracking I think they're probably the best tool</p>",
        "id": 221071583,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071492\">said</a>:</p>\n<blockquote>\n<p>but tracking regressions via milestones as a \"must be fixed when X hits stable\" makes sense</p>\n</blockquote>\n<p>Ah, right, for whatever reason I thought they would be used to track the version which introduced the regression</p>",
        "id": 221071661,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609172401
    },
    {
        "content": "<p>that's... the same?</p>",
        "id": 221071713,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071450\">said</a>:</p>\n<blockquote>\n<p>what if you want to backport to both beta and stable?</p>\n</blockquote>\n<p>(oh, I see, this was perhaps in response to my musing about using milestones for backports. but yes, i think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is right; it would work <em>at most</em> for beta backports alone, and that doesn't seem like a win.)</p>",
        "id": 221071730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172433
    },
    {
        "content": "<p>I mean, for stable regressions</p>",
        "id": 221071732,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609172438
    },
    {
        "content": "<p>you mean stable-to-stable?</p>",
        "id": 221071749,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172469
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that tracking the version in metadata is not super useful</p>",
        "id": 221071759,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172485
    },
    {
        "content": "<p>I'm going to add a footnote about that to the text (basically the same thing I wrote above).</p>",
        "id": 221071780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172514
    },
    {
        "content": "<p>Another option would be to using version numbers <em>just</em> for the beta tags</p>",
        "id": 221071875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172585
    },
    {
        "content": "<p>I think my proposal would be to note change both beta noms and regression labels in one go</p>",
        "id": 221071895,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172610
    },
    {
        "content": "<blockquote>\n<p>The labels <code>regression-from-stable-to-stable</code>, <code>stable-nominated</code>, and <code>stable-accepted</code> would remain unchanged.</p>\n</blockquote>\n<p>I'm blind, didn't see that line :(<br>\nSorry for the noise...</p>",
        "id": 221071901,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609172617
    },
    {
        "content": "<p>I'd change just non-stable regressions to be milestones</p>",
        "id": 221071912,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172636
    },
    {
        "content": "<p>(so that the main effective difference would be that the labels with \"beta\" in them now have this extra bit of supposedly redundant information)</p>",
        "id": 221071947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172643
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393/near/221071912\">said</a>:</p>\n<blockquote>\n<p>I'd change just non-stable regressions to be milestones</p>\n</blockquote>\n<p>hmm, and leave the whole beta-nom system as is for now?</p>",
        "id": 221072009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172700
    },
    {
        "content": "<p>well, it feels orthogonal</p>",
        "id": 221072017,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172708
    },
    {
        "content": "<p>I feel like milestones are an easy sell</p>",
        "id": 221072025,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172715
    },
    {
        "content": "<p>I'd like to figure out if nominated-for-1.x is clear enough</p>",
        "id": 221072037,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172729
    },
    {
        "content": "<p>If we're going to adopt milestones at all, then it does seem like it would be good to do it directly, rather than first adopting some new embedded-version-in-label scheme</p>",
        "id": 221072057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172759
    },
    {
        "content": "<p>note that triagebot already creates milestones as soon as a PR lands with that version, so it's really just a matter of starting to use them</p>",
        "id": 221072186,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172845
    },
    {
        "content": "<p>I guess we would have a generic \"regression\" label</p>",
        "id": 221072205,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172855
    },
    {
        "content": "<p>so e.g. a bug hitting stable on thursday would be tagged regression and milestoned at 1.49</p>",
        "id": 221072232,
        "sender_full_name": "simulacrum",
        "timestamp": 1609172880
    },
    {
        "content": "<p>mmm, I would worry about people not knowing that \"regression\" is more urgent than \"regression-from-stable-to-stable\"</p>",
        "id": 221072306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172919
    },
    {
        "content": "<p>but I guess associated urgency has to be taught in any case</p>",
        "id": 221072318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609172934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you think using the milestone system in the way you describe is going to make triaging/review any easier?</p>",
        "id": 221072429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609173002
    },
    {
        "content": "<p>absolutely</p>",
        "id": 221072491,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173049
    },
    {
        "content": "<p>regression-from-stable-to-beta today is a mess</p>",
        "id": 221072503,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173060
    },
    {
        "content": "<p>I routinely find from-stable-to-nightly that are like 6 months old (i.e. clearly not nightly anymore) or should be tagged with -to-beta</p>",
        "id": 221072553,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173104
    },
    {
        "content": "<p>I am very worried we're missing things every release as a result</p>",
        "id": 221072563,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173116
    },
    {
        "content": "<p>I don't know that saying they are regressions is useful</p>",
        "id": 221072617,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173133
    },
    {
        "content": "<p>I don't think we use milestones for anything other than regressions so there's not really a need to add that</p>",
        "id": 221072631,
        "sender_full_name": "simulacrum",
        "timestamp": 1609173151
    },
    {
        "content": "<p>I kind of feel like the best approach could be to have a <code>regression-from-stable-to-v1.50-nightly</code> label that's automatically renamed to <code>regression-from-stable-to-v1.50-beta</code> and then deleted and relabeled as <code>regression-from-stable-to-stable</code> by triagebot. (I think I saw someone mention something like that earlier in the thread.)</p>",
        "id": 221086081,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609184445
    },
    {
        "content": "<p>Then we never have to worry about, e.g., <code>regression-from-stable-to-beta</code>s that are super old and now on stable.</p>",
        "id": 221086120,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609184515
    },
    {
        "content": "<p>So at any time we'd have these regression labels:</p>\n<ul>\n<li>regression-from-stable-to-stable</li>\n<li>regression-from-stable-v1.{XX}-beta</li>\n<li>regression-from-stable-v1.{XX + 1}-nightly</li>\n</ul>",
        "id": 221086178,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609184563
    },
    {
        "content": "<p>I don't think that gives us any major advantage over the milestone approach personally</p>",
        "id": 221086702,
        "sender_full_name": "simulacrum",
        "timestamp": 1609185117
    },
    {
        "content": "<p>and is a lot more work</p>",
        "id": 221086743,
        "sender_full_name": "simulacrum",
        "timestamp": 1609185124
    },
    {
        "content": "<p>(i.e. we need to develop that renaming to work well, during release week there are 2 different betas)</p>",
        "id": 221086764,
        "sender_full_name": "simulacrum",
        "timestamp": 1609185158
    },
    {
        "content": "<p>mcp closed for inactivity</p>",
        "id": 234480732,
        "sender_full_name": "apiraino",
        "timestamp": 1618398860
    }
]