[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/387\">Rename <code>rustc_ty</code> #387</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 217178799,
        "sender_full_name": "triagebot",
        "timestamp": 1605725091
    },
    {
        "content": "<p>what should it be renamed to? <code>rustc_ty_utils</code>? does any part of the compiler directly use that crate or is it just used through queries?</p>",
        "id": 217179111,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605725252
    },
    {
        "content": "<p>It looks like only <a href=\"https://github.com/rust-lang/rust/blob/da897dfb6daa268a965d2d73620316ba56020a19/compiler/rustc_interface/Cargo.toml#L44\"><code>rustc_interface</code> directly depends on it</a></p>",
        "id": 217179294,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605725356
    },
    {
        "content": "<p>And only to call its <code>provide</code> function</p>",
        "id": 217179528,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605725458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20.60rustc_ty.60.20compiler-team.23387/near/217179111\">said</a>:</p>\n<blockquote>\n<p>what should it be renamed to? <code>rustc_ty_utils</code>?</p>\n</blockquote>\n<p><code>rustc_ty_utils</code> is also what I had in mind</p>",
        "id": 217179729,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605725538
    },
    {
        "content": "<p>is there any reason not to make the <code>ty</code> module you're extracting out of <code>rustc_middle</code> also include what's currently <code>rustc_ty</code>?</p>",
        "id": 217180794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605726025
    },
    {
        "content": "<p>or maybe just move it into <code>rustc_interface</code> directly?</p>",
        "id": 217180831,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605726040
    },
    {
        "content": "<p><code>rustc_ty</code> depends on <code>rustc_middle</code>. <code>rustc_ty_library</code> (or <code>rustc_ty</code> in the future) will be the opposite: <code>rustc_middle</code> will depend on <em>it</em></p>",
        "id": 217183435,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605727167
    },
    {
        "content": "<p>Side note: hopefully extracting the type library will speed up bootstrap times!</p>",
        "id": 217185260,
        "sender_full_name": "Noah Lev",
        "timestamp": 1605727976
    },
    {
        "content": "<p>That's an added bonus, yes</p>",
        "id": 217188231,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605729395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> The end goal is to have a library that’s independent from rustc, this <code>rustc_ty_library</code> is just a step forward</p>",
        "id": 217195389,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605732960
    },
    {
        "content": "<p>Wait I'm confused, how can rustc_ty (the new one you're proposing) be independent if it depends on rustc_middle?</p>",
        "id": 217195976,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605733215
    },
    {
        "content": "<p>The whole thing is to make it independent <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 217196314,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605733381
    },
    {
        "content": "<p>I am really not following the proposal then, sorry. What is it suggesting and what is the goal?</p>",
        "id": 217196399,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605733420
    },
    {
        "content": "<p>Also to be clear it’s not what I’m proposing, it’s what’s been on the WG-traits’s mind for a long time</p>",
        "id": 217196507,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605733462
    },
    {
        "content": "<p>This proposal is just proposing to rename the current <code>rustc_ty</code> to something else</p>",
        "id": 217196555,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605733492
    },
    {
        "content": "<p>If the long term goal is to have a shared library for data types, maybe it should be named <code>rustc_ty_data</code></p>",
        "id": 217196665,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605733556
    },
    {
        "content": "<p>And then rustc_ty doesn't need to be renamed</p>",
        "id": 217196697,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605733564
    },
    {
        "content": "<p>Or there could be rustc_ty_utils and rustc_ty_data maybe, but turning one crate into another sounds very confusing</p>",
        "id": 217196795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605733604
    },
    {
        "content": "<p>Also honestly I think rustc_ty is a confusing name (for the current library) regardless</p>",
        "id": 217196886,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605733656
    },
    {
        "content": "<p>yeah changing it to <code>rustc_ty_utils</code> sounds like an all-around win now that I know what it does</p>",
        "id": 217197888,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605734243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> if you're still confused, let me see if I can clarify</p>",
        "id": 217201569,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605736329
    },
    {
        "content": "<p>So, the eventual goal is to have Chalk and rustc have a shared type library (and it'll will probably look close to what <code>chalk-ir</code> has today). While we haven't completely decided yet where exactly that will live, wg-traits has decided to start moving things out of <code>rustc_middle</code> into an independent crate and <code>rustc_middle</code> will depend on it.</p>",
        "id": 217201837,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605736528
    },
    {
        "content": "<p>Hmm</p>",
        "id": 217298730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805100
    },
    {
        "content": "<p><code>rustc_ty</code> feels like the name I <em>expect</em> but I hear folks saying it's confusing</p>",
        "id": 217298802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805127
    },
    {
        "content": "<p>well the confusing thing is that there's already a crate with that name</p>",
        "id": 217298886,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605805162
    },
    {
        "content": "<p>I was going to suggest that a general type library could just be rust_ty (note: no c) but that seems like it'd be very confusing</p>",
        "id": 217299044,
        "sender_full_name": "simulacrum",
        "timestamp": 1605805219
    },
    {
        "content": "<p>(since presumably the same general types could be used in rust-analyzer and such, as we explicitly aim at \"generality\" here)</p>",
        "id": 217299104,
        "sender_full_name": "simulacrum",
        "timestamp": 1605805252
    },
    {
        "content": "<p>I was wondering about the <code>rustc_</code> prefix</p>",
        "id": 217299179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805282
    },
    {
        "content": "<p>this is aiming to be a \"reusable abstraction\", but ultimately it <em>is</em> \"the rust compiler's representation of types\"</p>",
        "id": 217299215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805306
    },
    {
        "content": "<p>so rustc_ seems ok</p>",
        "id": 217299223,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20.60rustc_ty.60.20compiler-team.23387/near/217298886\">said</a>:</p>\n<blockquote>\n<p>well the confusing thing is that there's already a crate with that name</p>\n</blockquote>\n<p>what does this crate do today?</p>",
        "id": 217299260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805322
    },
    {
        "content": "<p>it's also true that this library will cover things that are not types</p>",
        "id": 217299317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805331
    },
    {
        "content": "<p>e.g., trait references</p>",
        "id": 217299323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805333
    },
    {
        "content": "<p>so maybe there's a more general name, but I'm not sure what it is</p>",
        "id": 217299360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805347
    },
    {
        "content": "<p>\"terms\"</p>",
        "id": 217299365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605805348
    },
    {
        "content": "<p>Okay, so let's make a solid plan going forward. It sounds like there's good support <em>here</em> to rename <code>rustc_ty</code> to <code>rustc_ty_utils</code>. Can someone second this MCP? And <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> maybe make a PR for that?</p>",
        "id": 217326275,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605817828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can you look at <a href=\"https://github.com/rust-lang/rust/issues/79169\">#79169</a>, particularly in regards to the <code>rustc_data_structures</code> comment</p>",
        "id": 217326333,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605817862
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/387#issuecomment-730620179\">#387</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 217326365,
        "sender_full_name": "triagebot",
        "timestamp": 1605817873
    },
    {
        "content": "<p>rustc_ty_utils seems reasonable and uncontroversial, seconded</p>",
        "id": 217326395,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605817894
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/rust/issues/79212\">#79212</a></p>",
        "id": 217327692,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605818561
    },
    {
        "content": "<p>(I don't even think this really needs an MCP if the only use is in rustc_interface)</p>",
        "id": 217327726,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605818585
    },
    {
        "content": "<p>Okay yeah that diff is tiny, and according to <a href=\"https://forge.rust-lang.org/compiler/mcp.html#what-constitutes-a-major-change\">https://forge.rust-lang.org/compiler/mcp.html#what-constitutes-a-major-change</a> no MCP is required. I'll r+ once CI is fixed.</p>",
        "id": 217328964,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605819259
    },
    {
        "content": "<p>Should I just close the MCP?</p>",
        "id": 217329863,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1605819773
    },
    {
        "content": "<p>I think so?</p>",
        "id": 217330032,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605819851
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20.60rustc_ty.60.20compiler-team.23387/near/217326333\">said</a>:</p>\n<blockquote>\n<p>can you look at <a href=\"https://github.com/rust-lang/rust/issues/79169\">#79169</a>, particularly in regards to the <code>rustc_data_structures</code> comment</p>\n</blockquote>\n<p>I saw it. I feel like that crate probably wants to be broken up.</p>",
        "id": 217333979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605821838
    },
    {
        "content": "<p>how about naming it <code>rust-typesystem</code>?</p>",
        "id": 217337427,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1605823645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, I feel like eventually we should split out a minimal set of things needed from that crate, and make it a dependency of chalk-ir</p>",
        "id": 217337436,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605823655
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"229517\">Jacob Lifshay</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20.60rustc_ty.60.20compiler-team.23387/near/217337427\">said</a>:</p>\n<blockquote>\n<p>how about naming it <code>rust-typesystem</code>?</p>\n</blockquote>\n<p>I...kind of like this</p>",
        "id": 217412936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605885160
    },
    {
        "content": "<p>it's not really the whole <em>type system</em> but it is definitely the \"IR\" for the type system</p>",
        "id": 217412959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605885168
    },
    {
        "content": "<p>type_ir might be another possible name</p>",
        "id": 217412974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605885174
    },
    {
        "content": "<p>Okay, so I'm trying to think about how to move forward with this. Specifically with regards to <code>rustc_data_structures</code> and other potential new required dependencies for <code>chalk-ir</code></p>",
        "id": 218501850,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869409
    },
    {
        "content": "<p>So, from <code>rustc_data_structures</code>, we will probably need <code>HashStable</code>. I don't know what else.</p>",
        "id": 218501868,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869435
    },
    {
        "content": "<p>But, we also probably need at least some of <code>rustc_serialize</code> because of <code>TyEncodable</code>/<code>TyDecodable</code></p>",
        "id": 218501982,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869518
    },
    {
        "content": "<p>IIRC the ObligationForest is only used in <code>rustc_trait_selection</code>, right? Does it make sense to move it there?</p>",
        "id": 218501983,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606869520
    },
    {
        "content": "<p>Well, I don't know how far we'll get trying to move things <em>out</em> of <code>rustc_data_structures</code> into other parts of rustc</p>",
        "id": 218502062,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869588
    },
    {
        "content": "<p>If anything, I imagine we'll probably want to move like a minimal set of things to a crate that <code>chalk-ir</code> depends on</p>",
        "id": 218502129,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869616
    },
    {
        "content": "<p>If <code>HashStable</code> is the only thing we need from there, that's easy</p>",
        "id": 218502145,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869632
    },
    {
        "content": "<p><code>FxHashSet</code>/<code>FxHashMap</code> are actually in <code>rustc_hash</code>, and we already depend on that</p>",
        "id": 218502160,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869656
    },
    {
        "content": "<p>Something farther down the line to maybe thing about is <code>ParamEnv</code>, which uses <code>CopyTaggedPtr</code></p>",
        "id": 218502197,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606869699
    },
    {
        "content": "<p>Actually...could we just move <code>HashStable</code> into <code>rustc_hash</code>?</p>",
        "id": 218502811,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870236
    },
    {
        "content": "<p>It shouldn't make <em>any</em> difference for rustc itself, since everything refers to it through <code>rustc_data_structure</code> reexports</p>",
        "id": 218502885,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870314
    },
    {
        "content": "<p>It would make anyone who is currently using rustc_hash start to pull in a bit more</p>",
        "id": 218502931,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870339
    },
    {
        "content": "<p>but, that's probably okay</p>",
        "id": 218502936,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870344
    },
    {
        "content": "<p>huh, there's a surprising number of people using rustc_hash <a href=\"https://crates.io/crates/rustc_hash/reverse_dependencies\">https://crates.io/crates/rustc_hash/reverse_dependencies</a></p>",
        "id": 218502993,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606870403
    },
    {
        "content": "<p>but like, I wouldn't expect <code>HashStable</code> to be giant, if it is we can always make it a cargo feature or something</p>",
        "id": 218503018,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606870426
    },
    {
        "content": "<p>huh TIL about that reverse deps feature</p>",
        "id": 218503214,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870565
    },
    {
        "content": "<p>yeah it's useful :)</p>",
        "id": 218503242,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606870609
    },
    {
        "content": "<p>Just looking at the top ones:</p>",
        "id": 218503247,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870614
    },
    {
        "content": "<p>hashbrown only uses it in a test</p>",
        "id": 218503254,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870622
    },
    {
        "content": "<p>bindgen actually uses it</p>",
        "id": 218503286,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870652
    },
    {
        "content": "<p>Anyways, yeah, I'm gonna go ahead and open a PR for this. I'll put it under a feature gate,</p>",
        "id": 218503354,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606870693
    },
    {
        "content": "<p>Oh but <code>rustc_hash</code> is so tiny :( and not even in-tree</p>",
        "id": 218503994,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606871274
    },
    {
        "content": "<p>So, who actually \"maintains\" rustc-hash? I.e. can make the decision whether or not it's okay to expand it to include the hash_stable mod from rustc_data_structures?</p>",
        "id": 218590612,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930141
    },
    {
        "content": "<p>According to <a href=\"http://crates.io\">crates.io</a> it's <code>T-core</code> and <code>T-compiler</code></p>",
        "id": 218590677,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606930176
    },
    {
        "content": "<p>Do you think this warrants a T-compiler MCP?</p>",
        "id": 218590787,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606930208
    },
    {
        "content": "<p>Maybe?</p>",
        "id": 218591218,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930391
    },
    {
        "content": "<p>As much as I <em>like</em> the MCP process, I feel like to a certain extent, we should maybe just get a bit broader approval for the ty library related things. We've already sort of discussed it at length in wg-traits. This in particular seems to be more a \"just check in with relevant people\" sort of thing. But I don't know</p>",
        "id": 218591578,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930545
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> since you did the initial commits of rustc-hash, and are obviously relevant for everything else</p>",
        "id": 218591687,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930581
    },
    {
        "content": "<p><em>In the meantime</em>, <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> can you adjust your type library PR for two things:</p>",
        "id": 218591828,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930652
    },
    {
        "content": "<ul>\n<li>Change the name from <code>rustc_type_library</code> to <code>rustc_type_ir</code></li>\n</ul>",
        "id": 218591884,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930675
    },
    {
        "content": "<ul>\n<li>Make it depend on <code>rustc_data_structures</code> and put the relevant <code>HashStable</code> impls there</li>\n</ul>",
        "id": 218591978,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930703
    },
    {
        "content": "<p>Sure</p>",
        "id": 218592025,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606930728
    },
    {
        "content": "<p>I figure that'll get split at <em>some</em> point in <em>some</em> way, but for now it's fine to start</p>",
        "id": 218592036,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930732
    },
    {
        "content": "<p>(This next statement is opinion and not necessarily what we should do) You could also reexport all of that library under <code>rustc_middle::ty::ir</code></p>",
        "id": 218592433,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930903
    },
    {
        "content": "<p>So instead of <code>ty::INNERMOST</code> you could do <code>ty::ir::INNERMOST</code></p>",
        "id": 218592463,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930920
    },
    {
        "content": "<p>(Though you could just as easily reexport at <code>rustc_middle::ty</code> and not change most code)</p>",
        "id": 218592586,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606930963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20.60rustc_ty.60.20compiler-team.23387/near/218592463\">said</a>:</p>\n<blockquote>\n<p>So instead of <code>ty::INNERMOST</code> you could do <code>ty::ir::INNERMOST</code></p>\n</blockquote>\n<p>Seems a bit lengthy to me though, but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 218592668,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606930993
    },
    {
        "content": "<p>Yeah, that's my concern too. For now, can you just reexport all at <code>rustc_middle::ty</code>?</p>",
        "id": 218592736,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606931025
    },
    {
        "content": "<p>So almost all code doesn't change</p>",
        "id": 218592752,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606931032
    },
    {
        "content": "<p>Then at some future date, we can remove that reexport</p>",
        "id": 218592795,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606931044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if you get a chance, can you take a look at <a href=\"https://github.com/rust-lang/rust/issues/79169\">#79169</a></p>",
        "id": 218618194,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606942509
    }
]