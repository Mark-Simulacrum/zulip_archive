[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/451\">Rename various internal things #451</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 247444969,
        "sender_full_name": "triagebot",
        "timestamp": 1627470125
    },
    {
        "content": "<blockquote>\n<p>Region -&gt; Lifetime in general. While Region kinda makes more sense, we use Lifetime in the language</p>\n</blockquote>\n<p>What about renaming lifetime to region?</p>\n<blockquote>\n<p>Folder and fold_ -&gt; Replacer and replace_</p>\n</blockquote>\n<p><code>Folder</code> is the term for example Haskell uses.</p>",
        "id": 247445452,
        "sender_full_name": "bjorn3",
        "timestamp": 1627470489
    },
    {
        "content": "<p>IMO lifetimes are different enough from regions as described in the literature, that it’s probably best to move away from the term and complete the name change to lifetime, instead of going back (for the record, polonius calls them \"origins\", and oxide \"provenances\")</p>",
        "id": 247446359,
        "sender_full_name": "lqd",
        "timestamp": 1627471260
    },
    {
        "content": "<p>another renaming that this MCP could do, on the same topic: finalizing between \"universal regions\" vs \"free regions\"  (I don't remember which of the 2 is supposed to be the most up to date, but I feel it's the latter :) or something else (maybe \"named lifetimes\" I dunno)</p>",
        "id": 247448090,
        "sender_full_name": "lqd",
        "timestamp": 1627472632
    },
    {
        "content": "<p>seems good to me, though I don't like <code>replace_generics</code></p>",
        "id": 247448312,
        "sender_full_name": "lcnr",
        "timestamp": 1627472807
    },
    {
        "content": "<p>maybe <code>instantiate_generic_args</code> or something like that?</p>",
        "id": 247448333,
        "sender_full_name": "lcnr",
        "timestamp": 1627472823
    },
    {
        "content": "<p>also not completely happy about <code>Replacer</code>. While it isn't a \"fold\" it also doesn't just replace things</p>",
        "id": 247448406,
        "sender_full_name": "lcnr",
        "timestamp": 1627472878
    },
    {
        "content": "<p><code>EarlyBoundRegion</code> and <code>LateBoundRegion</code> we do use these in a userfacing way, and for me  the new names don't seem perfect yet</p>",
        "id": 247448786,
        "sender_full_name": "lcnr",
        "timestamp": 1627473134
    },
    {
        "content": "<p>though I can't think of any fairly short names which do a better job here <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 247448857,
        "sender_full_name": "lcnr",
        "timestamp": 1627473179
    },
    {
        "content": "<p>Assuming this is talking about <code>TypeFolder</code>, I don't think <code>Folder</code> is actually what haskell would call it. It looks more like <a href=\"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Traversable.html#v:traverse\"><code>traverse</code></a> or <a href=\"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Traversable.html#v:mapM\">monadic <code>map</code></a> (which has the same type signature). I would call it <code>map</code> if you want to de-emphasize the monadic part (the <code>&amp;mut self</code> argument) and <code>traverse</code> if you want to emphasize it</p>",
        "id": 247449649,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627473780
    },
    {
        "content": "<p>a fold is where you produce a single data value by \"summing\" or performing other reduction operations along the data structure</p>",
        "id": 247449792,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627473864
    },
    {
        "content": "<p>I think rust already uses this terminology in the <code>Iterator::fold</code> and <code>Iterator::try_fold</code> methods</p>",
        "id": 247449820,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627473901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20various.20internal.20things.20compiler-team.23451/near/247448312\">said</a>:</p>\n<blockquote>\n<p>seems good to me, though I don't like <code>replace_generics</code></p>\n</blockquote>\n<p>I'd agree and think <code>substitute</code> would be perfectly fine, that's what Chalk uses as well</p>",
        "id": 247453698,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1627476586
    },
    {
        "content": "<p>Chalk also uses <code>Folder</code>, btw</p>",
        "id": 247453804,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1627476632
    },
    {
        "content": "<p>I agree with most of the renames but <code>Folder</code>, to the point where I feel it was added as <a href=\"https://blog.codinghorror.com/new-programming-jargon/#5\">a flapping duck</a> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 247455048,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1627477305
    },
    {
        "content": "<p>btw, I intend to second this MCP in a few days, even if we're still unable to decide on some of these as I think that it's both unavoidable to bikeshed here and even if not perfect, I still think that the changes will be an improvement</p>",
        "id": 247456080,
        "sender_full_name": "lcnr",
        "timestamp": 1627477832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> What is oxide? You mentioned it and \"provenances\"; haven't heard of it before.</p>",
        "id": 247473760,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627485848
    },
    {
        "content": "<p>I believe they are referring to <a href=\"https://arxiv.org/abs/1903.00982\">https://arxiv.org/abs/1903.00982</a></p>",
        "id": 247473809,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627485885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> a formal model of rust ownership/borrowck from <span class=\"user-mention\" data-user-id=\"127262\">@Aaron Weiss</span> and collaborators, including niko, based on/very similar to polonius <a href=\"https://aaronweiss.us/pubs/draft20-oxide.pdf\">https://aaronweiss.us/pubs/draft20-oxide.pdf</a></p>",
        "id": 247473837,
        "sender_full_name": "lqd",
        "timestamp": 1627485902
    },
    {
        "content": "<p>(but Mario's arxiv link seems up to date as well; although we haven't heard much news about this work recently -- and to be fair, the same could be said about our own public work on polonius, but that starts back up with friday's sprint :)</p>",
        "id": 247474084,
        "sender_full_name": "lqd",
        "timestamp": 1627486026
    },
    {
        "content": "<p>Thanks, and wow.</p>",
        "id": 247474282,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627486113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"129457\">Florian Diebold</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20various.20internal.20things.20compiler-team.23451/near/247453698\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20various.20internal.20things.20compiler-team.23451/near/247448312\">said</a>:</p>\n<blockquote>\n<p>seems good to me, though I don't like <code>replace_generics</code></p>\n</blockquote>\n<p>I'd agree and think <code>substitute</code> would be perfectly fine, that's what Chalk uses as well</p>\n</blockquote>\n<p>Chalk just reused rustc terminology for many things, it's not a good precedent</p>",
        "id": 247501366,
        "sender_full_name": "eddyb",
        "timestamp": 1627498416
    },
    {
        "content": "<p>if anything, this suggests we should get consensus around doing renames in <em>both</em> Chalk and rustc</p>",
        "id": 247501414,
        "sender_full_name": "eddyb",
        "timestamp": 1627498442
    },
    {
        "content": "<p>anyway I came here because I wanted to say that I don't think we should rename <code>{Early,Late}Bound</code> at the same time, that terminology is entrenched in other ways and should probably be done separately</p>",
        "id": 247501644,
        "sender_full_name": "eddyb",
        "timestamp": 1627498532
    },
    {
        "content": "<p>my original suggestion was mostly around \"folder\" being a misuse of the word (I don't know the history sadly), and \"substs\" being unnecessarily obscure when we already use e.g. <code>GenericArg</code> for its element type</p>",
        "id": 247501794,
        "sender_full_name": "eddyb",
        "timestamp": 1627498584
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/451#issuecomment-888549158\">#451</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 247503027,
        "sender_full_name": "triagebot",
        "timestamp": 1627499098
    },
    {
        "content": "<p>I've been confused by <code>Folder</code> in the past since I expected it to correspond to what OCaml/Haskell call fold, but it doesn't</p>",
        "id": 248609337,
        "sender_full_name": "RalfJ",
        "timestamp": 1628256006
    },
    {
        "content": "<p>so certainly <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> to that rename from my side</p>",
        "id": 248609363,
        "sender_full_name": "RalfJ",
        "timestamp": 1628256015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20various.20internal.20things.20compiler-team.23451/near/247449649\">said</a>:</p>\n<blockquote>\n<p>Assuming this is talking about <code>TypeFolder</code>, I don't think <code>Folder</code> is actually what haskell would call it. It looks more like <a href=\"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Traversable.html#v:traverse\"><code>traverse</code></a> or <a href=\"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Traversable.html#v:mapM\">monadic <code>map</code></a> (which has the same type signature). I would call it <code>map</code> if you want to de-emphasize the monadic part (the <code>&amp;mut self</code> argument) and <code>traverse</code> if you want to emphasize it</p>\n</blockquote>\n<p>since in Rust basically everything is implicitly in the state monad, I'd put the emphasis on the <code>map</code> part</p>",
        "id": 248609447,
        "sender_full_name": "RalfJ",
        "timestamp": 1628256055
    },
    {
        "content": "<p>\"Replacer\" sounds... not great but not horrible I guess?^^</p>",
        "id": 248609477,
        "sender_full_name": "RalfJ",
        "timestamp": 1628256075
    },
    {
        "content": "<p>Btw, renaming \"Fold\" to \"Map\" has been on the wg-traits \"wishlist\" for a while, see the bullet point in <a href=\"https://github.com/rust-lang/wg-traits/issues/16\">https://github.com/rust-lang/wg-traits/issues/16</a></p>",
        "id": 248632488,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628266793
    },
    {
        "content": "<p>Region -&gt; Lifetime is also nice; in Chalk, it's (almost?) always Lifetime</p>",
        "id": 248632633,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628266867
    },
    {
        "content": "<p>Early/Late lifetimes, I disagree with. Eventually, wg-traits wants to move to just \"bound\" lifetimes (This is how it is in Chalk atm, but there's lots of work to be done in rustc for that to be possible)</p>",
        "id": 248632787,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628266936
    },
    {
        "content": "<p>But for now, I don't think renaming those would make anything more clear</p>",
        "id": 248632878,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628266976
    },
    {
        "content": "<p><code>Substs</code>/<code>subst</code>, I haven't thought about, but rename seems to make sense</p>",
        "id": 248632956,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628267017
    },
    {
        "content": "<p>This proposal has been accepted: <a href=\"https://github.com/rust-lang/compiler-team/issues/451\">#451</a>.</p>",
        "id": 249902791,
        "sender_full_name": "triagebot",
        "timestamp": 1629316205
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Rename.20various.20internal.20things.20compiler-team.23451/near/247501414\">said</a>:</p>\n<blockquote>\n<p>if anything, this suggests we should get consensus around doing renames in <em>both</em> Chalk and rustc</p>\n</blockquote>\n<p>i really like <code>instantiate_parameters</code> for <code>subst</code> and would prefer that over the other names mentioned in this thread</p>",
        "id": 249909839,
        "sender_full_name": "lcnr",
        "timestamp": 1629319867
    }
]