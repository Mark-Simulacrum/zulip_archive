[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/469\">Unstable lints should be considered unknown #469</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 260886743,
        "sender_full_name": "triagebot",
        "timestamp": 1636506474
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> for the general principle that in the stable compiler, a nightly feature should be similar to a non-existent feature.</p>",
        "id": 260974945,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636542801
    },
    {
        "content": "<p>People shouldn't become <em>worse</em> off when something has been implemented than when it didn't exist.</p>",
        "id": 260974975,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636542823
    },
    {
        "content": "<p>This frustrates me in cargo too, I tried to use whatever the key is for \"don't optimize build dependencies\" and it was just a warning in old versions, but a hard error on <em>just</em> slightly outdated versions of cargo</p>",
        "id": 260990887,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636552141
    },
    {
        "content": "<p>Wait so the process of upgrading a compiler was actually easier before I fixed up must_not_suspend and make it unstable?</p>",
        "id": 261039559,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636571538
    },
    {
        "content": "<p>essentially yes :(</p>",
        "id": 261040450,
        "sender_full_name": "Lokathor",
        "timestamp": 1636571951
    },
    {
        "content": "<p>thats brutal <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 261158250,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636649747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> has <a href=\"https://github.com/rust-lang/compiler-team/issues/469#issuecomment-969262549\">offered to review</a> any changes, so if someone would be willing to second it I can move ahead with this change <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 261551770,
        "sender_full_name": "David Koloski",
        "timestamp": 1637006783
    },
    {
        "content": "<p>I do prefer the first suggested solution here and am willing to second this, but am a bit confused by its description.<br>\nAfaict what you want to do is the following:</p>\n<p>change the handling of unstable lints to be a special case of the general <code>unknown_lints</code> case, probably by using the same lint but adding a note that the lint is unstable or something. By default <code>allow(unknown_lints)</code> will allow the usage of unstable lints.</p>\n<p>I do not understand this section here though: \"This has the downside that re-stabilizing the lint will cause a build breakage, but there is an upgrade path out of this and it shouldn't be a problem.\"</p>\n<p>Before re-stabilizing the lint we have both <code>allow(unknown_lints)</code> and a <code>warn/allow(must_not_suspend)</code> or something like that. If we now stabilize <code>must_not_suspend</code> the <code>warn</code> or <code>allow</code> is used again <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> not sure how that would cause build breakage which isn't strictly desirable (e.g. when using <code>deny(must_not_suspend)</code>)</p>",
        "id": 261962960,
        "sender_full_name": "lcnr",
        "timestamp": 1637257389
    },
    {
        "content": "<p>Sure, I'll clarify as much as possible and will happily edit the issue to reflect discussion here.</p>\n<p>The note about re-stabilizing the lint causing a build breakage is not very clear. It it just meant to acknowledge that stabilizing the lint will bring us back to the original situation. I apologize for a lack of clarity here and will update the issue.</p>",
        "id": 261966641,
        "sender_full_name": "David Koloski",
        "timestamp": 1637258861
    },
    {
        "content": "<p>Updated now</p>",
        "id": 261967809,
        "sender_full_name": "David Koloski",
        "timestamp": 1637259464
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/469#issuecomment-973141095\">#469</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 261968886,
        "sender_full_name": "triagebot",
        "timestamp": 1637259976
    },
    {
        "content": "<p>This proposal has been accepted: <a href=\"https://github.com/rust-lang/compiler-team/issues/469\">#469</a>.</p>",
        "id": 263361428,
        "sender_full_name": "triagebot",
        "timestamp": 1638394831
    }
]