[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided #431</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 238660056,
        "sender_full_name": "triagebot",
        "timestamp": 1620930256
    },
    {
        "content": "<p>I'd be interested in more detail on what is meant by \"text\" here and whether it makes sense - I'd expect that we'd always go to stdout for the primary artifact with -, not try to differentiate between different kinds of output too much. OTOH, people probably don't want a binary spit out to stdout if it's a tty, so maybe we can look at curl's detection for example...</p>",
        "id": 238660411,
        "sender_full_name": "simulacrum",
        "timestamp": 1620930443
    },
    {
        "content": "<p>Probably I didn't pick the precise name. By text I mean MIR, LLVM IR, assembly and dependency info. Yeah I agree that it makes little sense to write binary to a terminal.</p>",
        "id": 238661309,
        "sender_full_name": "pjhades",
        "timestamp": 1620930843
    },
    {
        "content": "<p>if a binary would go to a terminal, do you make that an error? or fall back to a file named <code>-</code> again?</p>",
        "id": 238661886,
        "sender_full_name": "cuviper",
        "timestamp": 1620931109
    },
    {
        "content": "<p>I'd lean toward an error</p>",
        "id": 238661930,
        "sender_full_name": "cuviper",
        "timestamp": 1620931133
    },
    {
        "content": "<p>I lean similarly</p>",
        "id": 238663174,
        "sender_full_name": "simulacrum",
        "timestamp": 1620931795
    },
    {
        "content": "<p>What do you think of leaving binary output as is? I mean, making <code>-</code> work only with <code>mir</code>, <code>llvm-ir</code>, <code>asm</code> and <code>dep-info</code>. Binary outputs still go to files. (possibly a file named <code>-</code>).</p>",
        "id": 238665729,
        "sender_full_name": "pjhades",
        "timestamp": 1620932889
    },
    {
        "content": "<p>I made some local changes (not pushed yet) but currently I'm having issues regarding binary outputs not written to file. I guess I missed something.</p>",
        "id": 238665757,
        "sender_full_name": "pjhades",
        "timestamp": 1620932908
    },
    {
        "content": "<p>I don't like the inconsistency -- like it would be confusing if you could pipe <code>llvm-ir</code> to <code>opt</code>/<code>llc</code>, but not <code>llvm-bc</code></p>",
        "id": 238665910,
        "sender_full_name": "cuviper",
        "timestamp": 1620932980
    },
    {
        "content": "<p>I would want to have binary output to to stdout as well, yeah. We can do a simple check to see if stdout is a terminal, and if it is, print an error and stop rather than outputting it, unless we get an additional command line argument forcing binary output to something that looks like a terminal.</p>",
        "id": 238666863,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620933420
    },
    {
        "content": "<p>I suppose this is an orthgonal point, but someone was recently asking me whether there was a way to get the compiler to accept input via stdin</p>",
        "id": 241395113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729172
    },
    {
        "content": "<p>(it seems like it might be nice to solve both problems at the same time, if we can.)</p>",
        "id": 241395143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729186
    },
    {
        "content": "<p>((I know ways to do it on Linux that leverage special file system paths. I think the idea was to provide a more cross-platform solution.))</p>",
        "id": 241395241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729239
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Write.20text.20output.20files.20to.20stdout.20if.20opti.E2.80.A6.20compiler-team.23431/near/241395113\">said</a>:</p>\n<blockquote>\n<p>I suppose this is an orthgonal point, but someone was recently asking me whether there was a way to get the compiler to accept input via stdin</p>\n</blockquote>\n<p>It is already possible with <code>-</code>.</p>",
        "id": 241395414,
        "sender_full_name": "tm",
        "timestamp": 1622729303
    },
    {
        "content": "<p>Oh, does that work on all platforms?</p>",
        "id": 241418984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622739163
    },
    {
        "content": "<p>Seems to, yeah.</p>",
        "id": 241419573,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1622739402
    },
    {
        "content": "<p>This needs a defined behaviour for <code>-o -</code> and <code>--emit=multiple,text,types</code>.</p>",
        "id": 254540686,
        "sender_full_name": "nagisa",
        "timestamp": 1632406064
    }
]