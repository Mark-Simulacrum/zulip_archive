[
    {
        "content": "<p>A new proposal has been announced: <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">#336</a>. It will be announced at the next meeting to try and draw attention to it, but usually MCPs are not discussed during triage meetings. If you think this would benefit from discussion amongst the team, consider proposing a design meeting.</p>",
        "id": 205195713,
        "sender_full_name": "triagebot",
        "timestamp": 1595907926
    },
    {
        "content": "<p>I would like to propose that we resolve some of the unresolved questions before the proposal is seconded</p>",
        "id": 205195785,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595908057
    },
    {
        "content": "<p>Oh, another question: should we add nested <code>src/</code> directories? I feel like the answer is yes for consistency with <code>library/</code></p>",
        "id": 205196736,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595909671
    },
    {
        "content": "<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>",
        "id": 205197617,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595911184
    },
    {
        "content": "<p>Just playing around here: <a href=\"https://github.com/rust-lang/rust/pull/74862\">https://github.com/rust-lang/rust/pull/74862</a></p>\n<p>It's surprisingly easy to move most of the crates -- it's just updating the <code>Cargo.toml</code>. The LLVM stuff could be tricky because it interacts with bootstrap, though.</p>",
        "id": 205197681,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595911260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205197617\">said</a>:</p>\n<blockquote>\n<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>\n</blockquote>\n<p>Hmm... actually this would require writing the imports in every file... so maybe not...</p>",
        "id": 205198918,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595913232
    },
    {
        "content": "<p>Organizationally, I think it makes sense to start with moving llvm-project to the top. It is somewhat orthogonal to the proposal, but I think is clearly desirable for a very tangible benefit of easier grepping, etc (and not just to make structure more sane). It will also probably be the most painful one, with respect to fixing paths</p>",
        "id": 205201999,
        "sender_full_name": "matklad",
        "timestamp": 1595917909
    },
    {
        "content": "<p>Looking at the PR, another option to move <em>everything but conpiler</em> out of src first, and then rename the dir.</p>",
        "id": 205202165,
        "sender_full_name": "matklad",
        "timestamp": 1595918123
    },
    {
        "content": "<p>Wow this will be so painful for all ongoing parallel development.^^ It will also make code archeology so much more annoying for the next few years as \"git blame\" is basically unable to follow renames. I hope y'all are convinced that such a hugely disruptive change is really worth it. IMO the current structure isn't great, but it also not so bad to justify so much pain. (Moving submodules is particularly painful in my experience, in particular huge ones like llvm-project.)</p>",
        "id": 205202579,
        "sender_full_name": "RalfJ",
        "timestamp": 1595918724
    },
    {
        "content": "<p>I've never had problems with git blame and renames. I recently blamed a test from pre 1.0 and it definitely has moved a few times since then. The only thing that breaks is github's \"file history\", but even github's blame still works correctly</p>",
        "id": 205204789,
        "sender_full_name": "oli",
        "timestamp": 1595921362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205197617\">said</a>:</p>\n<blockquote>\n<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>\n</blockquote>\n<p>am a fan of removing the prefix, provided it isn't too painful... maybe can be automated with help of <code>sd</code> and similar</p>",
        "id": 205205078,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1595921643
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205198918\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205197617\">said</a>:</p>\n<blockquote>\n<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>\n</blockquote>\n<p>Hmm... actually this would require writing the imports in every file... so maybe not...</p>\n</blockquote>\n<p>we could start with just renaming the directories but keeping the crate names</p>",
        "id": 205205130,
        "sender_full_name": "oli",
        "timestamp": 1595921721
    },
    {
        "content": "<blockquote>\n<p>IMO the current structure isn't great, but it also not so bad to justify so much pain. </p>\n</blockquote>\n<p>The current pain accumulates over time, the pain from reorg is temporary (provided that there's fixed point to reorgs). If I take \"over time\" effects into account, for me personally it is very clear that build process simplification (of which runtime/compiler split is a per-requisite)  is worth the pain. Though, I am spoiled by working in the rust-analyzer code base, which is just a big boring stable Cargo workspace :D</p>",
        "id": 205207893,
        "sender_full_name": "matklad",
        "timestamp": 1595924082
    },
    {
        "content": "<blockquote>\n<p>Unresolved question: there was also some questions about what to do with the current rustc crate (effectively, the <a href=\"http://main.rs\">main.rs</a> of the compiler), which is basically just a main function that calls rustc_driver. In the above proposal, I have it as bin/rustc.rs.</p>\n</blockquote>\n<p>Remove the <code>rustc</code> crate and move that file over to <code>librustc_driver/src/bin/rustc.rs</code>?</p>",
        "id": 205208087,
        "sender_full_name": "matklad",
        "timestamp": 1595924232
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205204789\">said</a>:</p>\n<blockquote>\n<p>I've never had problems with git blame and renames. I recently blamed a test from pre 1.0 and it definitely has moved a few times since then. The only thing that breaks is github's \"file history\", but even github's blame still works correctly</p>\n</blockquote>\n<p>that is not my experience, github's blame has stopped on renames many times for me</p>",
        "id": 205215568,
        "sender_full_name": "RalfJ",
        "timestamp": 1595929262
    },
    {
        "content": "<p>submodule renames do not lead to the old submodule being deleted, you have to manually delete the old dir <em>and</em> the data in <code>.git/modules</code> , I think.</p>",
        "id": 205215731,
        "sender_full_name": "RalfJ",
        "timestamp": 1595929331
    },
    {
        "content": "<p>but it seems like rebase handles renames so at least that part should not be as bad as I thought</p>",
        "id": 205215771,
        "sender_full_name": "RalfJ",
        "timestamp": 1595929356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205205130\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205198918\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205197617\">said</a>:</p>\n<blockquote>\n<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>\n</blockquote>\n<p>Hmm... actually this would require writing the imports in every file... so maybe not...</p>\n</blockquote>\n<p>we could start with just renaming the directories but keeping the crate names</p>\n</blockquote>\n<p>Are you proposing that we would over time remove the prefixes from the names and fix imports? It would be weird for the crate and directory to have different names; that kind of goes against the objective of making things a bit more idiomatic</p>",
        "id": 205249081,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595949418
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205208087\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Unresolved question: there was also some questions about what to do with the current rustc crate (effectively, the <a href=\"http://main.rs\">main.rs</a> of the compiler), which is basically just a main function that calls rustc_driver. In the above proposal, I have it as bin/rustc.rs.</p>\n</blockquote>\n<p>Remove the <code>rustc</code> crate and move that file over to <code>librustc_driver/src/bin/rustc.rs</code>?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> proposed making it <code>rustc/main.rs</code>, which I kind of like</p>",
        "id": 205249129,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595949448
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205215731\">said</a>:</p>\n<blockquote>\n<p>submodule renames do not lead to the old submodule being deleted, you have to manually delete the old dir <em>and</em> the data in <code>.git/modules</code> , I think.</p>\n</blockquote>\n<p>Yeah, submodules are a bit crazy and painful in general though, and I don't think I've ever needed to browse blame into a submodule as opposed to just browsing the blame in the submodule repo directly...</p>",
        "id": 205249316,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595949545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205201999\">said</a>:</p>\n<blockquote>\n<p>Organizationally, I think it makes sense to start with moving llvm-project to the top. It is somewhat orthogonal to the proposal, but I think is clearly desirable for a very tangible benefit of easier grepping, etc (and not just to make structure more sane). It will also probably be the most painful one, with respect to fixing paths</p>\n</blockquote>\n<p>Is anyone opposed to doing this in 2 separate PRs (i.e. one to move llvm-project, llvmrust, rustc_llvm somewhere; one to move rustc_&lt;everything else&gt; to compiler/)?</p>",
        "id": 205249613,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595949695
    },
    {
        "content": "<p>More broadly, it seems reasonable for  llvm-project, llvmrust, rustc_llvm to live together somewhere, but having them all in the root seems bad. Should we move them all into <code>llvmrust</code> at the root? any thoughts?</p>",
        "id": 205249741,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595949748
    },
    {
        "content": "<p>Also, does anyone have opinions about moving the compiler tests? I think <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> had expressed some concerns. (Perhaps moving tests is a 3rd PR?)</p>",
        "id": 205252287,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595950836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> what exactly are \"compiler tests\"?</p>",
        "id": 205252359,
        "sender_full_name": "matklad",
        "timestamp": 1595950875
    },
    {
        "content": "<p>Things like <code>src/test/ui</code>? I <em>think</em> they should be treated not like compiler tests, but like \"implementation conformance tests\", and be somewhat independent of particular compiler implementation.</p>",
        "id": 205252451,
        "sender_full_name": "matklad",
        "timestamp": 1595950920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Its a good question. <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">compiler-team#336</a> says \"The <code>src/test</code> directory is split up to <code>compiler/test</code> and <code>src/test</code>\",</p>",
        "id": 205253386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595951360
    },
    {
        "content": "<p>I would personally say that the format of our diagnostics is a property of a specific compiler implementation</p>",
        "id": 205253447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595951386
    },
    {
        "content": "<p>and therefore <code>src/test/ui</code>, at least as <em>originally</em> envisaged, <strong>would</strong> be compiler-specific</p>",
        "id": 205253523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595951404
    },
    {
        "content": "<p>but there's probably a gradient of perspectives here</p>",
        "id": 205253660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595951465
    },
    {
        "content": "<p>certainly things like the <code>mir-opt</code> tests that <em>definitely</em> inspecting compiler-internal details should be considered compiler-specific. But that's in <code>src/test/mir-opt</code>, of course.</p>",
        "id": 205253802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595951522
    },
    {
        "content": "<p>In my mind, I was thinking everything in <code>src/test/</code> except for the <code>rustdoc</code> tests (<code>src/test/rustdoc*</code>)... Basically, if you change the compiler and it could impact the output of the test, it seems like that is a \"compiler test\"... but maybe I'm not thinking about some cases?</p>",
        "id": 205270296,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595959753
    },
    {
        "content": "<p>I'm open to tests being somewhere else, though</p>",
        "id": 205270330,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595959777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205197617\">said</a>:</p>\n<blockquote>\n<p>Slightly more out there: what do people think of removing the <code>rustc_</code> prefixes of all the crates? i.e. we would have crates <code>ast</code>, <code>span</code>, <code>mir</code>, <code>lexer</code>, <code>middle</code>, <code>lint</code>,  <code>traits</code>, etc...</p>\n</blockquote>\n<p>Many of the crate names are too generic for that, IMO.</p>",
        "id": 205271899,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595960606
    },
    {
        "content": "<p>Even those that are compiler related (e.g. <code>rustc_parse</code>) and not just generic (<code>rustc_data_structures</code>).</p>",
        "id": 205272070,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595960690
    },
    {
        "content": "<p>I like it as is, personally.</p>",
        "id": 205272170,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595960754
    },
    {
        "content": "<p>I guess my intuition is that if all crates have a <code>rustc_</code> prefix, it doesn't seem to add much beyond having everything in a <code>compiler/</code> directory... For example, the name <code>ty</code> doesn't seem any more or less descriptive than <code>rustc_ty</code> to me...</p>",
        "id": 205279516,
        "sender_full_name": "mark-i-m",
        "timestamp": 1595964399
    },
    {
        "content": "<p>Procedurally, removing <code>rustc_</code> prefix would require a lot of churn (and discussion), so it seems prudent to just table this discussion regardless of our opinions :-) Even if we do want to change all the imports, it's better done in a separate commit, to not mix rename &amp; change together. </p>\n<p>Also, don't listen to me about this: in rust-analyzer, half of the crates have <code>ra_</code> prefix and half don't :D</p>",
        "id": 205285260,
        "sender_full_name": "matklad",
        "timestamp": 1595967483
    },
    {
        "content": "<p>Ok, so for now, let's just remove the <code>lib*</code> prefix for now.</p>",
        "id": 205828663,
        "sender_full_name": "mark-i-m",
        "timestamp": 1596478766
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>: Proposal <a href=\"https://github.com/rust-lang/compiler-team/issues/336#issuecomment-674401773\">#336</a> has been seconded, and will be approved in 10 days if no objections are raised.</p>",
        "id": 207023082,
        "sender_full_name": "triagebot",
        "timestamp": 1597499859
    },
    {
        "content": "<p>I'm going to propose that we do two separate fcps: first for the existing PR and then for the remainder of the stuff mentioned in the MCP (tests, llvm, etc)</p>",
        "id": 207040855,
        "sender_full_name": "mark-i-m",
        "timestamp": 1597527971
    },
    {
        "content": "<p>This proposal has been accepted: <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">#336</a>.</p>",
        "id": 208142565,
        "sender_full_name": "triagebot",
        "timestamp": 1598472856
    },
    {
        "content": "<p>since mark is \"taking a break\", i'll be taking over any work that's involved with this <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 208988176,
        "sender_full_name": "DPC",
        "timestamp": 1599148254
    },
    {
        "content": "<p>nice suggestions from <a href=\"#narrow/stream/131828-t-compiler/topic/ninja\">this topic</a>... rename <code>library</code> to <code>lib</code> and <code>compiler</code> to <code>rustc</code>, and remove <code>rustc_</code> from dirs in <code>rustc/</code></p>",
        "id": 209050993,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1599188803
    },
    {
        "content": "<p>There was some discussion earlier in the thread about removing the <code>rustc_</code> prefixes and it sounded like that was a major undertaking for another time</p>",
        "id": 209097283,
        "sender_full_name": "mark-i-m",
        "timestamp": 1599228315
    },
    {
        "content": "<p>Because you would have to update all of the imports everywhere (unless you just wanted to change the directory without changing the crate name, which could also be reasonable)</p>",
        "id": 209097336,
        "sender_full_name": "mark-i-m",
        "timestamp": 1599228348
    },
    {
        "content": "<blockquote>\n<p>rename library to lib and compiler to rustc</p>\n</blockquote>\n<p>If we rename <code>compiler</code> to <code>rustc</code>, then <code>library</code> should become <code>std</code>, as per \"either both are proper nouns or both a common nouns\"</p>",
        "id": 209097491,
        "sender_full_name": "matklad",
        "timestamp": 1599228451
    },
    {
        "content": "<p>Are you suggesting we'd have <code>std/std</code>? Or keep <code>std/src</code> at the top and only nest the other crates?</p>",
        "id": 209098485,
        "sender_full_name": "cuviper",
        "timestamp": 1599229001
    },
    {
        "content": "<p><code>std/std</code></p>",
        "id": 209098719,
        "sender_full_name": "matklad",
        "timestamp": 1599229126
    },
    {
        "content": "<p>I feel like that would be confusing. Not everything in library corresponds to std, right?</p>",
        "id": 209115409,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599237626
    },
    {
        "content": "<p>it also has the runtime I think</p>",
        "id": 209115453,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599237656
    },
    {
        "content": "<p>There's discussion about this in the gh thread for the PR too...</p>",
        "id": 209149275,
        "sender_full_name": "mark-i-m",
        "timestamp": 1599261376
    },
    {
        "content": "<p>just realised that if we changed folder names, and kept the name in cargo.toml the same as the old one, we would have touch 0 imports in other places and thus have less conflicts but it's going to be confusing and a pain at some stage later <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 209149640,
        "sender_full_name": "DPC",
        "timestamp": 1599261836
    },
    {
        "content": "<p>created an issue for renaming compiler crates: <a href=\"https://github.com/rust-lang/rust/issues/76425\">https://github.com/rust-lang/rust/issues/76425</a></p>",
        "id": 209249989,
        "sender_full_name": "DPC",
        "timestamp": 1599441756
    },
    {
        "content": "<p>I quite like the fact that tests aren't contained in <code>compiler</code>. My main tool to search in the compiler is ripgrep and tests would add tons of noise in some cases. Has it been considered to leave tests inside <code>src/test</code> or move them to a top-level <code>test/</code> directory?</p>",
        "id": 210592082,
        "sender_full_name": "est31",
        "timestamp": 1600480969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205202579\">said</a>:</p>\n<blockquote>\n<p>Wow this will be so painful for all ongoing parallel development.^^ It will also make code archeology so much more annoying for the next few years as \"git blame\" is basically unable to follow renames. I hope y'all are convinced that such a hugely disruptive change is really worth it. IMO the current structure isn't great, but it also not so bad to justify so much pain. (Moving submodules is particularly painful in my experience, in particular huge ones like llvm-project.)</p>\n</blockquote>\n<p>Have you tried adding the <code>--follow</code> flag to git blame?</p>",
        "id": 210592172,
        "sender_full_name": "est31",
        "timestamp": 1600481126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120096\">est31</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/210592082\">said</a>:</p>\n<blockquote>\n<p>I quite like the fact that tests aren't contained in <code>compiler</code>. My main tool to search in the compiler is ripgrep and tests would add tons of noise in some cases. Has it been considered to leave tests inside <code>src/test</code> or move them to a top-level <code>test/</code> directory?</p>\n</blockquote>\n<p>Yes, the same with llvm. That's why the original PR left them where they are for now... I don't think anything has been decided yet</p>",
        "id": 210594446,
        "sender_full_name": "mark-i-m",
        "timestamp": 1600485236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120096\">est31</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/210592172\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Move.20the.20compiler.20to.20a.20new.20.60compiler.2F.60.20di.E2.80.A6.20compiler-team.23336/near/205202579\">said</a>:</p>\n<blockquote>\n<p>Wow this will be so painful for all ongoing parallel development.^^ It will also make code archeology so much more annoying for the next few years as \"git blame\" is basically unable to follow renames. I hope y'all are convinced that such a hugely disruptive change is really worth it. IMO the current structure isn't great, but it also not so bad to justify so much pain. (Moving submodules is particularly painful in my experience, in particular huge ones like llvm-project.)</p>\n</blockquote>\n<p>Have you tried adding the <code>--follow</code> flag to git blame?</p>\n</blockquote>\n<p>there's no way to do that in the GH UI, is there? I rarely use <code>git blame</code> directly.</p>",
        "id": 212218348,
        "sender_full_name": "RalfJ",
        "timestamp": 1601809725
    }
]