[
    {
        "content": "<p>I'm currently looking into this issue; though I haven't really read all of the documentation about how chalk works, i _think_ i have a good enough model of how prolog works, e.g. how it recursively applies rules in order to get to the final goal and backtracks if it went to the wrong direction</p>",
        "id": 151426366,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544510038
    },
    {
        "content": "<p>oh, looks like i was basically describing the <code>pursue_strand</code> function's objective!</p>",
        "id": 151426443,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544510157
    },
    {
        "content": "<p>i'm thinking of replacing the <code>Vec&lt;Literal&lt;C&gt;&gt;</code> into a <code>BinaryHeap&lt;Literal&lt;C&gt;&gt;</code>, so we can have insertion sort, and we can just pop the first one off the heap</p>",
        "id": 151429246,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544515146
    },
    {
        "content": "<p>hmm, it looks like we need to rearchitect a couple of things too, since <code>SelectedSubgoal</code> stores an index to the <code>subgoal: Vec&lt;Literal&lt;C&gt;&gt;</code> as defined on the X-clause</p>",
        "id": 151430471,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544517095
    },
    {
        "content": "<p>and I instead want <code>SelectedSubgoal</code> to store the <code>Literal&lt;C&gt;</code> directly so it manages the ownership</p>",
        "id": 151430529,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544517134
    },
    {
        "content": "<p>ok, that doesn't seem easy, because there seems to be two <code>Context</code> type parameters that I need to be aware of: <code>C</code> and <code>I</code></p>",
        "id": 151432211,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544519684
    },
    {
        "content": "<p>I need some way of converting a <code>Literal&lt;C&gt;</code> to a <code>Literal&lt;I&gt;</code>, and vice-versa</p>",
        "id": 151432279,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544519773
    },
    {
        "content": "<p>I'm now abandoning the idea of using a <code>BinaryHeap</code>, because there doesn't seem to be a clean way to interchange the <code>Literal</code> between contexts</p>",
        "id": 151557212,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544643298
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> =)</p>",
        "id": 151625224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1544723000
    },
    {
        "content": "<p>Hi</p>",
        "id": 151626631,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544724219
    },
    {
        "content": "<p>I instead now iterate over the vec of subgoals and use max() to determine the greatest (least amount of effort) subgoal</p>",
        "id": 151722984,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544726767
    },
    {
        "content": "<p>And manually implementing PartialOrd and Ord in a way that makes sense</p>",
        "id": 151723042,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544726825
    },
    {
        "content": "<p>I see</p>",
        "id": 151724134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1544727729
    },
    {
        "content": "<p>I am hoping that as we push chalk forward we'll have some \"real world\" data to help us out here</p>",
        "id": 151724152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1544727745
    },
    {
        "content": "<p>so, i have some (probably wrong) heuristics for this:</p>",
        "id": 151726631,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544729813
    },
    {
        "content": "<p>looking at the variants of the <code>Goal</code> enum, I've put <code>CannotProve</code> as the greatest, because there is basically no calculation involved with that goal</p>",
        "id": 151726746,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544729894
    },
    {
        "content": "<p>then it's <code>Leaf</code> &gt; <code>Not</code> &gt; <code>Quantified</code> &gt; <code>And</code> &gt; <code>Implies</code></p>",
        "id": 151726992,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544730097
    },
    {
        "content": "<p>the way i reached this order is just by counting the number of goals that each variant contains</p>",
        "id": 151727006,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544730118
    },
    {
        "content": "<p>that perhaps may not be the best way, and we might want to reorder <code>And</code>, <code>Not</code> and <code>Quantified</code> to be higher if the operation to separate them into individual <code>Leaf</code> goals is not that expensive</p>",
        "id": 151727149,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544730195
    },
    {
        "content": "<p>i do however think there should be an extensive way of ordering the <code>Leaf</code> goals</p>",
        "id": 151727181,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1544730228
    },
    {
        "content": "<p>opened a PR here <a href=\"https://github.com/rust-lang-nursery/chalk/pull/193\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/pull/193\">https://github.com/rust-lang-nursery/chalk/pull/193</a></p>",
        "id": 151906995,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1545012425
    },
    {
        "content": "<p>i'd still like to know if there's a way to benchmark these changes</p>",
        "id": 151906999,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1545012440
    },
    {
        "content": "<p>cool</p>",
        "id": 152035960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545060656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I believe you mentioned that you want to try a different approach instead?</p>",
        "id": 154681585,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1546985445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> yeah sorry I didn't get back to you</p>",
        "id": 155110447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547494869
    },
    {
        "content": "<p>maybe we can chat about this in a bit more depth after the meeting? (e.g., in ~20 minutes, or whenever that comes?) turns out my usual call in that slot got canceled</p>",
        "id": 155110466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547494896
    },
    {
        "content": "<p>sure thing, i should still be available</p>",
        "id": 155110731,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547495125
    },
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span></p>",
        "id": 155111750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547495942
    },
    {
        "content": "<p>first off left me review the PR :)</p>",
        "id": 155111755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547495943
    },
    {
        "content": "<p>Ah, right, so if I recall the PR worked by giving things an order</p>",
        "id": 155111806,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547495993
    },
    {
        "content": "<p>but I'd sort of prefer to make this more customizable</p>",
        "id": 155111809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547495998
    },
    {
        "content": "<p>one simple option would be to add a callback that can be used <a href=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/logic.rs#L487-L494\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/logic.rs#L487-L494\">here, when selecting the <code>subgoal_index</code></a></p>",
        "id": 155111951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496081
    },
    {
        "content": "<p>something that takes <code>&amp;strand.ex_clause</code> and returns a subgoal index</p>",
        "id": 155111980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496111
    },
    {
        "content": "<p>i briefly entertained the idea of giving subgoals a score</p>",
        "id": 155111986,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547496118
    },
    {
        "content": "<p>it seems like it's not necessary for us to be able to independently decide the priority of a subgoal without reference to other subgoals</p>",
        "id": 155112053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496141
    },
    {
        "content": "<p>but that scoring system can quickly become really complex</p>",
        "id": 155112054,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547496141
    },
    {
        "content": "<p>we basically just want to know \"what to do next\"</p>",
        "id": 155112069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496153
    },
    {
        "content": "<p>although in fact I imagine that the implementations often <em>will</em> have a fixed scheme</p>",
        "id": 155112076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496165
    },
    {
        "content": "<p>i.e., I think that rustc will deprioritize certain traits and built-in impls and things, particularly when there are unresolved inference variables within</p>",
        "id": 155112119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496195
    },
    {
        "content": "<p>hmm... looks like we need a way to peek deeply into the structure of a subgoal</p>",
        "id": 155112157,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547496230
    },
    {
        "content": "<p>hmm</p>",
        "id": 155112218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496251
    },
    {
        "content": "<p>well</p>",
        "id": 155112270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496300
    },
    {
        "content": "<p>I think the context will know all the types it needs</p>",
        "id": 155112285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496309
    },
    {
        "content": "<p>that is, we will be giving it a <a href=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/lib.rs#L110-L126\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/lib.rs#L110-L126\"><code>ExClause</code></a></p>",
        "id": 155112297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496331
    },
    {
        "content": "<p>the subgoals therein are a list of <a href=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/lib.rs#L193-L199\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/blob/0e30fab937f32294cda00e3e6b2e0811fcbdceba/chalk-engine/src/lib.rs#L193-L199\"><code>Literal</code></a></p>",
        "id": 155112325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496361
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">Literal</span><span class=\"o\">&lt;</span><span class=\"n\">C</span>: <span class=\"nc\">Context</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// FIXME: pub b/c fold</span>\n<span class=\"w\">    </span><span class=\"n\">Positive</span><span class=\"p\">(</span><span class=\"n\">C</span>::<span class=\"n\">GoalInEnvironment</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Negative</span><span class=\"p\">(</span><span class=\"n\">C</span>::<span class=\"n\">GoalInEnvironment</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 155112385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496377
    },
    {
        "content": "<p>looks like I intended for this stuff to be private, but it ain't</p>",
        "id": 155112391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496382
    },
    {
        "content": "<p>anyway, the <code>C::GoalInEnvironment</code> is something that the context knows</p>",
        "id": 155112410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496397
    },
    {
        "content": "<p>e.g., <a href=\"https://github.com/rust-lang/rust/blob/d10680818b2a0aabb76e6a07098e031b31707fcc/src/librustc_traits/chalk_context/mod.rs#L97\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/d10680818b2a0aabb76e6a07098e031b31707fcc/src/librustc_traits/chalk_context/mod.rs#L97\">here is the definition in rustc</a></p>",
        "id": 155112463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496447
    },
    {
        "content": "<p>so it ought to be able to figure out which thing it wants to pick</p>",
        "id": 155112480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496475
    },
    {
        "content": "<p>i see, looks like we need some more helper methods/functions in the Context to let us decide what should be evaluated next</p>",
        "id": 155112558,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547496534
    },
    {
        "content": "<p>rather than having the bulk of the logic placed in <code>logic.rs</code></p>",
        "id": 155112584,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547496555
    },
    {
        "content": "<p>I think .. probably just one method</p>",
        "id": 155112781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496724
    },
    {
        "content": "<p>but that is what I had in mind, yeah</p>",
        "id": 155112793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496730
    },
    {
        "content": "<p>I'm trying to decide in which trait it belongs =)</p>",
        "id": 155112808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496776
    },
    {
        "content": "<p>I think either probably the <code>InferenceTable</code> trait</p>",
        "id": 155112910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496868
    },
    {
        "content": "<p>or else a new trait analogous to <code>TruncateOps</code> and <code>UnificationOps</code></p>",
        "id": 155112929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496889
    },
    {
        "content": "<p>i.e., <code>SelectionOps</code></p>",
        "id": 155112940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547496899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> <a href=\"https://github.com/rust-lang-nursery/chalk/issues/80#issuecomment-454146753\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/80#issuecomment-454146753\">summarized here</a></p>",
        "id": 155113165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547497111
    },
    {
        "content": "<p>sound good?</p>",
        "id": 155113171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547497116
    },
    {
        "content": "<p>Once this lands, next step will be to configure the rustc side :)</p>",
        "id": 155113179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547497124
    },
    {
        "content": "<p>yeah, let's see what i can come up with</p>",
        "id": 155113202,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1547497160
    }
]