[
    {
        "content": "<p>I've been using GATs a little bit. One use case is being able to abstract over lock implementations and their read/write guards. Something like</p>\n<div class=\"codehilite\"><pre><span></span><code>trait Lock&lt;T&gt; {\n   type ReadGuard&lt;&#39;a&gt;: Deref&lt;Target=T&gt; where T: &#39;a;\n}\n</code></pre></div>",
        "id": 248403737,
        "sender_full_name": "pl",
        "timestamp": 1628108773
    },
    {
        "content": "<p>Ooh, neat</p>",
        "id": 248403899,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628108874
    },
    {
        "content": "<p>Would you also have a <code>WriteGuard</code>?</p>",
        "id": 248404124,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628108973
    },
    {
        "content": "<p>Yeah, it looks about the same just with DerefMut. For something like std's <code>Mutex</code> the implementation is the same.</p>\n<p>It can cover all std's locks and crossbeams. I haven't played with any others</p>",
        "id": 248404294,
        "sender_full_name": "pl",
        "timestamp": 1628109048
    },
    {
        "content": "<p>Nice!</p>",
        "id": 248406487,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628109835
    },
    {
        "content": "<p>Thanks for sharing :)</p>",
        "id": 248406538,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628109852
    }
]