[
    {
        "content": "<p>Hey, we've seen this assertion trigger in rust-analyzer a number of times: <a href=\"https://github.com/rust-lang/chalk/blob/df09cc603c0cff9ed95e5554055d483fdd756fbc/chalk-engine/src/logic.rs#L106\" target=\"_blank\" title=\"https://github.com/rust-lang/chalk/blob/df09cc603c0cff9ed95e5554055d483fdd756fbc/chalk-engine/src/logic.rs#L106\">https://github.com/rust-lang/chalk/blob/df09cc603c0cff9ed95e5554055d483fdd756fbc/chalk-engine/src/logic.rs#L106</a>, the most recent issue is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1927\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1927\">https://github.com/rust-analyzer/rust-analyzer/issues/1927</a>.</p>\n<p>The failure seems somewhat non-deterministic (it only triggers if invoke compiletion in a particular way). Does this assert means some internal problem in chalk, or are we holding it wrong?</p>",
        "id": 176736123,
        "sender_full_name": "matklad",
        "timestamp": 1569582100
    },
    {
        "content": "<p>hmm</p>",
        "id": 176758961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599674
    },
    {
        "content": "<p>mmmmmmmmmm I wonder</p>",
        "id": 176758987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599699
    },
    {
        "content": "<p>it could be perhaps that salsa is panicking</p>",
        "id": 176759001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599705
    },
    {
        "content": "<p>and that chalk is not panic-safe</p>",
        "id": 176759011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599710
    },
    {
        "content": "<p>(I bet that's correct)</p>",
        "id": 176759020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599719
    },
    {
        "content": "<p>e.g., if there were a panic in one of the callbacks that occurred when solving someting</p>",
        "id": 176759041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599737
    },
    {
        "content": "<p>we'd probably leave things in <code>self.stack</code></p>",
        "id": 176759066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599759
    },
    {
        "content": "<p>and then if you call back in, you'll see that error <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 176759113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599765
    },
    {
        "content": "<p>I can open an issue with some notes on what it would take to fix, probably do-able</p>",
        "id": 176759118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569599773
    },
    {
        "content": "<p>sounds plausible. When we panic due to cancellation, we advance the revision, which will cause chalk's engine to be re-created (b/c its a volatile query), however there's still a window of opportunity to observe chalk in this revision</p>",
        "id": 176759891,
        "sender_full_name": "matklad",
        "timestamp": 1569600299
    },
    {
        "content": "<p>I've just tried to reproduce this without cancellation, and I see 30 seconds requestsion, but now panics. So, the plausible narrative is that, in this case, chalk takes too long to infer something (which is an unrelated problem). However, because it's slow, it's likely to observe cancellation, which additionally triggers a panic. I think we can easily  do a work-around on our side, by using a mutex with poisoning around the <code>chalk_solve::Solver</code>. We currently use <code>parking_lot::Mutex</code></p>",
        "id": 176760275,
        "sender_full_name": "matklad",
        "timestamp": 1569600586
    },
    {
        "content": "<p>Heh, I am looking into <em>why</em> <code>UnwindSafe</code> didn't caught this issue, and I think that we didn't fix that cyclic  bound problem in salsa, and instread I've just put AssertUnwindSafe around db</p>",
        "id": 176760795,
        "sender_full_name": "matklad",
        "timestamp": 1569600943
    },
    {
        "content": "<p>Hello <code>overflow evaluating the requirement db::RootDatabase: ra_hir::db::HirDatabase</code>, my old friend...</p>",
        "id": 176760947,
        "sender_full_name": "matklad",
        "timestamp": 1569601081
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/chalk/issues/260\" target=\"_blank\" title=\"https://github.com/rust-lang/chalk/issues/260\">https://github.com/rust-lang/chalk/issues/260</a></p>",
        "id": 177596972,
        "sender_full_name": "matklad",
        "timestamp": 1570526884
    }
]