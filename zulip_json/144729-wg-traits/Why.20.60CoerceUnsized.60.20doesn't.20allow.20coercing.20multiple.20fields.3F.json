[
    {
        "content": "<p>I was playing around with <code>!Sized</code> types and containers, and was surprised when for <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=df2e48659d450b90583f7be774388b2e\">this code</a> the compiler produced the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Refs</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"c1\">// Refs&lt;T&gt; -&gt; Refs&lt;U&gt;</span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span>: <span class=\"o\">'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span>: <span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Unsize</span><span class=\"o\">&lt;</span><span class=\"n\">U</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span>: <span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">CoerceUnsized</span><span class=\"o\">&lt;</span><span class=\"n\">Refs</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Refs</span><span class=\"o\">&lt;'</span><span class=\"na\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>error[E0375]: implementing the trait `CoerceUnsized` requires multiple coercions\n --&gt; src/lib.rs:9:52\n  |\n9 | impl&lt;&#39;a, &#39;b: &#39;a, T: ?Sized + Unsize&lt;U&gt;, U: ?Sized&gt; CoerceUnsized&lt;Refs&lt;&#39;a, U&gt;&gt; for Refs&lt;&#39;b, T&gt; {}\n  |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ requires multiple coercions\n  |\n  = note: `CoerceUnsized` may only be implemented for a coercion between structures with one field being coerced\n  = note: currently, 2 fields need coercions: `0` (`&amp;&#39;b T` to `&amp;&#39;a U`), `1` (`&amp;&#39;b T` to `&amp;&#39;a U`)\n</code></pre></div>\n<p>The error explanation seems to be written about <code>Unsize</code>...</p>\n<p>I understand why we cant <em>unsize</em> multiple fields (e.g. <code>(A, B)</code> -&gt; <code>(dyn Send, dyn Send)</code>) but what's the problem with the coercion? In this case all fields of the struct stay sized, so it's no different than <code>&amp;T -&gt; &amp;U</code> coercion.</p>",
        "id": 255735614,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1633091509
    },
    {
        "content": "<p>This restriction exists in the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\">RFC</a> (\"There must be only one non-PhantomData field that is coerced.\"), but it is not explained.</p>",
        "id": 255736852,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1633092093
    }
]