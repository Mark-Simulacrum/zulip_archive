[
    {
        "content": "<p>Nightly builds for Chalk are currently triggering an ICE, I'm looking into it</p>",
        "id": 204700868,
        "sender_full_name": "detrumi",
        "timestamp": 1595440980
    },
    {
        "content": "<p>The error is <code>type parameter </code>S/#2<code> (S/2) out of range when substituting ...</code>, triggering in one of the closures of <code>WfSolver::verify_adt_decl</code></p>",
        "id": 204701034,
        "sender_full_name": "detrumi",
        "timestamp": 1595441073
    },
    {
        "content": "<p>(In the meantime, I filed a PR to at least allow CI to continue even if nightly fails <a href=\"https://github.com/rust-lang-nursery/chalk/issues/580\">chalk#580</a>)</p>",
        "id": 204703269,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1595442115
    },
    {
        "content": "<p>Huh, I was wondering why I couldn't reproduce it, but <code>cargo check</code> succeeds, and it only triggers the ICE on <code>cargo build</code></p>",
        "id": 204705317,
        "sender_full_name": "detrumi",
        "timestamp": 1595443048
    },
    {
        "content": "<p>(if it's related to polymorphization, try <code>-Zpolymorphize=off</code>until the PR fixing that issue lands)</p>",
        "id": 204707904,
        "sender_full_name": "lqd",
        "timestamp": 1595444228
    },
    {
        "content": "<p>A large part of the stack trace is indeed in <code>monomorphize/collector.rs</code></p>",
        "id": 204708666,
        "sender_full_name": "detrumi",
        "timestamp": 1595444547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  Can I pass that flag using cargo? Using <code>RUSTFLAGS=\"-Zpolymorphize=off\"</code> gives me <code>error: unknown debugging option: polymorphize</code></p>",
        "id": 204708856,
        "sender_full_name": "detrumi",
        "timestamp": 1595444642
    },
    {
        "content": "<p>that's weird, you should be able to</p>",
        "id": 204708917,
        "sender_full_name": "lqd",
        "timestamp": 1595444672
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/pull/74633\">https://github.com/rust-lang/rust/pull/74633</a> is the PR which will turn it back off by default)</p>",
        "id": 204708998,
        "sender_full_name": "lqd",
        "timestamp": 1595444726
    },
    {
        "content": "<p>it should only fail like so on the latest nightly, where the polymorphize option should be recognized</p>",
        "id": 204709137,
        "sender_full_name": "lqd",
        "timestamp": 1595444784
    },
    {
        "content": "<p>Yup, started failing today</p>",
        "id": 204709176,
        "sender_full_name": "detrumi",
        "timestamp": 1595444807
    },
    {
        "content": "<p>it should also be present in the <code>-Z help</code> output</p>",
        "id": 204709251,
        "sender_full_name": "lqd",
        "timestamp": 1595444843
    },
    {
        "content": "<p>(otherwise maybe a rustup override somewhere is picking an older nightly ?)</p>",
        "id": 204709370,
        "sender_full_name": "lqd",
        "timestamp": 1595444883
    },
    {
        "content": "<p>Hmm yeah, looks like I used an older nightly somewhere</p>",
        "id": 204709773,
        "sender_full_name": "detrumi",
        "timestamp": 1595445157
    },
    {
        "content": "<p>but if you used an older nightly... how would it be the polymorphization issue?</p>",
        "id": 204709852,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595445208
    },
    {
        "content": "<p>I was mixing up some commands, that's why</p>",
        "id": 204709989,
        "sender_full_name": "detrumi",
        "timestamp": 1595445282
    },
    {
        "content": "<p>Detective Shep on the case :p (ah you're just \"jake\" here)</p>",
        "id": 204710055,
        "sender_full_name": "lqd",
        "timestamp": 1595445307
    },
    {
        "content": "<p>Just checked with a local rustc build of <a href=\"https://github.com/rust-lang/rust/issues/74633\">#74633</a>, and that does indeed fix the Chalk ICE <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 204710326,
        "sender_full_name": "detrumi",
        "timestamp": 1595445467
    },
    {
        "content": "<p>Interesting how the error was 4 closures deep in a function returning <code>Result&lt;()&gt;</code>, and only triggered when the function was actually called somewhere</p>",
        "id": 204711132,
        "sender_full_name": "detrumi",
        "timestamp": 1595445927
    },
    {
        "content": "<p>I wonder if this is worth a bug report</p>",
        "id": 204711216,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595445963
    },
    {
        "content": "<p>the bug is likely a manifestation of <a href=\"https://github.com/rust-lang/rust/issues/74636\">https://github.com/rust-lang/rust/issues/74636</a></p>",
        "id": 204711251,
        "sender_full_name": "lqd",
        "timestamp": 1595445995
    },
    {
        "content": "<p>\"closures that inherit unused parameters\" sounds like what's happening here, yeah</p>",
        "id": 204711453,
        "sender_full_name": "detrumi",
        "timestamp": 1595446130
    }
]