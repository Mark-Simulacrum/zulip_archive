[
    {
        "content": "<p>Oh right, I can't clone because it's a trait method, should I add <code>Clone</code> bounds everywhere? <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 215673412,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604555243
    },
    {
        "content": "<p><code>T: Clone</code>?</p>",
        "id": 215673751,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604555718
    },
    {
        "content": "<p>Or are you talking about something different than the impl</p>",
        "id": 215673753,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604555732
    },
    {
        "content": "<p>But, we could <em>maybe</em> just add a <code>: Clone</code> bound to <code>Foldable</code></p>",
        "id": 215673758,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604555751
    },
    {
        "content": "<p><code>T: Clone</code>. Wait, that's not a trait method. But I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `G: Clone` is not satisfied\n   --&gt; chalk-ir/src/lib.rs:115:45\n    |\n115 |   #[derive(Clone, Debug, PartialEq, Eq, Hash, Fold, Visit)]\n    |                                               ^^^^ the trait `Clone` is not implemented for `G`\n    |\n   ::: chalk-ir/src/fold.rs:350:5\n    |\n350 | /     fn fold_with&lt;&#39;i&gt;(\n351 | |         self,\n352 | |         folder: &amp;mut dyn Folder&lt;&#39;i, I, TI&gt;,\n353 | |         outer_binder: DebruijnIndex,\n...   |\n356 | |         I: &#39;i,\n357 | |         TI: &#39;i;\n    | |_______________- required by `fold::Fold::fold_with`\n    |\n    = note: required because of the requirements on the impl of `fold::Fold&lt;_I, _TI&gt;` for `&amp;G`\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider further restricting type parameter `G`\n    |\n115 | #[derive(Clone, Debug, PartialEq, Eq, Hash, Fold, G: Clone, Visit)]\n    |                                                 ^^^^^^^^^^\n</code></pre></div>",
        "id": 215673893,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604555921
    },
    {
        "content": "<p>That's when you add <code>T: Clone</code> for the <code> Fold&lt;I, TI&gt; for &amp;'a T</code> impl?</p>",
        "id": 215674043,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604556122
    },
    {
        "content": "<p>Yes, <code>impl&lt;'a, T: Fold&lt;I, TI&gt; + Clone, I: Interner, TI: TargetInterner&lt;I&gt;&gt; Fold&lt;I, TI&gt; for &amp;'a T</code></p>",
        "id": 215674170,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604556277
    },
    {
        "content": "<p>So that's <code>struct InEnvironment&lt;G: HasInterner&gt;</code></p>",
        "id": 215674313,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604556495
    },
    {
        "content": "<p>If you just add <code>G: Clone</code>?</p>",
        "id": 215674500,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604556825
    },
    {
        "content": "<p>(or is this a more widespread problem?)</p>",
        "id": 215674506,
        "sender_full_name": "Jack Huey",
        "timestamp": 1604556836
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `_U: Clone` is not satisfied\n   --&gt; chalk-ir/src/lib.rs:115:45\n    |\n115 | #[derive(Clone, Debug, PartialEq, Eq, Hash, Fold, Visit)]\n    |                                             ^^^^ the trait `Clone` is not implemented for `_U`\n116 | #[allow(missing_docs)]\n117 | pub struct InEnvironment&lt;G: HasInterner + Clone&gt; {\n    |                                           ----- required by this bound in `InEnvironment`\n    |\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider further restricting this bound\n    |\n115 | #[derive(Clone, Debug, PartialEq, Eq, Hash, Fold + Clone, Visit)]\n    |                                                  ^^^^^^^\n</code></pre></div>\n<p>Wow, that's a new one :D</p>",
        "id": 215674566,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604556907
    },
    {
        "content": "<p>I added more <code>Clone</code> bounds and now it complains about <code>Substitution::apply</code> moving out of a reference, which seems reasonable, but I don't understand why it worked before</p>",
        "id": 215674847,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604557386
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/pull/644/commits/e59b6e91d3355dde9f39f92f374f81e1fe592282\">https://github.com/rust-lang/chalk/pull/644/commits/e59b6e91d3355dde9f39f92f374f81e1fe592282</a> only adds extra bounds, I don't understand why it makes the borrow checker complained, since the previous code compiled. It's as if something stopped being <code>Copy</code> because I asked it to be <code>Clone</code></p>",
        "id": 215675161,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604557884
    },
    {
        "content": "<p>Maybe I could keep piling on more bounds, but if feels a bit wrong</p>",
        "id": 215675166,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604557902
    },
    {
        "content": "<p>That <code>Fold + Clone</code> inside the derive looks wrong (the second time it's referencing line 115). Are we generating bounds wrong inside the derive macro, or is the error message wrong?</p>",
        "id": 215695102,
        "sender_full_name": "detrumi",
        "timestamp": 1604573038
    },
    {
        "content": "<p>The message was wrong. I updated the derive macro (it's on the branch), but other stuff is not compiling now, and it used to work before</p>",
        "id": 215699309,
        "sender_full_name": "Laurențiu",
        "timestamp": 1604575790
    },
    {
        "content": "<p>What's the status of your fold-by-value PR <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> ?</p>",
        "id": 216928176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605558873
    },
    {
        "content": "<p>i have to rebase and still want to spend some time looking into why we have a 0.5% perf loss</p>",
        "id": 216928267,
        "sender_full_name": "lcnr",
        "timestamp": 1605558923
    },
    {
        "content": "<p>i hope i can get to it this week</p>",
        "id": 216928471,
        "sender_full_name": "lcnr",
        "timestamp": 1605558991
    },
    {
        "content": "<p>lol I just realized I'm the reviewer</p>",
        "id": 216928773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605559141
    },
    {
        "content": "<p>well yeah <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> you already approved it</p>",
        "id": 216928810,
        "sender_full_name": "lcnr",
        "timestamp": 1605559168
    },
    {
        "content": "<p>I was wondering because I was thinking about how to approach this idea of refactoring how rustc handles <code>ty::Param</code> and early bound regions</p>",
        "id": 216928990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605559270
    },
    {
        "content": "<p>and it is somewhat relevant</p>",
        "id": 216928994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605559275
    },
    {
        "content": "<p>not a big deal either way though, I'll be able to rebase over it</p>",
        "id": 216929011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605559283
    },
    {
        "content": "<p><code>&amp;self</code> is mildly more convenient to start probably</p>",
        "id": 216929019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605559287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the PR should be ready for merge</p>",
        "id": 216936640,
        "sender_full_name": "lcnr",
        "timestamp": 1605562988
    },
    {
        "content": "<p>wanna quickly look over it again or should I just reapprove myself?</p>",
        "id": 216936711,
        "sender_full_name": "lcnr",
        "timestamp": 1605563030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> you can r=me</p>",
        "id": 216936833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605563090
    },
    {
        "content": "<p>will do<br>\n<span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/fold.20by.20value/near/216928471\">said</a>:</p>\n<blockquote>\n<p>i hope i can get to it this week</p>\n</blockquote>\n<p>tbh, if someone were to ping me every 2 hours rustc would be finished in less than a month</p>",
        "id": 216937027,
        "sender_full_name": "lcnr",
        "timestamp": 1605563182
    }
]