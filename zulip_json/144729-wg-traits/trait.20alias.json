[
    {
        "content": "<p>Has there been any work done on modeling trait aliases in chalk?</p>",
        "id": 212380122,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1601953548
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 212384379,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601959378
    },
    {
        "content": "<p>Seems doable to add a <code>AliasEq</code> type for that</p>",
        "id": 212467789,
        "sender_full_name": "detrumi",
        "timestamp": 1602009547
    },
    {
        "content": "<p>For <em>trait</em> aliases?</p>",
        "id": 212469892,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602010597
    },
    {
        "content": "<p>I think are a bit more complicated</p>",
        "id": 212469906,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602010604
    },
    {
        "content": "<p>Err, I meant <code>TraitEq</code>, but yes?</p>",
        "id": 212469964,
        "sender_full_name": "detrumi",
        "timestamp": 1602010639
    },
    {
        "content": "<p>haven't looked at how they are implemented in rustc</p>",
        "id": 212470108,
        "sender_full_name": "detrumi",
        "timestamp": 1602010697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> my expectation was that they would be treated as first-class things with rules to translate back and forth</p>",
        "id": 212476610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014075
    },
    {
        "content": "<p>I'd love to see work on that</p>",
        "id": 212476614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014079
    },
    {
        "content": "<p>How would that affect TraitRef? Would we make <code>TraitId</code> refer to both traits and trait aliases, or would we need <code>enum TraitOrAlias { Trait(TraitId), Alias(AliasId) }</code>?</p>",
        "id": 212477089,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1602014309
    },
    {
        "content": "<p>uh</p>",
        "id": 212478305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014788
    },
    {
        "content": "<p>not sure :)</p>",
        "id": 212478309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014791
    },
    {
        "content": "<p>I'd prefer <code>TraitId</code> refers to both, I <em>think</em></p>",
        "id": 212478319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014798
    }
]