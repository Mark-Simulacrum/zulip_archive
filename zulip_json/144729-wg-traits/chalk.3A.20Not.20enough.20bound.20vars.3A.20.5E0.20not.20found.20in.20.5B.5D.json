[
    {
        "content": "<p>(Apologies if this is the wrong place for such questions, I'm quite new to all this!)</p>\n<p>I'm getting this error <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_traits/src/chalk/db.rs#L485\">here</a> when compiling this code</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">lol</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://gist.github.com/Dirbaio/2b9374ff4fce37afb9d665dc9f0000df\">logs</a></p>\n<p>It happens when the future has no lifetimes at all. Is the added BoundVar supposed to refer to the chalk binder <code>existential_binder</code>?</p>",
        "id": 272734501,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477190
    },
    {
        "content": "<p>This error is occurring while you've made modifications to the compiler? Otherwise, what version are you compiling with?</p>",
        "id": 272734674,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645477277
    },
    {
        "content": "<p>(also, compiling under <code>-Z chalk</code>?)</p>",
        "id": 272734711,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645477302
    },
    {
        "content": "<p>unmodified master (other than a few added debug logs). Yes, -Zchalk</p>",
        "id": 272734719,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477308
    },
    {
        "content": "<p>Works without -Zchalk</p>",
        "id": 272734801,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477348
    },
    {
        "content": "<p>I think the check only happens with debug assertions? I have <code>[rust] debug=true</code> in config.toml</p>",
        "id": 272734854,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477406
    },
    {
        "content": "<p>yes, it's this check here failing <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/ty/sty.rs#L1164\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/ty/sty.rs#L1164</a></p>",
        "id": 272735122,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477622
    },
    {
        "content": "<p>so the issue is the added BoundVar with index 0 is invalid when folding, it only bevomes valid later when wrapping it into the <code>existential_binder</code></p>",
        "id": 272735238,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477695
    },
    {
        "content": "<p>is there any way to rewrite this so it's no longer temporarily invalid? I'll try PRing it</p>",
        "id": 272735265,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645477730
    },
    {
        "content": "<p>Probably some problem with either the rust-&gt;chalk or chalk-&gt;rust \"lowering\"</p>",
        "id": 272735582,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645478013
    },
    {
        "content": "<p>I would have to look at some logs to be able to give any more specific advice here</p>",
        "id": 272735664,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645478060
    },
    {
        "content": "<p>here are the logs <a href=\"https://gist.github.com/Dirbaio/2b9374ff4fce37afb9d665dc9f0000df\">https://gist.github.com/Dirbaio/2b9374ff4fce37afb9d665dc9f0000df</a><br>\nthe troublesome fold is here <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_traits/src/chalk/db.rs#L485\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_traits/src/chalk/db.rs#L485</a></p>",
        "id": 272735705,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645478107
    },
    {
        "content": "<p>Suspicious if there is a type that has a bound var that is escaping out of a binder somewhere..</p>",
        "id": 272735865,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645478237
    },
    {
        "content": "<p>If you can't figure it out <span class=\"user-mention\" data-user-id=\"348152\">@Dario Nieuwenhuis</span> then let me know, and I can probably take a stab at it.</p>",
        "id": 272735879,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645478257
    },
    {
        "content": "<p>the bound var that causes the fail is this one <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_traits/src/chalk/db.rs#L492\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_traits/src/chalk/db.rs#L492</a><br>\nit doesn't come from earlier</p>",
        "id": 272735945,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645478296
    },
    {
        "content": "<p>oh, maybe that <code>ty::INNERMOST</code> debruijn index needs to get shifted if we enter into a binder in the <code>BottomUpFolder</code></p>",
        "id": 272735995,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645478349
    },
    {
        "content": "<p>oh yeah that's suspicious as well, it seems to me we want the outermost one?</p>",
        "id": 272736197,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645478511
    },
    {
        "content": "<p>yeah, <code>BottomUpFolder</code>s are not binder-aware, as I've found in other issues</p>",
        "id": 272736257,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645478543
    },
    {
        "content": "<p>ah so the issue is that yep</p>",
        "id": 272736431,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645478665
    },
    {
        "content": "<p>what's the best way around it? writing a custom folder?</p>",
        "id": 272736486,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645478718
    },
    {
        "content": "<p>You could start with that!</p>",
        "id": 272738312,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645480305
    },
    {
        "content": "<p>got it, it seems to be working :D</p>",
        "id": 272738499,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645480459
    },
    {
        "content": "<p>how do I test this? tests are typically run without debug assertions right?</p>",
        "id": 272738537,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645480509
    },
    {
        "content": "<p>which is why this wasn't caught</p>",
        "id": 272738541,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645480516
    },
    {
        "content": "<p><code>// compile-flags: -C debug-assertions -Z chalk</code> perhaps?</p>",
        "id": 272738567,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645480552
    },
    {
        "content": "<p>(add it to a UI test)</p>",
        "id": 272738574,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645480558
    },
    {
        "content": "<p>it needs rustc itself to be built with debug assertions to catch it</p>",
        "id": 272738620,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645480579
    },
    {
        "content": "<p>oh oops, sorry that might enable debug assertions in the test program, lol</p>",
        "id": 272738647,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645480618
    },
    {
        "content": "<p>the previous code seems quite wrong, it probably causes issues other than failing that debug-assertion, that should be testable</p>",
        "id": 272738678,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645480656
    },
    {
        "content": "<p>the above code still doesn't build though. I guess generators are still super WIP in chalk?</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `[static lol::{closure#0} upvar_tys=(unavailable)]: Generator&lt;ResumeTy&gt;` is not satisfied\n  --&gt; snippets/good.rs:2:29\n   |\n2  |   async fn lol(x: u32) -&gt; u32 {\n   |  _____________________________^\n3  | |     x\n4  | | }\n   | |_^ the trait `Generator&lt;ResumeTy&gt;` is not implemented for `[static lol::{closure#0} upvar_tys=(unavailable)]`\n   |\nnote: required by a bound in `from_generator`\n  --&gt; /home/dirbaio/rust/library/core/src/future/mod.rs:67:8\n   |\n67 |     T: Generator&lt;ResumeTy, Yield = ()&gt;,\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `from_generator`\n\nerror[E0280]: the requirement `&lt;[static lol::{closure#0} upvar_tys=(unavailable)] as Generator&lt;ResumeTy&gt;&gt;::Yield == ()` is not satisfied\n  --&gt; snippets/good.rs:2:29\n   |\n2  |   async fn lol(x: u32) -&gt; u32 {\n   |  _____________________________^\n3  | |     x\n4  | | }\n   | |_^\n   |\nnote: required by a bound in `from_generator`\n  --&gt; /home/dirbaio/rust/library/core/src/future/mod.rs:67:28\n   |\n67 |     T: Generator&lt;ResumeTy, Yield = ()&gt;,\n   |                            ^^^^^^^^^^ required by this bound in `from_generator`\n\nerror[E0280]: the requirement `&lt;Opaque(DefId(2:13176 ~ core[23f5]::future::from_generator::{opaque#0}), [[static lol::{closure#0} upvar_tys=(unavailable)]]) as Future&gt;::Output == u32` is not satisfied\n --&gt; snippets/good.rs:2:25\n  |\n2 | async fn lol(x: u32) -&gt; u32 {\n  |                         ^^^\n\nerror: aborting due to 3 previous errors\n</code></pre></div>",
        "id": 272742422,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645484052
    },
    {
        "content": "<p>Generators are a known issue I think</p>",
        "id": 272742437,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484077
    },
    {
        "content": "<p>Will have to look at this later</p>",
        "id": 272742439,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484084
    },
    {
        "content": "<p>at least with my fix it no longer ICEs, should I still PR it?</p>",
        "id": 272742472,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645484118
    },
    {
        "content": "<p>Yes :)</p>",
        "id": 272742485,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484133
    },
    {
        "content": "<p>r? me for that</p>",
        "id": 272742490,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484142
    },
    {
        "content": "<p>with a test that enforces that doesn't ICE? or should I not bother?</p>",
        "id": 272742504,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645484156
    },
    {
        "content": "<p>Sure, this would be a good use case for the <code>known-bug</code> attribute</p>",
        "id": 272742564,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484188
    },
    {
        "content": "<p>Just make a src/test/ui/chalk/bugs directory</p>",
        "id": 272742581,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484210
    },
    {
        "content": "<p>// check-fail<br>\n// known-bug</p>\n<p>?</p>",
        "id": 272742600,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645484237
    },
    {
        "content": "<p>And // compile-flags: -Z chalk</p>",
        "id": 272742638,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645484279
    },
    {
        "content": "<p>nice, thanks! :D</p>",
        "id": 272742683,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645484289
    },
    {
        "content": "<p>done! :D <a href=\"https://github.com/rust-lang/rust/issues/94235\">#94235</a></p>",
        "id": 272743752,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1645485219
    },
    {
        "content": "<p>Thanks, I'll take a look later :)</p>",
        "id": 272743822,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645485288
    }
]