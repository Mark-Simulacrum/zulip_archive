[
    {
        "content": "<p>Also, Niko: <a href=\"https://github.com/rust-lang/rust/issues/84377\">#84377</a> :)</p>",
        "id": 235412486,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951702
    },
    {
        "content": "<p>To add to your pile</p>",
        "id": 235412528,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951727
    },
    {
        "content": "<p><code>+283 −399</code></p>",
        "id": 235412564,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951745
    },
    {
        "content": "<p>I was gonna say, I think I'll go do some reviews...</p>",
        "id": 235412565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951746
    },
    {
        "content": "<p>Gotta love that</p>",
        "id": 235412573,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951748
    },
    {
        "content": "<p>Is this what I think it is?</p>",
        "id": 235412631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951780
    },
    {
        "content": "<p>I think we can call the meeting here then</p>",
        "id": 235412632,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951780
    },
    {
        "content": "<p>Yes it is :)</p>",
        "id": 235412644,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-20/near/235412631\">said</a>:</p>\n<blockquote>\n<p>Is this what I think it is?</p>\n</blockquote>\n<p>looks like it is</p>",
        "id": 235412647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951789
    },
    {
        "content": "<p>nice</p>",
        "id": 235412659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951792
    },
    {
        "content": "<p>i'm so happy to see <code>trait_ref_hack</code> go :)</p>",
        "id": 235412698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951803
    },
    {
        "content": "<p>Still have to figure out the <code>ReErased</code> issue</p>",
        "id": 235412734,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951805
    },
    {
        "content": "<p>Me too</p>",
        "id": 235412742,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951810
    },
    {
        "content": "<p>Yeah, we'll circle back to that</p>",
        "id": 235412755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951817
    },
    {
        "content": "<p>this is the generator thing?</p>",
        "id": 235412770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951823
    },
    {
        "content": "<p>Theoretically, we could also now just allow nested binders</p>",
        "id": 235412780,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-20/near/235412770\">said</a>:</p>\n<blockquote>\n<p>this is the generator thing?</p>\n</blockquote>\n<p>yes</p>",
        "id": 235412794,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951830
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-20/near/235412780\">said</a>:</p>\n<blockquote>\n<p>Theoretically, we could also now just allow nested binders</p>\n</blockquote>\n<p>but that's for some future time</p>",
        "id": 235412821,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951841
    },
    {
        "content": "<p>beautiful comments &lt;3</p>",
        "id": 235412836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951847
    },
    {
        "content": "<p>Luckily most of those just had to be pulled from other places that got deleted</p>",
        "id": 235412884,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951868
    },
    {
        "content": "<p>But I tried</p>",
        "id": 235412892,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951871
    },
    {
        "content": "<p>oh wait</p>",
        "id": 235412946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951896
    },
    {
        "content": "<p>well, I'll just leave comments</p>",
        "id": 235412969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951904
    },
    {
        "content": "<p>Did I do something wrong :/</p>",
        "id": 235412991,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951914
    },
    {
        "content": "<p>nope, just a minor improvement I think we can make</p>",
        "id": 235413053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951928
    },
    {
        "content": "<p>Okay I'll make them like right now</p>",
        "id": 235413098,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951947
    },
    {
        "content": "<p>Then gonna do the GATs work</p>",
        "id": 235413126,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951962
    },
    {
        "content": "<p>Hmm, trying to decide if I should make a project board for Chalk-related things</p>",
        "id": 235413171,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951987
    },
    {
        "content": "<p>I was going to say that</p>",
        "id": 235413193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618951994
    },
    {
        "content": "<p>But really it's just a list of things</p>",
        "id": 235413195,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618951994
    },
    {
        "content": "<p>I would like to revisit the 'chalk ty' plans</p>",
        "id": 235413211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952004
    },
    {
        "content": "<p>but not today</p>",
        "id": 235413219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952006
    },
    {
        "content": "<p>i'm not sure that I ike the project board format but it was useful to put things in that structure for now</p>",
        "id": 235413234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952016
    },
    {
        "content": "<p>Skill tree bum dum bum bum</p>",
        "id": 235413271,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952033
    },
    {
        "content": "<p>lol</p>",
        "id": 235413453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952110
    },
    {
        "content": "<p>what is <code>LangItemTrait</code>?</p>",
        "id": 235413477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952118
    },
    {
        "content": "<p><code>?Sized</code>?</p>",
        "id": 235413495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952124
    },
    {
        "content": "<p>wow, it's criminal that we don't have doc comments on these variants</p>",
        "id": 235413546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952152
    },
    {
        "content": "<p>I don't know</p>",
        "id": 235413930,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952292
    },
    {
        "content": "<p>The only place it pops up in is in <code>async</code> functions I think</p>",
        "id": 235413976,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952308
    },
    {
        "content": "<p>So I thought maybe <code>Future</code>?</p>",
        "id": 235413991,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952314
    },
    {
        "content": "<p>yeah i think I get it</p>",
        "id": 235413998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952316
    },
    {
        "content": "<p>I legit have no clue.</p>",
        "id": 235414034,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952327
    },
    {
        "content": "<p>I'm not sure what it's <em>for</em></p>",
        "id": 235414040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952328
    },
    {
        "content": "<p>I probably reviewed it lol</p>",
        "id": 235414070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952338
    },
    {
        "content": "<p>And tried to mess with that code a bit and it didn't work and I gave up</p>",
        "id": 235414123,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952353
    },
    {
        "content": "<p>looks like it is only used for <code>Future</code></p>",
        "id": 235414413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <a href=\"https://github.com/rust-lang/rust/pull/84377#pullrequestreview-640412816\">review</a></p>",
        "id": 235414876,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952511
    },
    {
        "content": "<p>Hmm</p>",
        "id": 235415055,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952538
    },
    {
        "content": "<p>If the ast validation fails do we still go through type checking?</p>",
        "id": 235415245,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952577
    },
    {
        "content": "<p>Broke this into its own topic</p>",
        "id": 235415251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952578
    },
    {
        "content": "<p>Not sure</p>",
        "id": 235415296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952585
    },
    {
        "content": "<p>Does it matter?</p>",
        "id": 235415319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952589
    },
    {
        "content": "<p>No :)</p>",
        "id": 235415355,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952594
    },
    {
        "content": "<p>I would expect us to just accept <code>for&lt;'a&gt; T: for&lt;'b&gt;</code></p>",
        "id": 235415371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952600
    },
    {
        "content": "<p>honestly we should probably just make it not an error</p>",
        "id": 235415391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952605
    },
    {
        "content": "<p>but I'd rather do that with its own very clean, simple PR</p>",
        "id": 235415435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952618
    },
    {
        "content": "<p>I don't know if there's any reason for it to be</p>",
        "id": 235415448,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952621
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 235415464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952627
    },
    {
        "content": "<p>Is there any reason to also just...make those two binding scopes...</p>",
        "id": 235415637,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952669
    },
    {
        "content": "<p>(with different depths)</p>",
        "id": 235415668,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952678
    },
    {
        "content": "<p>huh?</p>",
        "id": 235415840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952722
    },
    {
        "content": "<p>like, as opposed to concatenating?</p>",
        "id": 235415868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952728
    },
    {
        "content": "<p>I expect them to concatenate for the same reason we concatenate anything</p>",
        "id": 235415910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952743
    },
    {
        "content": "<p>but I can see it being useful to be able to do (e.g.)</p>",
        "id": 235415936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952749
    },
    {
        "content": "<p>Yes, as opposed to concatenating</p>",
        "id": 235415977,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952760
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"kt\">u32</span>: <span class=\"nc\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">TraitC</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 235416009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952764
    },
    {
        "content": "<p>how could we express that?</p>",
        "id": 235416102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952783
    },
    {
        "content": "<p>I mean, <code>'a</code> just becomes <code>'^1.0</code> instead of <code>'^0.0</code></p>",
        "id": 235416299,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952840
    },
    {
        "content": "<p>I don't think this makes anything different</p>",
        "id": 235416426,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952881
    },
    {
        "content": "<p>the point is that we only have one level of binder in the resulting <code>Predicate</code></p>",
        "id": 235416539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952901
    },
    {
        "content": "<p>isn't it?</p>",
        "id": 235416641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618952927
    },
    {
        "content": "<p>Err yeah</p>",
        "id": 235416680,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952942
    },
    {
        "content": "<p>you're right <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>‍♀️</p>",
        "id": 235416695,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618952946
    },
    {
        "content": "<p>Let me look at the ast validation</p>",
        "id": 235417096,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618953066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> how long will you be around?</p>",
        "id": 235417875,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618953257
    },
    {
        "content": "<p>I'm here, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 235421233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618954926
    },
    {
        "content": "<p>Okay, hopefully I'll have an answer on whether I can do this in the 5 minutes</p>",
        "id": 235423610,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618956294
    },
    {
        "content": "<p>So</p>",
        "id": 235426947,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958266
    },
    {
        "content": "<p>How the heck do we not get an error with:</p>",
        "id": 235426956,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958275
    },
    {
        "content": "<p><code>for&lt;'a&gt; dyn for&lt;'b&gt; Foo</code></p>",
        "id": 235426972,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958283
    },
    {
        "content": "<p>(\"nested quantification of lifetimes\")</p>",
        "id": 235427017,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958293
    },
    {
        "content": "<p>Ah right, because <code>trait_ref_hack</code> isn't <code>true</code> around the ty itself</p>",
        "id": 235427216,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958433
    },
    {
        "content": "<p>do we want an error?</p>",
        "id": 235427240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618958448
    },
    {
        "content": "<p>is that legal?</p>",
        "id": 235427241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618958449
    },
    {
        "content": "<p>Yes, it's legal</p>",
        "id": 235427253,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958460
    },
    {
        "content": "<p>I think I expected the <code>for</code> to come after the <code>dyn</code></p>",
        "id": 235427255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618958462
    },
    {
        "content": "<p>d'oh :)</p>",
        "id": 235427259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618958464
    },
    {
        "content": "<p>well</p>",
        "id": 235427263,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958469
    },
    {
        "content": "<p>uh</p>",
        "id": 235427267,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958470
    },
    {
        "content": "<p>it's <code>for&lt;'a&gt; dyn for&lt;'b&gt; Foo: Bar</code></p>",
        "id": 235427290,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958490
    },
    {
        "content": "<p><code>dyn for&lt;'b&gt; Foo</code> is the self ty</p>",
        "id": 235427303,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618958505
    },
    {
        "content": "<p>I see</p>",
        "id": 235431374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618961100
    },
    {
        "content": "<p>Did you try out the ast validation approach, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> ?</p>",
        "id": 235431490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618961177
    },
    {
        "content": "<p>Yes, I got to work but I don't think I can get through the cleanup right now</p>",
        "id": 235431671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618961322
    },
    {
        "content": "<p>Got busy</p>",
        "id": 235431677,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618961325
    },
    {
        "content": "<p>I'll have it tomorrow morning for sure</p>",
        "id": 235431684,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618961338
    },
    {
        "content": "<p>Done :)</p>",
        "id": 235465700,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618989251
    },
    {
        "content": "<p>Left another review</p>",
        "id": 235507832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619011167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> addressed your comments</p>",
        "id": 235535448,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020424
    },
    {
        "content": "<p>reading now</p>",
        "id": 235535963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619020616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> left some more thoughts</p>",
        "id": 235536560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619020843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so</p>",
        "id": 235536708,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020907
    },
    {
        "content": "<p>For the <code>LangItemTrait</code> code</p>",
        "id": 235536734,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020918
    },
    {
        "content": "<p>So, I tried to remove that</p>",
        "id": 235536769,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020923
    },
    {
        "content": "<p>And a few tests failed</p>",
        "id": 235536791,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020929
    },
    {
        "content": "<p>specifically around something like <code>async fn foo() -&gt; impl Trait</code></p>",
        "id": 235536815,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619020942
    },
    {
        "content": "<p>And it's not immediately obvious to me how that hits the <code>visit_param_bound</code> code...</p>",
        "id": 235537016,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021026
    },
    {
        "content": "<p>But I realized that now we only need <code>Normal</code>/<code>Concatenating</code> <code>BinderScopeType</code>s</p>",
        "id": 235537291,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021127
    },
    {
        "content": "<p><code>binders_and_scope_type_for_poly_trait_ref</code> that's a long name...</p>",
        "id": 235537796,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/PR.20.2384377/near/235537291\">said</a>:</p>\n<blockquote>\n<p>But I realized that now we only need <code>Normal</code>/<code>Concatenating</code> <code>BinderScopeType</code>s</p>\n</blockquote>\n<p>I think we need 3 types?</p>",
        "id": 235537947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619021363
    },
    {
        "content": "<p>there needs to at least be an 'other' or something</p>",
        "id": 235537986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619021382
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/PR.20.2384377/near/235536815\">said</a>:</p>\n<blockquote>\n<p>specifically around something like <code>async fn foo() -&gt; impl Trait</code></p>\n</blockquote>\n<p>hmm</p>",
        "id": 235538019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619021397
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/PR.20.2384377/near/235537986\">said</a>:</p>\n<blockquote>\n<p>there needs to at least be an 'other' or something</p>\n</blockquote>\n<p>I don't think so. Looking through the code (and thinking about it), we don't have to do anything special for <code>PolyTraitRef</code> vs <code>Other</code></p>",
        "id": 235538163,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021436
    },
    {
        "content": "<p>Because of <code>TraitRefBoundary</code></p>",
        "id": 235538174,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021441
    },
    {
        "content": "<p>The only thing we lose is that \"Expected all syntacic poly trait refs to be surrounded by a <code>TraitRefBoundary</code>\" assertion</p>",
        "id": 235538841,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619021686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> pushed another commit</p>",
        "id": 235540788,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619022506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> ok, I agree that TraitRefBoundary serves the same purpose</p>",
        "id": 235580750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619038969
    },
    {
        "content": "<p>I think i meant the <code>other</code> as an alternative to trait-ref-boundary</p>",
        "id": 235580918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619039000
    },
    {
        "content": "<p>but trait-ref-boundary may be a nicer sol'n overall</p>",
        "id": 235580972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619039018
    },
    {
        "content": "<p>+254 -422</p>",
        "id": 235581132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619039058
    },
    {
        "content": "<p>nice</p>",
        "id": 235581137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619039058
    },
    {
        "content": "<p>Yeah, but I'm not sure we can <em>only</em> use <code>Other</code>/<code>PolyTraitRef</code></p>",
        "id": 235581308,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619039115
    },
    {
        "content": "<p>Because of the <code>for&lt;'a&gt; fn() -&gt; Box&lt;dyn for&lt;'b&gt; Foo&gt;</code> bit</p>",
        "id": 235581431,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619039146
    },
    {
        "content": "<p>since we need some way of demarcating the concatenation boundary</p>",
        "id": 235581617,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619039194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Does your approval mean r+?</p>",
        "id": 235584178,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619039963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> poke before you get off for the day :) ^^</p>",
        "id": 235593793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619045122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you have such a good eye. Fixing the bug you spotted (this PR) fixed <a href=\"https://github.com/rust-lang/rust/issues/83017\">#83017</a> and <a href=\"https://github.com/rust-lang/rust/issues/81193\">#81193</a></p>",
        "id": 235859018,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619190920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> nice!</p>",
        "id": 235859412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619191029
    },
    {
        "content": "<p>More tests to add for me :D</p>",
        "id": 235863308,
        "sender_full_name": "marmeladema",
        "timestamp": 1619192565
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/rust-lang/rust/pull/84485\">https://github.com/rust-lang/rust/pull/84485</a> to add those tests</p>",
        "id": 235874590,
        "sender_full_name": "marmeladema",
        "timestamp": 1619197297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> don't really have time now, but do the errors for <a href=\"https://github.com/rust-lang/rust/issues/83017\">#83017</a> make sense to you?</p>",
        "id": 235875058,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619197453
    },
    {
        "content": "<p>When CI is green, you can <code>@bors r=jackh726</code></p>",
        "id": 235875277,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619197550
    },
    {
        "content": "<p>I am honestly having a hard time deciphering the code of the test right now^^</p>",
        "id": 235876252,
        "sender_full_name": "marmeladema",
        "timestamp": 1619197938
    },
    {
        "content": "<p>Np. I'll check it later</p>",
        "id": 235879103,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619199152
    }
]