[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/GAT.20Bugs.20.2376826.2C.20.2376407/near/240323599\">said</a>:</p>\n<blockquote>\n<p>my kingdom for the ability to fold logs</p>\n</blockquote>\n<p>do you think you could provide a short (yet complete) example of what the logs look like?  <a href=\"https://gist.github.com/detrumi/179079d7065bb4f5720797b1cdbed646\">this example</a> appears incomplete (and is impressively massive).</p>\n<p>alternatively, instructions for generating a short (yet complete) example would be great, too</p>",
        "id": 240420408,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1622091021
    },
    {
        "content": "<p>Many of them will be incomplete: <code>chalk</code> gets into a loop, you run it with logging enabled, and press Ctrl-C when stuff no longer fits into one line.</p>",
        "id": 240425027,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622097067
    },
    {
        "content": "<p>I think the idea is to produce folding spans from lines with <code>┐</code> to those with <code>┘</code> on the same column</p>",
        "id": 240425126,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622097180
    },
    {
        "content": "<p>as I told Niko yesterday, if you replace the characters that tracing uses to show indents at the beginning of the lines with spaces, then vscode will allow folding to this file out of the box (or at least on a smaller version of this file, which is what I have tested)</p>",
        "id": 240425149,
        "sender_full_name": "lqd",
        "timestamp": 1622097227
    },
    {
        "content": "<p>I must have missed that, but yeah, I expected something like this to work</p>",
        "id": 240425287,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622097354
    },
    {
        "content": "<p>it's ok, the 3 of us can share that kingdom he promised <span aria-label=\"clown\" class=\"emoji emoji-1f921\" role=\"img\" title=\"clown\">:clown:</span> — I’m not sure tracing allows overriding these characters? it would be nice if it did, maybe we can make a PR for that</p>",
        "id": 240425482,
        "sender_full_name": "lqd",
        "timestamp": 1622097490
    },
    {
        "content": "<p>I should write a script to do that</p>",
        "id": 240436718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622105622
    },
    {
        "content": "<p>What do you need to replace them with?</p>",
        "id": 240437439,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622106136
    },
    {
        "content": "<p><a href=\"https://gist.github.com/nikomatsakis/aa87dd60b673e49e39ffcdb0737b36fd\">https://gist.github.com/nikomatsakis/aa87dd60b673e49e39ffcdb0737b36fd</a></p>",
        "id": 240438301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622106679
    },
    {
        "content": "<p>not the prettiest sript in the world, but it works</p>",
        "id": 240438314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622106684
    },
    {
        "content": "<p>should probably write it in Rust, given the size of the logs we sometimes want to work with :)</p>",
        "id": 240438429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622106735
    },
    {
        "content": "<p>Ah, so Code can fold by indentation</p>",
        "id": 240442331,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622109250
    },
    {
        "content": "<p>It's fairly simple to add an env var that changes tracing's output. It does have a whitespace mode built in, no need to touch tracing-tree itself. But yea, you can also just search and replace the ASCII art chars</p>",
        "id": 240450745,
        "sender_full_name": "oli",
        "timestamp": 1622114415
    },
    {
        "content": "<p>i skimmed the tracing docs, but i haven't yet found out how to enabling the ascii art charts in its output (while testing with the small yak shaving example from their readme)</p>",
        "id": 240460991,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1622119577
    },
    {
        "content": "<p>It's tracing-tree that does it</p>",
        "id": 240462188,
        "sender_full_name": "oli",
        "timestamp": 1622120101
    },
    {
        "content": "<p>There's only one use of it in rustc, so you can grep for the use site</p>",
        "id": 240462281,
        "sender_full_name": "oli",
        "timestamp": 1622120137
    },
    {
        "content": "<p>You can also pipe them through <code>tr '│ ├─┐─┘' ' '</code></p>",
        "id": 240462841,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622120390
    },
    {
        "content": "<p>Uhh</p>",
        "id": 240462857,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622120398
    },
    {
        "content": "<p>Something like that</p>",
        "id": 240462868,
        "sender_full_name": "Laurențiu",
        "timestamp": 1622120402
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/compiler/rustc_driver/src/lib.rs b/compiler/rustc_driver/src/lib.rs</span>\n<span class=\"gh\">index 18114634209..a7e482077f9 100644</span>\n<span class=\"gd\">--- a/compiler/rustc_driver/src/lib.rs</span>\n<span class=\"gi\">+++ b/compiler/rustc_driver/src/lib.rs</span>\n<span class=\"gu\">@@ -1270,12 +1270,12 @@ pub fn init_env_logger(env: &amp;str) {</span>\n     let filter = tracing_subscriber::EnvFilter::from_env(env);\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_writer(io::stderr)\n<span class=\"gd\">-        .with_indent_lines(true)</span>\n<span class=\"gi\">+        .with_indent_lines(false)</span>\n         .with_ansi(color_logs)\n         .with_targets(true)\n         .with_wraparound(10)\n<span class=\"gd\">-        .with_verbose_exit(true)</span>\n<span class=\"gd\">-        .with_verbose_entry(true)</span>\n<span class=\"gi\">+        .with_verbose_exit(false)</span>\n<span class=\"gi\">+        .with_verbose_entry(false)</span>\n         .with_indent_amount(2);\n     #[cfg(parallel_compiler)]\n     let layer = layer.with_thread_ids(true).with_thread_names(true);\n</code></pre></div>",
        "id": 240468652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122825
    },
    {
        "content": "<p>forget the script, this is what you want :)</p>",
        "id": 240468666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122833
    },
    {
        "content": "<p>I'm not sure you about the verbose exit/entry, but <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> suggested it</p>",
        "id": 240468691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122846
    },
    {
        "content": "<p>I'm also not sure how I feel about wraparound</p>",
        "id": 240468715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122856
    },
    {
        "content": "<p>but I see the logic</p>",
        "id": 240468735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122862
    },
    {
        "content": "<p>we should probably make this configurable in the environment more easily</p>",
        "id": 240468747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122872
    },
    {
        "content": "<p>Agreed</p>",
        "id": 240468756,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622122878
    },
    {
        "content": "<p>RUSTC_LOG_SETTINGS=\"nice | not-nice\"</p>",
        "id": 240468794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622122894
    },
    {
        "content": "<p>Honestly, the verbose entry/exit is just too messy for me</p>",
        "id": 240468912,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622122926
    },
    {
        "content": "<p>Does vscode automatically allow collapsing without the indent lines?</p>",
        "id": 240468953,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622122948
    },
    {
        "content": "<p>I actually find those helpful</p>",
        "id": 240468969,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622122958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/log.20folding/near/240468953\">said</a>:</p>\n<blockquote>\n<p>Does vscode automatically allow collapsing without the indent lines?</p>\n</blockquote>\n<p>it does</p>",
        "id": 240469415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622123151
    },
    {
        "content": "<p>there might be other settings that would permit it to auto-indent</p>",
        "id": 240469440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622123160
    },
    {
        "content": "<p>haven't experimented</p>",
        "id": 240469455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622123163
    },
    {
        "content": "<p>hmm</p>",
        "id": 240469522,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622123183
    },
    {
        "content": "<p>that's good at least</p>",
        "id": 240469533,
        "sender_full_name": "Jack Huey",
        "timestamp": 1622123186
    },
    {
        "content": "<p>i'd accept a PR for tracing-tree that replaces the intendentation with spaces, if that's not a thing that already exists</p>",
        "id": 240511511,
        "sender_full_name": "David Barsky",
        "timestamp": 1622140553
    },
    {
        "content": "<p>it already exists: <a href=\"https://docs.rs/tracing-tree/0.1.9/tracing_tree/struct.HierarchicalLayer.html#method.with_indent_lines\">https://docs.rs/tracing-tree/0.1.9/tracing_tree/struct.HierarchicalLayer.html#method.with_indent_lines</a></p>",
        "id": 240511608,
        "sender_full_name": "oli",
        "timestamp": 1622140600
    },
    {
        "content": "<p>lol, shows me</p>",
        "id": 240527413,
        "sender_full_name": "David Barsky",
        "timestamp": 1622147658
    }
]