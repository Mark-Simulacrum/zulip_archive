[
    {
        "content": "<p>So while debugging why a certain trait goal doesn't yet work in rust-analyzer, I thought it'd be nice if we could easily know which subgoal actually failed (sure, I can look at the log, but...). And actually, it seems rustc is able to do this at least sometimes for diagnostic purposes, e.g. in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=34c71ae9ca579c8df22ee495b465a6cc\">this case</a>. So something like this should be in scope for Chalk as well, right?</p>",
        "id": 197716866,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1589560133
    },
    {
        "content": "<p>Yeah, this is definitely something I've thought about</p>",
        "id": 197735751,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589568555
    },
    {
        "content": "<p>I'm curious how much easier this would be to try to implement with tracing</p>",
        "id": 197735771,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589568570
    },
    {
        "content": "<p>well so</p>",
        "id": 197754728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589578153
    },
    {
        "content": "<p>I think this is probably somewhat more straightforward in the recursive solver</p>",
        "id": 197754782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589578183
    },
    {
        "content": "<p>I guess it depends whether you're talking about \"for debugging\" or \"for error reporting\"</p>",
        "id": 197754796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589578195
    },
    {
        "content": "<p>I think the latter is more interesting :)</p>",
        "id": 197754802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589578199
    },
    {
        "content": "<p>well, I came from the debugging, but I thought if we need the error reporting interface anyway, that might serve the debugging usecase as well</p>",
        "id": 197783040,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1589615952
    },
    {
        "content": "<p>Hi all! Indeed if the solver returns <code>None</code>, I'm not sure how to produce a meaningful diagnostic to show to the user. Is there any way with the current Chalk version to get some more information? Even a small bit of information is potentially very useful. For example, suppose we have:</p>\n<div class=\"codehilite\"><pre><span></span><code>trait Foobar { }\nstruct Binary&lt;T1: Foobar, T2: Foobar&gt; { }\n\nstruct Left { }\nstruct Right { }\n\nimpl Foobar for Left { }\n\nWellFormed(Binary&lt;Left, Right&gt;);\n</code></pre></div>\n\n\n<p>In this case it would already be much more helpful if a compiler using Chalk could establish that <code>Binary&lt;Left, [[Right]]&gt;</code> is causing the failure instead of rejecting the type entirely. This still wouldn't be nearly as useful as Rustc's current error messages, but it would definitely be an improvement.</p>",
        "id": 200019811,
        "sender_full_name": "Tim",
        "timestamp": 1591528704
    },
    {
        "content": "<p>Yeah right now we don't give much for useful feedback</p>",
        "id": 200160492,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591653080
    },
    {
        "content": "<p>I'm not sure the best way to do that</p>",
        "id": 200160495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591653083
    }
]