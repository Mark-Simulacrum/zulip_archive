[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> -- are you around for me to ask questions of?</p>",
        "id": 174558015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567180976
    },
    {
        "content": "<p>To start, you posed these numbers in another topic:</p>\n<blockquote>\n<p>Well, it seems like it might. Here are numbers for analyzing the Chalk repo:<br>\nEverything enumerable, using fuel: 20.685380613s<br>\nEverything enumerable, without fuel: 20.752197389s<br>\nEverything enumerable, removing our hardcoded blacklist of 'bad' traits (Send, Sync, Sized, the Fn traits): seems to hang indefinitely<br>\nMarking those traits as non-enumerable instead: 21.311616989s</p>\n</blockquote>\n<p>where did they come from and how did you get them?</p>",
        "id": 174558046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567181002
    },
    {
        "content": "<p>yes</p>",
        "id": 174558397,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567181250
    },
    {
        "content": "<p>I just ran ra_cli's <code>analysis-stats</code> command by hand, nothing scientific ;)</p>",
        "id": 174558468,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567181291
    },
    {
        "content": "<p>(we've run into new cases where trait solving takes a long time since then though: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1684\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1684\">https://github.com/rust-analyzer/rust-analyzer/issues/1684</a>)</p>",
        "id": 174558521,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567181341
    },
    {
        "content": "<p>Do you have some open issues or other things with steps to reproduce really painful slowdowns?</p>",
        "id": 174558536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567181352
    },
    {
        "content": "<p>I guess that's an example :)</p>",
        "id": 174558559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567181363
    },
    {
        "content": "<p>Though I was hoping for something a bit more .. \"reduced\"</p>",
        "id": 174559089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567181671
    },
    {
        "content": "<p>Yeah, I haven't looked into that case in detail either so far</p>",
        "id": 174559203,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567181755
    },
    {
        "content": "<p>I could do that later today and try to create a small example if you think it'll help though ;)</p>",
        "id": 174560444,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567182645
    },
    {
        "content": "<p>I think this hurts a lot lately: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/1684#issuecomment-526589665\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/1684#issuecomment-526589665\">https://github.com/rust-analyzer/rust-analyzer/issues/1684#issuecomment-526589665</a></p>",
        "id": 174560953,
        "sender_full_name": "matklad",
        "timestamp": 1567182971
    },
    {
        "content": "<p>I think that's mainly because we're using Chalk in more cases though</p>",
        "id": 174561013,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567183030
    },
    {
        "content": "<p>OK, so, I've been reading into the code. I've been collecting some notes in <a href=\"https://paper.dropbox.com/doc/Chalk-2019-08-30-notes--Aj0kSd2UK0M_JpT~fCqNhNq9Ag-uoYGdXeqT26rvIsLtHxUV\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Chalk-2019-08-30-notes--Aj0kSd2UK0M_JpT~fCqNhNq9Ag-uoYGdXeqT26rvIsLtHxUV\">this paper document</a>, though they're more notes to myself.</p>",
        "id": 174564348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185363
    },
    {
        "content": "<p>I think that the integration of normalization into rust-analyzer doesn't quite look like the \"lazy normalization\" design we are shooting for in rusc.</p>",
        "id": 174564363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185377
    },
    {
        "content": "<p>I also think I see a good sol'n to the fuel problem</p>",
        "id": 174564389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185405
    },
    {
        "content": "<p>hmm, that may not be entirely true</p>",
        "id": 174564431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185452
    },
    {
        "content": "<p>in any case I was thinking that, with some relatively minimal tweaks, we can modify how chalk's solver works so that it doesn't have as many \"loops\" -- in particular, handling of cyclic impls today potentially requires iterating over <em>all</em> impls</p>",
        "id": 174564507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185498
    },
    {
        "content": "<p>I think my ideal would be that fuel is more-or-less moved out from chalk and I think we could move closer to that -- though I realize that it's possible that even processing one strand might require a lot of <em>recursion</em></p>",
        "id": 174564543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185543
    },
    {
        "content": "<p>that said, the other thing I remember now that I want to investigate is that I want to look at the \"other side\" of how the integration with rust-analyzer is working -- i.e., the data that chalk pulls from r-a about what traits/impls exists. I sort of remember thinking that we needed to improve that setup, and I've kind of forgotten where it stands now.</p>",
        "id": 174564588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567185589
    },
    {
        "content": "<p>I was meaning to ask about lazy normalization, since I couldn't find any explanation of it -- my impression was that it means normalization happens during unification (resulting in additional obligations), but I'm not very clear on what practical difference that makes</p>",
        "id": 174565271,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567186054
    },
    {
        "content": "<p>Concerning fuel, I did try a bit to reorganize the chalk solver loop so we could handle it from the outside, but it wasn't so easy because after getting the first solution, the loop has to run a bit further to determine whether the answer is ambiguous</p>",
        "id": 174565458,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567186170
    },
    {
        "content": "<p>yes. that will still be needed. the main thing we can do is move those invocations a bit out so they can be interrupted if you no longer care</p>",
        "id": 174565749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567186334
    },
    {
        "content": "<p>Btw <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> did you see the issue I opened in the chalk repo? It outlines two other problems I ran into with associated types that I could use feedback on. Maybe they're related to the lazy normalization thing</p>",
        "id": 174565845,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1567186412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> nope, I'll check out now</p>",
        "id": 174567129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567187308
    },
    {
        "content": "<p>to a 1st approx you can assume I see no github notifications :P</p>",
        "id": 174567136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567187316
    }
]