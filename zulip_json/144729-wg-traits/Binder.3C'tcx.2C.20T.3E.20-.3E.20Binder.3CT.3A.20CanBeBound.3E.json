[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 229745390,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615410689
    },
    {
        "content": "<p>so I was wondering ... why don't we go first after the <code>HasInterner</code> migration?</p>",
        "id": 229745500,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615410724
    },
    {
        "content": "<p>yeah, I think that we can't do the <code>CanBeBound</code> without it</p>",
        "id": 229745583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615410754
    },
    {
        "content": "<p>in that case, what would be required to do the <code>HasInterner</code> change?</p>",
        "id": 229746784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615411216
    },
    {
        "content": "<p>do you guys know more or less? or can give me a high level picture?</p>",
        "id": 229746818,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615411230
    },
    {
        "content": "<p>I can also try to figure that out but would be nice to know if we are also far from making that change or if it's something doable :)</p>",
        "id": 229746891,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615411254
    },
    {
        "content": "<p>hmm</p>",
        "id": 229747050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615411313
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> probably has a clearer picture there</p>",
        "id": 229747153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615411344
    },
    {
        "content": "<p>Right, so <code>CanBeBound</code> is roughly the same has <code>HasInterner</code></p>",
        "id": 229747365,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615411443
    },
    {
        "content": "<p>But there potentially might be a smaller subset of things we might need to impl <code>CanBeBound</code> vs <code>HasInterner</code>, if we're just looking at <code>Binder</code></p>",
        "id": 229747500,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615411499
    },
    {
        "content": "<p>But it might just make sense to start on the <code>HasInterner</code>/ <code>Interner</code></p>",
        "id": 229747538,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615411515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Binder.3C'tcx.2C.20T.3E.20-.3E.20Binder.3CT.3A.20CanBeBound.3E/near/229747365\">said</a>:</p>\n<blockquote>\n<p>Right, so <code>CanBeBound</code> is roughly the same has <code>HasInterner</code></p>\n</blockquote>\n<p>the thing is, we don't have associated lifetimes</p>",
        "id": 229747891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615411675
    },
    {
        "content": "<p>so it really has to be an associated <em>type</em></p>",
        "id": 229747899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615411681
    },
    {
        "content": "<p>which really wants to be <code>TyCtxt&lt;'tcx&gt;</code> or whatever</p>",
        "id": 229747959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615411692
    },
    {
        "content": "<p>Right, <code>CanBeBound</code> would be like <code>trait CanBeBound { type BoundVariableKinds; }</code></p>",
        "id": 229748564,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615411932
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"255061\">@LÃ©o Lanteri Thauvin</span> had prepared some PRs, right</p>",
        "id": 229751065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615412860
    },
    {
        "content": "<p>for moving things out into a separate library</p>",
        "id": 229751083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615412867
    },
    {
        "content": "<p>what's the current status of that work? Seems like something <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> could continue</p>",
        "id": 229751101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615412877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Binder.3C'tcx.2C.20T.3E.20-.3E.20Binder.3CT.3A.20CanBeBound.3E/near/229748564\">said</a>:</p>\n<blockquote>\n<p>Right, <code>CanBeBound</code> would be like <code>trait CanBeBound { type BoundVariableKinds; }</code></p>\n</blockquote>\n<p>I kept wondering is this what we want or we want just to go straight to <code>Internet</code>/<code>HasInternet</code> and map that to <code>TyCtxt&lt;'tcx&gt;</code> from Rustc?</p>",
        "id": 229751870,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1615413196
    },
    {
        "content": "<p>I'm pretty sure all of the existing PRs have been merged (from a quick look, I didn't find any). <span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> and <span class=\"user-mention\" data-user-id=\"283967\">@Zahari Dichev</span> have been doing some work in <a href=\"https://github.com/rust-lang/rust/compare/master...zaharidichev:move-encodable-to-type-ir\">https://github.com/rust-lang/rust/compare/master...zaharidichev:move-encodable-to-type-ir</a> to help with moving out <code>Encodable</code>/<code>Decodable</code> - or, at least making it so we can generate the impls in <code>rustc_type_ir</code></p>",
        "id": 229752246,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615413353
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Binder.3C'tcx.2C.20T.3E.20-.3E.20Binder.3CT.3A.20CanBeBound.3E/near/229751870\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Binder.3C'tcx.2C.20T.3E.20-.3E.20Binder.3CT.3A.20CanBeBound.3E/near/229748564\">said</a>:</p>\n<blockquote>\n<p>Right, <code>CanBeBound</code> would be like <code>trait CanBeBound { type BoundVariableKinds; }</code></p>\n</blockquote>\n<p>I kept wondering is this what we want or we want just to go straight to <code>Internet</code>/<code>HasInternet</code> and map that to <code>TyCtxt&lt;'tcx&gt;</code> from Rustc?</p>\n</blockquote>\n<p>Probably just <code>Interner</code>/<code>HasInterner</code></p>",
        "id": 229752318,
        "sender_full_name": "Jack Huey",
        "timestamp": 1615413370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Binder.3C'tcx.2C.20T.3E.20-.3E.20Binder.3CT.3A.20CanBeBound.3E/near/229752246\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> and <span class=\"user-mention silent\" data-user-id=\"283967\">Zahari Dichev</span> have been doing some work in <a href=\"https://github.com/rust-lang/rust/compare/master...zaharidichev:move-encodable-to-type-ir\">https://github.com/rust-lang/rust/compare/master...zaharidichev:move-encodable-to-type-ir</a> to help with moving out <code>Encodable</code>/<code>Decodable</code> - or, at least making it so we can generate the impls in <code>rustc_type_ir</code></p>\n</blockquote>\n<p>Yes, that's almost at the point where we can start moving the types themselves</p>",
        "id": 229752794,
        "sender_full_name": "detrumi",
        "timestamp": 1615413566
    }
]