[
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6b4b610a58ee3236b8df1d5f776d578e\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6b4b610a58ee3236b8df1d5f776d578e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6b4b610a58ee3236b8df1d5f776d578e</a></p>",
        "id": 195692971,
        "sender_full_name": "scalexm",
        "timestamp": 1588158817
    },
    {
        "content": "<p>In the above code snippet, if we uncomment the impl, it stops compiling</p>",
        "id": 195693040,
        "sender_full_name": "scalexm",
        "timestamp": 1588158844
    },
    {
        "content": "<p>The <code>where &lt;T as Foo&lt;'a&gt;&gt;::X: 'static&gt;</code> does not seem to be taken into account</p>",
        "id": 195693064,
        "sender_full_name": "scalexm",
        "timestamp": 1588158877
    },
    {
        "content": "<p>But if we remove the 'a parametrization (see the <code>StaticFoo</code> / <code>StaticBaz</code>) formulation, it works</p>",
        "id": 195693084,
        "sender_full_name": "scalexm",
        "timestamp": 1588158905
    },
    {
        "content": "<p>And moreover if we express the same constraint over a pair of functions instead (<code>foo</code> / <code>only_static</code>), it works too</p>",
        "id": 195693176,
        "sender_full_name": "scalexm",
        "timestamp": 1588158968
    },
    {
        "content": "<p>This makes me believe that the commented impl should be accepted</p>",
        "id": 195693197,
        "sender_full_name": "scalexm",
        "timestamp": 1588158990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is that an issue that you are aware of? I found <a href=\"https://github.com/rust-lang/rust/issues/67738\" title=\"https://github.com/rust-lang/rust/issues/67738\">https://github.com/rust-lang/rust/issues/67738</a> which is equivalent, + a workaround by dtolnay</p>",
        "id": 195693271,
        "sender_full_name": "scalexm",
        "timestamp": 1588159065
    },
    {
        "content": "<p>I'm aware of this</p>",
        "id": 195708635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588167089
    },
    {
        "content": "<p>I...think</p>",
        "id": 195708665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588167104
    },
    {
        "content": "<p>I feel like there was a related issue having to do with impl Trait and async fn...</p>",
        "id": 195708771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588167138
    }
]