[
    {
        "content": "<p>cc <a href=\"https://github.com/rust-lang/rust/issues/81961\">#81961</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(generic_associated_types)]</span><span class=\"w\"></span>\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Assoc</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">N</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Assoc</span><span class=\"o\">&lt;</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">N</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span>: <span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"o\">&gt;</span>::<span class=\"n\">Assoc</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// err</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span>: <span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"o\">&gt;</span>::<span class=\"n\">Assoc</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// ok</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>was there an explicit decision to forbid lifetime elision in gats?</p>",
        "id": 225827387,
        "sender_full_name": "lcnr",
        "timestamp": 1612959579
    },
    {
        "content": "<p>i personally don't have a strong opinion here as I've never thought about that myself before</p>",
        "id": 225828340,
        "sender_full_name": "lcnr",
        "timestamp": 1612960199
    },
    {
        "content": "<p>I don't think so, it's just not implemented.</p>",
        "id": 225828888,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612960476
    },
    {
        "content": "<p>For fully qualified paths, the same elision rules and warnings should be appled as for the trait.</p>",
        "id": 225829092,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612960580
    },
    {
        "content": "<p>For type-qualified paths we should also be consistent, but this might be a bit harder because we don't know the trait until lowering the type.</p>",
        "id": 225829177,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612960631
    }
]