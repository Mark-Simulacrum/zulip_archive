[
    {
        "content": "<p>Hello folks,</p>\n<p>The issue in question (<a href=\"https://github.com/rust-lang/rust/issues/60619\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60619\">rust-lang/rust#60619</a>) relates to const generics, but due to the area the problem touches I think asking around here makes sense.</p>\n<p>The last comment on that issue lays out as clearly as I can what is going on, but as a quick summary: const eval of array lengths is failing during wf checking if the length is an equation with a const param in it.</p>",
        "id": 166724929,
        "sender_full_name": "yodal",
        "timestamp": 1559055596
    },
    {
        "content": "<p>That const eval fails is expected as monomorphization has not happened (and in the case of the test case it never will), but this does mean that an obligation that the length is evaluatable is never satisfied. It is my understanding that wf checks should not care if we can evaluate the length, only that any parameters are from the right scope. Is this correct?</p>",
        "id": 166725426,
        "sender_full_name": "yodal",
        "timestamp": 1559055863
    },
    {
        "content": "<p>Lastly, whether or not that is the case, does anyone see a good way to more forward on this? I suggested that maybe const evaluation needs to note what parameters are too generic so that wf checking can makes sure they are in scope, but I'm not sure if that would be the right way forward. Thoughts?</p>",
        "id": 166725625,
        "sender_full_name": "yodal",
        "timestamp": 1559055984
    }
]