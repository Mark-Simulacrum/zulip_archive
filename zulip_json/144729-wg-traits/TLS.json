[
    {
        "content": "<p>Currently it's not possible to run the test suite with CHALK_DEBUG, almost everything fails with <code>not implemented: cannot format Substitution without setting Program in tls</code> <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 192177749,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1585493037
    },
    {
        "content": "<p>There's a PR I need to do for that</p>",
        "id": 192177809,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1585493094
    },
    {
        "content": "<p>Basically all those unimplemented should print the interned var if the program isn't present in tls</p>",
        "id": 192177827,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1585493116
    },
    {
        "content": "<p>I can do that when I get up and push the fix</p>",
        "id": 192177838,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1585493146
    },
    {
        "content": "<p>it might also be possible to fix the places that don't set TLS in the tests, I hope</p>",
        "id": 192177912,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1585493251
    },
    {
        "content": "<p>I found one place, but it apparently wasn't enough. I'll debug it some more later</p>",
        "id": 192177988,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1585493286
    },
    {
        "content": "<p>yeah, I was running into this with rustc integration work</p>",
        "id": 192196417,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519439
    },
    {
        "content": "<p>The problem is really that all the debug* functions in <code>Interner</code> return <code>None</code> and that causes them to fail</p>",
        "id": 192196492,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519556
    },
    {
        "content": "<p>the unimplemented message isn't really accurate</p>",
        "id": 192196535,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519572
    },
    {
        "content": "<p>I'll actually just make a PR now to fix this</p>",
        "id": 192196547,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519594
    },
    {
        "content": "<p>There's a couple parts here:</p>",
        "id": 192196619,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519684
    },
    {
        "content": "<p>1) we need a way to accessed the internedtype given the wrapper ty (e.g. I::InterernedType from Ty&lt;I&gt;)</p>",
        "id": 192196696,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519827
    },
    {
        "content": "<p>2) debug impls should fall back to <em>some</em> kind of debug</p>",
        "id": 192196709,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519856
    },
    {
        "content": "<p>maybe something like \"Ty(?)\"</p>",
        "id": 192196718,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519867
    },
    {
        "content": "<p>in the future, we should/could think about a better way to consistently get the interner passed through in some non-TLS manner, so Interners that don't store the interned types as &amp;TyData or Box&lt;TyData&gt; can still debug properly without TLS</p>",
        "id": 192196797,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585519959
    },
    {
        "content": "<p>or maybe we might just want debug* functions in Interner to just return Result&lt;(), fmt::Error&gt;</p>",
        "id": 192196989,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585520296
    },
    {
        "content": "<p>and provide default methods</p>",
        "id": 192196995,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585520334
    },
    {
        "content": "<p>mmm nah, because then it would be more difficult to conditionally fall back to default debug output</p>",
        "id": 192197175,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585520619
    },
    {
        "content": "<p>will have a default body of None though</p>",
        "id": 192197182,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585520641
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/pull/366\" title=\"https://github.com/rust-lang/chalk/pull/366\">https://github.com/rust-lang/chalk/pull/366</a> if anyone wants to review</p>",
        "id": 192197881,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585521800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> left some comments on <a href=\"https://github.com/rust-lang-nursery/chalk/issues/366\" title=\"https://github.com/rust-lang-nursery/chalk/issues/366\">chalk#366</a></p>",
        "id": 192307732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585597504
    },
    {
        "content": "<p>Let me fix those</p>",
        "id": 192308891,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585597980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  addressed your comments</p>",
        "id": 192310675,
        "sender_full_name": "Jack Huey",
        "timestamp": 1585598797
    },
    {
        "content": "<p>Merged</p>",
        "id": 192316217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585601754
    }
]