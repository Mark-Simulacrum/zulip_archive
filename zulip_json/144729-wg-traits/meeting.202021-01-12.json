[
    {
        "content": "<p>Okay <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>, assuming <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is around, we'll be having our first meeting in 2021 in 9ish minutes</p>",
        "id": 222492538,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610484687
    },
    {
        "content": "<p>Here's a rough list of points we can discuss (a lot):</p>\n<ul>\n<li>CI: mdbook-mermaid caching - do we want it?</li>\n<li>Open PRs<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80679\">#80679</a><ul>\n<li>Good to go I think, waiting on r+ and FCP</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/79951\">#79951</a><ul>\n<li>Very straightforward, should be good. </li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a><ul>\n<li>Blocked at least on <a href=\"https://github.com/rust-lang/rust/issues/80679\">#80679</a>, maybe other cleanup/split PRs. Needs a thorough review.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/chalk/issues/673\">chalk#673</a></li>\n<li><a href=\"https://github.com/rust-lang/chalk/issues/671\">chalk#671</a><ul>\n<li>How do we want to handle bound vars in environment?</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/chalk/issues/664\">chalk#664</a></li>\n<li><a href=\"https://github.com/rust-lang/chalk/issues/661\">chalk#661</a></li>\n</ul>\n</li>\n<li>What do we want to do with -Z chalk issues on rust-lang/rust?</li>\n<li><a href=\"https://github.com/rust-lang/chalk/issues/234\">chalk#234</a> - some thoughts</li>\n<li>Next sprint/items<ul>\n<li>Type library status</li>\n<li>Generators</li>\n<li>Placeholder canonicalization</li>\n<li><code>ReEarlyBound</code> and <code>Param</code></li>\n</ul>\n</li>\n</ul>",
        "id": 222493201,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610484978
    },
    {
        "content": "<p>wave</p>",
        "id": 222493235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610484994
    },
    {
        "content": "<p>I can here today : but I will be 15 mnutes late :P</p>",
        "id": 222493391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610485071
    },
    {
        "content": "<p>although I'm monitoring</p>",
        "id": 222493406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610485078
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I will be reading the meeting. Interested in joining this effort :)</p>",
        "id": 222493603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1610485155
    },
    {
        "content": "<p>Okay, well, in that case</p>",
        "id": 222493771,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485236
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>! Welcome to 2021</p>",
        "id": 222493793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485246
    },
    {
        "content": "<p>I feel like I might be monologuing for the first bit of this meeting...but I guess we'll see</p>",
        "id": 222493895,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485319
    },
    {
        "content": "<p>Anyways, let me just start by sort of summarizing where we ended last year</p>",
        "id": 222493983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485348
    },
    {
        "content": "<p>(I meant to write up a blog post covering this but didn't. Now I figure I'll do a \"2020 in review, now here's where we expect 2021 to go\" sort of thing)</p>",
        "id": 222494054,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485391
    },
    {
        "content": "<p>But, last year was actually super productive</p>",
        "id": 222494092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485412
    },
    {
        "content": "<p>Towards the end of the year though, a big focus was around the shared type library</p>",
        "id": 222494189,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485445
    },
    {
        "content": "<p>which is now officially split out in rustc</p>",
        "id": 222494223,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485463
    },
    {
        "content": "<p>though a very small portion right now</p>",
        "id": 222494234,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485470
    },
    {
        "content": "<p>The idea is we'll start to move things out of <code>rustc_middle</code> in pieces</p>",
        "id": 222494298,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485499
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/issues/80679\">#80679</a> is relevant here)</p>",
        "id": 222494333,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485515
    },
    {
        "content": "<p>I personally made a lot of progress on the tracking bound vars portion of this effort (<a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a>)</p>",
        "id": 222494403,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485554
    },
    {
        "content": "<p>And <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> did start a branch on the <code>Param</code>/<code>ReEarlyBound</code> side of things</p>",
        "id": 222494479,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485580
    },
    {
        "content": "<p>which are two of the big blockers imo</p>",
        "id": 222494500,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485592
    },
    {
        "content": "<p>I don't want to go to much into that yet though</p>",
        "id": 222494558,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485620
    },
    {
        "content": "<p>Instead, I think we should start by sort of going over the progress that's been made since the last meeting</p>",
        "id": 222494612,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485651
    },
    {
        "content": "<p>(we/I)</p>",
        "id": 222494637,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485660
    },
    {
        "content": "<p>Looks like's theres some cleanup PRs, which is nice</p>",
        "id": 222494754,
        "sender_full_name": "detrumi",
        "timestamp": 1610485700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222494754\">said</a>:</p>\n<blockquote>\n<p>Looks like's theres some cleanup PRs, which is nice</p>\n</blockquote>\n<p>yes, I'll get there :)</p>",
        "id": 222494783,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485720
    },
    {
        "content": "<p>There's 2 rustc PRs that haven't been mentioned yet</p>",
        "id": 222494811,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485737
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222494333\">said</a>:</p>\n<blockquote>\n<p>(<a href=\"https://github.com/rust-lang/rust/issues/80679\">#80679</a> is relevant here)</p>\n</blockquote>\n<p>whoops I meant <a href=\"https://github.com/rust-lang/rust/issues/79951\">#79951</a></p>",
        "id": 222494865,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485763
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/80679\">#80679</a> was one of the two I was thinking. Which essentially just removes <code>PredicateKind::Atom</code> in favor of always having <code>Binder&lt;PredicateAtom&gt;</code></p>",
        "id": 222494983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485816
    },
    {
        "content": "<p>Though, by the time you get to cleanup and such, you just end up with a <code>PredicateKind</code> that was <code>PredicateAtom</code></p>",
        "id": 222495029,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485850
    },
    {
        "content": "<p>/me goes to get a link</p>",
        "id": 222495053,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485866
    },
    {
        "content": "<p>relevant MCP: <a href=\"https://github.com/rust-lang/compiler-team/issues/397\">https://github.com/rust-lang/compiler-team/issues/397</a></p>",
        "id": 222495087,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485886
    },
    {
        "content": "<p>This is also how Chalk now does it: there is no longer an <code>Implies</code> variant</p>",
        "id": 222495112,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485910
    },
    {
        "content": "<p>The other PR is a chalk upgrade (<a href=\"https://github.com/rust-lang/rust/issues/80593\">#80593</a>), but that is blocked on Chalk PRs which I'm about to get to</p>",
        "id": 222495219,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485954
    },
    {
        "content": "<p>But, I wanted to point that out, because using the fixed chalk as a base, I redid the <code>compare-mode=chalk</code> issue triage</p>",
        "id": 222495293,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485992
    },
    {
        "content": "<p>Stream: <a href=\"#narrow/stream/144729-wg-traits/topic/rustc.20test.20suite.20triage\">https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits/topic/rustc.20test.20suite.20triage</a></p>",
        "id": 222495305,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610485999
    },
    {
        "content": "<p>Long story short, the number of panicking tests is halved</p>",
        "id": 222495335,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486017
    },
    {
        "content": "<p>About a 1000 more tests pass outright</p>",
        "id": 222495435,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486052
    },
    {
        "content": "<p>But a large number of tests just outright fail</p>",
        "id": 222495471,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486069
    },
    {
        "content": "<p>Which I actually think might be somewhat fixed by <a href=\"https://github.com/rust-lang/chalk/issues/673\">chalk#673</a></p>",
        "id": 222495525,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486102
    },
    {
        "content": "<p>(I'll get to that in a bit)</p>",
        "id": 222495555,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486116
    },
    {
        "content": "<p>Now, chalk PRs</p>",
        "id": 222495576,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486131
    },
    {
        "content": "<p>I opened up a big cleanup PR in <a href=\"https://github.com/rust-lang/chalk/issues/661\">chalk#661</a>, but I think most is around <code>chalk-engine</code> only</p>",
        "id": 222495688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486173
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/chalk/issues/661\">chalk#661</a>)</p>",
        "id": 222495723,
        "sender_full_name": "detrumi",
        "timestamp": 1610486200
    },
    {
        "content": "<p>Basically, a lot of it is removing the abstraction of <code>TruncatingInferenceTable</code> that's not really necessary anymore</p>",
        "id": 222495736,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486205
    },
    {
        "content": "<p>But also, I <em>finally</em> was able to remove <code>CanonicalStrand</code></p>",
        "id": 222495777,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486230
    },
    {
        "content": "<p>which was like one of the first PRs I ever made to Chalk</p>",
        "id": 222495794,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486242
    },
    {
        "content": "<p>And it didn't land then, because it made things much more complicated</p>",
        "id": 222495809,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486254
    },
    {
        "content": "<p>heh :)</p>",
        "id": 222495818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486258
    },
    {
        "content": "<p>but now, instead of <code>CanonicalStrand</code>, we can just do <code>Canonical&lt;Strand&gt;</code></p>",
        "id": 222495836,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486268
    },
    {
        "content": "<p>next pr</p>",
        "id": 222495922,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486300
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/664\">chalk#664</a></p>",
        "id": 222495942,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486313
    },
    {
        "content": "<p>Basically, <span class=\"user-mention\" data-user-id=\"218805\">@Mark Drobnak</span> noticed that the function-related tests weren't running anymore</p>",
        "id": 222496006,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486359
    },
    {
        "content": "<p>And turns out they were broken</p>",
        "id": 222496017,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486365
    },
    {
        "content": "<p>/me tries to remember</p>",
        "id": 222496033,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486380
    },
    {
        "content": "<p>heh oh dear</p>",
        "id": 222496035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486382
    },
    {
        "content": "<p>well, the details aren't super important to discuss here</p>",
        "id": 222496138,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486423
    },
    {
        "content": "<p>But another nice sidepoint is we actually <code>Flounder</code> for things like <code>exists&lt;T&gt; { T: Sized }</code></p>",
        "id": 222496184,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486449
    },
    {
        "content": "<p>err, ambiguous, not flounder</p>",
        "id": 222496202,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486460
    },
    {
        "content": "<p>because we now take into account builtin types</p>",
        "id": 222496223,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486474
    },
    {
        "content": "<p>(need to remember to link/close that issue)</p>",
        "id": 222496254,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486499
    },
    {
        "content": "<p>At this point, the changes look good, but I wrote half the code, so I'm not r+ing it (nudge <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> )</p>",
        "id": 222496329,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486528
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/671\">chalk#671</a></p>",
        "id": 222496358,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486553
    },
    {
        "content": "<p>yes, it seems clear I can start doing reviews...</p>",
        "id": 222496363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486557
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222496358\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/chalk/issues/671\">chalk#671</a></p>\n</blockquote>\n<p>This one is...weird</p>",
        "id": 222496405,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486577
    },
    {
        "content": "<p>And we really should discuss</p>",
        "id": 222496433,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486590
    },
    {
        "content": "<p>This popped up when I did the Chalk upgrade</p>",
        "id": 222496456,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486610
    },
    {
        "content": "<p>(in rustc)</p>",
        "id": 222496466,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486613
    },
    {
        "content": "<p>and highlights a flaw in how we were/are handling bound vars in the environment</p>",
        "id": 222496517,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486639
    },
    {
        "content": "<p>hmm</p>",
        "id": 222496596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486665
    },
    {
        "content": "<p>Gosh this was already two weeks ago</p>",
        "id": 222496603,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486671
    },
    {
        "content": "<p>There's two sort of orthogonal \"fixes\" here</p>",
        "id": 222496629,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486688
    },
    {
        "content": "<p>Well, one fix, one patch</p>",
        "id": 222496639,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486696
    },
    {
        "content": "<p>And actually, now that I think about this again, the \"fix\" might not be correct</p>",
        "id": 222496725,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486749
    },
    {
        "content": "<p>But anyways, what I first did was subst out the canonically-bound vars from the clauses  with the vars we get when creating the inference tables</p>",
        "id": 222496852,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486805
    },
    {
        "content": "<p>(no, that's right)</p>",
        "id": 222496872,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486816
    },
    {
        "content": "<p>We handle bound vars correctly for the actual goal (because we generalize where necessary), but the problem comes with the environment</p>",
        "id": 222496932,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486862
    },
    {
        "content": "<p>The other bit of this, is a bit more tricky</p>",
        "id": 222497007,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486885
    },
    {
        "content": "<p>And happens because of the way we set up <code>ClauseBuilder</code></p>",
        "id": 222497059,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486913
    },
    {
        "content": "<p>mm</p>",
        "id": 222497129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486951
    },
    {
        "content": "<p>in particular, because we always wrap clauses in a <code>ForAll</code>, if we haven't explicitly added a <code>with_binders</code>, we shift all bound vars in the clause</p>",
        "id": 222497151,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486965
    },
    {
        "content": "<p>do you want to talk about it here, or should I just schedule some time to read it through?</p>",
        "id": 222497158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610486968
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222497158\">said</a>:</p>\n<blockquote>\n<p>do you want to talk about it here, or should I just schedule some time to read it through?</p>\n</blockquote>\n<p>Let's fit it in after getting through the agenda if we have time</p>",
        "id": 222497202,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610486991
    },
    {
        "content": "<p>But I can also schedule some time to discuss</p>",
        "id": 222497274,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487008
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222497151\">said</a>:</p>\n<blockquote>\n<p>in particular, because we always wrap clauses in a <code>ForAll</code>, if we haven't explicitly added a <code>with_binders</code>, we shift all bound vars in the clause</p>\n</blockquote>\n<p>And this assumption is wrong when we have bound vars from the <code>Canonical</code></p>",
        "id": 222497339,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487037
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222497274\">said</a>:</p>\n<blockquote>\n<p>But I can also schedule some time to discuss</p>\n</blockquote>\n<p>but definitely take some time to read it through regardless :)</p>",
        "id": 222497397,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487061
    },
    {
        "content": "<p>Ugh I might be misremembering</p>",
        "id": 222497431,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487086
    },
    {
        "content": "<p>Because I do remember that the second problem I ran into only applied when creating <code>Constraints</code></p>",
        "id": 222497461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487107
    },
    {
        "content": "<p>Specifically, the <code>Enviroment</code> of <code>Constraints</code></p>",
        "id": 222497569,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487139
    },
    {
        "content": "<p>So, as a patch I just always have an empty environment for them here</p>",
        "id": 222497591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487155
    },
    {
        "content": "<p>Which, for now is <em>okay</em> (not great) because neither rustc nor rust-analyzer handle those</p>",
        "id": 222497656,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487183
    },
    {
        "content": "<p>And we're probably going to redesign around polonious integration <em>anyways</em></p>",
        "id": 222497688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487199
    },
    {
        "content": "<p>But yeah, it's a problem :)</p>",
        "id": 222497703,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487205
    },
    {
        "content": "<p>For now, I'll move on. We can circle back if we have time and want to discuss</p>",
        "id": 222497727,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487224
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/673\">chalk#673</a></p>",
        "id": 222497755,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487236
    },
    {
        "content": "<p>So, this was one of a few bugs that have been found so far related to the <code>Variance</code> change</p>",
        "id": 222497838,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487261
    },
    {
        "content": "<p>The last one, we basically fixed by making sure that <code>TyKind::Int</code> and <code>TyKind::Float</code>s always related with <code>Invariant</code></p>",
        "id": 222497926,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487309
    },
    {
        "content": "<p>But this time, the solution is to track the <code>Variance</code> when generalizing</p>",
        "id": 222497985,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487347
    },
    {
        "content": "<p>ah</p>",
        "id": 222498016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487361
    },
    {
        "content": "<p>the rustc code does this</p>",
        "id": 222498054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487365
    },
    {
        "content": "<p>Yes</p>",
        "id": 222498064,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487374
    },
    {
        "content": "<p>it does</p>",
        "id": 222498069,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487377
    },
    {
        "content": "<p>By basically reusing <code>Relate</code> there</p>",
        "id": 222498092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487397
    },
    {
        "content": "<p>and relating the generalizing ty with itself</p>",
        "id": 222498133,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487415
    },
    {
        "content": "<p>Which...we might just want to adopt</p>",
        "id": 222498155,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487427
    },
    {
        "content": "<p>Basically, this is needed because if we are in an <code>Invariant</code> context, we don't want to create a new infer var</p>",
        "id": 222498238,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487482
    },
    {
        "content": "<p>right</p>",
        "id": 222498296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487502
    },
    {
        "content": "<p>because we basically end up with goals like <code>?0 &lt;: ?1</code> and <code>?1 &lt;: ?0</code>, which aren't solvable</p>",
        "id": 222498298,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487503
    },
    {
        "content": "<p>I think this is the same reason i added that to rustc ;)</p>",
        "id": 222498310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487507
    },
    {
        "content": "<p>This was actually the same sort of situation we ran into last time</p>",
        "id": 222498350,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487529
    },
    {
        "content": "<p>Where I had originally just proposed to take those two goals and instead unify them</p>",
        "id": 222498388,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487551
    },
    {
        "content": "<p>but there were concerns :)</p>",
        "id": 222498402,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487560
    },
    {
        "content": "<p>right</p>",
        "id": 222498443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487585
    },
    {
        "content": "<p>Otherwise, this was fairly straightforward once I realized the problem and solution</p>",
        "id": 222498493,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487603
    },
    {
        "content": "<p>Except for <em>one</em> thing: <a href=\"https://github.com/rust-lang/chalk/pull/673/files#diff-7f3d7ff142e3a29b6f04b7bafde8a4d25d17cdd45dd632782d81105f905cced7R80-R94\">https://github.com/rust-lang/chalk/pull/673/files#diff-7f3d7ff142e3a29b6f04b7bafde8a4d25d17cdd45dd632782d81105f905cced7R80-R94</a></p>",
        "id": 222498518,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487609
    },
    {
        "content": "<p>I think this was happening because in one place, we relate two inference vars in a non-<code>Invariant</code> context, then later relate them in <code>Invariant</code></p>",
        "id": 222498584,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487664
    },
    {
        "content": "<p>but we had also generated the goal</p>",
        "id": 222498591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487672
    },
    {
        "content": "<p>I'm not sure if rustc handles this by just checking the trivially true <code>^0.0 &lt;: ^0.0</code> case later on</p>",
        "id": 222498650,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487706
    },
    {
        "content": "<p>but here I opted to catch them before returning the <code>RelationResult</code> at all</p>",
        "id": 222498721,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487730
    },
    {
        "content": "<p>hmm</p>",
        "id": 222498732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487740
    },
    {
        "content": "<p>seems lke a good thing to pare out, regardless</p>",
        "id": 222498766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487761
    },
    {
        "content": "<p>could be both</p>",
        "id": 222498778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487766
    },
    {
        "content": "<p>yeah, I wasn't sure the best thing here</p>",
        "id": 222498797,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487778
    },
    {
        "content": "<p>i.e., be able to handle the goal when it arises, but remove them from the list too</p>",
        "id": 222498804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610487781
    },
    {
        "content": "<p>Hmm, I would have to think of an example where the goal <em>could</em> arise is we remove them early</p>",
        "id": 222498847,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487818
    },
    {
        "content": "<p>Anyways, like before, let's move on and discuss details later</p>",
        "id": 222498946,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487857
    },
    {
        "content": "<p>Starting to run short on time</p>",
        "id": 222498954,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487863
    },
    {
        "content": "<p>That's it for PRs though (what a doozy)</p>",
        "id": 222498975,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487882
    },
    {
        "content": "<p>So, one thing to discuss that's pretty small, and doesn't matter a ton:</p>",
        "id": 222499043,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487918
    },
    {
        "content": "<p>Since there was recently a security vuln for mdbook, there was a PR upgrade mdbook to 0.4.5</p>",
        "id": 222499092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487952
    },
    {
        "content": "<p>In addition,  mdbook-mermaid was updated</p>",
        "id": 222499154,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487973
    },
    {
        "content": "<p>but no longer published pre-compiled binaries</p>",
        "id": 222499175,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487987
    },
    {
        "content": "<p>which means now we build it during CI</p>",
        "id": 222499197,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610487998
    },
    {
        "content": "<p>we could maybe cache that</p>",
        "id": 222499216,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488006
    },
    {
        "content": "<p>see <a href=\"https://github.com/rust-lang/chalk/issues/672\">chalk#672</a></p>",
        "id": 222499241,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222498975\">said</a>:</p>\n<blockquote>\n<p>That's it for PRs though (what a doozy)</p>\n</blockquote>\n<p>nice</p>",
        "id": 222499252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488027
    },
    {
        "content": "<p>again, pretty moot because we don't really need short CI times</p>",
        "id": 222499288,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488047
    },
    {
        "content": "<p>but anyone has thoughts, would love to hear</p>",
        "id": 222499298,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488056
    },
    {
        "content": "<p>Next, I wanted to quickly discuss the -Z chalk issues on rust-lang/rust</p>",
        "id": 222499338,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488081
    },
    {
        "content": "<p>Particularly, what do we want to do right now</p>",
        "id": 222499385,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488096
    },
    {
        "content": "<p>(and additionally the WG-compiler-traits label)</p>",
        "id": 222499400,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488112
    },
    {
        "content": "<p>is there a listing of <code>-Zchalk</code> issues?</p>",
        "id": 222499434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488132
    },
    {
        "content": "<p>Particularly, there's the <code>-Z chalk</code> tracking issue, which obviously should stay</p>",
        "id": 222499440,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488135
    },
    {
        "content": "<p>yes one sec</p>",
        "id": 222499447,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488139
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3Achalk-integration\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3Achalk-integration</a></p>",
        "id": 222499481,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488157
    },
    {
        "content": "<p>There are <a href=\"https://github.com/rust-lang/rust/issues/49177\">#49177</a> and <a href=\"https://github.com/rust-lang/rust/issues/55100\">#55100</a> which I think should just be closed at this point</p>",
        "id": 222499527,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488186
    },
    {
        "content": "<p>(though <a href=\"https://github.com/rust-lang/rust/issues/55100\">#55100</a> was brought up in the rustc-dev-guide channel and will/should be closed during some cleanup there)</p>",
        "id": 222499621,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488217
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/57193\">#57193</a> also should be closed; it's the old integration and does actually work now anyways</p>",
        "id": 222499684,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488251
    },
    {
        "content": "<p>But the issues to discuss the most are the \"new\" ones that are relevant to the current integration</p>",
        "id": 222499735,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488277
    },
    {
        "content": "<p>Particularly, do we <em>really</em> want to leave these open</p>",
        "id": 222499766,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488291
    },
    {
        "content": "<p>Imo, considering how experimental the integration is, and the fact that we <em>know</em> so many \"compare-mode=chalk\" tests fail</p>",
        "id": 222499873,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488325
    },
    {
        "content": "<p>I think we should just not leave <code>-Z chalk</code> issues open right now</p>",
        "id": 222499907,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488342
    },
    {
        "content": "<p>yeah</p>",
        "id": 222499912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488344
    },
    {
        "content": "<p>oh</p>",
        "id": 222499918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488347
    },
    {
        "content": "<p><em>not leave</em></p>",
        "id": 222499928,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488352
    },
    {
        "content": "<p>ah, ok ;)</p>",
        "id": 222499933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488357
    },
    {
        "content": "<p>I think i agree</p>",
        "id": 222499967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488373
    },
    {
        "content": "<p>i usually find issues at this stage kind of unhelpful</p>",
        "id": 222499974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488378
    },
    {
        "content": "<p>Exactly</p>",
        "id": 222499991,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488382
    },
    {
        "content": "<p>unless they are very specific things we are delegating or recruiting for</p>",
        "id": 222500004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488388
    },
    {
        "content": "<p>Yeah, especially when the backtrace mentions <code>Unimplemented</code></p>",
        "id": 222500015,
        "sender_full_name": "detrumi",
        "timestamp": 1610488393
    },
    {
        "content": "<p>I <em>would</em> close these myself but I don't have triage perms</p>",
        "id": 222500034,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488406
    },
    {
        "content": "<p>On a related note: <code>WG-compiler-traits</code> label:</p>",
        "id": 222500078,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488440
    },
    {
        "content": "<p>I would like to try to get it added to relevant issues/PRs that we're tracking here</p>",
        "id": 222500144,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488459
    },
    {
        "content": "<p>For my own organization :)</p>",
        "id": 222500160,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488467
    },
    {
        "content": "<p>ah</p>",
        "id": 222500202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488493
    },
    {
        "content": "<p>we ought to be able to get triage perms too, probably</p>",
        "id": 222500215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488502
    },
    {
        "content": "<p>but I can do those kinds of things</p>",
        "id": 222500231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488513
    },
    {
        "content": "<p>And, I added <code>chalk-solve</code>, <code>chalk-engine</code>, <code>chalk-recursive</code>, and <code>chalk-ir</code> labels to the Chalk repo to better categorize issues :)</p>",
        "id": 222500236,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488519
    },
    {
        "content": "<p>And applied a bunch</p>",
        "id": 222500243,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488523
    },
    {
        "content": "<p>Which should also help</p>",
        "id": 222500251,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488527
    },
    {
        "content": "<p>I think you can ask rustbot to add labels on rust-lang/rust?</p>",
        "id": 222500274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488540
    },
    {
        "content": "<p>Yes, labels are fine I think. Idk about closing issues</p>",
        "id": 222500346,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488563
    },
    {
        "content": "<p>Okay nearly done</p>",
        "id": 222500399,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488588
    },
    {
        "content": "<p>No discussion needed here <em>now</em>, but I thought a little bit about <a href=\"https://github.com/rust-lang/chalk/issues/234\">chalk#234</a> (ambiguity in associated types in chalk-engine)</p>",
        "id": 222500464,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488622
    },
    {
        "content": "<p>and even though I think the \"best\" solution would be something like congruence edges or something</p>",
        "id": 222500496,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488644
    },
    {
        "content": "<p>I had tried a little locally to implement the \"Cut\" operator</p>",
        "id": 222500508,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488655
    },
    {
        "content": "<p>Which <code>chalk-recursive</code> sort of does with the <code>ClausePriority</code></p>",
        "id": 222500540,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488674
    },
    {
        "content": "<p>But, I didn't get very far</p>",
        "id": 222500590,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488685
    },
    {
        "content": "<p>But it's on my radar :) As I wait for reviews for other things</p>",
        "id": 222500612,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488696
    },
    {
        "content": "<p>And in the last 2 minutes: We should discuss if we still want to do sprints or not. I feel like the were great at the beginning of the year last year. But the last couple didn't seem to have a ton of engagment</p>",
        "id": 222500695,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488745
    },
    {
        "content": "<p>Part of this is because we are starting to get to problems where you either have a bunch of simple related work (like moving types into <code>rustc_type_ir</code>) or very big tasks (like bound var refactor)</p>",
        "id": 222500786,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488804
    },
    {
        "content": "<p>I'd like peoples thoughts</p>",
        "id": 222500842,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488816
    },
    {
        "content": "<p>But we're at the hour</p>",
        "id": 222500863,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488823
    },
    {
        "content": "<p>So we should plan to make next week a \"planning week\"</p>",
        "id": 222500898,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488834
    },
    {
        "content": "<p>Anyways, thanks everyone :)</p>",
        "id": 222501069,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488907
    },
    {
        "content": "<p>yeah</p>",
        "id": 222501071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488908
    },
    {
        "content": "<p>I'm thinking about one othr thing</p>",
        "id": 222501076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488912
    },
    {
        "content": "<p>let me float it here at the end of the hour</p>",
        "id": 222501085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488918
    },
    {
        "content": "<p>also let me say <strong>thank you</strong> for that overview :)</p>",
        "id": 222501129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488927
    },
    {
        "content": "<p>Yeah, I'm here and can still discuss</p>",
        "id": 222501133,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488927
    },
    {
        "content": "<p>one thing i'm wondering about is the question of <strong>sprints</strong> -- but not in the sense that this group has traditionally used the term</p>",
        "id": 222501159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488947
    },
    {
        "content": "<p>we were talking in some recent compiler team meetings about having designated sprint weeks</p>",
        "id": 222501182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488961
    },
    {
        "content": "<p>Haha, I knew you were going to say that</p>",
        "id": 222501203,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610488972
    },
    {
        "content": "<p>the idea being that everybody shows up for like 4 hours a day during a week to focus hard</p>",
        "id": 222501206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488973
    },
    {
        "content": "<p>i feel like this might be really useful to me</p>",
        "id": 222501221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488983
    },
    {
        "content": "<p>but I don't know whether it is plausible for the rest of you :)</p>",
        "id": 222501236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488989
    },
    {
        "content": "<p>I know for some people it works well and for others less well</p>",
        "id": 222501264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610488996
    },
    {
        "content": "<p>In theory, that sounds awesome. In practice, I think it would have to be in the evening for me</p>",
        "id": 222501319,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489029
    },
    {
        "content": "<p>That's rather unfortunate for European times though</p>",
        "id": 222501399,
        "sender_full_name": "detrumi",
        "timestamp": 1610489052
    },
    {
        "content": "<p>hmm</p>",
        "id": 222501414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489061
    },
    {
        "content": "<p>I don't think i could do it in <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>'s evening times ;)</p>",
        "id": 222501436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489077
    },
    {
        "content": "<p>it may be that the idea doesn't work so well for this group</p>",
        "id": 222501448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489083
    },
    {
        "content": "<p>But honestly, if we could just get you (<span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ) to dedicate 4 hours a day for a week every couple of months, that would be cool</p>",
        "id": 222501461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489090
    },
    {
        "content": "<p>that was the other thing i was wondering</p>",
        "id": 222501478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489101
    },
    {
        "content": "<p>if it makes sense to do even if not everyone can participate</p>",
        "id": 222501503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489113
    },
    {
        "content": "<p>If other people want to do that, I can certainly be <em>around</em> to chat</p>",
        "id": 222501513,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489122
    },
    {
        "content": "<p>(I think <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you were pretty excited about this idea)</p>",
        "id": 222501516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489124
    },
    {
        "content": "<p>it also doesn't have to be 100% sync i guess</p>",
        "id": 222501521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489128
    },
    {
        "content": "<p>Maybe not continuously, but off and on</p>",
        "id": 222501543,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489137
    },
    {
        "content": "<p>what I mean is</p>",
        "id": 222501555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489142
    },
    {
        "content": "<p>like if we had folks doing it in the morning</p>",
        "id": 222501565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489148
    },
    {
        "content": "<p>and other people show up in the evening or whatever</p>",
        "id": 222501576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489155
    },
    {
        "content": "<p>it'll still help in the sense that we have context</p>",
        "id": 222501626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489166
    },
    {
        "content": "<p>yes, that too</p>",
        "id": 222501636,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489172
    },
    {
        "content": "<p>anyway I would ike to try it, for sure</p>",
        "id": 222501637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489172
    },
    {
        "content": "<p>I feel like I need a kick in the pants :)</p>",
        "id": 222501654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489182
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222501516\">said</a>:</p>\n<blockquote>\n<p>(I think <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> you were pretty excited about this idea)</p>\n</blockquote>\n<p>I have zero idea about you guys are doing :)</p>",
        "id": 222501656,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1610489184
    },
    {
        "content": "<p>I meant the idea of doing concentrated sprints</p>",
        "id": 222501684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489198
    },
    {
        "content": "<p>not any particular technical thing</p>",
        "id": 222501693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222501637\">said</a>:</p>\n<blockquote>\n<p>anyway I would ike to try it, for sure</p>\n</blockquote>\n<p>I mean, I am 100% up for planning a week to do this, instead of planning a \"traditional\" sprint to start</p>",
        "id": 222501744,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489229
    },
    {
        "content": "<p>But I definitely think it would be under the caveat that: most people would probably not be able to work in sync during the week</p>",
        "id": 222501798,
        "sender_full_name": "Jack Huey",
        "timestamp": 1610489263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-01-12/near/222501684\">said</a>:</p>\n<blockquote>\n<p>I meant the idea of doing concentrated sprints</p>\n</blockquote>\n<p>yeah I got that, I just meant that I'd be very unknowleadgeable, but it may be good to learn and catch up I guess</p>",
        "id": 222501812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1610489273
    },
    {
        "content": "<p>ah</p>",
        "id": 222501903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489315
    },
    {
        "content": "<p>well, yeah, as ever, it'd be a way to \"get into\" things</p>",
        "id": 222501921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489323
    },
    {
        "content": "<p>everybody has to start <em>somewhere</em></p>",
        "id": 222501939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610489333
    }
]