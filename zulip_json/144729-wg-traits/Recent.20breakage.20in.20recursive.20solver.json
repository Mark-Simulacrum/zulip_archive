[
    {
        "content": "<p>Hey all, I was curious if the recursive solver fares any better in the rustc test suite so I tried switching it out and found a <em>bunch</em> of tests fail because of a failed assertion in <code>fold_free_var_ty</code>.  I then noticed that there's breakage in rust-analyzer as well. With the latest version of chalk that same assertion fails in rust-analyzer (seen <a href=\"https://github.com/rust-analyzer/rust-analyzer/runs/1176322865\">here</a> in a failed CI run).</p>",
        "id": 211511578,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601308574
    },
    {
        "content": "<p>Bisection points to the recent auto traits changes, so I think we may have introduced a bug there</p>",
        "id": 211511721,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601308651
    },
    {
        "content": "<p>Uh oh, no good</p>",
        "id": 211512077,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601308832
    },
    {
        "content": "<p>I bet it's because we need to generalize the program clauses</p>",
        "id": 211512835,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601309189
    },
    {
        "content": "<p>Probably here: <a href=\"https://github.com/rust-lang/chalk/pull/612/files#diff-a66f74f4c8a6a7a1342ab7c62c3ae8a4R314\">https://github.com/rust-lang/chalk/pull/612/files#diff-a66f74f4c8a6a7a1342ab7c62c3ae8a4R314</a></p>",
        "id": 211512959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601309252
    },
    {
        "content": "<p>Can someone try testing with just that line commented out?</p>",
        "id": 211513166,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601309324
    },
    {
        "content": "<p>rust-analyzer issue: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6078\">https://github.com/rust-analyzer/rust-analyzer/issues/6078</a></p>",
        "id": 211515794,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601310638
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Recent.20breakage.20in.20recursive.20solver/near/211513166\">said</a>:</p>\n<blockquote>\n<p>Can someone try testing with just that line commented out?</p>\n</blockquote>\n<p>Unfortunately that doesn't fix it</p>",
        "id": 211516068,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601310759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"230601\">Nathan Whitaker</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Recent.20breakage.20in.20recursive.20solver/near/211516068\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Recent.20breakage.20in.20recursive.20solver/near/211513166\">said</a>:</p>\n<blockquote>\n<p>Can someone try testing with just that line commented out?</p>\n</blockquote>\n<p>Unfortunately that doesn't fix it</p>\n</blockquote>\n<p>Shoot</p>",
        "id": 211521146,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601313087
    },
    {
        "content": "<p>Almost want to revert the PR for now. Seems pretty bad.</p>",
        "id": 211521241,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601313124
    },
    {
        "content": "<p>Actually <a href=\"https://github.com/rust-lang/chalk/pull/612/files#diff-a66f74f4c8a6a7a1342ab7c62c3ae8a4R151\">https://github.com/rust-lang/chalk/pull/612/files#diff-a66f74f4c8a6a7a1342ab7c62c3ae8a4R151</a> is also wrong</p>",
        "id": 211521924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601313400
    },
    {
        "content": "<p>This time, it's not the <em>trait</em> might have bound vars, but instead the type</p>",
        "id": 211522514,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601313673
    },
    {
        "content": "<p>So, <a href=\"https://github.com/rust-lang/chalk/blob/a6d2e439f7e4f9bc9a567d7c394b6dc048a1b8bb/chalk-solve/src/clauses.rs#L302\">here</a> we probably want to wrap this in a </p>\n<div class=\"codehilite\"><pre><span></span><code>let generalized = generalize::Generalize::apply(db.interner(), trait_ref);\nbuilder.push_binders(&amp;generalized, |builder, trait_ref| {\n...\n})\n</code></pre></div>",
        "id": 211523131,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601313992
    },
    {
        "content": "<p>Unfortunately, I don't have the time today to test this</p>",
        "id": 211523265,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601314060
    },
    {
        "content": "<p>If this does fix the issue, I would like to get it out ASAP. But definitely at least for a followup issue, I'd like to get a repro test to make sure this doesn't happen in the future.</p>",
        "id": 211523460,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601314143
    },
    {
        "content": "<p>That does indeed fix it <span aria-label=\"congratulations\" class=\"emoji emoji-1f389\" role=\"img\" title=\"congratulations\">:congratulations:</span></p>",
        "id": 211526743,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601315805
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/pull/613\">PR here</a></p>",
        "id": 211526761,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601315811
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/614\">Follow-up issue</a> for repro test</p>",
        "id": 211526875,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1601315871
    },
    {
        "content": "<p>approved, see comment</p>",
        "id": 211527250,
        "sender_full_name": "Jack Huey",
        "timestamp": 1601316022
    }
]