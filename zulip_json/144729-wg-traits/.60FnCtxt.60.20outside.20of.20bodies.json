[
    {
        "content": "<p>In my understanding <code>FnCtxt</code> is mostly intended to be used during hir typeck for anything with a body, so functions and constants.</p>",
        "id": 277290194,
        "sender_full_name": "lcnr",
        "timestamp": 1648737041
    },
    {
        "content": "<p>But it is also used pretty much anywhere we want to check regions</p>",
        "id": 277290235,
        "sender_full_name": "lcnr",
        "timestamp": 1648737058
    },
    {
        "content": "<p>There's a FIXME somewhere for that</p>",
        "id": 277290272,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648737075
    },
    {
        "content": "<p>that's cool <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 277290331,
        "sender_full_name": "lcnr",
        "timestamp": 1648737104
    },
    {
        "content": "<p>idk why that's actually rly funny to me <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 277290420,
        "sender_full_name": "lcnr",
        "timestamp": 1648737131
    },
    {
        "content": "<p>I guess the goal would be to only require an <code>InferCtxt</code> to check region obligations</p>",
        "id": 277290450,
        "sender_full_name": "lcnr",
        "timestamp": 1648737146
    },
    {
        "content": "<p>also, why is <code>in_progress_typeck_results</code> a field of <code>InferCtxt</code> instead of <code>FnCtxt</code>?</p>",
        "id": 277290502,
        "sender_full_name": "lcnr",
        "timestamp": 1648737169
    },
    {
        "content": "<p><em>shrug</em> this is an area I haven't done a ton of work on</p>",
        "id": 277290729,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648737260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/.60FnCtxt.60.20outside.20of.20bodies/near/277290502\">said</a>:</p>\n<blockquote>\n<p>also, why is <code>in_progress_typeck_results</code> a field of <code>InferCtxt</code> instead of <code>FnCtxt</code>?</p>\n</blockquote>\n<p>that's something I can just try to change myself <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 277290730,
        "sender_full_name": "lcnr",
        "timestamp": 1648737260
    },
    {
        "content": "<p>I guess, cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> can I also try to move <code>with_opaque_type_inference</code> into the <code>FnCtxt</code> from the inference context?</p>",
        "id": 277290941,
        "sender_full_name": "lcnr",
        "timestamp": 1648737355
    },
    {
        "content": "<p>that is what sets <code>defining_use_anchor</code>, and that one can't be moved unless we re-adopt an opaque type obligation and bubble the anchor in via the <code>select_all_or*</code> methods</p>",
        "id": 277291624,
        "sender_full_name": "oli",
        "timestamp": 1648737629
    },
    {
        "content": "<p>at some point we need to decide whether to bind the opaque type or whether to handle it opaquely</p>",
        "id": 277291663,
        "sender_full_name": "oli",
        "timestamp": 1648737645
    },
    {
        "content": "<p>ah, my hope was to move <code>defining_use_anchor</code> out of <code>InferCtxt</code></p>",
        "id": 277291725,
        "sender_full_name": "lcnr",
        "timestamp": 1648737679
    },
    {
        "content": "<p>as it should only be used when part inside of a <code>FnCtxt</code></p>",
        "id": 277291747,
        "sender_full_name": "lcnr",
        "timestamp": 1648737690
    },
    {
        "content": "<p>but that might not actually work because trait selection and stuff also relies on that i think?</p>",
        "id": 277291792,
        "sender_full_name": "lcnr",
        "timestamp": 1648737711
    },
    {
        "content": "<p>and we don't want to use <code>FnCtxt</code> for that</p>",
        "id": 277291808,
        "sender_full_name": "lcnr",
        "timestamp": 1648737718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/.60FnCtxt.60.20outside.20of.20bodies/near/277291792\">said</a>:</p>\n<blockquote>\n<p>but that might not actually work because trait selection and stuff also relies on that i think?</p>\n</blockquote>\n<p>yea, basically that. I mean... we could just do the same thing we do for queries and assume we are allowed to constrain the hidden type and then have the FnCtxt process them at the end, not sure if possible, but worth exploring I guess?</p>",
        "id": 277292273,
        "sender_full_name": "oli",
        "timestamp": 1648737901
    },
    {
        "content": "<p>would be interested in trying that</p>",
        "id": 277292314,
        "sender_full_name": "lcnr",
        "timestamp": 1648737921
    },
    {
        "content": "<p>though starting with <code>in_progress_typeck_results</code> feels more impactful for me</p>",
        "id": 277292392,
        "sender_full_name": "lcnr",
        "timestamp": 1648737957
    },
    {
        "content": "<p>agreed</p>",
        "id": 277293468,
        "sender_full_name": "oli",
        "timestamp": 1648738385
    }
]