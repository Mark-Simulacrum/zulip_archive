[
    {
        "content": "<p><code>dropck</code> currently uses a custom <code>TypeRelation</code> which makes me rather unhappy so I've tried to do it \"the right way\" using our trait solver.</p>\n<p>getting the error messages right this way is a mess</p>",
        "id": 276634433,
        "sender_full_name": "lcnr",
        "timestamp": 1648221646
    },
    {
        "content": "<p>relevant commit: <a href=\"https://github.com/rust-lang/rust/commit/b2040424b099df1efbb057c841279665376fe1b1\">https://github.com/rust-lang/rust/commit/b2040424b099df1efbb057c841279665376fe1b1</a></p>",
        "id": 276634446,
        "sender_full_name": "lcnr",
        "timestamp": 1648221653
    },
    {
        "content": "<p>ideally I would have liked to simply have a function which returns all region errors and failed obligations and build custom errors directly</p>",
        "id": 276634666,
        "sender_full_name": "lcnr",
        "timestamp": 1648221741
    },
    {
        "content": "<p>but we don't have to api to do that for region errors rn</p>",
        "id": 276634687,
        "sender_full_name": "lcnr",
        "timestamp": 1648221749
    },
    {
        "content": "<p>and it might not be sensible to add that</p>",
        "id": 276634769,
        "sender_full_name": "lcnr",
        "timestamp": 1648221784
    },
    {
        "content": "<p>Would additional fine grained obligation causes be able to help?</p>",
        "id": 276637174,
        "sender_full_name": "oli",
        "timestamp": 1648222757
    },
    {
        "content": "<p>I think that <code>DropBoundsImpliedObligation</code> should already be enough, much rather i feel like there is too much stuff going on for error reporting</p>",
        "id": 276637406,
        "sender_full_name": "lcnr",
        "timestamp": 1648222853
    },
    {
        "content": "<p>Ah I see now. Hmm.. instead of processing the obligation just for a note, you could change the entry point for this diagnostic to go down a completely separate path if the obligation cause is that specific one</p>",
        "id": 276637904,
        "sender_full_name": "oli",
        "timestamp": 1648223080
    },
    {
        "content": "<p>Obligation causes are just for diagnostics, so \"too much going on\" is irrelevant. Tho I think you're talking about actually adding that obligation cause and similar?</p>",
        "id": 276638028,
        "sender_full_name": "oli",
        "timestamp": 1648223145
    },
    {
        "content": "<p>We could add a generic error reporter type, so that you can choose to switch to a different scheme, and that scheme could be \"don't report but use a full error info struct instead of ErrorReported\"</p>",
        "id": 276638183,
        "sender_full_name": "oli",
        "timestamp": 1648223214
    },
    {
        "content": "<p>idk, just felt bad adding some code to like 10 different places, most of which should never get hit if i did everything right, but I don't fully understand how the current setup ends up where it does</p>",
        "id": 276638222,
        "sender_full_name": "lcnr",
        "timestamp": 1648223231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/144729-wg-traits/topic/dropck.20no.20sus.20relate/near/276637904\">said</a>:</p>\n<blockquote>\n<p>Ah I see now. Hmm.. instead of processing the obligation just for a note, you could change the entry point for this diagnostic to go down a completely separate path if the obligation cause is that specific one</p>\n</blockquote>\n<p>that's probably what I want to do</p>",
        "id": 276638247,
        "sender_full_name": "lcnr",
        "timestamp": 1648223241
    },
    {
        "content": "<p>Well, in all the places you don't care about you can likely fall through to misc or bug! out if you want to be sure</p>",
        "id": 276638454,
        "sender_full_name": "oli",
        "timestamp": 1648223316
    },
    {
        "content": "<blockquote>\n<p>ideally I would have liked to simply have a function which returns all region errors and failed obligations and build custom errors directly</p>\n</blockquote>\n<p>Uh, we do have that</p>",
        "id": 276638551,
        "sender_full_name": "oli",
        "timestamp": 1648223367
    },
    {
        "content": "<p>You can do the select_obligations_where_possible and then ask for the list of pending obligations.</p>",
        "id": 276638680,
        "sender_full_name": "oli",
        "timestamp": 1648223409
    },
    {
        "content": "<p>The select itself may already return errors</p>",
        "id": 276638781,
        "sender_full_name": "oli",
        "timestamp": 1648223444
    },
    {
        "content": "<p>The infra around all this may be suboptimal, but we can fix that</p>",
        "id": 276638896,
        "sender_full_name": "oli",
        "timestamp": 1648223482
    },
    {
        "content": "<p>yes, but that's not possible with region obligations</p>",
        "id": 276638926,
        "sender_full_name": "lcnr",
        "timestamp": 1648223491
    },
    {
        "content": "<p>these get checked separately, and currently don't propagate errors back up</p>",
        "id": 276638993,
        "sender_full_name": "lcnr",
        "timestamp": 1648223515
    },
    {
        "content": "<p>but always emit them eagerly</p>",
        "id": 276639065,
        "sender_full_name": "lcnr",
        "timestamp": 1648223531
    },
    {
        "content": "<p>Oh you mean borrowck specifically?</p>",
        "id": 276643955,
        "sender_full_name": "oli",
        "timestamp": 1648225348
    },
    {
        "content": "<p>We have a different scheme there, yea</p>",
        "id": 276644013,
        "sender_full_name": "oli",
        "timestamp": 1648225368
    },
    {
        "content": "<p>So yea I agree, not sure if we can or should do anything here</p>",
        "id": 276644121,
        "sender_full_name": "oli",
        "timestamp": 1648225411
    },
    {
        "content": "<p>We can certainly investigate</p>",
        "id": 276644148,
        "sender_full_name": "oli",
        "timestamp": 1648225422
    }
]