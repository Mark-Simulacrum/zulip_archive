[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>, meeting in 2ish minutes</p>",
        "id": 200281650,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732728
    },
    {
        "content": "<p>Agenda hackmd: <a href=\"https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg\">https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg</a></p>",
        "id": 200281732,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732764
    },
    {
        "content": "<p>Nothing on the plate for today so far</p>",
        "id": 200281740,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732773
    },
    {
        "content": "<p>Nice to see that the sprint doc is being kept updated as well: <a href=\"https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg?both\">https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg?both</a></p>",
        "id": 200281809,
        "sender_full_name": "detrumi",
        "timestamp": 1591732800
    },
    {
        "content": "<p>(Sitting in as I'm interested in what's going on - nice to meet everyone)</p>",
        "id": 200281890,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591732817
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"225949\">@Nathan Corbyn</span> Hello!</p>",
        "id": 200281933,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732836
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"225949\">Nathan Corbyn</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200281890\">said</a>:</p>\n<blockquote>\n<p>(Sitting in as I'm interested in what's going on - nice to meet everyone)</p>\n</blockquote>\n<p>(Same here!)</p>",
        "id": 200281947,
        "sender_full_name": "mental",
        "timestamp": 1591732842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310140\">@mental</span> hello as well :)</p>",
        "id": 200281969,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732855
    },
    {
        "content": "<p>Okay, so announcements/updates?</p>",
        "id": 200282032,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732882
    },
    {
        "content": "<p>We almost almost have <code>Unsize</code></p>",
        "id": 200282090,
        "sender_full_name": "Areredify",
        "timestamp": 1591732907
    },
    {
        "content": "<p>A pretty busy week in terms of PRs</p>",
        "id": 200282094,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> unless <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has comments, you can merge</p>",
        "id": 200282119,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732921
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 200282126,
        "sender_full_name": "blitzerr",
        "timestamp": 1591732922
    },
    {
        "content": "<p>Hi all</p>",
        "id": 200282178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591732930
    },
    {
        "content": "<p>Busy week indeed</p>",
        "id": 200282188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591732933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> hello :)</p>",
        "id": 200282189,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732934
    },
    {
        "content": "<p>13 PRs merged in the last week</p>",
        "id": 200282310,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591732987
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 200282383,
        "sender_full_name": "blitzerr",
        "timestamp": 1591733018
    },
    {
        "content": "<p>including lifetimes for <code>dyn</code>, <code>Fn</code> family traits, Some <code>FnDef</code> updates, refactoring to recursive solver</p>",
        "id": 200282425,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733036
    },
    {
        "content": "<p>Also, there is a PR for rustc to update to chalk 0.11</p>",
        "id": 200282573,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733086
    },
    {
        "content": "<p>how is the \"auto-publish\" process working?</p>",
        "id": 200282604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733101
    },
    {
        "content": "<p>was about to mention that</p>",
        "id": 200282618,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733108
    },
    {
        "content": "<p>also, re: <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span>'s PR, I'll try to take a look after this call, i'd like to give it a glance over</p>",
        "id": 200282624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733111
    },
    {
        "content": "<p>it failed :(</p>",
        "id": 200282625,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733111
    },
    {
        "content": "<p>d'oh</p>",
        "id": 200282635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733116
    },
    {
        "content": "<p>seems like there's a caching issue</p>",
        "id": 200282651,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733126
    },
    {
        "content": "<p>And cargo doesn't recognize that a previous crate was published</p>",
        "id": 200282687,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733149
    },
    {
        "content": "<p>yeah ok</p>",
        "id": 200282705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733155
    },
    {
        "content": "<p>just run it in a loop</p>",
        "id": 200282722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733161
    },
    {
        "content": "<p>;)</p>",
        "id": 200282765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733164
    },
    {
        "content": "<p>so chalk-ir 0.12 was successfully published, the index was updated, and then chalk-engine failed</p>",
        "id": 200282783,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733171
    },
    {
        "content": "<p>well so</p>",
        "id": 200282785,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254853\">@pksunkara</span> specifically added code to force update the cargo index</p>",
        "id": 200282822,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733192
    },
    {
        "content": "<p>but that seems to not have worked</p>",
        "id": 200282840,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733199
    },
    {
        "content": "<p>so anyways, that's ongoing</p>",
        "id": 200282929,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733242
    },
    {
        "content": "<p>yep</p>",
        "id": 200282956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733255
    },
    {
        "content": "<p>But, chalk-derive and chalk-ir got a 0.12 update</p>",
        "id": 200282971,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733263
    },
    {
        "content": "<p>The rest did not</p>",
        "id": 200282983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733268
    },
    {
        "content": "<p>I'm not/wasn't really worried about manually going through and updating the rest</p>",
        "id": 200283056,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200282573\">said</a>:</p>\n<blockquote>\n<p>Also, there is a PR for rustc to update to chalk 0.11</p>\n</blockquote>\n<p>I haven't really followed this, but can the <code>compare-mode=chalk</code> thing be used to compare trait solving between chalk and rustc?</p>",
        "id": 200283074,
        "sender_full_name": "detrumi",
        "timestamp": 1591733296
    },
    {
        "content": "<p>yes</p>",
        "id": 200283088,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733307
    },
    {
        "content": "<p>I ran the entire rustc test suite with chalk</p>",
        "id": 200283112,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733319
    },
    {
        "content": "<p>cool, I should take a look at that sometimes</p>",
        "id": 200283125,
        "sender_full_name": "detrumi",
        "timestamp": 1591733326
    },
    {
        "content": "<p>Only about 20-30% pass</p>",
        "id": 200283127,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733327
    },
    {
        "content": "<p>I also have closures somewhat working locally :)</p>",
        "id": 200283180,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733352
    },
    {
        "content": "<p>so one thing I think we could talk about in this meeting is how to integrate \"new folk\" and whether anyone is feeling blocked on stuff</p>",
        "id": 200283201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733360
    },
    {
        "content": "<p>and some work on adding closures into chalk, of course</p>",
        "id": 200283207,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733366
    },
    {
        "content": "<p>Ah true</p>",
        "id": 200283235,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733379
    },
    {
        "content": "<p>Sem-syn is blocked on that map from canonical issue</p>",
        "id": 200283354,
        "sender_full_name": "Areredify",
        "timestamp": 1591733420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"225949\">@Nathan Corbyn</span> <span class=\"user-mention\" data-user-id=\"310140\">@mental</span> <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> or @anyone else did you want to contribute to chalk or rustc? Or just around?</p>",
        "id": 200283375,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733430
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200283375\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"225949\">Nathan Corbyn</span> <span class=\"user-mention silent\" data-user-id=\"310140\">mental</span> <span class=\"user-mention silent\" data-user-id=\"128294\">blitzerr</span> or @anyone else did you want to contribute to chalk or rustc? Or just around?</p>\n</blockquote>\n<p>Interested in both though I feel much more comfortable with the rustc codebase</p>",
        "id": 200283433,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591733455
    },
    {
        "content": "<p>I'm also interested in contributing to chalk</p>",
        "id": 200283467,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591733472
    },
    {
        "content": "<p>ok so one \"line of work\" I've been wanting to lay out the steps for is starting to do some refactorings (sometimes experimental ones) on rustc towards aligning chalk/rustc</p>",
        "id": 200283484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733479
    },
    {
        "content": "<p>I feel like maybe we should form a \"subgroup\" to talk that out separately</p>",
        "id": 200283514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733492
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200283201\">said</a>:</p>\n<blockquote>\n<p>so one thing I think we could talk about in this meeting is how to integrate \"new folk\" and whether anyone is feeling blocked on stuff</p>\n</blockquote>\n<p>I didn't want to interrupt the conversation but I think I can chime in here: I'm not quite sure what the context/history around the changes are so maybe a quick brief would help? (for the newbies atleast)</p>",
        "id": 200283526,
        "sender_full_name": "mental",
        "timestamp": 1591733497
    },
    {
        "content": "<p>I would like to contribute to both but comfortable with neither :D</p>",
        "id": 200283528,
        "sender_full_name": "blitzerr",
        "timestamp": 1591733498
    },
    {
        "content": "<p>(by 'align chalk/rustc' I am specifically talking about the idea of extracting a shared library for types)</p>",
        "id": 200283639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200283375\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"225949\">Nathan Corbyn</span> <span class=\"user-mention silent\" data-user-id=\"310140\">mental</span> <span class=\"user-mention silent\" data-user-id=\"128294\">blitzerr</span> or @anyone else did you want to contribute to chalk or rustc? Or just around?</p>\n</blockquote>\n<p>I wouldn't mind contributing to both :)</p>",
        "id": 200283649,
        "sender_full_name": "mental",
        "timestamp": 1591733551
    },
    {
        "content": "<p>Hmm</p>",
        "id": 200283662,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200283639\">said</a>:</p>\n<blockquote>\n<p>(by 'align chalk/rustc' I am specifically talking about the idea of extracting a shared library for types)</p>\n</blockquote>\n<p>Definitely very interested in this</p>",
        "id": 200283663,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591733559
    },
    {
        "content": "<p>ayy mcp time</p>",
        "id": 200283676,
        "sender_full_name": "Areredify",
        "timestamp": 1591733569
    },
    {
        "content": "<p>So, I'm looking over the sprint goals</p>",
        "id": 200283725,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733593
    },
    {
        "content": "<p>And trying to get a bearing on what people can do</p>",
        "id": 200283742,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733602
    },
    {
        "content": "<p>I think maybe a way to get started would be to have a meeting to plan out in more detail. I keep meaning to do that on my own time but it keeps not happening. If folks want to meet and do it live, that migh help a lot :)</p>",
        "id": 200283744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733604
    },
    {
        "content": "<p>(e.g., maybe later this week)</p>",
        "id": 200283766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733612
    },
    {
        "content": "<p>As far as chalk work</p>",
        "id": 200283874,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733646
    },
    {
        "content": "<p>I think the big thing is to push to get the builtin traits and types done</p>",
        "id": 200283899,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733659
    },
    {
        "content": "<p>I think maybe a good place <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> within <em>chalk</em> for people to get started has been extending chalk with traits or small things that rustc needs? it's hard for me to tell if we're reaching the end of that line of work:)</p>",
        "id": 200283912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733664
    },
    {
        "content": "<p>yes, that</p>",
        "id": 200283922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733668
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang/chalk/issues/368\">https://github.com/rust-lang/chalk/issues/368</a></p>",
        "id": 200283924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733668
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/chalk/issues/363\">https://github.com/rust-lang/chalk/issues/363</a></p>",
        "id": 200283946,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733679
    },
    {
        "content": "<p>Traits might actually be done with <code>Unsize</code></p>",
        "id": 200283981,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733696
    },
    {
        "content": "<p>Is <code>Generator</code> the only remaining type once <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> pushes their closure code?</p>",
        "id": 200283998,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591733704
    },
    {
        "content": "<p>one thing we need is 'generator interior'</p>",
        "id": 200284030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733716
    },
    {
        "content": "<p>or witness</p>",
        "id": 200284034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733719
    },
    {
        "content": "<p>or whatever rustc calls it</p>",
        "id": 200284037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733721
    },
    {
        "content": "<p>that one is a \"bit special\" in that it has a binder</p>",
        "id": 200284057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733727
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200283924\">said</a>:</p>\n<blockquote>\n<p>so <a href=\"https://github.com/rust-lang/chalk/issues/368\">https://github.com/rust-lang/chalk/issues/368</a></p>\n</blockquote>\n<p>I think we can check off \"generalize struct to enum/union\" now</p>",
        "id": 200284062,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1591733731
    },
    {
        "content": "<p>Generator, and then also support different variants in <code>Adt</code></p>",
        "id": 200284071,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733736
    },
    {
        "content": "<p>They are not <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 200284074,
        "sender_full_name": "Areredify",
        "timestamp": 1591733738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> what others? We should add them</p>",
        "id": 200284152,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733763
    },
    {
        "content": "<p>We are missing <code>Unpin</code>, <code>CoerceUnsized</code> and <code>DispatchFromDyn</code></p>",
        "id": 200284171,
        "sender_full_name": "Areredify",
        "timestamp": 1591733771
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>  I know you're pretty familiar with the generator code, maybe you want to look at the case of the generator interior?</p>",
        "id": 200284180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733776
    },
    {
        "content": "<p>I'm not <em>super</em> familiar with it, but I'd be happy to work on that</p>",
        "id": 200284210,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591733797
    },
    {
        "content": "<p>And uhh <code>GeneratorWitness</code> I think?</p>",
        "id": 200284236,
        "sender_full_name": "Areredify",
        "timestamp": 1591733816
    },
    {
        "content": "<p>Or whatever the trait name is</p>",
        "id": 200284256,
        "sender_full_name": "Areredify",
        "timestamp": 1591733831
    },
    {
        "content": "<p>I think the trait is just called <code>Generator</code></p>",
        "id": 200284286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200284171\">said</a>:</p>\n<blockquote>\n<p>We are missing <code>Unpin</code>, <code>CoerceUnsized</code> and <code>DispatchFromDyn</code></p>\n</blockquote>\n<p>wth I have never heard of <code>DispatchFromDyn</code></p>",
        "id": 200284288,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733846
    },
    {
        "content": "<p>don't look at <code>DispatchFromDyn</code></p>",
        "id": 200284324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733858
    },
    {
        "content": "<p>everybody  just look over there, nothing to see here, move along now</p>",
        "id": 200284341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733868
    },
    {
        "content": "<p>Hahahahaha</p>",
        "id": 200284358,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591733878
    },
    {
        "content": "<p>For some more chalk work, it'd be great if someone could finish up the tracing PR (it's been waiting on a rebase for a while, though at this point it might be easier to re-do the PR)</p>",
        "id": 200284434,
        "sender_full_name": "detrumi",
        "timestamp": 1591733898
    },
    {
        "content": "<p>heh I guess we do have to model it, what a pain :)</p>",
        "id": 200284435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733898
    },
    {
        "content": "<p>Yes, the tracing PR</p>",
        "id": 200284463,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733915
    },
    {
        "content": "<p>Was going to bring that up</p>",
        "id": 200284475,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733928
    },
    {
        "content": "<p>I was wondering whether there are other sorts of 'internal refactorings' of this kind, or improvements to test base, etc</p>",
        "id": 200284506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733941
    },
    {
        "content": "<p>It needs a rebase and documentation on how to use</p>",
        "id": 200284510,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733942
    },
    {
        "content": "<p>Oh regarding <code>DispatchFromDyn</code>, we need to model ZSTs and alignment</p>",
        "id": 200284518,
        "sender_full_name": "Areredify",
        "timestamp": 1591733945
    },
    {
        "content": "<p>(whatever happened to the folks working on saving .chalk files?)</p>",
        "id": 200284524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733951
    },
    {
        "content": "<p>That's still active :)</p>",
        "id": 200284539,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733965
    },
    {
        "content": "<p>Because wf checks for <code>DispatchFromDyn</code> require those things</p>",
        "id": 200284544,
        "sender_full_name": "Areredify",
        "timestamp": 1591733967
    },
    {
        "content": "<p>just only on Saturdays</p>",
        "id": 200284548,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591733972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200284518\">said</a>:</p>\n<blockquote>\n<p>Oh regarding <code>DispatchFromDyn</code>, we need to model ZSTs and alignment</p>\n</blockquote>\n<p>oh dear. this merits some separate discussion I guess, but presumably this will require callbacks through the <code>RustIrDatabase</code></p>",
        "id": 200284579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591733988
    },
    {
        "content": "<p>I also started to expand Chalk with the notion of <code>Variance</code></p>",
        "id": 200284655,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734017
    },
    {
        "content": "<p>(locally)</p>",
        "id": 200284663,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734022
    },
    {
        "content": "<p>are you talking about the subtyping work?</p>",
        "id": 200284672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734028
    },
    {
        "content": "<p><a href=\"https://github.com/jackh726/chalk/tree/subtype-variance\">https://github.com/jackh726/chalk/tree/subtype-variance</a></p>",
        "id": 200284688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734037
    },
    {
        "content": "<p>indeed</p>",
        "id": 200284692,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734038
    },
    {
        "content": "<p>that we discussed last time</p>",
        "id": 200284695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734041
    },
    {
        "content": "<p>ok</p>",
        "id": 200284698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> maybe if you could take a bit to just quickly glance over the branch and make sure it's heading in the right direction</p>",
        "id": 200284733,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734069
    },
    {
        "content": "<p>All I've added so far is the <code>Variance</code> enum and using it as an argument to <code>zip</code> and <code>zip_with</code> and all the <code>unify</code> functions</p>",
        "id": 200284788,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734106
    },
    {
        "content": "<p>This conversation is moving fast</p>",
        "id": 200284883,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734141
    },
    {
        "content": "<p>Yes, I'm feeling a bit lost :)</p>",
        "id": 200284897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734147
    },
    {
        "content": "<p>Those who are new, if you have questions or anything just speak up :)</p>",
        "id": 200284909,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734156
    },
    {
        "content": "<p>Coming back to built-in types, it seems like we assigned \"generator witness\", but there are several iitems in the list</p>",
        "id": 200284926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734167
    },
    {
        "content": "<p>\"Support multiple variants on Adt\" might be good for <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> or <span class=\"user-mention\" data-user-id=\"225949\">@Nathan Corbyn</span></p>",
        "id": 200284939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734181
    },
    {
        "content": "<p>as a way to get more into chalk</p>",
        "id": 200284952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734189
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 200284970,
        "sender_full_name": "blitzerr",
        "timestamp": 1591734201
    },
    {
        "content": "<p>somebody should volunteer to open an issue and describe what is expected ;)</p>",
        "id": 200284971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734202
    },
    {
        "content": "<p>Sounds like I'm being volunteered</p>",
        "id": 200284997,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734221
    },
    {
        "content": "<p>well, I'll open an issue for now</p>",
        "id": 200284999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734222
    },
    {
        "content": "<p>oh</p>",
        "id": 200285004,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734226
    },
    {
        "content": "<p>nvm</p>",
        "id": 200285005,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734227
    },
    {
        "content": "<p>:D</p>",
        "id": 200285013,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734230
    },
    {
        "content": "<p>I didn't plan to populate it very much :)</p>",
        "id": 200285018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734233
    },
    {
        "content": "<p>remind me why we care?</p>",
        "id": 200285088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734258
    },
    {
        "content": "<p>About what?</p>",
        "id": 200285110,
        "sender_full_name": "Areredify",
        "timestamp": 1591734273
    },
    {
        "content": "<p>variants</p>",
        "id": 200285122,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734282
    },
    {
        "content": "<p>for auto traits</p>",
        "id": 200285130,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734286
    },
    {
        "content": "<p>err</p>",
        "id": 200285151,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734299
    },
    {
        "content": "<p>no, <code>Sized</code></p>",
        "id": 200285157,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734303
    },
    {
        "content": "<p>I don't think auto traits care, but sized .. yeah ok</p>",
        "id": 200285164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734310
    },
    {
        "content": "<p>Unsizing also is not permitted on enums</p>",
        "id": 200285180,
        "sender_full_name": "Areredify",
        "timestamp": 1591734321
    },
    {
        "content": "<p>I am wondering if we want to change how the RustIr works here</p>",
        "id": 200285181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734321
    },
    {
        "content": "<p>in particular we could move to a more \"callback-based\" model</p>",
        "id": 200285200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734340
    },
    {
        "content": "<p>is that not how it is now?</p>",
        "id": 200285222,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734355
    },
    {
        "content": "<p>e.g., have something like <code>fn num_variants(&amp;self, adt_id: AdtId) -&gt; usize;</code></p>",
        "id": 200285226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734358
    },
    {
        "content": "<p>Why do variants matter for <code>Sized</code>, but not auto traits? Don't both need to know about 'constituent types'?</p>",
        "id": 200285259,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591734362
    },
    {
        "content": "<p>ohh</p>",
        "id": 200285276,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734365
    },
    {
        "content": "<p><code>fn field_type(&amp;self, adt_id: AdtId, variant_index: usize, field_index: usize) -&gt; Ty</code></p>",
        "id": 200285284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734373
    },
    {
        "content": "<p>rather than having the types</p>",
        "id": 200285288,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734374
    },
    {
        "content": "<p>right</p>",
        "id": 200285293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734377
    },
    {
        "content": "<p>that would map more cleanly to rustc</p>",
        "id": 200285309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734384
    },
    {
        "content": "<p>that might be worth doing</p>",
        "id": 200285315,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734387
    },
    {
        "content": "<p>especially because right now all the types are wrapped in an <code>Arc</code></p>",
        "id": 200285337,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200285259\">said</a>:</p>\n<blockquote>\n<p>Why do variants matter for <code>Sized</code>, but not auto traits? Don't both need to know about 'constituent types'?</p>\n</blockquote>\n<p>well what I meant is that, for auto traits, we don't care what variant a type came from, we just need the union</p>",
        "id": 200285338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734404
    },
    {
        "content": "<p>and don't need to be</p>",
        "id": 200285342,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734408
    },
    {
        "content": "<p>exactly</p>",
        "id": 200285353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734416
    },
    {
        "content": "<p>I think it is worth doing, at least we can start with ADTs, which are relatively simple</p>",
        "id": 200285392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734429
    },
    {
        "content": "<p>they don't have any binders</p>",
        "id": 200285403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734434
    },
    {
        "content": "<p>Want to file an issue for that :)</p>",
        "id": 200285416,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734441
    },
    {
        "content": "<blockquote>\n<p>well what I meant is that, for auto traits, we don't care what variant a type came from, we just need the union</p>\n</blockquote>\n<p>Is that for error reporting, or does <code>Sized</code> have some special behavior for enums?</p>",
        "id": 200285479,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591734478
    },
    {
        "content": "<p>yes, <code>Sized</code> is special</p>",
        "id": 200285542,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734493
    },
    {
        "content": "<p>particularly, <em>for each variant</em>, all but the last field must be <code>Sized</code></p>",
        "id": 200285571,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734510
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/chalk/issues/506\">https://github.com/rust-lang/chalk/issues/506</a></p>",
        "id": 200285599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734532
    },
    {
        "content": "<p>oh, I see</p>",
        "id": 200285620,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591734543
    },
    {
        "content": "<p>Structs, there's only one variant</p>",
        "id": 200285626,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734547
    },
    {
        "content": "<p>so it's the last field</p>",
        "id": 200285638,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734552
    },
    {
        "content": "<p>unions, IIRC are also one variant</p>",
        "id": 200285660,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734566
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/505\">chalk#505</a> and <a href=\"https://github.com/rust-lang-nursery/chalk/issues/506\">chalk#506</a> might be the same issue</p>",
        "id": 200285698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734588
    },
    {
        "content": "<p>so we had a list of built-in traits ...</p>",
        "id": 200285821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734632
    },
    {
        "content": "<p>oh, and, I think there's some missing things from the \"function pointer\" type</p>",
        "id": 200285845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734644
    },
    {
        "content": "<p>relevant logic: <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_ty/ty.rs#L185\">https://github.com/rust-lang/rust/blob/master/src/librustc_ty/ty.rs#L185</a></p>",
        "id": 200285848,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734648
    },
    {
        "content": "<p>and a real simple PR to rename it</p>",
        "id": 200285852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200285571\">said</a>:</p>\n<blockquote>\n<p>particularly, <em>for each variant</em>, all but the last field must be <code>Sized</code></p>\n</blockquote>\n<p>Why is this the case?</p>",
        "id": 200285966,
        "sender_full_name": "detrumi",
        "timestamp": 1591734706
    },
    {
        "content": "<p>Also, <code>FnDef</code>s need to implement <code>Fn</code> family traits, but I have that in my closure branch</p>",
        "id": 200285970,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734707
    },
    {
        "content": "<p>I thought we had forbidden unsized enums altogether</p>",
        "id": 200286073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> I'm not sure I can really answer <em>why</em> well</p>",
        "id": 200286080,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734742
    },
    {
        "content": "<p>uh</p>",
        "id": 200286105,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734755
    },
    {
        "content": "<p>opened <a href=\"https://github.com/rust-lang/chalk/issues/507\">https://github.com/rust-lang/chalk/issues/507</a></p>",
        "id": 200286114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if so, then I haven't seen that and the code I've read suggests otherwise :/</p>",
        "id": 200286256,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591734835
    },
    {
        "content": "<p>Isn't it because unsized types store the extra data in the fat pointer/reference pointing to them, and so per-variant there can only be one unsized thing?</p>",
        "id": 200286278,
        "sender_full_name": "David Ross",
        "timestamp": 1591734842
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=41f3c572bd1c3d89b62eff7fdde91821\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=41f3c572bd1c3d89b62eff7fdde91821</a></p>",
        "id": 200286305,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591734844
    },
    {
        "content": "<p>it doesn't look like we accept unsized enums, even as the last field</p>",
        "id": 200286368,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591734878
    },
    {
        "content": "<p>we <em>do</em> require that the last field in a <em>struct</em> is the \"unsized\" one</p>",
        "id": 200286399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734893
    },
    {
        "content": "<p>for..various reasons that we can discuss separately</p>",
        "id": 200286461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734920
    },
    {
        "content": "<p>nonetheless I think it'd probably be good to just mirror the variant/field list</p>",
        "id": 200286508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734939
    },
    {
        "content": "<p>if for no other reason that integrating with rustc is awkward as it currently is</p>",
        "id": 200286530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734950
    },
    {
        "content": "<p>since it requires allocating a kind of fresh vector and concatenating things</p>",
        "id": 200286549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591734958
    },
    {
        "content": "<p>okay, well this is good to know</p>",
        "id": 200286660,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735003
    },
    {
        "content": "<p>Unsized enums are not permitted, that is correct</p>",
        "id": 200286721,
        "sender_full_name": "Areredify",
        "timestamp": 1591735038
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"218710\">David Ross</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200286278\">said</a>:</p>\n<blockquote>\n<p>Isn't it because unsized types store the extra data in the fat pointer/reference pointing to them, and so per-variant there can only be one unsized thing?</p>\n</blockquote>\n<p>yeah basically the idea is that only one field can be unsized, and it always comes last, because that means the earlier fields have fixed offsets. We could <em>maybe</em> have permitted it to not be the last field in the struct and just adjusted the layout, but I think that may have made other things awkward... and anyway that's the rules we ended up with.</p>",
        "id": 200286796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735078
    },
    {
        "content": "<p>We kinda went on a tangent on this one</p>",
        "id": 200286899,
        "sender_full_name": "Areredify",
        "timestamp": 1591735114
    },
    {
        "content": "<p>so somebody should claim <a href=\"https://github.com/rust-lang/chalk/issues/507\">https://github.com/rust-lang/chalk/issues/507</a> :)</p>",
        "id": 200286912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735122
    },
    {
        "content": "<p>but actually we have to extend it in a few other ways too</p>",
        "id": 200286955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735139
    },
    {
        "content": "<p>I'll add them to the issue</p>",
        "id": 200286959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735142
    },
    {
        "content": "<p>haha yeah super easy</p>",
        "id": 200286964,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735143
    },
    {
        "content": "<p>e.g., we should support <code>unsafe</code> fn</p>",
        "id": 200286969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735145
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200286912\">said</a>:</p>\n<blockquote>\n<p>so somebody should claim <a href=\"https://github.com/rust-lang/chalk/issues/507\">https://github.com/rust-lang/chalk/issues/507</a> :)</p>\n</blockquote>\n<p>haha dibs!</p>",
        "id": 200286997,
        "sender_full_name": "mental",
        "timestamp": 1591735159
    },
    {
        "content": "<p>hmm</p>",
        "id": 200286999,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735160
    },
    {
        "content": "<p>Making a pr for that is actually faster than typing \"@rustbot claim\"</p>",
        "id": 200287001,
        "sender_full_name": "Areredify",
        "timestamp": 1591735162
    },
    {
        "content": "<p>oh, that reminds me</p>",
        "id": 200287049,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591735182
    },
    {
        "content": "<p>Why do we need to support <code>unsafe</code></p>",
        "id": 200287053,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735183
    },
    {
        "content": "<p>Because it's a wf check</p>",
        "id": 200287070,
        "sender_full_name": "Areredify",
        "timestamp": 1591735194
    },
    {
        "content": "<p>because <code>unsafe fn</code> is a type</p>",
        "id": 200287072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735195
    },
    {
        "content": "<p>this is my chance to address <a href=\"https://github.com/rust-lang/rust/issues/64552#issuecomment-533267241\">https://github.com/rust-lang/rust/issues/64552#issuecomment-533267241</a></p>",
        "id": 200287167,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591735220
    },
    {
        "content": "<p>For <code>GeneratorWitness</code>, we don't actually want to erase all of the inner lifetimes</p>",
        "id": 200287205,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591735239
    },
    {
        "content": "<p>unsafe impls for safe traits and vice versa is a wf check that probably falls on the shoulders on chalk (or does it?)</p>",
        "id": 200287219,
        "sender_full_name": "Areredify",
        "timestamp": 1591735248
    },
    {
        "content": "<p>because we need to 'remember' the relationships between regions to prove auto trait impls</p>",
        "id": 200287227,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591735253
    },
    {
        "content": "<p>also because <code>unsafe fn()</code> does not implement the <code>Fn</code>  trait</p>",
        "id": 200287233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735257
    },
    {
        "content": "<p>TIL</p>",
        "id": 200287271,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310140\">@mental</span> is your github name <code>mental32</code>?</p>",
        "id": 200287311,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735307
    },
    {
        "content": "<p>Luckily there's no UnsafeFn to worry about</p>",
        "id": 200287312,
        "sender_full_name": "detrumi",
        "timestamp": 1591735308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200287311\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310140\">mental</span> is your github name <code>mental32</code>?</p>\n</blockquote>\n<p>Yup</p>",
        "id": 200287401,
        "sender_full_name": "mental",
        "timestamp": 1591735342
    },
    {
        "content": "<p>d'oh</p>",
        "id": 200287439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735360
    },
    {
        "content": "<p>do we also need separate types for extern \"C\" fns?</p>",
        "id": 200287511,
        "sender_full_name": "David Ross",
        "timestamp": 1591735390
    },
    {
        "content": "<p>In addition, I still have to go through more of the rustc integration and enumerate some things to work on</p>",
        "id": 200287543,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735404
    },
    {
        "content": "<p>WOW I did not notice that mis-assignment in the first place hah, nice catch! <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 200287556,
        "sender_full_name": "mental",
        "timestamp": 1591735410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218710\">@David Ross</span> yes, that's a PR :)</p>",
        "id": 200287568,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218710\">@David Ross</span> that is being added in <a href=\"https://github.com/rust-lang-nursery/chalk/issues/481\">chalk#481</a></p>",
        "id": 200287594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735426
    },
    {
        "content": "<p>though I realize now I can't remember if <code>extern \"C\" fn()</code> implements the <code>Fn</code> trait</p>",
        "id": 200287612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735437
    },
    {
        "content": "<p>hopefully yes</p>",
        "id": 200287650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735442
    },
    {
        "content": "<p>But as far as rustc integration goes, I think the biggest \"wins\" we can get, at least in terms of support is finishing the builtin types and traits</p>",
        "id": 200287747,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> regarding generator witnesses and erasure etc, if we make the chalk type have the ability to be \"existential\" over multiple regions, I think that suffices to capture most of what we need, though not the relationships between those regions, but that would come I thin kfrom the same implied bounds approach that we need to use for types like <code>for&lt;'a, 'b&gt;...</code> and we can discuss it a bit separately</p>",
        "id": 200287786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735516
    },
    {
        "content": "<p>The next big one is subtyping and type outlives</p>",
        "id": 200287787,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735517
    },
    {
        "content": "<p>hmm type outlives</p>",
        "id": 200287818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735530
    },
    {
        "content": "<p>well</p>",
        "id": 200287832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735535
    },
    {
        "content": "<p>so in <em>rustc</em> at least that is largely not handled by the trait solver</p>",
        "id": 200287847,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735545
    },
    {
        "content": "<p>Would we need some kind of 'higher-ranked region bounds'?<br>\nE.g. <code>for&lt;'a, 'b: 'a&gt; { ... }</code></p>",
        "id": 200287875,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591735561
    },
    {
        "content": "<p>so when you say \"type outlives\" do you mean extending chalk's notion of constraints to include the possibility of emitting a <code>T: 'a</code> constraint</p>",
        "id": 200287917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I do not plan to approach it that way :)</p>",
        "id": 200287934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735575
    },
    {
        "content": "<p>(I'll open a separate topic...)</p>",
        "id": 200287954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735586
    },
    {
        "content": "<p>Well, at least deciding what we need to do when we see a <code>TypeOutlives</code> predicate</p>",
        "id": 200288004,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735615
    },
    {
        "content": "<p>(link incoming)</p>",
        "id": 200288012,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735619
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk/lowering.rs#L103\">https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk/lowering.rs#L103</a></p>",
        "id": 200288059,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735645
    },
    {
        "content": "<p>so I think we basically want to treat it like region outlives in chalk, at least for now</p>",
        "id": 200288175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735690
    },
    {
        "content": "<p>basically \"pipe it through\" into a constraint</p>",
        "id": 200288202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735706
    },
    {
        "content": "<p>that's a good issue to file</p>",
        "id": 200288214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> extern c functions do not implement <code>Fn</code>, you need to wrap them into a closure with no arguments</p>",
        "id": 200288224,
        "sender_full_name": "Areredify",
        "timestamp": 1591735714
    },
    {
        "content": "<p>ok, we should fix that ...</p>",
        "id": 200288248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735728
    },
    {
        "content": "<p>Interesting, <code>extern \"rust-call\" fn call</code> (<a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call\">https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call</a>)</p>",
        "id": 200288310,
        "sender_full_name": "detrumi",
        "timestamp": 1591735756
    },
    {
        "content": "<p>Well, nothing to fix yet :)</p>",
        "id": 200288317,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735759
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4e1e49c8d0e7f83bf630e29cc883580e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4e1e49c8d0e7f83bf630e29cc883580e</a></p>",
        "id": 200288330,
        "sender_full_name": "Areredify",
        "timestamp": 1591735768
    },
    {
        "content": "<p>Since <code>FnDef</code>s don't impl <code>Fn</code> yet</p>",
        "id": 200288331,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288310\">said</a>:</p>\n<blockquote>\n<p>Interesting, <code>extern \"rust-call\" fn call</code> (<a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call\">https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call</a>)</p>\n</blockquote>\n<p>look away look away</p>",
        "id": 200288333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735770
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288331\">said</a>:</p>\n<blockquote>\n<p>Since <code>FnDef</code>s don't impl <code>Fn</code> yet</p>\n</blockquote>\n<p>well I think <code>Fn</code> types do</p>",
        "id": 200288357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735786
    },
    {
        "content": "<p>yeah, so what the heck is \"rust-call\"</p>",
        "id": 200288360,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735788
    },
    {
        "content": "<p>don't they?</p>",
        "id": 200288362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735789
    },
    {
        "content": "<p>oh</p>",
        "id": 200288372,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735795
    },
    {
        "content": "<p>hmm</p>",
        "id": 200288373,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735797
    },
    {
        "content": "<p>We're hitting a lot of dark corners of Rust today</p>",
        "id": 200288428,
        "sender_full_name": "detrumi",
        "timestamp": 1591735805
    },
    {
        "content": "<p>So, the PR adds an abi to <code>Fn</code> but not <code>FnDef</code></p>",
        "id": 200288503,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288333\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288310\">said</a>:</p>\n<blockquote>\n<p>Interesting, <code>extern \"rust-call\" fn call</code> (<a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call\">https://doc.rust-lang.org/std/ops/trait.Fn.html#tymethod.call</a>)</p>\n</blockquote>\n<p>look away look away</p>\n</blockquote>\n<p>I'm working on validating the MIR for rust-call shims right now and look away is definitely good advice</p>",
        "id": 200288517,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591735855
    },
    {
        "content": "<p>nvm</p>",
        "id": 200288540,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735868
    },
    {
        "content": "<p>I thnk I was wrong to suggest that <a href=\"https://github.com/rust-lang/chalk/pull/481\">https://github.com/rust-lang/chalk/pull/481</a> adds the ABI to <code>Fn</code> too</p>",
        "id": 200288558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735885
    },
    {
        "content": "<p>(as I wrote in my comment just now)</p>",
        "id": 200288571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735893
    },
    {
        "content": "<p>I didn't realize how much of a scope creep that would be</p>",
        "id": 200288589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591735902
    },
    {
        "content": "<p>Oh geez. We're already at 52 minutes</p>",
        "id": 200288747,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735978
    },
    {
        "content": "<p>Guess today's a triage day</p>",
        "id": 200288767,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591735987
    },
    {
        "content": "<p>I opened <a class=\"stream-topic\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits/topic/what.20is.20rust-call\">#wg-traits &gt; what is rust-call</a> for those who feel they can't look away as I and <span class=\"user-mention\" data-user-id=\"225949\">@Nathan Corbyn</span> suggest :)</p>",
        "id": 200288817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736010
    },
    {
        "content": "<p>I feel like it's been a pretty productive meeting in terms of outlining actionable and open next steps</p>",
        "id": 200288864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288817\">said</a>:</p>\n<blockquote>\n<p>I opened <a class=\"stream-topic\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits/topic/what.20is.20rust-call\">#wg-traits &gt; what is rust-call</a> for those who feel they can't look away as I and <span class=\"user-mention silent\" data-user-id=\"225949\">Nathan Corbyn</span> suggest :)</p>\n</blockquote>\n<p>...I was just about to ask \"what is rust-call\" <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 200288873,
        "sender_full_name": "mental",
        "timestamp": 1591736039
    },
    {
        "content": "<p>Yes, super productive</p>",
        "id": 200288930,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736046
    },
    {
        "content": "<p>I guess it's good to ask:</p>",
        "id": 200288958,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736056
    },
    {
        "content": "<p>Does anybody feel like they want to work on something, but don't have anything to work on</p>",
        "id": 200288989,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736071
    },
    {
        "content": "<p>Or feel blocked?</p>",
        "id": 200288997,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736074
    },
    {
        "content": "<p>(Maybe apart from the shared type library, which <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is going to go through separately)</p>",
        "id": 200289051,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736100
    },
    {
        "content": "<p>I'm looking for something to work on, been a little aimless recently</p>",
        "id": 200289061,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591736107
    },
    {
        "content": "<p>even on that note, we at least made a plan for me to make a meeting time :)</p>",
        "id": 200289074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736114
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang-nursery/chalk/issues/505\">chalk#505</a> and <a href=\"https://github.com/rust-lang-nursery/chalk/issues/506\">chalk#506</a> remain, I think, unclaimed</p>",
        "id": 200289138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230601\">@Nathan Whitaker</span> anything in particular you're interested in?</p>",
        "id": 200289162,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736162
    },
    {
        "content": "<p>Also the tracing PR</p>",
        "id": 200289184,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736168
    },
    {
        "content": "<p>but we also had this big list of built-in traits to add</p>",
        "id": 200289193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736172
    },
    {
        "content": "<p>I <em>really</em> want to see that land</p>",
        "id": 200289195,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736173
    },
    {
        "content": "<p>we should open issues for that</p>",
        "id": 200289205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736180
    },
    {
        "content": "<p>and yes, the tracing PR</p>",
        "id": 200289208,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736181
    },
    {
        "content": "<p>Yeah, maybe separate for the builtin traits would be nice</p>",
        "id": 200289243,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736202
    },
    {
        "content": "<p>Anyone else?</p>",
        "id": 200289422,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736288
    },
    {
        "content": "<p>(or <span class=\"user-mention\" data-user-id=\"230601\">@Nathan Whitaker</span> are none of those interesting)</p>",
        "id": 200289456,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736305
    },
    {
        "content": "<p>Hm, I'm happy to work on whatever needs to get done, so I may pick up a bit of the builtin traits work.</p>",
        "id": 200289470,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591736314
    },
    {
        "content": "<p>I would volunteer for the tracing PR, but I haven't personally used it so it may be a bit slow getting started</p>",
        "id": 200289510,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591736337
    },
    {
        "content": "<p>Makes sense</p>",
        "id": 200289533,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736348
    },
    {
        "content": "<p>Like I said before, I actually don't think there's much work left. Just a rebase and docs</p>",
        "id": 200289552,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736363
    },
    {
        "content": "<p>Okay, so if nobody has anything else</p>",
        "id": 200289586,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736382
    },
    {
        "content": "<p>We can end early</p>",
        "id": 200289598,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736386
    },
    {
        "content": "<p>I'll take a peek :)</p>",
        "id": 200289602,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591736388
    },
    {
        "content": "<p>(a whole minute)</p>",
        "id": 200289609,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I've got <a href=\"https://github.com/rust-lang/chalk/issues/507\">chalk/#507</a> to keep me busy but if there's anything else outstanding I could prioritize it alongside to help move things along</p>",
        "id": 200289616,
        "sender_full_name": "mental",
        "timestamp": 1591736393
    },
    {
        "content": "<p>(maybe not even a whole minute)</p>",
        "id": 200289630,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200284171\">said</a>:</p>\n<blockquote>\n<p>We are missing <code>Unpin</code>, <code>CoerceUnsized</code> and <code>DispatchFromDyn</code></p>\n</blockquote>",
        "id": 200289717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736421
    },
    {
        "content": "<p>that was the list</p>",
        "id": 200289729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310140\">@mental</span> I think chalk/#507 is good to work on :)</p>",
        "id": 200289731,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736426
    },
    {
        "content": "<p>I'll open up some issues for them</p>",
        "id": 200289751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736439
    },
    {
        "content": "<p>Thanks everyone for coming :)</p>",
        "id": 200289783,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736459
    },
    {
        "content": "<p>Super happy to see newcomers too!</p>",
        "id": 200289797,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736468
    },
    {
        "content": "<p>Can I be added to <code>wg-traits</code> on Github?</p>",
        "id": 200289830,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591736486
    },
    {
        "content": "<p>Hopefully I can pick up some tasks at the next meeting - if anything comes up in the meantime a ping would be much appreciated ^-^</p>",
        "id": 200289872,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591736503
    },
    {
        "content": "<p>Note that adding <code>Unpin</code> is useless before we have generators</p>",
        "id": 200289898,
        "sender_full_name": "Areredify",
        "timestamp": 1591736518
    },
    {
        "content": "<p>Because <code>impl !Unpin for Generator</code> is basically the only piece of logic for them</p>",
        "id": 200290003,
        "sender_full_name": "Areredify",
        "timestamp": 1591736546
    },
    {
        "content": "<p>What does tracing PR entail ?</p>",
        "id": 200290037,
        "sender_full_name": "blitzerr",
        "timestamp": 1591736563
    },
    {
        "content": "<p>Well, it will still be useful to have as an auto trait</p>",
        "id": 200290045,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591736568
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"225949\">@Nathan Corbyn</span> want to pick up <a href=\"https://github.com/rust-lang/chalk/issues/505\">https://github.com/rust-lang/chalk/issues/505</a>?</p>",
        "id": 200290076,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736581
    },
    {
        "content": "<p>(or did somebody else claim that, I'm so lost)</p>",
        "id": 200290099,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736597
    },
    {
        "content": "<p>actually, how do we map rustc auto traits to chalk auto traits?</p>",
        "id": 200290100,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591736598
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> the <code>auto</code>field</p>",
        "id": 200290129,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736617
    },
    {
        "content": "<p>in the flags</p>",
        "id": 200290144,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736623
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200288224\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> extern c functions do not implement <code>Fn</code>, you need to wrap them into a closure with no arguments</p>\n</blockquote>\n<p>Uh oh</p>",
        "id": 200290165,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1591736639
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/blob/master/chalk-solve/src/rust_ir.rs#L269\">https://github.com/rust-lang/chalk/blob/master/chalk-solve/src/rust_ir.rs#L269</a></p>",
        "id": 200290167,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736640
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200290076\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"225949\">Nathan Corbyn</span> want to pick up <a href=\"https://github.com/rust-lang/chalk/issues/505\">https://github.com/rust-lang/chalk/issues/505</a>?</p>\n</blockquote>\n<p>If no-one else is I can definitely give it a go</p>",
        "id": 200290209,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591736644
    },
    {
        "content": "<p>nvm, then - <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> was right</p>",
        "id": 200290221,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1591736649
    },
    {
        "content": "<p>PS for newcomers</p>",
        "id": 200290306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736698
    },
    {
        "content": "<p>I want to point out <a href=\"http://rust-lang.github.io/chalk/book/\">http://rust-lang.github.io/chalk/book/</a></p>",
        "id": 200290325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736709
    },
    {
        "content": "<p>which tries to give high-level overview etc</p>",
        "id": 200290355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736723
    },
    {
        "content": "<p>if you can think of things we should add, please edit the <a href=\"http://*%20Goal:%20GAT%20support%20in%20rustc\">list at the bottom of this hackmd</a></p>",
        "id": 200290382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736740
    },
    {
        "content": "<p>or better yet ask questions then open a PR...</p>",
        "id": 200290395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736747
    },
    {
        "content": "<p>e.g., we probably should have a chapter on auto traits</p>",
        "id": 200290458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591736764
    },
    {
        "content": "<p>hackmd link doesn't work?</p>",
        "id": 200290486,
        "sender_full_name": "detrumi",
        "timestamp": 1591736781
    },
    {
        "content": "<p>We have a paragrpah about them in well known traits</p>",
        "id": 200290492,
        "sender_full_name": "Areredify",
        "timestamp": 1591736787
    },
    {
        "content": "<p>was about to say</p>",
        "id": 200290494,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736788
    },
    {
        "content": "<p><a href=\"http://rust-lang.github.io/chalk/book/clauses/well_known_traits.html?highlight=well#auto-traits\">http://rust-lang.github.io/chalk/book/clauses/well_known_traits.html?highlight=well#auto-traits</a></p>",
        "id": 200290531,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591736809
    },
    {
        "content": "<p>Hello! I am definitely late, but i'd be glad to help. I still struggle to understand some concept around chalk. I think i am lacking the vocabulary to properly understand some bits but i'll get there with time hopefully. In the mean time if there are some refactoring issue or something that is more about writing rust code than deep understanding of chalk concepts, i can totally give it a go :)</p>",
        "id": 200292490,
        "sender_full_name": "marmeladema",
        "timestamp": 1591737726
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I'm not sure if we have really any refactoring to do</p>",
        "id": 200293004,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591737996
    },
    {
        "content": "<p>But if you sort of just \"want to write Rust\"</p>",
        "id": 200293020,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591738004
    },
    {
        "content": "<p>maybe benchmarks?</p>",
        "id": 200293025,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591738008
    },
    {
        "content": "<p>I've also seen that you've been hacking on rustc a bit. So maybe you would be interested in helping out with the integration there?</p>",
        "id": 200293097,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591738056
    },
    {
        "content": "<p>Yeah helping on integration would be awesome!</p>",
        "id": 200293190,
        "sender_full_name": "marmeladema",
        "timestamp": 1591738094
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2006.2E09.2E2020/near/200290492\">said</a>:</p>\n<blockquote>\n<p>We have a paragrpah about them in well known traits</p>\n</blockquote>\n<p>this doesn't seem like a very visible location</p>",
        "id": 200299042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591741583
    },
    {
        "content": "<p>or at least we should re-title the page to mention them</p>",
        "id": 200299063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591741603
    },
    {
        "content": "<p>e.g., Well known / auto traits</p>",
        "id": 200299074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591741611
    }
]