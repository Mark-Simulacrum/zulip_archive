[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> -- meeting time in 5 minutes or so!</p>",
        "id": 164473327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556560496
    },
    {
        "content": "<p>/me realizes he didn't eat lunch today</p>",
        "id": 164473335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556560500
    },
    {
        "content": "<p>I'm...gonna grab a falafel :) so maybe a few minutes late</p>",
        "id": 164473353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556560514
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Can't make it today sadly, but I thought I'd update that <a href=\"https://github.com/rust-lang/rust/pull/59445\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59445\">https://github.com/rust-lang/rust/pull/59445</a> is just waiting for review from Centril (though you or someone else is welcome to check it out and approve it too). The majority has already been reviewed.</p>",
        "id": 164473555,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1556560665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> nice</p>",
        "id": 164474440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561200
    },
    {
        "content": "<p>OK <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 164474463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561226
    },
    {
        "content": "<p>So, it's the start of a new 6-week \"sprint\"  this week</p>",
        "id": 164474508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561265
    },
    {
        "content": "<p>I've been thinking about that and what it means =)</p>",
        "id": 164474575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561289
    },
    {
        "content": "<p>I created <a href=\"https://paper.dropbox.com/doc/wg-traits-sprint.next--AcLKrZ42EpC~vvP4xUAtQzsrAg-tlB3kVtQPO4ysoM8p6Zd2\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/wg-traits-sprint.next--AcLKrZ42EpC~vvP4xUAtQzsrAg-tlB3kVtQPO4ysoM8p6Zd2\">this dropbox paper document</a>, trying to identify some of the next steps we should take for chalk etc</p>",
        "id": 164474638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561335
    },
    {
        "content": "<p>I also realized a few things -- (a) I thnk that I should generally spend the sprints preparing for the next one :)</p>",
        "id": 164474684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561368
    },
    {
        "content": "<p>(too late now, but maybe I can work on that for next time)</p>",
        "id": 164474694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561376
    },
    {
        "content": "<p>and (b) I continue to struggle a bit in terms of the best next steps are :)</p>",
        "id": 164474806,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561450
    },
    {
        "content": "<p>the doc I posted a link to includes a smattering of tasks; there are more, but I thnk that's a decent set, but maybe we can discuss a bit the goals and where those tasks came from</p>",
        "id": 164474856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561508
    },
    {
        "content": "<p>First off, I think a \"enabling\" thing to do is to try and land <a href=\"https://github.com/rust-lang-nursery/chalk/issues/216\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/216\">chalk#216</a>, which <span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> has been working on. That I think is not really considering as a \"sprint\" activity per se because I hope we can do it very soon. I was hoping to spend some time on that this afternoon, in fact, trying to see if I can finish it up</p>",
        "id": 164474954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561559
    },
    {
        "content": "<p>But that PR basically positions <code>chalk-solve</code> as the main chalk crate, and I think the way to understand the layering then is:</p>\n<ul>\n<li>chalk -- testing harness</li>\n<li>chalk-solve -- bridges underlying logic engine and rust semantics</li>\n<li>chalk-engine -- underlying logic engine</li>\n</ul>",
        "id": 164475015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561606
    },
    {
        "content": "<p>I think then that one piece of \"validation\" that makes sense for chalk is to extend it to cover some of the corners of Rust it doesn't yet handle. I have two notable entries on the list:</p>\n<ul>\n<li>trait objects and impl trait</li>\n<li>specialization</li>\n</ul>",
        "id": 164475055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561641
    },
    {
        "content": "<p>Each of them can I think be broken down into some subtasks</p>",
        "id": 164475114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561656
    },
    {
        "content": "<p>Trait object and impl traits:</p>\n<ul>\n<li>I think we can break these down into extending chalk-ir and chalk-solve to express them and give them their basic semantics</li>\n<li>And then (somewhat separately) the interactions with implied bounds</li>\n</ul>",
        "id": 164475209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561742
    },
    {
        "content": "<p>(The former builds pretty directly on <a href=\"https://github.com/rust-lang-nursery/chalk/issues/216\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/216\">chalk#216</a>)</p>",
        "id": 164475225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561758
    },
    {
        "content": "<p>The former is probably a \"medium\" engineering task</p>",
        "id": 164475305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561795
    },
    {
        "content": "<p>The latter is a design task, though <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> has basically laid it out -- so maybe it's more of a communication task :)</p>",
        "id": 164475324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561816
    },
    {
        "content": "<p>(which we can come back to)</p>",
        "id": 164475327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561820
    },
    {
        "content": "<p>When it comes to specialization, I think that there are more layers, but it begins with:</p>\n<ul>\n<li>If we know which impl specializes the other, extend the projection rules to take that into account</li>\n</ul>\n<p>I think this is actually pretty straightforward, and I think <span class=\"user-mention\" data-user-id=\"117350\">@Sunjay Varma</span> is interested. =) </p>\n<p>After that, we start to get into the more interesting soundness-related questions: these basically boil down to extending the coherence rules to ensure that, if impl A specializes impl B, then various criteria are met.</p>\n<p>In other words, we can separate into:</p>\n<ul>\n<li><em>when</em> can one impl specialize another (hard, postpone vaguely)</li>\n<li>what to do <em>if</em> one impl specializes another (relatively easy, start here)</li>\n</ul>",
        "id": 164475489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561914
    },
    {
        "content": "<p>(I'm typing a lot, I assume this makes at least <em>some</em> sense to people so far?)</p>",
        "id": 164475534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561950
    },
    {
        "content": "<p>actually I sort of like this breakdown, maybe I'll edit my sprint.next doc :)</p>",
        "id": 164475562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556561978
    },
    {
        "content": "<p>tl;dr:</p>\n<p>Goal: extend chalk to cover bits of Rust it doesnâ€™t cover</p>\n<ul>\n<li>trait objects (2 tasks)</li>\n<li>specialization (many tasks, but an obvious first step)</li>\n</ul>",
        "id": 164475684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562058
    },
    {
        "content": "<p>So I think the next goal has more to do w/ impl and search strategy</p>",
        "id": 164475724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562099
    },
    {
        "content": "<p>And I think the obvious steps I see in that direction are probably</p>\n<p>Goal: validate search strategy</p>\n<ul>\n<li>predicate order selection (relatively easy)</li>\n<li>non-enumerable clauses (hard)</li>\n</ul>",
        "id": 164475802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562145
    },
    {
        "content": "<p>I can explain a bit what I mean by those things if desired, I realize that's mostly opaque jibberish</p>",
        "id": 164475826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562167
    },
    {
        "content": "<p>In short, the order in which we try to prove things matters. There are some simple steps (\"order selection\") that we can use to try and keep ourselves in a smart order, but the structure of the solver will still wind up constrained. The \"non-enumerable clauses\" idea is a deeper change to the solver that should let it do more aggressive reordering.</p>",
        "id": 164475892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562224
    },
    {
        "content": "<blockquote>\n<p>chalk -- testing harness</p>\n</blockquote>\n<p>That's one confusing naming :) <code>chalk-testing</code> might be better</p>",
        "id": 164475962,
        "sender_full_name": "matklad",
        "timestamp": 1556562259
    },
    {
        "content": "<p>I think that doing those items probably involves some related things. One of them is probably me explaining chalk-engine in more detail, as a pre-req, so that  we can then dive into how non-enumerable clauses would work</p>",
        "id": 164475964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562260
    },
    {
        "content": "<blockquote>\n<p>That's one confusing naming :) <code>chalk-testing</code> might be better</p>\n</blockquote>\n<p>yes..I wanted to bring up the naming...</p>",
        "id": 164475982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562274
    },
    {
        "content": "<p>I was also thinking it might be better to use the main crate for what is now chalk-solve, and create a chalk-testing crate</p>",
        "id": 164476029,
        "sender_full_name": "detrumi",
        "timestamp": 1556562314
    },
    {
        "content": "<p>yeah, I think what we should do is</p>",
        "id": 164476060,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562332
    },
    {
        "content": "<p>create a <code>chalk_test</code> crate</p>",
        "id": 164476066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562336
    },
    {
        "content": "<p>and then move tests to <code>tests/</code> directory</p>",
        "id": 164476072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562341
    },
    {
        "content": "<p>i.e., use cargo properly</p>",
        "id": 164476074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562344
    },
    {
        "content": "<p>so we can add that I guess as a further work item</p>",
        "id": 164476262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562473
    },
    {
        "content": "<p>which raises a point I wanted to ask</p>",
        "id": 164476266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562477
    },
    {
        "content": "<blockquote>\n<p>Goal: make chalk a nice codebase to work with</p>\n</blockquote>",
        "id": 164476322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562492
    },
    {
        "content": "<p>this would be I think the meta goal</p>",
        "id": 164476327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562497
    },
    {
        "content": "<p>I think there is some work to be done there</p>",
        "id": 164476332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562502
    },
    {
        "content": "<p>in particular i've noticed (a) a general lack of comments</p>",
        "id": 164476397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562550
    },
    {
        "content": "<p>and (b) I think that the rustc-guide material is incomplete and/or out of date</p>",
        "id": 164476406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562557
    },
    {
        "content": "<p>maybe we want to put some energy into that?</p>",
        "id": 164476442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562583
    },
    {
        "content": "<p>not sure</p>",
        "id": 164476537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562623
    },
    {
        "content": "<p>Makes large refactorings a bit harder, but maybe things are mostly in place now?</p>",
        "id": 164476565,
        "sender_full_name": "detrumi",
        "timestamp": 1556562652
    },
    {
        "content": "<p>Yeah, that's a valid question.</p>",
        "id": 164476578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562664
    },
    {
        "content": "<p>Maybe not</p>",
        "id": 164476588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562668
    },
    {
        "content": "<p>API comments don't have that problem to the same degree</p>",
        "id": 164476623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562698
    },
    {
        "content": "<p>to keep rustc-guide from getting too out of date, maybe we should lean more on rustdoc for \"here are all the pieces and what they do\" type documentation</p>",
        "id": 164476703,
        "sender_full_name": "tmandry",
        "timestamp": 1556562730
    },
    {
        "content": "<p>(as well as direct API documentation)</p>",
        "id": 164476718,
        "sender_full_name": "tmandry",
        "timestamp": 1556562743
    },
    {
        "content": "<p>it's easier to remember to update things in the same codebase</p>",
        "id": 164476780,
        "sender_full_name": "tmandry",
        "timestamp": 1556562797
    },
    {
        "content": "<blockquote>\n<p>API comments don't have that problem to the same degree</p>\n</blockquote>\n<p>Yes, and some two-sentence descriptions of traits and structs would make a huge difference</p>",
        "id": 164476835,
        "sender_full_name": "detrumi",
        "timestamp": 1556562838
    },
    {
        "content": "<p>Yeah, we could do that.</p>",
        "id": 164476838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562841
    },
    {
        "content": "<p>I think for this sprint we should just focus on API docs</p>",
        "id": 164476890,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562849
    },
    {
        "content": "<p>it's sort of easy to \"enumerate\" the problem</p>",
        "id": 164476909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562859
    },
    {
        "content": "<p>and you have to walk before you can run</p>",
        "id": 164476916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562868
    },
    {
        "content": "<p>The goal of the rustc-guide docs was to help communicate the \"high level design\"</p>",
        "id": 164476930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562882
    },
    {
        "content": "<p>but I suspect that videos might be as good or better for serving that role</p>",
        "id": 164476942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562892
    },
    {
        "content": "<p>in case you've not been following the dropbox paper doc, I've got this so far:</p>\n<p>Goal: extend chalk to cover bits of Rust it doesnâ€™t cover</p>\n<ul>\n<li>trait objects (2 tasks)</li>\n<li>specialization (many tasks, but an obvious first step)</li>\n</ul>\n<p>Goal: validate search strategy</p>\n<ul>\n<li>predicate order selection (relatively easy)</li>\n<li>non-enumerable clauses (hard)<br>\n    - explain how chalk-engine works â€” 1 or 2 more zoom calls<br>\n    - explain and write-up proposal</li>\n</ul>\n<p>Goal: make chalk a nice codebase to work with</p>\n<ul>\n<li>good naming for crates, separate tests and repl out more cleanly</li>\n<li>API comments â€” set a goal to have <code>#[deny(missing_docs)]</code></li>\n</ul>",
        "id": 164476996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556562944
    },
    {
        "content": "<blockquote>\n<p>The goal of the rustc-guide docs was to help communicate the \"high level design\"</p>\n</blockquote>\n<p>yeah, maybe a better criteria for rustc-guide material is \"stuff that won't change significantly during refactoring\"..?</p>",
        "id": 164477065,
        "sender_full_name": "tmandry",
        "timestamp": 1556562987
    },
    {
        "content": "<p>This is true for a lot of that material</p>",
        "id": 164477082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563011
    },
    {
        "content": "<p>even though that may be hard to decide :)</p>",
        "id": 164477083,
        "sender_full_name": "tmandry",
        "timestamp": 1556563012
    },
    {
        "content": "<p>I have to review what's there</p>",
        "id": 164477085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563014
    },
    {
        "content": "<p>Here is my concern with the above list</p>",
        "id": 164477095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563023
    },
    {
        "content": "<p>I would like to be able to make clear steps towards chalk being used in something -- I think I would be happy with either rustc or rust-analyzer, or, ideally both</p>",
        "id": 164477119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563042
    },
    {
        "content": "<p>I guess that the non-enumerable clauses stuff is directly taking on the challenge of the \"builtin traits\"</p>",
        "id": 164477153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563077
    },
    {
        "content": "<p>I made a <a href=\"https://paper.dropbox.com/doc/rustc-chalk-integration--AcIDnfB0SViSRuJuzAnkRRQTAg-QSp9zIk3MS4jzyRpEzWv6#:uid=384362602477876109724804&amp;h2=Work-item-table\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/rustc-chalk-integration--AcIDnfB0SViSRuJuzAnkRRQTAg-QSp9zIk3MS4jzyRpEzWv6#:uid=384362602477876109724804&amp;h2=Work-item-table\">more complete table of work-items</a> here for rustc-chalk integration specifically</p>",
        "id": 164477220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563109
    },
    {
        "content": "<p>I'm skimming it now</p>",
        "id": 164477295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> you mentioned that some tests work in rustc now, right?</p>",
        "id": 164477377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563241
    },
    {
        "content": "<p>were you basically running things by hand?</p>",
        "id": 164477380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563245
    },
    {
        "content": "<p>did you ever try to run against run-pass or something like that?</p>",
        "id": 164477396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563254
    },
    {
        "content": "<p>I did not try to run against run-pass or whatever, there are only a few tests in run-pass/chalkify</p>",
        "id": 164477441,
        "sender_full_name": "scalexm",
        "timestamp": 1556563294
    },
    {
        "content": "<p>Which just show that some basic programs do compile</p>",
        "id": 164477460,
        "sender_full_name": "scalexm",
        "timestamp": 1556563315
    },
    {
        "content": "<p>ok.</p>",
        "id": 164477521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563345
    },
    {
        "content": "<p>I was wondering if we thought that might be useful</p>",
        "id": 164477527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563350
    },
    {
        "content": "<p>the other thing I was wondering about is:</p>",
        "id": 164477539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563358
    },
    {
        "content": "<p>if region constraints are a major work item, I think (a) we need something about them</p>",
        "id": 164477562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563376
    },
    {
        "content": "<p>and (b) maybe we should modify the chalk integration to ignore them completely for now</p>",
        "id": 164477579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563385
    },
    {
        "content": "<p>you could even imagine doing something where chalk + the existing trait engine run side-by-side</p>",
        "id": 164477606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563410
    },
    {
        "content": "<p>and chalk is just ignoring region bounds, say</p>",
        "id": 164477611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563416
    },
    {
        "content": "<p>the idea being: can we flesh out what other problems to expect?</p>",
        "id": 164477617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563423
    },
    {
        "content": "<blockquote>\n<p>if region constraints are a major work item, I think (a) we need something about them</p>\n</blockquote>\n<p>I have some thoughts here but want to focus on the other half first</p>",
        "id": 164477629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563431
    },
    {
        "content": "<p>(ps, sorry for this meeting running over-- sprint planning meetings really need more time :/)</p>",
        "id": 164477695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563451
    },
    {
        "content": "<blockquote>\n<p>the idea being: can we flesh out what other problems to expect?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> any thoughts on that?</p>\n<p>Separately, I remember you mentioning some kind of inference problems, right?</p>",
        "id": 164477871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563595
    },
    {
        "content": "<p>Yes</p>",
        "id": 164477908,
        "sender_full_name": "scalexm",
        "timestamp": 1556563632
    },
    {
        "content": "<p>I described one of those in a PR of mine</p>",
        "id": 164477931,
        "sender_full_name": "scalexm",
        "timestamp": 1556563664
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/58305\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58305\">https://github.com/rust-lang/rust/pull/58305</a></p>",
        "id": 164477999,
        "sender_full_name": "scalexm",
        "timestamp": 1556563695
    },
    {
        "content": "<p>OK</p>",
        "id": 164478127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563806
    },
    {
        "content": "<p>So I'm going to leave it at this for now:</p>\n<p>Goal: rustc-chalk interation improvements</p>\n<ul>\n<li>get to the bottom of inference failure problems</li>\n<li>consider some kind of mode to let us run more broadly against run-pass (e.g., disabling region integration, or running in tandem with the existing solver)</li>\n</ul>",
        "id": 164478158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563834
    },
    {
        "content": "<p>that's kind of vague but I will try to make it more specific</p>",
        "id": 164478165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563843
    },
    {
        "content": "<p>hmm.. I'm a bit concerned with leaving things vague after sprint planning, since in practice people usually don't pick up things like that to work on</p>",
        "id": 164478241,
        "sender_full_name": "tmandry",
        "timestamp": 1556563908
    },
    {
        "content": "<blockquote>\n<p>if region constraints are a major work item, I think (a) we need something about them</p>\n</blockquote>\n<p>to circle back to this: I have been thinking about how I think we should handle region constraints but I don't have firm answers. I want to try and talk this stuff out and write-up some sort of proposals. However, I suspect the ultimate solution will build on <a href=\"https://github.com/rust-lang-nursery/chalk/issues/216\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/216\">chalk#216</a>, most likely, and perhaps non-enumerable clauses.</p>",
        "id": 164478317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563941
    },
    {
        "content": "<p>Btw some parts of rustc still use the existing solver even with <code>-Z chalk</code></p>",
        "id": 164478319,
        "sender_full_name": "scalexm",
        "timestamp": 1556563948
    },
    {
        "content": "<p>For example code that need to use a <code>SelectionContext</code> directly rather than a <code>FulfillmentContext</code></p>",
        "id": 164478347,
        "sender_full_name": "scalexm",
        "timestamp": 1556563974
    },
    {
        "content": "<p>Ah, yeah, and there is e.g. the cast code in coercions</p>",
        "id": 164478373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563993
    },
    {
        "content": "<p>(ugh)</p>",
        "id": 164478377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556563995
    },
    {
        "content": "<p>Right</p>",
        "id": 164478384,
        "sender_full_name": "scalexm",
        "timestamp": 1556563999
    },
    {
        "content": "<p>I'm not sure whether to worry about this right now :) one possible work item would be to try and refactor that code out of existence. I had a vague plan to try and move it to use <code>evaluate</code> -- but this would I think possibly be a breaking change, not entirely sure.</p>",
        "id": 164478551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564104
    },
    {
        "content": "<blockquote>\n<p>hmm.. I'm a bit concerned with leaving things vague after sprint planning, since in practice people usually don't pick up things like that to work on</p>\n</blockquote>\n<p>indeed. I was thinking that after this I will try to create issues with specific instructions</p>",
        "id": 164478577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564130
    },
    {
        "content": "<p>OK, so, I'm feeling like this meeting has kind of gone long enough, we should look to some sort of wrap-up</p>",
        "id": 164478716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564242
    },
    {
        "content": "<p>I'm not sure whether to try and assign work now</p>",
        "id": 164478738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564259
    },
    {
        "content": "<p>or for me to go and create issues and we try to \"assign work\" mildly async</p>",
        "id": 164478747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564270
    },
    {
        "content": "<p>I'm leaning that way</p>",
        "id": 164478749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564272
    },
    {
        "content": "<p>one thing I want to ask is</p>",
        "id": 164478804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564286
    },
    {
        "content": "<p>well, I still have this feeling that we've not done a good job getting people \"up to speed\" on the big picture enough, and i'm debating what is the best way to do this</p>",
        "id": 164478882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564348
    },
    {
        "content": "<p>I guess I can't think of anything else that repeated zoom sessions trying to explain stuff :)</p>",
        "id": 164478923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564386
    },
    {
        "content": "<p>what is the scope of the big picture you wish to bring people up to speed on? :)</p>",
        "id": 164478995,
        "sender_full_name": "tmandry",
        "timestamp": 1556564412
    },
    {
        "content": "<p>i think it'd be nice to ways to 'cement' that, so that new people can come up to speed, though I suppose they can re-watch videos</p>",
        "id": 164479000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564414
    },
    {
        "content": "<blockquote>\n<p>what is the scope of the big picture you wish to bring people up to speed on? :)</p>\n</blockquote>\n<p>i'm wondering that myself :)</p>",
        "id": 164479007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564419
    },
    {
        "content": "<p>I think I am thinking of things like this:</p>\n<ul>\n<li>what are the set of domain goals and what is their purpose<br>\n    - like, why do we have <code>FromEnv</code>, <code>Implemented</code>, etc</li>\n<li>how the chalk-engine works </li>\n<li>.. is that it? maybe that's it? :)</li>\n</ul>",
        "id": 164479068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564475
    },
    {
        "content": "<p>I guess let me turn this around</p>",
        "id": 164479073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564485
    },
    {
        "content": "<p>What things do you the assembled feel confused about and do you think we should make an effort to explain things, or should we just keep finding tasks and \"learn by doing\"?</p>",
        "id": 164479103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564514
    },
    {
        "content": "<p>It's just a lot to take in. I mean, I can understand domain goals and such by looking at the implementation and the tests, but there's just so much to look  at <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 164479220,
        "sender_full_name": "detrumi",
        "timestamp": 1556564582
    },
    {
        "content": "<p>I think both of those things would be helpful.<br>\nAnother I hit when working in chalk was binders, shifting indices, and substitutions, not sure if that's been covered already.<br>\nThen there's the long tail of everything in rustc, e.g. I'm thinking of some of the things you mentioned that use the old trait code for <code>-Z chalk</code> and I don't have much context there at all.</p>",
        "id": 164479274,
        "sender_full_name": "tmandry",
        "timestamp": 1556564628
    },
    {
        "content": "<blockquote>\n<p>like, why do we have <code>FromEnv</code>, <code>Implemented</code>, etc</p>\n</blockquote>\n<p>one reason I would like to discuss these is that I want to pick better names=)</p>",
        "id": 164479384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564696
    },
    {
        "content": "<p>ok, so, let me ask the question a slightly different way</p>",
        "id": 164479425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564715
    },
    {
        "content": "<p>what do y'all think about fixing a weekly time (or perhaps every 2 weeks)</p>",
        "id": 164479439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564730
    },
    {
        "content": "<p>to do <em>some</em> kind of explanation</p>",
        "id": 164479446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564737
    },
    {
        "content": "<p>like we did last week</p>",
        "id": 164479451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564742
    },
    {
        "content": "<p>then we just have to pick which thing</p>",
        "id": 164479464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564751
    },
    {
        "content": "<p>I feel like scheduling is hard</p>",
        "id": 164479472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564758
    },
    {
        "content": "<p>but if we had a fixed slot, i'd be happy to just join a call and talk a bit</p>",
        "id": 164479520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564770
    },
    {
        "content": "<p>(is Zoom best? we could use zulip too)</p>",
        "id": 164479524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564776
    },
    {
        "content": "<p>somehow explaining things \"lecture style\" always feels very tedious over zulip :)</p>",
        "id": 164479533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564788
    },
    {
        "content": "<p>Zoom works</p>",
        "id": 164479543,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1556564799
    },
    {
        "content": "<p>I suggest that the people on the call be responsible for fleshing out the document you are writing as you write it. Otherwise a lot gets lost.</p>",
        "id": 164479586,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1556564830
    },
    {
        "content": "<p>that's a great idea</p>",
        "id": 164479591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564836
    },
    {
        "content": "<p>ok I can make a doodle to find a time for that</p>",
        "id": 164479602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556564851
    },
    {
        "content": "<p>It gives us a more active role on the call and produces an artifact for after the meeting too :)</p>",
        "id": 164479608,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1556564857
    },
    {
        "content": "<p>OK, that seems good. So I'm going to go try and create issues.</p>",
        "id": 164479991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556565125
    },
    {
        "content": "<p>and look a bit into <a href=\"https://github.com/rust-lang-nursery/chalk/issues/216\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/216\">chalk#216</a></p>",
        "id": 164480024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556565153
    },
    {
        "content": "<p>:)</p>",
        "id": 164480026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556565154
    },
    {
        "content": "<p>thanks all <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 164480036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556565163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> Think youâ€™ll have time to review my ATB PR soonish btw? Itâ€™s been bit-rotting a while heh.</p>",
        "id": 164491162,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1556573910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> I started a review, but it's a lot of code and I haven't gotten that far yet :)</p>",
        "id": 164491202,
        "sender_full_name": "tmandry",
        "timestamp": 1556573996
    },
    {
        "content": "<p>actually, I was talking about this with <span class=\"user-mention\" data-user-id=\"126931\">@centril</span></p>",
        "id": 164491274,
        "sender_full_name": "tmandry",
        "timestamp": 1556574018
    },
    {
        "content": "<p>I'm thinking it might be good to have separate reviewers for the implementation and the tests</p>",
        "id": 164491291,
        "sender_full_name": "tmandry",
        "timestamp": 1556574042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> might want to look at the tests, but I think it's good if <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> also looks at them to connect it to the implementation</p>",
        "id": 164491430,
        "sender_full_name": "centril",
        "timestamp": 1556574148
    },
    {
        "content": "<p>looking at them is one thing, but if we're talking about reviewing for completeness/correctness, I think it's another</p>",
        "id": 164491478,
        "sender_full_name": "tmandry",
        "timestamp": 1556574193
    },
    {
        "content": "<p>both are a significant amount of code, and reviewing each requires a different focus</p>",
        "id": 164491528,
        "sender_full_name": "tmandry",
        "timestamp": 1556574237
    },
    {
        "content": "<p>essentially, I view the tests as a \"lang\" thing, and the implementation as a \"compiler\" thing</p>",
        "id": 164491753,
        "sender_full_name": "tmandry",
        "timestamp": 1556574393
    },
    {
        "content": "<p>doing a thorough review of both is.. a lot for one person, especially given that I need to learn some parts of the code to review the implementation side :)</p>",
        "id": 164491799,
        "sender_full_name": "tmandry",
        "timestamp": 1556574452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> I agree with your general description :P</p>",
        "id": 164492545,
        "sender_full_name": "centril",
        "timestamp": 1556575105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> Okay sounds good, thanks.</p>",
        "id": 164496811,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1556579606
    }
]