[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> so, I was looking more at some of the chalk methods -- if we are moving away from predicate -- we may need our own \"unification code\" for chalk</p>",
        "id": 135846430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625292
    },
    {
        "content": "<p>which is actually not that hard to do</p>",
        "id": 135846438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625298
    },
    {
        "content": "<p>but it would probably be the third instance of the same basic logic</p>",
        "id": 135846441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625307
    },
    {
        "content": "<p>which I am not super thrilled about</p>",
        "id": 135846444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625310
    },
    {
        "content": "<p>right now, there is the \"main type relating\" code, and then NLL has its own copy</p>",
        "id": 135846487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625325
    },
    {
        "content": "<p>the main one yields up <code>PredicateObligation&lt;'tcx&gt;</code> results</p>",
        "id": 135846502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625349
    },
    {
        "content": "<p>but we would rather want <code>Goal</code> values</p>",
        "id": 135846513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625371
    },
    {
        "content": "<p>otoh that may be inevtable because the chalk unifier would be the one in charge of handling the lazy norm logic I guess</p>",
        "id": 135846536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ok so I guess I can just take the existing unifier code and rewrite it so as it uses goals?</p>",
        "id": 135846640,
        "sender_full_name": "scalexm",
        "timestamp": 1539625470
    },
    {
        "content": "<p>I am pondering</p>",
        "id": 135846666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625508
    },
    {
        "content": "<p>I'd probably model it on the NLL code</p>",
        "id": 135846675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625514
    },
    {
        "content": "<p>however:</p>",
        "id": 135846676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625517
    },
    {
        "content": "<p>we have at times been wondering if it makes sense to even use an infcx at all</p>",
        "id": 135846696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625554
    },
    {
        "content": "<p>ah well I don't want to revisit that decision yet</p>",
        "id": 135846746,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625566
    },
    {
        "content": "<p>let's discuss at the planning meeting; but in short I think that — much as it pains me — it probably makes sense to have Yet Another Unifier, yeah. We really need to see what we can do about reducing that though</p>",
        "id": 135846769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625621
    },
    {
        "content": "<p>I want to try and get a bit further through this list of <code>unimplemented!</code> helpers</p>",
        "id": 135846790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539625645
    },
    {
        "content": "<p>Unify the unifiers!</p>",
        "id": 135850754,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539629863
    },
    {
        "content": "<p>\"who will unify the unifiers...?\"</p>",
        "id": 135850760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539629874
    },
    {
        "content": "<p>I am totally going to go create a rustc issue with that title</p>",
        "id": 135850805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539629886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> where is the NLL unifier defined?</p>",
        "id": 136938309,
        "sender_full_name": "scalexm",
        "timestamp": 1541094897
    },
    {
        "content": "<p>say more :)</p>",
        "id": 136938335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541094918
    },
    {
        "content": "<p>there isn't really a \"NLL unifier\" per se</p>",
        "id": 136938345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541094927
    },
    {
        "content": "<p>well I guess maybe you mean this <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/relate_tys.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/relate_tys.rs\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/relate_tys.rs</a></p>",
        "id": 136938373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541094953
    },
    {
        "content": "<p>ah, yeah my question is maybe a bit vague, you told me that the simplest thing for chalk would be to have yet another copy of the unification code</p>",
        "id": 136938375,
        "sender_full_name": "scalexm",
        "timestamp": 1541094954
    },
    {
        "content": "<p>oh</p>",
        "id": 136938405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541094964
    },
    {
        "content": "<p>so you were looking for reference?</p>",
        "id": 136938443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095013
    },
    {
        "content": "<p>yes that's right :)</p>",
        "id": 136938446,
        "sender_full_name": "scalexm",
        "timestamp": 1541095022
    },
    {
        "content": "<p>I'm trying to remember why I said that :)</p>",
        "id": 136938563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095123
    },
    {
        "content": "<p>oh, I guess in part because of lazy norm</p>",
        "id": 136938574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095135
    },
    {
        "content": "<p>(sound right?)</p>",
        "id": 136938595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095151
    },
    {
        "content": "<p>yes, and that we wanted to use <code>Goal</code> etc instead of <code>ty::PredicateObligation</code></p>",
        "id": 136938607,
        "sender_full_name": "scalexm",
        "timestamp": 1541095172
    },
    {
        "content": "<p>ok, well, then probably the code I referred you to just now is what I was thinking of</p>",
        "id": 136938787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095288
    },
    {
        "content": "<p>I guess those are still good reasons</p>",
        "id": 136938793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541095295
    },
    {
        "content": "<p>ok cool</p>",
        "id": 136938915,
        "sender_full_name": "scalexm",
        "timestamp": 1541095398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> are you around by any chance?</p>",
        "id": 137117286,
        "sender_full_name": "scalexm",
        "timestamp": 1541259165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> fyi <a href=\"https://github.com/rust-lang-nursery/chalk/issues/189\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/chalk/issues/189\">https://github.com/rust-lang-nursery/chalk/issues/189</a> is blocking the implementation of <code>ChalkContext::instantiate_ex_clause</code></p>",
        "id": 146823983,
        "sender_full_name": "scalexm",
        "timestamp": 1541452046
    },
    {
        "content": "<p>also, I was thinking that if we generalized the NLL relating code so that it handles inference variables in both sides of the relation, it would be easy for me to adapt it for chalk</p>",
        "id": 146824042,
        "sender_full_name": "scalexm",
        "timestamp": 1541452093
    },
    {
        "content": "<p>I just extended a bit the <code>TypeRelatingDelegate</code> delegate and added a <code>NormalizationStrategy</code> enum (with <code>Lazy</code>/<code>Eager</code> variants)</p>",
        "id": 146824075,
        "sender_full_name": "scalexm",
        "timestamp": 1541452152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> okay sure. could you recommend someone to take a look at my PR in the meanwhile maybe?</p>",
        "id": 146839368,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1541469731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> what is current status here?</p>",
        "id": 146929098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541583395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I have placeholder types etc, as I said I think I’m going to extend the NLL relating code so that it handles inference variables in both sides and I can use it for chalk</p>",
        "id": 146930790,
        "sender_full_name": "scalexm",
        "timestamp": 1541585859
    },
    {
        "content": "<p>Because apart from that, I found it easy to just inject lazy normalization into it</p>",
        "id": 146930872,
        "sender_full_name": "scalexm",
        "timestamp": 1541585969
    },
    {
        "content": "<p>ok <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, I think the main work on unification was done in this commit: <a href=\"https://github.com/rust-lang/rust/commit/7f4ca7ff35b34a4923bb92a4e9f251c8aa1cc935\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/7f4ca7ff35b34a4923bb92a4e9f251c8aa1cc935\">https://github.com/rust-lang/rust/commit/7f4ca7ff35b34a4923bb92a4e9f251c8aa1cc935</a></p>",
        "id": 147260202,
        "sender_full_name": "scalexm",
        "timestamp": 1541628514
    },
    {
        "content": "<p>however there are a few little unknowns for which I might need your help</p>",
        "id": 147260226,
        "sender_full_name": "scalexm",
        "timestamp": 1541628533
    },
    {
        "content": "<p>tell me when you have a bit of time to discuss (this can be done through text messages)</p>",
        "id": 147260252,
        "sender_full_name": "scalexm",
        "timestamp": 1541628563
    },
    {
        "content": "<p>hmm</p>",
        "id": 147309251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541693006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> perhaps I can carve out some time tomorrow morning?</p>",
        "id": 147309262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541693023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> seems fine</p>",
        "id": 147309477,
        "sender_full_name": "scalexm",
        "timestamp": 1541693212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> so obviously that failed</p>",
        "id": 147544500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542049134
    },
    {
        "content": "<p>:)</p>",
        "id": 147544501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542049136
    },
    {
        "content": "<p>want to chat tomorrow morning though? perhaps at 10am my time (4pm your time)?</p>",
        "id": 147544517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542049156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah that's cool</p>",
        "id": 147544538,
        "sender_full_name": "scalexm",
        "timestamp": 1542049193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/compare/master...scalexm:unification\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/compare/master...scalexm:unification\">https://github.com/rust-lang/rust/compare/master...scalexm:unification</a></p>",
        "id": 147599038,
        "sender_full_name": "scalexm",
        "timestamp": 1542123608
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"o\">&lt;</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">A</span>: <span class=\"nb\">Iterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span>: <span class=\"nc\">A</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 147599236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542123821
    },
    {
        "content": "<p><code>Foo&lt;A1, ?B1&gt; &lt;: Foo&lt;A2, ?B2&gt;</code></p>",
        "id": 147599400,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542123926
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>for&lt;&#39;a, &#39;b&gt; fn(&amp;&#39;a u32, &amp;&#39;b u32) == for&lt;&#39;a&gt; fn(&amp;&#39;a u32, &amp;&#39;a u32)\n</pre></div>",
        "id": 147600357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542124777
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/a8c21cd2d3c4ac119a4b107aa4e0cdaf6d2e40f8#diff-32301bf61aae94fb34652b6c581a507fL255\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/a8c21cd2d3c4ac119a4b107aa4e0cdaf6d2e40f8#diff-32301bf61aae94fb34652b6c581a507fL255\">https://github.com/rust-lang/rust/commit/a8c21cd2d3c4ac119a4b107aa4e0cdaf6d2e40f8#diff-32301bf61aae94fb34652b6c581a507fL255</a></p>",
        "id": 147600664,
        "sender_full_name": "scalexm",
        "timestamp": 1542124985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> any time to look at my questions / WIP PR today maybe?</p>",
        "id": 147603304,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542127388
    },
    {
        "content": "<p>on my list for today, yes</p>",
        "id": 147603335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542127421
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 147604036,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542127981
    },
    {
        "content": "<p>thanks</p>",
        "id": 147604047,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542127988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so I have all the chalk callbacks implemented in my <code>unification</code> branch (modulo the ones that <span class=\"user-mention\" data-user-id=\"117350\">@Sunjay Varma</span> and <span class=\"user-mention\" data-user-id=\"120512\">@uberjay</span> are working on)</p>",
        "id": 147764893,
        "sender_full_name": "scalexm",
        "timestamp": 1542308852
    },
    {
        "content": "<p>there are probably a lot of bugs, so I guess a way to test everything is to proceed on switching the trait solver to use chalk</p>",
        "id": 147764919,
        "sender_full_name": "scalexm",
        "timestamp": 1542308877
    },
    {
        "content": "<p>any guidance for that? I'm not sure I know where to start</p>",
        "id": 147764978,
        "sender_full_name": "scalexm",
        "timestamp": 1542308894
    },
    {
        "content": "<p>ok I guess first step is to implement the <code>TraitEngine</code> trait that <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> added</p>",
        "id": 147765153,
        "sender_full_name": "scalexm",
        "timestamp": 1542309083
    },
    {
        "content": "<p>yep that's right <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span></p>",
        "id": 147765685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542309493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> could you find some time to review <a href=\"https://github.com/rust-lang/rust/pull/56214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56214\">https://github.com/rust-lang/rust/pull/56214</a>?</p>",
        "id": 148719580,
        "sender_full_name": "scalexm",
        "timestamp": 1543419351
    },
    {
        "content": "<p>I think I have fixed most bugs since my <code>chalk</code> branch seems to work pretty well now</p>",
        "id": 148719629,
        "sender_full_name": "scalexm",
        "timestamp": 1543419366
    },
    {
        "content": "<p>yep; still feeling a bit sick today but I expect to at least do some reviewing in between naps :)</p>",
        "id": 148719672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543419409
    }
]