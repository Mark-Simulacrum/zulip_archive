[
    {
        "content": "<p>Hi!<br>\nI'm interested in contributing to chalk and anything related to GATs. I have searched for some easy issues to get me started, but can't seem to find any that haven't already been claimed. Does anyone have pointers as to what a first time contributor like me could work on to familiarize oneself with the codebase?</p>",
        "id": 194942424,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587566883
    },
    {
        "content": "<p>Hi, welcome <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 194948070,
        "sender_full_name": "detrumi",
        "timestamp": 1587569270
    },
    {
        "content": "<p>Looking at the <a href=\"https://rust-lang.github.io/wg-traits/roadmap/skill-tree.html\" title=\"https://rust-lang.github.io/wg-traits/roadmap/skill-tree.html\">skill tree</a>, we have a rough idea what needs to happen around GATs, but I'm not sure whether any of them are simple enough to start out with</p>",
        "id": 194948210,
        "sender_full_name": "detrumi",
        "timestamp": 1587569325
    },
    {
        "content": "<p>There's also <a href=\"https://github.com/rust-lang/chalk/pull/362\" title=\"https://github.com/rust-lang/chalk/pull/362\">a PR with the <code>good first issue</code> label</a> ( <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ), to finish the tracing setup</p>",
        "id": 194948888,
        "sender_full_name": "detrumi",
        "timestamp": 1587569600
    },
    {
        "content": "<p>Other than that, I'm sure there's work to be picked up, we just haven't created the issues for them yet</p>",
        "id": 194949018,
        "sender_full_name": "detrumi",
        "timestamp": 1587569645
    },
    {
        "content": "<p>Adding <code>Fn</code> trait support is also on the table</p>",
        "id": 194951447,
        "sender_full_name": "Areredify",
        "timestamp": 1587570691
    },
    {
        "content": "<p>Awesome, thanks! :)<br>\nI will look into that PR, seems perfect. If I read the issue/PR correctly: basically add <code>tracing</code> support for relevant parts of <code>chalk-engine</code>?</p>",
        "id": 194951917,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587570878
    },
    {
        "content": "<p>You can look at my pr's with Sized and Copy implementations, you will probably also need to look at rustc code that handles the <code>Fn</code> trait</p>",
        "id": 194951971,
        "sender_full_name": "Areredify",
        "timestamp": 1587570906
    },
    {
        "content": "<p>Oh, sorry. I was referring to the PR linked by detrumi <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 194952396,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587571091
    },
    {
        "content": "<p>Yeah I understand, I wasn't answering to you message, just providing general info about the issue</p>",
        "id": 194953009,
        "sender_full_name": "Areredify",
        "timestamp": 1587571298
    },
    {
        "content": "<p>All good, with any luck someone else gets interested and picks that up (<span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> you should make an issue for Fn support))</p>",
        "id": 194953018,
        "sender_full_name": "detrumi",
        "timestamp": 1587571301
    },
    {
        "content": "<p>It's already there, just <a href=\"https://github.com/rust-lang/chalk/issues/363\" title=\"https://github.com/rust-lang/chalk/issues/363\">hidden</a></p>",
        "id": 194953244,
        "sender_full_name": "Areredify",
        "timestamp": 1587571379
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295706\">@Christofer Nolander</span> Yes, the PR basically just adds tracing support for chalk-engine</p>",
        "id": 194955983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587572550
    },
    {
        "content": "<p>But also other chalk crates I think</p>",
        "id": 194955997,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587572562
    },
    {
        "content": "<p>For some context, there's already a stream for it: <a href=\"#narrow/stream/144729-wg-traits/topic/tracing.20in.20chalk/near/192424178\" title=\"#narrow/stream/144729-wg-traits/topic/tracing.20in.20chalk/near/192424178\">https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits/topic/tracing.20in.20chalk/near/192424178</a></p>",
        "id": 194956130,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587572634
    },
    {
        "content": "<p>If you have questions, feel free to ask :)</p>",
        "id": 194956148,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587572642
    },
    {
        "content": "<p>Great, thanks! Suddenly I have a lot of reading to look forward to :)</p>",
        "id": 194956888,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587572986
    },
    {
        "content": "<p>Ok, so I have converted whatever stderr logging I could find to tracing (I was not brave enough to add any new logging though :P)</p>",
        "id": 194979142,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583423
    },
    {
        "content": "<p>Now for the tough part: how do I push my changes to <span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span>'s PR?</p>",
        "id": 194979273,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295706\">@Christofer Nolander</span> I can give you permissions to my fork?</p>",
        "id": 194979330,
        "sender_full_name": "David Barsky",
        "timestamp": 1587583512
    },
    {
        "content": "<p>Sure, that works</p>",
        "id": 194979416,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583560
    },
    {
        "content": "<p>What's your github alias?</p>",
        "id": 194979616,
        "sender_full_name": "David Barsky",
        "timestamp": 1587583652
    },
    {
        "content": "<p>\"nolanderc\"</p>",
        "id": 194979663,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583675
    },
    {
        "content": "<p>invited!</p>",
        "id": 194979844,
        "sender_full_name": "David Barsky",
        "timestamp": 1587583741
    },
    {
        "content": "<p>once you accept, you should be able to push to my branch/PR.</p>",
        "id": 194979862,
        "sender_full_name": "David Barsky",
        "timestamp": 1587583750
    },
    {
        "content": "<p>Nice, let's hope this works :)</p>",
        "id": 194980050,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583805
    },
    {
        "content": "<p>Hmm, somehow I pushed to the <code>david/add-tracing</code> branch instead of <code>add-tracing</code>, any ideas?</p>",
        "id": 194980370,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583954
    },
    {
        "content": "<p>(pushed using <code>git push david add-tracing</code> where <code>david</code> is the name of the remote to your repo)</p>",
        "id": 194980432,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587583989
    },
    {
        "content": "<p>There we go, that was really confusing, apparently I was pushing to <code>add-tracing</code> but I was supposed to push to <code>david/add-tracing</code>. No idea how GitHub figured out that I used <code>david</code> as an alias though.</p>",
        "id": 194982213,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587584825
    },
    {
        "content": "<p>yup, it's meant to be push to <code>david/add-tracing</code>, but glad you got it.</p>",
        "id": 194982984,
        "sender_full_name": "David Barsky",
        "timestamp": 1587585220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295706\">@Christofer Nolander</span> PR is looking good :)</p>",
        "id": 194988461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587587961
    },
    {
        "content": "<p>It might be easier to just open up your own PR, and we can close <span class=\"user-mention\" data-user-id=\"198819\">@David Barsky</span>'s</p>",
        "id": 194988495,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587587977
    },
    {
        "content": "<p>that also works!</p>",
        "id": 194988523,
        "sender_full_name": "David Barsky",
        "timestamp": 1587587988
    },
    {
        "content": "<p>Also, do you think you could update this snippet about debugging? <a href=\"https://github.com/rust-lang/chalk/blob/master/book/src/contribution_guide.md#running-and-debugging\" title=\"https://github.com/rust-lang/chalk/blob/master/book/src/contribution_guide.md#running-and-debugging\">https://github.com/rust-lang/chalk/blob/master/book/src/contribution_guide.md#running-and-debugging</a></p>",
        "id": 194988732,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588091
    },
    {
        "content": "<p>i.e. just a quick note about how to actually see the output and such</p>",
        "id": 194988754,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588112
    },
    {
        "content": "<p>Sure, however, when/where should we actually print the output?</p>",
        "id": 194989081,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588307
    },
    {
        "content": "<p>The tests currently include a catch-all dump to stderr, should there also be one in <code>chalk/src/main.rs</code>?</p>",
        "id": 194989114,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588344
    },
    {
        "content": "<p>So with <code>CHALK_DEBUG</code>, it's just written to stderr</p>",
        "id": 194989190,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588370
    },
    {
        "content": "<p>I'm not set on any one way</p>",
        "id": 194989208,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588383
    },
    {
        "content": "<p>I would just say that it would be nice to have documentation on how I would, for example, display debug output when running from rustc</p>",
        "id": 194989247,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588411
    },
    {
        "content": "<p>(which, fyi, goes through <code>chalk-solve</code>)</p>",
        "id": 194989310,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588444
    },
    {
        "content": "<p>Hmm, the idea behind <code>tracing</code> is that libraries shouldn`t have to worry about when and what to print. Instead that should go into the executable (using a subscriber <a href=\"https://crates.io/crates/tracing-subscriber\" title=\"https://crates.io/crates/tracing-subscriber\">https://crates.io/crates/tracing-subscriber</a>)</p>",
        "id": 194989676,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588630
    },
    {
        "content": "<p>So preferably there should be a switch inside rustc that enables/disables debug output</p>",
        "id": 194989741,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588672
    },
    {
        "content": "<p>I <em>believe</em> that rustc uses <code>log</code> internally and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> wasn't opposed to switching the logger in rustc to something provided by <code>tracing</code>.</p>",
        "id": 194989904,
        "sender_full_name": "David Barsky",
        "timestamp": 1587588768
    },
    {
        "content": "<p>But even so, data emitted by <code>tracing</code> can be consumed by <code>log</code>-compliant loggers without issue.</p>",
        "id": 194989955,
        "sender_full_name": "David Barsky",
        "timestamp": 1587588803
    },
    {
        "content": "<p>There was some discussion in a previously linked thread about using a custom logger that displayed the different nesting levels, might be something to look deeper into</p>",
        "id": 194990108,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588884
    },
    {
        "content": "<p>which reminds me, i need to publish that logger in question to <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a></p>",
        "id": 194990158,
        "sender_full_name": "David Barsky",
        "timestamp": 1587588914
    },
    {
        "content": "<p>Right, so essentially right now, if I run <code>CHALK_DEBUG=2 ./x.py test ...</code> for rustc</p>",
        "id": 194990163,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588917
    },
    {
        "content": "<p>I guess, would that still be more or less possible?</p>",
        "id": 194990196,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587588937
    },
    {
        "content": "<p>(it's this thing, for reference: <a href=\"https://github.com/davidbarsky/tracing-tree/\" title=\"https://github.com/davidbarsky/tracing-tree/\">https://github.com/davidbarsky/tracing-tree/</a>)</p>",
        "id": 194990203,
        "sender_full_name": "David Barsky",
        "timestamp": 1587588941
    },
    {
        "content": "<p>For now I can restore the previous behavior (with <code>CHALK_DEBUG</code>), at least in the tests and the executable. Not sure where to do things in the compiler at the moment</p>",
        "id": 194990317,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587588993
    },
    {
        "content": "<p>Is it \"good\" to conditionally wrap the solver with a subscriber based on and environment variable</p>",
        "id": 194991382,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587589563
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is that directed for me, or...?</p>",
        "id": 194991424,
        "sender_full_name": "David Barsky",
        "timestamp": 1587589592
    },
    {
        "content": "<p>Anyone who knows lol</p>",
        "id": 194991617,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587589710
    },
    {
        "content": "<p>How does rustc do debug output in other components?</p>",
        "id": 194992036,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587589960
    },
    {
        "content": "<p>good question, I don't know</p>",
        "id": 194992144,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587590031
    },
    {
        "content": "<p>the short of it is that it's a <em>bit</em> hairy to load loggers or subscribers conditionally on an env variable. you can!</p>",
        "id": 194992660,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590312
    },
    {
        "content": "<p>actually, now that I think of it, I'm not sure its as hairy as I thought it'd be. just ugly.</p>",
        "id": 194992759,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590368
    },
    {
        "content": "<p>I'm aware that some <code>log</code> loggers allow you to filter based on crates/modules</p>",
        "id": 194992780,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587590381
    },
    {
        "content": "<p>Not sure if there's a similar concept for <code>tracing</code></p>",
        "id": 194992792,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587590395
    },
    {
        "content": "<p>there is!</p>",
        "id": 194992906,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590431
    },
    {
        "content": "<p>So if we were to switch rustc over to use <code>tracing</code>, maybe that's a viable route?</p>",
        "id": 194992996,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587590512
    },
    {
        "content": "<p>there are two flavors:</p>\n<ol>\n<li>envfilter (<a href=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html\" title=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html\">https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html</a>), which mimics the current environment variable syntax and behavior.</li>\n<li>there's also a reload one, which given some configuration \"endpoint\", you'd be able to reload filtering behavior at runtime: <a href=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/reload/index.html\" title=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/reload/index.html\">https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/reload/index.html</a></li>\n</ol>",
        "id": 194993082,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590542
    },
    {
        "content": "<p><code>tracing</code>'s filters are a bit richer than log's: <a href=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html#examples\" title=\"https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html#examples\">https://docs.rs/tracing-subscriber/0.2.5/tracing_subscriber/filter/struct.EnvFilter.html#examples</a></p>",
        "id": 194993212,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590634
    },
    {
        "content": "<p>there's the standard <code>[module=info]</code> filtering, but you can also narrow down to a specific unit of work.</p>",
        "id": 194993324,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590701
    },
    {
        "content": "<p>I also realize that the grammar is a bit adhoc for this. pretty sure it's implemented using a regex.</p>",
        "id": 194993385,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590738
    },
    {
        "content": "<p>Opened a new PR: <a href=\"https://github.com/rust-lang/chalk/pull/409\" title=\"https://github.com/rust-lang/chalk/pull/409\">https://github.com/rust-lang/chalk/pull/409</a></p>",
        "id": 194993512,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587590815
    },
    {
        "content": "<p>Someone might want to close the old one</p>",
        "id": 194993526,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587590824
    },
    {
        "content": "<p>I'll close out the old one.</p>",
        "id": 194993555,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590845
    },
    {
        "content": "<p>done.</p>",
        "id": 194993592,
        "sender_full_name": "David Barsky",
        "timestamp": 1587590877
    },
    {
        "content": "<p>Hmmm, now why am I getting all these conflicts, they weren't there in the previous PR...</p>",
        "id": 194993846,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587591028
    },
    {
        "content": "<p>Different base probably</p>",
        "id": 194994810,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587591659
    },
    {
        "content": "<p>There's been a good amount of changes on master</p>",
        "id": 194994851,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587591688
    },
    {
        "content": "<p>Oh, is this one of those situations when you should rebase?</p>",
        "id": 194995350,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587592034
    },
    {
        "content": "<p>yes</p>",
        "id": 194995410,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587592078
    },
    {
        "content": "<p>I successfully rebased my local branch onto master, but now I can't push to my fork anymore since they have diverged</p>",
        "id": 194998005,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587593806
    },
    {
        "content": "<p>Is there a way to resolve this without force pushing my local changes?</p>",
        "id": 194998022,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587593822
    },
    {
        "content": "<p>Rebasing an already-pushed branch requires a force push</p>",
        "id": 194998123,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1587593901
    },
    {
        "content": "<p>Is that safe to do in this case?</p>",
        "id": 194998260,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587594011
    },
    {
        "content": "<p>should be—it only affects your branch.</p>",
        "id": 194998488,
        "sender_full_name": "David Barsky",
        "timestamp": 1587594160
    },
    {
        "content": "<p>As long as you aren't missing commits locally and as long as no one else is working on the branch.</p>",
        "id": 194998492,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1587594162
    },
    {
        "content": "<p>Okay, seems to have worked fine, thanks!</p>",
        "id": 194998738,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587594334
    },
    {
        "content": "<p>By the way, is it possible to avoid force pushing when rebasing, if so, how?</p>",
        "id": 194998822,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587594394
    },
    {
        "content": "<p>not rebasing</p>",
        "id": 194999000,
        "sender_full_name": "Jack Huey",
        "timestamp": 1587594526
    },
    {
        "content": "<p>x)</p>",
        "id": 194999052,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1587594578
    },
    {
        "content": "<p>I will be adding some documentation for how to use <code>tracing</code> within the codebase to the book. Where in the book should I put this?</p>",
        "id": 195547281,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1588071723
    },
    {
        "content": "<p>Chapter 2 of the book \"Contribution Guide\" feels like the right place, but seems to be too minimal for the amount of documentation that would be required. Should I add a new subchapter instead?</p>",
        "id": 195547423,
        "sender_full_name": "Christofer Nolander",
        "timestamp": 1588071834
    },
    {
        "content": "<p>Yeah, subchapter 2.1 seems like a good spot</p>",
        "id": 195547703,
        "sender_full_name": "detrumi",
        "timestamp": 1588072013
    },
    {
        "content": "<p>We should add more subchapters there anyways, such as more info on debugging chalk</p>",
        "id": 195547867,
        "sender_full_name": "detrumi",
        "timestamp": 1588072099
    },
    {
        "content": "<p>Hi! I'd be willing to help in this WG, but I don't know what I could help with. I only made a few minor contributions to rustc and have no theoretical knowledge in computer science or type theory. I also skimmed through the Chalk book, though I will need to come back to it with my dear friends paper and pencil <span aria-label=\"note\" class=\"emoji emoji-1f4dd\" role=\"img\" title=\"note\">:note:</span>. Any advice would be appreciated <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 205163670,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595881251
    },
    {
        "content": "<p>Anything in particular you're interested in?</p>",
        "id": 205165942,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882562
    },
    {
        "content": "<p>Mhh, I can't think of anything in particular</p>",
        "id": 205166194,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595882690
    },
    {
        "content": "<p>Let me see if I can find a good issue to start with</p>",
        "id": 205166264,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882736
    },
    {
        "content": "<p>By the way, in <a href=\"https://github.com/rust-lang/wg-traits/issues/16\">wg-traits#16</a>:</p>\n<blockquote>\n<p>Refactor code in rustc using ty.kind to use a method ty.kind(tcx)</p>\n<p>Adapt rustc to use ty.kind(tcx) instead of ty.kind</p>\n</blockquote>\n<p>Aren't these two steps duplicates?</p>",
        "id": 205166283,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595882750
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Looking.20to.20contribute/near/205166264\">said</a>:</p>\n<blockquote>\n<p>Let me see if I can find a good issue to start with</p>\n</blockquote>\n<p>Thanks a lot!</p>",
        "id": 205166333,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595882766
    },
    {
        "content": "<p>haha yep, good catch</p>",
        "id": 205166359,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882794
    },
    {
        "content": "<p><em>That</em> actually might be issue to work on?</p>",
        "id": 205166408,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882840
    },
    {
        "content": "<p>If you want to work on rustc</p>",
        "id": 205166415,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882852
    },
    {
        "content": "<p>If you want to work on Chalk, I can keep looking</p>",
        "id": 205166427,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882865
    },
    {
        "content": "<p>I'm fine with both, I can start looking at this</p>",
        "id": 205166511,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595882900
    },
    {
        "content": "<p>There's also some other rustc work that I have put off</p>",
        "id": 205166520,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882905
    },
    {
        "content": "<p>But this is a good, simple thing to start with</p>",
        "id": 205166528,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595882915
    },
    {
        "content": "<p>Great, thanks again!</p>",
        "id": 205166542,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595882929
    },
    {
        "content": "<p>Of course :)</p>",
        "id": 205166674,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595883011
    },
    {
        "content": "<p>I'm sure <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> will be happy to see someone is working on this lol</p>",
        "id": 205166691,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595883023
    },
    {
        "content": "<p>Five minutes later and I already found <a href=\"https://zulip-archive.rust-lang.org/131828tcompiler/05771designmeeting20200306.html#189906441\">this</a> :D</p>",
        "id": 205167137,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595883310
    },
    {
        "content": "<p>haha</p>",
        "id": 205167288,
        "sender_full_name": "Jack Huey",
        "timestamp": 1595883392
    },
    {
        "content": "<p>I think I remember seeing in the sprint doc that the refactoring might also require a compiler team MCP? Doesn't necessarily block the work, but I think it might need to get filed eventually</p>",
        "id": 205185412,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1595896922
    },
    {
        "content": "<p>(Just thinking out loud)</p>",
        "id": 205185463,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1595896977
    },
    {
        "content": "<p>It absolutely will require it I think, it's a pretty fundamental change</p>",
        "id": 205198719,
        "sender_full_name": "Areredify",
        "timestamp": 1595912893
    },
    {
        "content": "<p>Should I go ahead and open an MCP myself?</p>",
        "id": 205208055,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595924201
    },
    {
        "content": "<p>Would that be one MCP for these 4 steps together?</p>\n<blockquote>\n<p>So, a sketch for a plan in rustc (each step is a PR):<br>\n1. ty.kind -&gt; ty.kind()<br>\n2. ty.kind()-&gt; ty.kind(tcx)<br>\n3. Add a type alias and make kind work on I: Interner<br>\n4. Start using Ty&lt;I&gt; more (This is a lot of PRs)</p>\n</blockquote>",
        "id": 205213758,
        "sender_full_name": "detrumi",
        "timestamp": 1595928068
    },
    {
        "content": "<p>I feel like yes, because structurally thats a single change (make rustc use an interner for type kind), those steps are just implementation milestones. It's not like we can do half of them and then decide we don't want to do the rest and leave it at that. If we discover some problems while implementing we will probably redesign the whole thing, I can't see the benefit of discussing those changes one by one in different mcps</p>",
        "id": 205215400,
        "sender_full_name": "Areredify",
        "timestamp": 1595929161
    },
    {
        "content": "<p>I probably missed where this was discussed, by why is the interner needed in <code>ty.kind</code> and not in <code>mk_ty</code>? (nm that)</p>",
        "id": 205216001,
        "sender_full_name": "lcnr",
        "timestamp": 1595929542
    },
    {
        "content": "<p>why do we need <code>tcx</code> in kind</p>",
        "id": 205216090,
        "sender_full_name": "lcnr",
        "timestamp": 1595929582
    },
    {
        "content": "<p>is the question I wanted to ask <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 205216105,
        "sender_full_name": "lcnr",
        "timestamp": 1595929591
    },
    {
        "content": "<p>Correct me if Im wrong, but the idea is to essentially make ty into [small] opaque handle</p>",
        "id": 205217383,
        "sender_full_name": "Areredify",
        "timestamp": 1595930389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> I think it was discussed in <a href=\"https://zulip-archive.rust-lang.org/131828tcompiler/05771designmeeting20200306.html\">this meeting</a></p>",
        "id": 205217387,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595930394
    },
    {
        "content": "<p>These <a href=\"https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-03-12-shared-library-for-types/\">meeting notes</a> are probably good context</p>",
        "id": 205217482,
        "sender_full_name": "detrumi",
        "timestamp": 1595930437
    },
    {
        "content": "<p>And to get the data about a type you request it from an interner</p>",
        "id": 205217550,
        "sender_full_name": "Areredify",
        "timestamp": 1595930490
    },
    {
        "content": "<blockquote>\n<p>To actually use a type, you wish to invoke the data() method (you have to supply a reference to the interner):</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;I: Interner&gt; Ty&lt;I&gt; {\n    pub fn data(&amp;self, interner: &amp;I) -&gt; &amp;TyData&lt;I&gt; {\n        interner.lookup_ty_data(&amp;self.interned)\n    }\n</code></pre></div>",
        "id": 205217675,
        "sender_full_name": "detrumi",
        "timestamp": 1595930552
    },
    {
        "content": "<p>So is the <code>tcx</code> in rustc the same as the interner here?</p>",
        "id": 205217758,
        "sender_full_name": "detrumi",
        "timestamp": 1595930611
    },
    {
        "content": "<p>That was my impression</p>",
        "id": 205218039,
        "sender_full_name": "Areredify",
        "timestamp": 1595930814
    },
    {
        "content": "<p>So from what I can tell the reason for adding for adding the interner as an argument to <code>ty.kind/data</code> is mostly to allow what rust-analyzer is doing</p>\n<blockquote>\n<p>rust-analyzer presently uses a form of interning where types are represented as an integer, and that is integrated into the incremental system to allow recycling integers when things change etc)</p>\n</blockquote>",
        "id": 205219732,
        "sender_full_name": "lcnr",
        "timestamp": 1595932078
    },
    {
        "content": "<p>I still kind of dislike this, but probably have to see how this interacts with <code>GenericArg</code> and stuff to form a more complete opinion here.</p>",
        "id": 205220343,
        "sender_full_name": "lcnr",
        "timestamp": 1595932515
    },
    {
        "content": "<p>hmm where is that from? I'm either misunderstanding it, or it's not true. rust-analyzer doesn't intern types currently, we just put them into <code>Arc</code>s. We do intern definitions and things like that as numbers though</p>",
        "id": 205220605,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595932691
    },
    {
        "content": "<p>so maybe that's what was meant, it does mean we need the database to access information about ADTs for example</p>",
        "id": 205220649,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595932725
    },
    {
        "content": "<p>yeah the quote mostly makes sense if you replace \"types\" by \"defs\"</p>",
        "id": 205220692,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595932769
    },
    {
        "content": "<p>accessing the type kind doesn't require the database in RA though</p>",
        "id": 205220813,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1595932818
    },
    {
        "content": "<p>from here <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-03-06/near/189902462\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-03-06/near/189902462</a></p>",
        "id": 205221930,
        "sender_full_name": "lcnr",
        "timestamp": 1595933784
    },
    {
        "content": "<p>FYI, I just filed <a href=\"https://github.com/rust-lang/rust/issues/75077\">#75077</a> but I forgot to adapt rustdoc as well</p>",
        "id": 205748590,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1596410787
    }
]