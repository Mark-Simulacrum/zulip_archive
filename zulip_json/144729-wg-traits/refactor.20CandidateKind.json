[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/70705#discussion_r416685289\">https://github.com/rust-lang/rust/pull/70705#discussion_r416685289</a><br>\n<span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>\n<p>I looked at the current implementation and think I am now able to actually have some kind of opinion here <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 198372555,
        "sender_full_name": "lcnr",
        "timestamp": 1590092780
    },
    {
        "content": "<p>There are currently some things related to your comment which I would also like to refactor while I am at it.</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/148c125b1bf20674e8d0c55c21b3433a6d465b07/src/librustc_trait_selection/traits/select.rs#L1986\"><code>candidate_should_be_dropped_in_favor_of</code></a>  feels really unintuitive to me.<br>\nIt is probably a good idea to express this in a positive way, i.e. something like <code>prioritize_candidate_over</code>.</p>",
        "id": 198372610,
        "sender_full_name": "lcnr",
        "timestamp": 1590092805
    },
    {
        "content": "<blockquote>\n<p>Of these, BuiltinCandidate { has_nested: false } is the \"odd one out\", because it applies not only to a specific trait, but to a specific self type for that trait. Are we actually exposing \"movable generators\" anywhere in the language? I don't think so, and I don't know that we have any real plans to do so either, right? I wonder if we should simplify things by removing them.</p>\n</blockquote>\n<p>We currently  use <code>BuiltinCandidate { has_nested: false }</code>  for actual builtin types which do not add any obligations and use this info to treat them in a special way during winnowing. I don't think we can remove that variant.</p>",
        "id": 198372664,
        "sender_full_name": "lcnr",
        "timestamp": 1590092833
    },
    {
        "content": "<p>We currently recompute builtin conditions in <code>confirm_builtin_candidate</code>, which is not ideal.</p>",
        "id": 198375341,
        "sender_full_name": "lcnr",
        "timestamp": 1590094088
    },
    {
        "content": "<p>I still need some info on what you had in mind here, as I don't yet see how to best cleanup <code>CandidateKind</code>.</p>",
        "id": 198375927,
        "sender_full_name": "lcnr",
        "timestamp": 1590094362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/refactor.20CandidateKind/near/198372610\">said</a>:</p>\n<blockquote>\n<p>There are currently some things related to your comment which I would also like to refactor while I am at it.</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/148c125b1bf20674e8d0c55c21b3433a6d465b07/src/librustc_trait_selection/traits/select.rs#L1986\"><code>candidate_should_be_dropped_in_favor_of</code></a>  feels really unintuitive to me.<br>\nIt is probably a good idea to express this in a positive way, i.e. something like <code>prioritize_candidate_over</code>.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> you are referring specifically to the name here?</p>",
        "id": 198470602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168715
    },
    {
        "content": "<p>If so, I have no objection</p>",
        "id": 198470648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168723
    },
    {
        "content": "<p>both the name and the boolean</p>",
        "id": 198470726,
        "sender_full_name": "lcnr",
        "timestamp": 1590168769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/refactor.20CandidateKind/near/198372664\">said</a>:</p>\n<blockquote>\n<p>We currently  use <code>BuiltinCandidate { has_nested: false }</code>  for actual builtin types which do not add any obligations and use this info to treat them in a special way during winnowing. I don't think we can remove that variant.</p>\n</blockquote>\n<p>I was proposing that we remove <em>moveable generators</em> entirely</p>",
        "id": 198470748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168777
    },
    {
        "content": "<p>We currently return <code>true</code> if the candidate should get dropped, while I want to invert this</p>",
        "id": 198470770,
        "sender_full_name": "lcnr",
        "timestamp": 1590168788
    },
    {
        "content": "<p>which is somewhat orthogonal</p>",
        "id": 198470780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168791
    },
    {
        "content": "<p>but I don't really think they're used anywhere in the \"stable\" language</p>",
        "id": 198470802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168801
    },
    {
        "content": "<p>nor do I think we have any plans to use them</p>",
        "id": 198470836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> may have some idea if there was any reason we might use a moveable generator</p>",
        "id": 198470865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168834
    },
    {
        "content": "<p>Aww :(</p>",
        "id": 198470959,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590168875
    },
    {
        "content": "<p>(Not that I use them, I just think they're cool :D)</p>",
        "id": 198470995,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590168893
    },
    {
        "content": "<p>:)</p>",
        "id": 198471020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/144729-wg-traits/topic/refactor.20CandidateKind/near/198470770\">said</a>:</p>\n<blockquote>\n<p>We currently return <code>true</code> if the candidate should get dropped, while I want to invert this</p>\n</blockquote>\n<p>yeah I mean that's fine</p>",
        "id": 198471092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168948
    },
    {
        "content": "<p>I guess I better re-read my own comment, anyhow</p>",
        "id": 198471179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590168979
    }
]