[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 180432636,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486262
    },
    {
        "content": "<p>I'm assuming you saw my new PR?</p>",
        "id": 180432651,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486268
    },
    {
        "content": "<p>(even if you haven't actually looked at the changes)</p>",
        "id": 180432664,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486286
    },
    {
        "content": "<p>Since the <code>CanonicalStrand</code> changes might be less straightforward (or at least, more to think about) than I/we originally thought, I'll probably rebase that branch for master</p>",
        "id": 180433180,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486619
    },
    {
        "content": "<p>But, overall I think there are some good changes there (not just that it's now iterative instead of recursive). But also I think it might make implementing the coinduction changes <em>easier</em> (or at least easier to follow)</p>",
        "id": 180433325,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486709
    },
    {
        "content": "<p>Would like your input though</p>",
        "id": 180433344,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573486730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I saw the PR, but I didn't look closely at the commits</p>",
        "id": 180446598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496297
    },
    {
        "content": "<p>I guess that it is removing all recursion and just maintaining the stack manually?</p>",
        "id": 180446618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496318
    },
    {
        "content": "<p>Yes, exactly</p>",
        "id": 180446822,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573496468
    },
    {
        "content": "<p>The stack was somewhat maintained manually already, I just extended upon that</p>",
        "id": 180446870,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573496517
    },
    {
        "content": "<p>Reading that PR, I see what I think is a bug -- but a pre-existing one</p>",
        "id": 180447087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496676
    },
    {
        "content": "<p>I have to go back to the source, but</p>",
        "id": 180447094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496682
    },
    {
        "content": "<p>it looks like when a strand returns QuantumExceeded -- oh, never mind</p>",
        "id": 180447099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496697
    },
    {
        "content": "<p>I was going to say \"It never gets added back to the table\"</p>",
        "id": 180447111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496704
    },
    {
        "content": "<p>but I guess that it does at the point where we return <code>QuantumExceeded</code></p>",
        "id": 180447126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573496712
    },
    {
        "content": "<p>Yeah, so that's one thing that I think changing to iterative vs recursive really helps with, is that it's sometimes more clear what's happening to strands and where</p>",
        "id": 180447261,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573496819
    },
    {
        "content": "<p>My intention initially was basically.... you pass ownership of strands around, so if you don't get one back, you don't have to worry about it</p>",
        "id": 180448237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573497638
    },
    {
        "content": "<p>I just kind of didn't trust myself I guess :)</p>",
        "id": 180448245,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573497645
    },
    {
        "content": "<p>This is a fair point</p>",
        "id": 180448277,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573497683
    },
    {
        "content": "<p>I think that worked fine when <em>everything</em> is recursive. But once you start doing things iteratively, it because a little bit more messy</p>",
        "id": 180448409,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573497793
    },
    {
        "content": "<p>I guess you could pass it in, and then an <code>Option&lt;Strand&gt;</code> out</p>",
        "id": 180448429,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573497812
    },
    {
        "content": "<p>Well, I can't argue that it's a bit messy, since I got a bit confused</p>",
        "id": 180449819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573498824
    },
    {
        "content": "<p>I don't think you need an <code>Option&lt;Strand&gt;</code>, though</p>",
        "id": 180449828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573498832
    },
    {
        "content": "<p>I mean, we have an existing enum</p>",
        "id": 180449836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573498839
    },
    {
        "content": "<p>Oh but I guess you mean when you move to a fully iterative approach</p>",
        "id": 180449863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573498860
    },
    {
        "content": "<p>yes</p>",
        "id": 180449871,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573498866
    },
    {
        "content": "<p>ps <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> one thing I do think is that we should try to land pieces of this branch, I'm finding this coinductive stuff hard enough to think about without mixing in more than we have to</p>",
        "id": 180453853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573501541
    },
    {
        "content": "<p>So, I can try to split apart this branch</p>",
        "id": 180454546,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502020
    },
    {
        "content": "<p>I initially tried to make smaller commits</p>",
        "id": 180454611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502048
    },
    {
        "content": "<p>But the change from recursive -&gt; iterative all sort of came at once</p>",
        "id": 180454637,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502071
    },
    {
        "content": "<p>I guess with hindsight it might be easier</p>",
        "id": 180454648,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502080
    },
    {
        "content": "<p>I saw some commits that seemed separable</p>",
        "id": 180454692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502132
    },
    {
        "content": "<p>it's not the most imp't thing, just thinking that it make sense to land certain commits quickly, ponder the rest :)</p>",
        "id": 180454702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502149
    },
    {
        "content": "<p>The first ~5 or so are</p>",
        "id": 180454704,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502151
    },
    {
        "content": "<p>I don't think I would want to land the change to cyclic handling <em>quite</em> yet -- even though I think this is probably good</p>",
        "id": 180454769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502175
    },
    {
        "content": "<p>I was thinking already we should get rid of that vector</p>",
        "id": 180454774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502186
    },
    {
        "content": "<p>I was intending though to use the position in the queue</p>",
        "id": 180454788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502196
    },
    {
        "content": "<p>I hadn't really thought it through very hard</p>",
        "id": 180454804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502207
    },
    {
        "content": "<p>basically partition the vector so you have \"cyclic stuff\" collected in one part, \"candidates\" in another</p>",
        "id": 180454820,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502222
    },
    {
        "content": "<p>but using the \"answer found counter\" seems maybe nicer and more obvious</p>",
        "id": 180454840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502239
    },
    {
        "content": "<p>I can split out the first couple commits if you think it's worth just landing those</p>",
        "id": 180454940,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502286
    },
    {
        "content": "<p>That's sort of what I had intended to start with</p>",
        "id": 180454963,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502307
    },
    {
        "content": "<p>am I correct that the \"work\" counter is really tracking <em>answers</em></p>",
        "id": 180455145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502421
    },
    {
        "content": "<p>That wasn't what I had intended it to be. I had originally intended it to match exactly how collecting into a vec worked</p>",
        "id": 180455208,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502478
    },
    {
        "content": "<p>But I think tracking answers works also</p>",
        "id": 180455222,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502492
    },
    {
        "content": "<p>I think this is the sort of..intention</p>",
        "id": 180455244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502508
    },
    {
        "content": "<p>if we incremented it for every answer that is published anywhere</p>",
        "id": 180455309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502534
    },
    {
        "content": "<p>and then, if there is a cycle, we tag the strand with the number of answers so far</p>",
        "id": 180455316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502549
    },
    {
        "content": "<p>well, I have to go think about it again :)</p>",
        "id": 180455336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502575
    },
    {
        "content": "<p>I want in particular to see if we can do a bit better than the current code</p>",
        "id": 180455355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502588
    },
    {
        "content": "<p>No problem</p>",
        "id": 180455360,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502593
    },
    {
        "content": "<p>right now, the current code -- if quantum is exceeded -- will put the cycles back into circulation</p>",
        "id": 180455373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502612
    },
    {
        "content": "<p>but it seems like we should be able to avoid that if we were tracking answers published</p>",
        "id": 180455379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502620
    },
    {
        "content": "<p>but it's a bit tricky</p>",
        "id": 180455406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502642
    },
    {
        "content": "<p>after all, the next time you are invoked, the stack above you is different</p>",
        "id": 180455454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502654
    },
    {
        "content": "<p>so maybe I am wrong -- unless we have a way to check if that has changed</p>",
        "id": 180455462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502663
    },
    {
        "content": "<p>Right</p>",
        "id": 180455464,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502664
    },
    {
        "content": "<p>So I'm not sure if you still assume they are cycles</p>",
        "id": 180455477,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502679
    },
    {
        "content": "<p>yeah, you can't really</p>",
        "id": 180455481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502686
    },
    {
        "content": "<p>regardless we need a nice comment :)</p>",
        "id": 180455493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502697
    },
    {
        "content": "<p>I think I did make a comment about that somewhere</p>",
        "id": 180455509,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502712
    },
    {
        "content": "<p>I think maybe your original branch has it right. I might want to rename it to \"clock\" from \"work\"</p>",
        "id": 180455523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502732
    },
    {
        "content": "<p>because for some reason that feels more obvious to me</p>",
        "id": 180455529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502737
    },
    {
        "content": "<p>but basically the goal is to say \"this was found to be a cycle in some previous call\"</p>",
        "id": 180455579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502764
    },
    {
        "content": "<p>and nothing more than that</p>",
        "id": 180455587,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502768
    },
    {
        "content": "<p>\"clock\" works</p>",
        "id": 180455589,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502770
    },
    {
        "content": "<p>Ha, yeah I did make a comment. It just didn't make it in when I refactored the branch: <a href=\"https://github.com/jackh726/chalk/blob/fuel_friendly_old/chalk-engine/src/logic.rs#L293\" target=\"_blank\" title=\"https://github.com/jackh726/chalk/blob/fuel_friendly_old/chalk-engine/src/logic.rs#L293\">https://github.com/jackh726/chalk/blob/fuel_friendly_old/chalk-engine/src/logic.rs#L293</a></p>",
        "id": 180455771,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502932
    },
    {
        "content": "<p>Though I didn't explicitly say it was because of cycles above us</p>",
        "id": 180455796,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502968
    },
    {
        "content": "<p>Anyway, I'll make a comment and change the name.</p>",
        "id": 180455818,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573502993
    },
    {
        "content": "<p>I am reminded of the clock we use for floundering</p>",
        "id": 180456048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503174
    },
    {
        "content": "<p>I sort of forget how that works</p>",
        "id": 180456058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503182
    },
    {
        "content": "<p>So that does track answers</p>",
        "id": 180456082,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573503203
    },
    {
        "content": "<p>ah, but it is local to a strand</p>",
        "id": 180456090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503209
    },
    {
        "content": "<p>yes</p>",
        "id": 180456108,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573503226
    },
    {
        "content": "<p>you might want to use the same <code>TimeStamp</code> type for the clock (if you didn't already)</p>",
        "id": 180456112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503228
    },
    {
        "content": "<p>I did :)</p>",
        "id": 180456115,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573503234
    },
    {
        "content": "<p>ok :)</p>",
        "id": 180456117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503237
    },
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>\n<ul>\n<li>I moved some code from <code>ensure_answer</code> into separate functions (feel free to bikeshed the names).</li>\n<li>I merged <code>dfn</code> and <code>work</code> into a new <code>clock</code>, which is just a <code>TimeStamp</code> still. I added some comments about when it gets incremented. With this, we also no longer need <code>DepthFirstNumber</code>, is was essentially the same as <code>TimeStamp</code> anyways. (I guess it loses it's parity with the paper, but I think overall it's cleaner)</li>\n<li>I added some comments specifically regarding the positive cycles and the clock.</li>\n</ul>",
        "id": 180479076,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573530323
    },
    {
        "content": "<p>I'm going to let you look it over a bit more before I do any work to split out the smaller changes into a separate PR.</p>",
        "id": 180479314,
        "sender_full_name": "Jack Huey",
        "timestamp": 1573530640
    }
]