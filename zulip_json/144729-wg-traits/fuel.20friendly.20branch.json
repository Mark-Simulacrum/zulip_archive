[
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I pushed a bunch of nits and minor changes to your branch. I'm going to merge the PR, assuming travis is green. I sort of convinced myself that the strategy is correct, modulo that I think we're not handling the \"refined answers\" correctly, but that is probably pre-existing, as you pointed out.</p>\n<p>I suspect we can continue to cleanup the code, but that seems better pursued as an iterative strategy. (If nothing else, I found that some of the comments made more sense in the recursive setup.)</p>",
        "id": 182806742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667693
    },
    {
        "content": "<p>One thing I found a bit hard to read was the idiom where we would pop something from the stack after getting a result to look at the \"next top-most\" thing. I'm not quite sure what would make it nicer though. =)</p>",
        "id": 182806794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667732
    },
    {
        "content": "<p>I think probably just a naming convention would help</p>",
        "id": 182806811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667740
    },
    {
        "content": "<p>e.g., some way to flag \"this is the strand that was on top from the strand we started with\"</p>",
        "id": 182806844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667760
    },
    {
        "content": "<p>I guess a good name might be \"caller\"</p>",
        "id": 182806865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667779
    },
    {
        "content": "<p>maybe I'll toy with that</p>",
        "id": 182806872,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667782
    },
    {
        "content": "<p>I wonder also about doing something like <code>&amp;mut depth</code> for modifying the depth variable</p>",
        "id": 182806978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667820
    },
    {
        "content": "<p>debatable, I guess, if the <code>depth</code> variable is even adding much value here</p>",
        "id": 182807089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667900
    },
    {
        "content": "<p>oh, nm, we use it to index a lot, forgot</p>",
        "id": 182807111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575667915
    },
    {
        "content": "<p>Just looked through your changes, they all look good to me :)</p>",
        "id": 182807512,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668214
    },
    {
        "content": "<p>trying one last thing</p>",
        "id": 182807528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575668225
    },
    {
        "content": "<p>So, I definitely see where you're coming from with the \"next top-most thing\"</p>",
        "id": 182807534,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668235
    },
    {
        "content": "<p>I thought about this. Was thinking of how to maybe delay that handling to the beginning of the next loop (like storing some sort of answer), but didn't explore too much. If anything, it can be done iteratively</p>",
        "id": 182807618,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668301
    },
    {
        "content": "<p>And, honestly the depth variable is a <em>little</em> messy</p>",
        "id": 182807641,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668331
    },
    {
        "content": "<p>passing as <code>&amp;mut depth</code> is not the worst idea</p>",
        "id": 182807687,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668379
    },
    {
        "content": "<p>It might be possible to remove it though</p>",
        "id": 182807932,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668590
    },
    {
        "content": "<p>or at least, in most cases</p>",
        "id": 182807952,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668613
    },
    {
        "content": "<p>Off of the top of my head, the only place (there might be others I'm forgetting) we use it is when dealing with cycles</p>",
        "id": 182808023,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575668655
    },
    {
        "content": "<p>OK, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I have a decent commit</p>",
        "id": 182808596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669113
    },
    {
        "content": "<p>it may be possible to remove depth, not sure, but this change is at least positive</p>",
        "id": 182808654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669134
    },
    {
        "content": "<p>just pushed</p>",
        "id": 182808680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669156
    },
    {
        "content": "<p>Ok I'll take a look</p>",
        "id": 182808813,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575669264
    },
    {
        "content": "<p>it seems to me that there are some invariants that might be nice to document, too</p>",
        "id": 182808952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669396
    },
    {
        "content": "<p>Looks good to me!</p>",
        "id": 182808966,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575669415
    },
    {
        "content": "<p>e.g., \"everything on the stack has an active strand on each turn around the loop\"</p>",
        "id": 182808967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669415
    },
    {
        "content": "<p>Ah true</p>",
        "id": 182808983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575669425
    },
    {
        "content": "<p>I suspect that's true at some point ;)</p>",
        "id": 182808984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575669425
    },
    {
        "content": "<p>I'm thinking about it. But we could might be able to get rid of the idea of a stack nearly entirely at some point</p>",
        "id": 182809141,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575669532
    },
    {
        "content": "<p>I think the only thing we actually have to keep track of is the tables on the stack</p>",
        "id": 182809198,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575669565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> Maybe. what I'm actually thinking about now is that I think the stack should <strong>persist</strong> even when we return \"quantum exceeded\"</p>",
        "id": 182812101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672124
    },
    {
        "content": "<p>and when you enter with the same root table/index</p>",
        "id": 182812110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672133
    },
    {
        "content": "<p>we should just jump back down</p>",
        "id": 182812112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672136
    },
    {
        "content": "<p>without re-incrementing the clock</p>",
        "id": 182812115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672140
    },
    {
        "content": "<p>otherwise, it's probably possible to have something where we don't recognize a cycle</p>",
        "id": 182812125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672149
    },
    {
        "content": "<p>and besides it's kind of wasteful, no?</p>",
        "id": 182812130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672158
    },
    {
        "content": "<p>but we'd have to think a bit carefully about it to make sure it all works out</p>",
        "id": 182812136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672169
    },
    {
        "content": "<p>anyway, I merged the PR</p>",
        "id": 182812153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672184
    },
    {
        "content": "<p>I should file some follow-up issues</p>",
        "id": 182812156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575672188
    },
    {
        "content": "<blockquote>\n<p>and besides it's kind of wasteful, no?</p>\n</blockquote>\n<p>I think this is where benchmarks would be nice. Just how much overhead is there. The other thing with this: right now, when <code>QuantumExceeded</code> is returned, the next iteration pursues the <em>next</em> strand (and the current one gets put at the end)</p>",
        "id": 182813602,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575673427
    },
    {
        "content": "<p>Well, that's by design for sure</p>",
        "id": 182814608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674339
    },
    {
        "content": "<p>maybe not a good design :)</p>",
        "id": 182814618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674345
    },
    {
        "content": "<blockquote>\n<p>but we'd have to think a bit carefully about it to make sure it all works out</p>\n</blockquote>\n<p>but that is precisely the sort of interaction I was thinking about when I wrote this</p>",
        "id": 182814631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674358
    },
    {
        "content": "<p>in other words: the idea of quantum exceeded was \"this path isn't that great, let's try another strand\"</p>",
        "id": 182814641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674369
    },
    {
        "content": "<p>that said, I think there are better heuristics no doubt</p>",
        "id": 182814651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674381
    },
    {
        "content": "<p>but it may be that in some cases we don't want to do that</p>",
        "id": 182814709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674408
    },
    {
        "content": "<p>and I'm curious to try some other search algorithms</p>",
        "id": 182814718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575674426
    },
    {
        "content": "<p>Yeah, could be interesting</p>",
        "id": 182814754,
        "sender_full_name": "Jack Huey",
        "timestamp": 1575674469
    }
]