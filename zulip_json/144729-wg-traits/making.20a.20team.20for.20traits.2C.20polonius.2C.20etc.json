[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>, <span class=\"user-group-mention\" data-user-group-id=\"1977\">@T-lang</span>, <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>, <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span>, I want to call your attention to this proposal to create a \"traits team\" (better name wanted):</p>\n<p><a href=\"https://hackmd.io/@nikomatsakis/rJ3h_-kJc\">https://hackmd.io/@nikomatsakis/rJ3h_-kJc</a></p>\n<p>From the document:</p>\n<blockquote>\n<h2>Mission / charter</h2>\n<p>The \"traits team\" is dedicated to implementing and guiding the design of the \"core type system\" for Rust, including the type checker, borrow checker, and trait system. The traits team also maintains formalities, a formal model of the Rust type system.</p>\n<h2>Parent teams</h2>\n<p>The traits team is a child of the compiler and language teams. It interacts with those teams in the following ways:</p>\n<ul>\n<li>Compiler, rust-analyzer, and others:<br>\n    * Assessing and implementing fixes for soundness bugs that have to do with the type system<br>\n    * Maintaining a shared library that implements the Rust type/trait system</li>\n<li>Lang team:<br>\n    * Maintaining the patina model and extending it to model new proposals that interact with the type checker<br>\n    * Owning or consulting on the design of language extensions that extends the core Rust type system capabilities<br>\n        * examples: specialization, impl trait<br>\n    * Advising on how to fix soundness bugs that will require language changes</li>\n</ul>\n</blockquote>\n<p>Thoughts or comments most welcome!</p>",
        "id": 273563728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646087360
    },
    {
        "content": "<p>The more I think about it, the less I hate the name \"formality team\"</p>",
        "id": 273563993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646087467
    },
    {
        "content": "<p>I think it's a bit more general than formality though</p>",
        "id": 273564184,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646087612
    },
    {
        "content": "<p>type system team?</p>",
        "id": 273564782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646087970
    },
    {
        "content": "<p>Trait and type system</p>",
        "id": 273565016,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646088098
    },
    {
        "content": "<p>I had assumed taht wg-traits _was_ the \"type system\" team tbh <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 273565081,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1646088126
    },
    {
        "content": "<p>Basically, but this \"formalizes\" (pun intended) it a bit</p>",
        "id": 273565178,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646088212
    },
    {
        "content": "<p>Would this group be also responsible for const traits?</p>",
        "id": 273565336,
        "sender_full_name": "marmeladema",
        "timestamp": 1646088321
    },
    {
        "content": "<p>That's a good example of something that (to my mind) falls partially under this group, but also general lang team</p>",
        "id": 273565541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646088447
    },
    {
        "content": "<p>I see this group as focusing on the \"model\" of how const traits etc work, but general lang team would (presumably) be focused more on how they feel to users (not that this team would <em>ignore</em> that)</p>",
        "id": 273565577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646088478
    },
    {
        "content": "<p>(note that initiatives are kind of cross-cutting across teams)</p>",
        "id": 273565630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646088496
    },
    {
        "content": "<p>(that's an initiative)</p>",
        "id": 273565637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646088500
    },
    {
        "content": "<p>For what it's worth, with regards to naming, I've always thought of the trait system and the borrow checker as aspects of Rust's type system, even if the three are largely separable.</p>",
        "id": 273576795,
        "sender_full_name": "eholk",
        "timestamp": 1646095896
    },
    {
        "content": "<p>It's probably worth having a name for the three that is distinct so we don't have to distinguish between the type system as all three and the type system as an aspect of the type system</p>",
        "id": 273576919,
        "sender_full_name": "eholk",
        "timestamp": 1646096002
    },
    {
        "content": "<p>I've also considered all of these aspects of the type system. In fact I'm not even sure what \"type system as an aspect of the type system\" is supposed to refer to: is this just the grammar of types / the <code>TyKind</code> enum?</p>",
        "id": 273577068,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646096116
    },
    {
        "content": "<p>I'm assuming this team is supposed to be focused on static semantics, and not also trying to maintain an operational semantics for Rust?</p>",
        "id": 273577086,
        "sender_full_name": "eholk",
        "timestamp": 1646096137
    },
    {
        "content": "<p>Actually, \"Semantics Team\" isn't a bad name, although I think I like Formality better</p>",
        "id": 273577143,
        "sender_full_name": "eholk",
        "timestamp": 1646096164
    },
    {
        "content": "<p>the docs on a-mir-formality mentions operational semantics</p>",
        "id": 273577150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646096175
    },
    {
        "content": "<p>although that might have just been a misread on my part</p>",
        "id": 273577265,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646096279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/273577068\">said</a>:</p>\n<blockquote>\n<p>I've also considered all of these aspects of the type system. In fact I'm not even sure what \"type system as an aspect of the type system\" is supposed to refer to: is this just the grammar of types / the <code>TyKind</code> enum?</p>\n</blockquote>\n<p>I think of this as the parts of Rust's type system that match what you'd read in a programming languages textbook, so the grammar of types, type inference, polymorphism, etc.</p>",
        "id": 273577397,
        "sender_full_name": "eholk",
        "timestamp": 1646096368
    },
    {
        "content": "<p>Seems like you would have to hit most or all of the trait system to do that though</p>",
        "id": 273577508,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646096415
    },
    {
        "content": "<p>you could plausibly avoid the borrow checker</p>",
        "id": 273577661,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646096432
    },
    {
        "content": "<p>It's sort of a Rust Trinity -- three parts that are separate but inseparable :)</p>",
        "id": 273577730,
        "sender_full_name": "eholk",
        "timestamp": 1646096501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/273577265\">said</a>:</p>\n<blockquote>\n<p>although that might have just been a misread on my part</p>\n</blockquote>\n<p>This also seems unclear to me, so would be interested to have this clarified</p>",
        "id": 273577838,
        "sender_full_name": "Jake",
        "timestamp": 1646096578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310518\">Jake</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/273577838\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/273577265\">said</a>:</p>\n<blockquote>\n<p>although that might have just been a misread on my part</p>\n</blockquote>\n<p>This also seems unclear to me, so would be interested to have this clarified</p>\n</blockquote>\n<p>I think it's that Redex is normally used to model operational semantics, not necessarily that a-mir-formality is meant to model Rust's operational semantics</p>",
        "id": 273577883,
        "sender_full_name": "eholk",
        "timestamp": 1646096640
    },
    {
        "content": "<p>At least, that's how the README reads to me</p>",
        "id": 273577947,
        "sender_full_name": "eholk",
        "timestamp": 1646096678
    },
    {
        "content": "<p>although, operational semantics is also part of the type system because of const eval. Rust is complicated</p>",
        "id": 273578474,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646097161
    },
    {
        "content": "<p>What is “formality” this is the first I’m hearing of it</p>",
        "id": 273597698,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1646117112
    },
    {
        "content": "<p>There's already a <code>wg-formal-methods</code> wg. Wikipedia: \"In computer science, specifically software engineering and hardware engineering, <strong>formal methods</strong> are a particular kind of mathematically rigorous techniques for the specification, development and verification of software and hardware systems. \" Formality just refers to the usages of formal methods (to create Rust lang semantic models).</p>",
        "id": 273598856,
        "sender_full_name": "Charles Lew",
        "timestamp": 1646118340
    },
    {
        "content": "<p>I know about the RFMIG :) I help run it, but from context it seemed like “formality” was a specific project to describe the formal semantics of rust</p>",
        "id": 273599252,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1646118771
    },
    {
        "content": "<p>Which would be highly relevant to me</p>",
        "id": 273599259,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1646118795
    },
    {
        "content": "<p>I think you meant the specific project of <a href=\"https://github.com/nikomatsakis/a-mir-formality\">a-mir-formality</a>.</p>",
        "id": 273599760,
        "sender_full_name": "Charles Lew",
        "timestamp": 1646119375
    },
    {
        "content": "<p>Yep! Interesting project!</p>",
        "id": 273600866,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1646120561
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/273577150\">said</a>:</p>\n<blockquote>\n<p>the docs on a-mir-formality mentions operational semantics</p>\n</blockquote>\n<p>I expect it to include operational semantics in the future</p>",
        "id": 273679122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646156046
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312719\">@Xavier Denis</span> been meaning to reach out to you about that :)</p>",
        "id": 273679209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646156085
    },
    {
        "content": "<p>I see the formal-methods interest group and the team I am proposing as being fairly distinct</p>",
        "id": 273679257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646156104
    },
    {
        "content": "<p>the former is likely customers of the latter though</p>",
        "id": 273679282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646156112
    },
    {
        "content": "<p>Oh they are distinct but formal methods are very affected by decisions being made on the type system and semantics</p>",
        "id": 273684385,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1646157945
    },
    {
        "content": "<p>absolutely</p>",
        "id": 273693354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646161386
    },
    {
        "content": "<p>Possibly names:</p>\n<ul>\n<li><strong>Formality team</strong> (which fits with this team as owners of the various \"formality\" repos we will eventually have, that house formal models of various kinds)</li>\n<li><strong>Traits team</strong> (\"de facto\" what I often call this, but really not wide enough)</li>\n<li><strong>Types team</strong> (the \"type system\" is a good overall term of traits+polonius+chalk, but maybe excludes operational semantics, and I do see those as the purview of this team)</li>\n</ul>",
        "id": 273827917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646236479
    },
    {
        "content": "<p>Types, traits, and borrowck oh my</p>",
        "id": 273830317,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646237185
    },
    {
        "content": "<p>I think, even if it lacks \"catchiness\", \"typesystem team\" pretty well encompasses</p>",
        "id": 273830610,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646237272
    },
    {
        "content": "<p>Another idea: “Semantics team\"</p>",
        "id": 273834250,
        "sender_full_name": "Charles Lew",
        "timestamp": 1646238600
    },
    {
        "content": "<p>I like the name \"formality team\". \"Traits team\" is a bit confusing to me.</p>",
        "id": 273954991,
        "sender_full_name": "slanterns",
        "timestamp": 1646304834
    },
    {
        "content": "<p>I'm gonna be saying <code>T-whatever</code>.<br>\nSo <code>T-formality</code> doesn't quite vibe.<br>\n<code>T-formal</code> is fine.</p>",
        "id": 274017557,
        "sender_full_name": "Jubilee",
        "timestamp": 1646332356
    },
    {
        "content": "<p>T-formal and T-formality sound like they are doing formal logic or something which isn't (necessarily) the case. <code>T-semantics</code> seems okay and closer to the truth</p>",
        "id": 274018492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646332784
    },
    {
        "content": "<p>whatever color you like~ <span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span> <span aria-label=\"house\" class=\"emoji emoji-1f3e0\" role=\"img\" title=\"house\">:house:</span> <span aria-label=\"painting\" class=\"emoji emoji-1f3a8\" role=\"img\" title=\"painting\">:painting:</span></p>",
        "id": 274018626,
        "sender_full_name": "Jubilee",
        "timestamp": 1646332832
    },
    {
        "content": "<p>T-ype?</p>",
        "id": 274031758,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646338073
    },
    {
        "content": "<p>maybe spelled like ATS does, <code>t@ype</code></p>",
        "id": 274032148,
        "sender_full_name": "lqd",
        "timestamp": 1646338224
    },
    {
        "content": "<p>Or spell it as a <code>T-hype</code> with the silent h</p>",
        "id": 274033222,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646338665
    },
    {
        "content": "<p>But in seriousness, as much I as <em>love</em> bikeshedding, I think it might be to try to <em>not</em> talk about naming right now</p>",
        "id": 274033377,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646338730
    },
    {
        "content": "<p><code>T-black-tie</code><br>\n<code>black-Ty</code></p>",
        "id": 274325628,
        "sender_full_name": "Jubilee",
        "timestamp": 1646597356
    },
    {
        "content": "<p>I kind of like T-semantics or T-type-system :) the former seems a bit narrower. The \"semantics team\" seems pretty good.</p>",
        "id": 274397566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646662853
    },
    {
        "content": "<p>but indeed the most important thing is to get the meetings and plans up and going</p>",
        "id": 274397594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646662871
    },
    {
        "content": "<p>I honestly feel like the latter is narrower than the former. Most of the type system is about semantics, but there's a lot of semantics that are not about the type system.</p>",
        "id": 274466017,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646691170
    },
    {
        "content": "<p>T-type-system seems like it covers the broad strokes of the expertise the team is / will be known for.</p>",
        "id": 274466064,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646691206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274466017\">said</a>:</p>\n<blockquote>\n<p>I honestly feel like the latter is narrower than the former. Most of the type system is about semantics, but there's a lot of semantics that are not about the type system.</p>\n</blockquote>\n<p>sorry, I wrote incorrectly! I meant the <em>latter</em> is narrower</p>",
        "id": 274466255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646691298
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274466064\">said</a>:</p>\n<blockquote>\n<p>T-type-system seems like it covers the broad strokes of the expertise the team is / will be known for.</p>\n</blockquote>\n<p>I have to admit though that this seems the most \"user friendly\" and easy to understand; I do expect the team to \"own\" operational semantics, though. But that's kind of a technicality.</p>",
        "id": 274466353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646691341
    },
    {
        "content": "<p>The only thing that bugs me about semantics is the question of \"what semantics\"</p>",
        "id": 274466373,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646691353
    },
    {
        "content": "<p>I can imagine expanding the remit of the team later, but there's a lot of type system to cover already, and focus seems good.</p>",
        "id": 274472238,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646694469
    },
    {
        "content": "<p>And \"semantics for Rust\" seems like it'd effectively turn into \"complete spec for Rust\".</p>",
        "id": 274472297,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646694486
    },
    {
        "content": "<p>Hopefully.<br>\nI'd like to see that sooner, rather than later.</p>",
        "id": 274474736,
        "sender_full_name": "Connor Horman",
        "timestamp": 1646696165
    },
    {
        "content": "<p>It's a distinct activity from \"solving hard type-system problems\", though, and frankly we have a bunch of hard type-system problems that need solutions more than we need a spec at the moment.</p>",
        "id": 274479854,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646699577
    },
    {
        "content": "<p>It's hard to address hard type-system problems without a proto-spec though</p>",
        "id": 274480042,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646699737
    },
    {
        "content": "<p>In particular, it is best to handle hard type-system problems in a context where all the easy type-system problems are solved (which is what I mean by a proto-spec)</p>",
        "id": 274480225,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646699881
    },
    {
        "content": "<p>Fair enough. I think I'm more suggesting that the <em>general</em> problem of Rust semantics is much larger and harder than the narrower problem of Rust type system semantics, even if the latter needs to include \"and things needed to explain those semantics\".</p>",
        "id": 274480382,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646699976
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274479854\">said</a>:</p>\n<blockquote>\n<p>It's a distinct activity from \"solving hard type-system problems\", though, and frankly we have a bunch of hard type-system problems that need solutions more than we need a spec at the moment.</p>\n</blockquote>\n<p>Yeah, that's fair.<br>\nI'd still like to see a spec sooner rather than later, though.</p>",
        "id": 274483034,
        "sender_full_name": "Connor Horman",
        "timestamp": 1646702018
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274479854\">said</a>:</p>\n<blockquote>\n<p>It's a distinct activity from \"solving hard type-system problems\", though, and frankly we have a bunch of hard type-system problems that need solutions more than we need a spec at the moment.</p>\n</blockquote>\n<p>I think I want to question this a little bit. Specifically what a \"spec\" here means. I think the real path forward for the \"hard type-system problems\" is really to have a better/more complete <em>model</em> of how Rust's type system works. In my mind, this is a large part of a \"spec\". I just don't realistically see us being able to solve deep type system problems (e.g. associated type (lazy) norm, contravariance soundness, associated type variance) without a better model.</p>",
        "id": 274483658,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646702520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I'm suggesting there are two notably different activities here:</p>\n<ul>\n<li>Figuring out how our current system works or is <em>intended</em> to work, and documenting/modifying that to a sufficient degree that we're confident it's correct in Rust, and evolving that in an ongoing manner with new features.</li>\n<li>Drafting spec language, arguing about whether an approach is the preferred one, incorporating constraints beyond correctness such as hypothetical other implementations.</li>\n</ul>",
        "id": 274486579,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646705140
    },
    {
        "content": "<p>The former is hard enough without adding the latter to it.</p>",
        "id": 274486632,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646705180
    },
    {
        "content": "<p>My 2c: to me, type systems has the connotations of both theory and implementation (which aiui is what the team would be working on) whereas semantics to me implies only theory. Therefore I prefer T-type-system.</p>",
        "id": 274508248,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1646727031
    },
    {
        "content": "<p>Just as a random comment, I would not conflate a spec with a formalisation. Despite what PL researchers claim (including myself previously), a formal model is not necessary for what most people want a spec for, and is usually too hard to read or reason about for many people, and usually includes only a subset of the language. I do think both a semi-formal spec/reference and multiple formal models for Rust would be useful right now, but I don't think there is one artefact which will satisfy both needs.</p>",
        "id": 274508496,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1646727243
    },
    {
        "content": "<p>OK, I'm going to propose we run with \"T-typesys\" :)</p>",
        "id": 274614102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646776984
    },
    {
        "content": "<p>I think it feels right</p>",
        "id": 274614116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646776990
    },
    {
        "content": "<p>re: spec vs model, I am very keen on having a model, and one that is aiming at being complete and definitive; but I agree it's not a <em>specification</em> and I've been trying not to use that word. It may be that we wind up with multiple models, too, not sure. (I hope we can achieve what we want through layered models, though)</p>",
        "id": 274614176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777024
    },
    {
        "content": "<p>Hmm</p>",
        "id": 274614177,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646777024
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274614102\">said</a>:</p>\n<blockquote>\n<p>OK, I'm going to propose we run with \"T-typesys\" :)</p>\n</blockquote>\n<p>or <code>T-type-system</code></p>",
        "id": 274614199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777038
    },
    {
        "content": "<p>just seems long for Zulip :)</p>",
        "id": 274614206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777042
    },
    {
        "content": "<p>even longer <code>T-type-semantics</code></p>",
        "id": 274614262,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646777054
    },
    {
        "content": "<p>T-types :)</p>",
        "id": 274614281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777064
    },
    {
        "content": "<p>the \"types\" team :)</p>",
        "id": 274614293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777071
    },
    {
        "content": "<p>I like that most</p>",
        "id": 274614317,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646777088
    },
    {
        "content": "<p>short and simple</p>",
        "id": 274614325,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646777094
    },
    {
        "content": "<p>yes, I like that :) let's do it</p>",
        "id": 274614338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777102
    },
    {
        "content": "<p>I'm a little sad because I feel like 90% of this discussion has just been bikeshedding :/</p>",
        "id": 274614494,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646777171
    },
    {
        "content": "<p>lol yes</p>",
        "id": 274614725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777286
    },
    {
        "content": "<p>T-I-<span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>-types</p>",
        "id": 274614741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646777294
    },
    {
        "content": "<p>T-ypesies</p>",
        "id": 274617997,
        "sender_full_name": "oli",
        "timestamp": 1646779067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256841\">Nick Cameron</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274508496\">said</a>:</p>\n<blockquote>\n<p>Just as a random comment, I would not conflate a spec with a formalisation. Despite what PL researchers claim (including myself previously), a formal model is not necessary for what most people want a spec for, and is usually too hard to read or reason about for many people, and usually includes only a subset of the language. I do think both a semi-formal spec/reference and multiple formal models for Rust would be useful right now, but I don't think there is one artefact which will satisfy both needs.</p>\n</blockquote>\n<p>I like the way WebAssembly combined a spec and a semantics. Basically the language has a prose spec which matches what I think people normally mean when it comes to a language spec, and then there's the formal spec which provides operational semantics and comes with a canonical spec interpreter written in Ocaml. Part of the standardization process for new features (at least four years ago... I haven't been involved for awhile) is to document them both in prose, in the formal semantics, and include an implementation in the spec interpreter. There were a lot of times where I found the formal spec helpful in clarifying the prose spec.</p>\n<p>I think this is not necessarily what we want for Rust <em>right now</em>, but I think it'd make for a good shiny future.</p>",
        "id": 274646958,
        "sender_full_name": "eholk",
        "timestamp": 1646805761
    },
    {
        "content": "<p>Of course, that means each new Rust feature would essentially need to be specified three different ways (although hopefully we could derive one of the formal spec and the spec interpreter from the other).</p>",
        "id": 274647002,
        "sender_full_name": "eholk",
        "timestamp": 1646805837
    },
    {
        "content": "<p>This is somewhat to my slight push to have us consider how we might implement a feature <em>in Chalk</em> for new language features (that interact with the trait system in fun ways)</p>",
        "id": 274647103,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646805953
    },
    {
        "content": "<p>I guess, going beyond just the \"I was able to implement it in the current rustc trait solver and it works\"</p>",
        "id": 274647172,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646806007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/274614494\">said</a>:</p>\n<blockquote>\n<p>I'm a little sad because I feel like 90% of this discussion has just been bikeshedding :/</p>\n</blockquote>\n<p>the new structure seems nice, although while reading the proposal document, I wasn't sure I completely understood the rationale, or which concrete things are expected to improve compared to today. I assumed it was because the specifics were still being discussed ?</p>",
        "id": 274685241,
        "sender_full_name": "lqd",
        "timestamp": 1646831723
    },
    {
        "content": "<p>I've updated <a href=\"https://hackmd.io/zmc94SHQQbGVSupDPKkFsA\">https://hackmd.io/zmc94SHQQbGVSupDPKkFsA</a> to reflect the new name and to clarify the scope and purpose of the team. (cc <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> , <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> )</p>",
        "id": 275022230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647026788
    },
    {
        "content": "<p>reading</p>",
        "id": 275022277,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647026813
    },
    {
        "content": "<p>I think the next steps at this point are to start executing the meeting schedule etc -- I'm also planning to work on roadmaps with folks. Once we've got things going a bit, I expect to move towards an RFC.</p>",
        "id": 275022318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647026831
    },
    {
        "content": "<p>I think one thing discussed during the meeting i.r.t. team vs working group is that a team \"never is done\", \"has independent decision power\", and \"is proactive in design and planning\"</p>",
        "id": 275022898,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027123
    },
    {
        "content": "<p>Whereas a working group may not fall into one or more of those</p>",
        "id": 275022934,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027154
    },
    {
        "content": "<p>This might or might not be the right \"abstraction\", but I think it's a good start and something that I think needs to be discussed among the project at large</p>",
        "id": 275023033,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027231
    },
    {
        "content": "<p>We also discussed making a table of existing working groups and how they fit into this</p>",
        "id": 275023122,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027289
    },
    {
        "content": "<p>Because I think this proposal is two parts: 1) A restructuring/refinement of how working groups/teams function 2) A proposal to subsume wg-traits into a T-types</p>",
        "id": 275023270,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027386
    },
    {
        "content": "<p>I also think some mention of issue triage and such is worth bringing up. There are a number of e.g. P-high that easily fall under T-types and we should have their resolution in the back of our minds.</p>",
        "id": 275023711,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027595
    },
    {
        "content": "<p>This also highlights a good point: I would say that T-types has the decision-making power to make potentially-breaking changes in the face of soundness concerns. Of course, in tandem with lang/compiler, but important.</p>",
        "id": 275023972,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647027721
    },
    {
        "content": "<p>Hm, in what sense is UCG \"stalled\"? Is this a reflection of the fact that it hasn't produced any RFCs?</p>",
        "id": 275026063,
        "sender_full_name": "Jake",
        "timestamp": 1647028726
    },
    {
        "content": "<p>Yes, and that there haven't been meetings or definitive progress (still useful conversations, to be sure)</p>",
        "id": 275028241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647029824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/275023711\">said</a>:</p>\n<blockquote>\n<p>I also think some mention of issue triage and such is worth bringing up. There are a number of e.g. P-high that easily fall under T-types and we should have their resolution in the back of our minds.</p>\n</blockquote>\n<p>I did highlight this a bit under the \"bugs in the type checker\" section, but I think that's a good point. It might be useful to have an \"activities\" section and talk about bug fixing, issue triage, and proactive development.</p>",
        "id": 275028399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647029898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/making.20a.20team.20for.20traits.2C.20polonius.2C.20etc/near/275022898\">said</a>:</p>\n<blockquote>\n<p>I think one thing discussed during the meeting i.r.t. team vs working group is that a team \"never is done\", \"has independent decision power\", and \"is proactive in design and planning\"</p>\n</blockquote>\n<p>I agree with the first two, the third one though seems not quite right to me. If anything, I'd say working groups (at least how I think of them) are <em>more</em> proactive</p>",
        "id": 275028473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647029942
    },
    {
        "content": "<p>ultimately I think everything is a mix of proactive and reactive</p>",
        "id": 275028500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647029960
    },
    {
        "content": "<p>Hmm</p>",
        "id": 275028554,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647030000
    },
    {
        "content": "<p>I've come to think that working groups <em>also</em> have independent decision making power, but of a somewhat different kind -- they are owning RFCs and deciding what goes into them, and they should be given some leeway to decide things in their own domain</p>",
        "id": 275028588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030003
    },
    {
        "content": "<p>but the team ultimately owns and maintains the overall definition</p>",
        "id": 275028615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030012
    },
    {
        "content": "<p>so I guess you could say that the team has the real power :)</p>",
        "id": 275028625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030017
    },
    {
        "content": "<blockquote>\n<p>A <strong>team</strong> focuses on maintaining and extending some aspect of Rust (e.g., compiler, language, stdlib) so that it works well for all Rust users. Teams are (relatively) <strong>permanent</strong>, as they tend to an area of functionality and need to do maintenance, bug fixes, and the like. (It's possible of course to decomission a team, either because there is no one to do the work, because the work is now being done by another team, or because the product the team was maintaining has gone away.)</p>\n</blockquote>",
        "id": 275028687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030057
    },
    {
        "content": "<p>(from the doc)</p>",
        "id": 275028689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030058
    },
    {
        "content": "<p>I guess that doesn't cover \"decision making power\"</p>",
        "id": 275028706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030064
    },
    {
        "content": "<p>the reason I've been rethinking that somewhat is that I think a good pattern is \"charter a working group to recommend a solution\"</p>",
        "id": 275028725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030078
    },
    {
        "content": "<p>but it's still ultimately a recommendation I suppose-- it's just that it is a lot of power nonetheless :)</p>",
        "id": 275028742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030089
    },
    {
        "content": "<p>ah,I know why</p>",
        "id": 275028846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030129
    },
    {
        "content": "<p>e.g. -- the embedded wg</p>",
        "id": 275028851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030132
    },
    {
        "content": "<p>they have decision making power over their own repos</p>",
        "id": 275028856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030136
    },
    {
        "content": "<p>what \"team\" is going to overrule them?</p>",
        "id": 275028876,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030144
    },
    {
        "content": "<p>this could argue that they should be a team, of course, which I've considered :)</p>",
        "id": 275028919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030162
    },
    {
        "content": "<p>I guess the other POV is that those repos are not really part of Rust org exactly</p>",
        "id": 275028953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030176
    },
    {
        "content": "<p>(they aren't, in a technical sense)</p>",
        "id": 275028976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030187
    },
    {
        "content": "<p>ok, I updated somewhat the doc to highlight those \"permanent\" (\"never done\") and \"decision-making power\" elements in the \"Team vs wg\" description</p>",
        "id": 275029323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647030362
    },
    {
        "content": "<p>Should someone rename this channel from wg-traits to t-types?</p>",
        "id": 276590768,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1648198499
    },
    {
        "content": "<p>I think we need to wait until it becomes \"formalized\" with the RFC</p>",
        "id": 276610103,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648210709
    }
]