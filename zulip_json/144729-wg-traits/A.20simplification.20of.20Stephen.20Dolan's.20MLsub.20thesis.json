[
    {
        "content": "<p>I thought this might be of interest to the folks around here :) </p>\n<ol>\n<li>paper <a href=\"https://infoscience.epfl.ch/record/278576\">https://infoscience.epfl.ch/record/278576</a></li>\n<li>approachable blog post <a href=\"https://lptk.github.io/programming/2020/03/26/demystifying-mlsub.html\">https://lptk.github.io/programming/2020/03/26/demystifying-mlsub.html</a></li>\n<li>scala implementation <a href=\"https://github.com/LPTK/simple-sub\">https://github.com/LPTK/simple-sub</a></li>\n</ol>",
        "id": 204098234,
        "sender_full_name": "lqd",
        "timestamp": 1594912720
    },
    {
        "content": "<p>and a different take on the same subject:</p>\n<ol>\n<li>beginnings of a series of posts about it, part 1 <a href=\"https://blog.polybdenum.com/2020/07/04/subtype-inference-by-example-part-1-introducing-cubiml.html\">https://blog.polybdenum.com/2020/07/04/subtype-inference-by-example-part-1-introducing-cubiml.html</a> and part 2 <a href=\"https://blog.polybdenum.com/2020/07/11/subtype-inference-by-example-part-2-parsing-and-biunification.html\">https://blog.polybdenum.com/2020/07/11/subtype-inference-by-example-part-2-parsing-and-biunification.html</a></li>\n<li>demo rust implementation <a href=\"https://github.com/Storyyeller/cubiml-demo\">https://github.com/Storyyeller/cubiml-demo</a></li>\n</ol>",
        "id": 204104474,
        "sender_full_name": "lqd",
        "timestamp": 1594915224
    },
    {
        "content": "<p>ah, interesting indeed</p>",
        "id": 204257002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595018774
    },
    {
        "content": "<p>I've banged my head against that thesis a few times</p>",
        "id": 204257017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595018783
    },
    {
        "content": "<p>although the last few times I did I had kind of convinced myself it may not be that helpful for rust, but I don't know, worth re-investigating. Similarly there is some other haskell-based subtyping work that is heavily focused on inferring super/subtyping around binders, which is basically what rust is evolving into now that the borrow check is a separate part, so that might become quite relevant</p>",
        "id": 204257127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595018859
    },
    {
        "content": "<p>it is very much \"adding subtyping to type systems from the 70s/80s\" and leaving GADTs/RankNTypes/TypeFamilies/etc to future work</p>",
        "id": 204257700,
        "sender_full_name": "lqd",
        "timestamp": 1595019136
    },
    {
        "content": "<p>yeah, it's just that rust's type system is fairly simple</p>",
        "id": 204257795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595019195
    },
    {
        "content": "<p>subtyping records, or more generally row polymorphism, seemed possibly of interest to us</p>",
        "id": 204257799,
        "sender_full_name": "lqd",
        "timestamp": 1595019197
    },
    {
        "content": "<p>I've seen inference papers for GADTs for example, but not these specific ones about subtyping around binders yet</p>",
        "id": 204257998,
        "sender_full_name": "lqd",
        "timestamp": 1595019342
    },
    {
        "content": "<blockquote>\n<p>I've banged my head against that thesis a few times</p>\n</blockquote>\n<p>same, actually :) (with way more head-hitting-desk moments than you for sure)</p>",
        "id": 204258096,
        "sender_full_name": "lqd",
        "timestamp": 1595019408
    }
]