[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> -- let's talk about the projection cache, and subobligations, here. There is a pending PR from <span class=\"user-mention\" data-user-id=\"117366\">@Tatsuyuki Ishi</span> that I owe some feedback to for quite some time regardless (<a href=\"https://github.com/rust-lang/rust/pull/77325\">https://github.com/rust-lang/rust/pull/77325</a>)</p>",
        "id": 241147624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1622640229
    },
    {
        "content": "<p>From an incr comp perspective, there are two conflicting goals here</p>",
        "id": 241313065,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622664659
    },
    {
        "content": "<p>One one hand, we would like to cache things as aggressively as possible, so that we can avoid re-evaluating or re-projecting as much as possible</p>",
        "id": 241313112,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622664693
    },
    {
        "content": "<p>On the other hand, we need to make sure that we consistently produce <code>EvaluatedToOk</code> or <code>EvaluatedToOkModuloRegions</code> regardless of the state of the cache, so that re-running a subset of our evaluations for incr-comp produces the same result</p>",
        "id": 241313307,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622664785
    },
    {
        "content": "<p>To accomplish the second goal, we need to know if sub-obligations may end up producing <code>EvaluatesToOkModuloRegions</code> at any depth, since that needs to consistently propagate back up to the parent</p>",
        "id": 241313479,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622664870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Do you want to schedule a time to talk about this? AFAIK, this is the last remaining unstable fingerprints issue (aside from a minor one involving trait selection overflow).</p>",
        "id": 242656441,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623703335
    },
    {
        "content": "<p>Cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> - I made a initial attempt to fix this in <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a>. It fixes the ICE, but the performance is awful</p>",
        "id": 243026062,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623940233
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I do</p>",
        "id": 243028329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941077
    },
    {
        "content": "<p>(want to schedule time)</p>",
        "id": 243028335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941081
    },
    {
        "content": "<p>can I send you an email?</p>",
        "id": 243028356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I'll take a look it tomorrow. I'll at a hospital all day today and didn't bring my laptop.</p>",
        "id": 243031603,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1623942252
    }
]