[
    {
        "content": "<p>btw, one decision I made in formality was not to use debruijn indices. I can't say I've had any regrets. Admittedly, there is the advantage of being able to leverage some builtin redex support for name binding-- but I'm wondering if we should try removing them from rustc and/or chalk.</p>",
        "id": 275811137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647614375
    },
    {
        "content": "<p>Shadowing is just not that hard to deal with.</p>",
        "id": 275811165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647614392
    },
    {
        "content": "<p>(You can also use unique names everywhere, but that's a bit tricky, because something you have things like <code>for&lt;'a&gt; fn(&amp;'a ?X)</code> and you want to be sure that <code>?X</code> doesn't get inferred to something with a <code>'a</code> in it)</p>",
        "id": 275811288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647614436
    },
    {
        "content": "<p>Won't that reduce effectiveness of caching when two types of identical shape but different names are used?</p>",
        "id": 275811508,
        "sender_full_name": "bjorn3",
        "timestamp": 1647614533
    },
    {
        "content": "<p>Caches canonicalize anyway, so I'd assume we'd rename those lifetimes, too?</p>",
        "id": 275813768,
        "sender_full_name": "oli",
        "timestamp": 1647615553
    },
    {
        "content": "<p>a good question. I would assume we would canonicalize before caching, and that this would use canonical names, but yeah that's a potential concern</p>",
        "id": 275818438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647617371
    }
]