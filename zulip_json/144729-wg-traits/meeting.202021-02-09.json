[
    {
        "content": "<p>Anyone have any preference for meeting topic today?</p>",
        "id": 225755525,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612903959
    },
    {
        "content": "<p>Between last meeting and today, I did triage for named type aliases: <a href=\"https://hackmd.io/W4khQJyIQdy_ezT9xUdgQg\">https://hackmd.io/W4khQJyIQdy_ezT9xUdgQg</a></p>",
        "id": 225755563,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612903977
    },
    {
        "content": "<p>Also, <a href=\"https://github.com/rust-lang/rust/issues/79554\">#79554</a> has landed, which fixed a bunch of GAT issues</p>",
        "id": 225755663,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> can I be added to the zulip group?</p>",
        "id": 225755899,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1612904149
    },
    {
        "content": "<p>Sure but I don't know how to do that</p>",
        "id": 225755975,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904170
    },
    {
        "content": "<p>oh I guess I should be able because I'm Zulip admin</p>",
        "id": 225755989,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1612904184
    },
    {
        "content": "<p>done :)</p>",
        "id": 225756046,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1612904220
    },
    {
        "content": "<p>btw, I'm still trying to organize myself a bit before taking some work, hope I'm able to start doing some stuff before the end of this week</p>",
        "id": 225756108,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1612904255
    },
    {
        "content": "<p>I guess we can just talk through ongoing work if we don't have a special meeting topic</p>",
        "id": 225756115,
        "sender_full_name": "detrumi",
        "timestamp": 1612904258
    },
    {
        "content": "<p>That works</p>",
        "id": 225756248,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904324
    },
    {
        "content": "<p>Not sure if maybe <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> had something in mind</p>",
        "id": 225756270,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> I <em>still</em> haven't gotten to your Chalk PR :/</p>",
        "id": 225756386,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904399
    },
    {
        "content": "<p>I feel bad</p>",
        "id": 225756397,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904402
    },
    {
        "content": "<p>Okay <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> meeting time :)</p>",
        "id": 225756478,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904415
    },
    {
        "content": "<p>wave</p>",
        "id": 225756507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904430
    },
    {
        "content": "<p>I didn't have a <em>particular</em> agenda</p>",
        "id": 225756513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904433
    },
    {
        "content": "<p>Heh, I guess not having time is just part of becoming a compiler team member</p>",
        "id": 225756521,
        "sender_full_name": "detrumi",
        "timestamp": 1612904437
    },
    {
        "content": "<p>I started <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> reading over your binder PR</p>",
        "id": 225756529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904440
    },
    {
        "content": "<p>and I got a bit overwhelmed :)</p>",
        "id": 225756531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904442
    },
    {
        "content": "<p>i am however</p>",
        "id": 225756547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904450
    },
    {
        "content": "<p>slowly slowly revising my schedule, and I have for example new blocks of time to focus on things</p>",
        "id": 225756565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904459
    },
    {
        "content": "<p>so I'd like people to start giving me things to review :P</p>",
        "id": 225756585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904463
    },
    {
        "content": "<p>Niko, if it helps, we can schedule some time to go through it together and talk things through</p>",
        "id": 225756626,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904485
    },
    {
        "content": "<p>I was going to suggest that</p>",
        "id": 225756639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904491
    },
    {
        "content": "<p>I think that for a huge PR like this it makes a lot of sense</p>",
        "id": 225756648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is <a class=\"stream-topic\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits/topic/rustc.20binder.20refactor\">#wg-traits &gt; rustc binder refactor</a> still up or what's the PR that Niko is going to review? :)</p>",
        "id": 225756712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1612904521
    },
    {
        "content": "<p>the other thing I was starting to do was to break out the <a href=\"https://hackmd.io/5kCE2T6sTDijhqMx8kaikw\">path to async functions in traits</a> into milestones</p>",
        "id": 225756771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904532
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> that coverage of type alias impl trait is super useful</p>",
        "id": 225756783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let's set up a time after the meeting :)</p>",
        "id": 225756793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904544
    },
    {
        "content": "<p>actually, i'm going to make a hackmd team for the traits group I think :)</p>",
        "id": 225756801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904549
    },
    {
        "content": "<p>so we can start adding things into it to make them easier to find</p>",
        "id": 225756822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so, the PR as a whole is ready, but specifically the handling of hrtbs and associated type bounds need some design/impl work :)</p>",
        "id": 225756868,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904578
    },
    {
        "content": "<p>From what I can tell, GATs are \"close\"</p>",
        "id": 225756990,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904629
    },
    {
        "content": "<p>but named type aliases have a bit of work do to</p>",
        "id": 225757007,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904637
    },
    {
        "content": "<p>So</p>",
        "id": 225757061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904647
    },
    {
        "content": "<p>(GATs triage doc for reference: <a href=\"https://hackmd.io/uxoObhSxSRijNmfmGkId0g\">https://hackmd.io/uxoObhSxSRijNmfmGkId0g</a>)</p>",
        "id": 225757068,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904650
    },
    {
        "content": "<p>I'm not sure if you saw the \"slice 0\" concept</p>",
        "id": 225757074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904654
    },
    {
        "content": "<p>but I think that's key :)</p>",
        "id": 225757082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904657
    },
    {
        "content": "<p>I did not</p>",
        "id": 225757094,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904663
    },
    {
        "content": "<p>created: <a href=\"https://hackmd.io/team/rust-wg-traits/\">https://hackmd.io/team/rust-wg-traits/</a></p>",
        "id": 225757103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904669
    },
    {
        "content": "<p>maybe start transferring hackmds in there...</p>",
        "id": 225757157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904694
    },
    {
        "content": "<p>I added the folks i saw in this meeting so far</p>",
        "id": 225757190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904708
    },
    {
        "content": "<p>Shoot, I have so many</p>",
        "id": 225757194,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904711
    },
    {
        "content": "<p>Ooh, nice</p>",
        "id": 225757197,
        "sender_full_name": "detrumi",
        "timestamp": 1612904713
    },
    {
        "content": "<p>no rush</p>",
        "id": 225757202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904716
    },
    {
        "content": "<p>I didn't even know that was a thing. That's awesome</p>",
        "id": 225757232,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904738
    },
    {
        "content": "<p>Niko can you summarize slice 0 in a couple sentences?</p>",
        "id": 225757273,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904756
    },
    {
        "content": "<p>yeah, it's also covered in <a href=\"https://hackmd.io/nzqSIjdHTFW3-IT3ZWRjow\">this doc</a> in more detail</p>",
        "id": 225757324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904768
    },
    {
        "content": "<p>the basic idea is that if we focus on a particular subset of impl Trait, the behavior is (we believe) fairly close to what we want</p>",
        "id": 225757357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904784
    },
    {
        "content": "<p>that subset specifically is:</p>",
        "id": 225757361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904788
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// either at module or impl level</span>\n</code></pre></div>\n<p>where <code>Foo</code> is only used in the return type of functions</p>",
        "id": 225757392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904801
    },
    {
        "content": "<p>there are some notes and a <a href=\"https://hackmd.io/nzqSIjdHTFW3-IT3ZWRjow#Work-plan-and-time-estimates\">work plan</a> in that doc as well</p>",
        "id": 225757464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904843
    },
    {
        "content": "<p>this is i think the first milestone to be shooting for</p>",
        "id": 225757475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904849
    },
    {
        "content": "<p>you know what i'm sensing ;)</p>",
        "id": 225757488,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904858
    },
    {
        "content": "<p>skill tree!</p>",
        "id": 225757499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904864
    },
    {
        "content": "<p>I &lt;3 the skill tree</p>",
        "id": 225757611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904911
    },
    {
        "content": "<p>I'm trying to decide how to start \"sketching' it</p>",
        "id": 225757650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904939
    },
    {
        "content": "<p>I guess, my question is what <em>isn't</em> covered by slice 0</p>",
        "id": 225757669,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904949
    },
    {
        "content": "<p>(not sure how much of that is in the doc)</p>",
        "id": 225757682,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612904956
    },
    {
        "content": "<p>some examples:</p>",
        "id": 225757684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904957
    },
    {
        "content": "<p>Notably, parameter position</p>",
        "id": 225757700,
        "sender_full_name": "detrumi",
        "timestamp": 1612904969
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">some_function</span><span class=\"p\">(</span><span class=\"n\">f</span>: <span class=\"nc\">Foo</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 225757708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904973
    },
    {
        "content": "<p>or</p>",
        "id": 225757718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904982
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 225757727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904986
    },
    {
        "content": "<p>or</p>",
        "id": 225757731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904988
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 225757740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612904993
    },
    {
        "content": "<p>there is another doc that preceded that \"slice 0\" doc</p>",
        "id": 225757793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905004
    },
    {
        "content": "<p>let me see if I can find it</p>",
        "id": 225757802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905007
    },
    {
        "content": "<p>it had some more notes</p>",
        "id": 225757810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905008
    },
    {
        "content": "<p><code>let x: Foo</code> is allowed outside of the defining scope though, right?</p>",
        "id": 225757829,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905020
    },
    {
        "content": "<p><a href=\"https://hackmd.io/4dafnCiTSiOZJy_3u4ju0A\">https://hackmd.io/4dafnCiTSiOZJy_3u4ju0A</a></p>",
        "id": 225757832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225757829\">said</a>:</p>\n<blockquote>\n<p><code>let x: Foo</code> is allowed outside of the defining scope though, right?</p>\n</blockquote>\n<p>yes</p>",
        "id": 225757880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905042
    },
    {
        "content": "<p>Neat</p>",
        "id": 225757896,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225757832\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://hackmd.io/4dafnCiTSiOZJy_3u4ju0A\">https://hackmd.io/4dafnCiTSiOZJy_3u4ju0A</a></p>\n</blockquote>\n<p>this one defines a 'slice 1\"</p>",
        "id": 225757940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905066
    },
    {
        "content": "<p>and some of the thorny questions</p>",
        "id": 225757959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905077
    },
    {
        "content": "<p>which probably intersects some of the issues you triaged</p>",
        "id": 225757973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905084
    },
    {
        "content": "<p><a href=\"https://hackmd.io/WUQLxHdDRFm2jw1SOXm4Ug\">skill tree sketch document</a></p>",
        "id": 225758007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905096
    },
    {
        "content": "<p>side note that hackmd actually has a lot of ways to categorize stuff</p>",
        "id": 225758034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905109
    },
    {
        "content": "<p>e.g., adding hashtags and things</p>",
        "id": 225758050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905115
    },
    {
        "content": "<p>that we don't use at all, but probably should</p>",
        "id": 225758053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905118
    },
    {
        "content": "<p><del>that links to the slice 1 doc?</del></p>",
        "id": 225758063,
        "sender_full_name": "detrumi",
        "timestamp": 1612905121
    },
    {
        "content": "<p>given how many crazy docs we have</p>",
        "id": 225758082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905122
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225758063\">said</a>:</p>\n<blockquote>\n<p>that links to the slice 1 doc?</p>\n</blockquote>\n<p>fixed</p>",
        "id": 225758128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905141
    },
    {
        "content": "<p>So, a quick detour</p>",
        "id": 225758279,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905210
    },
    {
        "content": "<p>For GATs</p>",
        "id": 225758283,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905213
    },
    {
        "content": "<p>How are we feeling about stabilizing lifetimes-only vs all</p>",
        "id": 225758318,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905224
    },
    {
        "content": "<p>I was just pondering that</p>",
        "id": 225758337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905231
    },
    {
        "content": "<p>I don't know if there are that many more open questions around types vs. lifetimes.</p>",
        "id": 225758412,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905244
    },
    {
        "content": "<p>What are the <em>risks</em></p>",
        "id": 225758422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905247
    },
    {
        "content": "<p>I guess not having <code>for&lt;T&gt;</code> syntax limits them a bit.</p>",
        "id": 225758449,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905259
    },
    {
        "content": "<p>right, I was about to say there are very few issues that apply only to non-lifetimes</p>",
        "id": 225758456,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905262
    },
    {
        "content": "<p>I still feel a certain measure of uncertainty because i wish we had worked out the whole polonius-chalk strategy better</p>",
        "id": 225758470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905269
    },
    {
        "content": "<p>Harder to find potential problems in time</p>",
        "id": 225758473,
        "sender_full_name": "detrumi",
        "timestamp": 1612905270
    },
    {
        "content": "<p>but I don't want to block on that</p>",
        "id": 225758514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905289
    },
    {
        "content": "<p>and I kind of feel like there's already a ton of pre-existing behavior we have to contend with</p>",
        "id": 225758559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905305
    },
    {
        "content": "<p>GATs with Trait objects are further from being usable than types type-GATs imo.</p>",
        "id": 225758574,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905312
    },
    {
        "content": "<p>There are 3 filed issues currently, 2 are duplicate and have a PR. And the 3rd isn't GAT-specific</p>",
        "id": 225758584,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905317
    },
    {
        "content": "<p>this is a good point</p>",
        "id": 225758593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905321
    },
    {
        "content": "<p>3 filed issues for what?</p>",
        "id": 225758622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905334
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225758470\">said</a>:</p>\n<blockquote>\n<p>I still feel a certain measure of uncertainty because i wish we had worked out the whole polonius-chalk strategy better</p>\n</blockquote>\n<p>Maybe we can schedule a meeting to go over this?</p>",
        "id": 225758650,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225758622\">said</a>:</p>\n<blockquote>\n<p>3 filed issues for what?</p>\n</blockquote>\n<p>non-lifetime GATs</p>",
        "id": 225758678,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905357
    },
    {
        "content": "<p>But I'm sure there are plenty of things that just haven't been tested well</p>",
        "id": 225758768,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905383
    },
    {
        "content": "<p>I see</p>",
        "id": 225758795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905397
    },
    {
        "content": "<p>let's talk about trait objets for a bit</p>",
        "id": 225758802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905400
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225758574\">said</a>:</p>\n<blockquote>\n<p>GATs with Trait objects are further from being usable than types type-GATs imo.</p>\n</blockquote>\n<p>Can you elaborate on this?</p>",
        "id": 225758803,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905401
    },
    {
        "content": "<p>There is a bug with object safety currently that I've fixed locally. But maybe I'm missing a more general problem</p>",
        "id": 225758885,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225758802\">said</a>:</p>\n<blockquote>\n<p>let's talk about trait objets for a bit</p>\n</blockquote>\n<p>oops, ninja'd</p>",
        "id": 225758918,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905454
    },
    {
        "content": "<p>there's usability problems I think</p>",
        "id": 225758934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905463
    },
    {
        "content": "<p>also i saw some notes about <code>for</code> syntax that i found confusing</p>",
        "id": 225759000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905483
    },
    {
        "content": "<p>I think I saw an example like <code>for&lt;'a&gt; dyn Iterable&lt;Iter&lt;'a&gt; = ...&gt;</code> ?</p>",
        "id": 225759048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905503
    },
    {
        "content": "<p>that makes no sense to me at all :)</p>",
        "id": 225759062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905510
    },
    {
        "content": "<p>Relevant issue: <a href=\"https://github.com/rust-lang/rust/issues/81823\">#81823</a></p>",
        "id": 225759071,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905514
    },
    {
        "content": "<p>Where?</p>",
        "id": 225759090,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905527
    },
    {
        "content": "<p>I must have missed that</p>",
        "id": 225759108,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905535
    },
    {
        "content": "<p>you wrote it!</p>",
        "id": 225759114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905540
    },
    {
        "content": "<p>:O</p>",
        "id": 225759129,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905546
    },
    {
        "content": "<p>at least I thought you did</p>",
        "id": 225759141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905553
    },
    {
        "content": "<p>This issue: <a href=\"https://github.com/rust-lang/rust/blob/185de5f41a64e1b790524d5873dc1f7e368f64ab/compiler/rustc_trait_selection/src/traits/select/confirmation.rs#L462\">https://github.com/rust-lang/rust/blob/185de5f41a64e1b790524d5873dc1f7e368f64ab/compiler/rustc_trait_selection/src/traits/select/confirmation.rs#L462</a></p>",
        "id": 225759171,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905575
    },
    {
        "content": "<p>but I see that in this issue <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> wrote this <code>for</code> syntax</p>",
        "id": 225759175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905577
    },
    {
        "content": "<p>it seems confusing to me -- I expect the <code>'a</code> in <code>Iter&lt;'a&gt;</code> to be a <em>binder</em></p>",
        "id": 225759209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905591
    },
    {
        "content": "<p>that would shadow the <code>'a</code> in <code>for&lt;'a&gt;</code></p>",
        "id": 225759246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905603
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225759114\">said</a>:</p>\n<blockquote>\n<p>you wrote it!</p>\n</blockquote>\n<p>/me frantically searches for this</p>",
        "id": 225759314,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225759114\">said</a>:</p>\n<blockquote>\n<p>you wrote it!</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <a href=\"https://github.com/rust-lang/rust/issues/44265#issuecomment-775423925\">here</a>:</p>\n<blockquote>\n<p>To begin, a lot of blocking issues related to specifying GATs in trait paths (e.g. <code>for&lt;'a&gt; T: Foo&lt;Y&lt;'a&gt; = u32&gt;</code>) have now been \"resolved\" with <a href=\"https://github.com/rust-lang/rust/issues/79554\">#79554</a>. However, this isn't <em>completely</em> resolved, since we haven't completely decided whether you need that <code>for&lt;'a&gt;</code> or if you should be able to (or must) elide that. As long as we decide you don't <em>have</em> to omit it, allowing the elision in the future is probably a backwards-compatible change.</p>\n</blockquote>",
        "id": 225759324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905633
    },
    {
        "content": "<p>(from <a href=\"https://github.com/rust-lang/rust/issues/44265#issuecomment-775423925\">https://github.com/rust-lang/rust/issues/44265#issuecomment-775423925</a>)</p>",
        "id": 225759368,
        "sender_full_name": "detrumi",
        "timestamp": 1612905658
    },
    {
        "content": "<p>hmm</p>",
        "id": 225759370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905658
    },
    {
        "content": "<p>I guess that's not about <code>dyn</code></p>",
        "id": 225759380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905662
    },
    {
        "content": "<p>maybe I misunderstood</p>",
        "id": 225759391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905669
    },
    {
        "content": "<p>i still don't quite understand it either way though :)</p>",
        "id": 225759398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905674
    },
    {
        "content": "<p>(for the same reason)</p>",
        "id": 225759407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905684
    },
    {
        "content": "<p>Oops did I make a mistake</p>",
        "id": 225759440,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905699
    },
    {
        "content": "<p>I actually expect that code to be an error</p>",
        "id": 225759482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905721
    },
    {
        "content": "<p>since we generally forbid shadowing lifetimes</p>",
        "id": 225759533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905726
    },
    {
        "content": "<p>It's not a binder, it's plausibly useful to use a non-fully generic arg in bounds, e.g. <code>PtrFamily&lt;Ptr&lt;i32&gt; = Rc&lt;i32&gt;&gt;</code>, so it's not a definition.</p>",
        "id": 225759597,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612905734
    },
    {
        "content": "<p>I'm not sure we <em>should</em> forbid that, but we do</p>",
        "id": 225759603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905737
    },
    {
        "content": "<p>hmm</p>",
        "id": 225759623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905746
    },
    {
        "content": "<p>I guess it's true that you could do that</p>",
        "id": 225759641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905757
    },
    {
        "content": "<p>but there needs to be the option of a binder</p>",
        "id": 225759668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905768
    },
    {
        "content": "<p>and <code>for&lt;'a&gt; T: Foo&lt;...&gt;</code> is not the right place for it</p>",
        "id": 225759683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905776
    },
    {
        "content": "<p>I mean, it's ok</p>",
        "id": 225759698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905784
    },
    {
        "content": "<p>Well</p>",
        "id": 225759723,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905789
    },
    {
        "content": "<p>it's just not the only option</p>",
        "id": 225759768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905794
    },
    {
        "content": "<p>I think this was the design question</p>",
        "id": 225759778,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905797
    },
    {
        "content": "<p><code>T: Foo&lt;for&lt;'a&gt; Y&lt;'a&gt; = ...&gt;</code></p>",
        "id": 225759789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905800
    },
    {
        "content": "<p>dear god</p>",
        "id": 225759794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905804
    },
    {
        "content": "<p>oh how do you \"define\" that <code>'a</code></p>",
        "id": 225759796,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905805
    },
    {
        "content": "<p>:)</p>",
        "id": 225759801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905807
    },
    {
        "content": "<p>I do feel like there's some ergonomic issues to resolve with GATs...</p>",
        "id": 225759852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905830
    },
    {
        "content": "<p>I think there was some previous discussion here</p>",
        "id": 225759867,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905835
    },
    {
        "content": "<p>I'd like to read it</p>",
        "id": 225760025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905900
    },
    {
        "content": "<p>So, <a href=\"https://github.com/rust-lang/rust/issues/79266\">#79266</a> is a start</p>",
        "id": 225760127,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905944
    },
    {
        "content": "<p>still trying to find more</p>",
        "id": 225760165,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612905957
    },
    {
        "content": "<p>maybe in some of the resolved conversations?</p>",
        "id": 225760219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905968
    },
    {
        "content": "<p>I don't see much there</p>",
        "id": 225760225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905970
    },
    {
        "content": "<p>sigh</p>",
        "id": 225760252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905983
    },
    {
        "content": "<p>I've sometimes wished that we did declarations differently</p>",
        "id": 225760260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612905990
    },
    {
        "content": "<p>specifically I wish that we did</p>",
        "id": 225760286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906001
    },
    {
        "content": "<p>I think there's some older conversations somewhere</p>",
        "id": 225760303,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906009
    },
    {
        "content": "<p>I'll look later</p>",
        "id": 225760316,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906013
    },
    {
        "content": "<p><code>struct Foo&lt;type T&gt; { ... }</code> -- using the keyword means \"ths is a declaration'</p>",
        "id": 225760325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906014
    },
    {
        "content": "<p>so that you could do</p>",
        "id": 225760328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906016
    },
    {
        "content": "<p><code>impl Foo&lt;type T&gt; { .. }</code></p>",
        "id": 225760336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906022
    },
    {
        "content": "<p>this is relevant because then you could do</p>",
        "id": 225760365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906028
    },
    {
        "content": "<p><code>T: Iterable&lt;Iter&lt;lifetime a&gt; = a&gt;</code></p>",
        "id": 225760432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906045
    },
    {
        "content": "<p>except i would not want that keyword</p>",
        "id": 225760448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906053
    },
    {
        "content": "<p>/me considers whether to push for this</p>",
        "id": 225760463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906062
    },
    {
        "content": "<p>Eh, I feel like that would get verbose quickly</p>",
        "id": 225760475,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906067
    },
    {
        "content": "<p>that'd be an edition change if I ever saw one :)</p>",
        "id": 225760480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906068
    },
    {
        "content": "<p>I think it'd be less verbose</p>",
        "id": 225760493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906076
    },
    {
        "content": "<p>well, maybe not</p>",
        "id": 225760515,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906082
    },
    {
        "content": "<p>anyway, no matter</p>",
        "id": 225760549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906085
    },
    {
        "content": "<p>a similar principle applies</p>",
        "id": 225760561,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906092
    },
    {
        "content": "<p>e.g.,</p>",
        "id": 225760565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906093
    },
    {
        "content": "<p><code>T: Iterable&lt;Iter&lt;for 'a&gt; = &amp;'a u32&gt;</code></p>",
        "id": 225760576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906102
    },
    {
        "content": "<p>oh hmm</p>",
        "id": 225760584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906108
    },
    {
        "content": "<p><code>&lt;for 'a&gt;</code> would hinder introducing multiple lifetimes though</p>",
        "id": 225760652,
        "sender_full_name": "detrumi",
        "timestamp": 1612906142
    },
    {
        "content": "<p>why</p>",
        "id": 225760678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906154
    },
    {
        "content": "<p>as opposed to <code>for&lt;'a,'b&gt;</code></p>",
        "id": 225760689,
        "sender_full_name": "detrumi",
        "timestamp": 1612906159
    },
    {
        "content": "<p>ah, you would do</p>",
        "id": 225760693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906164
    },
    {
        "content": "<p><code>T: Iterable&lt;Iter&lt;for 'a, for 'b&gt; = ... &gt;</code></p>",
        "id": 225760717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906174
    },
    {
        "content": "<p>anyway, I'm just trying to think outside the box a bit</p>",
        "id": 225760725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906179
    },
    {
        "content": "<p>this is probably not the right venue for this brainstorming</p>",
        "id": 225760744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906187
    },
    {
        "content": "<p>but I would want to think about these sorts of issues before we stabilized</p>",
        "id": 225760805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906205
    },
    {
        "content": "<p>(side note that <code>impl MyStruct&lt;for T&gt; { ... }</code> would work too :)</p>",
        "id": 225760820,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906224
    },
    {
        "content": "<p>I think <code>for T</code> syntax is not bad :)</p>",
        "id": 225760848,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906240
    },
    {
        "content": "<p>But unsure what more it gets you</p>",
        "id": 225760899,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906265
    },
    {
        "content": "<p>other than in trait paths</p>",
        "id": 225760929,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906278
    },
    {
        "content": "<p>mostly I thnk that <code>T: Iterable&lt;for&lt;'a&gt; Iter&lt;'a&gt; = u32&gt;</code> is a nonstarter</p>",
        "id": 225760967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906298
    },
    {
        "content": "<p>I can barely parse that here, on zulip</p>",
        "id": 225760978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906305
    },
    {
        "content": "<p>imagine a bunch of code like that...</p>",
        "id": 225760992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906311
    },
    {
        "content": "<p>in general I don't feel the <code>for&lt;'a&gt;</code> syntax has scaled especially well</p>",
        "id": 225761056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906327
    },
    {
        "content": "<p>Of course, I forgot there was a separate issue <a href=\"https://github.com/rust-lang/rust/issues/67510\">#67510</a></p>",
        "id": 225761064,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906330
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225760929\">said</a>:</p>\n<blockquote>\n<p>other than in trait paths</p>\n</blockquote>\n<p>if you're talking about my impl example, I think it would make things more concise, but we can discuss it later</p>",
        "id": 225761129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906361
    },
    {
        "content": "<p>the other option would be <code>let</code></p>",
        "id": 225761149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906367
    },
    {
        "content": "<p>anyway</p>",
        "id": 225761166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906374
    },
    {
        "content": "<p>And see <a href=\"https://github.com/rust-lang/rust/issues/67510#issuecomment-699144813\">https://github.com/rust-lang/rust/issues/67510#issuecomment-699144813</a></p>",
        "id": 225761172,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225761129\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225760929\">said</a>:</p>\n<blockquote>\n<p>other than in trait paths</p>\n</blockquote>\n<p>if you're talking about my impl example, I think it would make things more concise, but we can discuss it later</p>\n</blockquote>\n<p>let's discuss later for sure :)</p>",
        "id": 225761224,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906390
    },
    {
        "content": "<p>ok so \"GAT syntax\" is a big thin to be resolved</p>",
        "id": 225761238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906395
    },
    {
        "content": "<p>Hopefully sooner, rather than later</p>",
        "id": 225761309,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906428
    },
    {
        "content": "<p>I would hate to move things forward a lot then decided to completely change the syntax</p>",
        "id": 225761374,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906445
    },
    {
        "content": "<p>I'm kind of into some proposal like this, but I would want to do it universally</p>",
        "id": 225761451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906474
    },
    {
        "content": "<p>e.g., instead of <code>for&lt;'a&gt; dyn Foo&lt;'a&gt;</code> you could do <code>dyn Foo&lt;for 'a&gt;</code></p>",
        "id": 225761497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906500
    },
    {
        "content": "<p>So, Niko, you <em>don't</em> like the <code>for&lt;'a&gt; T: Foo&lt;Bar&lt;'a&gt; = Baz&lt;'a&gt;&gt;</code> syntax</p>",
        "id": 225761500,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906504
    },
    {
        "content": "<p>well</p>",
        "id": 225761522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906511
    },
    {
        "content": "<p>so, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> convinced me that the <code>'a</code> in <code>bar&lt;'a&gt;</code> is not necessarily a binder site</p>",
        "id": 225761558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906536
    },
    {
        "content": "<p>correct</p>",
        "id": 225761585,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906549
    },
    {
        "content": "<p>it's not that I don't like that syntax -- but it's hard to read, and I'm not sure if we all agree on what it means :)</p>",
        "id": 225761600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906555
    },
    {
        "content": "<p>I mean, theoretically you could just do <code>T: Foo&lt;Bar&lt;'a&gt; = Baz&lt;'a&gt;&gt;</code></p>",
        "id": 225761666,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906576
    },
    {
        "content": "<p>I forget if I saw why we didn't do that</p>",
        "id": 225761679,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906585
    },
    {
        "content": "<p>presumably you can do that, if <code>'a</code> is bound somewhere else?</p>",
        "id": 225761715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906602
    },
    {
        "content": "<p>Do you mean the <code>for</code> is implicit there?</p>",
        "id": 225761753,
        "sender_full_name": "detrumi",
        "timestamp": 1612906621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, yes, we shouldn't be able to shadow <code>'a</code></p>",
        "id": 225761892,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906684
    },
    {
        "content": "<p>And <span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span>, I think the concern here is it doesn't <em>really</em> make sense as a \"for\"</p>",
        "id": 225761932,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906711
    },
    {
        "content": "<p>since it isn't <em>binding</em></p>",
        "id": 225761943,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906718
    },
    {
        "content": "<p>(please someone correct me if I'm wrong)</p>",
        "id": 225761974,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906739
    },
    {
        "content": "<p>Ah, I was assuming it was a binding. But I could be wrong there</p>",
        "id": 225762015,
        "sender_full_name": "detrumi",
        "timestamp": 1612906775
    },
    {
        "content": "<p><code>'a</code> is free in <code>T: Foo&lt;Bar&lt;'a&gt; = Baz&lt;'a&gt;&gt;</code> and would have to have already been defined.</p>",
        "id": 225762133,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612906823
    },
    {
        "content": "<p>Well <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> I think the proposal I'm making here is that by putting <code>Bar&lt;'a&gt;</code> you <em>are</em> defining it</p>",
        "id": 225762237,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906875
    },
    {
        "content": "<p>Then what's the syntax for using an existing lifetime?</p>",
        "id": 225762281,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612906911
    },
    {
        "content": "<p>What would using an existing lifetime there mean?</p>",
        "id": 225762348,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906931
    },
    {
        "content": "<p>(I think I'm confused about that)</p>",
        "id": 225762375,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612906946
    },
    {
        "content": "<p>you could do it</p>",
        "id": 225762397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906960
    },
    {
        "content": "<p>if you think of chalk</p>",
        "id": 225762417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612906973
    },
    {
        "content": "<p>That <code>&lt;T as Foo&gt;::Bar&lt;'a&gt; == Baz&lt;'a&gt;</code> and for other lifetimes the result isn't specified.</p>",
        "id": 225762454,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612906996
    },
    {
        "content": "<p>it would basically be <code>ProjectionEq(&lt;T as Iterable&gt;::Iter&lt;'a&gt; = &amp;'a u32)</code></p>",
        "id": 225762468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907008
    },
    {
        "content": "<p>analogous to how you can do <code>T: Trait&lt;'a, Foo = u32&gt;</code></p>",
        "id": 225762498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907027
    },
    {
        "content": "<p>which would be <code>ProjectionEq(&lt;T as Trait&lt;'a&gt;&gt;::Foo = u32)</code></p>",
        "id": 225762509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907040
    },
    {
        "content": "<p>Well...but...why would you need a different lifetime in <code>Iter&lt;'a&gt;</code></p>",
        "id": 225762599,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907091
    },
    {
        "content": "<p>well</p>",
        "id": 225762609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907098
    },
    {
        "content": "<p>you'd basically be saying</p>",
        "id": 225762621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907104
    },
    {
        "content": "<p>\"the iterator for this specific lifetime\"</p>",
        "id": 225762629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907110
    },
    {
        "content": "<p>that said</p>",
        "id": 225762639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907113
    },
    {
        "content": "<p>I don't know why you would actually WANT to say that</p>",
        "id": 225762675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907137
    },
    {
        "content": "<p>which I guess is your point :)</p>",
        "id": 225762681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907142
    },
    {
        "content": "<p>yeah</p>",
        "id": 225762688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907147
    },
    {
        "content": "<p>it is certainly a valid thing to say</p>",
        "id": 225762701,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907154
    },
    {
        "content": "<p>but I agree it will be less common</p>",
        "id": 225762754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907163
    },
    {
        "content": "<p>which is kind of what I'm concerned about</p>",
        "id": 225762764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907168
    },
    {
        "content": "<p>that said, I am also concerned that just \"randomly\" deciding what is and is not binding points lke this</p>",
        "id": 225762783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907181
    },
    {
        "content": "<p>is going to be very confusing</p>",
        "id": 225762788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907184
    },
    {
        "content": "<p>which is why I casting about for an alternative model</p>",
        "id": 225762803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907189
    },
    {
        "content": "<p>that could be more uniform</p>",
        "id": 225762811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907195
    },
    {
        "content": "<p>I think I need to think more about this</p>",
        "id": 225762876,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907246
    },
    {
        "content": "<p>Like, a situation where asking <code>&lt;T as Foo&gt;::Bar&lt;'b&gt; == Baz&lt;'a&gt;</code></p>",
        "id": 225762905,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907270
    },
    {
        "content": "<p>is useful</p>",
        "id": 225762909,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907276
    },
    {
        "content": "<p>so</p>",
        "id": 225762979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907297
    },
    {
        "content": "<p>the fact that you can't do specialization on lifetimes is relevant here BUT</p>",
        "id": 225762993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907305
    },
    {
        "content": "<p>if we extend to <em>types</em></p>",
        "id": 225762997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907309
    },
    {
        "content": "<p>well</p>",
        "id": 225763002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907313
    },
    {
        "content": "<p>ok so I take that back :)</p>",
        "id": 225763013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907319
    },
    {
        "content": "<p>we don't let you specialize inside of GATs</p>",
        "id": 225763023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907325
    },
    {
        "content": "<p>My brain hurts</p>",
        "id": 225763117,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907394
    },
    {
        "content": "<p>I can't really come up with a reason you would not want a binder there</p>",
        "id": 225763226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907439
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> do you have an example?</p>",
        "id": 225763229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907442
    },
    {
        "content": "<p>well this was an interesting conversation</p>",
        "id": 225763355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907514
    },
    {
        "content": "<p>even if we went pretty deep :)</p>",
        "id": 225763369,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907519
    },
    {
        "content": "<p>Right so</p>",
        "id": 225763458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907558
    },
    {
        "content": "<p>moving forward</p>",
        "id": 225763473,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907564
    },
    {
        "content": "<p>This seems pretty high priority</p>",
        "id": 225763499,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907578
    },
    {
        "content": "<p>I.e. decided on the syntax here</p>",
        "id": 225763526,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907597
    },
    {
        "content": "<p>yeah, particularly if we were to take aim at some of my more ambitious proposals</p>",
        "id": 225763583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907631
    },
    {
        "content": "<p>I guess i wouldn't be <em>opposed</em> to landing -- and even stabilizing -- a <code>for</code>-based syntax</p>",
        "id": 225763651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907654
    },
    {
        "content": "<p>i have to think about it</p>",
        "id": 225763684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907666
    },
    {
        "content": "<p>I just wonder if that's a bit <em>too</em> ambitious?</p>",
        "id": 225763691,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907671
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225763583\">said</a>:</p>\n<blockquote>\n<p>yeah, particularly if we were to take aim at some of my more ambitious proposals</p>\n</blockquote>\n<p>I'd prefer to separate this out as an ergonomic improvement</p>",
        "id": 225763697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907674
    },
    {
        "content": "<p>that I can argue for on its own merits</p>",
        "id": 225763702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907678
    },
    {
        "content": "<p>I don't want it to be a blocker</p>",
        "id": 225763704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225763691\">said</a>:</p>\n<blockquote>\n<p>I just wonder if that's a bit <em>too</em> ambitious?</p>\n</blockquote>\n<p>i think it is to have as a blocker on progress</p>",
        "id": 225763731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907698
    },
    {
        "content": "<p>So, next question</p>",
        "id": 225763759,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907712
    },
    {
        "content": "<p>If we start with the <code>for&lt;'a&gt; T: Foo&lt;Bar&lt;'a&gt; = Baz&lt;'a&gt;&gt;</code> syntax</p>",
        "id": 225763798,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907734
    },
    {
        "content": "<p>can we later allow <code>T: Foo&lt;Bar&lt;'a&gt; = Baz&lt;'a&gt;&gt;</code></p>",
        "id": 225763820,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907741
    },
    {
        "content": "<p>would be similar to in-band lifetimes, yeah?</p>",
        "id": 225763851,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907758
    },
    {
        "content": "<p>so what's confusing to me <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 225763913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907774
    },
    {
        "content": "<p>is that i don't think those two things would be equivalent, even with \"implicit\" binders</p>",
        "id": 225763920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907781
    },
    {
        "content": "<p>well hmm</p>",
        "id": 225763942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907799
    },
    {
        "content": "<p>I think I agree with you</p>",
        "id": 225763953,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907806
    },
    {
        "content": "<p>I'm wondering</p>",
        "id": 225763970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907822
    },
    {
        "content": "<p>i may be incorrect</p>",
        "id": 225763984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907829
    },
    {
        "content": "<p>it seems weird because you could write something lke</p>",
        "id": 225764030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907851
    },
    {
        "content": "<p><code>for&lt;'a&gt; T: Foo&lt;Bar&lt;'a&gt; = ..., Baz&lt;'a&gt; = ...&gt;</code></p>",
        "id": 225764083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907874
    },
    {
        "content": "<p>but I guess that just expands to </p>\n<ul>\n<li><code>for&lt;'a&gt; ProjectionEq(&lt;T as Foo&gt;::Bar&lt;'a&gt; = ...)</code></li>\n<li><code>for&lt;'a&gt; ProjectionEq(&lt;T as Foo&gt;::Baz&lt;'a&gt; = ...)</code></li>\n</ul>",
        "id": 225764161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907901
    },
    {
        "content": "<p>yes</p>",
        "id": 225764165,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907906
    },
    {
        "content": "<p>so i think i am .. wrong</p>",
        "id": 225764173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907910
    },
    {
        "content": "<p>I was about to say that</p>",
        "id": 225764182,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907912
    },
    {
        "content": "<p>it's counterintuitive to me, but actually that is a fine spot for the binder</p>",
        "id": 225764197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907922
    },
    {
        "content": "<p>you could of course also have <code>for&lt;'a&gt; T: Foo&lt;'a, Bar&lt;'a&gt; = ...&gt;</code></p>",
        "id": 225764230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907943
    },
    {
        "content": "<p>this is where the 'can you just drop the binder' question comes in</p>",
        "id": 225764264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907961
    },
    {
        "content": "<p>Ah, so it's not always directly to the left of the <code>=</code>. I was wondering about that</p>",
        "id": 225764291,
        "sender_full_name": "detrumi",
        "timestamp": 1612907980
    },
    {
        "content": "<p>but that expands to <code>for&lt;'a&gt; T: Foo&lt;'a&gt;</code> and <code>for&lt;'a&gt; &lt;T as Foo&lt;'a&gt;&gt;::Bar&lt;'a&gt; = ...</code></p>",
        "id": 225764294,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612907981
    },
    {
        "content": "<p>right</p>",
        "id": 225764304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612907993
    },
    {
        "content": "<p>oh no, flashbacks to binder refactor</p>",
        "id": 225764384,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908005
    },
    {
        "content": "<p>Anyways, that was a quick hour</p>",
        "id": 225764420,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908023
    },
    {
        "content": "<p>so -- if you had \"implied\" binders, would <code>T: Foo&lt;'a, Bar&lt;'a&gt; = ..&gt;</code> mean:</p>\n<ul>\n<li><code>for&lt;'a&gt; { ProjectionEq(&lt;T as Foo&lt;'a&gt;&gt;::Bar&lt;'a&gt; = ...)</code></li>\n</ul>\n<p>or</p>\n<ul>\n<li><code>for&lt;'a, 'b&gt; { ProjectionEq(&lt;T as Foo&lt;'a&gt;&gt;::Bar&lt;'b&gt; = ...)</code></li>\n</ul>",
        "id": 225764462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908046
    },
    {
        "content": "<p>this is the usual problem with \"in-band lifetimes'</p>",
        "id": 225764476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908055
    },
    {
        "content": "<p>how to decide when two uses of <code>'a</code> are meant to be \"the same\"</p>",
        "id": 225764480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908061
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225763226\">said</a>:</p>\n<blockquote>\n<p>I can't really come up with a reason you would not want a binder there</p>\n</blockquote>\n<p>Can we think about this bit? (async) This would be helpful to me</p>",
        "id": 225764484,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908063
    },
    {
        "content": "<p>or \"different'</p>",
        "id": 225764491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908066
    },
    {
        "content": "<p>yes, we can</p>",
        "id": 225764507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908079
    },
    {
        "content": "<p>Well, I haven't looked at the in-band lifetime proposal</p>",
        "id": 225764541,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908097
    },
    {
        "content": "<p>But I assumed that anytime you mention <code>'a</code>, you mean the same <code>'a</code></p>",
        "id": 225764564,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908112
    },
    {
        "content": "<p>obviously it didn't address this issue</p>",
        "id": 225764573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908117
    },
    {
        "content": "<p>I'm not a fan of the in-band lifetime proposal anymore, tbh</p>",
        "id": 225764617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908123
    },
    {
        "content": "<p>not because it's not nice to use</p>",
        "id": 225764631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908130
    },
    {
        "content": "<p>Welp</p>",
        "id": 225764632,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908130
    },
    {
        "content": "<p>but because I would prefer something more ambitious :) and more clear, I hope</p>",
        "id": 225764661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908149
    },
    {
        "content": "<p><em>anyway</em></p>",
        "id": 225764678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908162
    },
    {
        "content": "<p>Well, that sounds like something to think about too :)</p>",
        "id": 225764694,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908170
    },
    {
        "content": "<p>i think if I were going to pick a path</p>",
        "id": 225764695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908170
    },
    {
        "content": "<p>I would say \"require <code>for</code>\"</p>",
        "id": 225764700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908175
    },
    {
        "content": "<p>The example where you want to use an externally defined lifetime is this one: <a href=\"https://github.com/rust-lang/rust/issues/70303\">https://github.com/rust-lang/rust/issues/70303</a> if you fix the bound to <code>Doc: Document&lt;Cursor&lt;'d&gt; = Cursor&gt;</code> everything works, but using a binder doesn't work. Admittedly this code doesn't make much sense.</p>",
        "id": 225764715,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612908186
    },
    {
        "content": "<p>and let me make the case for my more ambitious design</p>",
        "id": 225764716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908188
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>    Doc: Document&lt;Cursor = Cursor&gt;,\n</code></pre></div>",
        "id": 225764867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908243
    },
    {
        "content": "<p>that bound?</p>",
        "id": 225764875,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908245
    },
    {
        "content": "<p>That one</p>",
        "id": 225764886,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612908251
    },
    {
        "content": "<p>why doesn't a binder work</p>",
        "id": 225764914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908282
    },
    {
        "content": "<p>The fact that there is a param named <code>Cursor</code> but the associated type is also named <code>Cursor</code> is scary</p>",
        "id": 225764924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908290
    },
    {
        "content": "<p>and confusing</p>",
        "id": 225764933,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908295
    },
    {
        "content": "<p>ok</p>",
        "id": 225764974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908320
    },
    {
        "content": "<p><code>Cursor</code> (the type param) references <code>'d</code> at the call site.</p>",
        "id": 225764977,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612908321
    },
    {
        "content": "<p>yeah ok</p>",
        "id": 225764999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908336
    },
    {
        "content": "<p>the generic type parameter is key there</p>",
        "id": 225765025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908356
    },
    {
        "content": "<p>that's what I was missing</p>",
        "id": 225765036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908361
    },
    {
        "content": "<p>if we had full \"HKT\"</p>",
        "id": 225765098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908376
    },
    {
        "content": "<p>Cursor could have kind <code>(lifetime -&gt; type)</code></p>",
        "id": 225765126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908396
    },
    {
        "content": "<p>Well, I have some reading/thinking to do</p>",
        "id": 225765161,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908415
    },
    {
        "content": "<p>but because we don't, you only get the type for some <em>particular</em> lifetime</p>",
        "id": 225765193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908431
    },
    {
        "content": "<p>and so you want to be able to say that</p>",
        "id": 225765232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908452
    },
    {
        "content": "<p>ok, makes sense</p>",
        "id": 225765237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908454
    },
    {
        "content": "<p>seems obvious now :)</p>",
        "id": 225765250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225765161\">said</a>:</p>\n<blockquote>\n<p>Well, I have some reading/thinking to do</p>\n</blockquote>\n<p>about kinds? :)</p>",
        "id": 225765256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908465
    },
    {
        "content": "<p>just I think my understanding of GATs isn't quite complete</p>",
        "id": 225765332,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908494
    },
    {
        "content": "<p>Can I be added to that hack md group?</p>",
        "id": 225765391,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612908542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225764700\">said</a>:</p>\n<blockquote>\n<p>I would say \"require <code>for</code>\"</p>\n</blockquote>\n<p>well I think this is the conclusion</p>",
        "id": 225765407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908551
    },
    {
        "content": "<p>Okay so current implemented syntax?</p>",
        "id": 225765544,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908622
    },
    {
        "content": "<p>yes</p>",
        "id": 225765549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908627
    },
    {
        "content": "<p>great, makes it easy</p>",
        "id": 225765564,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908637
    },
    {
        "content": "<p>I still think we should change it, I just think that comes in the \"make things nice to use\" part of the skill tree</p>",
        "id": 225765569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908642
    },
    {
        "content": "<p>the thing I like about the skill tree is orienting around goals</p>",
        "id": 225765578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908649
    },
    {
        "content": "<p>I am going to put in a bit of thought into what I mean</p>",
        "id": 225765585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908655
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-09/near/225765391\">said</a>:</p>\n<blockquote>\n<p>Can I be added to that hack md group?</p>\n</blockquote>\n<p>added</p>",
        "id": 225765596,
        "sender_full_name": "Jack Huey",
        "timestamp": 1612908667
    },
    {
        "content": "<p>whoops, sorry, missed that <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 225765610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612908679
    },
    {
        "content": "<p>Thanks</p>",
        "id": 225765753,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1612908762
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 226141115,
        "sender_full_name": "Zahari Dichev",
        "timestamp": 1613139193
    }
]