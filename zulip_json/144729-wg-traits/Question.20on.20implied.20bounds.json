[
    {
        "content": "<p>I just read this sentence in the <a href=\"https://rust-lang.github.io/chalk/book/clauses/implied_bounds.html\">chalk book</a></p>\n<blockquote>\n<p>Note that in the loud_insert example, HashSet&lt;K&gt; is not the type of the set argument of loud_insert, it only appears in the argument type &amp;mut HashSet&lt;K&gt;: we care about every type appearing in the function's header (the header is the signature without the return type), not only types of the function's arguments.</p>\n</blockquote>\n<p>Does this mean the following function does not have the implicit bound of <code>K:Hash</code></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">create_with_item</span><span class=\"o\">&lt;</span><span class=\"n\">K</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">item</span>: <span class=\"nc\">K</span><span class=\"p\">)</span><span class=\"w\">  </span>-&gt;  <span class=\"nc\">HashSet</span><span class=\"o\">&lt;</span><span class=\"n\">K</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HashSet</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018\">It currently isn't</a> but I also don't know how to activate chalk on the playground, so sorry for not checking that.</p>\n<p>If this is intended to stay like this, could you explain why? I'd then also create a PR against the book so the reasons would be documented.</p>",
        "id": 209040518,
        "sender_full_name": "Stefan Zabka",
        "timestamp": 1599175383
    },
    {
        "content": "<p>Your play.rust-lang link doesn't go where you think</p>",
        "id": 209045241,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599180274
    },
    {
        "content": "<p>So, at the  end of that section there is the following text:</p>\n<blockquote>\n<p>Implied bounds are not yet completely enforced in rustc, at the moment it only works for outlive requirements, super trait bounds, and bounds on associated types.</p>\n</blockquote>",
        "id": 209045549,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599180647
    },
    {
        "content": "<p>In that example, there could be an implicit bound of <code>K: Hash</code></p>",
        "id": 209045580,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599180685
    },
    {
        "content": "<p>But I'm not 100% sure Chalk does that</p>",
        "id": 209045594,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599180709
    },
    {
        "content": "<p>I don't think you can pass <code>-Z</code> options in the playground</p>",
        "id": 209045663,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599180756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Question.20on.20implied.20bounds/near/209045241\">said</a>:</p>\n<blockquote>\n<p>Your play.rust-lang link doesn't go where you think</p>\n</blockquote>\n<p>Sorry <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;code=use%20std%3A%3Acollections%3A%3AHashSet%3B%0Afn%20create_with_item%3CK%3E(item%3A%20K)%20%20-%3E%20%20HashSet%3CK%3E%7B%0A%20%20%20let%20mut%20set%20%3D%20HashSet%3A%3Anew()%3B%0A%20%20%20%20set.insert(item)%3B%0A%20%20%20%20set%0A%7D\">correct link</a></p>",
        "id": 209076650,
        "sender_full_name": "Stefan Zabka",
        "timestamp": 1599214858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Question.20on.20implied.20bounds/near/209045580\">said</a>:</p>\n<blockquote>\n<p>In that example, there could be an implicit bound of <code>K: Hash</code></p>\n</blockquote>\n<p>Okay, thanks. To me it read as if there was an explicit reason that the return type would be left out for inferring implied bounds and I was wondering what it was.</p>\n<p>So this is basically documenting current behaviour and not the desired state?</p>",
        "id": 209076770,
        "sender_full_name": "Stefan Zabka",
        "timestamp": 1599214950
    },
    {
        "content": "<p>My understanding (of the docs) is that chalk implements implied bounds but rust doesn't yet</p>",
        "id": 209076816,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599215002
    }
]