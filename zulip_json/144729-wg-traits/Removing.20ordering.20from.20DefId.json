[
    {
        "content": "<p>Hello all! <span aria-label=\"hello\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"hello\">:hello:</span></p>\n<p>I'm working on removing ordering traits from <code>DefId</code>. (Part of my current quest, <a href=\"https://github.com/rust-lang/rust/issues/90317\">#90317</a>.)</p>\n<p>This work has taken me into chalk, since chalk expects DefIds to be ordered. (See <a href=\"https://github.com/rust-lang/rust/pull/90749#issuecomment-964699542\">https://github.com/rust-lang/rust/pull/90749#issuecomment-964699542</a>)</p>\n<p>I've made progress using <code>indexmap</code> in chalk, and have been able to remove the Ord trait almost everywhere. (In fact, I may have removed it from places where I didn't need to/shouldn't have!)</p>\n<p>But now I'm hitting a failing test that I don't understand:</p>\n<p><a href=\"https://github.com/rust-lang/chalk/runs/4528345616?check_suite_focus=true#step:6:629\">https://github.com/rust-lang/chalk/runs/4528345616?check_suite_focus=true#step:6:629</a></p>\n<p>I would love if someone here could take a look. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> I'm not sure which of my changes would cause this.</p>",
        "id": 265036876,
        "sender_full_name": "pierwill",
        "timestamp": 1639586265
    },
    {
        "content": "<p>I saw you started that WIP PR</p>",
        "id": 265037095,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586355
    },
    {
        "content": "<p>Let me quickly look at that test</p>",
        "id": 265037111,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586362
    },
    {
        "content": "<p>Thank you!!!</p>",
        "id": 265037132,
        "sender_full_name": "pierwill",
        "timestamp": 1639586372
    },
    {
        "content": "<p>This code especially might be incorrect: <a href=\"https://github.com/rust-lang/chalk/pull/739/files#diff-ba814a8e084488bce444bd626693c6c99786b7be83fc1f0f05c51853e0fb96deL108-L118\">https://github.com/rust-lang/chalk/pull/739/files#diff-ba814a8e084488bce444bd626693c6c99786b7be83fc1f0f05c51853e0fb96deL108-L118</a></p>",
        "id": 265037249,
        "sender_full_name": "pierwill",
        "timestamp": 1639586423
    },
    {
        "content": "<p>Right, so this is basically just saying that <code>dyn Principal + Auto2 + Auto1 + 'a  == dyn Principal + Auto1 + Auto2 + 'a</code></p>",
        "id": 265037303,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586447
    },
    {
        "content": "<p>I might be missing a case where an edge needs to be added...</p>",
        "id": 265037304,
        "sender_full_name": "pierwill",
        "timestamp": 1639586448
    },
    {
        "content": "<p>Not a coherence problem</p>",
        "id": 265037352,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586474
    },
    {
        "content": "<p>I have to admit, I don't speak chalk <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 265037404,
        "sender_full_name": "pierwill",
        "timestamp": 1639586499
    },
    {
        "content": "<p>or traits lol</p>",
        "id": 265037423,
        "sender_full_name": "pierwill",
        "timestamp": 1639586512
    },
    {
        "content": "<p>Somewhere I think we sorted the <code>DefId</code> to compare, but we probably need to compare sets instead</p>",
        "id": 265037426,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586516
    },
    {
        "content": "<p>Here are the <code>.sort</code>s:</p>\n<div class=\"codehilite\"><pre><span></span><code>chalk-integration/src/lowering.rs:450:13:if k.sort != TypeSort::Trait {\ntests/display/util.rs:73:8:ids.sort_by_key(|(raw_id, _)| *raw_id);\ntests/test/mod.rs:25:19:sorted.sort_by_key(|c| format!(&quot;{:?}&quot;, c));\n</code></pre></div>",
        "id": 265037566,
        "sender_full_name": "pierwill",
        "timestamp": 1639586567
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/pull/739/files#diff-a32055208473b24b6db2049c6967f6e381a6bff8e72cd9440c2bfb5c2715d476L567\">https://github.com/rust-lang/chalk/pull/739/files#diff-a32055208473b24b6db2049c6967f6e381a6bff8e72cd9440c2bfb5c2715d476L567</a></p>",
        "id": 265037721,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586634
    },
    {
        "content": "<p>that's the cause</p>",
        "id": 265037767,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586644
    },
    {
        "content": "<p>I don't off the top of my head have a good solution here</p>",
        "id": 265038212,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639586826
    },
    {
        "content": "<p>Ahhhh</p>",
        "id": 265040446,
        "sender_full_name": "pierwill",
        "timestamp": 1639587661
    },
    {
        "content": "<p>Okay thanks. I'll play around with it....</p>",
        "id": 265040466,
        "sender_full_name": "pierwill",
        "timestamp": 1639587670
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/pull/739/files#diff-a32055208473b24b6db2049c6967f6e381a6bff8e72cd9440c2bfb5c2715d476R545\">This</a> (and the related rustc code) should probably use a set instead of a <code>Vec</code> (or a ty::List in the case of rustc)</p>",
        "id": 265043330,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639588806
    },
    {
        "content": "<p>Sorry, which line is that? Github being weird...</p>",
        "id": 265046320,
        "sender_full_name": "pierwill",
        "timestamp": 1639590075
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>impl LowerWithEnv for [QuantifiedInlineBound] {\n    type Lowered = Vec&lt;rust_ir::QuantifiedInlineBound&lt;ChalkIr&gt;&gt;;\n</code></pre></div>\n<p>in <code>lowering..rs</code></p>",
        "id": 265046533,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639590175
    },
    {
        "content": "<p>Weird to get an error like this in the <code>target/</code> dir... what does it mean? </p>\n<div class=\"codehilite\"><pre><span></span><code>âœ—  cargo check\nchalk-solve/src/infer/canonicalize.rs:67:5: warning: field is never read: `max_universe`\nwarning: `chalk-solve` (lib) generated 1 warning\n    Checking chalk-parse v0.76.0-dev.0 (/Users/wpierce/repos/chalk/chalk-parse)\nerror[E0308]: mismatched types\n      --&gt; /Users/wpierce/repos/chalk/target/debug/build/chalk-parse-79de8ed817df80fa/out/parser.rs:106167:28\n       |\n106167 |             where_clauses: w,\n       |                            ^ expected struct `IndexSet`, found struct `Vec`\n       |\n       = note: expected struct `IndexSet&lt;ast::QuantifiedWhereClause&gt;`\n                  found struct `Vec&lt;ast::QuantifiedWhereClause&gt;`\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `chalk-parse` due to previous error\n</code></pre></div>",
        "id": 265049216,
        "sender_full_name": "pierwill",
        "timestamp": 1639591180
    },
    {
        "content": "<p>I know what the error means, actually, it's just not very helpful in the target output!</p>",
        "id": 265049436,
        "sender_full_name": "pierwill",
        "timestamp": 1639591226
    },
    {
        "content": "<p>It's because of <code>parser.lalrpop</code></p>",
        "id": 265049472,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639591241
    },
    {
        "content": "<p>It generates code</p>",
        "id": 265049490,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639591246
    },
    {
        "content": "<p>ah ok</p>",
        "id": 265049506,
        "sender_full_name": "pierwill",
        "timestamp": 1639591250
    },
    {
        "content": "<p>ah might have found the problem...</p>",
        "id": 265049581,
        "sender_full_name": "pierwill",
        "timestamp": 1639591277
    },
    {
        "content": "<p>Wow this has become a total mess lol</p>",
        "id": 265076488,
        "sender_full_name": "pierwill",
        "timestamp": 1639603214
    },
    {
        "content": "<p>That's okay, that's what reviews are for</p>",
        "id": 265078123,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604015
    },
    {
        "content": "<p>Seems like no matter what, I'm blocked because of these missing traits for IndexSet:</p>\n<p>example output</p>\n<div class=\"codehilite\"><pre><span></span><code>chalk-solve/src/rust_ir.rs:633:5: error[E0277]: the trait bound `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;: Hash` is not satisfied\nchalk-solve/src/rust_ir.rs:626:45: error[E0277]: the trait bound `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;: chalk_ir::fold::Fold&lt;I&gt;` is not satisfied\nchalk-solve/src/rust_ir.rs:626:64: error[E0277]: the trait bound `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;: chalk_ir::visit::Visit&lt;_&gt;` is not satisfied\n</code></pre></div>",
        "id": 265078356,
        "sender_full_name": "pierwill",
        "timestamp": 1639604119
    },
    {
        "content": "<p>Can you give the full error?</p>",
        "id": 265078515,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604187
    },
    {
        "content": "<p>i've got so many! one sec</p>",
        "id": 265078536,
        "sender_full_name": "pierwill",
        "timestamp": 1639604208
    },
    {
        "content": "<p>maybe it's more useful to see the error on my current commit: </p>\n<div class=\"codehilite\"><pre><span></span><code>    Checking chalk-parse v0.76.0-dev.0 (/Users/wpierce/repos/chalk/chalk-parse)\nerror[E0308]: mismatched types\n      --&gt; /Users/wpierce/repos/chalk/target/debug/build/chalk-parse-79de8ed817df80fa/out/parser.rs:107409:5\n       |\n107407 | ) -&gt; IndexSet&lt;QuantifiedWhereClause&gt;\n       |      ------------------------------- expected `IndexSet&lt;ast::QuantifiedWhereClause&gt;` because of return type\n107408 | {\n107409 |     __0\n       |     ^^^ expected struct `IndexSet`, found struct `Vec`\n       |\n       = note: expected struct `IndexSet&lt;ast::QuantifiedWhereClause&gt;`\n                  found struct `Vec&lt;ast::QuantifiedWhereClause&gt;`\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `chalk-parse` due to previous error\n</code></pre></div>",
        "id": 265078757,
        "sender_full_name": "pierwill",
        "timestamp": 1639604321
    },
    {
        "content": "<p>There are plenty of Vec where clauses that could be problems:</p>\n<div class=\"codehilite\"><pre><span></span><code>âœ—  rg &quot;Vec&lt;Quant&quot;\nchalk-integration/src/interner.rs:69:43:type InternedQuantifiedWhereClauses = Vec&lt;QuantifiedWhereClause&lt;ChalkIr&gt;&gt;;\nchalk-parse/src/ast.rs:180:17:pub bounds: Vec&lt;QuantifiedInlineBound&gt;,\nchalk-parse/src/ast.rs:189:17:pub bounds: Vec&lt;QuantifiedInlineBound&gt;,\nchalk-parse/src/ast.rs:294:17:bounds: Vec&lt;QuantifiedInlineBound&gt;,\nchalk-solve/src/display/bounds.rs:76:39:impl&lt;I: Interner&gt; RenderAsRust&lt;I&gt; for Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt; {\nchalk-solve/src/rust_ir.rs:58:24:pub where_clauses: Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:100:24:pub where_clauses: Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:197:24:pub where_clauses: Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:285:45:pub fn where_clauses(&amp;self) -&gt; Binders&lt;&amp;Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt; {\nchalk-solve/src/rust_ir.rs:298:24:pub where_clauses: Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:371:66:fn into_where_clauses(&amp;self, interner: I, self_ty: Ty&lt;I&gt;) -&gt; Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt; {\nchalk-solve/src/rust_ir.rs:510:17:pub bounds: Vec&lt;QuantifiedInlineBound&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:513:24:pub where_clauses: Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;,\nchalk-solve/src/rust_ir.rs:525:50:pub fn bounds_on_self(&amp;self, interner: I) -&gt; Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt; {\nchalk-solve/src/rust_ir.rs:628:25:pub bounds: Binders&lt;Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt;,\nchalk-solve/src/rust_ir.rs:632:32:pub where_clauses: Binders&lt;Vec&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt;,\n</code></pre></div>",
        "id": 265078814,
        "sender_full_name": "pierwill",
        "timestamp": 1639604356
    },
    {
        "content": "<p>But inevitably, types like <code>Binders&lt;&amp;IndexSet&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt;</code> will complain about <code>Hash</code>, <code>Fold</code>, <code>HasInterner</code>, etc...</p>",
        "id": 265078936,
        "sender_full_name": "pierwill",
        "timestamp": 1639604410
    },
    {
        "content": "<p>As in:</p>",
        "id": 265078983,
        "sender_full_name": "pierwill",
        "timestamp": 1639604442
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>    Checking chalk-parse v0.76.0-dev.0 (/Users/wpierce/repos/chalk/chalk-parse)\nerror[E0277]: the trait bound `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;: HasInterner` is not satisfied\n    --&gt; chalk-solve/src/rust_ir.rs:286:36\n     |\n286  |     pub fn where_clauses(&amp;self) -&gt; Binders&lt;&amp;IndexSet&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt; {\n     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HasInterner` is not implemented for `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;`\n     |\n     = note: required because of the requirements on the impl of `HasInterner` for `&amp;IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;`\nnote: required by a bound in `chalk_ir::Binders`\n    --&gt; /Users/wpierce/repos/chalk/chalk-ir/src/lib.rs:2063:23\n     |\n2063 | pub struct Binders&lt;T: HasInterner&gt; {\n     |                       ^^^^^^^^^^^ required by this bound in `chalk_ir::Binders`\n\nerror[E0277]: the trait bound `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;: HasInterner` is not satisfied\n    --&gt; chalk-solve/src/rust_ir.rs:633:17\n     |\n633  |     pub bounds: Binders&lt;IndexSet&lt;QuantifiedWhereClause&lt;I&gt;&gt;&gt;,\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HasInterner` is not implemented for `IndexSet&lt;chalk_ir::Binders&lt;chalk_ir::WhereClause&lt;I&gt;&gt;&gt;`\n     |\nnote: required by a bound in `chalk_ir::Binders`\n    --&gt; /Users/wpierce/repos/chalk/chalk-ir/src/lib.rs:2063:23\n     |\n2063 | pub struct Binders&lt;T: HasInterner&gt; {\n     |                       ^^^^^^^^^^^ required by this bound in `chalk_ir::Binders`\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `chalk-solve` due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0308]: mismatched types\n      --&gt; /Users/wpierce/repos/chalk/target/debug/build/chalk-parse-79de8ed817df80fa/out/parser.rs:107409:5\n       |\n107407 | ) -&gt; IndexSet&lt;QuantifiedWhereClause&gt;\n       |      ------------------------------- expected `IndexSet&lt;ast::QuantifiedWhereClause&gt;` because of return type\n107408 | {\n107409 |     __0\n       |     ^^^ expected struct `IndexSet`, found struct `Vec`\n       |\n       = note: expected struct `IndexSet&lt;ast::QuantifiedWhereClause&gt;`\n                  found struct `Vec&lt;ast::QuantifiedWhereClause&gt;`\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: build failed\n</code></pre></div>",
        "id": 265079046,
        "sender_full_name": "pierwill",
        "timestamp": 1639604485
    },
    {
        "content": "<p>looking</p>",
        "id": 265079116,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604523
    },
    {
        "content": "<p>Can you upload <code>/Users/wpierce/repos/chalk/target/debug/build/chalk-parse-79de8ed817df80fa/out/parser.rs</code> somewhere?</p>",
        "id": 265079508,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604643
    },
    {
        "content": "<p>sure one sec</p>",
        "id": 265079584,
        "sender_full_name": "pierwill",
        "timestamp": 1639604658
    },
    {
        "content": "<p>well, I guess you're getting that error locally too, right</p>",
        "id": 265079618,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604665
    },
    {
        "content": "<p>yep</p>",
        "id": 265079665,
        "sender_full_name": "pierwill",
        "timestamp": 1639604674
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/TP6zUzQdqMwcJnw1-d6b6Q3b/parser.rs\">parser.rs</a></p>",
        "id": 265079786,
        "sender_full_name": "pierwill",
        "timestamp": 1639604699
    },
    {
        "content": "<p>It's because of <a href=\"https://github.com/rust-lang/chalk/blob/a8525b6514cb3a00f3bed0fa8cc4833b6915aa2d/chalk-parse/src/parser.lalrpop#L669\">https://github.com/rust-lang/chalk/blob/a8525b6514cb3a00f3bed0fa8cc4833b6915aa2d/chalk-parse/src/parser.lalrpop#L669</a></p>",
        "id": 265080377,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604899
    },
    {
        "content": "<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 265080426,
        "sender_full_name": "pierwill",
        "timestamp": 1639604918
    },
    {
        "content": "<p>And here: <a href=\"https://github.com/rust-lang/chalk/blob/a8525b6514cb3a00f3bed0fa8cc4833b6915aa2d/chalk-parse/src/parser.lalrpop#L603\">https://github.com/rust-lang/chalk/blob/a8525b6514cb3a00f3bed0fa8cc4833b6915aa2d/chalk-parse/src/parser.lalrpop#L603</a></p>",
        "id": 265080484,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604951
    },
    {
        "content": "<p>I recommend not changing anything in parser.lalrpop, and only do the Vec -&gt; IndexSet conversion during lowering</p>",
        "id": 265080538,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639604985
    },
    {
        "content": "<p>Hm.. okay I'll try that</p>",
        "id": 265080649,
        "sender_full_name": "pierwill",
        "timestamp": 1639605015
    },
    {
        "content": "<blockquote>\n<p>only do the Vec -&gt; IndexSet conversion during lowering</p>\n</blockquote>\n<p>As in, covert at runtime? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 265082677,
        "sender_full_name": "pierwill",
        "timestamp": 1639605951
    },
    {
        "content": "<p>well...I mean it's all at runtime</p>",
        "id": 265082830,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639606025
    },
    {
        "content": "<p>ah okay. you're saying to limit my changes to <code>chalk-integration/src/lowering/</code>?</p>",
        "id": 265082896,
        "sender_full_name": "pierwill",
        "timestamp": 1639606072
    },
    {
        "content": "<p>yes</p>",
        "id": 265082962,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639606095
    },
    {
        "content": "<p>trying to get an exact line number</p>",
        "id": 265082966,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639606102
    },
    {
        "content": "<p>so i'll need to do things like this huh:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code>                         let binders = empty_env.in_binders(variable_kinds, |env| {\n<span class=\"gi\">+                            let v1 = assoc_ty_defn.bounds.lower(&amp;env);</span>\n<span class=\"gi\">+                            let v2 = assoc_ty_defn.where_clauses.lower(&amp;env);</span>\n                             Ok(rust_ir::AssociatedTyDatumBound {\n<span class=\"gd\">-                                bounds: assoc_ty_defn.bounds.lower(&amp;env)?,</span>\n<span class=\"gd\">-                                where_clauses: assoc_ty_defn.where_clauses.lower(&amp;env)?,</span>\n<span class=\"gi\">+                                bounds: IndexSet::from(v1),</span>\n<span class=\"gi\">+                                where_clauses: IndexSet::from(v2),</span>\n</code></pre></div>",
        "id": 265082982,
        "sender_full_name": "pierwill",
        "timestamp": 1639606115
    },
    {
        "content": "<p>Yes</p>",
        "id": 265083049,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639606164
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 265083071,
        "sender_full_name": "pierwill",
        "timestamp": 1639606177
    },
    {
        "content": "<p>I though this would do it, but now another test is failing... <a href=\"https://github.com/rust-lang/chalk/pull/739\">https://github.com/rust-lang/chalk/pull/739</a></p>",
        "id": 265088677,
        "sender_full_name": "pierwill",
        "timestamp": 1639609286
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>failures:\n\n---- lowering::duplicate_parameters stdout ----\nthread &#39;lowering::duplicate_parameters&#39; panicked at &#39;called `Result::unwrap_err()` on an `Ok` value: Program { adt_ids: {}, adt_kinds: {}, adt_variances: {}, fn_def_ids: {}, fn_def_kinds: {}, fn_def_variances: {}, closure_ids: {}, closure_upvars: {}, closure_kinds: {}, generator_ids: {}, generator_kinds: {}, generator_data: {}, generator_witness_data: {}, trait_ids: {Atom(&#39;Foo&#39; type=inline): TraitId(#0)}, trait_kinds: {TraitId(#0): TypeKind { sort: Trait, name: Atom(&#39;Foo&#39; type=inline), binders: for[type, type] Unit }}, adt_data: {}, adt_reprs: {}, fn_def_data: {}, closure_inputs_and_output: {}, closure_closure_kind: {}, impl_data: {}, associated_ty_values: {}, opaque_ty_ids: {}, opaque_ty_kinds: {}, opaque_ty_data: {}, hidden_opaque_types: {}, trait_data: {TraitId(#0): TraitDatum { id: TraitId(#0), binders: for[type, type] TraitDatumBound { where_clauses: [] }, flags: TraitFlags { auto: false, marker: false, upstream: false, fundamental: false, non_enumerable: false, coinductive: false }, associated_ty_ids: [], well_known: None }}, well_known_traits: {}, associated_ty_data: {}, custom_clauses: [], object_safe_traits: {}, foreign_ty_ids: {} }&#39;, tests/lowering/mod.rs:400:5\n\n---- test::unsize::dyn_to_dyn_unsizing stdout ----\nprogram {\n    #[lang(unsize)] trait Unsize &lt; T &gt; {} #[object_safe] trait Principal {}\n    #[object_safe] trait OtherPrincipal {} #[object_safe] trait\n    GenericPrincipal &lt; T &gt; { type Item ; } #[auto] #[object_safe] trait Auto1\n    {} #[auto] #[object_safe] trait Auto2 {} #[auto] #[object_safe] trait\n    Auto3 {}\n}\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { forall &lt; &#39;b &gt; { dyn Principal + &#39;a : Unsize &lt; dyn Principal + &#39;b &gt; } }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { forall &lt; &#39;b &gt; { dyn Principal + &#39;a : Unsize &lt; dyn Principal + &#39;b &gt; } }\n}\nusing solver: Recursive { overflow_depth: 100, caching_enabled: true, max_size: 30 }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    {\n        forall &lt; &#39;b &gt;\n        {\n            dyn Principal + Auto1 + Auto2 + Auto3 + &#39;a : Unsize &lt; dyn\n            Principal + Auto1 + Auto2 + Auto3 + &#39;b &gt;\n        }\n    }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    {\n        forall &lt; &#39;b &gt;\n        {\n            dyn Principal + Auto1 + Auto2 + Auto3 + &#39;a : Unsize &lt; dyn\n            Principal + Auto1 + Auto2 + Auto3 + &#39;b &gt;\n        }\n    }\n}\nusing solver: Recursive { overflow_depth: 100, caching_enabled: true, max_size: 30 }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!2_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    {\n        dyn Principal + Auto1 + Auto2 + &#39;a : Unsize &lt; dyn Principal + Auto1 +\n        &#39;a &gt;\n    }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    {\n        dyn Principal + Auto1 + Auto2 + &#39;a : Unsize &lt; dyn Principal + Auto1 +\n        &#39;a &gt;\n    }\n}\nusing solver: Recursive { overflow_depth: 100, caching_enabled: true, max_size: 30 }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { dyn Auto1 + Principal + &#39;a : Unsize &lt; dyn Auto1 + Principal + &#39;a &gt; }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { dyn Auto1 + Principal + &#39;a : Unsize &lt; dyn Auto1 + Principal + &#39;a &gt; }\n}\nusing solver: Recursive { overflow_depth: 100, caching_enabled: true, max_size: 30 }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { dyn Principal + Auto1 + &#39;a : Unsize &lt; dyn Auto1 + Principal + &#39;a &gt; }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    { dyn Principal + Auto1 + &#39;a : Unsize &lt; dyn Auto1 + Principal + &#39;a &gt; }\n}\nusing solver: Recursive { overflow_depth: 100, caching_enabled: true, max_size: 30 }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\n----------------------------------------------------------------------\ngoal {\n    forall &lt; &#39;a &gt;\n    {\n        dyn Principal + Auto2 + Auto1 + &#39;a : Unsize &lt; dyn Principal + Auto1 +\n        Auto2 + &#39;a &gt;\n    }\n}\nusing solver: SLG { max_size: 10, expected_answers: None }\nexpected:\nUnique; substitution [], lifetime constraints [InEnvironment { environment: Env([]), goal: &#39;!1_0: &#39;!1_0 }]\nactual:\nNo possible solution\nthread &#39;test::unsize::dyn_to_dyn_unsizing&#39; panicked at &#39;assertion failed: `(left == right)`\n\nDiff &lt; left / right &gt; :\n&lt;&quot;Unique;substitution[],lifetimeconstraints[InEnvironment{environment:Env([]),goal:&#39;!1_0:&#39;!1_0}]&quot;\n&gt;&quot;Nopossiblesolution&quot;\n\n&#39;, tests/test_util.rs:52:9\n\n\nfailures:\n    lowering::duplicate_parameters\n    test::unsize::dyn_to_dyn_unsizing\n\ntest result: FAILED. 501 passed; 2 failed; 7 ignored; 0 measured; 0 filtered out; finished in 16.94s\n\nerror: test failed, to rerun pass &#39;--test lib&#39;\n</code></pre></div>",
        "id": 265088717,
        "sender_full_name": "pierwill",
        "timestamp": 1639609310
    },
    {
        "content": "<p>looking</p>",
        "id": 265092597,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639611567
    },
    {
        "content": "<p>wait CI fails with</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `chalk_parse::ast::QuantifiedInlineBound: Hash` is not satisfied\n   --&gt; chalk-integration/src/lowering.rs:580:36\n    |\n580 |                 auto_traits.insert((b, id));\n    |                             ------ ^^^^^^^ the trait `Hash` is not implemented for `chalk_parse::ast::QuantifiedInlineBound`\n    |                             |\n    |                             required by a bound introduced by this call\n    |\n    = note: required because of the requirements on the impl of `Hash` for `&amp;chalk_parse::ast::QuantifiedInlineBound`\n    = note: 1 redundant requirement hidden\n    = note: required because of the requirements on the impl of `Hash` for `(&amp;chalk_parse::ast::QuantifiedInlineBound, TraitId&lt;ChalkIr&gt;)`\n\nerror[E0277]: the trait bound `chalk_parse::ast::QuantifiedInlineBound: Hash` is not satisfied\n   --&gt; chalk-integration/src/lowering.rs:582:39\n    |\n582 |                 regular_traits.insert((b, id));\n    |                                ------ ^^^^^^^ the trait `Hash` is not implemented for `chalk_parse::ast::QuantifiedInlineBound`\n    |                                |\n    |                                required by a bound introduced by this call\n    |\n    = note: required because of the requirements on the impl of `Hash` for `&amp;chalk_parse::ast::QuantifiedInlineBound`\n    = note: 1 redundant requirement hidden\n    = note: required because of the requirements on the impl of `Hash` for `(&amp;chalk_parse::ast::QuantifiedInlineBound, TraitId&lt;ChalkIr&gt;)`\n</code></pre></div>",
        "id": 265092677,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639611608
    },
    {
        "content": "<p>I think I fixed the original problem we talked about, here: <a href=\"https://github.com/pierwill/chalk/blob/14f731920abbff5f4c25f40f3b37983743fbdef5/chalk-integration/src/lowering.rs#L576-L592\">https://github.com/pierwill/chalk/blob/14f731920abbff5f4c25f40f3b37983743fbdef5/chalk-integration/src/lowering.rs#L576-L592</a></p>",
        "id": 265093652,
        "sender_full_name": "pierwill",
        "timestamp": 1639612233
    },
    {
        "content": "<p>But tests still fail</p>",
        "id": 265093698,
        "sender_full_name": "pierwill",
        "timestamp": 1639612264
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/runs/4541259589?check_suite_focus=true#step:6:590\">https://github.com/rust-lang/chalk/runs/4541259589?check_suite_focus=true#step:6:590</a></p>",
        "id": 265093724,
        "sender_full_name": "pierwill",
        "timestamp": 1639612282
    },
    {
        "content": "<p>hmm</p>",
        "id": 265094078,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639612484
    },
    {
        "content": "<p>I'll have to check later</p>",
        "id": 265094090,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639612492
    },
    {
        "content": "<p>Btw <span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span> <a href=\"https://github.com/rust-lang/chalk/blob/977b0a5e3aec60cc70c1ef3783b68ad506e57c04/chalk-solve/src/clauses/builtin_traits/unsize.rs#L210\">this</a> is probably where that test is having problems, for whatever reason</p>",
        "id": 265111071,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639628606
    },
    {
        "content": "<p>I'm just a tad confused because you don't modify that in your PR...</p>",
        "id": 265111149,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639628704
    }
]