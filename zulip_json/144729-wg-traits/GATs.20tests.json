[
    {
        "content": "<p>So just adding tests like <a href=\"https://github.com/rust-lang/rust/pull/84379\">https://github.com/rust-lang/rust/pull/84379</a> is actually helpful?</p>",
        "id": 235422308,
        "sender_full_name": "marmeladema",
        "timestamp": 1618955529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> it is</p>",
        "id": 235422969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618955949
    },
    {
        "content": "<p>however, that is not passing :)</p>",
        "id": 235422976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618955960
    },
    {
        "content": "<p>it probably just needs a <code>fn main() { }</code></p>",
        "id": 235422990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618955971
    },
    {
        "content": "<p>oh right! I thought check-pass would accept it as-is</p>",
        "id": 235423259,
        "sender_full_name": "marmeladema",
        "timestamp": 1618956103
    },
    {
        "content": "<p>Should be fixed now</p>",
        "id": 235423385,
        "sender_full_name": "marmeladema",
        "timestamp": 1618956176
    },
    {
        "content": "<p>Hum I tried adding a test for <a href=\"https://github.com/rust-lang/rust/issues/79636\">https://github.com/rust-lang/rust/issues/79636</a> but I end up with a <em>very</em> weird error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0107]: missing generics for associated type `Monad::Wrapped`\n --&gt; src/test/ui/generic-associated-types/issue-79636-1.rs:6:10\n  |\n6 |     type Wrapped&lt;B&gt;;\n  |          ^^^^^^^ expected 1 type argument\n  |\nnote: associated type defined here, with 1 type parameter: `B`\n --&gt; src/test/ui/generic-associated-types/issue-79636-1.rs:6:10\n  |\n6 |     type Wrapped&lt;B&gt;;\n  |          ^^^^^^^ -\nhelp: use angle brackets to add missing type argument\n  |\n6 |     type Wrapped&lt;B&gt;&lt;B&gt;;\n  |                 ^^^\n\nerror: aborting due to previous error\n</code></pre></div>",
        "id": 235424437,
        "sender_full_name": "marmeladema",
        "timestamp": 1618956759
    },
    {
        "content": "<p>That'll be fixed in the diagnostics PR</p>",
        "id": 235424502,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618956817
    },
    {
        "content": "<p>(changed topics)</p>",
        "id": 235424881,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957030
    },
    {
        "content": "<p>Ok, I left a note on the issue</p>",
        "id": 235424897,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957041
    },
    {
        "content": "<p>Thank you, I don't know how to do this^^</p>",
        "id": 235424913,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957055
    },
    {
        "content": "<p>Don't worry about leaving note on issues</p>",
        "id": 235424930,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957067
    },
    {
        "content": "<p>Just add the tests as-is</p>",
        "id": 235424941,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957074
    },
    {
        "content": "<p>The diagnostics will get fixed when the other issue lands and is orthogonal</p>",
        "id": 235425005,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957093
    },
    {
        "content": "<p>The bug that causes the issue is fixed</p>",
        "id": 235425026,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957100
    },
    {
        "content": "<p>oh ok</p>",
        "id": 235425064,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957132
    },
    {
        "content": "<p>so I that case I add a test the check the error is properly emited with a stderr file?</p>",
        "id": 235425091,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957151
    },
    {
        "content": "<p>and when the diagnostic is fixed, it'll get updated?</p>",
        "id": 235425101,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957165
    },
    {
        "content": "<p>yes, just the tests and <code>--bless</code></p>",
        "id": 235425140,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957200
    },
    {
        "content": "<p>The wrong stderr files will get updated with the other PR</p>",
        "id": 235425193,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957212
    },
    {
        "content": "<p>ok</p>",
        "id": 235425203,
        "sender_full_name": "marmeladema",
        "timestamp": 1618957220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I'm wondering if it's also worth adding all the tests that were directly caused by not handling GATs in trait paths to a subdirectory specifically for that</p>",
        "id": 235425950,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957685
    },
    {
        "content": "<p>I'm gonna guess probably not</p>",
        "id": 235425966,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957694
    },
    {
        "content": "<p>A lot of these tests essentially just cover the same issue in different ways and it would be nice to somehow make that more clear</p>",
        "id": 235426001,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618957737
    },
    {
        "content": "<p>Ok I've added a bunch of tests for 5 issues</p>",
        "id": 235429100,
        "sender_full_name": "marmeladema",
        "timestamp": 1618959631
    },
    {
        "content": "<p>What about <a href=\"https://github.com/rust-lang/rust/issues/71176\">#71176</a>?</p>",
        "id": 235429179,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618959669
    },
    {
        "content": "<p>Oupsie</p>",
        "id": 235429235,
        "sender_full_name": "marmeladema",
        "timestamp": 1618959698
    },
    {
        "content": "<p>I missed it</p>",
        "id": 235429247,
        "sender_full_name": "marmeladema",
        "timestamp": 1618959706
    },
    {
        "content": "<p>:)</p>",
        "id": 235429496,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618959818
    },
    {
        "content": "<p>Also can you remove the <code>#![allow(incomplete_features)]</code>?</p>",
        "id": 235429565,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618959848
    },
    {
        "content": "<p>But the tests fail without it. By what should I replace it?</p>",
        "id": 235429780,
        "sender_full_name": "marmeladema",
        "timestamp": 1618959980
    },
    {
        "content": "<p>I check for the error explicitly?</p>",
        "id": 235429820,
        "sender_full_name": "marmeladema",
        "timestamp": 1618960022
    },
    {
        "content": "<p>Eh, nevermind. I'll just be sure to double check that when we remove that warning</p>",
        "id": 235429836,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618960029
    },
    {
        "content": "<p>All done now</p>",
        "id": 235430062,
        "sender_full_name": "marmeladema",
        "timestamp": 1618960179
    },
    {
        "content": "<p>I think I am going to add tests for  F-type_alias_impl_trait issues too</p>",
        "id": 236165398,
        "sender_full_name": "marmeladema",
        "timestamp": 1619440606
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aissue+is%3Aopen+label%3AE-needs-test+label%3AF-type_alias_impl_trait\">https://github.com/rust-lang/rust/issues?q=is%3Aissue+is%3Aopen+label%3AE-needs-test+label%3AF-type_alias_impl_trait</a></p>",
        "id": 236165425,
        "sender_full_name": "marmeladema",
        "timestamp": 1619440620
    }
]