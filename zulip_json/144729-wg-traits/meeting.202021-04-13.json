[
    {
        "content": "<p>Howdy <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 234390468,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618343788
    },
    {
        "content": "<p>Meeting in 4ish minutes</p>",
        "id": 234390487,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618343794
    },
    {
        "content": "<p>Okay meeting time <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 234391264,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344064
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 234391292,
        "sender_full_name": "detrumi",
        "timestamp": 1618344071
    },
    {
        "content": "<p>howdy</p>",
        "id": 234391344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344092
    },
    {
        "content": "<p>How is everyone?</p>",
        "id": 234391458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344124
    },
    {
        "content": "<p>Any announcements?</p>",
        "id": 234391555,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344172
    },
    {
        "content": "<p>doing reasonably well</p>",
        "id": 234391595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344177
    },
    {
        "content": "<p>tomorrow <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and I are supposed to talk about their PR</p>",
        "id": 234391641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344184
    },
    {
        "content": "<p>in the \"office hour\" time</p>",
        "id": 234391674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344190
    },
    {
        "content": "<p>Great, but I think I've seen enough HList/Combine/Product traits for the day</p>",
        "id": 234391710,
        "sender_full_name": "detrumi",
        "timestamp": 1618344200
    },
    {
        "content": "<p>Which PR?</p>",
        "id": 234391732,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344214
    },
    {
        "content": "<p>No PR yet, but the opaque type problem from RA</p>",
        "id": 234391765,
        "sender_full_name": "detrumi",
        "timestamp": 1618344235
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/700\">chalk#700</a></p>",
        "id": 234391779,
        "sender_full_name": "detrumi",
        "timestamp": 1618344242
    },
    {
        "content": "<p>Yeah that looked like a doosy</p>",
        "id": 234391866,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344271
    },
    {
        "content": "<p>I'll look into it some more later, I think somewhere the opaque type bound isn't being propagated correctly</p>",
        "id": 234391980,
        "sender_full_name": "detrumi",
        "timestamp": 1618344317
    },
    {
        "content": "<p>At some point <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> too we should discuss <a href=\"https://github.com/rust-lang/rust/issues/77325\">#77325</a></p>",
        "id": 234392004,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344325
    },
    {
        "content": "<p>ah yes</p>",
        "id": 234392039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344342
    },
    {
        "content": "<p>I saw you took on reviewer load for that</p>",
        "id": 234392049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344346
    },
    {
        "content": "<p>Yeah, it's been there for a bit and I can either just try to dig through the code myself or spend some time with you going through it</p>",
        "id": 234392153,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344388
    },
    {
        "content": "<p>I/we should make a list of PRs/things to discuss</p>",
        "id": 234392181,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344406
    },
    {
        "content": "<p>I have a list that keeps growing</p>",
        "id": 234392211,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344414
    },
    {
        "content": "<p>that makes sense</p>",
        "id": 234392269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344446
    },
    {
        "content": "<p>I'm curious <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> if you explored the region change we had talked about (with binder kinds)</p>",
        "id": 234392293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344458
    },
    {
        "content": "<p>From yesterday morning? I've been hacking on it for the last half hour or so</p>",
        "id": 234392371,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344485
    },
    {
        "content": "<p>Looks like this will work</p>",
        "id": 234392410,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344499
    },
    {
        "content": "<p>do we have plans for today?</p>",
        "id": 234392416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344499
    },
    {
        "content": "<p>I'd be interested to talk a bit more about type library</p>",
        "id": 234392444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344505
    },
    {
        "content": "<p>Well</p>",
        "id": 234392455,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344510
    },
    {
        "content": "<p>I was wondering if we should briefly summarize/discuss current state of GATs</p>",
        "id": 234392482,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344524
    },
    {
        "content": "<p>It's something I think we can really push</p>",
        "id": 234392501,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344537
    },
    {
        "content": "<p>With the exception of two things</p>",
        "id": 234392511,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344544
    },
    {
        "content": "<p>1) GATs in trait objects</p>",
        "id": 234392524,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344550
    },
    {
        "content": "<p>Yes, that was also a bit on my mind-- I want to push impl trait over the finish line</p>",
        "id": 234392532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344555
    },
    {
        "content": "<p>2) Diagnostics (PR open)</p>",
        "id": 234392536,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344557
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is out now for parental leave</p>",
        "id": 234392541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344559
    },
    {
        "content": "<p>The diagnostics PR looks nearly done. If the PR author can't pick it back up, I might just do that</p>",
        "id": 234392664,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344611
    },
    {
        "content": "<p>link to diagnostics PR?</p>",
        "id": 234392686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344619
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/82272\">#82272</a></p>",
        "id": 234392737,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344649
    },
    {
        "content": "<p>ah, k</p>",
        "id": 234392749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344661
    },
    {
        "content": "<p>I forget, is that <span class=\"user-mention\" data-user-id=\"328097\">@BN</span>?</p>",
        "id": 234392793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344684
    },
    {
        "content": "<p>yes</p>",
        "id": 234392975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-13/near/234392524\">said</a>:</p>\n<blockquote>\n<p>1) GATs in trait objects</p>\n</blockquote>\n<p>remind me about this</p>",
        "id": 234393034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344804
    },
    {
        "content": "<p>For trait objects with GATs, the primary FIXME I think is <a href=\"https://github.com/rust-lang/rust/blob/5c1304205b7bc53a1e9f48cf286a60438351c1ab/compiler/rustc_trait_selection/src/traits/select/confirmation.rs#L464\">here</a></p>",
        "id": 234393043,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344807
    },
    {
        "content": "<p>I think maybe <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> was investigating?</p>",
        "id": 234393050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344809
    },
    {
        "content": "<p>Yes, but I've not been very active recently.</p>",
        "id": 234393085,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1618344836
    },
    {
        "content": "<p>Yeah, they said they were going to after some NLL work I think? But hasn't gotten to it</p>",
        "id": 234393087,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344837
    },
    {
        "content": "<p>This is as far as I got: <a href=\"https://github.com/jackh726/rust/commit/fc45318cc1f348ab82317a652ce40da752d83fe0\">https://github.com/jackh726/rust/commit/fc45318cc1f348ab82317a652ce40da752d83fe0</a></p>",
        "id": 234393171,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344864
    },
    {
        "content": "<p>so</p>",
        "id": 234393209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344881
    },
    {
        "content": "<p>(I had to stop playing around with it so thing are commented out)</p>",
        "id": 234393226,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344892
    },
    {
        "content": "<p>I am wondering about making traits with GATs be \"non-dyn-safe\"</p>",
        "id": 234393273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344912
    },
    {
        "content": "<p>I feel like there are some UI questions we have to address</p>",
        "id": 234393298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618344923
    },
    {
        "content": "<p>Ah yeah, this also led me down the road of \"what are the WF rules around dyn types\"</p>",
        "id": 234393337,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618344944
    },
    {
        "content": "<p>Hey, sorry for not having fixed the conflicts in the diagnostics pr yet. I can do that this week.</p>",
        "id": 234393541,
        "sender_full_name": "BN",
        "timestamp": 1618345036
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-13/near/234393337\">said</a>:</p>\n<blockquote>\n<p>Ah yeah, this also led me down the road of \"what are the WF rules around dyn types\"</p>\n</blockquote>\n<p>heh yes</p>",
        "id": 234393570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345051
    },
    {
        "content": "<p>I'm sort of hoping to sidestep some of these things</p>",
        "id": 234393580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345055
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-13/near/234393171\">said</a>:</p>\n<blockquote>\n<p>This is as far as I got: <a href=\"https://github.com/jackh726/rust/commit/fc45318cc1f348ab82317a652ce40da752d83fe0\">https://github.com/jackh726/rust/commit/fc45318cc1f348ab82317a652ce40da752d83fe0</a></p>\n</blockquote>\n<p>Specifically, I tried using a placeholder for the <code>'a</code> (in the added test), but that generates a <code>Self: !0</code> obligation, and then that propagates out of the current obligation</p>",
        "id": 234393583,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345059
    },
    {
        "content": "<p>(That's also probably not the right way to do it, but I'm not sure exactly)</p>",
        "id": 234393739,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345120
    },
    {
        "content": "<p>But I was basically thinking that once the diagnostics PR lands and we decide what to do for trait objects (and do implementation work if needed), we remove the \"incomplete feature\" warning and start to get people to test hard</p>",
        "id": 234393839,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345182
    },
    {
        "content": "<p>hmm</p>",
        "id": 234393936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345211
    },
    {
        "content": "<p>seems reasonable</p>",
        "id": 234393943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345215
    },
    {
        "content": "<p>what do you think about making them not dyn safe</p>",
        "id": 234393960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345223
    },
    {
        "content": "<p>is there a backwards compat concern there</p>",
        "id": 234393977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345226
    },
    {
        "content": "<p>I can't think of one</p>",
        "id": 234394009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345239
    },
    {
        "content": "<p>I don't think there is</p>",
        "id": 234394015,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345243
    },
    {
        "content": "<p>Okay, so the implementation work there is just to change the <code>span_fatal</code> into a proper error</p>",
        "id": 234394125,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345284
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-13/near/234394125\">said</a>:</p>\n<blockquote>\n<p>Okay, so the implementation work there is just to change the <code>span_fatal</code> into a proper error</p>\n</blockquote>\n<p>what span-fatal?</p>",
        "id": 234394158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345298
    },
    {
        "content": "<p><em>oh</em></p>",
        "id": 234394179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345311
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">               </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">sess</span><span class=\"p\">.</span><span class=\"n\">span_fatal</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">obligation</span><span class=\"p\">.</span><span class=\"n\">cause</span><span class=\"p\">.</span><span class=\"n\">span</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"s\">\"generic associated types in trait objects are not supported yet\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 234394183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345314
    },
    {
        "content": "<p>that one</p>",
        "id": 234394194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345322
    },
    {
        "content": "<p>yeah</p>",
        "id": 234394236,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345328
    },
    {
        "content": "<p>without the duplicated lines :P</p>",
        "id": 234394255,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345336
    },
    {
        "content": "<p>Okay, if that's what we want to do, then I will do that and make a PR</p>",
        "id": 234394317,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345372
    },
    {
        "content": "<p>well, I think that's a good step</p>",
        "id": 234394333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345380
    },
    {
        "content": "<p>i'm trying to thnk how to capture this whole plan</p>",
        "id": 234394371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345400
    },
    {
        "content": "<p>have to pull up those hackmds we had</p>",
        "id": 234394385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345412
    },
    {
        "content": "<p>Turns out that object safe GATs are hard to work with anyways</p>",
        "id": 234394387,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345412
    },
    {
        "content": "<p>But, are we okay with moving to stablization with trait objects with GATs being disallowed?</p>",
        "id": 234394509,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345454
    },
    {
        "content": "<p>I don't see why not</p>",
        "id": 234394633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345510
    },
    {
        "content": "<p>Agreed</p>",
        "id": 234394641,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345513
    },
    {
        "content": "<p>Okay, then after I finish squashing the last couple fires from the binder refactor (also see <a href=\"https://github.com/rust-lang/rust/issues/83944\">#83944</a>), then I'll work on that next</p>",
        "id": 234394792,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345573
    },
    {
        "content": "<p>isn't there another bug related to the binder refactor?</p>",
        "id": 234394845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345597
    },
    {
        "content": "<p>that is, we worked around the problem, but I feel like you felt there was something wrong still with generators</p>",
        "id": 234394875,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345617
    },
    {
        "content": "<p>and we never really got into it</p>",
        "id": 234394884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345620
    },
    {
        "content": "<p>yes</p>",
        "id": 234394974,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345668
    },
    {
        "content": "<p>That's the other fire</p>",
        "id": 234394982,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345675
    },
    {
        "content": "<p>It happens when a type that contains unused binders ends up in a generator witness</p>",
        "id": 234395109,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345719
    },
    {
        "content": "<p>I really am just most worried that about this same type of problem occurring elsewhere</p>",
        "id": 234395184,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345768
    },
    {
        "content": "<p>The <em>simplest</em> solution is to force the erasure of all binders when comparing, but that's not really right</p>",
        "id": 234395299,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345807
    },
    {
        "content": "<p>do you want to talk about it in more detail?</p>",
        "id": 234395323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345820
    },
    {
        "content": "<p>it's not obvious why unused binders should cause a problem</p>",
        "id": 234395347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618345826
    },
    {
        "content": "<p>Sure, I can type out a bit</p>",
        "id": 234395377,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345840
    },
    {
        "content": "<p>So, imagine we have <code>Box&lt;dyn for&lt;'a&gt; Future&lt;Output = ()&gt;&gt;</code> as a return type for a <code>Fn</code> <code>F</code></p>",
        "id": 234395452,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345875
    },
    {
        "content": "<p>If we call that function in a generator/<code>async</code> fn, then we end up with that type in the generator witness</p>",
        "id": 234395499,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345902
    },
    {
        "content": "<p>Now, let me remember which way around this is</p>",
        "id": 234395534,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345921
    },
    {
        "content": "<p>Right, so</p>",
        "id": 234395734,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618345988
    },
    {
        "content": "<p>When inserting that type into the generator witness, we call <code>erase_regions</code></p>",
        "id": 234395811,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346017
    },
    {
        "content": "<p>which recursive calls <code>anonymize_late_bound_regions</code> and then replaces non-bound regions with <code>ReErased</code></p>",
        "id": 234395895,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346048
    },
    {
        "content": "<p>Importantly, <code>anonymize_late_bound_regions</code> as-is, remakes the bound vars based on <em>all</em> the regions contained</p>",
        "id": 234395985,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346082
    },
    {
        "content": "<p>Since every region gets a new anon index</p>",
        "id": 234396004,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346093
    },
    {
        "content": "<p><code>Future&lt;Output = ()&gt;</code> has not bound regions, so the bound vars become <code>[]</code></p>",
        "id": 234396040,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346111
    },
    {
        "content": "<p>And the type that gets inserted into the witness is <code>Box&lt;dyn Future&lt;Output = ()&gt;&gt;</code></p>",
        "id": 234396096,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346135
    },
    {
        "content": "<p>The other half I haven't tracked down exactly</p>",
        "id": 234396118,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346144
    },
    {
        "content": "<p>right</p>",
        "id": 234396195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346167
    },
    {
        "content": "<p>so that part seems fine</p>",
        "id": 234396200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346170
    },
    {
        "content": "<p>what's confusing to me is why we can't just erase the regions from the type on the other end</p>",
        "id": 234396238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346184
    },
    {
        "content": "<p>But essentially what's happening is that instead of <code>erase_regions</code>, <code>erase_late_bound_regions</code> is called, which just changes all the bound regions to <code>ReErased</code></p>",
        "id": 234396257,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346194
    },
    {
        "content": "<p>but <em>doesn't</em> remake the bound vars</p>",
        "id": 234396285,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346204
    },
    {
        "content": "<p>So the \"local declaration\" ends up being <code>Box&lt;dyn for&lt;'a&gt; Future&lt;Output = ()&gt;&gt;</code></p>",
        "id": 234396363,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346237
    },
    {
        "content": "<p>Now, I <em>tried</em> to just make <code>erase_late_bound_regions</code> remake the bound vars. It might have been a pretty naive attempt, but it didn't work</p>",
        "id": 234396451,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-04-13/near/234396257\">said</a>:</p>\n<blockquote>\n<p>But essentially what's happening is that instead of <code>erase_regions</code>, <code>erase_late_bound_regions</code> is called, which just changes all the bound regions to <code>ReErased</code></p>\n</blockquote>\n<p>do you remember where this is in the code?</p>",
        "id": 234396459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346280
    },
    {
        "content": "<p>Well, like I said, I haven't tracked that down <em>exactly</em></p>",
        "id": 234396539,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346298
    },
    {
        "content": "<p>But</p>",
        "id": 234396543,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346300
    },
    {
        "content": "<p>uh give me a sec</p>",
        "id": 234396586,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346319
    },
    {
        "content": "<p>It <em>might</em> be in <code>local_decls_for_sig</code></p>",
        "id": 234396685,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346359
    },
    {
        "content": "<p>In <code>shim.rs</code></p>",
        "id": 234396705,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346366
    },
    {
        "content": "<p>(<code>rustc_mir::shim</code>)</p>",
        "id": 234396733,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346376
    },
    {
        "content": "<p>err no</p>",
        "id": 234396762,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346392
    },
    {
        "content": "<p>Things get erased <em>before</em> that</p>",
        "id": 234396774,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346399
    },
    {
        "content": "<p>hmm</p>",
        "id": 234396932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346462
    },
    {
        "content": "<p>Maybe <a href=\"https://github.com/rust-lang/rust/blob/132b4e5d167b7e622fcc11fa2b67b931105b4de1/compiler/rustc_mir/src/shim.rs#L679\">here</a></p>",
        "id": 234396956,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346478
    },
    {
        "content": "<p>Part of the problem is I had basically never seen this code before trying to debug this issue, so I have no clue what the machinery here looks like</p>",
        "id": 234397005,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346506
    },
    {
        "content": "<p>ok</p>",
        "id": 234397142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346549
    },
    {
        "content": "<p>let me find my check out</p>",
        "id": 234397182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346568
    },
    {
        "content": "<p>I don't know if I need to keep the non-bound regions as they are in this code</p>",
        "id": 234397214,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346586
    },
    {
        "content": "<p>Or if I can, say, call <code>erase_regions</code> on <code>sig</code> <em>before</em> <code>erase_late_bound_regions</code></p>",
        "id": 234397244,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346600
    },
    {
        "content": "<p>I just have to look more into it and haven't yet</p>",
        "id": 234397267,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346613
    },
    {
        "content": "<p>remind me your branch, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></p>",
        "id": 234397313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346641
    },
    {
        "content": "<p>uh</p>",
        "id": 234397409,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346668
    },
    {
        "content": "<p>I don't know if I have a branch with any of these changes</p>",
        "id": 234397429,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346677
    },
    {
        "content": "<p>The changes I had landed already</p>",
        "id": 234397453,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346686
    },
    {
        "content": "<p>I thought you had some kind of branch that added .. something</p>",
        "id": 234397553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346734
    },
    {
        "content": "<p>but maybe I'm just thinking of the branch that landed</p>",
        "id": 234397582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346745
    },
    {
        "content": "<p>commit <a href=\"https://github.com/rust-lang/rust/commit/c1dc0b7bbc239290388d2365c6d0b282e299bdbc\">c1dc0b7bbc239290388d2365c6d0b282e299bdbc</a> (HEAD -&gt; binder-refactor-fix)<br>\nAuthor: Niko Matsakis &lt;<a href=\"mailto:niko@alum.mit.edu\">niko@alum.mit.edu</a>&gt;<br>\nDate:   Thu Apr 8 10:56:03 2021 -0400</p>\n<div class=\"codehilite\"><pre><span></span><code>add comments\n</code></pre></div>\n\n<p>commit <a href=\"https://github.com/rust-lang/rust/commit/1a14315975224951bc993455783678154afade09\">1a14315975224951bc993455783678154afade09</a><br>\nAuthor: Jack Huey &lt;<a href=\"mailto:jack.huey@umassmed.edu\">jack.huey@umassmed.edu</a>&gt;<br>\nDate:   Mon Apr 5 00:10:09 2021 -0400</p>\n<div class=\"codehilite\"><pre><span></span><code>Don&#39;t concatenate binders across types\n</code></pre></div>",
        "id": 234397602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346756
    },
    {
        "content": "<p>that's my current git log :)</p>",
        "id": 234397613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346761
    },
    {
        "content": "<p>I guess I can reset to rust-lang/master?</p>",
        "id": 234397692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346777
    },
    {
        "content": "<p>oh that branch</p>",
        "id": 234397696,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346779
    },
    {
        "content": "<p>I wanted to run this code and see problems</p>",
        "id": 234397716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346786
    },
    {
        "content": "<p>I mean, best bet is just to modify the <a href=\"https://github.com/rust-lang/rust/issues/83737\">#83737</a> test on master</p>",
        "id": 234397796,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346825
    },
    {
        "content": "<p>to add the <code>for&lt;'a&gt;</code></p>",
        "id": 234397815,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346830
    },
    {
        "content": "<p>ok</p>",
        "id": 234398046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346910
    },
    {
        "content": "<p>so, to back up a second, I'm thinking about how to get organized overall</p>",
        "id": 234398078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346933
    },
    {
        "content": "<p>it seems like we have a few things going on</p>",
        "id": 234398089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346938
    },
    {
        "content": "<p><em>a few</em></p>",
        "id": 234398110,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346949
    },
    {
        "content": "<ul>\n<li>chalk-ty extraction and integration -- should check back in on this</li>\n</ul>",
        "id": 234398116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346951
    },
    {
        "content": "<ul>\n<li>named impl Trait stabilization</li>\n</ul>",
        "id": 234398128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346960
    },
    {
        "content": "<ul>\n<li>gat stabilization</li>\n</ul>",
        "id": 234398134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346963
    },
    {
        "content": "<ul>\n<li>Chalk closure bug</li>\n</ul>",
        "id": 234398170,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618346981
    },
    {
        "content": "<p>ah yeah I keep ignoring that</p>",
        "id": 234398188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346987
    },
    {
        "content": "<p>you're going to have to explain that to me at some point :)</p>",
        "id": 234398202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618346994
    },
    {
        "content": "<p>Yeah, at some point</p>",
        "id": 234398217,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618347001
    },
    {
        "content": "<p>Some many things that we basically spend like an hour just going through the problem lol</p>",
        "id": 234398297,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618347022
    },
    {
        "content": "<p>ok well, I will try to reproduce the problem, we can dig into that in a future session. I'd like us to collect all the ongoing things into more a project board or something, because it's hard to stay organized :)</p>",
        "id": 234398796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618347251
    },
    {
        "content": "<p>I just have to decide which structure i like :P</p>",
        "id": 234398821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618347262
    },
    {
        "content": "<p>Yeah, kind of what I was saying earlier</p>",
        "id": 234398840,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618347275
    },
    {
        "content": "<p>Also to add to that list</p>\n<ul>\n<li>Obligations PR (<a href=\"https://github.com/rust-lang/rust/issues/77325\">#77325</a>)</li>\n</ul>",
        "id": 234398865,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618347288
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> just pushed the changes we discussed yesterday: <a href=\"https://github.com/jackh726/rust/tree/binder-refactor-fix\">https://github.com/jackh726/rust/tree/binder-refactor-fix</a></p>",
        "id": 234399417,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618347516
    },
    {
        "content": "<p>I am reminded that I think this can subsume the \"trait-ref-hack\"</p>",
        "id": 234399974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618347672
    },
    {
        "content": "<p>Yes, I can attempt to do that</p>",
        "id": 234401751,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618348072
    },
    {
        "content": "<p>Wanted to get your thoughts. Mostly if this is what you were expecting</p>",
        "id": 234401834,
        "sender_full_name": "Jack Huey",
        "timestamp": 1618348084
    }
]