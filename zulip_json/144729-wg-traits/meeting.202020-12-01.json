[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> <br>\nMeeting in 7 minutes</p>",
        "id": 218479897,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856038
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>, meeting time</p>",
        "id": 218480912,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856449
    },
    {
        "content": "<p>oof shoot! I meant to comment that I got double scheduled</p>",
        "id": 218481028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1606856501
    },
    {
        "content": "<p>Oof</p>",
        "id": 218481051,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856507
    },
    {
        "content": "<p>Okay</p>",
        "id": 218481055,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856510
    },
    {
        "content": "<p>I can probably read async a bit</p>",
        "id": 218481064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1606856516
    },
    {
        "content": "<p>but I may be quite distracted</p>",
        "id": 218481071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1606856519
    },
    {
        "content": "<p>Well, I was about to write that we don't have a ton to talk about</p>",
        "id": 218481120,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856527
    },
    {
        "content": "<p>Except maybe <a href=\"https://github.com/rust-lang/chalk/issues/658\">chalk#658</a></p>",
        "id": 218481130,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856532
    },
    {
        "content": "<p>And <a href=\"#narrow/stream/144729-wg-traits/topic/Wellformed.20Placeholder.20Types\">https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits/topic/Wellformed.20Placeholder.20Types</a></p>",
        "id": 218481144,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856539
    },
    {
        "content": "<p>As well as the usual updates/announcements</p>",
        "id": 218481169,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856555
    },
    {
        "content": "<p>So, I guess anyone who has updates can just post them (I'm curious if anyone's done any work)</p>",
        "id": 218481318,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856640
    },
    {
        "content": "<p>For me, kind of stuck on the rustc binder refactor. But not <em>quite</em> as stuck as I thought I was</p>",
        "id": 218481417,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856669
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79313\">#79313</a> might be interesting to some of you <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 218481482,
        "sender_full_name": "lcnr",
        "timestamp": 1606856701
    },
    {
        "content": "<p>I also did some cleanup in Chalk. It's currently based on <a href=\"https://github.com/rust-lang/chalk/issues/658\">chalk#658</a>, so not yet going to PR</p>",
        "id": 218481504,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> I saw that, but didn't read through it</p>",
        "id": 218481537,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856730
    },
    {
        "content": "<p>The rework of WF clauses to not have escaping bound variables is mostly done and is waiting for opinions on the topic in that thread.</p>",
        "id": 218481567,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606856746
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>, hmm. Let me think</p>",
        "id": 218481694,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856808
    },
    {
        "content": "<p>I guess, when does this come up?</p>",
        "id": 218481748,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856844
    },
    {
        "content": "<p>When we check, say, <code>struct A&lt;T&gt;(T)</code> is well-formed, we check that all field types are well-formed, which means that we need to check that<code>T</code> is well-formed.</p>",
        "id": 218481867,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606856901
    },
    {
        "content": "<p>Right, so. I would expect that <code>WellFormed(T)</code> would be in the environment</p>",
        "id": 218481933,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606856938
    },
    {
        "content": "<p>Yes, but currently it's not.</p>",
        "id": 218481969,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606856957
    },
    {
        "content": "<p>I can add it to all environments if we think that makes sense.</p>",
        "id": 218482030,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606856991
    },
    {
        "content": "<p>Yeah, I don't know if it makes sense to have it in the environment, or to say that all placeholders are WF</p>",
        "id": 218482134,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857035
    },
    {
        "content": "<p>(I personally feel like <code>WF(param/placeholder)</code> should be trivially true but don't know how you handle this in chalk so it may not necessarily make sense)</p>",
        "id": 218482146,
        "sender_full_name": "lcnr",
        "timestamp": 1606857038
    },
    {
        "content": "<p>In rustc, WF(placeholder) is always true right?</p>",
        "id": 218482430,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857194
    },
    {
        "content": "<p>Yes</p>",
        "id": 218482442,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606857205
    },
    {
        "content": "<p>Then I think it's fine to just make them WF in Chalk</p>",
        "id": 218482560,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857257
    },
    {
        "content": "<p>I think I've run into this before, when I was originally adding the Chalk integration into rustc, but I don't remember the resolution</p>",
        "id": 218482603,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857290
    },
    {
        "content": "<p>But this has been around since before I started working on Chalk, so maybe there's something related to implied bound here</p>",
        "id": 218482701,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857352
    },
    {
        "content": "<p>I'm looking now at how WF goals for structs are created in Chalk</p>",
        "id": 218483143,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857578
    },
    {
        "content": "<p>But I can't find it...</p>",
        "id": 218483210,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857605
    },
    {
        "content": "<p>oh, it's <code>verify_adt_decl</code></p>",
        "id": 218483241,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> so is this just coming from the rustc integration?</p>",
        "id": 218483324,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857680
    },
    {
        "content": "<p>Or are you running into it with the integration tests</p>",
        "id": 218483356,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606857698
    },
    {
        "content": "<p>I'm running into it with the integration tests.</p>",
        "id": 218483644,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1606857846
    },
    {
        "content": "<p>uh, interesting</p>",
        "id": 218484239,
        "sender_full_name": "Jack Huey",
        "timestamp": 1606858134
    }
]