[
    {
        "content": "<p>was checking what needs to be done regarding this issue</p>",
        "id": 244757485,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625259922
    },
    {
        "content": "<p>if I understand correctly we want to go over <a href=\"https://hackmd.io/o9KO-D8aSb6bJgQ1froVTA#Test-cases\">this list</a> example by example and or either find a test in our test suite that represents that example and maybe add a comment to it telling so or if we don't find one just create a test case</p>",
        "id": 244757638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260038
    },
    {
        "content": "<p>is that right?</p>",
        "id": 244757646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260043
    },
    {
        "content": "<p>yep</p>",
        "id": 244757682,
        "sender_full_name": "Jack Huey",
        "timestamp": 1625260074
    },
    {
        "content": "<p>do we want also to write down the test in the stabilization report?</p>",
        "id": 244757742,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260093
    },
    {
        "content": "<p>What do you mean? Like just write what tests are where?</p>",
        "id": 244757766,
        "sender_full_name": "Jack Huey",
        "timestamp": 1625260119
    },
    {
        "content": "<p>I'm not sure I get what do I need to do in the HackMD</p>",
        "id": 244757804,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260167
    },
    {
        "content": "<p><code>You can just edit the draft stabilization report hackmd directly.</code></p>",
        "id": 244757807,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260169
    },
    {
        "content": "<p>I was guessing that we wanted the test code also pasted there?</p>",
        "id": 244757819,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625260184
    },
    {
        "content": "<p>Oh, no, just write what tests are where</p>",
        "id": 244759002,
        "sender_full_name": "Jack Huey",
        "timestamp": 1625260915
    },
    {
        "content": "<p>ok, yeah, anyway I can start and check what we exactly want as we go</p>",
        "id": 244759419,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625261221
    },
    {
        "content": "<p>I was talking to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> about this today</p>",
        "id": 245039882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625578895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> anything to share?</p>",
        "id": 245074108,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625593538
    },
    {
        "content": "<p>I should start working on this one :)</p>",
        "id": 245074144,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625593556
    },
    {
        "content": "<p>I would make the list a check-list and then start checking all that already have tests and create tests for the rest. Any tests that work fine can go into a PR, the others should be discussed.</p>",
        "id": 245074373,
        "sender_full_name": "oli",
        "timestamp": 1625593668
    },
    {
        "content": "<p>yeah, agreed</p>",
        "id": 245075345,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625594135
    },
    {
        "content": "<p>+1</p>",
        "id": 245082625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625597425
    },
    {
        "content": "<p>the good news is that <code>x.py test</code> now fails a lot of things</p>",
        "id": 245086478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625599241
    },
    {
        "content": "<p>so maybe <em>that</em> is the problem</p>",
        "id": 245086488,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625599245
    },
    {
        "content": "<p>looks like there are a variety of things going on</p>",
        "id": 245088031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625599964
    },
    {
        "content": "<p>but I do think some of the tests correspond to the problem</p>",
        "id": 245088040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625599971
    },
    {
        "content": "<p>oops, wrong topic</p>",
        "id": 245088049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625599975
    },
    {
        "content": "<p>was building a table with the different test cases and where we can find them</p>",
        "id": 246013011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1626293240
    },
    {
        "content": "<p><a href=\"https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view\">https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view</a></p>",
        "id": 246013014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1626293242
    },
    {
        "content": "<p>if someone have a better tip of what to use to build such a thing, considering spreadsheets :)</p>",
        "id": 246013059,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1626293260
    },
    {
        "content": "<p>but I guess a table is going to be a good way of tracking that</p>",
        "id": 246013112,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1626293278
    },
    {
        "content": "<p>This is pretty decent.</p>",
        "id": 246015189,
        "sender_full_name": "Jack Huey",
        "timestamp": 1626294333
    },
    {
        "content": "<p>when we say \"Disagreement between fns in the lifetimes\"</p>",
        "id": 247219042,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1627313541
    },
    {
        "content": "<p>what do we mean?</p>",
        "id": 247219060,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1627313547
    },
    {
        "content": "<p>I guess we are talking about 2 different defining uses of a TAIT where it's lifetimes differ?</p>",
        "id": 247219187,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1627313608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> please confirm me <a href=\"https://github.com/rust-lang/rust/pull/88172/files#r692503580\">https://github.com/rust-lang/rust/pull/88172/files#r692503580</a> and I can impact the change</p>",
        "id": 250052624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629409028
    },
    {
        "content": "<p>I think I agree with you and the original test didn't make a lot of sense</p>",
        "id": 250052634,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629409040
    },
    {
        "content": "<p>I would just make it check-pass</p>",
        "id": 250052758,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629409120
    },
    {
        "content": "<p>done</p>",
        "id": 250053472,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629409557
    },
    {
        "content": "<p>gonna keep trying to add these tests and complete the table as I go</p>",
        "id": 250053539,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629409576
    },
    {
        "content": "<p>unsure who have seen the tests table</p>",
        "id": 250350417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629724927
    },
    {
        "content": "<p><a href=\"https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view\">https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view</a></p>",
        "id": 250350422,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629724929
    },
    {
        "content": "<p>I've tried to link some of the tests cases to existing tests and also added PRs for missing ones</p>",
        "id": 250350458,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629724952
    },
    {
        "content": "<p>I'd need to understand certain parts of what we want to fill the rest</p>",
        "id": 250350475,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629724966
    },
    {
        "content": "<p>in particular, from the stabilization report table</p>",
        "id": 250350509,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629724987
    },
    {
        "content": "<p>the <code>Test Cases</code> ... <code>Use outside of a “defining use”</code> and the rest that exist below</p>",
        "id": 250350530,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629725003
    },
    {
        "content": "<p>basically what we want in all the different variants that are associated with the test cases ...</p>",
        "id": 250350754,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629725120
    },
    {
        "content": "<ul>\n<li>Use outside of a “defining use”</li>\n<li>Defining use sites:</li>\n<li>Inference cycle</li>\n<li>Auto trait leakage</li>\n<li>Weird return types:</li>\n</ul>",
        "id": 250350894,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629725181
    },
    {
        "content": "<p>I have an idea but I'm not 100% sure of all of them</p>",
        "id": 250350927,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629725197
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 250350931,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629725201
    },
    {
        "content": "<p>I was going to add tests for TAITs as fields of structs</p>",
        "id": 250644978,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909441
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Debug</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">Bar1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span>: <span class=\"nc\">Foo</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 250644997,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909450
    },
    {
        "content": "<p>was also wondering and this is a general question ...</p>",
        "id": 250645112,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909492
    },
    {
        "content": "<p>what about ...</p>",
        "id": 250645116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909493
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Bar2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">Debug</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 250645136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909504
    },
    {
        "content": "<p>in some sense this is not a TAIT, the TA part of TAIT is missing there :)</p>",
        "id": 250645191,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909535
    },
    {
        "content": "<p>but I'm not really sure what do we want inline <code>impl Trait</code> to mean in some cases and if there's some degree of equivalence to TAITs</p>",
        "id": 250645241,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909559
    },
    {
        "content": "<p>modulo the \"scope\" of it</p>",
        "id": 250645258,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909569
    },
    {
        "content": "<p>and given the reduced scope of inlining it I'm not even sure if it even makes sense in certain cases</p>",
        "id": 250645371,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629909608
    },
    {
        "content": "<p>my sense is that this should eventually be allowed but is not part of TAIT</p>",
        "id": 250666431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629918521
    },
    {
        "content": "<p>right</p>",
        "id": 250674007,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629921542
    },
    {
        "content": "<p>ended removing this kind of tests and also opened <a href=\"https://github.com/rust-lang/rust/issues/88346\">#88346</a> so we don't have these tests and mix things that shouldn't belong there</p>",
        "id": 250690798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629929896
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 250690801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629929899
    },
    {
        "content": "<p>was also trying to check with Niko</p>",
        "id": 250795587,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629993523
    },
    {
        "content": "<ul>\n<li>Use outside of a \"defining use\"<ul>\n<li>TODO input type in impl Trait (knowing the self type doesn't tell us the other type parameters)<ul>\n<li>type Bar = impl Debug; type Foo = impl PartialEq&lt;Bar&gt;;</li>\n<li>type Bar = impl Debug; fn foo() -&gt; impl PartialEq&lt;Bar&gt; { }</li>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=f74583da2541166f778169bcc744eeac\">compiles today if inference can succeed</a></li>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ae806589bbb58dbaf88897c438925f05\">but not otherwise</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 250795588,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629993524
    },
    {
        "content": "<p>what do we want to test from those</p>",
        "id": 250795606,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629993531
    },
    {
        "content": "<p>I meant, I can literally copy what's in there, but I'm not sure I follow the spirit of what we are trying to do</p>",
        "id": 250795665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1629993552
    },
    {
        "content": "<p>ok</p>",
        "id": 250808603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629998627
    },
    {
        "content": "<p>heh what <em>was</em> I expecting there</p>",
        "id": 250808677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629998650
    },
    {
        "content": "<p>I think those two tests are maybe ok; I'm not sure what I expect in this situation. I don't love it. I might prefer them both to be errors.</p>",
        "id": 250809069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629998818
    },
    {
        "content": "<p>But it's consistent in some sense to have it work the way that those 2 tests behave</p>",
        "id": 250809104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629998831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and what about the two from above?</p>",
        "id": 250813417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630000607
    },
    {
        "content": "<ul>\n<li>type Bar = impl Debug; type Foo = impl PartialEq&lt;Bar&gt;;</li>\n<li>type Bar = impl Debug; fn foo() -&gt; impl PartialEq&lt;Bar&gt; {</li>\n</ul>",
        "id": 250813482,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630000638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think they are covered by the playground links</p>",
        "id": 250824688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630005409
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Reconcile.20TAIT.20tests.20.2386727/near/250809069\">said</a>:</p>\n<blockquote>\n<p>I think those two tests are maybe ok; I'm not sure what I expect in this situation. I don't love it. I might prefer them both to be errors.</p>\n</blockquote>\n<p>hey, just get back to this</p>",
        "id": 250988913,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095150
    },
    {
        "content": "<p>one thing I was wondering, why would you expect both to fail?</p>",
        "id": 250988942,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095165
    },
    {
        "content": "<p>in particular I wonder about this one <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a581ddbf1edc5a8465e7a5ea66e75bd5\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a581ddbf1edc5a8465e7a5ea66e75bd5</a></p>",
        "id": 250988957,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095177
    },
    {
        "content": "<p>I guess I understand why but want to be sure :)</p>",
        "id": 250989148,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095254
    },
    {
        "content": "<p>anyway I'm not sure why that example is accepted and why the other one isn't</p>",
        "id": 250989175,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095272
    },
    {
        "content": "<p>by the other one I meant <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=3f32bf6411bbb9b8d209565fce7b4904\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=3f32bf6411bbb9b8d209565fce7b4904</a></p>",
        "id": 250989227,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630095298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I'd say that this is done ... but please check the table and let me know or feel free to add more cases</p>",
        "id": 251049427,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630150167
    },
    {
        "content": "<p>table: <a href=\"https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view\">https://hackmd.io/y1HwFSBUQS2ZKrSFuQ0Dnw?view</a></p>",
        "id": 251049440,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630150191
    }
]