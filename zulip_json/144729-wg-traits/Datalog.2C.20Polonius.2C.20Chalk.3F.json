[
    {
        "content": "<p>So this super-feels-like-a-dumb-question but... I notice there are mentions of Datalog re: both Polonius and Chalk, and some mentions of not adhering strictly to that model, and that's fine, but I noticed... if these are both Datalog-esque, and rustc is query-driven already, is there any reason we don't have a single unified logic database model for the compiler?</p>\n<p>is it \"oh yeah, that's totally what we're aiming for, it's just a huge project to implement!\"<br>\nor \"no these are actually far more unrelated because...\"</p>",
        "id": 213612127,
        "sender_full_name": "Jubilee",
        "timestamp": 1602881210
    },
    {
        "content": "<p>\"These are both Datalog-esque\" is about where the similarities end for Chalk and Polonius.</p>\n<ul>\n<li>Chalk evaluates predicates on-demand, Polonius evaluates everything eagerly.</li>\n<li>Chalk has to handle coinductive cycles, Polonius doesn't.</li>\n<li>Chalk uses a cache for speed reasons, Polonius has to throw away all it's state once borrow checking the current function has finished for memory reasons and has no use for a cache anyway.</li>\n<li>Chalk has clauses generated on-demand, Polonius knows all clauses at (rustc) compile time.</li>\n</ul>",
        "id": 213617306,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1602884316
    },
    {
        "content": "<p>Alright. I had inferred incorrectly what \"Datalog-esque\" meant then in terms of structure!</p>",
        "id": 213619264,
        "sender_full_name": "Jubilee",
        "timestamp": 1602885763
    }
]