[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766363\">said</a>:</p>\n<blockquote>\n<p>It still seems unnecessarily opaque to print things like this. I would at least use a notation like <code>forall&lt;v0_0, v0_1&gt; exists&lt;v1_0&gt;{ 'v0_0: 'v1_0, 'v0_1: 'v1_0 }</code></p>\n</blockquote>\n<p>Open to PRs changing this</p>",
        "id": 265766744,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640149452
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766744\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766363\">said</a>:</p>\n<blockquote>\n<p>It still seems unnecessarily opaque to print things like this. I would at least use a notation like <code>forall&lt;v0_0, v0_1&gt; exists&lt;v1_0&gt;{ 'v0_0: 'v1_0, 'v0_1: 'v1_0 }</code></p>\n</blockquote>\n<p>Open to PRs changing this</p>\n</blockquote>\n<p>I'm interested.</p>",
        "id": 265766796,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640149541
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766796\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766744\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/How.20to.20interpret.20outlives.20constraints.20from.20HRTB.20subtype.20goal/near/265766363\">said</a>:</p>\n<blockquote>\n<p>It still seems unnecessarily opaque to print things like this. I would at least use a notation like <code>forall&lt;v0_0, v0_1&gt; exists&lt;v1_0&gt;{ 'v0_0: 'v1_0, 'v0_1: 'v1_0 }</code></p>\n</blockquote>\n<p>Open to PRs changing this</p>\n</blockquote>\n<p>I'm interested.</p>\n</blockquote>\n<p>Here: <a href=\"https://github.com/rust-lang/chalk/blob/884cd715c6a168afd6723d4f248b919d1e0cb842/chalk-solve/src/solve.rs#L148\">https://github.com/rust-lang/chalk/blob/884cd715c6a168afd6723d4f248b919d1e0cb842/chalk-solve/src/solve.rs#L148</a></p>",
        "id": 265766846,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640149584
    },
    {
        "content": "<p>(that's at least a start)</p>",
        "id": 265766924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640149689
    },
    {
        "content": "<p>My other question was \"why aren't they using <a href=\"https://insta.rs#test-workflow\">insta</a>?\"</p>",
        "id": 265767547,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640150581
    },
    {
        "content": "<p>I had thought about it at one point</p>",
        "id": 265767751,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640150821
    },
    {
        "content": "<p>I think Chalk tests predate insta</p>",
        "id": 265767761,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640150831
    },
    {
        "content": "<p>But when I gave a cursory glance/thought, I think there was something that seemed not obvious</p>",
        "id": 265767772,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640150860
    },
    {
        "content": "<p>But again, welcome changes if there's something better</p>",
        "id": 265767790,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640150880
    },
    {
        "content": "<p>I'm not quite sure how I feel about needing a separate utility installed to review changes and such. And I think we definitely would still want them inline, and that needs <code>cargo insta</code></p>",
        "id": 265767939,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640151034
    },
    {
        "content": "<p>I think the fact that you're using a test macro would make the inline blessing difficult. I doubt that it's supported, so you'd have to switch to out-of-line.</p>",
        "id": 265767945,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640151044
    },
    {
        "content": "<p>Right, it would would be a big-ish change to how tests are run</p>",
        "id": 265768049,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640151191
    },
    {
        "content": "<p>To be clear, you can still do everything <code>cargo insta</code> does by hand. Like, <code>cargo test</code> still works and will read the out-of-line tests.</p>",
        "id": 265768346,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640151568
    },
    {
        "content": "<p>But if it's not that big a problem for you, it's probably not worth a big change.</p>",
        "id": 265768360,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640151591
    },
    {
        "content": "<p>Better names for metavariables seems less invasive.</p>",
        "id": 265768415,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640151607
    },
    {
        "content": "<p>Well, I saw \"It's not necessary for working with regular snapshots but it's required when working with inline snapshots.\"</p>",
        "id": 265768466,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640151695
    },
    {
        "content": "<p>I think that's specifically for blessing things. <code>cargo test</code> will output the \"actual\" output in the correct format out-of-line, but obviously it can't figure out where in your .rs file it should go without external tooling.</p>",
        "id": 265768585,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640151827
    },
    {
        "content": "<p>Ah I see</p>",
        "id": 265768708,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640151962
    },
    {
        "content": "<p>I guess I'd have to really see it implemented to know if it's really a better solution. Could be a fun task, but might not be worth peoples' times</p>",
        "id": 265768747,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640152019
    },
    {
        "content": "<p>Anyways, if it's not a pain point. I wouldn't worry about it. I just assumed that writing large numbers of test cases is rather unpleasant, but maybe it's not so bad.</p>",
        "id": 265768761,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640152065
    },
    {
        "content": "<p>Taking the opportunity to plug <a href=\"https://crates.io/crates/expect-test\">https://crates.io/crates/expect-test</a> :-)</p>",
        "id": 265768828,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1640152157
    },
    {
        "content": "<p>I've never had any pain really with tests (though I'm aware I might not be the best litmus test here)</p>",
        "id": 265768983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640152366
    },
    {
        "content": "<p>I actually ended up doing this using <code>expect-test</code>. There's a few blockers though.</p>",
        "id": 265851122,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640206165
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/chalk/issues/744\">rust-lang/chalk#744</a></p>",
        "id": 265851138,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640206181
    },
    {
        "content": "<p>Is there anything I need to do now? Or just wait until blockers are resolved?</p>",
        "id": 265921343,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640269777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> No, unless there's some constraints or preferences that I didn't take into account. I'll need to get some changes to <code>expect-test</code> upstream before it's reviewable. I'll ping you when that happens.</p>",
        "id": 265947824,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1640288883
    }
]