[
    {
        "content": "<p>What do you mean what binds the bound variables?</p>",
        "id": 250039650,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629402496
    },
    {
        "content": "<p>If you had something like <code>?0: Trait</code>, that gets canonicalized to <code>for&lt;T&gt; T: Trait</code></p>",
        "id": 250039710,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629402523
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/.E2.9C.94.20rustc.3A.20bound.20vars.20during.20canonicalization/near/250039650\">said</a>:</p>\n<blockquote>\n<p>What do you mean what binds the bound variables?</p>\n</blockquote>\n<p>why are we using the terminology <code>bound variable</code></p>",
        "id": 250039737,
        "sender_full_name": "lcnr",
        "timestamp": 1629402537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/.E2.9C.94.20rustc.3A.20bound.20vars.20during.20canonicalization/near/250039710\">said</a>:</p>\n<blockquote>\n<p>If you had something like <code>?0: Trait</code>, that gets canonicalized to <code>for&lt;T&gt; T: Trait</code></p>\n</blockquote>\n<p>and that's the answer i wanted <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 250039765,
        "sender_full_name": "lcnr",
        "timestamp": 1629402553
    },
    {
        "content": "<p>imo, it's much clearer in Chalk than rustc as to what's happening</p>",
        "id": 250039898,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629402614
    },
    {
        "content": "<p>ah alright, so a canonical query takes some input with inference variables (or regions (*)) and computes the answer for all possible values of the inference vars, i.e. introduces a new <em>forall</em> binder</p>",
        "id": 250039934,
        "sender_full_name": "lcnr",
        "timestamp": 1629402630
    },
    {
        "content": "<p>correct</p>",
        "id": 250039983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629402659
    },
    {
        "content": "<p>(*): regions probably because they can't influence trait selection and stuff, so the query <em>just has to</em> return the same result for all possible regions</p>",
        "id": 250040045,
        "sender_full_name": "lcnr",
        "timestamp": 1629402691
    },
    {
        "content": "<p>regions make things a bit more difficult</p>",
        "id": 250040285,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629402813
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/.E2.9C.94.20rustc.3A.20bound.20vars.20during.20canonicalization/near/250040285\">said</a>:</p>\n<blockquote>\n<p>regions make things a bit more difficult</p>\n</blockquote>\n<p>in which ways? (only answer if you have the time/energy to do so, while I am interested in this, I don't need to know any of this for the things I am currently doing)</p>",
        "id": 250041285,
        "sender_full_name": "lcnr",
        "timestamp": 1629403203
    },
    {
        "content": "<p>so, from I can understand, region constraints don't necessarily affect selection; they're registered and later resolved by something like <code>resolve_regions_and_report_errors</code></p>",
        "id": 250041592,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629403308
    },
    {
        "content": "<p>Now, take what I say with a grain of solve, because I'm no expert here</p>",
        "id": 250041684,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629403336
    },
    {
        "content": "<p>yeah, we check region constraints after selection</p>",
        "id": 250041697,
        "sender_full_name": "lcnr",
        "timestamp": 1629403345
    },
    {
        "content": "<p>so afaik we return any region constraints we encounter during selection from the canonical query</p>",
        "id": 250041766,
        "sender_full_name": "lcnr",
        "timestamp": 1629403384
    },
    {
        "content": "<p>but I can imagine that when solving <code>for&lt;'a&gt; T: Trait&lt;'a&gt;</code> for example, we sort of cheat and return either <code>EvaluatedtoOk</code> or <code>EvaluatedToOkModuloRegions</code></p>",
        "id": 250041810,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629403405
    },
    {
        "content": "<p>so, region constraints aren't as \"isolated\" as they are in Chalk</p>",
        "id": 250041947,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629403454
    }
]