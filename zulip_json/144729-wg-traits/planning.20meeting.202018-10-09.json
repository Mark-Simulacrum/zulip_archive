[
    {
        "content": "<p>Hello all, so we were going to try and do some planning</p>",
        "id": 135471740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539093889
    },
    {
        "content": "<p>I'm not sure whether to do this on Zulip or on <a href=\"http://appear.in\" target=\"_blank\" title=\"http://appear.in\">appear.in</a>, but <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> says their network is sort of slow today, so maybe we'll give Zulip a try :)</p>",
        "id": 135471773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539093933
    },
    {
        "content": "<p>So let's see</p>",
        "id": 135471846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539093978
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>, you also were saying you'd be able to attend)</p>",
        "id": 135471862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539093994
    },
    {
        "content": "<p>Some lnks:</p>\n<ul>\n<li><a href=\"https://paper.dropbox.com/doc/WG-Traits-Planning-Meeting--AOydLZ5eU_V1CMfksqYoZDo_Ag-oDfr6ct8xx63HSAOOmIZX\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/WG-Traits-Planning-Meeting--AOydLZ5eU_V1CMfksqYoZDo_Ag-oDfr6ct8xx63HSAOOmIZX\">Planning meeting minutes</a></li>\n</ul>",
        "id": 135471871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094009
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span></p>",
        "id": 135471892,
        "sender_full_name": "tmandry",
        "timestamp": 1539094032
    },
    {
        "content": "<p>I forget, <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> and <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span>, did we have some \"final\" set of notes for the steps we had planned to take?</p>",
        "id": 135471961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094101
    },
    {
        "content": "<p>I found various Dropbox papers</p>",
        "id": 135471964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094104
    },
    {
        "content": "<p>I think the <a href=\"https://paper.dropbox.com/doc/NOTES-Upcoming-Traits-Work-4sELjVcMvzFh1sMvNoaf2\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/NOTES-Upcoming-Traits-Work-4sELjVcMvzFh1sMvNoaf2\">Upcoming Traits Work</a> doc was it</p>",
        "id": 135471998,
        "sender_full_name": "tmandry",
        "timestamp": 1539094167
    },
    {
        "content": "<p>ok</p>",
        "id": 135472090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094238
    },
    {
        "content": "<p>so that was focused on \"Preliminary chalk integration\", we can start there</p>",
        "id": 135472115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094266
    },
    {
        "content": "<p>there is a check-list for integrate chalk under a flag (<a href=\"https://github.com/rust-lang/rust/issues/48049\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48049\">#48049</a>)</p>",
        "id": 135472143,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> has been working on that list</p>",
        "id": 135472152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094320
    },
    {
        "content": "<p>it's maybe worth elaborating these two items a bit:</p>\n<ul>\n<li>implement unification procedures in integration</li>\n<li>implement other bits of integration (fill in panics)</li>\n</ul>\n<p>which I think are the \"next two\" items beyond what <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> is actively doing</p>",
        "id": 135472212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> is there a rust issue for \"implement very naive procedure to find the lowered rules for a given domain goal\"?</p>",
        "id": 135472227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094379
    },
    {
        "content": "<p>I think there is one</p>",
        "id": 135472238,
        "sender_full_name": "scalexm",
        "timestamp": 1539094387
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/49600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49600\">https://github.com/rust-lang/rust/issues/49600</a></p>",
        "id": 135472266,
        "sender_full_name": "scalexm",
        "timestamp": 1539094420
    },
    {
        "content": "<p>ok, I'm going to start taking some \"finalized\" notes in the Planning Meeting Minutes doc for now</p>",
        "id": 135472335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094466
    },
    {
        "content": "<p>but I think it'd be best to move these to GH as the \"central roadmap planning space\"</p>",
        "id": 135472350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094487
    },
    {
        "content": "<p>I guess to step back</p>",
        "id": 135472468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094564
    },
    {
        "content": "<p>one question is the set of lowering rules</p>",
        "id": 135472478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094567
    },
    {
        "content": "<p>I think we're \"more or less\" on top of this part for now, right? (e.g., <a href=\"https://github.com/rust-lang/rust/issues/49177\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49177\">#49177</a>)</p>",
        "id": 135472490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> rules <code>Implied-Bound-From-AssocTy</code> and <code>Implied-WC-From-AssocTy</code> are not relevant without GATs for now</p>",
        "id": 135472525,
        "sender_full_name": "scalexm",
        "timestamp": 1539094627
    },
    {
        "content": "<p>rule <code>ProjectionEq-Normalize</code> is blocked by the support of bound tys</p>",
        "id": 135472549,
        "sender_full_name": "scalexm",
        "timestamp": 1539094660
    },
    {
        "content": "<p>and the three remaining ones are in my PR</p>",
        "id": 135472557,
        "sender_full_name": "scalexm",
        "timestamp": 1539094671
    },
    {
        "content": "<p>Should we add the rules for coherence at some point?</p>",
        "id": 135472608,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539094687
    },
    {
        "content": "<p>ok so bound tys</p>",
        "id": 135472609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094688
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117350\">@Sunjay Varma</span> good question; probably eventually but I feel like it's not needed for this preliminary goal</p>",
        "id": 135472627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094710
    },
    {
        "content": "<p>we should maybe make explicit what program we want to work</p>",
        "id": 135472637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094722
    },
    {
        "content": "<p>I was imagining something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#![no_std]</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">gimme</span><span class=\"o\">&lt;</span><span class=\"n\">F</span>: <span class=\"nc\">Foo</span><span class=\"o\">&gt;</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">gimme</span>::<span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">gimme</span>::<span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">gimme</span>::<span class=\"o\">&lt;</span><span class=\"kt\">f32</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 135472678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094764
    },
    {
        "content": "<p>about as simple as it gets :)</p>",
        "id": 135472684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094772
    },
    {
        "content": "<p>(sounds good?)</p>",
        "id": 135472840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094872
    },
    {
        "content": "<p>yes :)</p>",
        "id": 135472856,
        "sender_full_name": "scalexm",
        "timestamp": 1539094891
    },
    {
        "content": "<p>yes :)</p>",
        "id": 135472862,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539094897
    },
    {
        "content": "<p>so what do we need to support \"bound types\" exactly</p>",
        "id": 135472881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094913
    },
    {
        "content": "<p>I think our intention was basically to add a <code>BoundTy</code> variant</p>",
        "id": 135472890,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094922
    },
    {
        "content": "<p>something like <code>BoundTy(DebruijnIndex, usize)</code></p>",
        "id": 135472940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094933
    },
    {
        "content": "<p>arguably not needed for that initial program</p>",
        "id": 135472970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094968
    },
    {
        "content": "<p>but otoh kind of hard to make things even work without it</p>",
        "id": 135472976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539094975
    },
    {
        "content": "<p>yes, there is some work already in <a href=\"https://github.com/rust-lang/rust/pull/52984\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52984\">https://github.com/rust-lang/rust/pull/52984</a> I believe</p>",
        "id": 135472998,
        "sender_full_name": "scalexm",
        "timestamp": 1539094992
    },
    {
        "content": "<p>right</p>",
        "id": 135473018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095021
    },
    {
        "content": "<p>which I forgot to review btw, the author was blocked on how to determine the debruijn index</p>",
        "id": 135473024,
        "sender_full_name": "scalexm",
        "timestamp": 1539095027
    },
    {
        "content": "<p>ok</p>",
        "id": 135473030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095034
    },
    {
        "content": "<p>we had a pre-existing issue: <a href=\"https://github.com/rust-lang/rust/issues/49810\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49810\">https://github.com/rust-lang/rust/issues/49810</a></p>",
        "id": 135473148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095108
    },
    {
        "content": "<p>we are basically there though, if that PR works out</p>",
        "id": 135473169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095128
    },
    {
        "content": "<p>you still up to review it <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> ?</p>",
        "id": 135473174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095136
    },
    {
        "content": "<p>(I can also take a look)</p>",
        "id": 135473181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095144
    },
    {
        "content": "<p>now that I'm budgetting a bit more traits time :)</p>",
        "id": 135473188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095153
    },
    {
        "content": "<p>well I was suggesting to just assume for now that types always live in a specific root universe, so basically just put <code>0</code> for the debruijn index and land that PR</p>",
        "id": 135473268,
        "sender_full_name": "scalexm",
        "timestamp": 1539095207
    },
    {
        "content": "<p>so that we can adjust that later once we support bound tys in all places</p>",
        "id": 135473299,
        "sender_full_name": "scalexm",
        "timestamp": 1539095241
    },
    {
        "content": "<p>sounds reasonable</p>",
        "id": 135473379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095307
    },
    {
        "content": "<p>ideally, add some assertions that this is the case =)</p>",
        "id": 135473390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095328
    },
    {
        "content": "<p>(if applicable)</p>",
        "id": 135473392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095333
    },
    {
        "content": "<p>ok, so, I think the next thing is \"implement very naive procedure to find the lowered rules for a given domain goal\", which I think is what you are working on</p>",
        "id": 135473407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095350
    },
    {
        "content": "<p>not sure if we have an open issue for <em>that</em></p>",
        "id": 135473413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I gave a link to this: <a href=\"https://github.com/rust-lang/rust/issues/49600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49600\">https://github.com/rust-lang/rust/issues/49600</a></p>",
        "id": 135473520,
        "sender_full_name": "scalexm",
        "timestamp": 1539095413
    },
    {
        "content": "<p>oh right, thanks</p>",
        "id": 135473528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095434
    },
    {
        "content": "<p>I was just skimming the old issues and found it as well :)</p>",
        "id": 135473533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095440
    },
    {
        "content": "<p>I will assign to you, then</p>",
        "id": 135473542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095454
    },
    {
        "content": "<p>next up: \"implement unification procedures in integration\"</p>",
        "id": 135473609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095501
    },
    {
        "content": "<p>I don't see an issue for this</p>",
        "id": 135473618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095510
    },
    {
        "content": "<p>For reference, here is a link to <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs\">chalk_context.rs</a>, our impl of the chalk traits</p>",
        "id": 135473701,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095548
    },
    {
        "content": "<p>I am referring then to <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs#L428-L435\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs#L428-L435\"><code>unify_parameters</code></a></p>",
        "id": 135473728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095571
    },
    {
        "content": "<p>is that it? I thought there was something else too...</p>",
        "id": 135473746,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095590
    },
    {
        "content": "<p>ah, yes, and <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs#L278-L296\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_traits/chalk_context.rs#L278-L296\">the <code>ResolventOps</code> methods</a></p>",
        "id": 135473764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095615
    },
    {
        "content": "<p>I'll open an issue on this I guess — probably to cover all 3... I have to refresh my memory, but it seems unlikely to be worthwhile doing them independently</p>",
        "id": 135473817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095647
    },
    {
        "content": "<p>(also, the <a href=\"https://github.com/rust-lang/rust/labels/WG-compiler-traits\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/WG-compiler-traits\">WG-compiler-traits list</a> is pretty decent, we might want to prune it a <em>bit</em> but it seems good-ish)</p>",
        "id": 135473830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095666
    },
    {
        "content": "<p>Is there a section in the rustc-guide about the work that has currently been done to integrate chalk into rustc? It would be good to have at least a short section about where to find things, how they map to similar concepts/files from the chalk repo, etc.</p>",
        "id": 135473905,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539095752
    },
    {
        "content": "<p><a href=\"https://rust-lang-nursery.github.io/rustc-guide/traits/index.html\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/traits/index.html\">https://rust-lang-nursery.github.io/rustc-guide/traits/index.html</a></p>",
        "id": 135473989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095797
    },
    {
        "content": "<p>no doubt can be expanded</p>",
        "id": 135473993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539095803
    },
    {
        "content": "<p>yes the rustc guide should definitely be expanded</p>",
        "id": 135474029,
        "sender_full_name": "scalexm",
        "timestamp": 1539095845
    },
    {
        "content": "<p>that was something I wanted to work on eventually</p>",
        "id": 135474052,
        "sender_full_name": "scalexm",
        "timestamp": 1539095868
    },
    {
        "content": "<p>I think I may have been looking for: <a href=\"https://rust-lang-nursery.github.io/rustc-guide/traits/lowering-module.html\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/traits/lowering-module.html\">https://rust-lang-nursery.github.io/rustc-guide/traits/lowering-module.html</a></p>",
        "id": 135474054,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539095870
    },
    {
        "content": "<p>Because the rest of the guide is pretty specific to the chalk repo, not rustc, right?</p>",
        "id": 135474114,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539095895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117350\">@Sunjay Varma</span> well we are basically moving most chalk rules in rustc so this will soon be about rustc too :)</p>",
        "id": 135474163,
        "sender_full_name": "scalexm",
        "timestamp": 1539095945
    },
    {
        "content": "<p>but even the chalk section needs to be completed, in particular the \"new-style\" well-formedness requirements are not detailed at all</p>",
        "id": 135474204,
        "sender_full_name": "scalexm",
        "timestamp": 1539095981
    },
    {
        "content": "<p>Oh I should clarify. I meant the specific files like \"we are putting the rules in <a href=\"http://xx.rs\" target=\"_blank\" title=\"http://xx.rs\">xx.rs</a>\" and \"lowering happens in <a href=\"http://yy.rs\" target=\"_blank\" title=\"http://yy.rs\">yy.rs</a>\" etc.</p>",
        "id": 135474208,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539095984
    },
    {
        "content": "<p>ok so the last thing on that list is \"implement other bits of integration (fill in panics)\"</p>",
        "id": 135474295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096013
    },
    {
        "content": "<p>let's see, what are those?</p>",
        "id": 135474296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096016
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L275-L297\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L275-L297\"><code>make_solution</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L133-L135\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L133-L135\"><code>is_coinductive</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L149-L156\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/e1643a8968753226dab7ab3c9fee826f097550f2/src/librustc_traits/chalk_context.rs#L149-L156\"><code>instantiate_ucanonical_goal</code></a></li>\n<li><code>instantiate_ex_clause</code></li>\n<li><code>is_trivial_substitution</code></li>\n<li>Parameter environment related things:<br>\n    - <code>program_clauses</code> (<a href=\"https://github.com/rust-lang/rust/issues/49600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49600\">#49600</a>)<br>\n    - <code>add_clauses</code></li>\n<li>Universe related things:<br>\n    - <code>num_universes</code>, <code>map_goal_from_canonical</code>, <code>map_subst_from_canonical</code><br>\n    - <code>instantiate_binders_universally</code><br>\n    - <code>instantiate_binders_existentially</code></li>\n<li>Lifetime juggling:<br>\n    - <code>lift_delayed_literal</code><br>\n    - <code>lift_ex_clause_to_tcx</code></li>\n<li><code>into_ex_clause</code></li>\n</ul>",
        "id": 135474341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096073
    },
    {
        "content": "<p>I’m guessing the best reference for these is their implementation in chalk</p>",
        "id": 135474650,
        "sender_full_name": "tmandry",
        "timestamp": 1539096267
    },
    {
        "content": "<p>mm sort of</p>",
        "id": 135474673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096283
    },
    {
        "content": "<p>in many cases there exists comparbale code in rustc</p>",
        "id": 135474688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096295
    },
    {
        "content": "<p>so, I guess I can file issues for those, and try to give a few hints where to find the relevant code (I suspect of this bunch I would be best for that)</p>",
        "id": 135474718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096312
    },
    {
        "content": "<p>I guess that some of them depend on whether we plan to change the <code>Goal</code> etc</p>",
        "id": 135474839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096384
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> we were talking about maybe moving away from <code>ty::Predicate</code>, right?</p>",
        "id": 135474852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096394
    },
    {
        "content": "<p>I'm looking specifically at <code>is_coinductive</code></p>",
        "id": 135474868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes</p>",
        "id": 135474873,
        "sender_full_name": "scalexm",
        "timestamp": 1539096410
    },
    {
        "content": "<p>but I think <code>ty::Predicate</code> is not used in <code>chalk_context.rs</code> apart from <code>ParamEnv</code>, which I'm replacing by a new type</p>",
        "id": 135474926,
        "sender_full_name": "scalexm",
        "timestamp": 1539096452
    },
    {
        "content": "<p>ok, that's a good \"to do\" item for me, and I think those will be good \"intro tasks\"</p>",
        "id": 135474937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096459
    },
    {
        "content": "<blockquote>\n<p>but I think <code>ty::Predicate</code> is not used in <code>chalk_context.rs</code> apart from <code>ParamEnv</code>, which I'm replacing by a new type</p>\n</blockquote>\n<p>isn't it used for <code>DomainGoal</code> or something?</p>",
        "id": 135474942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096466
    },
    {
        "content": "<p>in <code>DomainGoal</code> we only use e.g. <code>ty::TraitPredicate</code> or <code>ty::ProjectionPredicate</code></p>",
        "id": 135475066,
        "sender_full_name": "scalexm",
        "timestamp": 1539096559
    },
    {
        "content": "<p>which I think are ok</p>",
        "id": 135475068,
        "sender_full_name": "scalexm",
        "timestamp": 1539096561
    },
    {
        "content": "<p>ok</p>",
        "id": 135475182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096645
    },
    {
        "content": "<p>so — hmm, where does the \"universe\" work I've been doing fall on this spectrum.</p>",
        "id": 135475203,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096662
    },
    {
        "content": "<p>feels like it will help on implementing some of those methods above (the ones I broke out)</p>",
        "id": 135475219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096679
    },
    {
        "content": "<p>may or may not be a <em>blocker</em> per se</p>",
        "id": 135475223,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096684
    },
    {
        "content": "<p>OK, is there more to say about prelim chalk integration?</p>",
        "id": 135475414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096834
    },
    {
        "content": "<p>Seems like no</p>",
        "id": 135475454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096844
    },
    {
        "content": "<p>we may need to call it soon (because it's been ~1 hr and I've got other stuff to do), but it seems clear there is a need to break out more tasks</p>",
        "id": 135475480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096861
    },
    {
        "content": "<p>I think that's it</p>",
        "id": 135475481,
        "sender_full_name": "scalexm",
        "timestamp": 1539096862
    },
    {
        "content": "<p>where is the tracking issue to rewrite rustc in lambda Prolog</p>",
        "id": 135475512,
        "sender_full_name": "tmandry",
        "timestamp": 1539096887
    },
    {
        "content": "<p>looking over <a href=\"https://github.com/rust-lang/rust/labels/WG-compiler-traits\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/WG-compiler-traits\">the list of WG-compiler-traits  issues</a>, I see various things that would be worth going into, not all of which are directly <em>chalk</em> related</p>",
        "id": 135475546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096911
    },
    {
        "content": "<p>ah, <span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span>, that reminds me — once we support <em>bound types</em>, we also need to support <em>placeholder types</em> (which obviously overlap with <code>TyParam</code>, but anyway). That would be quite useful for some of the work that <span class=\"user-mention\" data-user-id=\"125273\">@mikeyhew</span> was doing in <a href=\"https://github.com/rust-lang/rust/pull/54383\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54383\">https://github.com/rust-lang/rust/pull/54383</a></p>",
        "id": 135475603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539096963
    },
    {
        "content": "<p>also, I found \"refactor structure of <code>ty::Predicate</code>\" <a href=\"https://github.com/rust-lang/rust/issues/48539\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48539\">#48539</a>, but I'm guessing that's out of date and not worth pursuing, particularly if we're going to build up a parallel replacement structure</p>",
        "id": 135475706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097026
    },
    {
        "content": "<p>mmh</p>",
        "id": 135475722,
        "sender_full_name": "scalexm",
        "timestamp": 1539097039
    },
    {
        "content": "<p>what are \"placeholder\" types? Not related to what we used to call skolemized types before I guess?</p>",
        "id": 135475736,
        "sender_full_name": "scalexm",
        "timestamp": 1539097061
    },
    {
        "content": "<p>same thing</p>",
        "id": 135475742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097070
    },
    {
        "content": "<p>e.g., when you have <code>for&lt;T&gt; { ... }</code></p>",
        "id": 135475748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097077
    },
    {
        "content": "<p>ah ok</p>",
        "id": 135475750,
        "sender_full_name": "scalexm",
        "timestamp": 1539097081
    },
    {
        "content": "<p>and you open the binder...</p>",
        "id": 135475788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097084
    },
    {
        "content": "<p>yes I was basically including that in \"bound types support\" then :)</p>",
        "id": 135475804,
        "sender_full_name": "scalexm",
        "timestamp": 1539097102
    },
    {
        "content": "<p>agreed, I had just overlooked it</p>",
        "id": 135475813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097110
    },
    {
        "content": "<p>and as for <code>TyParam</code> I guess it will just be a \"named\" <code>BoundTy</code></p>",
        "id": 135475817,
        "sender_full_name": "scalexm",
        "timestamp": 1539097117
    },
    {
        "content": "<p>it would follow the structure of <code>RePlaceholder</code> presumably</p>",
        "id": 135475822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097121
    },
    {
        "content": "<p>yes, so, in regions we also have this split</p>",
        "id": 135475826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097128
    },
    {
        "content": "<p>I don't love it but it's ok</p>",
        "id": 135475836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097135
    },
    {
        "content": "<p>basically \"higher-ranked trait bounds\" and \"higher-ranked types\" wind up with <code>RePlaceholder</code></p>",
        "id": 135475847,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097147
    },
    {
        "content": "<p>but otherwise you get other variants</p>",
        "id": 135475850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097153
    },
    {
        "content": "<p>ok, well, we should probably stop for now, maybe we ought to reconvene again though</p>",
        "id": 135475901,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097200
    },
    {
        "content": "<p>we reached a logical stopping point, anyway</p>",
        "id": 135475963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097209
    },
    {
        "content": "<p>the placeholders conversation is a bit confusing to me, because I always associate it with associated types only</p>",
        "id": 135476009,
        "sender_full_name": "tmandry",
        "timestamp": 1539097246
    },
    {
        "content": "<p>the concept of placeholders is more general</p>",
        "id": 135476020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097262
    },
    {
        "content": "<p>e.g., if you are proving <code>forall&lt;T&gt; { T: Debug }</code></p>",
        "id": 135476033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097270
    },
    {
        "content": "<p>then you do that by instantiating <code>T</code> with a \"placeholder\" meant to represent \"any type\"</p>",
        "id": 135476045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097280
    },
    {
        "content": "<p>we usually write these as <code>!1</code></p>",
        "id": 135476050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097289
    },
    {
        "content": "<p>whereas if you were proving <code>exists&lt;T&gt; { ... }</code>, you would instantiate <code>T</code> with an inference variable (<code>?1</code>)</p>",
        "id": 135476061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097307
    },
    {
        "content": "<p>in the case of an associated type, the \"placeholder\" is again meant to represent \"any type used as the value of this associated type\" :)</p>",
        "id": 135476115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097334
    },
    {
        "content": "<p>right ok</p>",
        "id": 135476129,
        "sender_full_name": "tmandry",
        "timestamp": 1539097359
    },
    {
        "content": "<p>makes sense. thanks</p>",
        "id": 135476144,
        "sender_full_name": "tmandry",
        "timestamp": 1539097381
    },
    {
        "content": "<p>OK, great, thanks all! &lt;3</p>\n<p>I think that tomorrow I would be up to do a bit more of this planning, though probably a bit later, maybe 11 (vs 10 today)? I wanted to dig into a few non-chalk things. No need to be present but feel free to show up, I'll probably open a thread and talk out loud in Zulip. =)</p>",
        "id": 135476318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539097529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117350\">@Sunjay Varma</span> I added a couple links to the \"Context &amp; Background About Chalk\" in the dropbox paper about the SLG solver.  I'm not entirely sure if they deserve to be there, so I'm just letting you know :)</p>",
        "id": 135509463,
        "sender_full_name": "Diogo Sousa",
        "timestamp": 1539131185
    },
    {
        "content": "<p>Yup! That's great! Thanks</p>",
        "id": 135509769,
        "sender_full_name": "Sunjay Varma",
        "timestamp": 1539131657
    }
]