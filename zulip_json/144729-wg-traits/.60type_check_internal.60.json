[
    {
        "content": "<p>in mir typeck, we have an <code>extra: impl FnOnce(TypeChecker&lt;'a, 'tcx&gt;) -&gt; R</code> argument for <code>type_check_internal</code>. As that function is only used once that seems unnecessary to me.</p>",
        "id": 278135011,
        "sender_full_name": "lcnr",
        "timestamp": 1649322013
    },
    {
        "content": "<p>was there a reason why we added that closure</p>",
        "id": 278135061,
        "sender_full_name": "lcnr",
        "timestamp": 1649322030
    },
    {
        "content": "<p>or well, actually i would just merge <code>type_check_internal</code> into <code>type_check</code></p>",
        "id": 278135111,
        "sender_full_name": "lcnr",
        "timestamp": 1649322056
    },
    {
        "content": "<p>Huh? <code>type_check_internal</code> was used twice in a branch I looked at yesterday. Did something change around type checking const generics?</p>",
        "id": 278136783,
        "sender_full_name": "oli",
        "timestamp": 1649323162
    },
    {
        "content": "<p>Wait no, that was <code>typeck_with_fallback</code></p>",
        "id": 278136832,
        "sender_full_name": "oli",
        "timestamp": 1649323198
    },
    {
        "content": "<p>You're talking about mir typeck. Right.</p>",
        "id": 278136891,
        "sender_full_name": "oli",
        "timestamp": 1649323212
    },
    {
        "content": "<p>Uh, that closure has confused me, too. I just didn't want to touch it yet due to the lazy type-alias-impl-trait stuff, but that's done now</p>",
        "id": 278136986,
        "sender_full_name": "oli",
        "timestamp": 1649323282
    },
    {
        "content": "<p>So yea, just inline the closure manually</p>",
        "id": 278136995,
        "sender_full_name": "oli",
        "timestamp": 1649323295
    }
]