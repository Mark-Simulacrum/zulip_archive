[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> at least we know how they will work in practice, i.e. with respect to type checking et al, but I don’t know if they are any plans to make progress on them outside of pushing on chalk integration</p>",
        "id": 147555661,
        "sender_full_name": "scalexm",
        "timestamp": 1542062078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> so is there more work to be done to get them working even once chalk lands?</p>",
        "id": 147555678,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542062111
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> well I guess yes, since the syntax isn't even fully implemented in rustc</p>",
        "id": 147555705,
        "sender_full_name": "scalexm",
        "timestamp": 1542062156
    },
    {
        "content": "<p>e.g. where clauses on associated types</p>",
        "id": 147555747,
        "sender_full_name": "scalexm",
        "timestamp": 1542062171
    },
    {
        "content": "<p>which the parser does not accept yet</p>",
        "id": 147555752,
        "sender_full_name": "scalexm",
        "timestamp": 1542062184
    },
    {
        "content": "<p>but anyway  I guess they should be \"easily\" implementable in rustc once chalk has a decent support</p>",
        "id": 147555774,
        "sender_full_name": "scalexm",
        "timestamp": 1542062231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> I see...</p>",
        "id": 147555782,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542062264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> and is this a blocker to RPIT in traits?</p>",
        "id": 147555787,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542062275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> no, but they are a blocker to async functions in traits if they need to borrow data</p>",
        "id": 147555874,
        "sender_full_name": "scalexm",
        "timestamp": 1542062385
    },
    {
        "content": "<p>e.g. <code>async fn foo(&amp;self)</code> is really <code>fn foo&lt;'a&gt;(&amp;'a self) -&gt; impl Future&lt;Item = ()&gt; + 'a</code></p>",
        "id": 147555935,
        "sender_full_name": "scalexm",
        "timestamp": 1542062419
    },
    {
        "content": "<p>so the return type is an existential type which is parametric over a lifetime</p>",
        "id": 147555947,
        "sender_full_name": "scalexm",
        "timestamp": 1542062439
    },
    {
        "content": "<p>which you cannot express inside a trait right now because it would be a GAT</p>",
        "id": 147555958,
        "sender_full_name": "scalexm",
        "timestamp": 1542062453
    },
    {
        "content": "<p>aha</p>",
        "id": 147556637,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542063361
    },
    {
        "content": "<p>makes sense</p>",
        "id": 147556674,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542063363
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> is there any reason we haven't implemented RPIT in traits yet then?</p>",
        "id": 147556680,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542063373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> I don’t know of any, especially since I think <code>existential</code> associated type values are already usable in nightly</p>",
        "id": 147557907,
        "sender_full_name": "scalexm",
        "timestamp": 1542064925
    },
    {
        "content": "<p>Members of the lang team may know best</p>",
        "id": 147557926,
        "sender_full_name": "scalexm",
        "timestamp": 1542064952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131694\">@scalexm</span> indeed, I thought the same. I figured it's about time to add support for it!</p>",
        "id": 147558021,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542065076
    },
    {
        "content": "<p>thanks anyway</p>",
        "id": 147558035,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542065091
    },
    {
        "content": "<p>I'll double check with a lang/compiler-team member</p>",
        "id": 147558043,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1542065103
    }
]