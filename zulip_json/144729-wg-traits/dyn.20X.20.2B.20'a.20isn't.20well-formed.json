[
    {
        "content": "<p>Quick question: do we expect this to pass? If so, what feature is missing here?</p>\n<div class=\"codehilite\"><pre><span></span><code>trait X {}\nforall&lt;&#39;a&gt; { WellFormed(dyn X + &#39;a) }\n</code></pre></div>\n\n\n<p><span class=\"user-mention\" data-user-id=\"271698\">@Super Tuple</span> and I are running into this failing while working on a variance test case (<code>type-infer-generalize-ty-var.rs</code> from rustc), but it doesn't seem directly variance related.</p>",
        "id": 209903718,
        "sender_full_name": "David Ross",
        "timestamp": 1599951733
    },
    {
        "content": "<p>Right now there are no clauses about well-formedness of trait objects (see <a href=\"https://github.com/rust-lang/chalk/blob/404bc7efed43beae5461a0acc3fe54948d124eca/chalk-solve/src/clauses.rs#L601\">this</a>)</p>",
        "id": 209915087,
        "sender_full_name": "Areredify",
        "timestamp": 1599975487
    },
    {
        "content": "<p>I don't think we came to consensus as to whether we expect this to be provable?</p>",
        "id": 209915257,
        "sender_full_name": "Areredify",
        "timestamp": 1599975859
    },
    {
        "content": "<p>It's (I think) the same question as \"should <code>WellFormed( ([u32], [u32]) )</code> be provable\" (right now it is, all tuples are considered well formed)</p>",
        "id": 209915270,
        "sender_full_name": "Areredify",
        "timestamp": 1599975926
    },
    {
        "content": "<p>We should look at the rules rustc uses; there are definitely some rules</p>",
        "id": 210059984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600115929
    }
]