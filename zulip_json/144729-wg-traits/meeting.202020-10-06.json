[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 212477027,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014282
    },
    {
        "content": "<p>meeting in 2ish minutes</p>",
        "id": 212477044,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014287
    },
    {
        "content": "<p>Wellformed rules are the topic of discussion today</p>",
        "id": 212477100,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014313
    },
    {
        "content": "<p>I was supposed to prepare some discussion points, but, alas, I didn't</p>",
        "id": 212477144,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014331
    },
    {
        "content": "<p>heh :)</p>",
        "id": 212477291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014385
    },
    {
        "content": "<p>this came up a bit when reviewing <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>'s PR too</p>",
        "id": 212477310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014391
    },
    {
        "content": "<p>So, seems like a good discussion, I guess</p>",
        "id": 212477449,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014424
    },
    {
        "content": "<p>Anyways, meeting time</p>",
        "id": 212477492,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014438
    },
    {
        "content": "<p>So, first, as usual, announcments?</p>",
        "id": 212477515,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014451
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a> merged</p>",
        "id": 212477589,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1602014482
    },
    {
        "content": "<p>It was actually a relatively busy week compared to the last few</p>",
        "id": 212477591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014485
    },
    {
        "content": "<p>Perf improved a bit: <a href=\"https://perf.rust-lang.org/compare.html?start=a1dfd2490a6cb456b92e469fa550dc217e20ad6d&amp;end=08e2d4616613716362b4b49980ff303f2b9ae654&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=a1dfd2490a6cb456b92e469fa550dc217e20ad6d&amp;end=08e2d4616613716362b4b49980ff303f2b9ae654&amp;stat=instructions:u</a></p>",
        "id": 212477610,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1602014496
    },
    {
        "content": "<p>59% improvement on some =&gt; \"a bit\"</p>",
        "id": 212477669,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014521
    },
    {
        "content": "<p>I have a PR up on rustc to upgrade Chalk: <a href=\"https://github.com/rust-lang/rust/issues/77515\">#77515</a></p>",
        "id": 212477757,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014545
    },
    {
        "content": "<p>Which should unblock the Box alloc PR</p>",
        "id": 212477776,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014554
    },
    {
        "content": "<p>Something interesting in rust-analyzer: they <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Poor.20type.20inference.20performance.20on.20chained.20method.20calls/near/212456915\">noticed</a> that chalk is kinda slow around chained method calls</p>",
        "id": 212477777,
        "sender_full_name": "detrumi",
        "timestamp": 1602014554
    },
    {
        "content": "<p>interesting</p>",
        "id": 212477810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014569
    },
    {
        "content": "<p>so</p>",
        "id": 212477830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014579
    },
    {
        "content": "<p>Would love a repro for that</p>",
        "id": 212477836,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014582
    },
    {
        "content": "<p>I would like to do a thing</p>",
        "id": 212477841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014583
    },
    {
        "content": "<p>which is to schedule some \"office hours\" on Monday, I think</p>",
        "id": 212477857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014590
    },
    {
        "content": "<p>that I reserve for helping out chalk PRs and things</p>",
        "id": 212477868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014596
    },
    {
        "content": "<p>and/or other trait related things</p>",
        "id": 212477878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014600
    },
    {
        "content": "<p>would that work for people?</p>",
        "id": 212477885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014603
    },
    {
        "content": "<p>I'm trying to find ways to commit myself to spending time on chalk :)</p>",
        "id": 212477914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014612
    },
    {
        "content": "<p>I'm busy monday mornings</p>",
        "id": 212477948,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014625
    },
    {
        "content": "<p>But afternoons work for me</p>",
        "id": 212477959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014631
    },
    {
        "content": "<p>(not that it matters a ton for this)</p>",
        "id": 212478020,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014645
    },
    {
        "content": "<p>something like 12-2pm and 4-6pm (Eastern time) might work</p>",
        "id": 212478027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-10-06/near/212477836\">said</a>:</p>\n<blockquote>\n<p>Would love a repro for that</p>\n</blockquote>\n<p>Yeah, would make for a good benchmark. Might not quite be easy though, missing some tooling for that</p>",
        "id": 212478029,
        "sender_full_name": "detrumi",
        "timestamp": 1602014650
    },
    {
        "content": "<p>(maybe both, and I'll use unschedule time for other reviews or coding)</p>",
        "id": 212478061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014663
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 212478111,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014694
    },
    {
        "content": "<p>I think I could definitely find that helpful! Not that I'd contribute but there are a times when asking small stuff in synchronous communication resolves things quicker</p>",
        "id": 212478135,
        "sender_full_name": "David Ross",
        "timestamp": 1602014708
    },
    {
        "content": "<p>Also, I have two chalk prs that need review: <a href=\"https://github.com/rust-lang-nursery/chalk/issues/622\">chalk#622</a> and <a href=\"https://github.com/rust-lang-nursery/chalk/issues/623\">chalk#623</a>, by anyone</p>",
        "id": 212478275,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014774
    },
    {
        "content": "<p>The first is kind of important for rust-analyzer</p>",
        "id": 212478293,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014782
    },
    {
        "content": "<p>ok <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 212478345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014815
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/623\">chalk#623</a> looks like we can just land it</p>",
        "id": 212478376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014829
    },
    {
        "content": "<p>I need to fix the link there</p>",
        "id": 212478389,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014836
    },
    {
        "content": "<p>But yes</p>",
        "id": 212478391,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014838
    },
    {
        "content": "<p>apart from that</p>",
        "id": 212478398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014842
    },
    {
        "content": "<p>I also did some more work this week on the binder refactor in rustc</p>",
        "id": 212478505,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014885
    },
    {
        "content": "<p>regarding <a href=\"https://github.com/rust-lang-nursery/chalk/issues/622\">chalk#622</a></p>",
        "id": 212478506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014885
    },
    {
        "content": "<p>that's just a quick workaround?</p>",
        "id": 212478514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014892
    },
    {
        "content": "<p>maybe we can open a tracking issue ?</p>",
        "id": 212478520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014897
    },
    {
        "content": "<p>or add it to an existing one?</p>",
        "id": 212478528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014901
    },
    {
        "content": "<p>Yeah, mostly a quick workaround</p>",
        "id": 212478635,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014929
    },
    {
        "content": "<p>Do we have an issue open for auto traits</p>",
        "id": 212478654,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014936
    },
    {
        "content": "<p>let me check</p>",
        "id": 212478656,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014938
    },
    {
        "content": "<p>That would be <a href=\"https://github.com/rust-lang-nursery/chalk/issues/604\">chalk#604</a></p>",
        "id": 212478690,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602014958
    },
    {
        "content": "<p>seems fine but I agree we should be tracking the \"unimplemented\" stuff</p>",
        "id": 212478804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602014999
    },
    {
        "content": "<p>if we're not already</p>",
        "id": 212478831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015002
    },
    {
        "content": "<p>I added a comment to that issue</p>",
        "id": 212478890,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015024
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang-nursery/chalk/issues/604\">chalk#604</a>)</p>",
        "id": 212478919,
        "sender_full_name": "detrumi",
        "timestamp": 1602015037
    },
    {
        "content": "<p>Whoops. Thanks. Fixed</p>",
        "id": 212478964,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015059
    },
    {
        "content": "<p>should we merge <a href=\"https://github.com/rust-lang-nursery/chalk/issues/622\">chalk#622</a> then?</p>",
        "id": 212479014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015088
    },
    {
        "content": "<p>sgtm</p>",
        "id": 212479018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015089
    },
    {
        "content": "<p>Yep</p>",
        "id": 212479053,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015105
    },
    {
        "content": "<p>Also..uh..when did we start the sprint and when does it end</p>",
        "id": 212479073,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015118
    },
    {
        "content": "<p>heh</p>",
        "id": 212479124,
        "sender_full_name": "detrumi",
        "timestamp": 1602015127
    },
    {
        "content": "<p>Was it 9/8?</p>",
        "id": 212479162,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015150
    },
    {
        "content": "<p>I was wondering about that</p>",
        "id": 212479206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015174
    },
    {
        "content": "<p>We decided to wait one week to 'get organized', I think</p>",
        "id": 212479240,
        "sender_full_name": "detrumi",
        "timestamp": 1602015196
    },
    {
        "content": "<p>oh, the MCP for <code>ty.kind()</code> landed, right?</p>",
        "id": 212479248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015202
    },
    {
        "content": "<p>should we review the sprint items, I guess?</p>",
        "id": 212479264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209443628\">said</a>:</p>\n<blockquote>\n<p>Ok so, 9/15-10/27</p>\n</blockquote>",
        "id": 212479295,
        "sender_full_name": "detrumi",
        "timestamp": 1602015222
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-10-06/near/212479295\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209443628\">said</a>:</p>\n<blockquote>\n<p>Ok so, 9/15-10/27</p>\n</blockquote>\n</blockquote>\n<p>Thank you</p>",
        "id": 212479525,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-10-06/near/212479248\">said</a>:</p>\n<blockquote>\n<p>oh, the MCP for <code>ty.kind()</code> landed, right?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 212479537,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015302
    },
    {
        "content": "<p>on that note, <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> PRed the <code>&amp;TyKind</code> -&gt; <code>TyKind</code> change</p>",
        "id": 212479614,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015324
    },
    {
        "content": "<p>And perf on that looks bad</p>",
        "id": 212479620,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015328
    },
    {
        "content": "<p>(link?)</p>",
        "id": 212479624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015329
    },
    {
        "content": "<p>and closed it</p>",
        "id": 212479628,
        "sender_full_name": "lcnr",
        "timestamp": 1602015332
    },
    {
        "content": "<p>oh</p>",
        "id": 212479630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015332
    },
    {
        "content": "<p>interesting</p>",
        "id": 212479649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015340
    },
    {
        "content": "<p>in the MCP zulip thread there is some post mortem discussion</p>",
        "id": 212479681,
        "sender_full_name": "lcnr",
        "timestamp": 1602015359
    },
    {
        "content": "<p><a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Make.20TyKind.20Copy.20and.20change.20ty.2Ekind%28%29.20to.20.E2.80.A6.20compiler-team.23363/near/212460531\">link</a></p>",
        "id": 212479730,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015368
    },
    {
        "content": "<p>For the <code>kind</code> -&gt; <code>data</code> MCP, that was seconded (and accepted?)</p>",
        "id": 212479787,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015407
    },
    {
        "content": "<p>So whoever wants to do that...is free</p>",
        "id": 212479798,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015416
    },
    {
        "content": "<p>(maybe <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> ?)</p>",
        "id": 212479814,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015422
    },
    {
        "content": "<p>Sure, though I’m not sure I’m going to have a lot of free time</p>",
        "id": 212479871,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1602015446
    },
    {
        "content": "<p>np</p>",
        "id": 212479882,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015450
    },
    {
        "content": "<p>Maybe we should make a separate trackable issue for that somewhere</p>",
        "id": 212479928,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015472
    },
    {
        "content": "<p>It's a bullet point in the wg-traits issue</p>",
        "id": 212479994,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015485
    },
    {
        "content": "<p>But, we can quickly go over the sprint goals</p>",
        "id": 212480021,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015495
    },
    {
        "content": "<h2>shared type library</h2>",
        "id": 212480083,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015514
    },
    {
        "content": "<p>There's a lot of bullets here</p>",
        "id": 212480154,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015539
    },
    {
        "content": "<p>Some stuff has been done</p>",
        "id": 212480211,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015569
    },
    {
        "content": "<p>(like <code>kind</code> to <code>kind()</code>)</p>",
        "id": 212480241,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015586
    },
    {
        "content": "<p>But, these are self-contained enough that I think as a whole it's moving in the right direction</p>",
        "id": 212480367,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015638
    },
    {
        "content": "<p>yep</p>",
        "id": 212480376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015643
    },
    {
        "content": "<h2>rust-analyzer</h2>",
        "id": 212480403,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015658
    },
    {
        "content": "<p>Not sure what this point was</p>",
        "id": 212480408,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015662
    },
    {
        "content": "<p>I think we wanted to check in to see what is still needed in Chalk for it?</p>",
        "id": 212480435,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015680
    },
    {
        "content": "<p>yeah probably</p>",
        "id": 212480483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015712
    },
    {
        "content": "<p>At the very least rust-analyzer integration has been great at catching our bugs <em>very</em> quickly</p>",
        "id": 212480484,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015712
    },
    {
        "content": "<p>But, other than that, no update</p>",
        "id": 212480557,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015740
    },
    {
        "content": "<h2>MVP of rustc-integration</h2>",
        "id": 212480563,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015744
    },
    {
        "content": "<p>So, this has been good</p>",
        "id": 212480573,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"323979\">@Bram van den Heuvel</span> has done a couple updates on the rustc side</p>",
        "id": 212480621,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015778
    },
    {
        "content": "<p>I have one in progress</p>",
        "id": 212480625,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015783
    },
    {
        "content": "<p>More than half of tests pass?</p>",
        "id": 212480639,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015794
    },
    {
        "content": "<p>that's awesome!</p>",
        "id": 212480686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015823
    },
    {
        "content": "<p>We talked a bit about issue triage in <a href=\"#narrow/stream/144729-wg-traits/topic/rustc.20test.20suite.20triage/near/212178691\">this</a> thread</p>",
        "id": 212480690,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015826
    },
    {
        "content": "<p>But, <a href=\"https://github.com/rust-lang-nursery/chalk/issues/556\">chalk#556</a> actually ends up causing a lot of test failures</p>",
        "id": 212480799,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you should probably look</p>",
        "id": 212480811,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015878
    },
    {
        "content": "<p>hmm interesting</p>",
        "id": 212480852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015894
    },
    {
        "content": "<p>But the gist is that we're adding WellFormed (how fitting for today's discussion) clauses to the environment for all of function args</p>",
        "id": 212480887,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015912
    },
    {
        "content": "<p>But the way this is done is incorrect</p>",
        "id": 212480907,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602015924
    },
    {
        "content": "<p>hmm</p>",
        "id": 212481052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015983
    },
    {
        "content": "<p>I'm reading it now</p>",
        "id": 212481088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602015999
    },
    {
        "content": "<p>Ah yes</p>",
        "id": 212481103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016006
    },
    {
        "content": "<p>this is precisely the issue we were talking about some time back</p>",
        "id": 212481111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016011
    },
    {
        "content": "<p>iirc we pinged <span class=\"user-mention silent\" data-user-id=\"131694\">scalexm</span> about it :)</p>",
        "id": 212481128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016019
    },
    {
        "content": "<p>but we never actually <em>got to it</em></p>",
        "id": 212481148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016027
    },
    {
        "content": "<p>I don't even remember</p>",
        "id": 212481155,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016030
    },
    {
        "content": "<p>it's kind of a flaw in the current design of implied bounds</p>",
        "id": 212481181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016045
    },
    {
        "content": "<p>but I'm not sure what's the best fix</p>",
        "id": 212481188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016049
    },
    {
        "content": "<p>I mean, as it is, at least currently, we don't use those clauses</p>",
        "id": 212481221,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016069
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 212481320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016101
    },
    {
        "content": "<p>they are used for implied bounds I .. believe?</p>",
        "id": 212481349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016115
    },
    {
        "content": "<p>or maybe that's just <code>FromEnv</code> clauses and i'm mixing them up</p>",
        "id": 212481370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016126
    },
    {
        "content": "<p>I mean, just removing the WellFormed clauses for function args doesn't cause any test failures</p>",
        "id": 212481395,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016145
    },
    {
        "content": "<p>but having them present causes test failures?</p>",
        "id": 212481412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016157
    },
    {
        "content": "<p>Which, either means we don't have proper test coverage (likely)</p>",
        "id": 212481416,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016159
    },
    {
        "content": "<p>Nope, no test failures with either</p>",
        "id": 212481437,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016171
    },
    {
        "content": "<p>Well, Chalk tests</p>",
        "id": 212481441,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016175
    },
    {
        "content": "<p>rustc, lots</p>",
        "id": 212481449,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016179
    },
    {
        "content": "<p>~1000</p>",
        "id": 212481470,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016193
    },
    {
        "content": "<p>so</p>",
        "id": 212481478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016199
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74535/files#diff-635b28f19e86863f9d886d3b9a7beaa7R217\">this change</a> is potentially reasonable</p>",
        "id": 212481534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016212
    },
    {
        "content": "<p>the issue here has to do with what it means for a function type to be well-formed</p>",
        "id": 212481555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016223
    },
    {
        "content": "<p>rustc's current rules are a bit inconsistent and I think we should change them</p>",
        "id": 212481578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016236
    },
    {
        "content": "<p>is that the right link</p>",
        "id": 212481584,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016241
    },
    {
        "content": "<p>possibly not</p>",
        "id": 212481665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016287
    },
    {
        "content": "<p>doesn't look like it</p>",
        "id": 212481678,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016293
    },
    {
        "content": "<p>and...definitely not</p>",
        "id": 212481683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016295
    },
    {
        "content": "<p><a href=\"https://github.com/jackh726/chalk/commit/07f58e62dc050a32bdfb778a63ec7502c1df6653#diff-a66f74f4c8a6a7a1342ab7c62c3ae8a4L548\">this change</a></p>",
        "id": 212481711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016308
    },
    {
        "content": "<p>yep</p>",
        "id": 212481730,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016317
    },
    {
        "content": "<p>so what rustc currently does is if you have a type like <code>fn(T)</code></p>",
        "id": 212481738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016319
    },
    {
        "content": "<p>then it is well-formed if <code>T</code> is well-formed -- so long as <code>T</code> doesn't involve any bound variables</p>",
        "id": 212481811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016335
    },
    {
        "content": "<p>a type like <code>for&lt;'a&gt; fn(Foo&lt;'a, str&gt;)</code> for example is <em>always</em> well-formed, even if <code>Foo&lt;'a, str&gt;</code> would not normally be well-formed (e.g., because <code>str</code> is not <code>Sized</code>)</p>",
        "id": 212481879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016375
    },
    {
        "content": "<p>I think what we should do in chalk is different</p>",
        "id": 212481894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016381
    },
    {
        "content": "<p>probably what we should do</p>",
        "id": 212481959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016422
    },
    {
        "content": "<p>is to assume that each <code>for&lt;'a&gt; fn(...)</code> type kind of has some \"implied where clauses\" that assume its argument types are well-formed</p>",
        "id": 212482033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016446
    },
    {
        "content": "<p>which kind of means that <em>every</em> <code>fn</code> type is well-formed, though we could tweak it some</p>",
        "id": 212482052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016456
    },
    {
        "content": "<p>this interacts with a long-standing soundness hole that we...really ought to close someday</p>",
        "id": 212482064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016464
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/25860\">https://github.com/rust-lang/rust/issues/25860</a></p>",
        "id": 212482087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016473
    },
    {
        "content": "<p>but the tl;dr is that probably you just want <code>WellFormed(fn)</code> type and not to descend within... I guess</p>",
        "id": 212482118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016493
    },
    {
        "content": "<p>so i.e., that diff is probably correct :)</p>",
        "id": 212482133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016498
    },
    {
        "content": "<p>We have discussed this before</p>",
        "id": 212482153,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016508
    },
    {
        "content": "<p>yep</p>",
        "id": 212482177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016523
    },
    {
        "content": "<p>/me opens that issue, sees a sea of lifetimes and nopes out</p>",
        "id": 212482182,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016524
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/25860#issuecomment-174011431\">more details about the soundness hole</a></p>",
        "id": 212482188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016531
    },
    {
        "content": "<p>I will come back to that later</p>",
        "id": 212482197,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016537
    },
    {
        "content": "<p>I guess, we probably need a test that actually uses those clauses. Whether for good or for bad</p>",
        "id": 212482312,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016588
    },
    {
        "content": "<p>But I think for now, removing it is probably the <em>better</em> option</p>",
        "id": 212482333,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016600
    },
    {
        "content": "<p>yeah</p>",
        "id": 212482439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016661
    },
    {
        "content": "<p>Okay so, we're at 37 minutes in</p>",
        "id": 212482448,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016667
    },
    {
        "content": "<p>I'm not sure what they get used for I guess</p>",
        "id": 212482449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016668
    },
    {
        "content": "<p>one thing that <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> and I were saying is that</p>",
        "id": 212482457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016674
    },
    {
        "content": "<p>we kind of need to create a like \"minimal model of the rust type/trait checker\" that we can use to specify where well-formedness ought to go and how it works</p>",
        "id": 212482522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016690
    },
    {
        "content": "<p>I at least would find that useful</p>",
        "id": 212482531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016694
    },
    {
        "content": "<p>Can you elaborate</p>",
        "id": 212482611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016734
    },
    {
        "content": "<p>yeah</p>",
        "id": 212482658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016759
    },
    {
        "content": "<p>basically when you design a programming langauge you often have a mini \"calculus\"</p>",
        "id": 212482690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016781
    },
    {
        "content": "<p>that kind of describes how its type checker works etc</p>",
        "id": 212482704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016788
    },
    {
        "content": "<p>there have been various attempts at these for rust</p>",
        "id": 212482715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016793
    },
    {
        "content": "<p>anyway I'd like to kind of create one that is part of chalk, even if just in the documentation, and \"canonical\", and it would help us to model what the type-checker does</p>",
        "id": 212482788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016821
    },
    {
        "content": "<p>i.e., describe it basically</p>",
        "id": 212482791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016824
    },
    {
        "content": "<p>and part of that would be defining what it means for types to be well-formned, and when we check that</p>",
        "id": 212482804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016832
    },
    {
        "content": "<p>the rustc impl is a bit .. confusing</p>",
        "id": 212482813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016838
    },
    {
        "content": "<p>anyway I feel like that is not all that well understood anymore</p>",
        "id": 212482825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016846
    },
    {
        "content": "<p>particularly as it interacts with normalization (which in chalk ought to be much simpler)</p>",
        "id": 212482846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016858
    },
    {
        "content": "<p>Yeah</p>",
        "id": 212482848,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016859
    },
    {
        "content": "<p>I mean, I feel like the logic rules help with that?</p>",
        "id": 212482875,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016873
    },
    {
        "content": "<p>yeah. my hope is that eventually chalk also includes the rust type checker</p>",
        "id": 212482912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016894
    },
    {
        "content": "<p>or perhaps that is layered atop chalk</p>",
        "id": 212482921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016900
    },
    {
        "content": "<p>so this would kind of be sketching out how that is supposed to behave</p>",
        "id": 212482942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016909
    },
    {
        "content": "<p>anyway part of that (defining <em>when</em> a type is well-formed) is definitely defined by chalk in the sense of \"how can you prove <code>WellFormed(T)</code></p>",
        "id": 212483015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016932
    },
    {
        "content": "<p>what is not part of chalk right now is like \"when do you have to prove that and when can you assume it holds\"</p>",
        "id": 212483031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016942
    },
    {
        "content": "<p>that's setup by the user of chalk, in the form of what goals it asks to prove and the environment used when proving them</p>",
        "id": 212483054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016956
    },
    {
        "content": "<p>that's what the calculus might help in expressing</p>",
        "id": 212483066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016962
    },
    {
        "content": "<p>Ah, makes sense</p>",
        "id": 212483081,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602016969
    },
    {
        "content": "<p>basically it would help to have this calculus because it would be a way of writing down the answer in a concise form that we can refer back to and think about</p>",
        "id": 212483097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602016979
    },
    {
        "content": "<p>This is definitely beyond my experience/knowledge <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 212483137,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017006
    },
    {
        "content": "<p>no worries, it'll make some sense (hopefully)</p>",
        "id": 212483152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017027
    },
    {
        "content": "<p>I definitely think it could be useful</p>",
        "id": 212483222,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017047
    },
    {
        "content": "<p>How much does <a href=\"https://github.com/rust-lang/chalk/blob/master/chalk-solve/src/wf.rs\">this</a> work towards that</p>",
        "id": 212483387,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017142
    },
    {
        "content": "<p>definitely related</p>",
        "id": 212483527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017196
    },
    {
        "content": "<p>Ok, so, 15 minutes left</p>",
        "id": 212483561,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017214
    },
    {
        "content": "<p>I guess \"source material\"</p>",
        "id": 212483564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017215
    },
    {
        "content": "<p>Are there any other topics regarding WF that we should discuss</p>",
        "id": 212483626,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017252
    },
    {
        "content": "<p>or that people wanted to discuss</p>",
        "id": 212483637,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017256
    },
    {
        "content": "<p>I'm thinking maybe on monday I can devote some time to this</p>",
        "id": 212483745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017311
    },
    {
        "content": "<p>Nice</p>",
        "id": 212483790,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017343
    },
    {
        "content": "<p>yeah so I just blocked out three 2h blocks for chalk</p>",
        "id": 212483833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017380
    },
    {
        "content": "<p>Anyone else have thoughts?</p>",
        "id": 212483835,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017381
    },
    {
        "content": "<p>let's see if I can stick to them :)</p>",
        "id": 212483839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017383
    },
    {
        "content": "<p>for future reference:</p>",
        "id": 212483846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017388
    },
    {
        "content": "<ul>\n<li><time datetime=\"2020-10-12T16:00:00Z\">2020-10-12T12:00:00-04:00</time> - <time datetime=\"2020-10-12T20:00:00Z\">2020-10-12T16:00:00-04:00</time> </li>\n<li><time datetime=\"2020-10-12T18:00:00Z\">2020-10-12T14:00:00-04:00</time> - <time datetime=\"2020-10-12T22:00:00Z\">2020-10-12T18:00:00-04:00</time> </li>\n<li><time datetime=\"2020-10-16T19:00:00Z\">2020-10-16T15:00:00-04:00</time> - <time datetime=\"2020-10-16T21:00:00Z\">2020-10-16T17:00:00-04:00</time></li>\n</ul>",
        "id": 212483971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017458
    },
    {
        "content": "<p>although I was debating about taking PTO on Oct 12 since the schools have off, but I'm not sure, maybe just a half day</p>",
        "id": 212484006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017479
    },
    {
        "content": "<p>I was thinking maybe I'll setup a calendly thing so folks can schedule slots ;)</p>",
        "id": 212484045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017506
    },
    {
        "content": "<p>How did the office hours that you had tried to do at one point work out?</p>",
        "id": 212484113,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017528
    },
    {
        "content": "<p>it was great</p>",
        "id": 212484129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017539
    },
    {
        "content": "<p>but maintaining the repo was sort of annoying</p>",
        "id": 212484133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017544
    },
    {
        "content": "<p>I was thinking about doing it again but this time with calendly</p>",
        "id": 212484141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017549
    },
    {
        "content": "<p>and also the agreement that I would record and post the sessions</p>",
        "id": 212484157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017555
    },
    {
        "content": "<p>Nice</p>",
        "id": 212484188,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017574
    },
    {
        "content": "<p>(last time I kept them private so people could share private code, but it was annoying to write blog posts and summarize)</p>",
        "id": 212484194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017578
    },
    {
        "content": "<p>posting a video would be easier</p>",
        "id": 212484211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017585
    },
    {
        "content": "<p>but one thing at a time</p>",
        "id": 212484237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017602
    },
    {
        "content": "<p>Okay, well. We...sort of talked about WF. But if nobody else has anything to discuss, we can probably end the meeting?</p>",
        "id": 212484345,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017649
    },
    {
        "content": "<p>Any idea what we might talk about next week?</p>",
        "id": 212484364,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017665
    },
    {
        "content": "<p>Const eval maybe?</p>",
        "id": 212484391,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1602017680
    },
    {
        "content": "<p>Sure</p>",
        "id": 212484452,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017719
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang-nursery/chalk/issues/596\">chalk#596</a>)</p>",
        "id": 212484461,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1602017724
    },
    {
        "content": "<p>This was another bit in rustc that had a fair number of failing tests</p>",
        "id": 212484511,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017761
    },
    {
        "content": "<p>hmm interesting</p>",
        "id": 212484624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017812
    },
    {
        "content": "<p>I'm gonna task <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> to at least briefly look over that PR before next meeting</p>",
        "id": 212484629,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017813
    },
    {
        "content": "<p>what does that PR do</p>",
        "id": 212484631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017814
    },
    {
        "content": "<p>should that be on my review queue ;)</p>",
        "id": 212484644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017824
    },
    {
        "content": "<p>I guess reviewing before next meeting would be good, eh?</p>",
        "id": 212484656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017831
    },
    {
        "content": "<p>yes</p>",
        "id": 212484667,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017836
    },
    {
        "content": "<p>even if briefly</p>",
        "id": 212484671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017840
    },
    {
        "content": "<p>just so we can discuss</p>",
        "id": 212484678,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017843
    },
    {
        "content": "<p>Mainly, it adds an <code>Unevaluated</code> variant to Const</p>",
        "id": 212484701,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017855
    },
    {
        "content": "<p>And calls back to <code>RustIrDatabase</code> to try to evaluate it</p>",
        "id": 212484730,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017874
    },
    {
        "content": "<p>great!</p>",
        "id": 212484735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017877
    },
    {
        "content": "<p>exciting</p>",
        "id": 212484740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602017878
    },
    {
        "content": "<p>I have to double check and see if all my review comments were addressed</p>",
        "id": 212484871,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017940
    },
    {
        "content": "<p>but next week if everyone is on board with the changes, I can get it rebased and merged</p>",
        "id": 212484913,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017964
    },
    {
        "content": "<p>if the author isn't around</p>",
        "id": 212484919,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602017968
    },
    {
        "content": "<p>Alright, that's the hour</p>",
        "id": 212485040,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602018015
    },
    {
        "content": "<p>Thanks everyone for coming :)</p>",
        "id": 212485050,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602018020
    }
]