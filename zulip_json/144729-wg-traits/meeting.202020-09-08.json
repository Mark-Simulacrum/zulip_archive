[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 209436300,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595175
    },
    {
        "content": "<p>meeting in 1 minute</p>",
        "id": 209436303,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595180
    },
    {
        "content": "<p>I figured out why I missed the last meeting. No notification set in google calendar <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 209436414,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1599595229
    },
    {
        "content": "<p>Howdy</p>",
        "id": 209436501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595278
    },
    {
        "content": "<p>Alright, so I think the agenda for today is to plan for the sprint?</p>",
        "id": 209436623,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595325
    },
    {
        "content": "<p>We had a couple action items from last time</p>",
        "id": 209436682,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595362
    },
    {
        "content": "<p>Review Chalk upgrade PR (<a href=\"https://github.com/rust-lang/rust/issues/75173\">#75173</a>) (Niko)<br>\nAdd rustc-chalk integration tracking issue (Jack)<br>\nElaborate on opaque types WF w/ implied bounds (detrumi)<br>\nFile issue for auto and builtin traits with builtin types (Jack)<br>\nUpdate well known traits table for closures extern types (Jack)<br>\nUpdate skill tree (Niko)</p>",
        "id": 209436707,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595375
    },
    {
        "content": "<p>Chalk upgrade PR got merged</p>",
        "id": 209436720,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595386
    },
    {
        "content": "<p>I didn't update the skill tree at all :) I did try to do various chalk reviews though</p>",
        "id": 209436740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595401
    },
    {
        "content": "<p>I added a tracking issue (just now), but haven't added details: <a href=\"https://github.com/rust-lang/wg-traits/issues/25\">https://github.com/rust-lang/wg-traits/issues/25</a></p>",
        "id": 209436773,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595406
    },
    {
        "content": "<p>I filed issues for the auto and builtin traits</p>",
        "id": 209436860,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595429
    },
    {
        "content": "<p>Didn't update the table</p>",
        "id": 209436869,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595436
    },
    {
        "content": "<p>I got too distracted with refactoring <code>lowering.rs</code> (was 2229 lines, my branch currently has it at 1232)</p>",
        "id": 209436924,
        "sender_full_name": "detrumi",
        "timestamp": 1599595445
    },
    {
        "content": "<p>That lowering cleanup was so nice!</p>",
        "id": 209436953,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595467
    },
    {
        "content": "<p>Also, we now have <code>Foreign</code> in Chalk</p>",
        "id": 209436975,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595479
    },
    {
        "content": "<p>did the lowering cleanup land?</p>",
        "id": 209437011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595496
    },
    {
        "content": "<p>Yes</p>",
        "id": 209437035,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595506
    },
    {
        "content": "<p>The first part, working on the second part</p>",
        "id": 209437052,
        "sender_full_name": "detrumi",
        "timestamp": 1599595514
    },
    {
        "content": "<p>We can iterate a little bit more on it, if there are other things to do</p>",
        "id": 209437069,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595522
    },
    {
        "content": "<p>But it's already a great start</p>",
        "id": 209437088,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595530
    },
    {
        "content": "<p>I also said that I was going to start thinking about sprint goals. But I didn't :/</p>",
        "id": 209437186,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595563
    },
    {
        "content": "<p>But I do have some ideas</p>",
        "id": 209437210,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595569
    },
    {
        "content": "<p>Let me make a hackmd</p>",
        "id": 209437223,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595574
    },
    {
        "content": "<p><a href=\"https://hackmd.io/s1MfBn4bRjyir-aqHZzbKQ\">https://hackmd.io/s1MfBn4bRjyir-aqHZzbKQ</a></p>",
        "id": 209437250,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595592
    },
    {
        "content": "<p>I am wondering how many people are around and want to participate in the sprint</p>",
        "id": 209437330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595639
    },
    {
        "content": "<p>That might affect how ambitious we get with goals</p>",
        "id": 209437351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595655
    },
    {
        "content": "<p>Yeah, that's important to think about</p>",
        "id": 209437354,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595656
    },
    {
        "content": "<p>Also, though, before we start talking about the sprint goals themselves, we should think about longer-term, like what needs to be done still</p>",
        "id": 209437467,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595705
    },
    {
        "content": "<p>Right. So, I think that the \"north star\" we are still shooting for is to get a \"true MVP\" for rustc-chalk integration</p>",
        "id": 209437591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595768
    },
    {
        "content": "<p>where exactly what \"true MVP\" means is perhaps worth re-iterating</p>",
        "id": 209437618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595783
    },
    {
        "content": "<p>Right</p>",
        "id": 209437635,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595791
    },
    {
        "content": "<p>Unfortunately I'm a little busy with school/projects/new-grad grind, so I won't be too active this sprint :/<br>\nStill lurking and following what's up with the project!</p>",
        "id": 209437701,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1599595804
    },
    {
        "content": "<p>but I <em>think</em> ideally it includes using the same type definition, so that we don't have to map back and forth (though 1:1 mapping might also suffice)</p>",
        "id": 209437735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595817
    },
    {
        "content": "<p>Like, at what point do we want to \"recommend\" that people start \"playing\" with it, besides just working on the integration itself?</p>",
        "id": 209437774,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595837
    },
    {
        "content": "<p>I guess I'm shooting for \"functional correctness\"</p>",
        "id": 209437775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"218805\">Mark Drobnak</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2009.2E08.2E2020/near/209437701\">said</a>:</p>\n<blockquote>\n<p>Unfortunately I'm a little busy with school/projects/new-grad grind, so I won't be too active this sprint :/<br>\nStill lurking and following what's up with the project!</p>\n</blockquote>\n<p>Same just lurking</p>",
        "id": 209437785,
        "sender_full_name": "oliver",
        "timestamp": 1599595842
    },
    {
        "content": "<p>I don't know if that's at 100% test (rustc) passing</p>",
        "id": 209437856,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595887
    },
    {
        "content": "<p>in terms of my own activity level: I would like to participate <em>but</em> my hands are also quite full with other tasks, so I would say that my time for coding will be relatively limited</p>",
        "id": 209437866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595893
    },
    {
        "content": "<p>Or if it's like 95%</p>",
        "id": 209437868,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595894
    },
    {
        "content": "<p>it's probably not 100%</p>",
        "id": 209437881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595901
    },
    {
        "content": "<p>I would say that it's at the point where it's feasible to go through the failing tests though</p>",
        "id": 209437947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595926
    },
    {
        "content": "<p>and that we kind of know why they are failing</p>",
        "id": 209437956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595931
    },
    {
        "content": "<p>I agree</p>",
        "id": 209437965,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595936
    },
    {
        "content": "<p>we can use a <code>--compare-mode</code> tracker too</p>",
        "id": 209437967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599595938
    },
    {
        "content": "<p>Was about to say: I think one of the difficult problems right now is that there is just <em>too many</em> failing tests</p>",
        "id": 209437990,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595954
    },
    {
        "content": "<p>I would like to participate but I'm also busy with other stuff</p>",
        "id": 209438048,
        "sender_full_name": "Joshua Ani",
        "timestamp": 1599595989
    },
    {
        "content": "<p>Even when you use my variance branch as a base (which is one of the bigger things to tackle), it still is a lot of failing tests</p>",
        "id": 209438054,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599595991
    },
    {
        "content": "<p>Are they failing for many different reasons or common ones? (like not implementing a Rust lang feature)</p>",
        "id": 209438066,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1599595999
    },
    {
        "content": "<p>That's a difficult question to answer. Like, I haven't gone through the majority of them.</p>",
        "id": 209438127,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596030
    },
    {
        "content": "<p>I think a large part are failing because of associated type ambiguity</p>",
        "id": 209438188,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596046
    },
    {
        "content": "<p>I haven't tried with the recursive solver</p>",
        "id": 209438219,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596059
    },
    {
        "content": "<p>There are some tests that don't finish</p>",
        "id": 209438231,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596066
    },
    {
        "content": "<p>Some like broken mir problems</p>",
        "id": 209438244,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596076
    },
    {
        "content": "<p>that's tricky</p>",
        "id": 209438248,
        "sender_full_name": "detrumi",
        "timestamp": 1599596080
    },
    {
        "content": "<p>because then you can't run all tests in one go</p>",
        "id": 209438261,
        "sender_full_name": "detrumi",
        "timestamp": 1599596086
    },
    {
        "content": "<p>Right</p>",
        "id": 209438271,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596092
    },
    {
        "content": "<p>I started adding some notes into the hackmd</p>",
        "id": 209438330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596113
    },
    {
        "content": "<p>I think the other side of things is continued rust-analyzer usage</p>",
        "id": 209438348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596122
    },
    {
        "content": "<p>so some big problems need to be tackled first then</p>",
        "id": 209438354,
        "sender_full_name": "detrumi",
        "timestamp": 1599596125
    },
    {
        "content": "<p>So, I think the way to go, is to starting by listing the things we <em>know</em> aren't done and probably have a big impact</p>",
        "id": 209438367,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596132
    },
    {
        "content": "<p>ninja'd</p>",
        "id": 209438380,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596141
    },
    {
        "content": "<p>The RA side is already ongoing, generators should unlock async in RA soon I think</p>",
        "id": 209438492,
        "sender_full_name": "detrumi",
        "timestamp": 1599596185
    },
    {
        "content": "<p>In terms of this sprint, I'm going to be around, and will have some time to work on smaller things. And I'll continually update the rustc integration. But I can't take on any \"new\" big projects</p>",
        "id": 209438529,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.2009.2E08.2E2020/near/209438348\">said</a>:</p>\n<blockquote>\n<p>I think the other side of things is continued rust-analyzer usage</p>\n</blockquote>\n<p>Yeah, that was the other thing to mention</p>",
        "id": 209438567,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596224
    },
    {
        "content": "<p>Then, of course, the shared type library</p>",
        "id": 209438588,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596236
    },
    {
        "content": "<p>I guess the shared type library and MVP of rustc-integration are tightly connected</p>",
        "id": 209438718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596287
    },
    {
        "content": "<p>I'm of the opinion that pushing towards shared type library seems like a reasonably practical way to fix a number of rustc bugs (we'll just need a lot less mapping, I suspect that's part of the problems we're seeing)</p>",
        "id": 209438741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596309
    },
    {
        "content": "<p>shared type library should be relatively easy to split into tasks that can be picked up by newer people, I think?</p>",
        "id": 209438749,
        "sender_full_name": "detrumi",
        "timestamp": 1599596317
    },
    {
        "content": "<p>Actually, I'm not super familiar on the rust-analyzer side what needs done, other than generators</p>",
        "id": 209438757,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596327
    },
    {
        "content": "<p>Yeah, I think so, and I wonder if that is something we should make a big push for this sprint</p>",
        "id": 209438768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596335
    },
    {
        "content": "<p>I agree that rust-analyzer is less clear, it'd be good to get feedback from <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> on this point</p>",
        "id": 209438784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596345
    },
    {
        "content": "<p>I still want to pursue e.g. the deeper integration with salsa, but not sure that's on the table for this sprint</p>",
        "id": 209438812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596360
    },
    {
        "content": "<p>It's mostly that once we implement stuff like generators, the RA integration can be updated to make use of new functionality</p>",
        "id": 209438836,
        "sender_full_name": "detrumi",
        "timestamp": 1599596379
    },
    {
        "content": "<p>I don't think we need  to do that much there, since that'll follow from the work integrating with rustc</p>",
        "id": 209438856,
        "sender_full_name": "detrumi",
        "timestamp": 1599596397
    },
    {
        "content": "<p>Well, for shared type library, there are some smaller things (like the <code>kind</code> -&gt; <code>kind()</code> refactor) that are easy or new people to pick up. But then there a number of larger issues (<code>Param</code>, late-bound vars, region handling) that aren't easy</p>",
        "id": 209438924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596409
    },
    {
        "content": "<p>I think there is still enough \"low hanging\" fruit though</p>",
        "id": 209439007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596459
    },
    {
        "content": "<p>but I agree that the binders are the hardest bit</p>",
        "id": 209439023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596467
    },
    {
        "content": "<p>there is stuff like \"renaming type fold to type map\", for example</p>",
        "id": 209439062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596485
    },
    {
        "content": "<p>Right</p>",
        "id": 209439087,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596494
    },
    {
        "content": "<p>not to mention trying to unify the two folders</p>",
        "id": 209439116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596514
    },
    {
        "content": "<p>more generally</p>",
        "id": 209439163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596524
    },
    {
        "content": "<p>(e.g., chalk's folder returns a <code>Result</code>...)</p>",
        "id": 209439174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596529
    },
    {
        "content": "<p>&lt;sidenote&gt;<br>\nKind of random, but this group might be interested in the LALRPOP IntelliJ plugin I recently started working on:<br>\n<a href=\"https://github.com/Mcat12/intellij-lalrpop\">https://github.com/Mcat12/intellij-lalrpop</a></p>\n<p>Might make it easier to work on the Chalk testing framework.<br>\n&lt;/sidenote&gt;</p>",
        "id": 209439208,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1599596556
    },
    {
        "content": "<p>Yeah, so maybe or this sprint, it's worth enumerating some of the easier things to do for the shared type library</p>",
        "id": 209439233,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596567
    },
    {
        "content": "<p>the <code>kind</code> -&gt; <code>kind()</code> is kind of done, right?</p>",
        "id": 209439324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596625
    },
    {
        "content": "<p>Yes</p>",
        "id": 209439342,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596631
    },
    {
        "content": "<p>Unless we want to return by value, instead of ref</p>",
        "id": 209439397,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596643
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75077\">https://github.com/rust-lang/rust/pull/75077</a> merged ( <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span>)</p>",
        "id": 209439413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596647
    },
    {
        "content": "<p>But I don't know if that was decided to definitely not</p>",
        "id": 209439418,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596652
    },
    {
        "content": "<p>yeah, that's a possible follow up</p>",
        "id": 209439449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596667
    },
    {
        "content": "<p>And there is <code>kind()</code> -&gt; <code>kind(tcx)</code></p>",
        "id": 209439458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596670
    },
    {
        "content": "<p>Right, <a href=\"#narrow/stream/144729-wg-traits/topic/fn.20kind%28%29.20-.3E.20TypeKind.20or.20-.3E.20.26TypeKind/near/208444172\">this topic</a> on the value/ref thing</p>",
        "id": 209439462,
        "sender_full_name": "detrumi",
        "timestamp": 1599596673
    },
    {
        "content": "<p>So, there are few smaller things to be done on the rustc side for the shared type library</p>",
        "id": 209439599,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596742
    },
    {
        "content": "<p>So... the <code>kind() -&gt; kind(tcx)</code> change...</p>",
        "id": 209439604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596743
    },
    {
        "content": "<p>isn't <em>strictly</em> necessary I suppose</p>",
        "id": 209439618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596751
    },
    {
        "content": "<p>Anything on the chalk side?</p>",
        "id": 209439619,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596752
    },
    {
        "content": "<p><em>I think by value would be a noticeable improvement</em></p>",
        "id": 209439637,
        "sender_full_name": "lcnr",
        "timestamp": 1599596761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> ergonomics, perf, or both?</p>",
        "id": 209439698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596774
    },
    {
        "content": "<p>ergonomics mostly</p>",
        "id": 209439716,
        "sender_full_name": "lcnr",
        "timestamp": 1599596785
    },
    {
        "content": "<p>it might slightly improve perf but not by much I think</p>",
        "id": 209439740,
        "sender_full_name": "lcnr",
        "timestamp": 1599596802
    },
    {
        "content": "<p>I have to follow up more with <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> to see what the problem was they ran into and whether it can be easily circumvented. I understood their comment but I already forgot.</p>",
        "id": 209439753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209439618\">said</a>:</p>\n<blockquote>\n<p>isn't <em>strictly</em> necessary I suppose</p>\n</blockquote>\n<p>If we start assuming that the <code>Ty</code> itself holds all the information, then no</p>",
        "id": 209439758,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596812
    },
    {
        "content": "<p>so re: <code>kind(tcx)</code> what I mean is</p>",
        "id": 209439789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596826
    },
    {
        "content": "<p>that's needed for the generic case so that rust-analyzer works etc</p>",
        "id": 209439807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596835
    },
    {
        "content": "<p>but we could certainly have an \"optional\" trait that supports <code>kind</code> with no argument</p>",
        "id": 209439822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596848
    },
    {
        "content": "<p>which chalk wouldn't use</p>",
        "id": 209439828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596850
    },
    {
        "content": "<p>but which rustc can implement</p>",
        "id": 209439849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596863
    },
    {
        "content": "<p>something like <code>trait NoContextInterner: Interner</code></p>",
        "id": 209439870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596874
    },
    {
        "content": "<p>and then <code>fn kind() -&gt; Self::Kind where I: NoContextInterner</code></p>",
        "id": 209439924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596885
    },
    {
        "content": "<p>the goal being just to avoid tons of churn in rustc</p>",
        "id": 209439942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596896
    },
    {
        "content": "<p>and focus on the more important things</p>",
        "id": 209439959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596906
    },
    {
        "content": "<p>Ah, interesting. Haven't thought about that</p>",
        "id": 209440009,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596938
    },
    {
        "content": "<p>speaking of super important things, chalk calls it \"data\" and rustc calls it \"kind\"</p>",
        "id": 209440014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596939
    },
    {
        "content": "<p>seems like we should use on term :)</p>",
        "id": 209440033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596949
    },
    {
        "content": "<p>I guess the other thing is integrating the flags into chalk</p>",
        "id": 209440076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599596974
    },
    {
        "content": "<p>Indeed, that's one of the points on the tracking issue</p>",
        "id": 209440088,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599596981
    },
    {
        "content": "<p>\"kind\" seems like it would be more of an enum signaling the kind of data, not the data itself?</p>",
        "id": 209440101,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1599596987
    },
    {
        "content": "<p>might cause some churn on the chalk/RA integration side, but that's easier to change than rustc to be sure</p>",
        "id": 209440170,
        "sender_full_name": "detrumi",
        "timestamp": 1599597004
    },
    {
        "content": "<p>Flags are <em>not</em> in the tracking issue, but should be</p>",
        "id": 209440171,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597004
    },
    {
        "content": "<p>I'm adding it to the \"chalk work items\" list</p>",
        "id": 209440216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597028
    },
    {
        "content": "<p>I have to look more at how flags are done in rustc</p>",
        "id": 209440267,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209440170\">said</a>:</p>\n<blockquote>\n<p>might cause some churn on the chalk/RA integration side, but that's easier to change than rustc to be sure</p>\n</blockquote>\n<p>yeah I've been somewhat inclined to just adopt the rustc terminology for the sake of ease</p>",
        "id": 209440268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597067
    },
    {
        "content": "<p>re: flags, basically, there are some flags per interned type, and they indicate some hints about what lies within</p>",
        "id": 209440322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597101
    },
    {
        "content": "<p>I think that's the direction we've been headed in</p>",
        "id": 209440324,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597102
    },
    {
        "content": "<p>so maybe we should just make a chalk work item for \"rename from data to kind\"--</p>",
        "id": 209440384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597122
    },
    {
        "content": "<p>it doesn't fit maybe quite as well for all the things</p>",
        "id": 209440403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597128
    },
    {
        "content": "<p>Like the recent <code>Foreign</code> vs <code>Extern</code></p>",
        "id": 209440406,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597129
    },
    {
        "content": "<p>that was slightly confusing</p>",
        "id": 209440463,
        "sender_full_name": "detrumi",
        "timestamp": 1599597155
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209440403\">said</a>:</p>\n<blockquote>\n<p>it doesn't fit maybe quite as well for all the things</p>\n</blockquote>\n<p>I guess that's an argument for <code>data</code> over <code>kind</code></p>",
        "id": 209440494,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597176
    },
    {
        "content": "<p>I'm thinking of cases like <a href=\"https://rust-lang.github.io/chalk/chalk_ir/interner/trait.Interner.html#tymethod.substitution_data\"><code>substitution_data</code></a></p>",
        "id": 209440527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597199
    },
    {
        "content": "<p>Right</p>",
        "id": 209440539,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597204
    },
    {
        "content": "<p>or <a href=\"https://rust-lang.github.io/chalk/chalk_ir/interner/trait.Interner.html#tymethod.program_clauses_data\"><code>program_clauses_data</code></a></p>",
        "id": 209440552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597212
    },
    {
        "content": "<p>that pushes me mildly towards moving away from <code>kind</code> and towards <code>data</code> on rustc side</p>",
        "id": 209440593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597240
    },
    {
        "content": "<p>though dang what a refactor :)</p>",
        "id": 209440645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597245
    },
    {
        "content": "<p>So...should we poll <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> and see how people feel about <code>kind</code>-&gt;<code>data</code></p>",
        "id": 209440648,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597245
    },
    {
        "content": "<p>ninja'd again</p>",
        "id": 209440662,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597255
    },
    {
        "content": "<p>seems like an MCP might be a way to kick off the discussion</p>",
        "id": 209440670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597259
    },
    {
        "content": "<p>Indeed</p>",
        "id": 209440683,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597266
    },
    {
        "content": "<p>the other option would be to have two distinct terms, one for the \"kind\" of a singular thing, and one for the \"slice\" or \"elements\" of a list</p>",
        "id": 209440716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597290
    },
    {
        "content": "<p>which reminds me, if we're going to map all the rustc types, there is probably more work to be done beyond just <code>Ty</code>.. :)</p>",
        "id": 209440760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597320
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 209440780,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597335
    },
    {
        "content": "<p>Well, a point to bring up: <code>GenericArg</code></p>",
        "id": 209440805,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597350
    },
    {
        "content": "<p>well e.g. most obviously we have <code>ty::Region&lt;'tcx&gt;</code> vs chalk's <code>Lifetime&lt;I&gt;</code></p>",
        "id": 209440827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597362
    },
    {
        "content": "<p>Oh, naming</p>",
        "id": 209440882,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597371
    },
    {
        "content": "<p>I don't just mean the name</p>",
        "id": 209440887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597373
    },
    {
        "content": "<p>but also the name</p>",
        "id": 209440890,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597376
    },
    {
        "content": "<p>I mean that we have <code>type Region = &amp;RegionKind</code></p>",
        "id": 209440908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597388
    },
    {
        "content": "<p>which means people write <code>match *r { .. }</code></p>",
        "id": 209440920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597395
    },
    {
        "content": "<p>but we want them to write <code>match r.kind(tcx) { }</code></p>",
        "id": 209440936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597402
    },
    {
        "content": "<p>or <code>r.data(tcx)</code>, depending :)</p>",
        "id": 209440947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209440805\">said</a>:</p>\n<blockquote>\n<p>Well, a point to bring up: <code>GenericArg</code></p>\n</blockquote>\n<p>In rustc, this is packed, and unpack gives you a value; in chalk, you get a ref</p>",
        "id": 209440959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597413
    },
    {
        "content": "<p>oh, hmm</p>",
        "id": 209441028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597458
    },
    {
        "content": "<p>Yeah, similar with <code>Ty</code>: it's <code>type Ty&lt;'tcx&gt; = &amp;'tcx TyS</code></p>",
        "id": 209441035,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597461
    },
    {
        "content": "<p>/me wonders why he thought that was ok</p>",
        "id": 209441045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209441035\">said</a>:</p>\n<blockquote>\n<p>Yeah, similar with <code>Ty</code>: it's <code>type Ty&lt;'tcx&gt; = &amp;'tcx TyS</code></p>\n</blockquote>\n<p>well, that's ok</p>",
        "id": 209441063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597475
    },
    {
        "content": "<p>or at least more ok</p>",
        "id": 209441069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597480
    },
    {
        "content": "<p>because <code>TyS</code> is kind of an opaque type</p>",
        "id": 209441113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597487
    },
    {
        "content": "<p>we do have to account for all of its various methods in the end though</p>",
        "id": 209441133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597499
    },
    {
        "content": "<p>Right, true. <code>TyS</code> is a bit different than <code>RegionKind</code></p>",
        "id": 209441168,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597520
    },
    {
        "content": "<p>I guess maybe we need an indirection for <code>RegionKind</code></p>",
        "id": 209441178,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597530
    },
    {
        "content": "<p>Which...eh</p>",
        "id": 209441183,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597535
    },
    {
        "content": "<p>basically I'm saying that there is a PR that is the equivalent of converting <code>match ty.kind {</code> to <code>ty.kind()</code> but for regions</p>",
        "id": 209441187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597537
    },
    {
        "content": "<p>I guess you're right that I'm not 100% sure what that looks like, anyway , I noted it down</p>",
        "id": 209441241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597565
    },
    {
        "content": "<p>Ok, so, we're 40 minutes in</p>",
        "id": 209441257,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597575
    },
    {
        "content": "<p>(I'm not sure btw which name I prefer :) coming from polonius I hope we eventually adopt <em>origin</em> instead of both region and lifetime, but that's neither here nor there)</p>",
        "id": 209441272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597584
    },
    {
        "content": "<p>Is this helpful to keep going through these details?</p>",
        "id": 209441278,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597585
    },
    {
        "content": "<p>Or, should we think about other sprint goals</p>",
        "id": 209441353,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597604
    },
    {
        "content": "<p>I was wondering about that :) I think it was  fairly helpful in bringing that context back to mind</p>",
        "id": 209441380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597622
    },
    {
        "content": "<p>but we've peeled off a lot of work items</p>",
        "id": 209441393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597630
    },
    {
        "content": "<p>Right</p>",
        "id": 209441403,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597635
    },
    {
        "content": "<p>I wonder if we can come up with a good \"metric\" or \"overall goal\" that we can strive for</p>",
        "id": 209441445,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597661
    },
    {
        "content": "<p>Or if it's just really work items</p>",
        "id": 209441454,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597666
    },
    {
        "content": "<p>Like, I think the goal of \"chalk and rustc share the same type library\" is infeasible this sprint</p>",
        "id": 209441472,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597683
    },
    {
        "content": "<p>goal for the sprint you mean?</p>",
        "id": 209441478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597687
    },
    {
        "content": "<p>yes</p>",
        "id": 209441483,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597690
    },
    {
        "content": "<p>documented posted issues are good if you're hoping for new people. :^)</p>",
        "id": 209441502,
        "sender_full_name": "Jubilee",
        "timestamp": 1599597708
    },
    {
        "content": "<p>one thing might be \"name alignment\" between rustc/chalk</p>",
        "id": 209441517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597717
    },
    {
        "content": "<p>at the end of the sprint, it will probably be clear what the library will look like</p>",
        "id": 209441598,
        "sender_full_name": "detrumi",
        "timestamp": 1599597737
    },
    {
        "content": "<p>Yeah</p>",
        "id": 209441599,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597737
    },
    {
        "content": "<p>yes, agreed re: issues, we're kind of figuring out what the crop of issues that we plan to create are :) but the master tracking issue for this work is <a href=\"https://github.com/rust-lang/wg-traits/issues/16\">rust-lang/wg-traits#16</a></p>",
        "id": 209441633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597758
    },
    {
        "content": "<p>I mean, if we can get someone (maybe me, maybe not) to push the <code>Param</code> work through, we could basically get all the types and names the same</p>",
        "id": 209441650,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597767
    },
    {
        "content": "<p>Anyways, let's think about this async</p>",
        "id": 209441732,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597810
    },
    {
        "content": "<p>And focus the last 15 minutes on other potential sprint goals</p>",
        "id": 209441763,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597824
    },
    {
        "content": "<p>yep, this was good enough, let's turn a bit</p>",
        "id": 209441767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597825
    },
    {
        "content": "<p>so you have the variance work <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> and I think a clear goal should be to land that</p>",
        "id": 209441839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599597847
    },
    {
        "content": "<p>So, the big thing with the rest of the things on my mind, is I would really like <em>someone</em> committed to each</p>",
        "id": 209441860,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597857
    },
    {
        "content": "<p>The variances work <span class=\"user-mention\" data-user-id=\"271698\">@Super Tuple</span> and <span class=\"user-mention\" data-user-id=\"218710\">@David Ross</span> are working on, but I haven't heard from them in a couple weeks</p>",
        "id": 209441902,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597882
    },
    {
        "content": "<p>I think if we can get some tests for them, that's probably easily finished</p>",
        "id": 209441935,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597902
    },
    {
        "content": "<p>(by easily, I mean timewise by sprint end)</p>",
        "id": 209441959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597913
    },
    {
        "content": "<p>The placeholder canonicalization, also I think is \"close to done\", but <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> did a lot of the work there</p>",
        "id": 209442009,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597950
    },
    {
        "content": "<p>I don't know if they're around</p>",
        "id": 209442034,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597957
    },
    {
        "content": "<p>Then the last \"Chalk\" thing I can think of, is adding <code>'static</code></p>",
        "id": 209442136,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597992
    },
    {
        "content": "<p>Which shouldn't be too bad</p>",
        "id": 209442149,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599597998
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-09-08/near/209441935\">said</a>:</p>\n<blockquote>\n<p>I think if we can get some tests for them, that's probably easily finished</p>\n</blockquote>\n<p>I think I can commit to that, but it would probably be next week</p>",
        "id": 209442179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598020
    },
    {
        "content": "<p>On the rustc side, the three big things are <code>Param</code> changes, region handling (don't know how much is rustc, and how much is adding variants in chalk), and the late-bound variables</p>",
        "id": 209442313,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598086
    },
    {
        "content": "<p>I think we should focus on the late-bound maybe</p>",
        "id": 209442348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598106
    },
    {
        "content": "<p>Right, so, for that:</p>",
        "id": 209442376,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598121
    },
    {
        "content": "<p>well i'm not sure which but those are all big :)</p>",
        "id": 209442380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598123
    },
    {
        "content": "<p>and I'd like to focus on one</p>",
        "id": 209442390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598128
    },
    {
        "content": "<p>For late-bound regions, I think the path is fairly straightforward</p>",
        "id": 209442423,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598145
    },
    {
        "content": "<p>First, we'll have to start tracking the number of late-bound regions</p>",
        "id": 209442452,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598160
    },
    {
        "content": "<p>Which, I think is the biggest hurdle for making sure perf doesn't suffer</p>",
        "id": 209442471,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598179
    },
    {
        "content": "<p>Yeah, I think it's relatively straight forwrard too</p>",
        "id": 209442496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598201
    },
    {
        "content": "<p>this is why I mentioned it</p>",
        "id": 209442541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598205
    },
    {
        "content": "<p>Second, is a bit more unclear.</p>",
        "id": 209442558,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598216
    },
    {
        "content": "<p>that is, there are some big questions to answer, but the questions seem better scoped</p>",
        "id": 209442560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598216
    },
    {
        "content": "<p>But you could imagine we change all regions to be \"late-bound\", or \"tracked\" by <code>Binder</code></p>",
        "id": 209442606,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598245
    },
    {
        "content": "<p>Also, I don't quite remember. Where does <code>Binder</code> bind types</p>",
        "id": 209442683,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598295
    },
    {
        "content": "<p>it doesn't</p>",
        "id": 209442695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598302
    },
    {
        "content": "<p>Hmm</p>",
        "id": 209442716,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598316
    },
    {
        "content": "<p>this is one of the <em>nice</em> things about rustc's approach, or at least quirks :)</p>",
        "id": 209442741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598322
    },
    {
        "content": "<p>that is, there is no central list of the bound things,</p>",
        "id": 209442773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598333
    },
    {
        "content": "<p>(The documentation says \"Binder is a binder for higher-ranked lifetimes <em>or types.</em>\")</p>",
        "id": 209442781,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598339
    },
    {
        "content": "<p>so each one of them kind of tells you what its kind is when you find it</p>",
        "id": 209442788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598344
    },
    {
        "content": "<p>i.e., if you see a <code>TyBound(DebruijnIndex)</code>, it is a type variable</p>",
        "id": 209442808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598359
    },
    {
        "content": "<p>I think I got lost</p>",
        "id": 209442874,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598402
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/enum.TyKind.html#variant.Bound\"><code>TyKind::Bound</code></a></p>",
        "id": 209442879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598404
    },
    {
        "content": "<p>so basically imagine that you have <code>forall&lt;T, 'a&gt; { ... }</code>in chalk</p>",
        "id": 209442897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598413
    },
    {
        "content": "<p>in chalk there is a list <code>[Ty, Lifetime]</code> for the kinds of things in that binder</p>",
        "id": 209442910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598424
    },
    {
        "content": "<p>But, are those always enclosed in a <code>Binder</code>?</p>",
        "id": 209442911,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598424
    },
    {
        "content": "<p>and that is associated with the binder itself</p>",
        "id": 209442932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598438
    },
    {
        "content": "<p>but in rustc, you just have \"binder\", and to know that it binds a type and a lifetime, you have to walk the <code>...</code> and look for what is mentioned there</p>",
        "id": 209442983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598458
    },
    {
        "content": "<p>so e.g. <code>forall&lt;T, 'a&gt; { T: 'a }</code> might have <code>Binder { Ty::Bound(0, T): Region::Bound(0, 'a) }</code></p>",
        "id": 209443007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598480
    },
    {
        "content": "<p>now I can see that it binds one type and one region, but I have to search</p>",
        "id": 209443024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598497
    },
    {
        "content": "<p>this doesn't work so well if you have an unused variable, as an aside, which will probalby lead us to some annoying backwards compatibility quirks</p>",
        "id": 209443048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598513
    },
    {
        "content": "<p>e.g., rustc has no way to represent <code>for&lt;'b&gt; { T: 'a }</code> (where <code>'b</code> is not used)</p>",
        "id": 209443070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598528
    },
    {
        "content": "<p>I think I tried changing Chalk to not track bound vars in <code>Binders</code></p>",
        "id": 209443092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598548
    },
    {
        "content": "<p>I don't remember how far I got</p>",
        "id": 209443104,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598554
    },
    {
        "content": "<p>(when that code was written, binders <em>only</em> tracked regions, but we extended it to track types at some point)</p>",
        "id": 209443125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598562
    },
    {
        "content": "<p>I think this is only used in limited places though</p>",
        "id": 209443163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598575
    },
    {
        "content": "<p>(I have to  start wrapping up)</p>",
        "id": 209443172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598587
    },
    {
        "content": "<p>it seems to me that our focus will be on shared type library this sprint</p>",
        "id": 209443197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598602
    },
    {
        "content": "<p>Right, so last 4 minutes</p>",
        "id": 209443198,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598604
    },
    {
        "content": "<p>and wrapping up some rustc-integration items</p>",
        "id": 209443216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598609
    },
    {
        "content": "<p>Lots of design work left, but I think there are some first steps that are clear?</p>",
        "id": 209443284,
        "sender_full_name": "detrumi",
        "timestamp": 1599598641
    },
    {
        "content": "<p>So there should be some tickets for those</p>",
        "id": 209443306,
        "sender_full_name": "detrumi",
        "timestamp": 1599598660
    },
    {
        "content": "<p>I think three \"big\" goals:<br>\n1) shared type library work<br>\n2) Variances<br>\n3) Late-bound regions in rustc refactoring (if somebody can pick it up)</p>",
        "id": 209443312,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598666
    },
    {
        "content": "<p>In terms of timing, are we still doing 6 weeks?</p>",
        "id": 209443417,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598724
    },
    {
        "content": "<p>And are we starting <em>today</em></p>",
        "id": 209443425,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598728
    },
    {
        "content": "<p>I'm not going to have much more time this week</p>",
        "id": 209443474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598761
    },
    {
        "content": "<p>so we could plan to start next week and use this week at most to prepare some tasks and items</p>",
        "id": 209443498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599598774
    },
    {
        "content": "<p>we could also wait one more week before starting to get a bit more organized</p>",
        "id": 209443508,
        "sender_full_name": "detrumi",
        "timestamp": 1599598779
    },
    {
        "content": "<p>ninja'd</p>",
        "id": 209443510,
        "sender_full_name": "detrumi",
        "timestamp": 1599598783
    },
    {
        "content": "<p>Works for me :)</p>",
        "id": 209443511,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598783
    },
    {
        "content": "<p>Ok so, 9/15-10/27</p>",
        "id": 209443628,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598820
    },
    {
        "content": "<p>Okay, then that is meeting end :)</p>",
        "id": 209443687,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598855
    },
    {
        "content": "<p>Thanks everyone for coming!</p>",
        "id": 209443708,
        "sender_full_name": "Jack Huey",
        "timestamp": 1599598866
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> !</p>",
        "id": 209443988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1599599007
    },
    {
        "content": "<blockquote>\n<p>though dang what a refactor :)</p>\n</blockquote>\n<p>I’m up for the challenge 😁<br>\nI can probably take the time to do the kind -&gt; data transition. ty.kind -&gt; ty.kind() warmed me up :)</p>",
        "id": 209480269,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1599637339
    }
]