[
    {
        "content": "<p>(Hey all, I can't make the meeting today due to a last-minute conflict; I <em>may</em> be  able to loosely monitor Zulip, but prob not much)</p>",
        "id": 203086605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594117470
    },
    {
        "content": "<p>That's okay. We aren't having a full meeting today anyways. It'll mostly just be me recapping the sprint as I write a blog post</p>",
        "id": 203129631,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594140914
    },
    {
        "content": "<p>Ok meeting time :)</p>",
        "id": 203195555,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152026
    },
    {
        "content": "<p>\"meeting\"</p>",
        "id": 203195566,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152030
    },
    {
        "content": "<p>I won't ping the entire group, since this is going to be super informal</p>",
        "id": 203195607,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152057
    },
    {
        "content": "<p>Sounds good</p>",
        "id": 203195619,
        "sender_full_name": "detrumi",
        "timestamp": 1594152066
    },
    {
        "content": "<p>I guess, a couple things to do today</p>",
        "id": 203195671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152090
    },
    {
        "content": "<p>It is the last day of the sprint :)</p>",
        "id": 203195696,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152108
    },
    {
        "content": "<p>link: <a href=\"https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg\">https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg</a></p>",
        "id": 203195724,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152122
    },
    {
        "content": "<p>looking through the PRs merged in the last week...</p>",
        "id": 203195804,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152163
    },
    {
        "content": "<p>we now have enum support :)</p>",
        "id": 203195920,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152222
    },
    {
        "content": "<p>and type outlives</p>",
        "id": 203195945,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152234
    },
    {
        "content": "<p>huh, I missed the enums part</p>",
        "id": 203195999,
        "sender_full_name": "detrumi",
        "timestamp": 1594152248
    },
    {
        "content": "<p>that's super nice because it means that we no longer need to do <em>any</em> special handling in rustc for typenames</p>",
        "id": 203196071,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152291
    },
    {
        "content": "<p>Oh right, that's part of the adt stuff</p>",
        "id": 203196106,
        "sender_full_name": "detrumi",
        "timestamp": 1594152308
    },
    {
        "content": "<p>And means we can remove the <code>force_impl_for</code> function</p>",
        "id": 203196107,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152308
    },
    {
        "content": "<p>let me file an issue for that so it doesn't get lost</p>",
        "id": 203196120,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152320
    },
    {
        "content": "<p>Okay, let's go over open PRs again</p>",
        "id": 203196306,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152409
    },
    {
        "content": "<p>I also tried out the .chalk writer support in RA and tackled some low-hanging fruit, though for real integration we'll have to wait until RA updates to the latest chalk version</p>",
        "id": 203196324,
        "sender_full_name": "detrumi",
        "timestamp": 1594152416
    },
    {
        "content": "<p>for the placeholders?</p>",
        "id": 203196344,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152429
    },
    {
        "content": "<p>yeah</p>",
        "id": 203196363,
        "sender_full_name": "detrumi",
        "timestamp": 1594152436
    },
    {
        "content": "<p>that made it into the latest release, yeah?</p>",
        "id": 203196380,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152452
    },
    {
        "content": "<p>Yeah I'm pretty sure it did</p>",
        "id": 203196410,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594152470
    },
    {
        "content": "<p>yes</p>",
        "id": 203196466,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152483
    },
    {
        "content": "<p>great</p>",
        "id": 203196471,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152485
    },
    {
        "content": "<p>I actually tried to use it for rustc</p>",
        "id": 203196493,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152496
    },
    {
        "content": "<p>but actually ran into an issue with <code>compiletest</code></p>",
        "id": 203196510,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152507
    },
    {
        "content": "<p>and json parsing</p>",
        "id": 203196544,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152521
    },
    {
        "content": "<p>Actually, that reminds me</p>",
        "id": 203196630,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152556
    },
    {
        "content": "<p>about <code>tracing</code></p>",
        "id": 203196640,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> brought up that <code>tracing</code> dependency might be a bit heavy</p>",
        "id": 203196682,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152585
    },
    {
        "content": "<p>so maybe we should discuss this</p>",
        "id": 203196698,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152594
    },
    {
        "content": "<p>They were open to adding feature flags to solve that</p>",
        "id": 203196798,
        "sender_full_name": "detrumi",
        "timestamp": 1594152631
    },
    {
        "content": "<p>There should be a <code>tracing-core</code> crate, are we using more than we need in the library-like code vs the <code>chalk</code> crate?</p>",
        "id": 203196808,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1594152638
    },
    {
        "content": "<p>(unless it's the <code>tracing-core</code> crate which is heavy)</p>",
        "id": 203196849,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1594152669
    },
    {
        "content": "<p>so, I'm wondering exactly what the problem is</p>",
        "id": 203196859,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152679
    },
    {
        "content": "<p>So as I understand it, the issue isn't just the crates themselves are heavy</p>",
        "id": 203196876,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594152689
    },
    {
        "content": "<p>It's that <code>tracing</code> calls themselves make a lot of work for LLVM</p>",
        "id": 203196966,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594152723
    },
    {
        "content": "<p>The problem is that monomorphization is being done in the wrong crate, causing many duplicates</p>",
        "id": 203197025,
        "sender_full_name": "detrumi",
        "timestamp": 1594152750
    },
    {
        "content": "<p>ah</p>",
        "id": 203197093,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152794
    },
    {
        "content": "<p>so, is there anything <em>we</em> need to be doing</p>",
        "id": 203197110,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152803
    },
    {
        "content": "<p>Also, what all is in <code>tracing</code> that isn't in <code>tracing-core</code>?</p>",
        "id": 203197225,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152854
    },
    {
        "content": "<p>in other words, should we use <code>tracing-core</code> instead</p>",
        "id": 203197236,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152870
    },
    {
        "content": "<p>I think that <code>tracing-core</code> is pretty low-level</p>",
        "id": 203197298,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594152911
    },
    {
        "content": "<p>From tracing-core's readme:</p>\n<blockquote>\n<p>Application authors will typically not use this crate directly. Instead, they will use the tracing crate, which provides a much more fully-featured API. However, this crate's API will change very infrequently, so it may be used when dependencies must be very stable</p>\n</blockquote>",
        "id": 203197303,
        "sender_full_name": "detrumi",
        "timestamp": 1594152918
    },
    {
        "content": "<p>But I'm not sure whether the problem was in <code>tracing</code> or <code>tracing-core</code></p>",
        "id": 203197352,
        "sender_full_name": "detrumi",
        "timestamp": 1594152959
    },
    {
        "content": "<p>yeah, indeed <code>debug</code> and such is in <code>tracing</code></p>",
        "id": 203197409,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594152972
    },
    {
        "content": "<p><a href=\"https://github.com/tokio-rs/tracing/issues/783\">https://github.com/tokio-rs/tracing/issues/783</a></p>",
        "id": 203197469,
        "sender_full_name": "detrumi",
        "timestamp": 1594153009
    },
    {
        "content": "<p>The only thing I can think of (on our end) would be to conditionally compile the macro invocations</p>",
        "id": 203197479,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594153018
    },
    {
        "content": "<p>Looks like the problem is in <code>tracing-core</code></p>",
        "id": 203197485,
        "sender_full_name": "detrumi",
        "timestamp": 1594153023
    },
    {
        "content": "<p>Which is doable but kinda gross</p>",
        "id": 203197491,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594153025
    },
    {
        "content": "<p>yeah, I think the gist I'm getting is there's nothing we can/should do, <em>right now</em></p>",
        "id": 203197521,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153047
    },
    {
        "content": "<p>I'll keep an eye on this though</p>",
        "id": 203197557,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153076
    },
    {
        "content": "<p>Hmm, using <code>tracing-core</code> directly might cause less duplicates, not sure</p>",
        "id": 203197612,
        "sender_full_name": "detrumi",
        "timestamp": 1594153087
    },
    {
        "content": "<p>let's move on?</p>",
        "id": 203197654,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153117
    },
    {
        "content": "<p>okay, open PRs</p>",
        "id": 203197669,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153127
    },
    {
        "content": "<p>just want to get a sense if anything has changed</p>",
        "id": 203197690,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153141
    },
    {
        "content": "<p>sem-syn equality, I don't think is <em>blocked</em> anymore, but no updates</p>",
        "id": 203197723,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153165
    },
    {
        "content": "<p>opaque types</p>",
        "id": 203197742,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153177
    },
    {
        "content": "<p>wasn't there another PR...</p>",
        "id": 203197755,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153186
    },
    {
        "content": "<p>Ah yes, I closed that one because it was very WIP</p>",
        "id": 203197778,
        "sender_full_name": "detrumi",
        "timestamp": 1594153200
    },
    {
        "content": "<p>ah okay</p>",
        "id": 203197856,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153213
    },
    {
        "content": "<p>But Niko is helping out by writing docs and thus clarifying the design</p>",
        "id": 203197876,
        "sender_full_name": "detrumi",
        "timestamp": 1594153227
    },
    {
        "content": "<p>I saw :) that's excellent</p>",
        "id": 203197896,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153240
    },
    {
        "content": "<p>seems it's been stalled for a while</p>",
        "id": 203197910,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153246
    },
    {
        "content": "<p>subtyping/variance: I think this is probably like 90% there. Needs docs and tests</p>",
        "id": 203197934,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153270
    },
    {
        "content": "<p>And the generalization</p>",
        "id": 203197959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153283
    },
    {
        "content": "<p>Which I think Niko said he would take a stab at porting from rustc</p>",
        "id": 203197994,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153307
    },
    {
        "content": "<p>(though I'll have to be sure to keep bugging him about it)</p>",
        "id": 203198017,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153320
    },
    {
        "content": "<p>negative cycles. I think this is probably going to be closed and changed to not allowing negative cycles in the recursive solver</p>",
        "id": 203198118,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153359
    },
    {
        "content": "<p>but no new movement</p>",
        "id": 203198124,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153368
    },
    {
        "content": "<p>Looks like <span class=\"user-mention\" data-user-id=\"283967\">@Zahari Dichev</span> just rebased the recursive solver split PR</p>",
        "id": 203198190,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153400
    },
    {
        "content": "<p>so I'll have to take a look</p>",
        "id": 203198199,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153404
    },
    {
        "content": "<p>and then there's <code>chalk/#555</code></p>",
        "id": 203198286,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153444
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/555\">chalk#555</a></p>",
        "id": 203198320,
        "sender_full_name": "detrumi",
        "timestamp": 1594153471
    },
    {
        "content": "<p>weird, it didn't link</p>",
        "id": 203198335,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153479
    },
    {
        "content": "<p>chalk/#555</p>",
        "id": 203198345,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153485
    },
    {
        "content": "<p>huh</p>",
        "id": 203198355,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153495
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/555\">chalk#555</a></p>",
        "id": 203198359,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1594153495
    },
    {
        "content": "<p>oh</p>",
        "id": 203198371,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153500
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/chalk/issues/555\">chalk#555</a></p>",
        "id": 203198377,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153502
    },
    {
        "content": "<p>oops</p>",
        "id": 203198388,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153506
    },
    {
        "content": "<p>hehe, you got me confused for a second there</p>",
        "id": 203198411,
        "sender_full_name": "detrumi",
        "timestamp": 1594153516
    },
    {
        "content": "<p>yeah so <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>, around?</p>",
        "id": 203198426,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153525
    },
    {
        "content": "<p>I did a ninja edit</p>",
        "id": 203198431,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1594153528
    },
    {
        "content": "<p>so I guess there's two separate discussions here</p>",
        "id": 203198454,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153547
    },
    {
        "content": "<p>yeah I'm around</p>",
        "id": 203198471,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594153556
    },
    {
        "content": "<p>1) Should we flounder for a <code>non_enumerable</code> trait for int/float vars</p>",
        "id": 203198534,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153573
    },
    {
        "content": "<p>Which I think is solidly \"no\"</p>",
        "id": 203198549,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153582
    },
    {
        "content": "<p>But</p>",
        "id": 203198568,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153595
    },
    {
        "content": "<p>2) should we instantiate vars before getting program clauses</p>",
        "id": 203198598,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153614
    },
    {
        "content": "<p>So, I'm not quite sure if <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> had specific reasoning for why he thinks we should ask for program clauses <em>before</em> instantiating</p>",
        "id": 203198671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153664
    },
    {
        "content": "<p>but seems like there are two courses of action moving forward: 1) Modify SLG solver to ask for clauses before instantiation 2) Pass the binders when getting program clauses</p>",
        "id": 203198782,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153736
    },
    {
        "content": "<p>As a side thought, I have no intuition about where things are in the recursive solver</p>",
        "id": 203198880,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153802
    },
    {
        "content": "<p>Anyways, this is probably something to talk more about when Niko is around</p>",
        "id": 203199054,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153896
    },
    {
        "content": "<p>Okay, so those are the open PRs</p>",
        "id": 203199079,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153917
    },
    {
        "content": "<p>At this point, I'll probably just go over the sprint doc</p>",
        "id": 203199133,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153932
    },
    {
        "content": "<p>And start writing the blog post</p>",
        "id": 203199152,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153941
    },
    {
        "content": "<p>we could just pass binders to the clauses code and avoid doing 1), I guess. I'm fine with trying to keep big refactorings separate in any case</p>",
        "id": 203199176,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1594153956
    },
    {
        "content": "<p>Hackmd doc for anyone who might want to contribute: <a href=\"https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ\">https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ</a></p>",
        "id": 203199185,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594153961
    },
    {
        "content": "<p>I think we <em>should</em> move the recursive solver and SLG to do the same thing in this regard</p>",
        "id": 203199274,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154033
    },
    {
        "content": "<p>either way</p>",
        "id": 203199279,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154038
    },
    {
        "content": "<p>but it can be in steps if that's more helpful</p>",
        "id": 203199343,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154052
    },
    {
        "content": "<p>Ok sprint goals:</p>",
        "id": 203199591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154215
    },
    {
        "content": "<h1>chalk crate structure and publishing</h1>",
        "id": 203199613,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154228
    },
    {
        "content": "<p>We got a lot accomplished here</p>",
        "id": 203199636,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154248
    },
    {
        "content": "<p>I think the recursive split will be done before the blog post happens</p>",
        "id": 203199691,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154276
    },
    {
        "content": "<p>So the only thing we <em>didn't</em> do is setup bors</p>",
        "id": 203199746,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154288
    },
    {
        "content": "<p>The weekly releases are nice.</p>",
        "id": 203199808,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154320
    },
    {
        "content": "<p>But I do understand that in the long term, we don't want to keep that</p>",
        "id": 203199834,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154340
    },
    {
        "content": "<p>I wish there was a nice way to manually initiate github actions</p>",
        "id": 203199874,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154359
    },
    {
        "content": "<p>I guess there is a way to respond to API events</p>",
        "id": 203199915,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154381
    },
    {
        "content": "<p>so we could set up a \"button\" <em>elsewhere</em></p>",
        "id": 203199936,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154392
    },
    {
        "content": "<p>that's not great though</p>",
        "id": 203199990,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154403
    },
    {
        "content": "<p>Or something like bors</p>",
        "id": 203200000,
        "sender_full_name": "detrumi",
        "timestamp": 1594154406
    },
    {
        "content": "<p>Hmm, yeah</p>",
        "id": 203200086,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154459
    },
    {
        "content": "<p>But I guess the same issue applies</p>",
        "id": 203200107,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154469
    },
    {
        "content": "<p>i.e. <em>where</em> do you initiate that</p>",
        "id": 203200121,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154480
    },
    {
        "content": "<p>An alternative would be we could just provide a <code>release.sh</code> script</p>",
        "id": 203200213,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154523
    },
    {
        "content": "<p>But I don't really like that</p>",
        "id": 203200228,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154528
    },
    {
        "content": "<p>For now, the current approach works fine</p>",
        "id": 203200247,
        "sender_full_name": "detrumi",
        "timestamp": 1594154545
    },
    {
        "content": "<p>indeed</p>",
        "id": 203200269,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154560
    },
    {
        "content": "<p>(okay, now is the point where I'm gonna write some of the blog post)</p>",
        "id": 203200316,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154591
    },
    {
        "content": "<p>Also, this will most certainly go past the hour</p>",
        "id": 203200340,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594154605
    },
    {
        "content": "<p>Okay, next goal</p>",
        "id": 203202352,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155650
    },
    {
        "content": "<h1>improve caching strategy for recursive solver</h1>",
        "id": 203202354,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155652
    },
    {
        "content": "<p>I think this ended up being mostly design work</p>",
        "id": 203202405,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155680
    },
    {
        "content": "<p>I'll probably just mention it briefly at the end</p>",
        "id": 203202457,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155715
    },
    {
        "content": "<h1>GAT support in rustc</h1>",
        "id": 203202526,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155732
    },
    {
        "content": "<p>Ah yes, the co-option (co-optation?) of <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>  into wg-traits</p>",
        "id": 203202600,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155777
    },
    {
        "content": "<p>I think this is something many will love to see</p>",
        "id": 203202654,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155807
    },
    {
        "content": "<p>GATs or me? <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 203202879,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1594155924
    },
    {
        "content": "<p>Well, I <em>was</em> talking about GATs, but everyone loves to see you too <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>",
        "id": 203203001,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594155975
    },
    {
        "content": "<h1>Extracting a shared library representing types</h1>",
        "id": 203206053,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594157589
    },
    {
        "content": "<p>So, parts of this can also fall under the previous topic</p>",
        "id": 203206092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594157610
    },
    {
        "content": "<h1>increase Chalk performance</h1>",
        "id": 203207745,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158600
    },
    {
        "content": "<p>Not even sure if this is worth mentioning</p>",
        "id": 203207795,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158612
    },
    {
        "content": "<p>Might tack on <code>tracing</code> support near the end</p>",
        "id": 203207810,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158625
    },
    {
        "content": "<h1>experiments</h1>",
        "id": 203207821,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158638
    },
    {
        "content": "<p>(equivalence edges)</p>",
        "id": 203207833,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158647
    },
    {
        "content": "<p>Nothing done, not going to mention</p>",
        "id": 203207839,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594158654
    },
    {
        "content": "<h1>Writing a .chalk file</h1>",
        "id": 203208512,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159082
    },
    {
        "content": "<p>This is cool, definitely going to mention</p>",
        "id": 203208563,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159093
    },
    {
        "content": "<h1>improve opaque types support</h1>",
        "id": 203209148,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159439
    },
    {
        "content": "<p>Worth mentioning I think that there's a PR and some design work being done.</p>",
        "id": 203209209,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159472
    },
    {
        "content": "<h1>extend chalk to support Rust semantics</h1>",
        "id": 203209551,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159704
    },
    {
        "content": "<p>Ugh, it's so hard to distinguish this and \"extracting a shared type library\"</p>",
        "id": 203209586,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594159733
    },
    {
        "content": "<h1>Handle region constraints in rustc integration</h1>",
        "id": 203210611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594160478
    },
    {
        "content": "<p>Well, this is going to be hard to explain</p>",
        "id": 203210621,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594160489
    },
    {
        "content": "<p>re: <code>tracing</code>, we can prioritize this fix: <a href=\"https://github.com/tokio-rs/tracing/issues/783#issuecomment-654990799\">https://github.com/tokio-rs/tracing/issues/783#issuecomment-654990799</a> and see if it'll improve the llvm lines situation for rust-analyzer. as for tracing-core; i don't suggest using it as it's pretty low-level and you'd still have the monomorphization issue.</p>",
        "id": 203212880,
        "sender_full_name": "David Barsky",
        "timestamp": 1594162265
    },
    {
        "content": "<p>(but i'm glad y'all came to that resolution, i realize now, as I re-read the stream...)</p>",
        "id": 203213085,
        "sender_full_name": "David Barsky",
        "timestamp": 1594162406
    },
    {
        "content": "<p>Phew okay blog post is written. Comments appreciated if anyone has any: <a href=\"https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ\">https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ</a></p>",
        "id": 203213752,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594162915
    },
    {
        "content": "<p>oops I guess I skipped the documentation section</p>",
        "id": 203213869,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594162985
    },
    {
        "content": "<p>I should add that</p>",
        "id": 203213873,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594162992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202020-07-07/near/203213752\">said</a>:</p>\n<blockquote>\n<p>Phew okay blog post is written. Comments appreciated if anyone has any: <a href=\"https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ\">https://hackmd.io/LxZbgS0NSNyydV_cH49HlQ</a></p>\n</blockquote>\n<p>Left a couple small comments/nitpicks, overall looks great! Thanks for writing it up :)</p>",
        "id": 203221630,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1594170676
    },
    {
        "content": "<p>Thanks for the comments <span class=\"user-mention\" data-user-id=\"230601\">@Nathan Whitaker</span></p>",
        "id": 203288614,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594225112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/643\">https://github.com/rust-lang/blog.rust-lang.org/pull/643</a></p>",
        "id": 203290647,
        "sender_full_name": "Jack Huey",
        "timestamp": 1594226062
    }
]