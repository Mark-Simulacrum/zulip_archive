[
    {
        "content": "<p>So I started to implement closures: <a href=\"https://github.com/rust-lang/chalk/compare/master...jackh726:closure\">https://github.com/rust-lang/chalk/compare/master...jackh726:closure</a></p>",
        "id": 199774552,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591288722
    },
    {
        "content": "<p>I assumed we just wanted to pass the whole closure substs</p>",
        "id": 199774608,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591288756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230601\">@Nathan Whitaker</span> ^</p>",
        "id": 199774766,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591288838
    },
    {
        "content": "<p>IIRC closures in rustc have this weird/funny thing where they use an integer type in the subst to keep track of the closure kind, I wonder whether Chalk should adopt that (but I don't really have a better idea)</p>",
        "id": 199782116,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1591291911
    },
    {
        "content": "<p>Indeed</p>",
        "id": 199782262,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591291970
    },
    {
        "content": "<p>the docs here are quite helpful: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.ClosureSubsts.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.ClosureSubsts.html</a></p>",
        "id": 199782312,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591291992
    },
    {
        "content": "<p>I'm thinking that Chalk should just have a function in <code>RustIrDatabase</code> for <code>ClosureKind</code></p>",
        "id": 199782385,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591292025
    },
    {
        "content": "<p>In my WIP branch, for the upvar tys (for Copy/Clone), I just pick the last parameter and assume its a tuple. Basically matching rustc's behavior</p>",
        "id": 199782804,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591292218
    },
    {
        "content": "<p>But I'm also wondering if it's more worth it to make this also completely opaque from Chalk's perspective</p>",
        "id": 199782849,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591292246
    },
    {
        "content": "<p>So <code>RustIrDatabase</code> would have a <code>closure_kind</code>, <code>closure_upvars</code>, and then probably a <code>closure_as_fn_ptr</code></p>",
        "id": 199782989,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591292306
    },
    {
        "content": "<p>Really makes me wish we just pushed a basic version of <a href=\"https://github.com/rust-lang/chalk/pull/475\">https://github.com/rust-lang/chalk/pull/475</a> through</p>",
        "id": 199783095,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591292358
    },
    {
        "content": "<p>I think passing the whole closure substs should work.</p>",
        "id": 199816274,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591309500
    },
    {
        "content": "<p>I had a branch starting on this, and kind of ran into the same design question: how much knowledge chalk should have about the specifics of closures</p>",
        "id": 199816386,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591309575
    },
    {
        "content": "<p>Well, the substs themselves can be opaque to Chalk</p>",
        "id": 199816409,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591309604
    },
    {
        "content": "<p>or</p>",
        "id": 199816442,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591309634
    },
    {
        "content": "<p>I guess, the <em>meaning</em> of the substs</p>",
        "id": 199816449,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591309641
    },
    {
        "content": "<p>Yeah that makes sense</p>",
        "id": 199816698,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591309812
    },
    {
        "content": "<p>I also find myself wondering if we really <em>need</em> knowledge about the upvar types, since as far as I know they're only used to determine which of the Fn traits are implemented by the closure</p>",
        "id": 199816763,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591309871
    },
    {
        "content": "<p>Which is presumably already known by rustc (since the closure kind is determined in typechecking )</p>",
        "id": 199816798,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591309914
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/Closures/near/199783095\">said</a>:</p>\n<blockquote>\n<p>Really makes me wish we just pushed a basic version of <a href=\"https://github.com/rust-lang/chalk/pull/475\">https://github.com/rust-lang/chalk/pull/475</a> through</p>\n</blockquote>\n<p>I agree, I've been meaning to get around to reworking that PR so we at least have <em>something</em>. I should probably be able to get a PR  up in the next week or so, but someone else can pick it up if they're looking for something to work on right now.</p>",
        "id": 199817511,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1591310458
    },
    {
        "content": "<p>I've been hacking at it a bit :)</p>",
        "id": 199817898,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591310745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <a href=\"https://github.com/rust-lang/chalk/pull/519#pullrequestreview-429990566\">left comments on your PR</a></p>",
        "id": 200716350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591991196
    },
    {
        "content": "<p>Thanks :) I'll take a look</p>",
        "id": 200716538,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591991307
    },
    {
        "content": "<p>Something seems weird with CI</p>",
        "id": 200716549,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591991313
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  Downloaded lalrpop v0.19.0\nerror: failed to parse manifest at `/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/lalrpop-0.19.0/Cargo.toml`\n\nCaused by:\n  readme file with name &#39;../README.md&#39; was not found\n</code></pre></div>",
        "id": 200716570,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591991326
    },
    {
        "content": "<p>....</p>",
        "id": 200727914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998254
    },
    {
        "content": "<p>yeah, i'm seeing that too wtf.</p>",
        "id": 200728442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998722
    },
    {
        "content": "<p>that doesn't appear to be a new version of lalrpop</p>",
        "id": 200728523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998772
    },
    {
        "content": "<p>at least, it's the same one <em>I</em> have in my cargo.lock</p>",
        "id": 200728530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998778
    },
    {
        "content": "<p>it is not</p>",
        "id": 200728531,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998779
    },
    {
        "content": "<p>(new)</p>",
        "id": 200728534,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998783
    },
    {
        "content": "<p>I checked</p>",
        "id": 200728539,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998787
    },
    {
        "content": "<p>could be a bug in nightly cargo</p>",
        "id": 200728573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998813
    },
    {
        "content": "<p>wonder if it's related to the failures I was seeing in the rust repo</p>",
        "id": 200728574,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998813
    },
    {
        "content": "<p>I haven't updated nightly in a while</p>",
        "id": 200728578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998816
    },
    {
        "content": "<p>I'm not even sure if I'm <em>using</em> nightly</p>",
        "id": 200728586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998829
    },
    {
        "content": "<p>ah the glories of building on stable... \"what version of rustc are you using\"... \"got me\"</p>",
        "id": 200728648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998861
    },
    {
        "content": "<p>that said, after updating nightly, things still seem to build for me</p>",
        "id": 200728705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998916
    },
    {
        "content": "<p>is that locally?</p>",
        "id": 200728724,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998936
    },
    {
        "content": "<p>yes</p>",
        "id": 200728731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998941
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/8354\">https://github.com/rust-lang/cargo/issues/8354</a></p>",
        "id": 200728746,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591998952
    },
    {
        "content": "<p>sure looks like that issue then</p>",
        "id": 200728817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591998977
    },
    {
        "content": "<p>How unfortunate</p>",
        "id": 200728865,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591999012
    },
    {
        "content": "<p>Anyways, we can merge the version upgrade now, since it's 100% going to pass CI</p>",
        "id": 200728895,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591999034
    },
    {
        "content": "<p>or I can just retry tomorrow and merge on green</p>",
        "id": 200728915,
        "sender_full_name": "Jack Huey",
        "timestamp": 1591999044
    },
    {
        "content": "<p>yeah merge it</p>",
        "id": 200729002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591999108
    }
]