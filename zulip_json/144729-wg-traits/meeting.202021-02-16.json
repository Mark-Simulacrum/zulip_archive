[
    {
        "content": "<p>Alright, another week where I'm not quite sure what we should discuss</p>",
        "id": 226572885,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613507880
    },
    {
        "content": "<p>wave</p>",
        "id": 226575448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509159
    },
    {
        "content": "<p>so</p>",
        "id": 226575457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509163
    },
    {
        "content": "<p>i did some stuff</p>",
        "id": 226575462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509164
    },
    {
        "content": "<p>define 'stuff' <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 226575520,
        "sender_full_name": "detrumi",
        "timestamp": 1613509188
    },
    {
        "content": "<p>Actually, before we go into that</p>",
        "id": 226575526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509191
    },
    {
        "content": "<p>I was talking to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (who is starting at AWS <span aria-label=\"dancer\" class=\"emoji emoji-1f483\" role=\"img\" title=\"dancer\">:dancer:</span> ) and he was saying that this meeting is not at a good time for him</p>",
        "id": 226575635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509215
    },
    {
        "content": "<p>I'm wondering how people would feel about potentially finding another time</p>",
        "id": 226575658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509225
    },
    {
        "content": "<p>the thought of a doodle makes me want to cry but I suppose that'd be the easiest way</p>",
        "id": 226575688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509243
    },
    {
        "content": "<p>Howdy <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 226575706,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509257
    },
    {
        "content": "<p>Wednesdays are tough for me, Thursday mornings I can't do at all, other than than, I can make things work</p>",
        "id": 226575791,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509304
    },
    {
        "content": "<p>it's also true that <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> will have relatively limited time for a while</p>",
        "id": 226575866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509328
    },
    {
        "content": "<p>so it may not be that big a deal</p>",
        "id": 226575981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509383
    },
    {
        "content": "<p>anyway, I'll make a doodle or something, or maybe just have people drop a few notes in a hackmd</p>",
        "id": 226576019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509395
    },
    {
        "content": "<p>Either way, I'm open to changing the meeting time</p>",
        "id": 226576029,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509397
    },
    {
        "content": "<p>I'm not really clear on who attends these meetings</p>",
        "id": 226576052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span>, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> sometimes?</p>",
        "id": 226576062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509418
    },
    {
        "content": "<p>Ay, and some others that stop by from time to time</p>",
        "id": 226576097,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509440
    },
    {
        "content": "<p>ok so anyway what I did is basically to dig a bit into the \"path to async fn in traits\"</p>",
        "id": 226576195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509474
    },
    {
        "content": "<p><a href=\"https://hackmd.io/5kCE2T6sTDijhqMx8kaikw\">https://hackmd.io/5kCE2T6sTDijhqMx8kaikw</a></p>",
        "id": 226576211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509484
    },
    {
        "content": "<p>and restructure the document</p>",
        "id": 226576218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509487
    },
    {
        "content": "<h2>Milestones</h2>\n<p>Largely unordered:</p>\n<ul>\n<li>Impl Trait Slice 0 stabilized</li>\n<li>GAT blockers resolved</li>\n<li>RFC for GATs with types open</li>\n<li>RFC for async fn and impl trait open</li>\n<li>RFC for GATs with types merged</li>\n<li>RFC for async fn and impl trait merged</li>\n<li>All features implemented on nightly</li>\n<li>All features stable on nightly</li>\n<li>All features stable</li>\n</ul>",
        "id": 226576230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509493
    },
    {
        "content": "<p>this is partly related to me doing, ahem, AWS planning</p>",
        "id": 226576246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509503
    },
    {
        "content": "<p>Nice nice</p>",
        "id": 226576266,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509514
    },
    {
        "content": "<p>i.e., having to think about what my milestones are etc:)</p>",
        "id": 226576272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509515
    },
    {
        "content": "<h2>Actionable next steps</h2>\n<ul>\n<li>Define impl Trait slice 0 feature gate with appropriate tests</li>\n<li>Write tests + stabilization report for GATs</li>\n<li>Resolve <a href=\"https://hackmd.io/uxoObhSxSRijNmfmGkId0g\">GAT blockers</a><br>\n    * [#81801] - Bad diagnostics for GATs in trait paths<br>\n    * [#81862] - GAT: elided lifetimes in paths errors with <code>error[E0107]: missing generics for associated type</code><br>\n        - diagnostic issue largely, but an important one<br>\n    * [#81961] - GAT: incorrect suggestion on missing lifetime<br>\n        - diagnostic issue, but an importnt one</li>\n<li>Write RFC for <code>impl Trait</code> and <code>async fn</code> in trait definitions</li>\n<li>Stabilize the \"member constraints\" feature gate ([#61997]), extending this approach to all <code>impl Trait</code>, and not just <code>async fn</code></li>\n</ul>",
        "id": 226576294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509530
    },
    {
        "content": "<p>i was thinking maybe we could talk a bit about those -- am I missing some steps? (probably) and can we start to assign them?</p>",
        "id": 226576331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509552
    },
    {
        "content": "<p>That works</p>",
        "id": 226576345,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509562
    },
    {
        "content": "<p>one other thing is -- I still want to push on the type library</p>",
        "id": 226576357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509563
    },
    {
        "content": "<p>I've been looking at <a href=\"https://github.com/rust-lang/rust/issues/76407\">#76407</a></p>",
        "id": 226576392,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509567
    },
    {
        "content": "<p>Which, when we did triage, we marked as blocking</p>",
        "id": 226576420,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509590
    },
    {
        "content": "<p>But I'm finding that it actually interacts heavily with just the general lazy normalization story</p>",
        "id": 226576481,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509627
    },
    {
        "content": "<p>yeah</p>",
        "id": 226576499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509636
    },
    {
        "content": "<p>so <em>that</em> is where chalk maybe comes in</p>",
        "id": 226576506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509641
    },
    {
        "content": "<p>Yeah</p>",
        "id": 226576548,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509664
    },
    {
        "content": "<p>I mean, I could go into the issue a bit w.r.t. why it happens</p>",
        "id": 226576647,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509697
    },
    {
        "content": "<p>but not sure it's necessary</p>",
        "id": 226576662,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509706
    },
    {
        "content": "<p>I did read into the issue while updating the async fn in traits doc</p>",
        "id": 226576675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509714
    },
    {
        "content": "<p>I can kind of see how it comes about</p>",
        "id": 226576683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509722
    },
    {
        "content": "<p>It's just that <code>&lt;T as MyTrait&gt;::Item&lt;'a&gt;</code> has a bound var whereas <code>&lt;T as MyTrait&gt;::Item</code> doesn't</p>",
        "id": 226576742,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509766
    },
    {
        "content": "<p>so the latter normalizes fine</p>",
        "id": 226576755,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509772
    },
    {
        "content": "<p>but the former gets stuck</p>",
        "id": 226576775,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509784
    },
    {
        "content": "<p>makes sense</p>",
        "id": 226576797,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509797
    },
    {
        "content": "<p>(here Projections aren't getting normalized because: <a href=\"https://github.com/rust-lang/rust/blob/cfba499271ba53190a1d3647ff8f7202ec9ed6f5/compiler/rustc_trait_selection/src/traits/project.rs#L368\">https://github.com/rust-lang/rust/blob/cfba499271ba53190a1d3647ff8f7202ec9ed6f5/compiler/rustc_trait_selection/src/traits/project.rs#L368</a>)</p>",
        "id": 226576802,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509800
    },
    {
        "content": "<p>Note that this is not quite the same as <code>&lt;T as MyTrait&lt;'a&gt;&gt;::Item</code>, I think</p>",
        "id": 226576878,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509819
    },
    {
        "content": "<p>so this \"chalk integration\" status is not represented in the doc at all</p>",
        "id": 226576881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509820
    },
    {
        "content": "<p>do we want to talk about the status there?</p>",
        "id": 226576887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509824
    },
    {
        "content": "<p>before we do that though</p>",
        "id": 226576896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509830
    },
    {
        "content": "<p>can we look a bti at the \"actionable next steps\" above?</p>",
        "id": 226576907,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509838
    },
    {
        "content": "<p>I just wanted to say that I asked <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> to look into \"define impl trait slice 0 feature gate\"</p>",
        "id": 226576916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509847
    },
    {
        "content": "<p>since he did a lot of that impl work initially</p>",
        "id": 226576952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509868
    },
    {
        "content": "<p>I am thinking of starting work on that RFC</p>",
        "id": 226576965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509879
    },
    {
        "content": "<p>Yeah, I still didn't read any of the docs on that</p>",
        "id": 226576988,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509896
    },
    {
        "content": "<p>there is I guess a need for a \"GAT wth type\" RFC</p>",
        "id": 226577054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509924
    },
    {
        "content": "<p>to be honest i kind of just want to make a new GATs RFC altogether</p>",
        "id": 226577097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509934
    },
    {
        "content": "<p>i.e., superceding the old one</p>",
        "id": 226577112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509940
    },
    {
        "content": "<p>this might actually be a nice way for me to poke at the implementation</p>",
        "id": 226577133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509954
    },
    {
        "content": "<p>Potentially, but I think the original RFC had types</p>",
        "id": 226577134,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509954
    },
    {
        "content": "<p>ok, should check</p>",
        "id": 226577162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509967
    },
    {
        "content": "<p>checking</p>",
        "id": 226577177,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613509975
    },
    {
        "content": "<p>what was the RFC number?</p>",
        "id": 226577198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613509988
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\">https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md</a> ?</p>",
        "id": 226577219,
        "sender_full_name": "detrumi",
        "timestamp": 1613509995
    },
    {
        "content": "<p>sounds right :)</p>",
        "id": 226577251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510007
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md#associated-type-constructors-of-type-arguments\">https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md#associated-type-constructors-of-type-arguments</a></p>",
        "id": 226577262,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510010
    },
    {
        "content": "<p>ok it doesn't</p>",
        "id": 226577285,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510021
    },
    {
        "content": "<blockquote>\n<p>This RFC does not propose extending HRTBs to take type arguments, which makes these less expressive than they could be. Such an extension is desired, but out of scope for this RFC.</p>\n</blockquote>",
        "id": 226577310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510037
    },
    {
        "content": "<p>that's maybe ok</p>",
        "id": 226577382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510055
    },
    {
        "content": "<p>So, imo, unless we run into a big issue when putting together tests, I think we should just include types (and consts)</p>",
        "id": 226577416,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510076
    },
    {
        "content": "<p>But yeah, another RFC for that would be needed it seems</p>",
        "id": 226577494,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510110
    },
    {
        "content": "<p>Not having <code>for&lt;T&gt;</code> does limit type-generic associated types a bit.</p>",
        "id": 226577511,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613510120
    },
    {
        "content": "<p>Right</p>",
        "id": 226577640,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510171
    },
    {
        "content": "<p>So</p>",
        "id": 226577646,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510173
    },
    {
        "content": "<p>I think a revised RFC might be nice</p>",
        "id": 226577690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510190
    },
    {
        "content": "<p>Given this, maybe it <em>does</em> make sense to split out the <code>generic_associated_types</code> feature into two?</p>",
        "id": 226577709,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510197
    },
    {
        "content": "<p>but</p>",
        "id": 226577713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510199
    },
    {
        "content": "<p>/me thinks</p>",
        "id": 226577733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510212
    },
    {
        "content": "<p>Lifetime GATs is all that is needed for async fn in traits, right?</p>",
        "id": 226577832,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510264
    },
    {
        "content": "<p>split into which parts, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> ?</p>",
        "id": 226577844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510270
    },
    {
        "content": "<p>well</p>",
        "id": 226577857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510277
    },
    {
        "content": "<p>lifetime vs all</p>",
        "id": 226577858,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510278
    },
    {
        "content": "<p>you need both if you want to support functions that have generic type parameters----</p>",
        "id": 226577915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510291
    },
    {
        "content": "<p>but we could exclude that to start</p>",
        "id": 226577930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510302
    },
    {
        "content": "<p>I'm not sure if there's a reason to do so</p>",
        "id": 226577940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510306
    },
    {
        "content": "<p>is it just about the RFC or are there impl concerns?</p>",
        "id": 226578000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510342
    },
    {
        "content": "<p>I have no impl concerns right now</p>",
        "id": 226578031,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510364
    },
    {
        "content": "<p>i guess I think <code>for&lt;T&gt;</code> probably wants to come with chalk</p>",
        "id": 226578157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510409
    },
    {
        "content": "<p>there are questions to be tackled-- even with <code>for&lt;'a&gt;</code> there kind of are -- like what is the Rust syntax for chalk's <code>if</code></p>",
        "id": 226578207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510436
    },
    {
        "content": "<p>I feel like <code>for&lt;T&gt;</code> is just a can of worms we don't want to discuss now</p>",
        "id": 226578218,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510442
    },
    {
        "content": "<p>and how does <code>if</code> interact with borrow checking.</p>",
        "id": 226578254,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613510463
    },
    {
        "content": "<p>I guess we just don't need it</p>",
        "id": 226578255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510464
    },
    {
        "content": "<p>and I think the RFC is basically good, ok</p>",
        "id": 226578418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510536
    },
    {
        "content": "<p>It would probably avoid a ton of edge cases if we didn't need <code>for&lt;T&gt;</code> syntax (at least for now)</p>",
        "id": 226578425,
        "sender_full_name": "detrumi",
        "timestamp": 1613510539
    },
    {
        "content": "<p>I think we probably should start with putting together tests for GATs</p>",
        "id": 226578495,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510579
    },
    {
        "content": "<p>I agree</p>",
        "id": 226578505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510585
    },
    {
        "content": "<p>and see where things break</p>",
        "id": 226578522,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510597
    },
    {
        "content": "<p>As far as current issues</p>",
        "id": 226578634,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510647
    },
    {
        "content": "<p>I think we should shoot to get both types + lifetimes</p>",
        "id": 226578654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510655
    },
    {
        "content": "<p>if problems emerge when writing the tests, ok</p>",
        "id": 226578667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510661
    },
    {
        "content": "<p>to what extent do tests already exist?</p>",
        "id": 226578682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510672
    },
    {
        "content": "<p>Hmm</p>",
        "id": 226578710,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510689
    },
    {
        "content": "<p>the age old problem</p>",
        "id": 226578728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510697
    },
    {
        "content": "<p>I'm not completely sure, I need to review</p>",
        "id": 226578729,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510698
    },
    {
        "content": "<p>There are a few. A lot of them are based on all of the ICEs from bug reports though.</p>",
        "id": 226578739,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613510702
    },
    {
        "content": "<p>Speaking of those</p>",
        "id": 226578763,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510715
    },
    {
        "content": "<p>I've often found it really useful to step back and just think comprehensively about tests</p>",
        "id": 226578776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510721
    },
    {
        "content": "<p>e.g., by reading the RFC</p>",
        "id": 226578783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510724
    },
    {
        "content": "<p>and writing down all the things that it sparks for you</p>",
        "id": 226578802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510735
    },
    {
        "content": "<p>A lot of a essentially \"duplicates\", in that the end up testing the same thing with different bits of code</p>",
        "id": 226578817,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510742
    },
    {
        "content": "<p>like, take each section and write some tests arond it</p>",
        "id": 226578823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510744
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226578817\">said</a>:</p>\n<blockquote>\n<p>A lot of a essentially \"duplicates\", in that the end up testing the same thing with different bits of code</p>\n</blockquote>\n<p>yeah, it's just not worth the effort to try and cull them down</p>",
        "id": 226578846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510757
    },
    {
        "content": "<p>gotta do our part to melt those icebergs</p>",
        "id": 226578904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510768
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is that (writing tests) something you want to take on?</p>",
        "id": 226579005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510825
    },
    {
        "content": "<p>we could also do like a test writing party</p>",
        "id": 226579030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510836
    },
    {
        "content": "<p>schedule a few hours or something :) that could be fun</p>",
        "id": 226579048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510842
    },
    {
        "content": "<p>Ugh maybe. I'm kind of limited on time. And already spread a bit thin. But I can take a few hours</p>",
        "id": 226579089,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510859
    },
    {
        "content": "<p>coordinated soundtracks that we all play at the same time</p>",
        "id": 226579092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510860
    },
    {
        "content": "<p>don't overtax yourself</p>",
        "id": 226579109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510870
    },
    {
        "content": "<p>I just couldn't tell if you were excited about it :)</p>",
        "id": 226579133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510882
    },
    {
        "content": "<p>I want it</p>",
        "id": 226579179,
        "sender_full_name": "Areredify",
        "timestamp": 1613510888
    },
    {
        "content": "<p>I would definitely be down to schedule a few hours with someone</p>",
        "id": 226579183,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510889
    },
    {
        "content": "<p>Gimme gimme</p>",
        "id": 226579191,
        "sender_full_name": "Areredify",
        "timestamp": 1613510892
    },
    {
        "content": "<p>Easy solution :)</p>",
        "id": 226579218,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510905
    },
    {
        "content": "<p>sounds good!</p>",
        "id": 226579229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510912
    },
    {
        "content": "<p>I'd like to review the pr</p>",
        "id": 226579236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510915
    },
    {
        "content": "<p>and/or PRs</p>",
        "id": 226579247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510919
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 226579274,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510935
    },
    {
        "content": "<p>this reminds me</p>",
        "id": 226579297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> we never scheduled a time to talk about the binder PR :) I'm game to do that this week and will ping you</p>",
        "id": 226579315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613510958
    },
    {
        "content": "<p>Yes, let's schedule. Ping me :)</p>",
        "id": 226579374,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613510986
    },
    {
        "content": "<p>Okay, so action items re. async fn in traits</p>",
        "id": 226579449,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511007
    },
    {
        "content": "<p>so that leaves the following things:</p>\n<ul>\n<li>Resolve <a href=\"https://hackmd.io/uxoObhSxSRijNmfmGkId0g\">GAT blockers</a><br>\n    * [#81801] - Bad diagnostics for GATs in trait paths<br>\n    * [#81862] - GAT: elided lifetimes in paths errors with <code>error[E0107]: missing generics for associated type</code><br>\n        - diagnostic issue largely, but an important one<br>\n    * [#81961] - GAT: incorrect suggestion on missing lifetime<br>\n        - diagnostic issue, but an importnt one</li>\n</ul>",
        "id": 226579461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511013
    },
    {
        "content": "<ul>\n<li>Stabilize the \"member constraints\" feature gate ([#61997]), extending this approach to all <code>impl Trait</code>, and not just <code>async fn</code></li>\n</ul>",
        "id": 226579486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511027
    },
    {
        "content": "<p>The diagnostics might all be solved together</p>",
        "id": 226579505,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511038
    },
    {
        "content": "<p>for the latter, there was a note about fixing the bug around <code>let foo: impl Bar&lt;'_&gt;</code> first but I think that's not necessary</p>",
        "id": 226579518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511044
    },
    {
        "content": "<p>I don't even know what that feature <em>does</em></p>",
        "id": 226579569,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511065
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/61773\">https://github.com/rust-lang/rust/issues/61773</a></p>",
        "id": 226579577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511068
    },
    {
        "content": "<p>I can tackle the stablization report for this probably</p>",
        "id": 226579611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226579505\">said</a>:</p>\n<blockquote>\n<p>The diagnostics might all be solved together</p>\n</blockquote>\n<p>should we maybe see if we can find one person to poke at it?</p>",
        "id": 226579765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511125
    },
    {
        "content": "<p>I just r+'d some PR by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> relating to diagnostics</p>",
        "id": 226579778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511133
    },
    {
        "content": "<p>Any volunteers?</p>",
        "id": 226579785,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511137
    },
    {
        "content": "<p>I agree they kind of looked similar</p>",
        "id": 226579786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511137
    },
    {
        "content": "<p>who was it that did the PR that fixed all the other bugs?</p>",
        "id": 226579820,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511152
    },
    {
        "content": "<p>maybe they want to take a crack at it :)</p>",
        "id": 226579824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511156
    },
    {
        "content": "<p>b-naber I think</p>",
        "id": 226579854,
        "sender_full_name": "Areredify",
        "timestamp": 1613511173
    },
    {
        "content": "<p>yes</p>",
        "id": 226579861,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511176
    },
    {
        "content": "<p>Not sure if they're on Zulip :)</p>",
        "id": 226579886,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511186
    },
    {
        "content": "<p>I think that is <span class=\"user-mention\" data-user-id=\"328097\">@BN</span> ?</p>",
        "id": 226579995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511231
    },
    {
        "content": "<p>(to whom I owe a review of <a href=\"https://github.com/rust-lang/rust/issues/80788\">#80788</a>...it's coming)</p>",
        "id": 226580071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511248
    },
    {
        "content": "<p>I will try to reach out to them</p>",
        "id": 226580128,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"328097\">@BN</span> -- any interest in tackling the GAT diagnostic blockers <a href=\"https://github.com/rust-lang/rust/issues/81801\">#81801</a>, <a href=\"https://github.com/rust-lang/rust/issues/81862\">#81862</a>, <a href=\"https://github.com/rust-lang/rust/issues/81961\">#81961</a> ... ? :)</p>",
        "id": 226580138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511283
    },
    {
        "content": "<p>sg</p>",
        "id": 226580149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511288
    },
    {
        "content": "<p>Or if someone else wants it</p>",
        "id": 226580162,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511294
    },
    {
        "content": "<p>based on their e-mail address I'm guessing they're not online right now</p>",
        "id": 226580173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511300
    },
    {
        "content": "<p>although a lot of you folks are in CEST so...</p>",
        "id": 226580189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511307
    },
    {
        "content": "<p>Just for reference, <a href=\"https://github.com/rust-lang/rust/issues/77524\">#77524</a> touches a lot of this code</p>",
        "id": 226580306,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511355
    },
    {
        "content": "<p>(diagnostics)</p>",
        "id": 226580322,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511360
    },
    {
        "content": "<p>so might be useful to look back on</p>",
        "id": 226580379,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511368
    },
    {
        "content": "<p>I wonder if the author would want to try to tackle these issues</p>",
        "id": 226580425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511388
    },
    {
        "content": "<p>and somewhere in there is <a href=\"https://github.com/rust-lang/rust/issues/81801\">#81801</a></p>",
        "id": 226580438,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511395
    },
    {
        "content": "<p>don't think they're on Zulip though, or if they are I don't know their handle</p>",
        "id": 226580472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511416
    },
    {
        "content": "<p>(that is one thing that annoys me about Zulip, I wish the handles were the same as github usernames)</p>",
        "id": 226580510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511440
    },
    {
        "content": "<p>ping me if they won't respond/take it pls, I would be happy to take this one too</p>",
        "id": 226580565,
        "sender_full_name": "Areredify",
        "timestamp": 1613511471
    },
    {
        "content": "<p>There's also <a href=\"https://github.com/rust-lang/rust/issues/81823\">#81823</a> which I'll work on.</p>",
        "id": 226580566,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613511472
    },
    {
        "content": "<p>oh</p>",
        "id": 226580591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511482
    },
    {
        "content": "<p>let's add that to the list</p>",
        "id": 226580637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511488
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/76407\">#76407</a>, I'm not quite sure what I need to do</p>",
        "id": 226580716,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511548
    },
    {
        "content": "<p>oh, there's also </p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80626\">#80626</a> - Enum variant with GAT field fails to derive Sized</li>\n</ul>",
        "id": 226580725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511554
    },
    {
        "content": "<p>I think that we leave <a href=\"https://github.com/rust-lang/rust/issues/76407\">#76407</a></p>",
        "id": 226580751,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613511571
    },
    {
        "content": "<p>That's the feeling I'm getting</p>",
        "id": 226580776,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511580
    },
    {
        "content": "<p>I think we should discuss lazy norm separately</p>",
        "id": 226580790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511591
    },
    {
        "content": "<p>It's just a bit sad because it seems like a really high profile issue</p>",
        "id": 226580853,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511607
    },
    {
        "content": "<p>Depends on how much people will run into this, I guess</p>",
        "id": 226580879,
        "sender_full_name": "detrumi",
        "timestamp": 1613511617
    },
    {
        "content": "<p>but yeah, we should probably have a whole separate discussion around this</p>",
        "id": 226580884,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511621
    },
    {
        "content": "<p>Lazy norm probably needs  a design discussion.</p>",
        "id": 226580895,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613511629
    },
    {
        "content": "<p>I still hope we will tackle it, let's just discuss it separately</p>",
        "id": 226580899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226580725\">said</a>:</p>\n<blockquote>\n<p>oh, there's also </p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80626\">#80626</a> - Enum variant with GAT field fails to derive Sized</li>\n</ul>\n</blockquote>\n<p>what's the story with this</p>",
        "id": 226580939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511654
    },
    {
        "content": "<p>I don't think anyone has looked into it</p>",
        "id": 226580968,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511674
    },
    {
        "content": "<p>hmm so</p>",
        "id": 226580985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511686
    },
    {
        "content": "<p>I think I know why the <code>, i64</code> variant behaves differently</p>",
        "id": 226581019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511705
    },
    {
        "content": "<p>Basically enum T: Sized requires the last field of every variant is Sized.</p>",
        "id": 226581041,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613511715
    },
    {
        "content": "<p>This requires normalizing the last field, which in turn requires sized because <code>type&lt;T&gt;</code> is short for <code>type&lt;T: Sized&gt;</code></p>",
        "id": 226581117,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613511744
    },
    {
        "content": "<p>this is kind of messed up</p>",
        "id": 226581220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511804
    },
    {
        "content": "<p>but</p>",
        "id": 226581255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511818
    },
    {
        "content": "<p>I'm not convinced it's a blocker :)</p>",
        "id": 226581265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511823
    },
    {
        "content": "<p>it seems kind of orthogonal to GATs?</p>",
        "id": 226581288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613511833
    },
    {
        "content": "<p>yeah, I'm not quite sure</p>",
        "id": 226581289,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511834
    },
    {
        "content": "<p>Probably</p>",
        "id": 226581344,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511845
    },
    {
        "content": "<p>Could possibly also be improved by giving an error message explaining the Sized thing</p>",
        "id": 226581362,
        "sender_full_name": "detrumi",
        "timestamp": 1613511856
    },
    {
        "content": "<p>It might be that just a quick hour of looking into it could find a useful diagnostic at least</p>",
        "id": 226581386,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511867
    },
    {
        "content": "<p>So, let's put it aside for now?</p>",
        "id": 226581458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511909
    },
    {
        "content": "<p>Since it seems like it's probably not blocking</p>",
        "id": 226581472,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511919
    },
    {
        "content": "<p>So, other action items</p>",
        "id": 226581511,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511950
    },
    {
        "content": "<p>Which include RFCs for <code>impl Trait</code>, <code>async fn</code> in traits, and now type GATs</p>",
        "id": 226581587,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613511974
    },
    {
        "content": "<p>hmm</p>",
        "id": 226581686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226581288\">said</a>:</p>\n<blockquote>\n<p>it seems kind of orthogonal to GATs?</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span>: <span class=\"nb\">Sized</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Item</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">enum</span> <span class=\"nc\">LinkedList</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Foo</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Head</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Next</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">Item</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>that does work...anyway....</p>",
        "id": 226581710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226581587\">said</a>:</p>\n<blockquote>\n<p>Which include RFCs for <code>impl Trait</code>, <code>async fn</code> in traits, and now type GATs</p>\n</blockquote>\n<p>I don't think type GATs need a fresh RFC</p>",
        "id": 226581746,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512050
    },
    {
        "content": "<p>we could do one just because the old RFC is so old</p>",
        "id": 226581767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512058
    },
    {
        "content": "<p>but, re-reading it, it still seems pretty decent</p>",
        "id": 226581784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512068
    },
    {
        "content": "<p>Well, I'm not convinced that <code>&lt;T as Foo&gt;::Item&lt;Self&gt;</code> and <code>&lt;T as Foo&lt;Self&gt;&gt;::Item</code> can be treated the same :)</p>",
        "id": 226581803,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512076
    },
    {
        "content": "<p>I do have a plan to RFC impl Trait / async fn in traits, which I don't believe have been proposed</p>",
        "id": 226581812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226581803\">said</a>:</p>\n<blockquote>\n<p>Well, I'm not convinced that <code>&lt;T as Foo&gt;::Item&lt;Self&gt;</code> and <code>&lt;T as Foo&lt;Self&gt;&gt;::Item</code> can be treated the same :)</p>\n</blockquote>\n<p>clearly something is different</p>",
        "id": 226581891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512101
    },
    {
        "content": "<p>I'm a <em>bit</em> surprised because I would expect we have to prove <code>Self: Sized</code> and that requires normalizing ... anyway</p>",
        "id": 226581925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512124
    },
    {
        "content": "<p>I mean, I think we should be able to handle the former in some places that we can't handle the latter</p>",
        "id": 226581930,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512127
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226581812\">said</a>:</p>\n<blockquote>\n<p>I do have a plan to RFC impl Trait / async fn in traits, which I don't believe have been proposed</p>\n</blockquote>\n<p>arguably i should divide these</p>",
        "id": 226581961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512140
    },
    {
        "content": "<p>I think i might like to have an impl Trait RFC that supercedes all the old ones</p>",
        "id": 226581978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512149
    },
    {
        "content": "<p>i.e., that describes the \"full feature\" in some sense that will be stable in one place</p>",
        "id": 226581998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226581710\">said</a>:</p>\n<blockquote>\n<p>that does work...anyway....</p>\n</blockquote>\n<p>misread that</p>",
        "id": 226582008,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512165
    },
    {
        "content": "<p>idk</p>",
        "id": 226582035,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512181
    },
    {
        "content": "<p>impl Trait is like the canonical example (along with closures...) of something where it's super hard to figure out what the plan is, because it's been RFC'd in tiny pieces</p>",
        "id": 226582069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512194
    },
    {
        "content": "<p>So Niko are you volunteering to write the RFC?</p>",
        "id": 226582084,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512201
    },
    {
        "content": "<p>yes</p>",
        "id": 226582134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512206
    },
    {
        "content": "<p>Or if you open a hackmd, I can add bits and pieces if that's helpful</p>",
        "id": 226582151,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512217
    },
    {
        "content": "<p>will do</p>",
        "id": 226582170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512228
    },
    {
        "content": "<p>I can also develop it in the wg-traits repo potentially</p>",
        "id": 226582181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512235
    },
    {
        "content": "<p>but I'll start in a hackmd</p>",
        "id": 226582194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512241
    },
    {
        "content": "<p>and maybe finish there :)</p>",
        "id": 226582212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512251
    },
    {
        "content": "<p>makes sense</p>",
        "id": 226582261,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512276
    },
    {
        "content": "<p>And then also the <code>member_constraints</code> stabilization report?</p>",
        "id": 226582274,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512287
    },
    {
        "content": "<p>yeah, I can do those two things</p>",
        "id": 226582282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512295
    },
    {
        "content": "<p>or at least start them, I have to kind of schedule</p>",
        "id": 226582314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512311
    },
    {
        "content": "<p>Okay, we should quickly discuss Chalk status? And type library status?</p>",
        "id": 226582329,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512314
    },
    {
        "content": "<p>we can, but I also have to in 8 minutes</p>",
        "id": 226582366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512324
    },
    {
        "content": "<p>so I guess it depends how long we think it will take</p>",
        "id": 226582398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512330
    },
    {
        "content": "<p>I would find it useful to get a recap, I'd like to incorporate that into our overall planning</p>",
        "id": 226582420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> I reviewed <a href=\"https://github.com/rust-lang/chalk/issues/681\">chalk#681</a></p>",
        "id": 226582422,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512343
    },
    {
        "content": "<p>Nice!</p>",
        "id": 226582432,
        "sender_full_name": "detrumi",
        "timestamp": 1613512350
    },
    {
        "content": "<p>Niko can you review <a href=\"https://github.com/rust-lang/chalk/issues/683\">chalk#683</a></p>",
        "id": 226582455,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512363
    },
    {
        "content": "<p>yes</p>",
        "id": 226582462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512367
    },
    {
        "content": "<p>/me adds to his \"virtual whiteboard\"</p>",
        "id": 226582477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512375
    },
    {
        "content": "<p>my new todo list;)</p>",
        "id": 226582498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512386
    },
    {
        "content": "<p>I don't know enough about the recursive solver to think about coinduction there :)</p>",
        "id": 226582524,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512402
    },
    {
        "content": "<p>But I think it looks reasonable to me</p>",
        "id": 226582535,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512410
    },
    {
        "content": "<p>Other than that, not a ton of activity</p>",
        "id": 226582581,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512439
    },
    {
        "content": "<p>Oh, someone found a solver issue in RA: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7680#issuecomment-779806682\">https://github.com/rust-analyzer/rust-analyzer/issues/7680#issuecomment-779806682</a></p>",
        "id": 226582687,
        "sender_full_name": "detrumi",
        "timestamp": 1613512478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> added <code>Movability</code> to <code>Generator</code></p>",
        "id": 226582688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512479
    },
    {
        "content": "<p>yeah, we are two traits away from completion</p>",
        "id": 226582756,
        "sender_full_name": "Areredify",
        "timestamp": 1613512510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> do you want to take on writing a Chalk test for that? Or maybe <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span></p>",
        "id": 226582794,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226582756\">said</a>:</p>\n<blockquote>\n<p>yeah, we are two traits away from completion</p>\n</blockquote>\n<p>exciting!</p>",
        "id": 226582851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512562
    },
    {
        "content": "<p>On the rustc side of that, I think we're blocked on binder refactor, <code>Param</code> work</p>",
        "id": 226582936,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512603
    },
    {
        "content": "<p>Oh, Chalk side, we need to do placeholder canonicalization</p>",
        "id": 226582957,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512615
    },
    {
        "content": "<p>hmm</p>",
        "id": 226583006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512646
    },
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> has a nearly working branch for that somewhere</p>",
        "id": 226583061,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512678
    },
    {
        "content": "<p>and generators in rustc don't match those in chalk</p>",
        "id": 226583067,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613512680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> still?</p>",
        "id": 226583124,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512694
    },
    {
        "content": "<p>in what ways?</p>",
        "id": 226583133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512700
    },
    {
        "content": "<p>In Chalk, I know there is a <code>GeneratorId</code> in <code>GeneratorWitness</code></p>",
        "id": 226583160,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512713
    },
    {
        "content": "<p>Yes, that issue.</p>",
        "id": 226583176,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613512723
    },
    {
        "content": "<p>So, do we need to remove that?</p>",
        "id": 226583198,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512737
    },
    {
        "content": "<p>Also, quick update on type library stuff:</p>",
        "id": 226583250,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226582957\">said</a>:</p>\n<blockquote>\n<p>Oh, Chalk side, we need to do placeholder canonicalization</p>\n</blockquote>\n<p>Oh shoot, that one still active?</p>",
        "id": 226583260,
        "sender_full_name": "Areredify",
        "timestamp": 1613512769
    },
    {
        "content": "<p>I'll look into it</p>",
        "id": 226583267,
        "sender_full_name": "Areredify",
        "timestamp": 1613512776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span> and <span class=\"user-mention\" data-user-id=\"283967\">@Zahari Dichev</span> are looking into the <code>TyEncodable</code>/<code>TyDecodable</code> story</p>",
        "id": 226583299,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512792
    },
    {
        "content": "<p>(goin to have to drop, will try to catch up async)</p>",
        "id": 226583304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613512793
    },
    {
        "content": "<p>Well, the other problem is that rustc GeneratorWitnesses store the captured types directly while in chalk they come from a query.</p>",
        "id": 226583327,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613512801
    },
    {
        "content": "<p>but it was blocked by instantiation being different in recursive and regular solvers</p>",
        "id": 226583392,
        "sender_full_name": "Areredify",
        "timestamp": 1613512808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is that not the <code>Substitution</code> in <code>GeneratorWitness</code>?</p>",
        "id": 226583618,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512854
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></p>",
        "id": 226583657,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> that is solved now :)</p>",
        "id": 226583695,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512867
    },
    {
        "content": "<p>I don't think so, there's no binder</p>",
        "id": 226583701,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1613512868
    },
    {
        "content": "<p>sweet</p>",
        "id": 226583759,
        "sender_full_name": "Areredify",
        "timestamp": 1613512880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> ah I see</p>",
        "id": 226584089,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512940
    },
    {
        "content": "<p>Yeah, I think these were the issues I first ran into</p>",
        "id": 226584169,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613512962
    },
    {
        "content": "<p>So yeah, that needs to be fixed</p>",
        "id": 226584344,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613513005
    },
    {
        "content": "<p>Okay, that puts us at 3 past the hour</p>",
        "id": 226584398,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613513020
    },
    {
        "content": "<p>Any closing thoughts?</p>",
        "id": 226584421,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613513026
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-02-16/near/226583299\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> and <span class=\"user-mention silent\" data-user-id=\"283967\">Zahari Dichev</span> are looking into the <code>TyEncodable</code>/<code>TyDecodable</code> story</p>\n</blockquote>\n<p>Yup, that's progressing nicely</p>",
        "id": 226584465,
        "sender_full_name": "detrumi",
        "timestamp": 1613513036
    },
    {
        "content": "<p>No blockers I think, just waiting on implementation work</p>",
        "id": 226584576,
        "sender_full_name": "detrumi",
        "timestamp": 1613513063
    },
    {
        "content": "<p>That's awesome to hear</p>",
        "id": 226584597,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613513070
    },
    {
        "content": "<p>Thanks everyone for attending :)</p>",
        "id": 226584722,
        "sender_full_name": "Jack Huey",
        "timestamp": 1613513112
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 226584767,
        "sender_full_name": "detrumi",
        "timestamp": 1613513124
    },
    {
        "content": "<p>Yes, I can try to fix some or all of the diagnostics issues. Also if there are any other things, I'd be glad to help, just ping me.</p>",
        "id": 226589075,
        "sender_full_name": "BN",
        "timestamp": 1613514855
    }
]