[
    {
        "content": "<p>Here is a draft stablization report for TAITs:</p>\n<p><a href=\"https://hackmd.io/o9KO-D8aSb6bJgQ1froVTA\">https://hackmd.io/o9KO-D8aSb6bJgQ1froVTA</a></p>\n<p>Comments welcome.</p>",
        "id": 243060564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623953730
    },
    {
        "content": "<p><strong>Non-trivial type aliases</strong></p>",
        "id": 243061395,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954110
    },
    {
        "content": "<p>So, I think we should be more clear here</p>",
        "id": 243061414,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954118
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>struct Y&lt;T&gt;(T);\ntype X = Y&lt;impl Sized&gt;;\n</code></pre></div>\n<p>is fine</p>",
        "id": 243061472,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954127
    },
    {
        "content": "<p>but</p>\n<div class=\"codehilite\"><pre><span></span><code>type Z = fn(impl Sized);\n</code></pre></div>\n<p>doesn't seem to be</p>",
        "id": 243061505,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954141
    },
    {
        "content": "<p>Though I guess that second example seems very specific to <code>fn</code>s</p>",
        "id": 243062008,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954334
    },
    {
        "content": "<p>minor detail, it talks about the RFC but it's never linked</p>",
        "id": 243062115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623954367
    },
    {
        "content": "<p>ohh I see at the top there's a place to fill out with that info <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 243062159,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623954398
    },
    {
        "content": "<blockquote>\n<p>This can effectively be desugared into a TAIT whose scope encompasses just the impl. Roughly like the following:</p>\n</blockquote>\n<p>This desugaring seems not quite right; I would expect that <code>type Future = impl Future&lt;Output = Response&gt;;</code> to be in the module, not the impl</p>",
        "id": 243062691,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954605
    },
    {
        "content": "<p>For reference,</p>\n<div class=\"codehilite\"><pre><span></span><code>type Z = fn() -&gt; impl Sized;\n\nfn bar() -&gt; Z {\n    || 0u32\n}\n</code></pre></div>\n<p>also doesn't work. So my example above doesn't just apply when TAIT is an argument</p>",
        "id": 243063516,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623954943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/TAIT.20stabilization.20report/near/243060564\">said</a>:</p>\n<blockquote>\n<p>Comments welcome.</p>\n</blockquote>\n<p>can we just comment with <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> and <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> emojis?</p>",
        "id": 243064011,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1623955111
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>// Illegal: cannot use MyFuture in a field type\n</code></pre></div>\n<p>Oof, that's rough. I feel like that's a really nice to have. But I guess the semantics become tough: you could theoretically imagine that using it there could be a \"defining use\", or you could have a defining use elsewhere but just have the struct store the type</p>",
        "id": 243064052,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623955131
    },
    {
        "content": "<p>I.e. I could imagine that a function might create an iterator and you would want to store that iterator in a struct</p>",
        "id": 243064146,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623955168
    },
    {
        "content": "<p>you can do it with a submodule</p>",
        "id": 243064521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955324
    },
    {
        "content": "<p>I do want to eventually support \"impl Trait everywhere\"</p>",
        "id": 243064538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955334
    },
    {
        "content": "<p>Other than that, the only other comment I have is: it would be nice to at least mention how these are defined logically/in Chalk. I think the remaining issue there is the interaction with WF and implied bounds (<a href=\"https://github.com/rust-lang/rust/issues/335\">#335</a>), but I'm not sure if there's a model where the hidden type \"isn't known\"</p>",
        "id": 243064551,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623955343
    },
    {
        "content": "<p>that's kind of the next RFC here, I've been putting off writing it because I would have to bring various things back in cache...</p>",
        "id": 243064555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955346
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/TAIT.20stabilization.20report/near/243064551\">said</a>:</p>\n<blockquote>\n<p>Other than that, the only other comment I have is: it would be nice to at least mention how these are defined logically/in Chalk. I think the remaining issue there is the interaction with WF and implied bounds (<a href=\"https://github.com/rust-lang/rust/issues/335\">#335</a>), but I'm not sure if there's a model where the hidden type \"isn't known\"</p>\n</blockquote>\n<p>can you edit in a section with FIXME</p>",
        "id": 243064588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955360
    },
    {
        "content": "<p>and maybe add other FIXME lines for other comments?</p>",
        "id": 243064602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955367
    },
    {
        "content": "<p>I can't edit it right now, finishing up something else</p>",
        "id": 243064613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623955372
    }
]