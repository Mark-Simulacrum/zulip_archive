[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 198119052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918550
    },
    {
        "content": "<p>Agenda here: <a href=\"https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg?both\">https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg?both</a></p>",
        "id": 198119131,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918596
    },
    {
        "content": "<p>But I think our main goal for today is going to be planning for the next sprint</p>",
        "id": 198119155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918610
    },
    {
        "content": "<p>Sorry I'm late</p>",
        "id": 198119403,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918725
    },
    {
        "content": "<p>Announcement: sprint recap blot post was posted yesterday</p>",
        "id": 198119455,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918759
    },
    {
        "content": "<p>I'm trying to think how to structure this meeting :)</p>",
        "id": 198119550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918788
    },
    {
        "content": "<p>maybe we should create a fresh hackmd to collect sprint goals etc?</p>",
        "id": 198119573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918797
    },
    {
        "content": "<p>Yes</p>",
        "id": 198119581,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918803
    },
    {
        "content": "<p>This was the <a href=\"https://hackmd.io/kYWsWI9IS0213x0qX_1RDw?both\">old one</a></p>",
        "id": 198119598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918814
    },
    {
        "content": "<p>which should be moved to the repo I imagine</p>",
        "id": 198119628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918831
    },
    {
        "content": "<p>I guess we could just re-use it</p>",
        "id": 198119638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918838
    },
    {
        "content": "<p>let's do that</p>",
        "id": 198119649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918840
    },
    {
        "content": "<p>It has been</p>",
        "id": 198119656,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918844
    },
    {
        "content": "<p>ah ok great</p>",
        "id": 198119668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918850
    },
    {
        "content": "<p>Nah, let's just create a new one</p>",
        "id": 198119669,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918851
    },
    {
        "content": "<p>Surprised you missed that when you merged the PR for wg-traits</p>",
        "id": 198119689,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/design.20meeting.202020.2E05.2E19/near/198119669\">said</a>:</p>\n<blockquote>\n<p>Nah, let's just create a new one</p>\n</blockquote>\n<p><a href=\"https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg\">https://hackmd.io/D_wskAmRT52zL9xmhmg0Kg</a></p>",
        "id": 198119790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918906
    },
    {
        "content": "<p>ok</p>",
        "id": 198119791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918907
    },
    {
        "content": "<p>maybe we can drop some notes for \"headline goals\" in there?</p>",
        "id": 198119865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918949
    },
    {
        "content": "<p>Probably</p>",
        "id": 198119894,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918967
    },
    {
        "content": "<p>I don't quite know where to start</p>",
        "id": 198119925,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589918977
    },
    {
        "content": "<p>I want to make more progress towards this idea of a shared library for types</p>",
        "id": 198119928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918978
    },
    {
        "content": "<p>so I put that in there</p>",
        "id": 198119933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589918981
    },
    {
        "content": "<p>Do the in-progress/uncompleted goals transfer to this new sprint?</p>",
        "id": 198119960,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589919000
    },
    {
        "content": "<p>I think another thing: for the recursive solver, there is some work to be done</p>",
        "id": 198119980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919002
    },
    {
        "content": "<p>Yes, in-progress/uncompleted goals get added too</p>",
        "id": 198120056,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919031
    },
    {
        "content": "<p>Ok, I put in my notes about the recursive solver</p>",
        "id": 198120078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919047
    },
    {
        "content": "<p>I think tracing and impl trait fall under that</p>",
        "id": 198120080,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919049
    },
    {
        "content": "<p>And benchmarks</p>",
        "id": 198120105,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919065
    },
    {
        "content": "<p>I think having at least some basic documentation about the recursive solver would be helpful, especially as more new contributors (myself included) start to work with it.</p>",
        "id": 198120161,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589919102
    },
    {
        "content": "<p>Hmm yeah I guess it doesn't have any!</p>",
        "id": 198120259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919140
    },
    {
        "content": "<p>good point :)</p>",
        "id": 198120262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919142
    },
    {
        "content": "<p>So, for rustc integration, do we have a \"next step\" for that. Or is that blocked on me going through the FIXMEs and organizing</p>",
        "id": 198120470,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919253
    },
    {
        "content": "<p>I know we wanted to \"remove the hacks\"</p>",
        "id": 198120487,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919261
    },
    {
        "content": "<p>I second the documentation point. Looking though the alg solver and trying to map ideas to the recursive is hard</p>",
        "id": 198120501,
        "sender_full_name": "Zahari Dichev",
        "timestamp": 1589919272
    },
    {
        "content": "<p>Good question</p>",
        "id": 198120504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919274
    },
    {
        "content": "<p>So, ok, I think there are a few angles</p>",
        "id": 198120524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919287
    },
    {
        "content": "<p>we documented some of them before, right?</p>",
        "id": 198120530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919290
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>* Next steps:\n    * Extend chalk to be able to represent all of the Rust types [chalk#368](https://github.com/rust-lang/chalk/issues/368)\n    * Connect rustc types to the builtin chalk types\n    * Auto trait handling for builtin chalk types\n    * Handling int and float literal inference variables\n    * Region / outlives integration\n    * Bound inference variables, perhaps?\n</code></pre></div>",
        "id": 198120548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919303
    },
    {
        "content": "<p>Yep, those are a few</p>",
        "id": 198120571,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919327
    },
    {
        "content": "<p>I'd probably break this a bit out</p>",
        "id": 198120576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919329
    },
    {
        "content": "<p>there is a \"goal\" of extending chalk-solve to fully cover rust semantics and special cases</p>",
        "id": 198120610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919349
    },
    {
        "content": "<p>I think this covers the first 3 bullets, and probably the 4th too</p>",
        "id": 198120668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919364
    },
    {
        "content": "<p>sure</p>",
        "id": 198120716,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919388
    },
    {
        "content": "<p>on the other side, is editing rustc to integrate better -- and that overlaps somewhat with the goal of aligning rustc types to extract a shared library</p>",
        "id": 198120718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919390
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Goal: experiment with using equivalence edges in SLG</li>\n</ul>\n</blockquote>",
        "id": 198120776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919426
    },
    {
        "content": "<p>I'm wondering how much we want to focus on this this sprint</p>",
        "id": 198120789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919432
    },
    {
        "content": "<p>Probably not any</p>",
        "id": 198120811,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919441
    },
    {
        "content": "<p>I'm not opposed, but I guess I also don't feel particular urgency</p>",
        "id": 198120815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919444
    },
    {
        "content": "<p>I almost wanted to just put it under a more broader \"experimentation\" goal</p>",
        "id": 198120851,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919459
    },
    {
        "content": "<p>another goal we should highlight is const generics work  --- after <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span>'s PR lands, I'm not sure if that's just kind of \"the end\" for this sprint, or if we want to go any further</p>",
        "id": 198120940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919486
    },
    {
        "content": "<p>I guess that we could try to connect it to rustc</p>",
        "id": 198120971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919497
    },
    {
        "content": "<p>Hmm, what more work is there to do for consts</p>",
        "id": 198120993,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919510
    },
    {
        "content": "<p>associated consts</p>",
        "id": 198121015,
        "sender_full_name": "Areredify",
        "timestamp": 1589919523
    },
    {
        "content": "<p>const evaluation</p>",
        "id": 198121027,
        "sender_full_name": "Areredify",
        "timestamp": 1589919533
    },
    {
        "content": "<p>rustc integration</p>",
        "id": 198121037,
        "sender_full_name": "Areredify",
        "timestamp": 1589919539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"251766\">Areredify</span> <a href=\"#narrow/stream/144729-wg-traits/topic/design.20meeting.202020.2E05.2E19/near/198121027\">said</a>:</p>\n<blockquote>\n<p>const evaluation</p>\n</blockquote>\n<p>what is this?</p>",
        "id": 198121048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919549
    },
    {
        "content": "<p>do we just not support that at all I guess?</p>",
        "id": 198121063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919561
    },
    {
        "content": "<p>/me tries to remember what's in the PR</p>",
        "id": 198121069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919564
    },
    {
        "content": "<p>I mean unevaluated consts</p>",
        "id": 198121089,
        "sender_full_name": "Areredify",
        "timestamp": 1589919574
    },
    {
        "content": "<p>the other question if the semantic-vs-synctactic split</p>",
        "id": 198121205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919606
    },
    {
        "content": "<p>I think that remains well-motivated and would resolve some issue or other for rust-analyzer iirc</p>",
        "id": 198121228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919620
    },
    {
        "content": "<p>What is the status of that</p>",
        "id": 198121267,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919646
    },
    {
        "content": "<p>I'm not 100% sure, I remember we overcame one blocking problem -- <span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> ?</p>",
        "id": 198121308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919671
    },
    {
        "content": "<p>Needs rebase and (I hope) slight modification for test to pass</p>",
        "id": 198121333,
        "sender_full_name": "Areredify",
        "timestamp": 1589919687
    },
    {
        "content": "<p>Yeah, we figured out the coinduction problem</p>",
        "id": 198121347,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919692
    },
    {
        "content": "<p>thats just for aliaseq</p>",
        "id": 198121351,
        "sender_full_name": "Areredify",
        "timestamp": 1589919694
    },
    {
        "content": "<p>yeah ok, that's the first step</p>",
        "id": 198121381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919715
    },
    {
        "content": "<p>Im working on it :)</p>",
        "id": 198121492,
        "sender_full_name": "Areredify",
        "timestamp": 1589919773
    },
    {
        "content": "<p>(PS, is the existing const generics PR ready for re-review?)</p>",
        "id": 198121547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919805
    },
    {
        "content": "<p>also specialization for consts</p>",
        "id": 198121590,
        "sender_full_name": "Areredify",
        "timestamp": 1589919831
    },
    {
        "content": "<p>It seems like a goal might be: figuring out the crater structure and publishing</p>",
        "id": 198121596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919837
    },
    {
        "content": "<p>yes, it's ready</p>",
        "id": 198121597,
        "sender_full_name": "Areredify",
        "timestamp": 1589919838
    },
    {
        "content": "<p>right</p>",
        "id": 198121750,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919900
    },
    {
        "content": "<p>side note</p>",
        "id": 198121768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919913
    },
    {
        "content": "<p>should we integrate bors?</p>",
        "id": 198121781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919915
    },
    {
        "content": "<p>I think yes</p>",
        "id": 198121783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919916
    },
    {
        "content": "<p>not the main rust bors</p>",
        "id": 198121786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919922
    },
    {
        "content": "<p>but like bors-ng or something</p>",
        "id": 198121802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919925
    },
    {
        "content": "<p>(don't want to block the rustc queue...)</p>",
        "id": 198121823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919934
    },
    {
        "content": "<p>i.e., if we're going to try and auto-publish</p>",
        "id": 198121837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919938
    },
    {
        "content": "<p>we should keep the tree green :)</p>",
        "id": 198121845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919942
    },
    {
        "content": "<p>Not a bad idea</p>",
        "id": 198121859,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919948
    },
    {
        "content": "<p>not that we've had a ton of problems with that but stil</p>",
        "id": 198121864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919950
    },
    {
        "content": "<p>I don't know of <em>any</em> problems</p>",
        "id": 198121889,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919961
    },
    {
        "content": "<p>But should be easy enough I think</p>",
        "id": 198121958,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919973
    },
    {
        "content": "<p>right</p>",
        "id": 198121963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589919976
    },
    {
        "content": "<p>(Also Niko waiting for a response <a href=\"https://github.com/rust-lang/chalk/pull/459\">https://github.com/rust-lang/chalk/pull/459</a>)</p>",
        "id": 198121978,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589919981
    },
    {
        "content": "<p>Ah</p>",
        "id": 198122035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920008
    },
    {
        "content": "<p>Can I copy some chalk book goals from the previous sprint over (documenting sigils), along with documenting the recursive solver?<br>\n(not sure if we're all supposed to be modifying the sprint document)</p>",
        "id": 198122057,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589920021
    },
    {
        "content": "<p>Yep go for it</p>",
        "id": 198122101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920045
    },
    {
        "content": "<p>Id like to go a bit through the goals and try to have \"leads\" for them or something</p>",
        "id": 198122123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920053
    },
    {
        "content": "<p>Good idea</p>",
        "id": 198122146,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920069
    },
    {
        "content": "<p>or at least just think a bit about who will try to mentor/document/whatever it</p>",
        "id": 198122150,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920070
    },
    {
        "content": "<p>(might be nice to actually track that more generally, i.e., during the sprint...)</p>",
        "id": 198122251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920106
    },
    {
        "content": "<p>Indeed</p>",
        "id": 198122284,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920129
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Goal: chalk crate structure and publishing</li>\n</ul>\n</blockquote>\n<p>Who was working on this so far? <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> and <span class=\"user-mention\" data-user-id=\"218805\">@Mark Drobnak</span> ?</p>",
        "id": 198122322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920145
    },
    {
        "content": "<p>I think so</p>",
        "id": 198122356,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920167
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 198122365,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589920174
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"254853\">@pksunkara</span></p>",
        "id": 198122381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920183
    },
    {
        "content": "<p>when it comes to releases</p>",
        "id": 198122390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920187
    },
    {
        "content": "<p>and maybe they're interested in integrating bors-ng :)</p>",
        "id": 198122408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920192
    },
    {
        "content": "<p>ps</p>",
        "id": 198122412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920193
    },
    {
        "content": "<p>was about to hit enter</p>",
        "id": 198122414,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920194
    },
    {
        "content": "<p>we should update the list of folks in wg-traits in the <a href=\"https://github.com/rust-lang/team/\">https://github.com/rust-lang/team/</a> repository...</p>",
        "id": 198122529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920226
    },
    {
        "content": "<p>do we have \"generate chalk files\" as a top-level goal</p>",
        "id": 198122594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920266
    },
    {
        "content": "<p>it seems like that can get promoted from experiment to top-level goa by now</p>",
        "id": 198122608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920272
    },
    {
        "content": "<p>That's a 404, hidden repo?</p>",
        "id": 198122612,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589920273
    },
    {
        "content": "<p>I put it under experiments</p>",
        "id": 198122614,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920277
    },
    {
        "content": "<p>(erase the /tree)</p>",
        "id": 198122625,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920282
    },
    {
        "content": "<p>I'll move it to it's own goa</p>",
        "id": 198122631,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920289
    },
    {
        "content": "<p>goal</p>",
        "id": 198122636,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"218805\">Mark Drobnak</span> <a href=\"#narrow/stream/144729-wg-traits/topic/design.20meeting.202020.2E05.2E19/near/198122612\">said</a>:</p>\n<blockquote>\n<p>That's a 404, hidden repo?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/team/\">https://github.com/rust-lang/team/</a>, sorry</p>",
        "id": 198122646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920296
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/team/blob/master/teams/wg-traits.toml\">this list</a> hasn't been updated to reflect all of y'all :)</p>",
        "id": 198122741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920324
    },
    {
        "content": "<p>I bit lost of who's still around</p>",
        "id": 198122846,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920387
    },
    {
        "content": "<p>So many newcomers this last sprint :)</p>",
        "id": 198122860,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920400
    },
    {
        "content": "<p>this is partly why I brought up that it's useful to have names</p>",
        "id": 198122868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920405
    },
    {
        "content": "<p>(anyway the list is supposed to be people who've been consistently participating for some time)</p>",
        "id": 198122884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920419
    },
    {
        "content": "<p>since e.g. it gives write access to chalk repo :)</p>",
        "id": 198122911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920440
    },
    {
        "content": "<ul>\n<li>Goal: Chalk integration in rustc<br>\n    * Region / outlives integration<br>\n    * Bound inference variables, perhaps?</li>\n</ul>",
        "id": 198122948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920443
    },
    {
        "content": "<p>so I feel like this isn't quite the right \"goal\"</p>",
        "id": 198122958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920449
    },
    {
        "content": "<p>maybe the goal <em>is</em> to integrate lifetimes into the chalk/rustc integration?</p>",
        "id": 198122981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920460
    },
    {
        "content": "<p>Probably</p>",
        "id": 198122994,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920471
    },
    {
        "content": "<p>I just copy/pasted that part from the old sprint doc</p>",
        "id": 198123014,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"251766\">@Areredify</span> how much more do you want to do around const generics :)</p>",
        "id": 198123055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920512
    },
    {
        "content": "<p>I'm wondering if it might be good to mentor somebody else</p>",
        "id": 198123076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920529
    },
    {
        "content": "<p>I can continue my work on it, but I already have my hands pretty full</p>",
        "id": 198123091,
        "sender_full_name": "Areredify",
        "timestamp": 1589920544
    },
    {
        "content": "<p>e.g., to introduce uneval. constants or maybe assoc constants?</p>",
        "id": 198123094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920546
    },
    {
        "content": "<p>yes, right, and it's good to spread knowledge</p>",
        "id": 198123103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920552
    },
    {
        "content": "<p>assoc. constants seems like it's probably \"straightforward\"-ish</p>",
        "id": 198123157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920567
    },
    {
        "content": "<p>Yeah probably</p>",
        "id": 198123188,
        "sender_full_name": "Areredify",
        "timestamp": 1589920593
    },
    {
        "content": "<p>I would be very much glad to help with this - one of the thing I am waiting the most</p>",
        "id": 198123212,
        "sender_full_name": "Bartłomiej Kuras",
        "timestamp": 1589920610
    },
    {
        "content": "<p>this is a kind of impressive list</p>",
        "id": 198123408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920733
    },
    {
        "content": "<p>but..seems realistic</p>",
        "id": 198123422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920742
    },
    {
        "content": "<p>there are a few \"unassigned\" items</p>",
        "id": 198123448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920762
    },
    {
        "content": "<p>Indeed. It's more impressive that this is on top of what all we accomplished the last two sprints</p>",
        "id": 198123457,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920770
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Goal: extend chalk-solve to support Rust semantics</li>\n</ul>\n</blockquote>",
        "id": 198123466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920778
    },
    {
        "content": "<p>this probably takes a few few folks kind of creating the issues</p>",
        "id": 198123502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920798
    },
    {
        "content": "<p>I will take on the rustc part</p>",
        "id": 198123594,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920825
    },
    {
        "content": "<p>to make clear my agenda, I'm trying to identify cases where I don't have to be involved, to maximize throughput :P</p>",
        "id": 198123600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920826
    },
    {
        "content": "<p>(I imagine I might be tagged in here and there to clarify details)</p>",
        "id": 198123675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920865
    },
    {
        "content": "<p>I can go through the builtin types on the tracking issue and make individual issues</p>",
        "id": 198123701,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920883
    },
    {
        "content": "<p>seems like <span class=\"user-mention\" data-user-id=\"230601\">@Nathan Whitaker</span> (I guess that's <code>nathanwhit</code>) has been pursuing this</p>",
        "id": 198123745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920911
    },
    {
        "content": "<p>not sure if they still want to :)</p>",
        "id": 198123752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920915
    },
    {
        "content": "<p>specifically <a href=\"https://github.com/rust-lang-nursery/chalk/issues/368\">chalk#368</a> I mean</p>",
        "id": 198123815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589920935
    },
    {
        "content": "<p>It's been a mix</p>",
        "id": 198123889,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589920996
    },
    {
        "content": "<p>I've done a few, which has helped me learn the codebase</p>",
        "id": 198123910,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589921015
    },
    {
        "content": "<p>I think all the straightforward ones (other than Never) are done</p>",
        "id": 198123922,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921027
    },
    {
        "content": "<p>Now it's the harder ones, like Closure, Generator, Array</p>",
        "id": 198123935,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921039
    },
    {
        "content": "<p>Yes</p>",
        "id": 198123981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921046
    },
    {
        "content": "<p>I just merged the const generics PR :)</p>",
        "id": 198124045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921091
    },
    {
        "content": "<p>that was kind of a blocked for some of this</p>",
        "id": 198124054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921095
    },
    {
        "content": "<p>Mmm, I think arrays</p>",
        "id": 198124085,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921114
    },
    {
        "content": "<p>Not sure if anything else</p>",
        "id": 198124091,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921119
    },
    {
        "content": "<p>yes mainly just arrays...</p>",
        "id": 198124101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921124
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Goal: Handle region constraints in rustc integration</li>\n</ul>\n</blockquote>",
        "id": 198124190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921164
    },
    {
        "content": "<p>Jack, do you want to work on that? I'm not entirely sure what we even mean, might be good to schedule some time to touch base and talk about what we want to do</p>",
        "id": 198124230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921186
    },
    {
        "content": "<p>For Adts, we still need to be able to handle auto traits with structs and enums differently</p>",
        "id": 198124244,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921195
    },
    {
        "content": "<p>how are they different?</p>",
        "id": 198124257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921205
    },
    {
        "content": "<p>Well, structs it's the last field</p>",
        "id": 198124291,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921227
    },
    {
        "content": "<p>enums it's more complicated?</p>",
        "id": 198124297,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921232
    },
    {
        "content": "<p>that's just the <code>Sized</code> trait</p>",
        "id": 198124314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921239
    },
    {
        "content": "<p>and maybe <code>Unsize</code></p>",
        "id": 198124326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921246
    },
    {
        "content": "<p>ah</p>",
        "id": 198124343,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921261
    },
    {
        "content": "<p>maybe that's what I meant</p>",
        "id": 198124347,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921265
    },
    {
        "content": "<p>but we do probably want to generalize to \"number of variants\" or something</p>",
        "id": 198124349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921266
    },
    {
        "content": "<p>i.e., I don't think we have the full info we need</p>",
        "id": 198124359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921273
    },
    {
        "content": "<p>we don't</p>",
        "id": 198124365,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921280
    },
    {
        "content": "<p>I don't honestly remember how <code>Unsize</code> works with enums, I think we just forbid it, but we may permit it for uni-variant enums?</p>",
        "id": 198124417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921290
    },
    {
        "content": "<p>As far as regions in rustc integration, yes</p>",
        "id": 198124422,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921293
    },
    {
        "content": "<p>I <em>still</em> have to redo the lifetime outlives PR</p>",
        "id": 198124438,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921306
    },
    {
        "content": "<p>haven't had time</p>",
        "id": 198124446,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921309
    },
    {
        "content": "<p>I think that goes under that heading</p>",
        "id": 198124455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921317
    },
    {
        "content": "<p>For Unsize, I don't know</p>",
        "id": 198124473,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921325
    },
    {
        "content": "<p>For Sized, I looked at it briefly but don't remember</p>",
        "id": 198124499,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921339
    },
    {
        "content": "<p>Unsize does not work with enums</p>",
        "id": 198124574,
        "sender_full_name": "Areredify",
        "timestamp": 1589921389
    },
    {
        "content": "<p>For the Sized/Unsize difference between structs and enums, does chalk have to do anything to support enums (at least at the chalk_ir level)? I don't see enums in the chalk AST.</p>",
        "id": 198124582,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589921395
    },
    {
        "content": "<p>Adt is meant to be both structs/enums (and unions)</p>",
        "id": 198124668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921423
    },
    {
        "content": "<p>we do need I think to do a few small things</p>",
        "id": 198124685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921436
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_ty/ty.rs#L185\">https://github.com/rust-lang/rust/blob/master/src/librustc_ty/ty.rs#L185</a></p>",
        "id": 198124709,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921454
    },
    {
        "content": "<p>i.e., the WF conditions for enums would be different</p>",
        "id": 198124711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921454
    },
    {
        "content": "<p>so we should probably make an issue to generalize ADT to include variant info</p>",
        "id": 198124752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921476
    },
    {
        "content": "<p>and perhaps add some kind of <code>enum Foo { .. }</code>  syntax to the test harness</p>",
        "id": 198124768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921487
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/design.20meeting.202020.2E05.2E19/near/198124711\">said</a>:</p>\n<blockquote>\n<p>i.e., the WF conditions for enums would be different</p>\n</blockquote>\n<p>it seems to me that another <em>eventual</em> rustc goal (maybe not this sprint though) would be to use chalk to replace some of this logic in rustc, as well as coherence</p>",
        "id": 198124863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921522
    },
    {
        "content": "<p>I think we're not there yet though</p>",
        "id": 198124893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921529
    },
    {
        "content": "<p>I was looking...how are <code>Fn</code> and <code>FnDef</code> supposed to be represented (differently) in the tests?</p>",
        "id": 198124915,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921539
    },
    {
        "content": "<p>oh right and we need a \"rename Fn to FnPointer\" ...</p>",
        "id": 198124950,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921556
    },
    {
        "content": "<p>I don't know that I understand the question</p>",
        "id": 198124966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921564
    },
    {
        "content": "<p><code>FnDef</code> represent the (unique) type of a named function, so they are represnted by writing e.g. <code>fn foo(..)</code> iirc (and then referencing <code>foo</code>)</p>",
        "id": 198124993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921581
    },
    {
        "content": "<p>but a <code>Fn</code> type is just a function pointer, and you can just write <code>fn(u32)</code> or something in a test</p>",
        "id": 198125012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921592
    },
    {
        "content": "<p>is that what you mean?</p>",
        "id": 198125021,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921597
    },
    {
        "content": "<p>I think so</p>",
        "id": 198125028,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921601
    },
    {
        "content": "<p>~5ish minutes left</p>",
        "id": 198125187,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921673
    },
    {
        "content": "<p>seems like we've got a pretty decent draft here, one of the ones we have to flesh out is the \"impl trait\"</p>",
        "id": 198125250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921708
    },
    {
        "content": "<p>Right</p>",
        "id": 198125280,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921722
    },
    {
        "content": "<p>Anything else to discuss?</p>",
        "id": 198125412,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921783
    },
    {
        "content": "<p>Do we need a \"who?\" for documentation?</p>",
        "id": 198125460,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1589921807
    },
    {
        "content": "<p>I think this is \"everyone\"</p>",
        "id": 198125485,
        "sender_full_name": "Jack Huey",
        "timestamp": 1589921823
    },
    {
        "content": "<p>that's what I was thinking</p>",
        "id": 198125493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589921827
    },
    {
        "content": "<p>I'm a bit late to the party, but regarding support for builtin types, I'd be happy to take that on. I've been meaning to finish those out anyways.</p>",
        "id": 198126061,
        "sender_full_name": "Nathan Whitaker",
        "timestamp": 1589922102
    }
]