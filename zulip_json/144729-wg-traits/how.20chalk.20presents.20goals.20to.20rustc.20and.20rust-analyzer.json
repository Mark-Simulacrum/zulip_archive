[
    {
        "content": "<p>BTW, I was thinking that -- right now at least -- chalk kind of expects rustc, rust-analyzer and so forth to present it with goals that are expressed in relatively \"logic-y\" terms. I think that it would make sense at some point for us to streamline and think a bit about the interface that rustc and rust-analyzer use to talk to chalk. I think ideally it would be expressed more in \"Rust terms\" and probably capture some of the higher-level queries we want to express.</p>",
        "id": 195628253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588108638
    },
    {
        "content": "<p>what kinds of higher-level queries would that be?</p>",
        "id": 195635652,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1588112490
    },
    {
        "content": "<p>I don't know, I have to think about that :) it may not wind up looking all that different. One minor thing is that, if we do the work of separating semantic from syntactic equality, then there is already going to be a \"conversion step\" for goals --</p>",
        "id": 195636031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588112694
    },
    {
        "content": "<p>we could therefore have the input goals be just valid rust where clauses</p>",
        "id": 195636065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588112707
    },
    {
        "content": "<p>or perhaps some mild superset, since we'd want to cover things like \"type is well formed\"</p>",
        "id": 195636098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588112725
    }
]