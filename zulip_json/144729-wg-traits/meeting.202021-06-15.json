[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 242790952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787277
    },
    {
        "content": "<p>I was away last week and I think <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is away this week</p>",
        "id": 242790989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787292
    },
    {
        "content": "<p>I'm trying to burn through some pretty specific goals</p>",
        "id": 242791010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787302
    },
    {
        "content": "<p>One of them is that I want TAIT to be on a path to stabilization by end of week</p>",
        "id": 242791030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787309
    },
    {
        "content": "<p>So I was thinking we might use some time today to dig into the known remaining blockers</p>",
        "id": 242791091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787325
    },
    {
        "content": "<p>Particularly if you're around, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 242791101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787329
    },
    {
        "content": "<p>I'm looking at <a href=\"https://github.com/rust-lang/rust/issues/83190\">https://github.com/rust-lang/rust/issues/83190</a></p>",
        "id": 242791220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787383
    },
    {
        "content": "<p>I'm about to push a branch that reproduces the problem</p>",
        "id": 242791235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787389
    },
    {
        "content": "<p>test case: <a href=\"https://gist.github.com/nikomatsakis/95a0663584c575837f40d957c7c3c8ca\">https://gist.github.com/nikomatsakis/95a0663584c575837f40d957c7c3c8ca</a></p>",
        "id": 242791321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787421
    },
    {
        "content": "<p>something definitely looks bogus here</p>",
        "id": 242791458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787470
    },
    {
        "content": "<p>I have a vague memory from talking to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> that this had to do with a misplaced substitution</p>",
        "id": 242791483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787481
    },
    {
        "content": "<p>I'm pulling up my notes from the time</p>",
        "id": 242791575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787522
    },
    {
        "content": "<p>they're not very helpful, but it does confirm my general suspicion</p>",
        "id": 242791773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787603
    },
    {
        "content": "<p>So the ICE is a delay-span-bug with the message \"unexpected concrete region in borrowck:\"</p>",
        "id": 242791858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787643
    },
    {
        "content": "<p>that appears in two places</p>",
        "id": 242791862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787646
    },
    {
        "content": "<p>yes, we have some trickery for impl trait in return position that injects some extra lifetimes and does some substitution magic, and from the debug output we saw that this wasn't actually happening here</p>",
        "id": 242791887,
        "sender_full_name": "oli",
        "timestamp": 1623787666
    },
    {
        "content": "<p>if you run with <code>-Ztreat-err-as-bug</code> you can get a proper backtrace</p>",
        "id": 242791980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787690
    },
    {
        "content": "<p>it appears that <a href=\"https://github.com/rust-lang/rust/blob/c101d40e59f42ac2c15aca8cccb3b19d32591834/compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs#L83-L87\">https://github.com/rust-lang/rust/blob/c101d40e59f42ac2c15aca8cccb3b19d32591834/compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs#L83-L87</a> is the place where error is reported</p>",
        "id": 242792118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787769
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you remember where that substitution was supposed to be happening :)</p>",
        "id": 242792361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787887
    },
    {
        "content": "<p>I'm trying to page this all back in</p>",
        "id": 242792366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787891
    },
    {
        "content": "<p>so the ICE occurs in <a href=\"https://github.com/rust-lang/rust/blob/c101d40e59f42ac2c15aca8cccb3b19d32591834/compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs#L83-L87\">this borrow code</a> when the type has something other than a <code>ReVar</code></p>",
        "id": 242792472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787925
    },
    {
        "content": "<p>this is the code that is actually doing the reverse inference</p>",
        "id": 242792511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787946
    },
    {
        "content": "<p>i.e., given a resolved opaque type, it is mapping backwards to the definition</p>",
        "id": 242792532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787959
    },
    {
        "content": "<p>I guess the next question is where this code is invoked from</p>",
        "id": 242792545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623787967
    },
    {
        "content": "<p>looks like the <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/nll.rs#L303-L304\">call is here</a></p>",
        "id": 242792635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788027
    },
    {
        "content": "<p>I'm not really here. But still trying to fix the perf regressions in my branch</p>",
        "id": 242792726,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623788057
    },
    {
        "content": "<p>so <code>opaque_type_values</code> is coming from <code>type_check::type_check</code> on <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/nll.rs#L176-L177\">this line</a></p>",
        "id": 242792749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788065
    },
    {
        "content": "<p>Seems like the remaining regression is a typeck regression</p>",
        "id": 242792769,
        "sender_full_name": "Jack Huey",
        "timestamp": 1623788074
    },
    {
        "content": "<p>which in turn comes from here:</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L169-L185\">https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L169-L185</a></p>",
        "id": 242792794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-06-15/near/242792769\">said</a>:</p>\n<blockquote>\n<p>Seems like the remaining regression is a typeck regression</p>\n</blockquote>\n<p>ok-- I haen't had a chance to catch up on your topic yet!</p>",
        "id": 242792810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788096
    },
    {
        "content": "<p>ok, this all makes sense</p>",
        "id": 242792943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788156
    },
    {
        "content": "<p>the question is basically <em>when did this <code>Ty</code> sneak in there</em></p>",
        "id": 242793014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> how much are you following along here:)</p>",
        "id": 242793025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788181
    },
    {
        "content": "<p>I'm still not sure what's going on</p>",
        "id": 242793108,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788222
    },
    {
        "content": "<p>was still trying to run the code</p>",
        "id": 242793119,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788228
    },
    {
        "content": "<p>the <code>insert</code> call appears to <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1328-L1329\">be here</a></p>",
        "id": 242793128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788231
    },
    {
        "content": "<p>ok, I'm going to dig a bit more and then circle back to explain</p>",
        "id": 242793146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788240
    },
    {
        "content": "<p>first of all, I'm trying to understand what's the problem about</p>",
        "id": 242793293,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788295
    },
    {
        "content": "<p>taits doesn't handle regions at all?</p>",
        "id": 242793322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788309
    },
    {
        "content": "<p>or there are troubles in certain situations?</p>",
        "id": 242793334,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788317
    },
    {
        "content": "<p>the problem is that we are encountering a region we don't expect</p>",
        "id": 242793406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788352
    },
    {
        "content": "<p>this suggests we failed to do a substitution that we were supposed to do</p>",
        "id": 242793445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788370
    },
    {
        "content": "<p>in the NLL code, we expect to replace all regions (expect for <code>'static</code>) with <code>ReVar</code> regions</p>",
        "id": 242793509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788394
    },
    {
        "content": "<p>but the values being <a href=\"https://github.com/rust-lang/rust/blob/c101d40e59f42ac2c15aca8cccb3b19d32591834/compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs#L60-L61\">logged by this <code>debug!</code> statement</a> are:</p>",
        "id": 242793590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788415
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>├─0ms DEBUG rustc_mir::borrow_check::region_infer::opaque_types concrete_type=(), substs=[ReEarlyBound(0, &#39;a), T]\n</code></pre></div>",
        "id": 242793608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788422
    },
    {
        "content": "<p>note the <code>ReEarlyBound</code></p>",
        "id": 242793624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788427
    },
    {
        "content": "<p>ohh right, there shouldn't be any region there</p>",
        "id": 242793643,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788437
    },
    {
        "content": "<p>concrete type is <code>()</code></p>",
        "id": 242793698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-06-15/near/242793624\">said</a>:</p>\n<blockquote>\n<p>note the <code>ReEarlyBound</code></p>\n</blockquote>\n<p>I see</p>",
        "id": 242793742,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788476
    },
    {
        "content": "<p>earlier I see this output</p>\n<div class=\"codehilite\"><pre><span></span><code>DEBUG rustc_mir::borrow_check::type_check eq_opaque_type_and_type: instantiated output_ty=_#0t opaque_type_map=VecMap(\n    [\n        (\n            OpaqueTypeKey {\n                def_id: DefId(0:16 ~ issue_83190[317d]::{impl#0}::ImplTrait::{opaque#0}),\n                substs: [\n                    ReEarlyBound(0, &#39;a),\n                    T,\n                ],\n            },\n            OpaqueTypeDecl {\n                opaque_type: Opaque(DefId(0:16 ~ issue_83190[317d]::{impl#0}::ImplTrait::{opaque#0}), [ReEarlyBound(0, &#39;a), T]),\n                definition_span: src/test/ui/impl-trait/issue-83190.rs:28:15: 28:30 (#0),\n                concrete_ty: _#0t,\n                has_required_region_bounds: false,\n                origin: TyAlias,\n            },\n        ),\n    ],\n) revealed_ty=()\n</code></pre></div>",
        "id": 242793751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788478
    },
    {
        "content": "<p>there seems to be some missing logging</p>",
        "id": 242793947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788549
    },
    {
        "content": "<p>well, maybe not</p>",
        "id": 242793973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788566
    },
    {
        "content": "<p>I guess that is invoked from <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1315-L1318\">here</a></p>",
        "id": 242793984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788571
    },
    {
        "content": "<p>those substitutions should be there, right?</p>",
        "id": 242794044,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788589
    },
    {
        "content": "<p>the problem is that they aren't related to the returned <code>()</code>?</p>",
        "id": 242794089,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788609
    },
    {
        "content": "<p>I think the substitutions are wrong</p>",
        "id": 242794137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788630
    },
    {
        "content": "<p>so they shouldn't even be there</p>",
        "id": 242794153,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788640
    },
    {
        "content": "<p>they should have been translated</p>",
        "id": 242794209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788653
    },
    {
        "content": "<p>at least that's what the ICE is about</p>",
        "id": 242794225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788661
    },
    {
        "content": "<p>right</p>",
        "id": 242794228,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788664
    },
    {
        "content": "<p>not 100% sure of how that process works but yeah they shouldn't apply to <code>()</code></p>",
        "id": 242794250,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623788677
    },
    {
        "content": "<p>it seems .. not that complicated</p>",
        "id": 242794275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788691
    },
    {
        "content": "<p>we get the substitution from <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1256-L1263\">this line</a></p>",
        "id": 242794311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788718
    },
    {
        "content": "<p>which is invoking <code>instantiate_opaque_types</code></p>",
        "id": 242794355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788745
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_trait_selection/src/opaque_types.rs#L165-L189\">defined here</a></p>",
        "id": 242794382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788756
    },
    {
        "content": "<p>that function is not part of NLL</p>",
        "id": 242794451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788769
    },
    {
        "content": "<p>and is somewhat expected to yield values that contain <code>ReEarlyBound</code> or what have you</p>",
        "id": 242794474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788779
    },
    {
        "content": "<p>but then we <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1285-L1286\">iterate through the <code>opaque_type_map</code></a></p>",
        "id": 242794537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788814
    },
    {
        "content": "<p>we <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1311-L1314\">apply the substitutions to the <code>concrete_ty</code></a> -- whatever that is -- have to refresh my memory</p>",
        "id": 242794633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788873
    },
    {
        "content": "<p>note that we then call <code>renumber::renumber_regions</code></p>",
        "id": 242794651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788880
    },
    {
        "content": "<p>this is the code that converts into <code>ReVar</code></p>",
        "id": 242794694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788885
    },
    {
        "content": "<p>the problem is basically that we never call that on <code>opaque_type_key_.substs</code></p>",
        "id": 242794718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623788895
    },
    {
        "content": "<p>right</p>",
        "id": 242794990,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789017
    },
    {
        "content": "<p>but this bug existed before my changes, right?</p>",
        "id": 242795014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789026
    },
    {
        "content": "<p>yes</p>",
        "id": 242795019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789030
    },
    {
        "content": "<p>yeah, ok</p>",
        "id": 242795032,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789037
    },
    {
        "content": "<p>you just moved that value around</p>",
        "id": 242795040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789040
    },
    {
        "content": "<p>yes</p>",
        "id": 242795045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789043
    },
    {
        "content": "<p>it seems lke <code>renumber_regions</code> doesn't like to be called on code that is already renumbered</p>",
        "id": 242795048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789045
    },
    {
        "content": "<p>just checking if it was something specifically introduced by me :)</p>",
        "id": 242795064,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789053
    },
    {
        "content": "<p>ok, I guess that with this info I can take a look at it</p>",
        "id": 242795133,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789081
    },
    {
        "content": "<p>I think we probably just have to insert a call to make a <code>renumbered_opaque_type_key</code></p>",
        "id": 242795197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789112
    },
    {
        "content": "<p>but</p>",
        "id": 242795280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789130
    },
    {
        "content": "<p>something is fishy there</p>",
        "id": 242795286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789135
    },
    {
        "content": "<p>hold up :)</p>",
        "id": 242795293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789138
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 242795311,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789151
    },
    {
        "content": "<p>that would create fresh <em>inference variables</em></p>",
        "id": 242795321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789156
    },
    {
        "content": "<p>that will fix the ICE, but I'm not sure it's what we <em>really wanted</em></p>",
        "id": 242795329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789163
    },
    {
        "content": "<p>also I'm looking more into this code and it's seeming a touch suspicious to me</p>",
        "id": 242795403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789209
    },
    {
        "content": "<p>for example <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1293-L1296\">this line</a> that I advised you on seems wrong -- I'm not sure how we know for sure that <code>concrete_opaque_types</code> would have just one entry (i.e., I suspect we should checking the full <code>opaque_type_key</code>)</p>",
        "id": 242795541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789261
    },
    {
        "content": "<p>there might be a much simpler fix here</p>",
        "id": 242795610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789302
    },
    {
        "content": "<p>sorry, reading more into the code :)</p>",
        "id": 242795895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-06-15/near/242795541\">said</a>:</p>\n<blockquote>\n<p>for example <a href=\"https://github.com/rust-lang/rust/blob/246571a846e29691bd535d531365acd318857207/compiler/rustc_mir/src/borrow_check/type_check/mod.rs#L1293-L1296\">this line</a> that I advised you on seems wrong -- I'm not sure how we know for sure that <code>concrete_opaque_types</code> would have just one entry (i.e., I suspect we should checking the full <code>opaque_type_key</code>)</p>\n</blockquote>\n<p>hmm yeah, I guess I would need to re-review where checking only for def_id and where for the whole key</p>",
        "id": 242795951,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789460
    },
    {
        "content": "<p>ok, so I think that may be a bug, and it'd be nice to make a test case for it</p>",
        "id": 242795972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789471
    },
    {
        "content": "<p>but also</p>",
        "id": 242795987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789479
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#universal-regions\">https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#universal-regions</a></p>",
        "id": 242796110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789526
    },
    {
        "content": "<p>this function would be the one we want to convert the substs into the right variables</p>",
        "id": 242796197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789566
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/borrow_check/universal_regions/struct.UniversalRegions.html#method.to_region_vid\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/borrow_check/universal_regions/struct.UniversalRegions.html#method.to_region_vid</a></p>",
        "id": 242796199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789567
    },
    {
        "content": "<p>i.e., to convert from <code>ReEarlyBound</code> to a <code>ReVar</code> or what have you</p>",
        "id": 242796258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789594
    },
    {
        "content": "<p>it might be that we just want to call that instead of ICE'ing</p>",
        "id": 242796323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-06-15/near/242796110\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#universal-regions\">https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#universal-regions</a></p>\n</blockquote>\n<p>what are you trying to say here?</p>",
        "id": 242796328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789609
    },
    {
        "content": "<p>that just gives some general context</p>",
        "id": 242796347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789617
    },
    {
        "content": "<p>not sure hwo useful it is though</p>",
        "id": 242796356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789622
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 242796442,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623789656
    },
    {
        "content": "<p>ok</p>",
        "id": 242796796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789811
    },
    {
        "content": "<p>i'm reading this code more</p>",
        "id": 242796806,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789813
    },
    {
        "content": "<p>I think I'm starting to understand what it does</p>",
        "id": 242796825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789821
    },
    {
        "content": "<p>it definitely wants some comments :)</p>",
        "id": 242796835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789824
    },
    {
        "content": "<p>but given that we are 40 minutes in</p>",
        "id": 242796852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789832
    },
    {
        "content": "<p>maybe I will look at the other bug a bit</p>",
        "id": 242796859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789837
    },
    {
        "content": "<p>and try to leave more detailed notes about a fix</p>",
        "id": 242796902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789843
    },
    {
        "content": "<p>but we should probably open an issue about the cal to <code>get_by</code>, which I believe to be wrong</p>",
        "id": 242796931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789853
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/78450\">https://github.com/rust-lang/rust/issues/78450</a></p>",
        "id": 242797005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789883
    },
    {
        "content": "<p>kind of looks like the same bug</p>",
        "id": 242797040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789898
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">//#![feature(type_alias_impl_trait)]</span>\n<span class=\"cp\">#![feature(min_type_alias_impl_trait)]</span><span class=\"w\"></span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">AssociatedImpl</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">ImplTrait</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span>::<span class=\"n\">ImplTrait</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">DynTrait</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">S</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Associated</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">A</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// ICE</span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span>: <span class=\"nc\">Associated</span><span class=\"o\">&lt;</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">DynTrait</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">AssociatedImpl</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">ImplTrait</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span>::<span class=\"n\">ImplTrait</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 242797160,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623789956
    },
    {
        "content": "<p>this type-checking code is a bit confusing</p>",
        "id": 242798209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> we might want to spend some time doing a kind of write-up for what is going on here</p>",
        "id": 242798265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790452
    },
    {
        "content": "<p>it's a bit confusing to figure out which part is responsible for what</p>",
        "id": 242798280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790458
    },
    {
        "content": "<p>yes</p>",
        "id": 242798404,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623790518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-06-15/near/242797005\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78450\">https://github.com/rust-lang/rust/issues/78450</a></p>\n</blockquote>\n<p>I've assigned both issues to myself</p>",
        "id": 242798641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623790630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I pushed a branch  tait-issue-83190</p>",
        "id": 242798906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790744
    },
    {
        "content": "<p>let's make a zulip topic</p>",
        "id": 242798918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> aren't those 2 issues indeed super similar and supposed to be fixed by <a href=\"https://github.com/rust-lang/rust/issues/85755\">#85755</a> ?</p>",
        "id": 242799312,
        "sender_full_name": "lqd",
        "timestamp": 1623790928
    },
    {
        "content": "<p>lol, I didn't know about <a href=\"https://github.com/rust-lang/rust/pull/85755\">https://github.com/rust-lang/rust/pull/85755</a></p>",
        "id": 242799374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790956
    },
    {
        "content": "<p>but that does sound like it might fix them :)</p>",
        "id": 242799382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623790961
    },
    {
        "content": "<p>ohh ya, seems like a fix for that :)</p>",
        "id": 242799449,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623790991
    },
    {
        "content": "<p>I'd still like to write some docs here</p>",
        "id": 242799474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623791002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> maybe we can schedule a time to do that, could be a good rustc-dev-guide lecture series thing, like we talked about</p>",
        "id": 242799500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623791018
    },
    {
        "content": "<p>sure</p>",
        "id": 242799512,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1623791027
    },
    {
        "content": "<p>I kind of feel the need to do that before I have confidence in stabilizing :)</p>",
        "id": 242799513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623791027
    }
]