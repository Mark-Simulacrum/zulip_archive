[
    {
        "content": "<p>Howdy <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 232487721,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134331
    },
    {
        "content": "<p>running a touch late</p>",
        "id": 232487744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134341
    },
    {
        "content": "<p>Meeting in 1ish minutes</p>",
        "id": 232487745,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134341
    },
    {
        "content": "<p>Alright, meeting time</p>",
        "id": 232488010,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134431
    },
    {
        "content": "<p>So, let's start with annoucements?</p>",
        "id": 232488050,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134441
    },
    {
        "content": "<p>How's everyone doing?</p>",
        "id": 232488082,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134451
    },
    {
        "content": "<p>Tough crowd</p>",
        "id": 232488190,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134495
    },
    {
        "content": "<p>always asking the hard questions <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 232488222,
        "sender_full_name": "detrumi",
        "timestamp": 1617134510
    },
    {
        "content": "<p>Anyways, I figured there's a couple things we could discuss this week (at least things I've come up with)</p>",
        "id": 232488370,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134555
    },
    {
        "content": "<p>But I'm open to other ideas</p>",
        "id": 232488388,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134562
    },
    {
        "content": "<p>The first is the closure issue in Chalk (<a href=\"https://github.com/rust-lang/chalk/issues/688\">chalk#688</a>)</p>",
        "id": 232488414,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134581
    },
    {
        "content": "<p>I was gonna ask whether you had a fix for that</p>",
        "id": 232488478,
        "sender_full_name": "detrumi",
        "timestamp": 1617134594
    },
    {
        "content": "<p>You mentioned earlier that you had a temporary fix in mind at least</p>",
        "id": 232488523,
        "sender_full_name": "detrumi",
        "timestamp": 1617134618
    },
    {
        "content": "<p>I do not. I'm changing things a little bit more to actually repro the issue</p>",
        "id": 232488530,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134622
    },
    {
        "content": "<p>changing things around the test setup?</p>",
        "id": 232488625,
        "sender_full_name": "detrumi",
        "timestamp": 1617134653
    },
    {
        "content": "<p>Yeah, I mean the hacky fix is for rust-analyzer to just make any escaping bound vars to be a part of the closure params (but that's not really viable)</p>",
        "id": 232488671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134674
    },
    {
        "content": "<p>Yes, test setup</p>",
        "id": 232488677,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134679
    },
    {
        "content": "<p>Specifically, I have to change it so that you can specify the current known fn sig</p>",
        "id": 232488711,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134697
    },
    {
        "content": "<p>as opposed to having the signature generated from the closure definition</p>",
        "id": 232488793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134730
    },
    {
        "content": "<p>But I'm not quite sure the \"real\" fix</p>",
        "id": 232488828,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134745
    },
    {
        "content": "<p>but I know the problem</p>",
        "id": 232488836,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134749
    },
    {
        "content": "<p>Which I'm curious on what <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>'s thoughts are</p>",
        "id": 232488879,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134762
    },
    {
        "content": "<p>The other thing we could discuss is WF rules for trait objects</p>",
        "id": 232488926,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134781
    },
    {
        "content": "<p>ok</p>",
        "id": 232488928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134783
    },
    {
        "content": "<p>I'm here now</p>",
        "id": 232488931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134784
    },
    {
        "content": "<p>Specifically, I was going to try to allow trait objects to have GATs in rustc, but wasn't quite sure what to do</p>",
        "id": 232488980,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134810
    },
    {
        "content": "<p>Lastly, we could just discuss the binder refactor PR</p>",
        "id": 232489074,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134863
    },
    {
        "content": "<p>I'm pulling up the closure issue</p>",
        "id": 232489085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134869
    },
    {
        "content": "<p>there's something else we could talk about</p>",
        "id": 232489117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134882
    },
    {
        "content": "<p>so now that I've blocked out an hour a day for chalk every day :)</p>",
        "id": 232489174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134891
    },
    {
        "content": "<p>I'd like to be sketching out our overall path more, especially around the rust-ty library work</p>",
        "id": 232489217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134908
    },
    {
        "content": "<p>but also impl trait, gats, etc</p>",
        "id": 232489232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134916
    },
    {
        "content": "<p>i.e., we could kind of talk about skill trees and dags</p>",
        "id": 232489272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617134924
    },
    {
        "content": "<p>sketching out the library work sounds great, should help make things more concrete and push things forward</p>",
        "id": 232489309,
        "sender_full_name": "detrumi",
        "timestamp": 1617134941
    },
    {
        "content": "<p>Also a good idea</p>",
        "id": 232489390,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617134975
    },
    {
        "content": "<p>I'm leaning somewhat against the closure thing</p>",
        "id": 232489443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135000
    },
    {
        "content": "<p>I think I'd rather discuss that in the morning</p>",
        "id": 232489489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135004
    },
    {
        "content": "<p>when I'm fresher :)</p>",
        "id": 232489499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135007
    },
    {
        "content": "<p>works for me</p>",
        "id": 232489539,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135020
    },
    {
        "content": "<p>but I'd be up to discuss it another day this week</p>",
        "id": 232489543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135023
    },
    {
        "content": "<p>sounds good</p>",
        "id": 232489604,
        "sender_full_name": "detrumi",
        "timestamp": 1617135044
    },
    {
        "content": "<p>do we have a hackmd we use for meetings?</p>",
        "id": 232489616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135046
    },
    {
        "content": "<p>i know we have done at various times</p>",
        "id": 232489630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135052
    },
    {
        "content": "<p>We <em>did</em></p>",
        "id": 232489632,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135053
    },
    {
        "content": "<p>a <em>long</em> time ago</p>",
        "id": 232489646,
        "sender_full_name": "detrumi",
        "timestamp": 1617135059
    },
    {
        "content": "<p>lol</p>",
        "id": 232489649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135061
    },
    {
        "content": "<p><a href=\"https://hackmd.io/S8eYagcPSnezRmTdEwyB4Q\">https://hackmd.io/S8eYagcPSnezRmTdEwyB4Q</a></p>",
        "id": 232489686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135077
    },
    {
        "content": "<p>Hasn't been updated but <a href=\"https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg\">https://hackmd.io/nrhN5A8sR2eY9UdfJTKcJg</a></p>",
        "id": 232489690,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135079
    },
    {
        "content": "<p>well there's this :)</p>",
        "id": 232489692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135080
    },
    {
        "content": "<p>yeah, that's the old one</p>",
        "id": 232489720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232489686\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://hackmd.io/S8eYagcPSnezRmTdEwyB4Q\">https://hackmd.io/S8eYagcPSnezRmTdEwyB4Q</a></p>\n</blockquote>\n<p>oops</p>",
        "id": 232489757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135104
    },
    {
        "content": "<p>wrong wg :)</p>",
        "id": 232489765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135107
    },
    {
        "content": "<p>I was a bit confused</p>",
        "id": 232489781,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135116
    },
    {
        "content": "<p><a href=\"https://hackmd.io/team/rust-wg-traits?nav=overview\">https://hackmd.io/team/rust-wg-traits?nav=overview</a></p>",
        "id": 232489831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135123
    },
    {
        "content": "<p>there we go</p>",
        "id": 232489838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135125
    },
    {
        "content": "<p>ooh gonna bookmark that right away</p>",
        "id": 232489933,
        "sender_full_name": "detrumi",
        "timestamp": 1617135158
    },
    {
        "content": "<p>I can make you a member of it, <span class=\"user-mention\" data-user-id=\"125131\">@detrumi</span></p>",
        "id": 232489970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135173
    },
    {
        "content": "<p>I think I already am</p>",
        "id": 232490029,
        "sender_full_name": "detrumi",
        "timestamp": 1617135201
    },
    {
        "content": "<p>can make a new note and everything</p>",
        "id": 232490044,
        "sender_full_name": "detrumi",
        "timestamp": 1617135207
    },
    {
        "content": "<p>ok</p>",
        "id": 232490058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135211
    },
    {
        "content": "<p>good because I couldn't figure out how</p>",
        "id": 232490074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135217
    },
    {
        "content": "<p>Do we just want to append onto the old meeting log?</p>",
        "id": 232490110,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135238
    },
    {
        "content": "<p>what are we doing :)</p>",
        "id": 232490170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135250
    },
    {
        "content": "<p>are we discussing type library?</p>",
        "id": 232490187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135256
    },
    {
        "content": "<p>(cog wheel next to team space, we can add members there)</p>",
        "id": 232490217,
        "sender_full_name": "detrumi",
        "timestamp": 1617135264
    },
    {
        "content": "<p>I think discussing type library/plans is a good idea</p>",
        "id": 232490284,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135294
    },
    {
        "content": "<p>let's do that</p>",
        "id": 232490294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135299
    },
    {
        "content": "<p>ok, so, last time we talked, there was a PR that seemed cool</p>",
        "id": 232490328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135309
    },
    {
        "content": "<p>(link?)</p>",
        "id": 232490336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135312
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83142\">#83142</a></p>",
        "id": 232490389,
        "sender_full_name": "detrumi",
        "timestamp": 1617135331
    },
    {
        "content": "<p>What this does:</p>",
        "id": 232490625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135405
    },
    {
        "content": "<ul>\n<li>Introduces <code>Interner</code> trait</li>\n</ul>",
        "id": 232490635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135409
    },
    {
        "content": "<p>or maybe we can sketch where we are <em>at</em></p>",
        "id": 232490650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135414
    },
    {
        "content": "<p>we have a crate:)</p>",
        "id": 232490664,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135421
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_type_ir/index.html\"><code>rustc_type_ir</code></a></p>",
        "id": 232490716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135449
    },
    {
        "content": "<p>You are too quick on the links</p>",
        "id": 232490743,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135465
    },
    {
        "content": "<p>I go to get a link, come back, and it's there</p>",
        "id": 232490769,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135476
    },
    {
        "content": "<p>currently it has various small \"leaf\" types in it</p>",
        "id": 232490827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135488
    },
    {
        "content": "<p>yes</p>",
        "id": 232490904,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135520
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83142\">#83142</a> adds an <code>Interner</code> trait in there, right?</p>",
        "id": 232490954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135543
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/issues/83142\">#83142</a> is enough to start moving the bigger things</p>",
        "id": 232490964,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135546
    },
    {
        "content": "<p>Alongside some <code>Debug</code> and <code>HashStable</code> instances</p>",
        "id": 232490972,
        "sender_full_name": "detrumi",
        "timestamp": 1617135547
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232490954\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/83142\">#83142</a> adds an <code>Interner</code> trait in there, right?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 232490997,
        "sender_full_name": "detrumi",
        "timestamp": 1617135556
    },
    {
        "content": "<p>The <code>Interner</code> trait that abstracts over the types using associated types</p>",
        "id": 232491052,
        "sender_full_name": "detrumi",
        "timestamp": 1617135586
    },
    {
        "content": "<p>With mainly <code>alloc_*</code> and <code>mk_*</code> functions</p>",
        "id": 232491167,
        "sender_full_name": "detrumi",
        "timestamp": 1617135615
    },
    {
        "content": "<p>how does this compare to chalk's interner</p>",
        "id": 232491219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135635
    },
    {
        "content": "<p>also</p>",
        "id": 232491369,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135683
    },
    {
        "content": "<p>ok, I see</p>",
        "id": 232491375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135684
    },
    {
        "content": "<p>generally the same setup</p>",
        "id": 232491391,
        "sender_full_name": "detrumi",
        "timestamp": 1617135694
    },
    {
        "content": "<p>it adds an implementation of the <code>Interner</code> trait for <code>TyInterner&lt;'tcx&gt;</code></p>",
        "id": 232491400,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135697
    },
    {
        "content": "<p>and then it rewrites some logic to use the methods from the trait, and not the direct methods on <code>TyCtxt&lt;'tcx&gt;</code></p>",
        "id": 232491424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135715
    },
    {
        "content": "<p>in particular, the decoder logic</p>",
        "id": 232491429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135718
    },
    {
        "content": "<p>correct?</p>",
        "id": 232491433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135719
    },
    {
        "content": "<p>has some duplicate assoc types for variants of the same thing, like <code>Span</code>, <code>AllocatedSpan</code> and <code>AllocatedSpanSlice</code></p>",
        "id": 232491434,
        "sender_full_name": "detrumi",
        "timestamp": 1617135719
    },
    {
        "content": "<p>I think we probably just want to change that impl onto <code>TyCtxt</code></p>",
        "id": 232491479,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135725
    },
    {
        "content": "<p>I was going to ask about that</p>",
        "id": 232491501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135736
    },
    {
        "content": "<p>I'm just going to pretend that's what it does for now</p>",
        "id": 232491641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135799
    },
    {
        "content": "<p>Yes, that might be simpler, instead of the <code>tcx.interner()</code> function we have now</p>",
        "id": 232491647,
        "sender_full_name": "detrumi",
        "timestamp": 1617135801
    },
    {
        "content": "<p>This also made me think: I wonder how much of the <code>Interner</code> we can abstract away</p>",
        "id": 232491657,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135806
    },
    {
        "content": "<p>(ps, cc <span class=\"user-mention\" data-user-id=\"283967\">@Zahari Dichev</span>, not sure what time zone you are in :)</p>",
        "id": 232491673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135812
    },
    {
        "content": "<p>what do you mean by \"abstract away\", <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> ?</p>",
        "id": 232491720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135839
    },
    {
        "content": "<p>So</p>",
        "id": 232491788,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135851
    },
    {
        "content": "<p>Similar to the <code>ArenaAllocatable</code> trait</p>",
        "id": 232491825,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135866
    },
    {
        "content": "<p>But I'm not sure</p>",
        "id": 232491903,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617135902
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/arena/trait.ArenaAllocatable.html\"><code>ArenaAllocatable</code></a></p>",
        "id": 232491910,
        "sender_full_name": "detrumi",
        "timestamp": 1617135904
    },
    {
        "content": "<p>I see</p>",
        "id": 232492184,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136001
    },
    {
        "content": "<p>I dont' know</p>",
        "id": 232492191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136006
    },
    {
        "content": "<p>It would just be nice if we could remove the need to have a bunch of different functions that essentially only have <code> self.tcx.arena.alloc(value)</code></p>",
        "id": 232492281,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136052
    },
    {
        "content": "<p>well</p>",
        "id": 232492358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136082
    },
    {
        "content": "<p>it seems like we could have a trait like</p>",
        "id": 232492422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136094
    },
    {
        "content": "<p>All <code>alloc_*_from_iter</code> functions could be reduced to 1 function, but that would require the interner trait to have lifetimes on the types</p>",
        "id": 232492498,
        "sender_full_name": "detrumi",
        "timestamp": 1617136131
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">AllocatableIn</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">allocate_in</span><span class=\"p\">(</span><span class=\"n\">interner</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">input</span>: <span class=\"nc\">F</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232492520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136139
    },
    {
        "content": "<p>If there was associated lifetimes, what would they look like <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 232492621,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136177
    },
    {
        "content": "<p>and then do </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Interner</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">TyData</span>: <span class=\"nc\">AllocatableIn</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TyData</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>something like that</p>",
        "id": 232492632,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136182
    },
    {
        "content": "<p>or rather</p>",
        "id": 232492719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136205
    },
    {
        "content": "<p>instead of <code>    fn alloc_promoted(self, value: Self::Promoted) -&gt; Self::AllocatedPromoted;</code></p>",
        "id": 232492727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136208
    },
    {
        "content": "<p>you'd have</p>",
        "id": 232492734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136210
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">AllocatedMir</span>: <span class=\"nc\">AllocateIn</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">Self</span>::<span class=\"n\">Mir</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232492794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136232
    },
    {
        "content": "<p>also the name should be <code>AllocateIn</code> per our API guidelines :)</p>",
        "id": 232492811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136238
    },
    {
        "content": "<p>you could do it the other way too</p>",
        "id": 232492874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136260
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">Mir</span>: <span class=\"nc\">AllocateIn</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">Self</span>::<span class=\"n\">AllocatedMir</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232492893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136268
    },
    {
        "content": "<p>Interesting, that different from what I came up with earlier:</p>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;&#39;tcx&gt; Interner&lt;&#39;tcx&gt; for TyInterner&lt;&#39;tcx&gt; {\n    fn alloc_from_iter&lt;T: Copy&gt;(self, iter: impl IntoIterator&lt;Item = T&gt;) -&gt; &amp;&#39;tcx mut [T] {\n        self.tcx.arena.alloc_from_iter(iter)\n    }\n</code></pre></div>",
        "id": 232492977,
        "sender_full_name": "detrumi",
        "timestamp": 1617136299
    },
    {
        "content": "<p>I mean, you could just have a</p>\n<div class=\"codehilite\"><pre><span></span><code>trait Internable {\n  type Interned;\n}\n</code></pre></div>",
        "id": 232492995,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136306
    },
    {
        "content": "<p>and rewrite the signature to </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">AllocateIn</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Output</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">allocate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">interner</span>: <span class=\"nc\">I</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span>::<span class=\"n\">Output</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232493000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136307
    },
    {
        "content": "<p>you don't want lifetimes anywhere</p>",
        "id": 232493029,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136320
    },
    {
        "content": "<p>gotcha</p>",
        "id": 232493110,
        "sender_full_name": "detrumi",
        "timestamp": 1617136338
    },
    {
        "content": "<p>you cant have that, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>, because it needs to have access to the interner type</p>",
        "id": 232493115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136340
    },
    {
        "content": "<p>you're going to need an impl like</p>",
        "id": 232493130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136346
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">AllocateIn</span><span class=\"o\">&lt;</span><span class=\"n\">TyCtxt</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Mir</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">tcx</span><span class=\"w\"> </span><span class=\"n\">Mir</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232493171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136365
    },
    {
        "content": "<p>in order to access the <code>'tcx</code> lifetime, it needs the <code>I</code> parameter so it can reference <code>TyCtxt&lt;'tcx&gt;</code></p>",
        "id": 232493217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136383
    },
    {
        "content": "<p>that example is bad because it also gets it from <code>Mir&lt;'tcx&gt;</code>, but that's not a given</p>",
        "id": 232493257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136392
    },
    {
        "content": "<p>I think that makes sense</p>",
        "id": 232493297,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136404
    },
    {
        "content": "<p>Yeah, I'll try to see if something like that works</p>",
        "id": 232493501,
        "sender_full_name": "detrumi",
        "timestamp": 1617136464
    },
    {
        "content": "<p>ok but let's talk about the next sets of things that we can do to phase in</p>",
        "id": 232493567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136495
    },
    {
        "content": "<p>once this PR lands</p>",
        "id": 232493568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136497
    },
    {
        "content": "<p>though I am <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on beautifying it a bit</p>",
        "id": 232493586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136503
    },
    {
        "content": "<p>Just, when I see something like</p>\n<div class=\"codehilite\"><pre><span></span><code>type Span = ...;\ntype AllocatedSpan = ...;\ntype AllocatedSpanSlice = ...;\n</code></pre></div>\n<p>repeated over and over, I wonder if there is something better</p>",
        "id": 232493641,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136524
    },
    {
        "content": "<p>so, one thing is</p>",
        "id": 232493663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136536
    },
    {
        "content": "<p>I think the naming pattern is backwards</p>",
        "id": 232493668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136539
    },
    {
        "content": "<p>most of the time we are working with allocated versions</p>",
        "id": 232493685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136546
    },
    {
        "content": "<p>But I am definitely okay with each beautifying before landing or waiting until after</p>",
        "id": 232493687,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136546
    },
    {
        "content": "<p>e.g., in chalk, the associated types are the <em>interned</em> variants</p>",
        "id": 232493708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136557
    },
    {
        "content": "<p>So you'd want <code>Span-&gt;InternedSpan</code> and <code>AllocatedSpan-&gt;Span</code>?</p>",
        "id": 232493844,
        "sender_full_name": "detrumi",
        "timestamp": 1617136620
    },
    {
        "content": "<p>wait</p>",
        "id": 232493866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136635
    },
    {
        "content": "<p>I think <code>Span</code> would be like... <code>UninternedSpan</code> or <code>SpanData</code> or something</p>",
        "id": 232493892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136650
    },
    {
        "content": "<p>that said, I think that those <code>Uninterned</code> variants <em>eventually</em> go away</p>",
        "id": 232493927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136671
    },
    {
        "content": "<p>because those uninterned forms move into rust-type-ir</p>",
        "id": 232493947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136678
    },
    {
        "content": "<p>is that right?</p>",
        "id": 232493951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136680
    },
    {
        "content": "<p>well</p>",
        "id": 232493972,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136683
    },
    {
        "content": "<p>some of these types are in other crates</p>",
        "id": 232494013,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232492977\">said</a>:</p>\n<blockquote>\n<p>Interesting, that different from what I came up with earlier:</p>\n<p><div class=\"codehilite\"><pre><span></span><code>impl&lt;&#39;tcx&gt; Interner&lt;&#39;tcx&gt; for TyInterner&lt;&#39;tcx&gt; {\n    fn alloc_from_iter&lt;T: Copy&gt;(self, iter: impl IntoIterator&lt;Item = T&gt;) -&gt; &amp;&#39;tcx mut [T] {\n        self.tcx.arena.alloc_from_iter(iter)\n    }\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>tried that the other day, unfortunatelly not all of these types are <code>Copy</code> and that was causing some problems for some reason, but this can too be sloved I guess</p>",
        "id": 232494035,
        "sender_full_name": "Zahari Dichev",
        "timestamp": 1617136703
    },
    {
        "content": "<p>sorry still had not time to devle more.. still in lockdown still craziness at home..</p>",
        "id": 232494122,
        "sender_full_name": "Zahari Dichev",
        "timestamp": 1617136731
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232494013\">said</a>:</p>\n<blockquote>\n<p>some of these types are in other crates</p>\n</blockquote>\n<p>say more</p>",
        "id": 232494399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136839
    },
    {
        "content": "<p>I'm not sure what that has to do with it</p>",
        "id": 232494410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136848
    },
    {
        "content": "<p>in particular</p>",
        "id": 232494429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136854
    },
    {
        "content": "<p>as long as they are nameable from rustc-type-ir it should be ok</p>",
        "id": 232494436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136860
    },
    {
        "content": "<p>Well, I think a lot of these types don't need to be associated types on <code>Interner</code> at all</p>",
        "id": 232494474,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136879
    },
    {
        "content": "<p>maybe</p>",
        "id": 232494497,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617136894
    },
    {
        "content": "<p>The types in rustc_middle don't need assoc types after the move</p>",
        "id": 232494542,
        "sender_full_name": "detrumi",
        "timestamp": 1617136922
    },
    {
        "content": "<p>what types might still need to be assoc types?</p>",
        "id": 232494602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136934
    },
    {
        "content": "<p>but to step back:</p>",
        "id": 232494608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136937
    },
    {
        "content": "<p>I want to kind of undersatnd the overall plan more than the details, though they're relevant</p>",
        "id": 232494621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136944
    },
    {
        "content": "<p>but right now I'm seeing</p>",
        "id": 232494625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136946
    },
    {
        "content": "<ul>\n<li>add interner trait</li>\n<li>clean it up some</li>\n</ul>",
        "id": 232494642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136958
    },
    {
        "content": "<ul>\n<li>move types from <code>rustc_middle</code> to <code>rustc_type_ir</code></li>\n</ul>",
        "id": 232494658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136968
    },
    {
        "content": "<p>(in which case it is relevant to sketch what that pattern will look like as we move them)</p>",
        "id": 232494675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617136978
    },
    {
        "content": "<p>Hmm</p>",
        "id": 232494844,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137053
    },
    {
        "content": "<p>let's sketch (in the <a href=\"https://hackmd.io/K8cPSWn3So2GlPPvPuktAQ\">hackmd</a>) the eventual target pattern?</p>",
        "id": 232494902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137083
    },
    {
        "content": "<p>for referenced types that are not in rustc_middle (<code>Span</code> from rustc_span for example), we decide whether to add a dependency or keep them as assoc types</p>",
        "id": 232494926,
        "sender_full_name": "detrumi",
        "timestamp": 1617137098
    },
    {
        "content": "<p>ok, we have choices I agree</p>",
        "id": 232495029,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137138
    },
    {
        "content": "<p>and I also agree it may make sense to keep some of them generic</p>",
        "id": 232495086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137159
    },
    {
        "content": "<p>Span in particular</p>",
        "id": 232495132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137164
    },
    {
        "content": "<p>I'm a bit jumbled, I think</p>",
        "id": 232495236,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137212
    },
    {
        "content": "<p>But I'm think of <code>impl&lt;'tcx, D: TyDecoder&lt;'tcx&gt;&gt; Decodable&lt;D&gt; for Ty&lt;'tcx&gt; { ... }</code></p>",
        "id": 232495278,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137232
    },
    {
        "content": "<p>And where that impl eventually will live</p>",
        "id": 232495307,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137246
    },
    {
        "content": "<p>who defines the <code>Decodable</code> trait</p>",
        "id": 232495363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137260
    },
    {
        "content": "<p>rustc_serialize</p>",
        "id": 232495392,
        "sender_full_name": "detrumi",
        "timestamp": 1617137275
    },
    {
        "content": "<p>where does <code>rustc_serialize</code> live in the crate graph</p>",
        "id": 232495476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137297
    },
    {
        "content": "<p>one thing i will say</p>",
        "id": 232495485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137301
    },
    {
        "content": "<p>I think there should be no lifetimes at all in <code>rustc_type_ir</code></p>",
        "id": 232495499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137308
    },
    {
        "content": "<p>or we've done something wrong</p>",
        "id": 232495505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137313
    },
    {
        "content": "<p>I was assuming those impls wouldn't move, since we already changed them to use <code>Interner</code> instead of TyCtxt</p>",
        "id": 232495526,
        "sender_full_name": "detrumi",
        "timestamp": 1617137319
    },
    {
        "content": "<p>where do they live now</p>",
        "id": 232495552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137330
    },
    {
        "content": "<p>is this still using some specialization-based thing?</p>",
        "id": 232495579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137343
    },
    {
        "content": "<p>Those impls are in <code>rustc_middle</code></p>",
        "id": 232495590,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137349
    },
    {
        "content": "<p>Shouldn't be any specialization</p>",
        "id": 232495611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137355
    },
    {
        "content": "<p>what is a <code>TyDecoder</code></p>",
        "id": 232495624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137365
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/codec/trait.TyDecoder.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/codec/trait.TyDecoder.html</a></p>",
        "id": 232495692,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137401
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>/// * `Decodable` should be used in crates that don&#39;t depend on\n///   `rustc_middle`.\n/// * `MetadataDecodable` is used in `rustc_metadata` for types that contain\n///   `rustc_metadata::rmeta::Lazy`.\n/// * `TyDecodable` should be used for types that are only serialized in crate\n///   metadata or the incremental cache. This is most types in `rustc_middle`.\n</code></pre></div>",
        "id": 232495708,
        "sender_full_name": "detrumi",
        "timestamp": 1617137403
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/blob/be79f493fb310b3a6b01ceada32713813bb12a91/compiler/rustc_serialize/src/serialize.rs#L406-L408\">https://github.com/rust-lang/rust/blob/be79f493fb310b3a6b01ceada32713813bb12a91/compiler/rustc_serialize/src/serialize.rs#L406-L408</a>)</p>",
        "id": 232495774,
        "sender_full_name": "detrumi",
        "timestamp": 1617137418
    },
    {
        "content": "<p>I might be just missing something that already came up...but why do we have to change <code>tcx()</code> on <code>TyDecoder</code> to <code>interner()</code>?</p>",
        "id": 232495879,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137460
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// crate rustc-type-ir</span>\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Interner</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">SpanData</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Span</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Ty</span>: <span class=\"nc\">Allocate</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TyS</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Allocate</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">allocate</span><span class=\"p\">(</span><span class=\"n\">interner</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">source</span>: <span class=\"nc\">S</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">TyS</span><span class=\"o\">&lt;</span><span class=\"n\">I</span>: <span class=\"nc\">Interner</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 232495951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137490
    },
    {
        "content": "<p>so that's the rough shape I was imagining, I <em>think</em></p>",
        "id": 232495965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137497
    },
    {
        "content": "<p>(Also, presumably chalk could use this pattern too...)</p>",
        "id": 232495986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137505
    },
    {
        "content": "<p>I'm sketching in <a href=\"https://hackmd.io/K8cPSWn3So2GlPPvPuktAQ\">https://hackmd.io/K8cPSWn3So2GlPPvPuktAQ</a></p>",
        "id": 232496019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137519
    },
    {
        "content": "<p>let's figure out this <code>TyDecodable</code> story now</p>",
        "id": 232496067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137526
    },
    {
        "content": "<p>I remember that decoding is a horrible pain in the neck, primarily</p>",
        "id": 232496078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232495879\">said</a>:</p>\n<blockquote>\n<p>I might be just missing something that already came up...but why do we have to change <code>tcx()</code> on <code>TyDecoder</code> to <code>interner()</code>?</p>\n</blockquote>\n<p>To make it possible to move the types I think? Or do you mean that rustc_middle could just reference them anyways after the move?</p>",
        "id": 232496086,
        "sender_full_name": "detrumi",
        "timestamp": 1617137536
    },
    {
        "content": "<p>Oh right, this all makes more sense if we're planning to move the Decodable impls too</p>",
        "id": 232496203,
        "sender_full_name": "detrumi",
        "timestamp": 1617137593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232495590\">said</a>:</p>\n<blockquote>\n<p>Those impls are in <code>rustc_middle</code></p>\n</blockquote>\n<p>so I think then that they could not stay there, because they will be orphaned if ... ah, wait</p>",
        "id": 232496231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137609
    },
    {
        "content": "<p>I mean, I might be missing some coherence problems here, but since <code>TyDecoder</code> is in <code>rustc_middle</code>, <code>Interner</code> shouldn't need to know about things that isn't required elsewhere in <code>rustc_type_ir</code></p>",
        "id": 232496246,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137616
    },
    {
        "content": "<p>well so hold up</p>",
        "id": 232496251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137619
    },
    {
        "content": "<p>I just remembered a few things</p>",
        "id": 232496273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137628
    },
    {
        "content": "<p>first of all, I remembered that in chalk the main type <code>Ty&lt;I&gt;</code> redirects to <code>I::InternedTy</code> :)</p>",
        "id": 232496353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137652
    },
    {
        "content": "<p>which I had forgotten</p>",
        "id": 232496359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137654
    },
    {
        "content": "<p>yes</p>",
        "id": 232496376,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137658
    },
    {
        "content": "<p>ok, so i'm adjusting the HackMd</p>",
        "id": 232496420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137683
    },
    {
        "content": "<p>but this is also relevant because</p>",
        "id": 232496481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137710
    },
    {
        "content": "<p>let's add in the directed graph too</p>",
        "id": 232496534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137732
    },
    {
        "content": "<p>(do you all know what hackmd I am talking about?)</p>",
        "id": 232496547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137739
    },
    {
        "content": "<p>ack, we're running out of time :)</p>",
        "id": 232496575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137752
    },
    {
        "content": "<p>I have another call but I think we should pursue this some more-- maybe one of the morning slots?</p>",
        "id": 232496585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137760
    },
    {
        "content": "<p>I think if we establish the destination more firmly</p>",
        "id": 232496639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137767
    },
    {
        "content": "<p>Yeah</p>",
        "id": 232496653,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137774
    },
    {
        "content": "<p>we can then work out the stpes more clearly</p>",
        "id": 232496671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137780
    },
    {
        "content": "<p>Honestly, I just feel a bit washed today</p>",
        "id": 232496677,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137782
    },
    {
        "content": "<p>but it seems like there are some question marks</p>",
        "id": 232496686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137784
    },
    {
        "content": "<p>yeah</p>",
        "id": 232496740,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137803
    },
    {
        "content": "<p>it's not just you, this has been a bit messy</p>",
        "id": 232496758,
        "sender_full_name": "detrumi",
        "timestamp": 1617137809
    },
    {
        "content": "<p>Because all the <code>Decodable</code> impls I've seen are generic over some <code>D: TyDecodable&lt;'tcx&gt;</code></p>",
        "id": 232496818,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137836
    },
    {
        "content": "<p>so</p>",
        "id": 232496836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137845
    },
    {
        "content": "<p>that will be tricky <em>but</em></p>",
        "id": 232496852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137853
    },
    {
        "content": "<p>I see a few routes to solutions</p>",
        "id": 232496863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137860
    },
    {
        "content": "<p>first thing that would be helpful though</p>",
        "id": 232496870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137866
    },
    {
        "content": "<p>in the <a href=\"https://hackmd.io/K8cPSWn3So2GlPPvPuktAQ#Eventual-destination\">destination section</a> --</p>",
        "id": 232496899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137877
    },
    {
        "content": "<p>maybe somebody could sketch out a relevant subset of the crate graph :)</p>",
        "id": 232496947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137884
    },
    {
        "content": "<p>I think the relevant things to consider are:</p>",
        "id": 232497014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137910
    },
    {
        "content": "<p>I can do that</p>",
        "id": 232497016,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617137911
    },
    {
        "content": "<ul>\n<li><code>Span</code> -- this is a good stand-in for some \"orthogonal bit of data\" that different hosts may want to do differently</li>\n</ul>",
        "id": 232497046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137926
    },
    {
        "content": "<ul>\n<li><code>Ty</code> -- this is a good stand-in for something that rustc-type-ir wants to define but which hosts want to define the interning scheme</li>\n</ul>",
        "id": 232497079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137945
    },
    {
        "content": "<ul>\n<li><code>Decodable</code> -- good stand-in for some trait that is not of concern to rustc-type-ir as far as I can tell, just some hosts, and a particularly nasty bit of work</li>\n</ul>",
        "id": 232497134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137970
    },
    {
        "content": "<p>maybe this will motivate us to propose some improvements to the orphan rules :)</p>",
        "id": 232497162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617137986
    },
    {
        "content": "<p>Maybe</p>",
        "id": 232497195,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138000
    },
    {
        "content": "<p>are there other standins we want?</p>",
        "id": 232497262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138010
    },
    {
        "content": "<p>Btw thank you Niko for helping drive this meeting</p>",
        "id": 232497268,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138012
    },
    {
        "content": "<p>we should probably have some other common traits, like <code>Debug</code> or whatever</p>",
        "id": 232497308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138017
    },
    {
        "content": "<p>hmm, <code>Debug</code> is probably a big one too</p>",
        "id": 232497370,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138045
    },
    {
        "content": "<p>as I said, I'm sorry I've been so absent, but I'm feeling a lot of energy and enthusiasm about traits :) I think moving chat and sync time to the morning is a good innovation</p>",
        "id": 232497371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138046
    },
    {
        "content": "<p>Also <code>HashStable</code></p>",
        "id": 232497411,
        "sender_full_name": "detrumi",
        "timestamp": 1617138059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/144729-wg-traits/topic/meeting.202021-03-30/near/232497370\">said</a>:</p>\n<blockquote>\n<p>hmm, <code>Debug</code> is probably a big one too</p>\n</blockquote>\n<p>chalk has a kind of solution here, but it's a bit messy</p>",
        "id": 232497418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138063
    },
    {
        "content": "<p>Yes, I'll definitely be around the next few mornings</p>",
        "id": 232497420,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138064
    },
    {
        "content": "<p>yeah, let's add in some key traits</p>",
        "id": 232497433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138067
    },
    {
        "content": "<p>that would be super helpful</p>",
        "id": 232497443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138070
    },
    {
        "content": "<p>and then we can iterate a bit</p>",
        "id": 232497448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138072
    },
    {
        "content": "<p>I think what else would be good is sketching out some representative impls and how they look <em>today</em></p>",
        "id": 232497478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138085
    },
    {
        "content": "<p>(which crates do they live in, for example)</p>",
        "id": 232497487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138090
    },
    {
        "content": "<p>ok, gotta go</p>",
        "id": 232497506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617138096
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 232497516,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138101
    },
    {
        "content": "<p>Thanks everyone :)</p>",
        "id": 232497524,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138105
    },
    {
        "content": "<p>As unhelpful as I feel <em>I've</em> been, this meeting overall feels very helpful</p>",
        "id": 232497588,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617138123
    }
]