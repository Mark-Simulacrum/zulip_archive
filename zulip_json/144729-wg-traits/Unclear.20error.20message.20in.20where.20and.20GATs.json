[
    {
        "content": "<p>This with <code>where</code> clauses as is coming with <code>generic_associated_types</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(generic_associated_types)]</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Iter</span>: <span class=\"nb\">IntoIterator</span> <span class=\"nc\">where</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"o\">&gt;</span>::<span class=\"n\">Iter</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nb\">IntoIterator</span><span class=\"o\">&gt;</span>::<span class=\"n\">Item</span>: <span class=\"nc\">std</span>::<span class=\"n\">fmt</span>::<span class=\"n\">Debug</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Gives this somewhat unapproachable (and maybe wrong?) error message:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `&lt;Self as Collection&gt;::Iter: IntoIterator` is not satisfied\n --&gt; src/lib.rs:5:5\n  |\n5 |     type Iter: IntoIterator where &lt;&lt;Self as Collection&gt;::Iter as IntoIterator&gt;::Item: std::fmt::Debug;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `IntoIterator` is not implemented for `&lt;Self as Collection&gt;::Iter`\n  |\nhelp: consider further restricting the associated type\n  |\n3 | trait Collection where &lt;Self as Collection&gt;::Iter: IntoIterator {\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0277]: the trait bound `&lt;Self as Collection&gt;::Iter: IntoIterator` is not satisfied\n   --&gt; src/lib.rs:5:16\n    |\n5   |       type Iter: IntoIterator where &lt;&lt;Self as Collection&gt;::Iter as IntoIterator&gt;::Item: std::fmt::Debug;\n    |                  ^^^^^^^^^^^^ the trait `IntoIterator` is not implemented for `&lt;Self as Collection&gt;::Iter`\n    |\nhelp: consider further restricting the associated type\n    |\n3   | trait Collection where &lt;Self as Collection&gt;::Iter: IntoIterator {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `playground` due to 2 previous errors\n</code></pre></div>\n<p>Lifting the where clause to the trait works as expected which is essentially what you get by working through the hints.</p>\n<p>Is this intentionally not supported yet, am I not understanding the scope of this new where syntax, or is this an issue?</p>",
        "id": 248649420,
        "sender_full_name": "John-John Tedro",
        "timestamp": 1628274331
    },
    {
        "content": "<p>Also worth noting that the initial issue I had was that I was unable to add the constraint with a GAT, and at that point I'm not sure it would be possible to lift it to the trait's <code>where</code> due to the generic argument not being visible:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(generic_associated_types)]</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Iter</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span>: <span class=\"nb\">IntoIterator</span> <span class=\"nc\">where</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span>::<span class=\"n\">Iter</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nb\">IntoIterator</span><span class=\"o\">&gt;</span>::<span class=\"n\">Item</span>: <span class=\"nc\">std</span>::<span class=\"n\">fmt</span>::<span class=\"n\">Debug</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 248650146,
        "sender_full_name": "John-John Tedro",
        "timestamp": 1628274626
    },
    {
        "content": "<p>Opened the following issue after probing a bit more with people on Discord: <a href=\"https://github.com/rust-lang/rust/issues/87831\">https://github.com/rust-lang/rust/issues/87831</a></p>",
        "id": 248665506,
        "sender_full_name": "John-John Tedro",
        "timestamp": 1628282322
    },
    {
        "content": "<p>Thanks :) Haven't really gotten a chance to look at this or think about it, but an issue is definitely the right place to make sure this doesn't get overlooked</p>",
        "id": 248665753,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628282456
    }
]