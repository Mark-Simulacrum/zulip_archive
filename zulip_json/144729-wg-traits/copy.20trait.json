[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281572\">marmeladema</span> <a href=\"#narrow/stream/144729-wg-traits/topic/New.20contributor/near/195296414\" title=\"#narrow/stream/144729-wg-traits/topic/New.20contributor/near/195296414\">said</a>:</p>\n<blockquote>\n<p>For scalar its mentioned that <code>// Implementations provided in libcore</code>. But in chalk we should say all scalar are copy right? And tuples are copy if all elements are copy?</p>\n</blockquote>\n<p>Hmm, <span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span>, good point -- I forgot that we had those impls in libcore.</p>",
        "id": 195615180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588102717
    },
    {
        "content": "<p>Or at least I'd want to compare how rustc does it</p>",
        "id": 195615224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588102742
    },
    {
        "content": "<p>I guess I don't have a super strong opinion about this, but in general it's probably nicer to have fewer things \"hard-coded\" in, and more things controlled by libcore/libstd</p>",
        "id": 195615277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588102766
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>            ty::Uint(_)\n            | ty::Int(_)\n            | ty::Bool\n            | ty::Float(_)\n            | ty::Char\n            | ty::RawPtr(..)\n            | ty::Never\n            | ty::Ref(_, _, hir::Mutability::Not) =&gt; {\n                // Implementations provided in libcore\n                None\n            }\n</code></pre></div>",
        "id": 195615423,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588102833
    },
    {
        "content": "<p>yeah. probably we should match that behavior, actually.</p>",
        "id": 195615471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588102856
    },
    {
        "content": "<p>From <code>librustc_trait_selection/traits/select.rs</code></p>",
        "id": 195615490,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588102868
    },
    {
        "content": "<p>Ok thanks. My PR originally included impl copy for all scalars but then i removed it, so it should be fine</p>",
        "id": 195616682,
        "sender_full_name": "marmeladema",
        "timestamp": 1588103425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I <em>think</em> i've fixed all the comments</p>",
        "id": 195619073,
        "sender_full_name": "marmeladema",
        "timestamp": 1588104323
    },
    {
        "content": "<p>if <code>u8: impl Copy</code>, should <code>(u8, ): Clone</code>? In my mind, <code>u8: impl Copy</code> =&gt; <code>u8: impl Clone</code> thus <code>(u8, ): impl Clone</code></p>",
        "id": 195623054,
        "sender_full_name": "marmeladema",
        "timestamp": 1588106008
    },
    {
        "content": "<p>I would expect so, yes</p>",
        "id": 195623242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106091
    },
    {
        "content": "<p>But</p>",
        "id": 195623250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106095
    },
    {
        "content": "<p>it is possible that chalk can't figure this out</p>",
        "id": 195623257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106100
    },
    {
        "content": "<p>unless you have both a <code>impl Copy for u8</code> and a <code>impl Clone for u8</code></p>",
        "id": 195623273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106109
    },
    {
        "content": "<p>since the scalar impls are not 'built-in' but are coming from the user</p>",
        "id": 195623303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/144729-wg-traits/topic/copy.20trait/near/195623257\" title=\"#narrow/stream/144729-wg-traits/topic/copy.20trait/near/195623257\">said</a>:</p>\n<blockquote>\n<p>it is possible that chalk can't figure this out</p>\n</blockquote>\n<p>in fact, this is the behavior I expect, so if you see something else, I'd like to know</p>",
        "id": 195623322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106137
    },
    {
        "content": "<p>the reason has to do with implied bounds</p>",
        "id": 195623341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106143
    },
    {
        "content": "<p>Yes, chalk cannot figure it out. I was worried it was a bug, but it seems to be fine :)</p>",
        "id": 195623513,
        "sender_full_name": "marmeladema",
        "timestamp": 1588106216
    },
    {
        "content": "<p>ps we're discussing exactly this right now ;)</p>",
        "id": 195624888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588106977
    },
    {
        "content": "<p>i am reading :D (but not understanding everything^^)</p>",
        "id": 195625153,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the PR failed because of the flakky error discussed during the meeting</p>",
        "id": 195626377,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107689
    },
    {
        "content": "<p>should i push-force to trigger another build?</p>",
        "id": 195626403,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107701
    },
    {
        "content": "<p>sure, or I could tell travis to re-run</p>",
        "id": 195626438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107715
    },
    {
        "content": "<p>oh I can?</p>",
        "id": 195626498,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107728
    },
    {
        "content": "<p>I don't think i have the permissions</p>",
        "id": 195626556,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107761
    },
    {
        "content": "<p>I can</p>",
        "id": 195626800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107861
    },
    {
        "content": "<p>Oh sorry misread</p>",
        "id": 195626859,
        "sender_full_name": "marmeladema",
        "timestamp": 1588107889
    },
    {
        "content": "<p>ok, looks good tho</p>",
        "id": 195626930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107928
    },
    {
        "content": "<p>travis is re-running</p>",
        "id": 195626942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107930
    },
    {
        "content": "<p>all checks passed <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 195627468,
        "sender_full_name": "marmeladema",
        "timestamp": 1588108204
    }
]