[
    {
        "content": "<p>So, we were talking about some renames:</p>\n<ul>\n<li><code>Implemented</code> becomes <code>HasImpl</code></li>\n<li><code>WellFormed(T: Trait)</code> becomes <code>FullyImplemented(T: Trait)</code>? Maybe?</li>\n<li>What about <code>FromEnv</code>?</li>\n</ul>",
        "id": 195626045,
        "sender_full_name": "detrumi",
        "timestamp": 1588107518
    },
    {
        "content": "<p>If we agree on some renames, we have a nice <code>good first issue</code></p>",
        "id": 195626126,
        "sender_full_name": "detrumi",
        "timestamp": 1588107557
    },
    {
        "content": "<p>There are some other renames, too</p>",
        "id": 195626261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107620
    },
    {
        "content": "<p>I'd like to rename a few things to match rustc -- notably, I think <code>Substitution</code> should probably become <code>GenericArgs</code>, and <code>Parameter</code> can become <code>GenericArg</code></p>",
        "id": 195626297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107645
    },
    {
        "content": "<p>I also wanted to rename the <code>binders</code> field from <code>Binders</code>, maybe to <code>parameter_kinds</code></p>",
        "id": 195626311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107655
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125131\">detrumi</span> <a href=\"#narrow/stream/144729-wg-traits/topic/renames/near/195626045\" title=\"#narrow/stream/144729-wg-traits/topic/renames/near/195626045\">said</a>:</p>\n<blockquote>\n<ul>\n<li><code>WellFormed(T: Trait)</code> becomes <code>FullyImplemented(T: Trait)</code>? Maybe?</li>\n</ul>\n</blockquote>\n<p>I'm not sure I like this tbh</p>",
        "id": 195626339,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107670
    },
    {
        "content": "<p>and for that matter I hate all the <code>binders</code> fields in the <code>FooDatum</code> structs</p>",
        "id": 195626349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107677
    },
    {
        "content": "<p>so undescriptive</p>",
        "id": 195626409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107703
    },
    {
        "content": "<p>even worse</p>",
        "id": 195626422,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107708
    },
    {
        "content": "<p>well</p>",
        "id": 195626506,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107732
    },
    {
        "content": "<p>maybe not worse</p>",
        "id": 195626514,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107734
    },
    {
        "content": "<p>but I was finding it a bit weird that <code>ty::Predicate</code> lowers to <em>either</em> a <code>DomainGoal</code> OR <code>QuantifiedWhereClause</code></p>",
        "id": 195626559,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107762
    },
    {
        "content": "<p>so.. rustc's predicate is not good</p>",
        "id": 195626717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107834
    },
    {
        "content": "<p>or at least, it is kind of a lot of things</p>",
        "id": 195626748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107842
    },
    {
        "content": "<p>and I think could be better factored</p>",
        "id": 195626775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107845
    },
    {
        "content": "<p>That was a refactoring you wanted to mentor right</p>",
        "id": 195626817,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588107868
    },
    {
        "content": "<p>Yeah, though I never got organized around it</p>",
        "id": 195627058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107986
    },
    {
        "content": "<p>I'm going to use a bit of time tnow to try and do some prep work</p>",
        "id": 195627076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588107996
    },
    {
        "content": "<p>write-up some mentoring things</p>",
        "id": 195627089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588108002
    },
    {
        "content": "<p>I'm going to: 1) convert <code>from_fallible</code> functions 2) Change mdbook build 3) Figure out if we can publish to <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a> by tagging on github</p>",
        "id": 195627327,
        "sender_full_name": "Jack Huey",
        "timestamp": 1588108132
    },
    {
        "content": "<p>So I agree that <code>FullyImplemented</code> might not be the best name</p>",
        "id": 195631610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110477
    },
    {
        "content": "<p>but in general there is this \"pairing\" --</p>",
        "id": 195631647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110483
    },
    {
        "content": "<p>Every <code>FromEnv</code> should derive from some <code>WellFormed</code> goal that somebody had to prove</p>",
        "id": 195631671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110494
    },
    {
        "content": "<p>those names don't feel \"especially related\" to me</p>",
        "id": 195631706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110512
    },
    {
        "content": "<p>it'd be nice maybe to align them</p>",
        "id": 195631721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110518
    },
    {
        "content": "<p>in this sense, though, distinguishing <code>WellFormed(TraitRef)</code> from <code>WellFormed(Type)</code> is not helpful, unless we also split <code>FromEnv(TraitRef)</code> and <code>FromEnv(Type)</code></p>",
        "id": 195631756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588110552
    },
    {
        "content": "<p>A silly scheme:  Implemented =&gt; Claimed; FromEnv =&gt;Assuming; WellFormed=&gt; Verified  ,  but i could be very wrong though.</p>",
        "id": 195691154,
        "sender_full_name": "Charles Lew",
        "timestamp": 1588157754
    },
    {
        "content": "<p>I like <code>Verified</code></p>",
        "id": 195702414,
        "sender_full_name": "Areredify",
        "timestamp": 1588164392
    },
    {
        "content": "<p>It conveys the meaning well imo, but doesn't really play well with how clauses are read, <code>Verified(Type)</code> feels kinda silly</p>",
        "id": 195702824,
        "sender_full_name": "Areredify",
        "timestamp": 1588164597
    },
    {
        "content": "<p>I don't think <code>Claimed</code> is <em>quite</em> right</p>",
        "id": 195721022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588171849
    },
    {
        "content": "<p>but I like the out of the box direction</p>",
        "id": 195721223,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588171915
    },
    {
        "content": "<p>ty for pointing out : )</p>",
        "id": 195736046,
        "sender_full_name": "Charles Lew",
        "timestamp": 1588177699
    }
]