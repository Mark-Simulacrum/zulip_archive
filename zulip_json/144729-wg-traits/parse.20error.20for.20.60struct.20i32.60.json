[
    {
        "content": "<p>This parse error for the program</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"kt\">i32</span> <span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>confuses me:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: parse error: Unrecognized token `i32` found at 7:10\nExpected one of r#&quot;([A-Za-z]|_)([A-Za-z0-9]|_)*&quot;#\n</code></pre></div>\n\n\n<p>Doesn't <code>i32</code> match the regex?</p>",
        "id": 214268133,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603420291
    },
    {
        "content": "<p><code>i32</code> is handled separately as the <code>i32</code> type. So it can't be a struct name</p>",
        "id": 214272533,
        "sender_full_name": "Jack Huey",
        "timestamp": 1603427344
    },
    {
        "content": "<p>For what reason is <code>i32</code> in a separate syntactic class though? It seems like it could just be (an identifier that refers to) a regular type, notwithstanding the lang item status</p>",
        "id": 214277169,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603433260
    },
    {
        "content": "<p>Actually I can't replicate this, according to <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=b47332242cab659cd5792a91f7b10642\">playground link</a> this isn't even an error</p>",
        "id": 214277415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603433553
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/144729-wg-traits/topic/parse.20error.20for.20.60struct.20i32.60/near/214277169\">said</a>:</p>\n<blockquote>\n<p>For what reason is <code>i32</code> in a separate syntactic class though?</p>\n</blockquote>\n<p>Mainly parser simplicity. The chalk parser is mainly designed for chalk tests, so it's not as robust as the rustc parser</p>",
        "id": 214280888,
        "sender_full_name": "detrumi",
        "timestamp": 1603437581
    },
    {
        "content": "<p>I was about to say the same as detrumi, they're talking about chalk programs not rust programs, like <a href=\"https://github.com/rust-lang/chalk/blob/master/tests/lowering/mod.rs#L8-L12\">this</a></p>",
        "id": 214281027,
        "sender_full_name": "lqd",
        "timestamp": 1603437676
    },
    {
        "content": "<p>Ideally the chalk parser would handle that though, so we can reliably print out chalk programs and re-parse them</p>",
        "id": 214281136,
        "sender_full_name": "detrumi",
        "timestamp": 1603437779
    },
    {
        "content": "<p>The current parser has some limitations because it's generated using lalrpop</p>",
        "id": 214281295,
        "sender_full_name": "detrumi",
        "timestamp": 1603437923
    },
    {
        "content": "<p>Oh, I missed that this is chalk</p>",
        "id": 214281313,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603437946
    },
    {
        "content": "<p>And since chalk is mostly an internal thing I guess that means the error message doesn't need to be improved either</p>",
        "id": 214281404,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603438003
    },
    {
        "content": "<p>Yeah, the regex in the error is from <a href=\"https://github.com/rust-lang/chalk/blob/420e9379dc1dbe5f022854ed452f7682cd0136a2/chalk-parse/src/parser.lalrpop#L630\">here</a></p>",
        "id": 214281409,
        "sender_full_name": "detrumi",
        "timestamp": 1603438010
    },
    {
        "content": "<p>Ideally chalk would re-use the rustc parser and build on top of that, but that's probably too much effort just to have robust parsing for chalk tests</p>",
        "id": 214281765,
        "sender_full_name": "detrumi",
        "timestamp": 1603438386
    }
]