[
    {
        "content": "<p>this issue <a href=\"https://github.com/rust-lang/rust/issues/61076\" title=\"https://github.com/rust-lang/rust/issues/61076\">https://github.com/rust-lang/rust/issues/61076</a> seems already fixed? <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\n<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ef1caa955ef1aceadf33aadd348e646c\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ef1caa955ef1aceadf33aadd348e646c\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ef1caa955ef1aceadf33aadd348e646c</a></p>",
        "id": 196609501,
        "sender_full_name": "csmoe",
        "timestamp": 1588758009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> see <a href=\"https://github.com/rust-lang/rust/issues/61076#issuecomment-525960471\" title=\"https://github.com/rust-lang/rust/issues/61076#issuecomment-525960471\">this comment</a> -- it is fixed in some contexts, but not all</p>",
        "id": 196609588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588758057
    },
    {
        "content": "<p>okay, I'll take care of them.</p>",
        "id": 196609666,
        "sender_full_name": "csmoe",
        "timestamp": 1588758119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> given <code>&lt;T as Future&gt;::Output</code>, how can I get <code>Output</code>'s type? normalizing it?</p>",
        "id": 196632591,
        "sender_full_name": "csmoe",
        "timestamp": 1588771053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> that is one way</p>",
        "id": 196632733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588771100
    },
    {
        "content": "<p>I'm not quite sure what you're trying to do, but, yeah I guess normalizing is the best</p>",
        "id": 196632762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588771115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/await.20suggestion/near/196632762\" title=\"#narrow/stream/187312-wg-async-foundations/topic/await.20suggestion/near/196632762\">said</a>:</p>\n<blockquote>\n<p>I'm not quite sure what you're trying to do, but, yeah I guess normalizing is the best</p>\n</blockquote>\n<p>thanks.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">t</span>: <span class=\"nc\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"n\">foo</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>here I'm trying to check whether <code>Future::Output </code> impl'ed <code>Try</code> trait?</p>",
        "id": 196633293,
        "sender_full_name": "csmoe",
        "timestamp": 1588771351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> ah I see, yeah</p>",
        "id": 196640133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588774349
    },
    {
        "content": "<p>I can't really think of a better way than normalizing</p>",
        "id": 196640168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588774376
    }
]