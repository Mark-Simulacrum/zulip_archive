[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> for the <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/409\" target=\"_blank\" title=\"https://github.com/rust-lang/blog.rust-lang.org/pull/409\">upcoming blog post</a>, you mentioned citing the futures crate. I'd be happy to do but I'm honestly not sure what to point at or recommend to folks. Is there a version of the futures crate that uses std::future?</p>",
        "id": 176952926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569863891
    },
    {
        "content": "<p>I guess maybe <a href=\"https://github.com/rust-lang-nursery/futures-rs/#feature-async-await\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/futures-rs/#feature-async-await\">feature async-await</a> is the answer?</p>",
        "id": 176952943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569863926
    },
    {
        "content": "<p>anyway if you want to supply a sentence + link be happy to add it :)</p>",
        "id": 176952957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569863940
    },
    {
        "content": "<blockquote>\n<p>Is there a version of the futures crate that uses std::future?</p>\n</blockquote>\n<p>Yes, all of the futures-preview 0.3.0 releases have used std::future</p>",
        "id": 176962127,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569869710
    },
    {
        "content": "<p>the current release (0.3.0-alpha.19) works on beta</p>",
        "id": 176962187,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569869757
    },
    {
        "content": "<p>There will be a non-alpha 0.3.0 release to the <code>futures</code> (not <code>futures-preview</code>) crate alongside the stabilization of async/await</p>",
        "id": 176962283,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569869805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  Quick question: is there anywhere this is being tracked? What is gonna be stabilized by 1.39 stable? etc</p>",
        "id": 176963157,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569870325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"207781\">@Lucio Franco</span> I'm not sure I understand the question. Are you asking about what language features are being stabilized?</p>",
        "id": 176963239,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870372
    },
    {
        "content": "<p>All of the current futures crate will be released as 0.3.0 alongside the release of 1.39.</p>",
        "id": 176963299,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> ok so pretty much what is in the crates as of 1.39 landing stable will be \"stable\" not including the unstable features etc?</p>",
        "id": 176963341,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569870469
    },
    {
        "content": "<p>Which unstable features are you referring to? the \"unstable\" feature in the crate (for things like <code>Initializer</code>)?</p>",
        "id": 176963413,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870500
    },
    {
        "content": "<p>all the crates that are currently 0.3.0-alpha *-preview will be released as 0.3.0 without the <code>-preview</code></p>",
        "id": 176963462,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870562
    },
    {
        "content": "<p>Yeah, that could be it, I have not looked too deep. I guess this also means that the current Stream/Sink traits are gonna be stabilized, right? Just trying to think about how I should plan depending on the futures crates of the next few months.</p>",
        "id": 176963464,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569870565
    },
    {
        "content": "<p>Ok cool, by chance is there an issue for this in the futures-rs repo we can link too?</p>",
        "id": 176963494,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569870590
    },
    {
        "content": "<p>The current Stream/Sink traits as they exist will be released in 0.3.0, yes.</p>",
        "id": 176963495,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870590
    },
    {
        "content": "<p>Ok, that makes sense! Thanks!</p>",
        "id": 176963579,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569870627
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/rust-lang-nursery/futures-rs/issues/1893\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/futures-rs/issues/1893\">https://github.com/rust-lang-nursery/futures-rs/issues/1893</a></p>",
        "id": 176963775,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569870749
    },
    {
        "content": "<p>Awesome, thank you!</p>",
        "id": 176964312,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1569871082
    },
    {
        "content": "<p>Yeah of course! Thanks for checking in</p>",
        "id": 176964399,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569871134
    },
    {
        "content": "<blockquote>\n<p>Yes, all of the futures-preview 0.3.0 releases have used std::future</p>\n</blockquote>\n<p>might be nice to clarify this on the website somewhere...</p>",
        "id": 176966421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872512
    },
    {
        "content": "<p>and/or a blog post</p>",
        "id": 176966425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872516
    },
    {
        "content": "<p>but ok!</p>",
        "id": 176966427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> like <a href=\"https://rust-lang-nursery.github.io/futures-rs/blog/2018/07/19/futures-0.3.0-alpha.1.html\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/futures-rs/blog/2018/07/19/futures-0.3.0-alpha.1.html\">https://rust-lang-nursery.github.io/futures-rs/blog/2018/07/19/futures-0.3.0-alpha.1.html</a> ?</p>",
        "id": 176966754,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569872709
    },
    {
        "content": "<p>I guess. That was so old my eyes glazed over it.</p>",
        "id": 176966794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872749
    },
    {
        "content": "<p>I remember looking at it and being like \"is this saying something about std::Future and async-await? I can't tell\"</p>",
        "id": 176966858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872775
    },
    {
        "content": "<p>anyway, great, I'll link to that</p>",
        "id": 176966880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872781
    },
    {
        "content": "<p>I mean, it's old because that's how long we've been developing against std::future XD</p>",
        "id": 176966907,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569872797
    },
    {
        "content": "<p>indeed</p>",
        "id": 176966914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872809
    },
    {
        "content": "<p>but it's not a bad idea to have something more public making it clear what the plan is</p>",
        "id": 176966928,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569872822
    },
    {
        "content": "<p>this is more my point :)</p>",
        "id": 176966960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872844
    },
    {
        "content": "<p>I could certainly write a blog post covering \"what's up with the futures crate if you haven't been paying attention\"</p>",
        "id": 176966962,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569872846
    },
    {
        "content": "<p>speaking as someone who hasn't, it's pretty hard to tell what's going on</p>",
        "id": 176966970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872857
    },
    {
        "content": "<p>actually, I lied, I never saw that post</p>",
        "id": 176966973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872861
    },
    {
        "content": "<p>I saw the one about the \"compatibility layer\"</p>",
        "id": 176966977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872866
    },
    {
        "content": "<p>yeah, that was announcing that the std::future-based 0.3 had a shim to still be usable with other libraries using 0.1</p>",
        "id": 176967035,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569872895
    },
    {
        "content": "<p>anyway I think a new blog post isn't a bad idea, I've been wanting to bug you about it except that I feel like I don't yet know what I think about futures-rs and what its future ought to be</p>",
        "id": 176967041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872900
    },
    {
        "content": "<p>I think maybe even better would be to update the README a bit</p>",
        "id": 176967050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872912
    },
    {
        "content": "<p>anyway, perfect, thanks! pushing a new line to the blog post</p>",
        "id": 176967114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872963
    },
    {
        "content": "<blockquote>\n<p>anyway I think a new blog post isn't a bad idea, I've been wanting to bug you about it except that I feel like I don't yet know what I think about futures-rs and what its future ought to be</p>\n</blockquote>\n<p>I know we've talked about this like 22 times :)</p>",
        "id": 176967127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872981
    },
    {
        "content": "<p>Yeah I'm not quite sure what you want clarified there beyond what I've said before, but I'd be happy to chat.</p>",
        "id": 176967144,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873001
    },
    {
        "content": "<p>Oh nothing I just think your view and others' views don't quite align</p>",
        "id": 176967197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873014
    },
    {
        "content": "<p>I'd love to talk to those others about what they want to see</p>",
        "id": 176967217,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873034
    },
    {
        "content": "<p>at the moment I think I and the other maintainers have a very consistent view.</p>",
        "id": 176967230,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873044
    },
    {
        "content": "<p>If people want it to be something different, they should say so publicly.</p>",
        "id": 176967249,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873061
    },
    {
        "content": "<p>(My view <em>at the moment</em> is that we should distinguish between \"std-track\" things, that we expect to move into the std library, and \"utility\" things, and we should probably spin them out into distinct crates and message it very clearly)</p>",
        "id": 176967267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873073
    },
    {
        "content": "<p>and, like, to me in a productive way that we can act on.</p>",
        "id": 176967269,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873074
    },
    {
        "content": "<p>They are in different crates.</p>",
        "id": 176967280,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873084
    },
    {
        "content": "<p>They are not \"branded\" in a clear way</p>",
        "id": 176967289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873093
    },
    {
        "content": "<p>(To me)</p>",
        "id": 176967294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873096
    },
    {
        "content": "<p>???</p>",
        "id": 176967295,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873097
    },
    {
        "content": "<p>let's talk about it later :)</p>",
        "id": 176967305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873106
    },
    {
        "content": "<p>Okay. I'm not sure how to make it any clearer other than to just have fewer of them.</p>",
        "id": 176967307,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873112
    },
    {
        "content": "<p>I'm not trying to start this discussion now, sorry that my comments earlier were semi-critical, I didn't really mean to be</p>",
        "id": 176967361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873125
    },
    {
        "content": "<p>There have been many blog posts describing the situation, and the crates themselves describe what they're meant to be in the docs.</p>",
        "id": 176967379,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873146
    },
    {
        "content": "<p>I get that it's confusing-- it's a confusing design space. I'd love to make changes that you or others think would help clarify things.</p>",
        "id": 176967401,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873171
    },
    {
        "content": "<p>How's this sound for the blog post?</p>\n<blockquote>\n<p>- the 0.3.0 version of the [futures-rs library][futures] supports<br>\n  async-await and will be released by the time async-await hits stable<br>\n  (you can use the [0.3.0-alpha][] releases now);</p>\n</blockquote>",
        "id": 176967548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873262
    },
    {
        "content": "<p>RE same repo-- okay, <code>futures-core</code>/<code>futures-io</code>/<code>futures-sink</code> can all go together, and then everything else in a separate repo. However, basically anyone using futures/streams is gonna want the extension traits and other utils (e.g. join, select, abortable, etc.) at some point, so then I'd advocate for pointing end users at the -util repo primarily.</p>",
        "id": 176967778,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873399
    },
    {
        "content": "<p>and that would be the one I think should have the <code>futures</code>  name</p>",
        "id": 176967803,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873412
    },
    {
        "content": "<p>which should keep the facade like it has today.</p>",
        "id": 176967824,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569873426
    },
    {
        "content": "<p>yeah, I'm not sure if splitting them out is the high order bit (partly why I didn't post that msg, except by accident)</p>",
        "id": 176968139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873608
    },
    {
        "content": "<p>that said, I think that having a good idea of which traits/code we think should move to std and on what rough timescale  would be good</p>",
        "id": 176968194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873636
    },
    {
        "content": "<p>and we could really \"front and center\" that on the documentation</p>",
        "id": 176968207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873644
    },
    {
        "content": "<p>maybe even just a FAQ sort of thing would help a lot</p>",
        "id": 176968263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569873675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> where do you think that information should be surfaced? honestly I don't know that \"is this ever gonna be in std\" is a high-importance piece of information that the majority of futures-rs consumers need to be following.</p>",
        "id": 176973126,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569876639
    }
]