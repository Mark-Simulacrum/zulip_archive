[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> =)</p>",
        "id": 174808069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530160
    },
    {
        "content": "<p>So last week we were doing some triage and discussion about \"async-await is stable, now what?\"</p>",
        "id": 174808142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530207
    },
    {
        "content": "<p>I don't see any fresh uncategorized issues</p>",
        "id": 174808231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530247
    },
    {
        "content": "<p>but there are two <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\">blocking issues</a></p>",
        "id": 174808266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530271
    },
    {
        "content": "<p>one of which I had not seen before</p>",
        "id": 174808273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530274
    },
    {
        "content": "<h1>async-await: mutually recursive functions compile sometimes <a href=\"https://github.com/rust-lang/rust/issues/64004\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64004\">#64004</a></h1>",
        "id": 174808284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530280
    },
    {
        "content": "<p>but it looks like <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has a fix (<a href=\"https://github.com/rust-lang/rust/pull/64038\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64038\">https://github.com/rust-lang/rust/pull/64038</a>)</p>",
        "id": 174808337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530307
    },
    {
        "content": "<h1>temporary lifetime around await is (maybe) unexpectedly short <a href=\"https://github.com/rust-lang/rust/issues/63832\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63832\">#63832</a></h1>",
        "id": 174808376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530343
    },
    {
        "content": "<p>OK, so, we discussed this in the lang team meeting and <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> was going to leave a comment but I guess they didn't get around to it</p>",
        "id": 174808454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530375
    },
    {
        "content": "<p>the tl;dr was that we decided to align the sync/async semantics</p>",
        "id": 174808458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> you're assigned to this one -- we <em>think</em> that changing the desugaring will suffice (per <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>'s suggestion), did you want to give that a try?</p>",
        "id": 174808483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530402
    },
    {
        "content": "<p>Unfortunately, I've not had an opportunity to work on this yet (work is very busy right now, there's a milestone at the end of the week). I intend to look at it this week though.</p>",
        "id": 174808516,
        "sender_full_name": "davidtwco",
        "timestamp": 1567530424
    },
    {
        "content": "<p>OK</p>",
        "id": 174808703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530528
    },
    {
        "content": "<p>If you'd prefer, we could find someone else</p>",
        "id": 174808753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530561
    },
    {
        "content": "<p>If you're too busy, that is</p>",
        "id": 174808761,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530564
    },
    {
        "content": "<p>I should be able to do it.</p>",
        "id": 174808778,
        "sender_full_name": "davidtwco",
        "timestamp": 1567530575
    },
    {
        "content": "<p>there is one other issue currently marked as \"blocking\", though it's a \"soft\" sort of blocking</p>",
        "id": 174808911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530632
    },
    {
        "content": "<h1>rustdoc renders re-exported <code>async fn</code>s incorrectly <a href=\"https://github.com/rust-lang/rust/issues/63710\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63710\">#63710</a></h1>",
        "id": 174808917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530633
    },
    {
        "content": "<p>It seems like the problem here lies in rustdoc's split, whereby local crates are documented from the AST</p>",
        "id": 174808957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530659
    },
    {
        "content": "<p>but foreign crates come from metadata</p>",
        "id": 174808978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530667
    },
    {
        "content": "<p>and hence foreign crates are seeing the desugared version</p>",
        "id": 174808984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530672
    },
    {
        "content": "<p>this seems like a fairly big \"gotcha\" especially for facade-like patterns</p>",
        "id": 174809036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530705
    },
    {
        "content": "<p>I guess the obvious fix is to encode some info that the function was originally an \"async fn\", perhaps -- more generally -- a \"original signature\" sort of data</p>",
        "id": 174809114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530731
    },
    {
        "content": "<p>although <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> proposes another direction:</p>\n<blockquote>\n<p>Should we also consider always documenting <code>Fn() -&gt; impl Future&lt;Output=_&gt;</code> as <code>async Fn() -&gt; _</code>?</p>\n</blockquote>",
        "id": 174809143,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530756
    },
    {
        "content": "<p>not sure what I think about that</p>",
        "id": 174809146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530759
    },
    {
        "content": "<p>\"maybe\" I guess :)</p>",
        "id": 174809153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530764
    },
    {
        "content": "<p>fwiw I think _that_ is also somewhat hard so it might be best to encode the asyncness in metadata in some way</p>",
        "id": 174809197,
        "sender_full_name": "simulacrum",
        "timestamp": 1567530791
    },
    {
        "content": "<p>yeah I was thinking the same thing</p>",
        "id": 174809435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530947
    },
    {
        "content": "<p>I personally don't see this as all that blocking though. I can probably allocate some time to investigate this week, though, fwiw</p>",
        "id": 174809509,
        "sender_full_name": "simulacrum",
        "timestamp": 1567530970
    },
    {
        "content": "<p>I don't think it's blocking -- it's more of a \"nice to have\"</p>",
        "id": 174809532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567530984
    },
    {
        "content": "<p>(it's tagged as -Blocking and -Unclear, which is why I ask :)</p>",
        "id": 174809555,
        "sender_full_name": "simulacrum",
        "timestamp": 1567530998
    },
    {
        "content": "<p>essentially, looking for things we can do to improve people's first impressions of async-await</p>",
        "id": 174809559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531001
    },
    {
        "content": "<p>heh well yeah I abused the tags</p>",
        "id": 174809570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531008
    },
    {
        "content": "<p>which brings me to the last topic -- last week we did a triage where we started going through all the \"deferred\" issues, looking for things to try and address sooner rather than later, and just to get a feel for what they were and maybe hints for how to label them in the future</p>",
        "id": 174809611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531047
    },
    {
        "content": "<p>we made it about 50% of the way</p>",
        "id": 174809614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531051
    },
    {
        "content": "<p>this <a href=\"https://paper.dropbox.com/doc/wg-async-foundations-post-stable-triage--AkFxcVDwm_l1L9hWz04UcIZpAg-pPbUygh9j1XCoPhLFvFoQ\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/wg-async-foundations-post-stable-triage--AkFxcVDwm_l1L9hWz04UcIZpAg-pPbUygh9j1XCoPhLFvFoQ\">paper doc</a> includes some notes, and there was a video (see the end of <a href=\"#narrow/stream/187312-wg-async-foundations/topic/weekly.20meeting.202019.2E08.2E27\" title=\"#narrow/stream/187312-wg-async-foundations/topic/weekly.20meeting.202019.2E08.2E27\">last week's meeting</a>)</p>",
        "id": 174809635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531072
    },
    {
        "content": "<p>One thing we identified is that we may want <code>#[inline]</code> to be an error (though I see in the doc that <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> maybe doesn't agree). In short because it's not really clear what it should mean, and right now it doesn't do much.</p>",
        "id": 174809744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531132
    },
    {
        "content": "<p>(On a related note, we may want to mark <em>all</em> async fn \"constructors\" as <code>#[inline]</code>)</p>",
        "id": 174809767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531144
    },
    {
        "content": "<p>but the most important <em>diagnostic</em> issue we identified was trying to improve our error messages when a future is not <code>Send</code> -- right now you get this error late, at the point of use, but often we could localize it effectively to the future definition (i.e., we have enough data available)</p>",
        "id": 174809819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531185
    },
    {
        "content": "<p>maybe I'll open some issues to track those</p>",
        "id": 174809833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531192
    },
    {
        "content": "<p>is anybody who is present interested in this diagnostic issue in particular? I think I could try to leave some notes as to how to go about it, though it would take a bit of time for me to think about</p>",
        "id": 174809922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531222
    },
    {
        "content": "<p>also, we should I guess spend some time going over the rest of the issues</p>",
        "id": 174809946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531237
    },
    {
        "content": "<p>this is an example of a <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=5f67107e3c9fb3e10aafd83295b3fbf4\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=5f67107e3c9fb3e10aafd83295b3fbf4\">diagnostic fail</a>, incidentally :)</p>",
        "id": 174810073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531319
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/64130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64130\">https://github.com/rust-lang/rust/issues/64130</a></p>",
        "id": 174810393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531509
    },
    {
        "content": "<p>I marked it as blocking, I'll assign to myself to try and leave some mentoring notes</p>",
        "id": 174810407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531518
    },
    {
        "content": "<p>It's not really blocking :)</p>",
        "id": 174810412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531523
    },
    {
        "content": "<p>OK, well, I guess that's it for now. I think we should do another session to finish up the remaining 50% of those issues -- later this week I guess?</p>",
        "id": 174810532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531590
    },
    {
        "content": "<p>SGTM</p>",
        "id": 174810648,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1567531665
    },
    {
        "content": "<p>doodle poll part 2?</p>",
        "id": 174810656,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1567531672
    },
    {
        "content": "<p>PS <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> maybe we'll bump <a href=\"https://github.com/rust-lang/rust/issues/63167\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63167\">https://github.com/rust-lang/rust/issues/63167</a> to \"blocking\" (just so we're tracking it)?</p>",
        "id": 174810732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567531699
    },
    {
        "content": "<p>(Note: moved some comments about whether #[inline] on async fn should be an error to <a href=\"#narrow/stream/187312-wg-async-foundations/topic/inline-as-an-error\" title=\"#narrow/stream/187312-wg-async-foundations/topic/inline-as-an-error\">this topic</a>)</p>",
        "id": 174914646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567625374
    }
]