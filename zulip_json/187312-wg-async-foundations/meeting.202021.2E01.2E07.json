[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting in 25 minutes</p>",
        "id": 221986089,
        "sender_full_name": "tmandry",
        "timestamp": 1610046312
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 221989251,
        "sender_full_name": "tmandry",
        "timestamp": 1610047891
    },
    {
        "content": "<p>First, happy new year!</p>",
        "id": 221989273,
        "sender_full_name": "tmandry",
        "timestamp": 1610047905
    },
    {
        "content": "<p>Hi everyone :)</p>",
        "id": 221989485,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048002
    },
    {
        "content": "<p>A few issues got fixed in the past few weeks:</p>\n<ul>\n<li>rustdoc shows anonymous elided lifetimes in async fn signature <a href=\"https://github.com/rust-lang/rust/issues/63037\">#63037</a></li>\n<li>Unclear compiler output for move async -&gt; async move <a href=\"https://github.com/rust-lang/rust/issues/79694\">#79694</a></li>\n<li>\"introduce a type parameter with a trait bound instead of using <code>impl Trait</code>\" diagnostic is malformed for async fns where the previous parameter is a borrow <a href=\"https://github.com/rust-lang/rust/issues/79843\">#79843</a></li>\n<li>Lifetime error points to wrong reference in async fn return <a href=\"https://github.com/rust-lang/rust/issues/75785\">#75785</a></li>\n</ul>",
        "id": 221989511,
        "sender_full_name": "tmandry",
        "timestamp": 1610048019
    },
    {
        "content": "<p>Thanks to everyone who helped out with those.</p>",
        "id": 221989620,
        "sender_full_name": "tmandry",
        "timestamp": 1610048052
    },
    {
        "content": "<p>Let's move on to status updates on RFCs and the like</p>",
        "id": 221989665,
        "sender_full_name": "tmandry",
        "timestamp": 1610048078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"225192\">@Nell Shamrell-Harrington</span> would you like to give an update on the Stream RFC?</p>",
        "id": 221989726,
        "sender_full_name": "tmandry",
        "timestamp": 1610048101
    },
    {
        "content": "<p>Just a quick note, I'm not sure who to reach out to to get the <a href=\"https://github.com/rust-lang/rfcs/pull/3014\">must_not_await</a> RFC reviewed. It looks like it just needs one more review to be approved.</p>",
        "id": 221989743,
        "sender_full_name": "Bhargav Voleti",
        "timestamp": 1610048111
    },
    {
        "content": "<p>Only that I'm returning to it this week</p>",
        "id": 221989773,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048123
    },
    {
        "content": "<p>And, if people feel it's ok to merge as is, I would love if you would leave a comment on the RFC</p>",
        "id": 221989808,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048147
    },
    {
        "content": "<p>Well, there's one issue that needs ironing out</p>",
        "id": 221989831,
        "sender_full_name": "tmandry",
        "timestamp": 1610048157
    },
    {
        "content": "<p>will do!</p>",
        "id": 221989888,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048164
    },
    {
        "content": "<p>which is that the current signature of the <code>next()</code> method isn't object safe</p>",
        "id": 221989913,
        "sender_full_name": "tmandry",
        "timestamp": 1610048180
    },
    {
        "content": "<p>but after that is fixed, I would love some comments of support for merging</p>",
        "id": 221989919,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048183
    },
    {
        "content": "<p>and making it object safe actually makes trait objects harder to use</p>",
        "id": 221989937,
        "sender_full_name": "tmandry",
        "timestamp": 1610048190
    },
    {
        "content": "<p>those are good points</p>",
        "id": 221989955,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048203
    },
    {
        "content": "<p>and I will work on ironing that out</p>",
        "id": 221989985,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048216
    },
    {
        "content": "<p>so it's difficult and might require language extensions to fix in a really satisfactory way</p>",
        "id": 221989986,
        "sender_full_name": "tmandry",
        "timestamp": 1610048217
    },
    {
        "content": "<p>but it's possible that we can land without the method for now, or find some other fix in the meantime</p>",
        "id": 221990036,
        "sender_full_name": "tmandry",
        "timestamp": 1610048242
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"248777\">Bhargav Voleti</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202021.2E01.2E07/near/221989743\">said</a>:</p>\n<blockquote>\n<p>Just a quick note, I'm not sure who to reach out to to get the <a href=\"https://github.com/rust-lang/rfcs/pull/3014\">must_not_await</a> RFC reviewed. It looks like it just needs one more review to be approved.</p>\n</blockquote>\n<p>You could try pinging the people who haven't checked their boxes on the pull request</p>",
        "id": 221990180,
        "sender_full_name": "tmandry",
        "timestamp": 1610048288
    },
    {
        "content": "<blockquote>\n<p>You could try pinging the people who haven't checked their boxes on the pull request</p>\n</blockquote>\n<p>I wasn't sure if that would be annoying or not. Thanks for clearing that up, I'll do that now.</p>",
        "id": 221990241,
        "sender_full_name": "Bhargav Voleti",
        "timestamp": 1610048327
    },
    {
        "content": "<p>seems like it's been long enough, and it's after the holidays, so probably a good time to do it</p>",
        "id": 221990292,
        "sender_full_name": "tmandry",
        "timestamp": 1610048349
    },
    {
        "content": "<p>Okay, let's move on to issue triage</p>",
        "id": 221990435,
        "sender_full_name": "tmandry",
        "timestamp": 1610048409
    },
    {
        "content": "<p>interesting, only two <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">new issues</a></p>",
        "id": 221990460,
        "sender_full_name": "tmandry",
        "timestamp": 1610048425
    },
    {
        "content": "<h2>ICE(stable): thread 'rustc' panicked at 'called <code>Option::unwrap()</code> on a <code>None</code> value', compiler/rustc_middle/src/ty/instance.rs:434:85 <a href=\"https://github.com/rust-lang/rust/issues/80706\">#80706</a></h2>",
        "id": 221990506,
        "sender_full_name": "tmandry",
        "timestamp": 1610048445
    },
    {
        "content": "<p>regression from stable to stable.. definitely a priority</p>",
        "id": 221990615,
        "sender_full_name": "tmandry",
        "timestamp": 1610048503
    },
    {
        "content": "<p>I'll put this on deck and try to find time to investigate soon</p>",
        "id": 221990753,
        "sender_full_name": "tmandry",
        "timestamp": 1610048562
    },
    {
        "content": "<h2>Note when opaque future from <code>async fn</code> is involved in a type mismatch is unclear <a href=\"https://github.com/rust-lang/rust/issues/80658\">#80658</a></h2>",
        "id": 221990765,
        "sender_full_name": "tmandry",
        "timestamp": 1610048577
    },
    {
        "content": "<p>Looks like a reasonable thing to address</p>",
        "id": 221990815,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048609
    },
    {
        "content": "<p>yeah, seems like an easy fix too!</p>",
        "id": 221990826,
        "sender_full_name": "tmandry",
        "timestamp": 1610048619
    },
    {
        "content": "<p>I may be able to take a look this weekend</p>",
        "id": 221990918,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048647
    },
    {
        "content": "<p>I will go ahead and claim</p>",
        "id": 221990945,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048667
    },
    {
        "content": "<p>great :)</p>",
        "id": 221990950,
        "sender_full_name": "tmandry",
        "timestamp": 1610048672
    },
    {
        "content": "<p>Putting time on my calendar for Sat :)</p>",
        "id": 221991010,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048701
    },
    {
        "content": "<p>Okay, that's the last issue</p>",
        "id": 221991037,
        "sender_full_name": "tmandry",
        "timestamp": 1610048716
    },
    {
        "content": "<p>Any other topics for discussion?</p>",
        "id": 221991095,
        "sender_full_name": "tmandry",
        "timestamp": 1610048750
    },
    {
        "content": "<p>Since we're in a new year and schedules are changing, I wanted to check how this time would work for everyone going forward</p>",
        "id": 221991219,
        "sender_full_name": "tmandry",
        "timestamp": 1610048801
    },
    {
        "content": "<p>I know not everyone can make this time, particularly people in europe, so I'm considering picking a new one</p>",
        "id": 221991311,
        "sender_full_name": "tmandry",
        "timestamp": 1610048846
    },
    {
        "content": "<p>might want to wait for schedules to settle a bit more, though</p>",
        "id": 221991410,
        "sender_full_name": "tmandry",
        "timestamp": 1610048883
    },
    {
        "content": "<p>It works ok for me here in US PST, but I would have no issue with it moving to allow attendance from more time zones</p>",
        "id": 221991425,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610048889
    },
    {
        "content": "<p>Okay, well I'll ping the group if I start a new poll, and try to give everyone ample time to respond this time</p>",
        "id": 221991502,
        "sender_full_name": "tmandry",
        "timestamp": 1610048939
    },
    {
        "content": "<p>MIght be better to act before they settle :) so we're first</p>",
        "id": 221991508,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1610048944
    },
    {
        "content": "<p>true :)</p>",
        "id": 221991524,
        "sender_full_name": "tmandry",
        "timestamp": 1610048958
    },
    {
        "content": "<p>but I know at least <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is starting a new job and those meetings might have less flexibility than ours</p>",
        "id": 221991587,
        "sender_full_name": "tmandry",
        "timestamp": 1610048997
    },
    {
        "content": "<p>true</p>",
        "id": 221991640,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610049006
    },
    {
        "content": "<p>okay</p>",
        "id": 221991655,
        "sender_full_name": "tmandry",
        "timestamp": 1610049018
    },
    {
        "content": "<p>I think that wraps it up for today then</p>",
        "id": 221991664,
        "sender_full_name": "tmandry",
        "timestamp": 1610049027
    },
    {
        "content": "<p>I am trying to figure out my schedule</p>",
        "id": 221991700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610049052
    },
    {
        "content": "<p>I'll probably know more next week</p>",
        "id": 221991709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610049063
    },
    {
        "content": "<p>sounds good, I can wait until next week then</p>",
        "id": 221991755,
        "sender_full_name": "tmandry",
        "timestamp": 1610049092
    },
    {
        "content": "<p>as always, thanks everyone for coming, and again, happy new year!</p>",
        "id": 221991779,
        "sender_full_name": "tmandry",
        "timestamp": 1610049107
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 221991784,
        "sender_full_name": "tmandry",
        "timestamp": 1610049109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> thank you so much for leading us!</p>",
        "id": 221991891,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1610049141
    }
]