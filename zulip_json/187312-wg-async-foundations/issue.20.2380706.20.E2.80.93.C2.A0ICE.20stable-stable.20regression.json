[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> did you see <a href=\"https://github.com/rust-lang/rust/issues/80706#issuecomment-759871986\">this comment</a>?</p>",
        "id": 223565809,
        "sender_full_name": "tmandry",
        "timestamp": 1611260806
    },
    {
        "content": "<p>I've been too swamped to go in and debug what was happening, wondering if you had any ideas</p>",
        "id": 223565868,
        "sender_full_name": "tmandry",
        "timestamp": 1611260841
    },
    {
        "content": "<p>basically, we end up with unnormalized types in MIR after <a href=\"https://github.com/rust-lang/rust/issues/78410\">#78410</a></p>",
        "id": 223565917,
        "sender_full_name": "tmandry",
        "timestamp": 1611260868
    },
    {
        "content": "<p>and this causes an ICE when producing debuginfo for those types</p>",
        "id": 223565968,
        "sender_full_name": "tmandry",
        "timestamp": 1611260884
    },
    {
        "content": "<p>i did see that comment but didn't take the time to look too deeply into this</p>",
        "id": 223568810,
        "sender_full_name": "lcnr",
        "timestamp": 1611262411
    },
    {
        "content": "<p>i expect the error to be caused by us only normalizing opaque types and not projections somewhere?</p>",
        "id": 223568990,
        "sender_full_name": "lcnr",
        "timestamp": 1611262510
    },
    {
        "content": "<p>if the ice was caused by an opaque type in layout it would be quite straightforward and probably a wont-fix for now unless we figure out how to remove duplicate subtypes in generators</p>",
        "id": 223569165,
        "sender_full_name": "lcnr",
        "timestamp": 1611262599
    },
    {
        "content": "<p>hmm, it seems really weird to me that we ICE on the inner projection instead of the opaque type</p>",
        "id": 223570922,
        "sender_full_name": "lcnr",
        "timestamp": 1611263500
    },
    {
        "content": "<p>I think it would make sense to search for the place where we finally normalize the opaque type and find out why we don't normalize the inner projection as well</p>",
        "id": 223571365,
        "sender_full_name": "lcnr",
        "timestamp": 1611263705
    },
    {
        "content": "<p>it caused an ICE before <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> <a href=\"https://rust.godbolt.org/z/x6Krce\">https://rust.godbolt.org/z/x6Krce</a> so it definitely seems to work if we always normalize opaque types</p>",
        "id": 223571922,
        "sender_full_name": "lcnr",
        "timestamp": 1611263990
    },
    {
        "content": "<p>don't have the time to spend an evening or two looking into this myself though</p>",
        "id": 223572042,
        "sender_full_name": "lcnr",
        "timestamp": 1611264040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/issue.20.2380706.20.E2.80.93.C2.A0ICE.20stable-stable.20regression/near/223568990\">said</a>:</p>\n<blockquote>\n<p>i expect the error to be caused by us only normalizing opaque types and not projections somewhere?</p>\n</blockquote>\n<p>^ doesn't seem like this is the case, but we instead normalize the opaque type and then fail to normalize the projection which seems really weird to me</p>",
        "id": 223572189,
        "sender_full_name": "lcnr",
        "timestamp": 1611264123
    }
]