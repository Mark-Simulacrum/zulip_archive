[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> =) I'm running late today, but meeting?</p>",
        "id": 178213565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159311
    },
    {
        "content": "<p>First, review <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">uncategorized issues</a></p>",
        "id": 178213611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159353
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/64603\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64603\">https://github.com/rust-lang/rust/pull/64603</a> is reviewed so that should be closed out tonight. :-)</p>",
        "id": 178213620,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571159364
    },
    {
        "content": "<blockquote>\n<p>Attempting to run an async fn after completion mentions generators <a href=\"https://github.com/rust-lang/rust/issues/65419\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65419\">#65419</a></p>\n</blockquote>",
        "id": 178213640,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159387
    },
    {
        "content": "<blockquote>\n<p>thread 'main' panicked at 'generator resumed after completion', src/main.rs:1:16</p>\n</blockquote>",
        "id": 178213644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159393
    },
    {
        "content": "<p>seems suboptimal but also kind of \"meh\" to me</p>",
        "id": 178213661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159402
    },
    {
        "content": "<p>otoh maybe very easy to fix</p>",
        "id": 178213707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159416
    },
    {
        "content": "<p>worth putting as \"on deck\"?</p>",
        "id": 178213713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159421
    },
    {
        "content": "<p>(that's the only untriaged issue)</p>",
        "id": 178213738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159448
    },
    {
        "content": "<blockquote>\n<p>worth putting as \"on deck\"?</p>\n</blockquote>\n<p>I'm going to leave it</p>",
        "id": 178213779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> retried that PR cause spurious network stuff</p>",
        "id": 178213785,
        "sender_full_name": "centril",
        "timestamp": 1571159499
    },
    {
        "content": "<p>actually I wonder where that error message comes from</p>",
        "id": 178213851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159531
    },
    {
        "content": "<p>a quick ripgrep didn't find it</p>",
        "id": 178213853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> feels like a good thing to fix I think</p>",
        "id": 178213858,
        "sender_full_name": "centril",
        "timestamp": 1571159542
    },
    {
        "content": "<p>feels like polish-worthy and possible to hit</p>",
        "id": 178213884,
        "sender_full_name": "centril",
        "timestamp": 1571159567
    },
    {
        "content": "<p>ok, I nominated it for on on-deck</p>",
        "id": 178213910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159595
    },
    {
        "content": "<p>maybe label with good first issue?</p>",
        "id": 178213911,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571159596
    },
    {
        "content": "<p>I also pinged zoxc</p>",
        "id": 178213913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159599
    },
    {
        "content": "<p>it's part of the generator transform</p>",
        "id": 178213915,
        "sender_full_name": "Nemo157",
        "timestamp": 1571159601
    },
    {
        "content": "<p>to get feedback on where the error comes from</p>",
        "id": 178213916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159603
    },
    {
        "content": "<p>I grepped in <code>src/lib*</code> for \"after completion\" and I cannot find it either</p>",
        "id": 178213937,
        "sender_full_name": "centril",
        "timestamp": 1571159631
    },
    {
        "content": "<p>oh, I guess the <code>Display</code> impl must be it</p>",
        "id": 178213938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159632
    },
    {
        "content": "<p>super weird</p>",
        "id": 178213939,
        "sender_full_name": "centril",
        "timestamp": 1571159632
    },
    {
        "content": "<p>I think it's actually very difficult to hit, I only opened it because someone implementing a custom executor somehow managed to hit it</p>",
        "id": 178213981,
        "sender_full_name": "Nemo157",
        "timestamp": 1571159643
    },
    {
        "content": "<p>that's the only time I've heard of it being reached</p>",
        "id": 178214014,
        "sender_full_name": "Nemo157",
        "timestamp": 1571159660
    },
    {
        "content": "<p>Can you \"await\" a <em>ref</em> to a future</p>",
        "id": 178214042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159695
    },
    {
        "content": "<p>(similar to the <code>by_ref</code> adapter for iterators)</p>",
        "id": 178214057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159707
    },
    {
        "content": "<p>if so, presumably that'd make it .. oh, I guess not</p>",
        "id": 178214068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/interpret/enum.PanicInfo.html#method.description\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/interpret/enum.PanicInfo.html#method.description\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/interpret/enum.PanicInfo.html#method.description</a></p>",
        "id": 178214088,
        "sender_full_name": "centril",
        "timestamp": 1571159728
    },
    {
        "content": "<p>I was going to say that'd make it relatively easy to hit, but maybe not</p>",
        "id": 178214095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159730
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/65180\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65180\">https://github.com/rust-lang/rust/issues/65180</a> update: I found the cause of the error, trying to improve the error reporting.</p>",
        "id": 178214109,
        "sender_full_name": "csmoe",
        "timestamp": 1571159741
    },
    {
        "content": "<p>anyway, yeah, focus issues</p>",
        "id": 178214125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159751
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang/rust/issues/65159\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65159\">https://github.com/rust-lang/rust/issues/65159</a> ...</p>",
        "id": 178214186,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159772
    },
    {
        "content": "<p>I opened a PR</p>",
        "id": 178214191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159774
    },
    {
        "content": "<p>I guess it just needs r+</p>",
        "id": 178214204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159793
    },
    {
        "content": "<p>it bouned in some weird way</p>",
        "id": 178214210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159797
    },
    {
        "content": "<blockquote>\n<p>non-send futures error at point of use, but could cite point of definition in some cases <a href=\"https://github.com/rust-lang/rust/issues/64130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64130\">#64130</a> </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> opened a <a href=\"https://github.com/rust-lang/rust/pull/65345\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65345\">WIP PR</a> for follow-up work I think</p>",
        "id": 178214242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159831
    },
    {
        "content": "<blockquote>\n<p>Async blocks are leaky about wording wrt. <code>?</code> in diagnostics <a href=\"https://github.com/rust-lang/rust/issues/62570\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62570\">#62570</a> </p>\n</blockquote>\n<p>any update on this <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span>? I see some comments there</p>",
        "id": 178214268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <code>r=cramertj</code> ^^</p>",
        "id": 178214284,
        "sender_full_name": "centril",
        "timestamp": 1571159877
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 178214329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159890
    },
    {
        "content": "<p>getting there - realised I needed to switch out the stage 0 compiler to achieve it</p>",
        "id": 178214333,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571159891
    },
    {
        "content": "<p>oh?</p>",
        "id": 178214343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571159905
    },
    {
        "content": "<p>bootstrap tricks... fun :D</p>",
        "id": 178214408,
        "sender_full_name": "centril",
        "timestamp": 1571159966
    },
    {
        "content": "<p>otherwise it instantly complains it can't parse the {ItemContext} even if I've changed the parsing code to show a different message</p>",
        "id": 178214434,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571159986
    },
    {
        "content": "<p>Makes sense</p>",
        "id": 178214532,
        "sender_full_name": "centril",
        "timestamp": 1571160031
    },
    {
        "content": "<p>I think I need to commit the addition of ItemContext as a symbol as one PR and then reference it with another</p>",
        "id": 178214538,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160038
    },
    {
        "content": "<p>I'm not sure what the <code>ItemContext</code> is referring to</p>",
        "id": 178214582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160073
    },
    {
        "content": "<p>is this part of the <code>rustc_on_unimplemented</code> attribute?</p>",
        "id": 178214596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160084
    },
    {
        "content": "<p>not yet :P</p>",
        "id": 178214606,
        "sender_full_name": "centril",
        "timestamp": 1571160090
    },
    {
        "content": "<p>If so, you can also do <code>#[cfg_attr(stage0, ...)]</code> and <code>#[cfg_attr(not(stage0), ...)]</code></p>",
        "id": 178214617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160098
    },
    {
        "content": "<p>usually less annoying than bootstrapping :)</p>",
        "id": 178214624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160106
    },
    {
        "content": "<p>ah neat</p>",
        "id": 178214631,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160114
    },
    {
        "content": "<p>maybe we don't do that anymore</p>",
        "id": 178214635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> there's no <code>stage0</code></p>",
        "id": 178214637,
        "sender_full_name": "centril",
        "timestamp": 1571160117
    },
    {
        "content": "<p>we used to do it all the time :P</p>",
        "id": 178214639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160120
    },
    {
        "content": "<p>yeah ok that's dated I guess</p>",
        "id": 178214683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160129
    },
    {
        "content": "<p>it's called <code>cfg_attr(bootstrap, ...)</code> now</p>",
        "id": 178214686,
        "sender_full_name": "centril",
        "timestamp": 1571160132
    },
    {
        "content": "<p>ah, ok, same idea though</p>",
        "id": 178214700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160145
    },
    {
        "content": "<p>basically s/stage0/bootstrap</p>",
        "id": 178214705,
        "sender_full_name": "centril",
        "timestamp": 1571160147
    },
    {
        "content": "<p>yep</p>",
        "id": 178214712,
        "sender_full_name": "centril",
        "timestamp": 1571160149
    },
    {
        "content": "<p>cool - that's handy.</p>",
        "id": 178214723,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160159
    },
    {
        "content": "<p>I'm not sure if the release team cleans those up periodically anymore?</p>",
        "id": 178214735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160176
    },
    {
        "content": "<p>if not, maybe we want a FIXME issue to track it</p>",
        "id": 178214749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  we do</p>",
        "id": 178214751,
        "sender_full_name": "centril",
        "timestamp": 1571160188
    },
    {
        "content": "<p>OK, so, last update I guess:</p>",
        "id": 178214767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160208
    },
    {
        "content": "<blockquote>\n<p>async/await: awaiting inside a match block captures borrow too eagerly <a href=\"https://github.com/rust-lang/rust/issues/57017\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57017\">#57017</a></p>\n</blockquote>",
        "id": 178214776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160218
    },
    {
        "content": "<p>I did do some investigation here into what it would take to build MIR in order to figure out what's live</p>",
        "id": 178214795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160232
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/57017#issuecomment-540023781\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57017#issuecomment-540023781\">long comment here</a></p>",
        "id": 178214846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160249
    },
    {
        "content": "<p>my initial conclusion was \"it's hard\"</p>",
        "id": 178214848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160250
    },
    {
        "content": "<p>but I plan to do some more digging</p>",
        "id": 178214858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160264
    },
    {
        "content": "<p>another, interim alternative might be to be just have a <em>better</em> approximation than we currently do</p>",
        "id": 178214931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160333
    },
    {
        "content": "<h1>Last five minutes -- anybody looking for something to do?</h1>",
        "id": 178215010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160364
    },
    {
        "content": "<p>Any final comments?</p>",
        "id": 178215020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160371
    },
    {
        "content": "<p>(I'm a bit wary of hacks in MIR tho -- I'd like us to be more principled like GHC is with System FC... and MIR isn't even sound by construction <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span> -- maybe <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>'s RVSDG would help... -- and I hear swiftc with SIL?)</p>",
        "id": 178215055,
        "sender_full_name": "centril",
        "timestamp": 1571160412
    },
    {
        "content": "<p>Well, I'm not really talking about introducing hacks into <em>MIR</em>.</p>",
        "id": 178215211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160517
    },
    {
        "content": "<p>Just want to say how nice debugging async/await is compared to in c# - it's much easier with 'truthful' stacks.</p>",
        "id": 178215226,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160530
    },
    {
        "content": "<p>that's a cool benefit of the design, yeah</p>",
        "id": 178215239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Where are we adding the hacks instead? :D</p>",
        "id": 178215277,
        "sender_full_name": "centril",
        "timestamp": 1571160568
    },
    {
        "content": "<p>Well it's more like replacing the hack we already have with a better hack :P</p>",
        "id": 178215322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160602
    },
    {
        "content": "<p>basically there is code that \"overapproximates\" what might be live across awaits in the generator</p>",
        "id": 178215386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160615
    },
    {
        "content": "<p>Ah I see; well, a principled hack is better than a less principled one</p>",
        "id": 178215421,
        "sender_full_name": "centril",
        "timestamp": 1571160649
    },
    {
        "content": "<p>in principle...</p>",
        "id": 178215463,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160669
    },
    {
        "content": "<p>An interesting observation is that if we succeed with polonius (and  in particular the datalog definition thereof)</p>",
        "id": 178215468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160673
    },
    {
        "content": "<p>that maybe it makes to build the analysis data direct from HAIR or something. I've long wanted rustc_typeck to be a function that takes in \"HIR\" and produces something more like \"HAIR\". Anyway, sort of neither here nor there -- if you read the comment, one of the key problems is that MIR <em>right now</em> requires \"all types\" to be known. But some of the types in the generator can be influenced by what comes later. So we have to infer the whole function as a unit. It's kind of a sticky thing to untangle.</p>",
        "id": 178215629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160770
    },
    {
        "content": "<p>Already true for closures</p>",
        "id": 178215683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160809
    },
    {
        "content": "<p>but of course closure types don't depend on their bodies in quite the same way</p>",
        "id": 178215705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160822
    },
    {
        "content": "<p>anyway gotta go grab lunch, ttyl</p>",
        "id": 178215756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160843
    },
    {
        "content": "<p>oh btw I start a new job next week. Going to be coding rust for a living.</p>",
        "id": 178215790,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160867
    },
    {
        "content": "<p>that's great!</p>",
        "id": 178215844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160907
    },
    {
        "content": "<p>congratulations</p>",
        "id": 178215846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571160909
    },
    {
        "content": "<p>thanks - rust in finance in london is starting to be a thing.</p>",
        "id": 178215895,
        "sender_full_name": "Giles Cope",
        "timestamp": 1571160956
    }
]