[
    {
        "content": "<p>I had thought at some point about trying to make Pin more ergonomic to use</p>",
        "id": 245495123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863318
    },
    {
        "content": "<p>I kind of stopped thinking as much about it as much since I think we really do want the ability to have scoped threads and guaranteed poll-to-completion</p>",
        "id": 245495205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863349
    },
    {
        "content": "<p>but e.g. you could imagine finding ways to overload <code>&amp;mut</code> so that you can just do <code>&amp;mut foo.bar</code> where <code>foo: PIn&lt;impl DerefMut&gt;</code> or something.</p>",
        "id": 245495259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863375
    },
    {
        "content": "<p>(presumably some more trait stuff is needed to make that really work)</p>",
        "id": 245495305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863397
    },
    {
        "content": "<p>similarly I do wonder if there'd be a way to make it so that you don't have to write <code>pin!(x)</code> to force something to be immovable</p>",
        "id": 245495349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863430
    },
    {
        "content": "<p>if we baked it a bit more into the language</p>",
        "id": 245495361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863437
    },
    {
        "content": "<p>actually I'm going to break this out into its own topic</p>",
        "id": 245495440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863464
    },
    {
        "content": "<p>I wouldn't mind having a new kind of reference for such things.</p>",
        "id": 245495490,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1625863494
    },
    {
        "content": "<p>I am thinking about this a bit now-- given that <code>Pin</code> <em>is</em> useful in a lot of areas, and may indeed be the right way to handle <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>'s \"pointer to field\" example, maybe it's worth diving a bit more into why it's hard for folks to use</p>",
        "id": 245495494,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863496
    },
    {
        "content": "<p>and what could be done about it</p>",
        "id": 245495522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863509
    },
    {
        "content": "<p>I'm a bit reluctant to add a new kind of reference</p>",
        "id": 245495568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863542
    },
    {
        "content": "<p>but it's not totally unreasonable</p>",
        "id": 245495577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863548
    },
    {
        "content": "<p>I guess the place to start is to reread the faster than lime post</p>",
        "id": 245495653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863585
    },
    {
        "content": "<p>and just imagine where it could go differently</p>",
        "id": 245495660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625863588
    },
    {
        "content": "<p>I think pin projection is a big pain point -- if we could bake this in or make it less painful somehow, it would be very helpful</p>",
        "id": 246042133,
        "sender_full_name": "tmandry",
        "timestamp": 1626312938
    },
    {
        "content": "<p>I also think the Pin docs need to be rewritten (and I know someone who's working on this)</p>",
        "id": 246042195,
        "sender_full_name": "tmandry",
        "timestamp": 1626312985
    },
    {
        "content": "<p>if we could have some kind of <code>pin</code> binding modifier in the language, it would be nice too</p>",
        "id": 246042229,
        "sender_full_name": "tmandry",
        "timestamp": 1626313040
    }
]