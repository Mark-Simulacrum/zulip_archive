[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span>, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>: I'm trying to do my long-promised write-up for <a href=\"https://github.com/rust-lang/rust/pull/61207\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61207\">https://github.com/rust-lang/rust/pull/61207</a>. As far as I can tell, our current behavior is pretty conservative -- <a href=\"https://gist.github.com/nikomatsakis/c5c8e585989924e8485df48ab6bbc3dd\" target=\"_blank\" title=\"https://gist.github.com/nikomatsakis/c5c8e585989924e8485df48ab6bbc3dd\">I took some notes here</a>. Is there a particular pattern that <em>works</em> which we are concerned about? I'm going back through our minutes to try and figure that out -- or is the sole concern that things which would be convenient don't work presently?</p>",
        "id": 169074627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1561579065
    },
    {
        "content": "<p>I'll have a look in a bit</p>",
        "id": 169077229,
        "sender_full_name": "centril",
        "timestamp": 1561581088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes, this: <a href=\"https://github.com/rust-lang/rust/pull/60944#issuecomment-493915865\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/60944#issuecomment-493915865\">https://github.com/rust-lang/rust/pull/60944#issuecomment-493915865</a></p>",
        "id": 169081856,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1561584426
    },
    {
        "content": "<p>is a thing which <em>does</em> work but I wouldn't expect it to if it doesn't also work for <code>Pin&lt;&amp;mut Self&gt;</code></p>",
        "id": 169081910,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1561584471
    },
    {
        "content": "<p>which then caused the whole round of confusion when eddy was suggesting this extension: <a href=\"https://github.com/rust-lang/rust/pull/60944#issuecomment-494722365\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/60944#issuecomment-494722365\">https://github.com/rust-lang/rust/pull/60944#issuecomment-494722365</a></p>",
        "id": 169082011,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1561584528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> ok thanks -- although that <em>particular</em> example is unstable.</p>",
        "id": 169091848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1561593718
    },
    {
        "content": "<p>but yes it is behaving oddly</p>",
        "id": 169091938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1561593822
    },
    {
        "content": "<p>ok, I see, but if you use <code>Pin</code>, then it <em>does</em> compile, and that is bad</p>",
        "id": 169092212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1561594086
    },
    {
        "content": "<p>wanna see something fun? (and I suppose ironic)</p>",
        "id": 169130328,
        "sender_full_name": "eddyb",
        "timestamp": 1561639220
    },
    {
        "content": "<p>I changed the elision rules to only allow literal <code>Self</code> not <code>Foo</code> (assuming a method of <code>impl Foo {...}</code>) to get the special <code>&amp;self</code>-like treatment, and I have only 2 failures in libcore</p>",
        "id": 169130339,
        "sender_full_name": "eddyb",
        "timestamp": 1561639232
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L447\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L447\">https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L447</a></p>",
        "id": 169130344,
        "sender_full_name": "eddyb",
        "timestamp": 1561639235
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L484\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L484\">https://github.com/rust-lang/rust/blob/master/src/libcore/pin.rs#L484</a></p>",
        "id": 169130350,
        "sender_full_name": "eddyb",
        "timestamp": 1561639243
    },
    {
        "content": "<p>for some reason all of those methods are written as <code>self: &amp;Pin&lt;T&gt;</code> or <code>self: &amp;mut Pin&lt;T&gt;</code></p>",
        "id": 169130374,
        "sender_full_name": "eddyb",
        "timestamp": 1561639269
    },
    {
        "content": "<p>in <em>the entire codebase</em>, that file has the only examples of <code>&amp;self</code> or <code>&amp;mut self</code> written out like that</p>",
        "id": 169130520,
        "sender_full_name": "eddyb",
        "timestamp": 1561639390
    },
    {
        "content": "<p>it's those 2 plus the <code>set</code> method</p>",
        "id": 169130584,
        "sender_full_name": "eddyb",
        "timestamp": 1561639443
    },
    {
        "content": "<p>and the only <code>self: &amp;(mut )?Self</code> is in <code>core::fmt</code> in a <code>write_fmt</code> method that has <code>mut self: &amp;mut Self</code>, presumably making <code>self</code> point to something else (as <code>mut &amp;mut self</code> is syntactically invalid)</p>",
        "id": 169130718,
        "sender_full_name": "eddyb",
        "timestamp": 1561639527
    },
    {
        "content": "<p>tests have a bunch of examples of <code>self: &amp;Foo</code> and <code>self: &amp;mut Bar</code>, of course</p>",
        "id": 169130911,
        "sender_full_name": "eddyb",
        "timestamp": 1561639664
    },
    {
        "content": "<p>but only one (run-pass) test seems to fails when I run the tests, anyway</p>",
        "id": 169133592,
        "sender_full_name": "eddyb",
        "timestamp": 1561641488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> opened <a href=\"https://github.com/rust-lang/rust/pull/62181\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62181\">https://github.com/rust-lang/rust/pull/62181</a> for crater purposes</p>",
        "id": 169133870,
        "sender_full_name": "eddyb",
        "timestamp": 1561641717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you explain why those examples needed to be changed?</p>",
        "id": 169159520,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1561658957
    },
    {
        "content": "<p>the elision being used there is \"syntactic\" in the way I would read it</p>",
        "id": 169159537,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1561658969
    },
    {
        "content": "<p>Well it's semantic in the sense that it requires context not provided by the function signature itself</p>",
        "id": 169162249,
        "sender_full_name": "centril",
        "timestamp": 1561660595
    },
    {
        "content": "<p>to determine whether something is the <code>Self</code> type or not</p>",
        "id": 169162263,
        "sender_full_name": "centril",
        "timestamp": 1561660607
    },
    {
        "content": "<p>But I can live with that <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 169162293,
        "sender_full_name": "centril",
        "timestamp": 1561660628
    },
    {
        "content": "<p>yeah <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> is right. also, this is just for <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, I doubt we'll actually make a breaking change here</p>",
        "id": 169222475,
        "sender_full_name": "eddyb",
        "timestamp": 1561727007
    },
    {
        "content": "<p>like, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> wanted to know what breakage would result if we required writing <code>self: &amp;Self</code> or <code>&amp;self</code> in order to apply the elision special-case</p>",
        "id": 169222560,
        "sender_full_name": "eddyb",
        "timestamp": 1561727059
    },
    {
        "content": "<blockquote>\n<p>I doubt we'll actually make a breaking change here</p>\n</blockquote>\n<p>I am curious -- the current rules are ... pretty ad-hoc, as well, in that they consider \"the current struct\" (regardless of parameters etc) to be \"self enough\". But the most I would expect is to deprecate that behavior and encourage manual annotation.</p>",
        "id": 169497108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562086062
    }
]