[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting time!</p>",
        "id": 198096359,
        "sender_full_name": "tmandry",
        "timestamp": 1589907633
    },
    {
        "content": "<p><a href=\"https://github.com/orgs/rust-lang/projects/2\">Project board</a></p>",
        "id": 198096444,
        "sender_full_name": "tmandry",
        "timestamp": 1589907674
    },
    {
        "content": "<p>2 issues marked done this week:</p>\n<ul>\n<li>thread 'rustc' panicked at 'no label after fn', src/libcore/option.rs:1188:5 <a href=\"https://github.com/rust-lang/rust/issues/72095\">#72095</a></li>\n<li>rustc doesn't suggest missing .await before a <code>?</code> <a href=\"https://github.com/rust-lang/rust/issues/71811\">#71811</a></li>\n</ul>",
        "id": 198096513,
        "sender_full_name": "tmandry",
        "timestamp": 1589907705
    },
    {
        "content": "<p>that's awesome</p>",
        "id": 198096595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589907733
    },
    {
        "content": "<p>Looking through in-progress PRs</p>",
        "id": 198096643,
        "sender_full_name": "tmandry",
        "timestamp": 1589907753
    },
    {
        "content": "<h2>suggest <code>await</code> for future-related type errors <a href=\"https://github.com/rust-lang/rust/issues/61076\">#61076</a></h2>",
        "id": 198096753,
        "sender_full_name": "tmandry",
        "timestamp": 1589907814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> wrote a PR which fixes part of this, I'm not sure if they want to continue working on it or not</p>",
        "id": 198096788,
        "sender_full_name": "tmandry",
        "timestamp": 1589907831
    },
    {
        "content": "<p>and it looks like I owe them one review/r+ for anotehr one I reviewed</p>",
        "id": 198097027,
        "sender_full_name": "tmandry",
        "timestamp": 1589907920
    },
    {
        "content": "<p>/me needs to work on his GH workflow, apparently</p>",
        "id": 198097069,
        "sender_full_name": "tmandry",
        "timestamp": 1589907934
    },
    {
        "content": "<p>anyway, thanks <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> for tackling all these issues =)</p>",
        "id": 198097107,
        "sender_full_name": "tmandry",
        "timestamp": 1589907951
    },
    {
        "content": "<p>Any updates on Blocked or Claimed issues?</p>",
        "id": 198097179,
        "sender_full_name": "tmandry",
        "timestamp": 1589907975
    },
    {
        "content": "<p>I haven't gotten to my claimed issue yet, but knew I wouldn't have time until this week</p>",
        "id": 198097301,
        "sender_full_name": "tmandry",
        "timestamp": 1589908022
    },
    {
        "content": "<p>/me looks</p>",
        "id": 198097306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908025
    },
    {
        "content": "<p>I haven't yet, hopefully will before next meeting</p>",
        "id": 198097347,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589908047
    },
    {
        "content": "<p>I'm curious about  Re-land \"add IntoFuture trait and support for await\" <a href=\"https://github.com/rust-lang/rust/issues/67982\">#67982</a></p>",
        "id": 198097360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908054
    },
    {
        "content": "<p>the previous PR was semi-blocked on <a href=\"https://github.com/rust-lang/rust/pull/69218\">https://github.com/rust-lang/rust/pull/69218</a></p>",
        "id": 198097446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908083
    },
    {
        "content": "<p>yes</p>",
        "id": 198097458,
        "sender_full_name": "tmandry",
        "timestamp": 1589908091
    },
    {
        "content": "<p>though it's possible someone with more time could investigate the performance regression directly</p>",
        "id": 198097491,
        "sender_full_name": "tmandry",
        "timestamp": 1589908120
    },
    {
        "content": "<p>and see if it's something that can be fixed more easily</p>",
        "id": 198097522,
        "sender_full_name": "tmandry",
        "timestamp": 1589908135
    },
    {
        "content": "<p>I'm curious if we <em>know</em> that <a href=\"https://github.com/rust-lang/rust/issues/69218\">#69218</a> would help or just suppose</p>",
        "id": 198097537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908142
    },
    {
        "content": "<p>just suppose</p>",
        "id": 198097560,
        "sender_full_name": "tmandry",
        "timestamp": 1589908156
    },
    {
        "content": "<p>OK.</p>",
        "id": 198097604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908176
    },
    {
        "content": "<p>I remember thinking \"oh I'll just wait until that lands\" but it hasn't yet</p>",
        "id": 198097613,
        "sender_full_name": "tmandry",
        "timestamp": 1589908179
    },
    {
        "content": "<p>OK. It would be good to know for sure but oh well</p>",
        "id": 198097673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908200
    },
    {
        "content": "<p>Think we should return the issue to On Deck?</p>",
        "id": 198097755,
        "sender_full_name": "tmandry",
        "timestamp": 1589908216
    },
    {
        "content": "<p>I haven't had time to dig in more deeply</p>",
        "id": 198097772,
        "sender_full_name": "tmandry",
        "timestamp": 1589908222
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/69218\">#69218</a> will land sooner or later but it's fairly complex</p>",
        "id": 198097774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E19/near/198097755\">said</a>:</p>\n<blockquote>\n<p>Think we should return the issue to On Deck?</p>\n</blockquote>\n<p>not <em>necessarily</em></p>",
        "id": 198097824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908253
    },
    {
        "content": "<p>I was wondering if it could make sense to land the <code>IntoFuture</code> trait separate from the integration into async/await</p>",
        "id": 198097854,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908271
    },
    {
        "content": "<p>Interesting question</p>",
        "id": 198097896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908289
    },
    {
        "content": "<p>that way people can start implementing and using it even if it doesn't quite have the right semantics the whole way through</p>",
        "id": 198097900,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908290
    },
    {
        "content": "<p>I'm wondering if there is any forward compat danger</p>",
        "id": 198097906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908295
    },
    {
        "content": "<p>I guess that if you have to pick between <em>being a future</em> or implementing <code>IntoFuture</code> it's probably ok</p>",
        "id": 198097954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908318
    },
    {
        "content": "<p>I wouldn't be opposed to landing the trait first anyhow, I guess it'd be unstable</p>",
        "id": 198098157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908404
    },
    {
        "content": "<p>yeah, the blanket impl on <code>IntoFuture</code> makes it so, I think</p>",
        "id": 198098165,
        "sender_full_name": "tmandry",
        "timestamp": 1589908406
    },
    {
        "content": "<p>(that said, it seems still kind of surprising to me that this is such a perf hazard)</p>",
        "id": 198098178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908414
    },
    {
        "content": "<p>well it wasn't that extreme I suppose</p>",
        "id": 198098220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908440
    },
    {
        "content": "<p>if there's consensus that landing the trait separately is a good idea, I'd be happy to pick it up</p>",
        "id": 198098304,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908468
    },
    {
        "content": "<p>I might have time to split the PR up</p>",
        "id": 198098305,
        "sender_full_name": "tmandry",
        "timestamp": 1589908468
    },
    {
        "content": "<p>and we'll do another perf run first for good measure</p>",
        "id": 198098321,
        "sender_full_name": "tmandry",
        "timestamp": 1589908477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> haha, jinx -- feel free to (:</p>",
        "id": 198098322,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts</span> whoops, I'd be happy if you wanted to pick it up =)</p>",
        "id": 198098387,
        "sender_full_name": "tmandry",
        "timestamp": 1589908508
    },
    {
        "content": "<p>I'm not sure I'll have time, personally</p>",
        "id": 198098463,
        "sender_full_name": "tmandry",
        "timestamp": 1589908546
    },
    {
        "content": "<p>ok! putting it on my todo list</p>",
        "id": 198098493,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908558
    },
    {
        "content": "<p>Yeah, I'm in favor of doing a bit more investigation here</p>",
        "id": 198098666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908631
    },
    {
        "content": "<p>and potentially splitting</p>",
        "id": 198098671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts</span> if you create a new PR and do a perf run, we could maybe schedule 30 minut sometime to dig in a bit</p>",
        "id": 198098707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908656
    },
    {
        "content": "<p>(unrelated: I am reminded that I have to update the stream RFC)</p>",
        "id": 198098733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sounds good; let's chat about this offline!</p>",
        "id": 198098795,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1589908684
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E19/near/198098733\">said</a>:</p>\n<blockquote>\n<p>(unrelated: I am reminded that I have to update the stream RFC)</p>\n</blockquote>\n<p>ah right, putting that on the board so we can track it</p>",
        "id": 198098843,
        "sender_full_name": "tmandry",
        "timestamp": 1589908713
    },
    {
        "content": "<p>okay. let's do some new issue triage!</p>",
        "id": 198098939,
        "sender_full_name": "tmandry",
        "timestamp": 1589908754
    },
    {
        "content": "<p><a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">Uncategorized issues</a></p>",
        "id": 198098982,
        "sender_full_name": "tmandry",
        "timestamp": 1589908770
    },
    {
        "content": "<h2>Unhelpful compiler message when a reference is used inside of an await block <a href=\"https://github.com/rust-lang/rust/issues/72312\">#72312</a></h2>",
        "id": 198099021,
        "sender_full_name": "tmandry",
        "timestamp": 1589908788
    },
    {
        "content": "<p>hmm</p>",
        "id": 198099229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908877
    },
    {
        "content": "<p>the error <em>seems</em> helpful to me :)</p>",
        "id": 198099257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908888
    },
    {
        "content": "<p>but I can see how it could be improved</p>",
        "id": 198099270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908892
    },
    {
        "content": "<p>right</p>",
        "id": 198099279,
        "sender_full_name": "tmandry",
        "timestamp": 1589908898
    },
    {
        "content": "<p>that is, the problem seems to be with the type of <code>self</code></p>",
        "id": 198099282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908899
    },
    {
        "content": "<p>and we did identify that</p>",
        "id": 198099294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908903
    },
    {
        "content": "<p>but we didn't show a good location</p>",
        "id": 198099314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908910
    },
    {
        "content": "<p>highlighting the <em>use</em> of <code>self</code> in particular</p>",
        "id": 198099326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908918
    },
    {
        "content": "<p>not to mention that the phrasing of those labels</p>",
        "id": 198099422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908936
    },
    {
        "content": "<p>implies an ordering</p>",
        "id": 198099429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908938
    },
    {
        "content": "<p>that is distinct from the ordering they appear in</p>",
        "id": 198099441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908941
    },
    {
        "content": "<p>I was suggesting long ago to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> that we have a mode for this in the diagnostics</p>",
        "id": 198099468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908952
    },
    {
        "content": "<p>\"ordered labels\" that we would either put in a coherent role or break up into notes</p>",
        "id": 198099495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908969
    },
    {
        "content": "<p>anyway, I can leave notes on the issue, I guess the question is how to prioritize</p>",
        "id": 198099513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589908977
    },
    {
        "content": "<p>some of the labels also say things that don't (to me) make much sense, e.g. \"this return type evaluates to the static lifetime\"</p>",
        "id": 198099594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909017
    },
    {
        "content": "<p>it seems like we should be able to do something similar to what we do for trait obligations for this situation</p>",
        "id": 198099596,
        "sender_full_name": "tmandry",
        "timestamp": 1589909018
    },
    {
        "content": "<p>not sure how hard that is though</p>",
        "id": 198099606,
        "sender_full_name": "tmandry",
        "timestamp": 1589909025
    },
    {
        "content": "<p>we do track \"origin\" information to some extent</p>",
        "id": 198099630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909035
    },
    {
        "content": "<p>though less so in the NLL checker</p>",
        "id": 198099637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909039
    },
    {
        "content": "<p>if that's what you mean</p>",
        "id": 198099682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909044
    },
    {
        "content": "<p>oh, I guess you mean</p>",
        "id": 198099695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909050
    },
    {
        "content": "<p>show the error in the source</p>",
        "id": 198099709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909052
    },
    {
        "content": "<p>like we do for auto traits?</p>",
        "id": 198099724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909058
    },
    {
        "content": "<p>yeah</p>",
        "id": 198099783,
        "sender_full_name": "tmandry",
        "timestamp": 1589909087
    },
    {
        "content": "<p>though I don't remember if it's restricted to auto traits</p>",
        "id": 198099822,
        "sender_full_name": "tmandry",
        "timestamp": 1589909107
    },
    {
        "content": "<p>like how we keep the stack of obligations around</p>",
        "id": 198099847,
        "sender_full_name": "tmandry",
        "timestamp": 1589909123
    },
    {
        "content": "<p>it will be more-or-less restricted</p>",
        "id": 198099909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909150
    },
    {
        "content": "<p>in any case, I agree</p>",
        "id": 198099977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909164
    },
    {
        "content": "<p>I'm not sure how hard it woudl be to implement either</p>",
        "id": 198099989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909170
    },
    {
        "content": "<p>I haven't heard as many complaints about this as with <code>Send</code>, but it <em>seems</em> like it could be common</p>",
        "id": 198100013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909182
    },
    {
        "content": "<p>I think it's the type of thing that would be very helpful to new-ish Rust programmers</p>",
        "id": 198100114,
        "sender_full_name": "tmandry",
        "timestamp": 1589909222
    },
    {
        "content": "<p>I guess I would consider it for on-deck</p>",
        "id": 198100129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909226
    },
    {
        "content": "<p>it also seems \"medium-hard\"</p>",
        "id": 198100152,
        "sender_full_name": "tmandry",
        "timestamp": 1589909234
    },
    {
        "content": "<p>yeah.. I guess I'll mark it on deck for now, but we might be letting that list grow too much :)</p>",
        "id": 198100214,
        "sender_full_name": "tmandry",
        "timestamp": 1589909266
    },
    {
        "content": "<p>it is definitely medium-hard</p>",
        "id": 198100318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909302
    },
    {
        "content": "<p>not as much infra exists</p>",
        "id": 198100329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909305
    },
    {
        "content": "<h2>Tracking Issue for feature <code>future_poll_fn</code> <a href=\"https://github.com/rust-lang/rust/issues/72302\">#72302</a></h2>",
        "id": 198100395,
        "sender_full_name": "tmandry",
        "timestamp": 1589909347
    },
    {
        "content": "<p>not much to do here, marking triaged</p>",
        "id": 198100411,
        "sender_full_name": "tmandry",
        "timestamp": 1589909354
    },
    {
        "content": "<p>we should track the implementation PR, I think..</p>",
        "id": 198100480,
        "sender_full_name": "tmandry",
        "timestamp": 1589909391
    },
    {
        "content": "<p>done</p>",
        "id": 198100548,
        "sender_full_name": "tmandry",
        "timestamp": 1589909409
    },
    {
        "content": "<h2>Stack space in async closures is not shared between branches in debug builds <a href=\"https://github.com/rust-lang/rust/issues/72247\">#72247</a></h2>",
        "id": 198100555,
        "sender_full_name": "tmandry",
        "timestamp": 1589909411
    },
    {
        "content": "<p>I don't 100% understand the issue yet, on the whole I wouldn't consider things like this high priority, but it also seems like something we should already be optimizing in debug builds</p>",
        "id": 198100815,
        "sender_full_name": "tmandry",
        "timestamp": 1589909526
    },
    {
        "content": "<blockquote>\n<p>This is frustrating because it means that branch heavy code blows out the stack much faster in a debug build than it does in an opt build when recursing. I saw an order of magnitude difference in stack size in one of my functions between debug and opt because of this.</p>\n</blockquote>",
        "id": 198100898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909568
    },
    {
        "content": "<p>yeah, that's unfortunate</p>",
        "id": 198100972,
        "sender_full_name": "tmandry",
        "timestamp": 1589909606
    },
    {
        "content": "<p>I have another meeting, but seems like a legit usability hazard</p>",
        "id": 198100980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909611
    },
    {
        "content": "<p>I guess this maybe has to do w/ debuginfo or something? No idea.</p>",
        "id": 198100995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589909625
    },
    {
        "content": "<p>Thanks for including me in this conversation - I am learning a lot by listening :)</p>",
        "id": 198101021,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589909639
    },
    {
        "content": "<p>marking on deck for now, with a comment</p>",
        "id": 198101087,
        "sender_full_name": "tmandry",
        "timestamp": 1589909656
    },
    {
        "content": "<p>that's all the uncategorized issues</p>",
        "id": 198101116,
        "sender_full_name": "tmandry",
        "timestamp": 1589909668
    },
    {
        "content": "<p>I'm going to say <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> thanks all for coming</p>",
        "id": 198101140,
        "sender_full_name": "tmandry",
        "timestamp": 1589909682
    },
    {
        "content": "<p>but if anyone around is wanting to work on something, I can stick around and help find something</p>",
        "id": 198101195,
        "sender_full_name": "tmandry",
        "timestamp": 1589909709
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E19/near/198096788\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116773\">csmoe</span> wrote a PR which fixes part of this, I'm not sure if they want to continue working on it or not</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>  I'm working on <code>struct.[await].field</code> case. <br>\nand your reviews were addressed, waiting for your another review on this PR <a href=\"https://github.com/rust-lang/rust/pull/72260\">https://github.com/rust-lang/rust/pull/72260</a></p>",
        "id": 198145427,
        "sender_full_name": "csmoe",
        "timestamp": 1589937383
    }
]