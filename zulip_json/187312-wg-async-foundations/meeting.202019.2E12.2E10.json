[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> -- sync meeting?</p>",
        "id": 183084940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001065
    },
    {
        "content": "<p>Also, I've been talking to <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> and trying to convince them to start taking over some part of the leading of the \"polish impl\" side of this work :)</p>",
        "id": 183084968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001100
    },
    {
        "content": "<p>(something I mentioned a bit at the end of last meeting)</p>",
        "id": 183084999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001119
    },
    {
        "content": "<p>Hi!</p>",
        "id": 183085019,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576001131
    },
    {
        "content": "<p>but let's look over untriaged issues to start</p>",
        "id": 183085022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001132
    },
    {
        "content": "<p>ps for those who don't know I use the links on <a href=\"https://rust-lang.github.io/compiler-team/working-groups/async-await/\" target=\"_blank\" title=\"https://rust-lang.github.io/compiler-team/working-groups/async-await/\">the working group page</a></p>",
        "id": 183085142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001188
    },
    {
        "content": "<h1><a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">Uncategorized issues</a></h1>",
        "id": 183085159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001200
    },
    {
        "content": "<blockquote>\n<p>ICE on beta and nightly as result of use of <code>yield</code> in combination with macro call in <code>async</code> block <a href=\"https://github.com/rust-lang/rust/issues/67158\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67158\">#67158</a></p>\n</blockquote>",
        "id": 183085173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001210
    },
    {
        "content": "<p>seems like P-medium since <code>yield</code> is unstable?</p>",
        "id": 183085300,
        "sender_full_name": "tmandry",
        "timestamp": 1576001280
    },
    {
        "content": "<p>sorry</p>",
        "id": 183085482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001382
    },
    {
        "content": "<p>had to run to the bathroom :)</p>",
        "id": 183085497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001388
    },
    {
        "content": "<p>yeah, sounds right</p>",
        "id": 183085501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001391
    },
    {
        "content": "<p>I'll just tag it as triaged</p>",
        "id": 183085570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001407
    },
    {
        "content": "<blockquote>\n<p>ICE while compiling async/await code <a href=\"https://github.com/rust-lang/rust/issues/67087\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67087\">#67087</a></p>\n</blockquote>",
        "id": 183085631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001463
    },
    {
        "content": "<p>welp</p>",
        "id": 183085669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001491
    },
    {
        "content": "<p>no source code</p>",
        "id": 183085675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001494
    },
    {
        "content": "<p>kind of inactionable</p>",
        "id": 183085676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001496
    },
    {
        "content": "<p>yeah :/</p>",
        "id": 183085682,
        "sender_full_name": "tmandry",
        "timestamp": 1576001500
    },
    {
        "content": "<p>I guess i'll just leave it as is for now</p>",
        "id": 183085756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001525
    },
    {
        "content": "<p>I see that <a href=\"https://github.com/rust-lang/rust/issues/67200\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67200\">https://github.com/rust-lang/rust/issues/67200</a> was mentioned</p>",
        "id": 183085803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001567
    },
    {
        "content": "<p>yeah, and that reproducer does use async/await</p>",
        "id": 183085824,
        "sender_full_name": "tmandry",
        "timestamp": 1576001584
    },
    {
        "content": "<p>that was mentioned as a potential duplicate</p>",
        "id": 183085834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001591
    },
    {
        "content": "<p>we should probably go ahead and triage that issue at least</p>",
        "id": 183085847,
        "sender_full_name": "tmandry",
        "timestamp": 1576001598
    },
    {
        "content": "<p>yeah</p>",
        "id": 183085855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001603
    },
    {
        "content": "<p>how serious do we think <a href=\"https://github.com/rust-lang/rust/issues/67200\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67200\">#67200</a> is...</p>",
        "id": 183085904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001637
    },
    {
        "content": "<p>I wonder if that repro is the <em>actual</em> repro</p>",
        "id": 183085961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001655
    },
    {
        "content": "<p>also, as it relies on async-std, it's going to be harder for us to minimiz</p>",
        "id": 183085978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001672
    },
    {
        "content": "<p>that is, the author says \"It was quite basic, something like\"</p>",
        "id": 183085990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001679
    },
    {
        "content": "<p>as opposed to \"this is defintely the repro\" :)</p>",
        "id": 183086004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001687
    },
    {
        "content": "<p>I'm include to just mark as \"triaged\" for now, or maybe wait until next week on this too</p>",
        "id": 183086013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001696
    },
    {
        "content": "<p>hmm. it looks like it happened on stable though</p>",
        "id": 183086036,
        "sender_full_name": "tmandry",
        "timestamp": 1576001710
    },
    {
        "content": "<p>but yeah, without a real reproducer it's hard to do anything</p>",
        "id": 183086086,
        "sender_full_name": "tmandry",
        "timestamp": 1576001748
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"s\">&quot;test_string&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"n\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"kp\">&amp;</span><span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>didn't encounter any problem</p>",
        "id": 183086182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001801
    },
    {
        "content": "<blockquote>\n<p>Reduce type errors in async fns <a href=\"https://github.com/rust-lang/rust/issues/67025\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67025\">#67025</a></p>\n</blockquote>",
        "id": 183086207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001830
    },
    {
        "content": "<p>yikes :D</p>",
        "id": 183086236,
        "sender_full_name": "tmandry",
        "timestamp": 1576001858
    },
    {
        "content": "<p>wow</p>",
        "id": 183086237,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576001859
    },
    {
        "content": "<p>there is a minimal reproduction at the bottom</p>",
        "id": 183086244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001864
    },
    {
        "content": "<p>I wonder if this would be aided by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>'s long-standing PR</p>",
        "id": 183086259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001873
    },
    {
        "content": "<p>(which I need perhaps to give feedback on, I sort of forget what was going on with that)</p>",
        "id": 183086317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001889
    },
    {
        "content": "<p>I can check (not today, I've got an exam in &lt; 16 hours).</p>",
        "id": 183086323,
        "sender_full_name": "davidtwco",
        "timestamp": 1576001894
    },
    {
        "content": "<blockquote>\n<p>(which I need perhaps to give feedback on, I sort of forget what was going on with that)</p>\n</blockquote>\n<p>I believe that's the case.</p>",
        "id": 183086335,
        "sender_full_name": "davidtwco",
        "timestamp": 1576001900
    },
    {
        "content": "<p>I will try to do that tomorrow morning, most likely, i'll block out some time for it</p>",
        "id": 183086353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001918
    },
    {
        "content": "<p>else this afternoon</p>",
        "id": 183086355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001920
    },
    {
        "content": "<p>There's also a draft PR which claims to fix this: <a href=\"https://github.com/rust-lang/rust/pull/67116\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67116\">https://github.com/rust-lang/rust/pull/67116</a></p>",
        "id": 183086360,
        "sender_full_name": "tmandry",
        "timestamp": 1576001922
    },
    {
        "content": "<p>I'm trying to reduce my PR backlog</p>",
        "id": 183086365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001923
    },
    {
        "content": "<p>I hadn't seen that. I wonder in what ways it overlaps with my PR.</p>",
        "id": 183086425,
        "sender_full_name": "davidtwco",
        "timestamp": 1576001979
    },
    {
        "content": "<p>Yeah I was wondering the same</p>",
        "id": 183086443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576001992
    },
    {
        "content": "<p>IF you have a build around, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, you could test against <a href=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\">the minimized example here</a></p>",
        "id": 183086525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002023
    },
    {
        "content": "<blockquote>\n<p>also, as it relies on async-std, it's going to be harder for us to minimiz</p>\n</blockquote>\n<p>async repro is a bit hard as the issues always mixed with <code>futures/tokio/...</code>, <a href=\"https://github.com/rust-lang/rust/issues/65180\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65180\">https://github.com/rust-lang/rust/issues/65180</a> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I had removed the <code>Error</code> and some code, but the <code>Server, make_servic_fn</code> etc were hard for me to reduce as complex traits and <code>pin_project</code> involved in.</p>",
        "id": 183086527,
        "sender_full_name": "csmoe",
        "timestamp": 1576002025
    },
    {
        "content": "<p>yeah that is a challenge</p>",
        "id": 183086578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002052
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/65345/files#diff-81f33f28041996539ee55e2f9c099f90\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65345/files#diff-81f33f28041996539ee55e2f9c099f90\">my pr's diff for async-fn-nonsend</a> and <a href=\"https://github.com/rust-lang/rust/pull/67116/files#diff-81f33f28041996539ee55e2f9c099f90\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67116/files#diff-81f33f28041996539ee55e2f9c099f90\">that pr's diff for async-fn-nonsend</a></p>",
        "id": 183086595,
        "sender_full_name": "davidtwco",
        "timestamp": 1576002064
    },
    {
        "content": "<blockquote>\n<p>IF you have a build around, <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span>, you could test against <a href=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\">the minimized example here</a></p>\n</blockquote>\n<p>I do, I'll give it a check shortly.</p>",
        "id": 183086720,
        "sender_full_name": "davidtwco",
        "timestamp": 1576002125
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/65345/files#diff-81f33f28041996539ee55e2f9c099f90\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65345/files#diff-81f33f28041996539ee55e2f9c099f90\">my pr's diff for async-fn-nonsend</a> and <a href=\"https://github.com/rust-lang/rust/pull/67116/files#diff-81f33f28041996539ee55e2f9c099f90\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67116/files#diff-81f33f28041996539ee55e2f9c099f90\">that pr's diff for async-fn-nonsend</a></p>\n</blockquote>\n<p>seems pretty similar</p>",
        "id": 183086730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002134
    },
    {
        "content": "<p>OK, so I guess i'll mark this as \"triaged\" for now any<br>\nway</p>",
        "id": 183086745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002145
    },
    {
        "content": "<p>I think we have enough \"on deck\" issues and this is probably overlapping anyway?</p>",
        "id": 183086764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002157
    },
    {
        "content": "<p>So I guess maybe we should take last 10 minutes to touch base</p>",
        "id": 183086834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002212
    },
    {
        "content": "<p>We have more folks around :)</p>",
        "id": 183086840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002215
    },
    {
        "content": "<p>I'm not sure who is working on what (or looking for something to do)</p>",
        "id": 183086862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002231
    },
    {
        "content": "<p>My own async time for this week I expect to use on (a) async interviews, (b) reviewing davidtwco's PR, and (c) talking to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> about some of the work they've been doing on getting more precise idea of which types are live across awaits</p>",
        "id": 183086943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002260
    },
    {
        "content": "<p>I'm going to have a bit of time over xmas to do some PRs.</p>",
        "id": 183086963,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576002277
    },
    {
        "content": "<p>Ah, nice</p>",
        "id": 183086971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002283
    },
    {
        "content": "<p>still working on <a href=\"https://github.com/rust-lang/rust/issues/66312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312\">https://github.com/rust-lang/rust/issues/66312</a></p>",
        "id": 183087020,
        "sender_full_name": "csmoe",
        "timestamp": 1576002325
    },
    {
        "content": "<blockquote>\n<p>talking to <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> about some of the work they've been doing on getting more precise idea of which types are live across awaits</p>\n</blockquote>\n<p><em>is intrigued</em></p>",
        "id": 183087050,
        "sender_full_name": "tmandry",
        "timestamp": 1576002350
    },
    {
        "content": "<p>The next thing I pick up will likely be <a href=\"https://github.com/rust-lang/rust/issues/62958\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62958\">#62958</a></p>",
        "id": 183087060,
        "sender_full_name": "tmandry",
        "timestamp": 1576002360
    },
    {
        "content": "<blockquote>\n<p>still working on <a href=\"https://github.com/rust-lang/rust/issues/66312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312\">https://github.com/rust-lang/rust/issues/66312</a></p>\n</blockquote>\n<p>do you need some help getting unstuck?</p>",
        "id": 183087140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002389
    },
    {
        "content": "<p>one thing I feel like I\"ve kind of lost track of</p>",
        "id": 183087159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002400
    },
    {
        "content": "<p>maybe it'd be useful to write it down</p>",
        "id": 183087162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002403
    },
    {
        "content": "<blockquote>\n<p>IF you have a build around, <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span>, you could test against <a href=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67025#issuecomment-562620449\">the minimized example here</a></p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span>error: future cannot be shared between threads safely\n  --&gt; /home/david/projects/rust/rust4/src/test/ui/async-await/issue-64130-foo.rs:18:5\n   |\nLL | fn require_sync&lt;T: Sync&gt;(val: T) {}\n   |    ------------    ---- required by this bound in `require_sync`\n...\nLL |     require_sync(async_not_sync());\n   |     ^^^^^^^^^^^^ future returned by `async_not_sync` is not `Sync`\n   |\n   = help: within `impl std::future::Future`, the trait `std::marker::Sync` is not implemented for `*const ()`\nnote: future is not `Sync` as this value is used across an await\n  --&gt; /home/david/projects/rust/rust4/src/test/ui/async-await/issue-64130-foo.rs:12:5\n   |\nLL |     let a = NotSync(0 as *const ());\n   |         - has type `NotSync`\n...\nLL |     dummy().await;\n   |     ^^^^^^^^^^^^^ await occurs here, with `a` maybe used later\nLL | }\n   | - `a` is later dropped here\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 183087166,
        "sender_full_name": "davidtwco",
        "timestamp": 1576002404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> perhaps leave a comment? that seems great!</p>",
        "id": 183087182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002420
    },
    {
        "content": "<blockquote>\n<p>one thing I feel like I've kind of lost track of</p>\n</blockquote>\n<p>basically \"What would be the biggest problems with using async fn in practice\" today</p>",
        "id": 183087221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002446
    },
    {
        "content": "<blockquote>\n<p>maybe it'd be useful to write it down</p>\n</blockquote>\n<p>okay, will update my progress.</p>",
        "id": 183087230,
        "sender_full_name": "csmoe",
        "timestamp": 1576002456
    },
    {
        "content": "<p>I feel like the imprecise analysis of what is live is one of those corners we kind of cut that seems very suboptimal, and we have to land davidtwco's PR clearly to improve diagnostics, but not sure what the other \"big toestubers\" are</p>",
        "id": 183087305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002485
    },
    {
        "content": "<p>(recursive functions maybe?)</p>",
        "id": 183087327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002503
    },
    {
        "content": "<p>ps, <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span>, I guess you might like to have some ideas for issues to work on over xmas? I'm looking over the list of <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AA-async-await+label%3AAsyncAwait-OnDeck\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AA-async-await+label%3AAsyncAwait-OnDeck\">on deck issues</a></p>",
        "id": 183087363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002538
    },
    {
        "content": "<p>it's actually not that long</p>",
        "id": 183087374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002548
    },
    {
        "content": "<p>I'm easy - anything not too urgent is good :-)</p>",
        "id": 183087388,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576002560
    },
    {
        "content": "<blockquote>\n<p>async-await keywords are not documented in the libstd docs <a href=\"https://github.com/rust-lang/rust/issues/66909\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66909\">#66909</a></p>\n</blockquote>",
        "id": 183087396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002567
    },
    {
        "content": "<p>this should be an easy one, but i'm not sure what to <br>\nedit</p>",
        "id": 183087401,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002573
    },
    {
        "content": "<p>it'll involve a bit of slething or pinging, probalby just a quick ripgrep of the source mihgt find the answer</p>",
        "id": 183087422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002589
    },
    {
        "content": "<p>e.g., where does <a href=\"https://doc.rust-lang.org/std/keyword.const.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/keyword.const.html\">this comment</a> appear in the source...</p>",
        "id": 183087496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002616
    },
    {
        "content": "<p>also super low priority :)</p>",
        "id": 183087507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002623
    },
    {
        "content": "<blockquote>\n<p>basically \"What would be the biggest problems with using async fn in practice\" today</p>\n</blockquote>\n<p>IMO debugging a live program in an async world needs to be easier, but that feels like a \"bigger\" discussion</p>",
        "id": 183087527,
        "sender_full_name": "tmandry",
        "timestamp": 1576002637
    },
    {
        "content": "<blockquote>\n<p>async-block diagnostics do not suggest async move when it may be needed <a href=\"https://github.com/rust-lang/rust/issues/66107\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66107\">#66107</a> </p>\n</blockquote>\n<p>this seems like a good one, <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span>, that's a bit trickier but hopefully not too difficult</p>",
        "id": 183087565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002664
    },
    {
        "content": "<p>I could try to leave a note or two</p>",
        "id": 183087578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002671
    },
    {
        "content": "<p>sure I can sort that out</p>",
        "id": 183087626,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576002705
    },
    {
        "content": "<p>I'll take two - more chance one will get done ;-)</p>",
        "id": 183087711,
        "sender_full_name": "Giles Cope",
        "timestamp": 1576002743
    },
    {
        "content": "<p>not sure why I marked \" An async fn which isn't Send but which should be? <a href=\"https://github.com/rust-lang/rust/issues/63768\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63768\">#63768</a> \" as on-deck -- I <em>think</em> this is probably mostly a matter of getting a more precise analysis</p>",
        "id": 183087734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002761
    },
    {
        "content": "<blockquote>\n<p>IMO debugging a live program in an async world needs to be easier, but that feels like a \"bigger\" discussion</p>\n</blockquote>\n<p>that sounds likely. rust debugging in general is in need of some \"ownership\"</p>",
        "id": 183087757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002777
    },
    {
        "content": "<p>I also think there's work that can be done in the executor implementations to make it easier</p>",
        "id": 183087840,
        "sender_full_name": "tmandry",
        "timestamp": 1576002837
    },
    {
        "content": "<p>and we may want to come up with ways of standardizing some of those interfaces</p>",
        "id": 183087912,
        "sender_full_name": "tmandry",
        "timestamp": 1576002866
    },
    {
        "content": "<p>I'll probably prototype some things in the fuchsia executor at some point</p>",
        "id": 183087944,
        "sender_full_name": "tmandry",
        "timestamp": 1576002889
    },
    {
        "content": "<p>(for example, we don't even have a way of saying \"get me a list of all tasks\" in the debugger today)</p>",
        "id": 183088013,
        "sender_full_name": "tmandry",
        "timestamp": 1576002934
    },
    {
        "content": "<p>ah yeah</p>",
        "id": 183088105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576002975
    },
    {
        "content": "<p>I wonder if e.g. there is some support for go or other languages that we could build on</p>",
        "id": 183088171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576003025
    },
    {
        "content": "<p>(in gdb or other debuggers)</p>",
        "id": 183088178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576003031
    },
    {
        "content": "<p>good question, I'll make a mental note to look into that</p>",
        "id": 183088210,
        "sender_full_name": "tmandry",
        "timestamp": 1576003056
    },
    {
        "content": "<p>though we'd really need a gdb expert to make that work (too bad <span class=\"user-mention\" data-user-id=\"129503\">@Tom Tromey</span> moved on to other things :)</p>",
        "id": 183088233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576003068
    },
    {
        "content": "<p>/me guilt trips</p>",
        "id": 183088253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576003081
    },
    {
        "content": "<blockquote>\n<p>and we may want to come up with ways of standardizing some of those interfaces</p>\n</blockquote>\n<p>exactly this, i think creating an interface for executors is the main thing for Rust to do here</p>",
        "id": 183088303,
        "sender_full_name": "boats",
        "timestamp": 1576003086
    },
    {
        "content": "<blockquote>\n<p>I wonder if e.g. there is some support for go or other languages that we could build on</p>\n</blockquote>\n<p>I think I've seen some fancy stuff in Swift when using Grand Dispatch Central, in LLDB</p>",
        "id": 183088306,
        "sender_full_name": "tmandry",
        "timestamp": 1576003087
    },
    {
        "content": "<blockquote>\n<p>exactly this, i think creating an interface for executors is the main thing for Rust to do here</p>\n</blockquote>\n<p>once we have some things prototyped, it might be good to schedule time to go over those and brainstorm further</p>",
        "id": 183088406,
        "sender_full_name": "tmandry",
        "timestamp": 1576003152
    },
    {
        "content": "<p>(I don't know if anyone else in the ecosystem is working on this, would be good to know if so)</p>",
        "id": 183088601,
        "sender_full_name": "tmandry",
        "timestamp": 1576003297
    },
    {
        "content": "<p>The tracing project might be interested in it</p>",
        "id": 183091527,
        "sender_full_name": "boats",
        "timestamp": 1576005190
    },
    {
        "content": "<p>Somewhat, <code>tracing</code> wrote a crate for this purpose: <a href=\"https://docs.rs/tracing-futures/0.2.0/tracing_futures/\" target=\"_blank\" title=\"https://docs.rs/tracing-futures/0.2.0/tracing_futures/\">https://docs.rs/tracing-futures/0.2.0/tracing_futures/</a>. in practice, it hasn't been terrible to maintain, but it could just be a learned acceptance of pain</p>",
        "id": 183124696,
        "sender_full_name": "David Barsky",
        "timestamp": 1576035292
    }
]