[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> -- meeting?</p>",
        "id": 180543355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573581853
    },
    {
        "content": "<p>Oh, btw, not sure if you noticed but uh... async-await is stable :)</p>",
        "id": 180543383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573581872
    },
    {
        "content": "<p>I'm around, but won't be able to participate actively.</p>",
        "id": 180543405,
        "sender_full_name": "davidtwco",
        "timestamp": 1573581887
    },
    {
        "content": "<h1>Untriaged issues</h1>",
        "id": 180543440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573581914
    },
    {
        "content": "<blockquote>\n<p>async fn presence affects an unrelated error message <a href=\"https://github.com/rust-lang/rust/issues/66312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312\">#66312</a></p>\n</blockquote>",
        "id": 180543475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573581933
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>async fn presence affects an unrelated error message <a href=\"https://github.com/rust-lang/rust/issues/66312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312\">#66312</a></p>\n</blockquote>\n</blockquote>\n<p>i'm working on this right now</p>",
        "id": 180543510,
        "sender_full_name": "csmoe",
        "timestamp": 1573581956
    },
    {
        "content": "<p>great! Any clues as to what is going on?</p>",
        "id": 180543572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573581983
    },
    {
        "content": "<p>OK, triaged, assigned to csmoe; it seems like this is not an immediate crisis (despite some early warning signs)</p>",
        "id": 180543742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582085
    },
    {
        "content": "<p>sup(self_ty, probe.xform_self_ty) returns ProbeResult::NoMatch</p>",
        "id": 180543766,
        "sender_full_name": "csmoe",
        "timestamp": 1573582111
    },
    {
        "content": "<blockquote>\n<p>Waker::will_wake() gets mostly defeated by executor optimizations <a href=\"https://github.com/rust-lang/rust/issues/66281\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66281\">#66281</a></p>\n</blockquote>",
        "id": 180543768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582114
    },
    {
        "content": "<p>this seems like a design question, not something where we should take immediate action</p>",
        "id": 180543912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582208
    },
    {
        "content": "<p>it does raise the question (which I don't know the best answer to) for how to move the scope of this effort beyond \"polish for async-await impl\"</p>",
        "id": 180543929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582220
    },
    {
        "content": "<p>but I don't want to hash that out at a triage meeting</p>",
        "id": 180543942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582228
    },
    {
        "content": "<p>marking as \"triaged\"</p>",
        "id": 180543946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582231
    },
    {
        "content": "<blockquote>\n<p>Borrowing from arguments with higher order async functions <a href=\"https://github.com/rust-lang/rust/issues/66198\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66198\">#66198</a></p>\n</blockquote>",
        "id": 180543977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582258
    },
    {
        "content": "<p>not a bug, closing</p>",
        "id": 180544179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582422
    },
    {
        "content": "<blockquote>\n<p>async fn unmet lifetime constraints produce confusing diagnostics <a href=\"https://github.com/rust-lang/rust/issues/66168\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66168\">#66168</a></p>\n</blockquote>",
        "id": 180544181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582423
    },
    {
        "content": "<p>I'm going to mark this as triaged; diagnostic improvement possible, doesn't seem egregious</p>",
        "id": 180544263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582458
    },
    {
        "content": "<blockquote>\n<p>async-block lifetime issue with shared reference in the return type (async-fn works as expected) <a href=\"https://github.com/rust-lang/rust/issues/66107\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66107\">#66107</a></p>\n</blockquote>",
        "id": 180544311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582505
    },
    {
        "content": "<p>what's missing here, I think, is a suggestion to change from <code>async</code> to <code>async move</code></p>",
        "id": 180544368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582552
    },
    {
        "content": "<p>left a comment</p>",
        "id": 180544647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582740
    },
    {
        "content": "<p>debating whether to move this one to on-deck</p>",
        "id": 180544654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582744
    },
    {
        "content": "<p>seems like a reasonably easy case to get started on, and I suspect this will be a common mistake</p>",
        "id": 180544668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582755
    },
    {
        "content": "<blockquote>\n<p>[codegen] Unnecessary panicking branches in resumption of infinite generator (stored in static variable) <a href=\"https://github.com/rust-lang/rust/issues/66100\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66100\">#66100</a></p>\n</blockquote>",
        "id": 180544821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573582862
    },
    {
        "content": "<p>that is a very detailed report</p>",
        "id": 180545198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583079
    },
    {
        "content": "<p>but it makes sense</p>",
        "id": 180545205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583084
    },
    {
        "content": "<p>it's an optimization, basically, for the special cases of generators that neither return nor unwind (because panic=abort)</p>",
        "id": 180545237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583101
    },
    {
        "content": "<p>I'm going to mark it as triaged but not on-deck</p>",
        "id": 180545494,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583230
    },
    {
        "content": "<p>seems like a bit of an edge case? I guess not if you are working in an embedded environment :)</p>",
        "id": 180545521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>, btw are you around?</p>",
        "id": 180545557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583263
    },
    {
        "content": "<p>OK, that's all the untriaged bugs</p>",
        "id": 180545585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583277
    },
    {
        "content": "<h1>AsyncAwait-Focus updates</h1>",
        "id": 180545596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583281
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> you're fixing a lot of stuff!</p>",
        "id": 180545682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> at dinner but on my phone</p>",
        "id": 180545715,
        "sender_full_name": "tmandry",
        "timestamp": 1573583348
    },
    {
        "content": "<p>How goes it with <a href=\"https://github.com/rust-lang/rust/pull/65668\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65668\">https://github.com/rust-lang/rust/pull/65668</a> ?</p>",
        "id": 180545721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583351
    },
    {
        "content": "<blockquote>\n<p>non-send futures error at point of use, but could cite point of definition in some cases <a href=\"https://github.com/rust-lang/rust/issues/64130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64130\">#64130</a> </p>\n</blockquote>\n<p>this is assigned to <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, who has a pending PR (<a href=\"https://github.com/rust-lang/rust/issues/65345\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65345\">#65345</a>), I remember now I was going to try and get some feedback</p>",
        "id": 180545782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583399
    },
    {
        "content": "<blockquote>\n<p>rustc suggests invalid syntax to fix lifetime inferring error <a href=\"https://github.com/rust-lang/rust/issues/62097\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62097\">#62097</a></p>\n</blockquote>",
        "id": 180545836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> has a pending PR (<a href=\"https://github.com/rust-lang/rust/issues/65730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65730\">#65730</a>)</p>",
        "id": 180545873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583425
    },
    {
        "content": "<blockquote>\n<p>How goes it with <a href=\"https://github.com/rust-lang/rust/pull/65668\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65668\">https://github.com/rust-lang/rust/pull/65668</a> ?</p>\n</blockquote>\n<p>the min-test is a bit hard as the origin code mixed with \"lots of\" traits and associated type <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 180545892,
        "sender_full_name": "csmoe",
        "timestamp": 1573583440
    },
    {
        "content": "<p>looks like it needs <a href=\"https://github.com/rust-lang/rust/pull/65730#issuecomment-552552799\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65730#issuecomment-552552799\">--compare-mode nll</a></p>",
        "id": 180545905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583447
    },
    {
        "content": "<blockquote>\n<p>looks like it needs <a href=\"https://github.com/rust-lang/rust/pull/65730#issuecomment-552552799\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65730#issuecomment-552552799\">--compare-mode nll</a></p>\n</blockquote>\n<p>./x.py test'ing locally. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 180545979,
        "sender_full_name": "csmoe",
        "timestamp": 1573583492
    },
    {
        "content": "<blockquote>\n<p>async/await: awaiting inside a match block captures borrow too eagerly <a href=\"https://github.com/rust-lang/rust/issues/57017\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57017\">#57017</a> </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> has some pending PRs here that need feedback (<a href=\"https://github.com/rust-lang/rust/issues/65783\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65783\">#65783</a>, <a href=\"https://github.com/rust-lang/rust/issues/65782\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65782\">#65782</a>)</p>",
        "id": 180545981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583494
    },
    {
        "content": "<blockquote>\n<p>the min-test is a bit hard as the origin code mixed with \"lots of\" traits and associated type :(</p>\n</blockquote>\n<p>the challenge here is minimizing the original bug report?</p>",
        "id": 180545998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583510
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>the min-test is a bit hard as the origin code mixed with \"lots of\" traits and associated type <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>\n</blockquote>\n<p>the challenge here is minimizing the original bug report?</p>\n</blockquote>\n<p>yes</p>",
        "id": 180546047,
        "sender_full_name": "csmoe",
        "timestamp": 1573583523
    },
    {
        "content": "<p>hmm</p>",
        "id": 180546168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583622
    },
    {
        "content": "<p>do you want some help with that?</p>",
        "id": 180546237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583652
    },
    {
        "content": "<p>what I usually do is to start by removing as much of the example as possible</p>",
        "id": 180546249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583661
    },
    {
        "content": "<p>sometimes by creating a function like</p>",
        "id": 180546261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583672
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">make_type</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 180546273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583683
    },
    {
        "content": "<p>and then e.g. replacing things like </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">server</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">hyper</span>::<span class=\"n\">server</span>::<span class=\"n\">Server</span>::<span class=\"n\">from_tcp</span><span class=\"p\">(</span><span class=\"n\">listener</span><span class=\"p\">).</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"n\">Error</span>::<span class=\"n\">UncreatableServer</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>with</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">server</span>: <span class=\"nc\">hyper</span>::<span class=\"n\">Server</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">make_type</span><span class=\"p\">();</span><span class=\"w\"></span>\n</pre></div>",
        "id": 180546299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583704
    },
    {
        "content": "<p>until I've got something pretty small</p>",
        "id": 180546307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583711
    },
    {
        "content": "<p>then you can try to copy and paste over the struct definitions from <code>hyper</code> itself</p>",
        "id": 180546321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583722
    },
    {
        "content": "<p>thanks, this workflow seems really helpful <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 180546415,
        "sender_full_name": "csmoe",
        "timestamp": 1573583769
    },
    {
        "content": "<p>(ok, well, we're at 30 minutes, anybody looking for something to work on?)</p>",
        "id": 180546430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> feel free to ping if running into trouble, and thanks for tackling so many issues <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 180546448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573583801
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116773\">csmoe</span> feel free to ping if running into trouble, and thanks for tackling so many issues <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>\n</blockquote>\n<p>okay,<br>\nit's really enjoyable to work with rustc code <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 180546521,
        "sender_full_name": "csmoe",
        "timestamp": 1573583847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span>  I had fun using <a href=\"https://github.com/jethrogb/rust-reduce\" target=\"_blank\" title=\"https://github.com/jethrogb/rust-reduce\">https://github.com/jethrogb/rust-reduce</a> to minimise the code creating a problem. (Sadly my PRs haven't landed to it but you can just fork and merge them in I guess).</p>",
        "id": 180569072,
        "sender_full_name": "Giles Cope",
        "timestamp": 1573597642
    },
    {
        "content": "<p>Sorry couldn't be at the meeting - was flying back from #rustfest. <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>  and I got a compiler hacking room going for the impl days - it was great fun. Hopefully a compiler hacking room might be a regular fixture at the impl days. <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 180569213,
        "sender_full_name": "Giles Cope",
        "timestamp": 1573597799
    }
]