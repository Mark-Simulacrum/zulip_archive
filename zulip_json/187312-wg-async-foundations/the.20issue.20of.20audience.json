[
    {
        "content": "<p>Hello all,<br>\nI went through the async-await status report on the \"this week in Rust\" section and would like to contribute to the issue of audience</p>\n<p># whoami<br>\n- My experience level: 1/100 (I started learning Rust last month because I'm not hard core enough to take the world of C/C++ )<br>\n- My use case: free, open-source implementation of the IEEE 11073 standard for communication to and between medical devices<br>\n- My need for async-wait: medical management is primarily event driven; data generated by one device will <code>async</code> trigger events on another device or on the medical record and needs to <code>await</code>  their response to proceed appropriately</p>\n<p># my answer<br>\nAudience should be (~and I hate to say this~) <em>early adopters</em></p>\n<p># my justification<br>\nThis feature is to important to release to the masses all at once since any and all bugs may<br>\n1. put off users<br>\n2. set in motion a chain of bad programming habits that may propagate through time</p>\n<p># how to implement in nightlies<br>\nAs a <code>async!()</code> macro with <code>{ await }</code> statements in the body as this will make it easier (~I think~) for debugging with <code>println!()</code> and/or <code>eprintln!()</code> macros. Later, when the feature is truly mature, it could be moved to a proper keyword in the Rust syntax</p>",
        "id": 160408409,
        "sender_full_name": "Naveed Pasha",
        "timestamp": 1552210159
    },
    {
        "content": "<p>thanks for the feedback, <span class=\"user-mention\" data-user-id=\"212597\">@Naveed Pasha</span> =)</p>",
        "id": 160510136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552332708
    },
    {
        "content": "<p>As an aside, I'd generally prefer to keep this Zulip focused on impl questions rather than policy, but I appreciated the careful way you wrote up your perspective (and where you are coming from)</p>",
        "id": 160510231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552332765
    }
]