[
    {
        "content": "<p>There are a couple standalone functions in <code>futures</code> that create streams from given elements: <code>stream::{empty, once, repeat, repeat_with}</code>. However, these can be replicated with <code>stream::from_iter</code>, e.g. <code>stream::once(1)</code> becomes <code>stream::from_iter(iter::once(1))</code>. Does it still make sense to add them?</p>",
        "id": 264233967,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1639004650
    },
    {
        "content": "<p>This would be nicer if there was a <code>into_stream</code> combinator on <code>Iterator</code>, or maybe <code>IntoIterator</code>: <code>iter::once(1).into_stream()</code></p>",
        "id": 264234100,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1639004760
    },
    {
        "content": "<p>If a blanket <code>impl IntoStream for I: Iterator</code> <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2996-async-stream.md#converting-an-iterator-to-a-stream\">won't work</a>, maybe that's the next best solution?</p>",
        "id": 264234870,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1639005233
    }
]