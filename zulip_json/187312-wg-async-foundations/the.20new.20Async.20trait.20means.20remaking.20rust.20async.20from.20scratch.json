[
    {
        "content": "<p>I would like to take a step back and look at the big picture of the proposed changes, since most discussions get bogged down with the details of  \"how to do X?\" instead of \"should we do X?\".</p>\n<p>To me, the big picture of the proposed changes look like throwing away the existing async and remaking it from scratch. Most notable is the new <code>Async</code> trait.  The new <code>Async</code> trait will inevitably result in breaking the entire ecosystem. Why?</p>\n<ol>\n<li><code>Async</code> is <em>more powerful</em>. It can do a few things <code>Future</code> can't regarding cancellation. This means at least some libraries will choose to return <code>Async</code>s instead of <code>Future</code>s.</li>\n<li><code>Async</code> is <em>infectious</em>. Everything that touches an <code>Async</code> needs to be <code>Async</code> itself. You can't poll an <code>Async</code> from a <code>Future</code>. Any <code>async fn</code> that awaits an <code>Async</code> will need to return an <code>Async</code> instead of a <code>Future</code>.</li>\n</ol>\n<p>Therefore <code>Async</code> will become the new standard and will *push Future out of relevance`. </p>\n<ul>\n<li>Everything will end up being an <code>Async</code></li>\n<li>All executors will switch to execute <code>Async</code>s because their users now have <code>Async</code>s.</li>\n<li>We may then pretend <code>Future</code> has never existed. It may even get deprecated. <code>Async</code> is Rust Async 2.0. <code>Future</code> is Rust Async 1.0</li>\n</ul>\n<p>Why is this bad?  This is not \"technical breakage\", since technically all old code still compiles and runs. It's what let's call \"cognitive breakage\".</p>\n<ul>\n<li>There's now the \"old deprecated way\" and the \"new way\". New devs will wtill have to learn that the old way exists and to avoid it. This makes learning async rust harder. They'll run into old blog posts, tutorials and crates using <code>Futures</code>.</li>\n<li>All existing code using <code>Future</code> will be worthless.</li>\n</ul>\n<p>The end result is a \"Rust async 2.0\" ecosystem completely incompatible with the current one. The current one goes to the trash.</p>",
        "id": 245520135,
        "sender_full_name": "Dario Nieuwenhuis",
        "timestamp": 1625876885
    }
]