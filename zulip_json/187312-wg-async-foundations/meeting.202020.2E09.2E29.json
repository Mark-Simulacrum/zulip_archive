[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting!</p>",
        "id": 211651303,
        "sender_full_name": "tmandry",
        "timestamp": 1601398874
    },
    {
        "content": "<p><a href=\"https://github.com/orgs/rust-lang/projects/2\">Project board</a></p>",
        "id": 211651500,
        "sender_full_name": "tmandry",
        "timestamp": 1601398937
    },
    {
        "content": "<p>Hey</p>",
        "id": 211651709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399042
    },
    {
        "content": "<p>..sorry, lost internet for a second there :|</p>",
        "id": 211651900,
        "sender_full_name": "tmandry",
        "timestamp": 1601399107
    },
    {
        "content": "<p>I don't see any updates</p>",
        "id": 211651975,
        "sender_full_name": "tmandry",
        "timestamp": 1601399135
    },
    {
        "content": "<p>let's do new issue triage</p>",
        "id": 211651980,
        "sender_full_name": "tmandry",
        "timestamp": 1601399140
    },
    {
        "content": "<p><a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">untriaged issues</a></p>",
        "id": 211652001,
        "sender_full_name": "tmandry",
        "timestamp": 1601399149
    },
    {
        "content": "<h2>False positive unused_lifetimes warning <a href=\"https://github.com/rust-lang/rust/issues/77217\">#77217</a></h2>",
        "id": 211652032,
        "sender_full_name": "tmandry",
        "timestamp": 1601399162
    },
    {
        "content": "<p>Hmm curious</p>",
        "id": 211652127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399184
    },
    {
        "content": "<p>it presumably has something to do with the desugaring</p>",
        "id": 211652278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399264
    },
    {
        "content": "<p>it's odd that deleting a function which doesn't mention <code>'x</code> makes the warning go away</p>",
        "id": 211652421,
        "sender_full_name": "tmandry",
        "timestamp": 1601399319
    },
    {
        "content": "<p>but okay, seems bad, I'm going to mark on deck</p>",
        "id": 211652538,
        "sender_full_name": "tmandry",
        "timestamp": 1601399388
    },
    {
        "content": "<p>moving on for now..</p>",
        "id": 211652654,
        "sender_full_name": "tmandry",
        "timestamp": 1601399427
    },
    {
        "content": "<h2>False positive: single_use_lifetimes <a href=\"https://github.com/rust-lang/rust/issues/77175\">#77175</a></h2>",
        "id": 211652661,
        "sender_full_name": "tmandry",
        "timestamp": 1601399429
    },
    {
        "content": "<p>well if this doesn't look similar</p>",
        "id": 211652719,
        "sender_full_name": "tmandry",
        "timestamp": 1601399461
    },
    {
        "content": "<p>swapping the order of the functions changes things.. that is.. really odd</p>",
        "id": 211652900,
        "sender_full_name": "tmandry",
        "timestamp": 1601399541
    },
    {
        "content": "<p>ok that <em>is</em> weird</p>",
        "id": 211652917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399552
    },
    {
        "content": "<p>I was going to say that both of them seem tied to the desugaring</p>",
        "id": 211652945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399566
    },
    {
        "content": "<p>and I realize I don't remember it :)</p>",
        "id": 211652954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399569
    },
    {
        "content": "<p>maybe we have some stateful HIR lowering code that's hanging on to state it shouldn't somehow..?</p>",
        "id": 211653019,
        "sender_full_name": "tmandry",
        "timestamp": 1601399600
    },
    {
        "content": "<p>I was thinking it must be that</p>",
        "id": 211653075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399635
    },
    {
        "content": "<p>the \"single use lifetime\" lint code is...probably pretty grungy</p>",
        "id": 211653127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399644
    },
    {
        "content": "<p>a lot of that code is</p>",
        "id": 211653133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399647
    },
    {
        "content": "<p>I'm looking to find the docs on the desugaring</p>",
        "id": 211653307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399745
    },
    {
        "content": "<p>I remember we had to do <em>something</em> to get elision working right</p>",
        "id": 211653501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399823
    },
    {
        "content": "<p>seems relevant to <a href=\"https://github.com/rust-lang/rust/issues/77217\">#77217</a>.. does the fn signature desugaring use lifetimes that are in scope but not already mentioned in the signature?</p>",
        "id": 211653556,
        "sender_full_name": "tmandry",
        "timestamp": 1601399847
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"c1\">// So for example in this snippet:</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```rust</span>\n<span class=\"w\">        </span><span class=\"c1\">// impl&lt;'a&gt; Foo&lt;'a&gt; {</span>\n<span class=\"w\">        </span><span class=\"c1\">//   async fn bar&lt;'b&gt;(&amp;self, x: &amp;'b Vec&lt;f64&gt;, y: &amp;str) -&gt; &amp;u32 {</span>\n<span class=\"w\">        </span><span class=\"c1\">//   //               ^ '0                       ^ '1     ^ '2</span>\n<span class=\"w\">        </span><span class=\"c1\">//   // elided lifetimes used below</span>\n<span class=\"w\">        </span><span class=\"c1\">//   }</span>\n<span class=\"w\">        </span><span class=\"c1\">// }</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// we would create an opaque type like:</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```</span>\n<span class=\"w\">        </span><span class=\"c1\">// type Bar&lt;'a, 'b, '0, '1, '2&gt; = impl Future&lt;Output = &amp;'2 u32&gt;;</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// and we would then desugar `bar` to the equivalent of:</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```rust</span>\n<span class=\"w\">        </span><span class=\"c1\">// impl&lt;'a&gt; Foo&lt;'a&gt; {</span>\n<span class=\"w\">        </span><span class=\"c1\">//   fn bar&lt;'b, '0, '1&gt;(&amp;'0 self, x: &amp;'b Vec&lt;f64&gt;, y: &amp;'1 str) -&gt; Bar&lt;'a, 'b, '0, '1, '_&gt;</span>\n<span class=\"w\">        </span><span class=\"c1\">// }</span>\n<span class=\"w\">        </span><span class=\"c1\">// ```</span>\n</code></pre></div>",
        "id": 211653566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601399852
    },
    {
        "content": "<p>looks like yes</p>",
        "id": 211653668,
        "sender_full_name": "tmandry",
        "timestamp": 1601399886
    },
    {
        "content": "<p>so I agree it's probably involved somehow</p>",
        "id": 211653904,
        "sender_full_name": "tmandry",
        "timestamp": 1601399984
    },
    {
        "content": "<p>one of us should leave a comment</p>",
        "id": 211653934,
        "sender_full_name": "tmandry",
        "timestamp": 1601399996
    },
    {
        "content": "<p>Otherwise, looks like that's the end of issue triage</p>",
        "id": 211654049,
        "sender_full_name": "tmandry",
        "timestamp": 1601400025
    },
    {
        "content": "<p>Does anyone have other updates before we wrap up?</p>",
        "id": 211654122,
        "sender_full_name": "tmandry",
        "timestamp": 1601400059
    },
    {
        "content": "<p>The <code>#[must_not_await]</code> RFC draft seems to be in the final stages. I'd love to get more comments on it if anyone has some</p>",
        "id": 211654173,
        "sender_full_name": "Bhargav Voleti",
        "timestamp": 1601400077
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/wg-async-foundations/pull/16\">Here's the PR</a> in question.</p>",
        "id": 211654254,
        "sender_full_name": "Bhargav Voleti",
        "timestamp": 1601400113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> I will leave a comment</p>",
        "id": 211654434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601400180
    },
    {
        "content": "<p>pointing at the code at least</p>",
        "id": 211654440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601400182
    },
    {
        "content": "<p>Okay great, looks like we can wrap up early then</p>",
        "id": 211654573,
        "sender_full_name": "tmandry",
        "timestamp": 1601400234
    },
    {
        "content": "<p>Thanks everyone for coming, as always <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 211654657,
        "sender_full_name": "tmandry",
        "timestamp": 1601400249
    }
]