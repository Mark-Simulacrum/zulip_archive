[
    {
        "content": "<p>No idea if there is already an issue for this. I just got to the place where the only compiler output is:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --&gt; my-lib/src/lib.rs:127:10\n    |\n127 |     ) -&gt; Result&lt;T,  SomeError&gt;\n    |\nnote: hidden type `impl Future` captures lifetime smaller than the function body\n   --&gt; my-lib/src/lib.rs:127:10\n    |\n127 |     ) -&gt; Result&lt;T, SomeError&gt;\n</code></pre></div>\n<p>I have honestly no idea what is wrong and how to fix it. What I know is that I added some error variants which store <code>&amp;'static str</code> and which string to store is passed as an argument to the async function which generates that error. But a static lifetime should never be too short?</p>",
        "id": 230639796,
        "sender_full_name": "Matthias247",
        "timestamp": 1615958071
    },
    {
        "content": "<p>The function has the signature:</p>\n<div class=\"codehilite\"><pre><span></span><code>async fn perform_transaction&lt;F, T&gt;(\n        &amp;mut self,\n        error_name: &amp;&#39;static str,\n        payload: &amp;[u8],\n        deserialize: F,\n    ) -&gt; Result&lt;T, SomeError&gt;\n    where\n        F: FnOnce(&amp;[u8]) -&gt; Result&lt;T, SomeError&gt;,\n        T: &#39;static\n    {\n    }\n</code></pre></div>",
        "id": 230639873,
        "sender_full_name": "Matthias247",
        "timestamp": 1615958141
    },
    {
        "content": "<p>That's pretty weird. It compiles if you change <code>error_name</code> to take <code>&amp;str</code> rather than <code>&amp;'static str</code></p>",
        "id": 230650228,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1615967595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204219\">@Matthias247</span> do you have a standalone version of it?</p>",
        "id": 230690988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615988299
    },
    {
        "content": "<p>The error shows up if you just define a dummy struct and put it in an impl block.</p>",
        "id": 230692271,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1615988820
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=04402e008eb16d36dda83a29b474444b\">playground</a></p>",
        "id": 230694279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615989581
    },
    {
        "content": "<p>ok, there are two fixes:</p>\n<ul>\n<li>use <code>'static</code> for both arguments (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=44e5103a7954551e7f42c60d623f1a66\">playground</a>)</li>\n<li>use no <code>'static</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b10969dc3b1b198b2ffc0347f67f360f\">playground</a>)</li>\n</ul>",
        "id": 230694544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615989655
    },
    {
        "content": "<p>presumably this has <em>something</em> to do with the region inference rules, I'm supposed to be reviewing those again soon</p>",
        "id": 230694614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615989675
    },
    {
        "content": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/63033\">#63033</a>.</p>",
        "id": 230713823,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615996335
    }
]