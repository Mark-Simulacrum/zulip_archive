[
    {
        "content": "<p>I opened a PR adding <code>Poll::ready</code>, and reverting the planned stabilization of <code>ready!</code>: <a href=\"https://github.com/rust-lang/rust/pull/89651\">https://github.com/rust-lang/rust/pull/89651</a></p>",
        "id": 256658735,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1633645054
    },
    {
        "content": "<p>Approved <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 257109053,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1633981796
    },
    {
        "content": "<p>Kind of off-topic but this makes me realize that <code>Try</code> may be bundling too many semantics: that PR has had to write code to handle re-wrapping inside <code>Ready</code>s, as if we would be featuring <code>Ready</code>-yielding <code>try</code> blocks or functions, which, even if it could be envisioned, wasn't really the scope of the PR: the PR wanted to feature <code>Poll</code>-yielding <code>try</code> blocks or functions, within which <code>.ready()?</code> would Just Work. Thus, we could imagine a <code>Branch</code> super-trait of <code>Try</code> which would just offer a method equivalent to <code>branch</code>, and then have the <code>FromResidual&lt;Ready&lt;!&gt;&gt; for Poll&lt;T&gt;</code> (cc <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span>, WDYT?)</p>",
        "id": 257187104,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1634038264
    },
    {
        "content": "<p>Sorry, I don't think I'm really following the question here.</p>\n<p>It sounds like this is partially about not thinking that <code>from_output</code> makes sense for <code>Poll</code>?</p>",
        "id": 257412401,
        "sender_full_name": "scottmcm",
        "timestamp": 1634148976
    },
    {
        "content": "<p>TBH I've never really understood the <code>?</code> impls on <code>Poll</code>, just made sure they didn't break :P</p>",
        "id": 257412531,
        "sender_full_name": "scottmcm",
        "timestamp": 1634149044
    }
]