[
    {
        "content": "<p>In a recent github comment, Niko wrote \"I am thinking a lot about whether async Rust should be \"the default\" or not when it comes to I/O\"</p>\n<p>I'm curious what types of I/O might be default async (if that ever becomes a thing).   I/O to stdin/stdout?   File I/O?    Network I/O?</p>",
        "id": 231040528,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1616167429
    },
    {
        "content": "<p>i think most people would think that async for writing to stdout is probably overkill.  but could we envision a future where async in rust is Just So Easy that doing async for stdout writes by default becomes conceivable?</p>",
        "id": 231040727,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1616167502
    },
    {
        "content": "<p>I suppose it would be most IO that has a bit of latency associated with it, so that would be file I/O and Network I/O, stdin/stdout is something that's handled entirely on the cpu and memory, so there's not much need for async.</p>",
        "id": 231040851,
        "sender_full_name": "Frederik Baetens",
        "timestamp": 1616167554
    },
    {
        "content": "<p>writing to stdout can, at least in theory, block for extended periods of time</p>",
        "id": 231041168,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1616167696
    },
    {
        "content": "<p>(i sometimes hit the XOFF command in tmux by accident, and then wonder why nothing seems to be working :))</p>",
        "id": 231041307,
        "sender_full_name": "Andrew Chin (eminence)",
        "timestamp": 1616167757
    },
    {
        "content": "<p>I'm imagining a world where yes, the default is something like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 231056055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616173353
    },
    {
        "content": "<p>I'm not sure that world makes any sense</p>",
        "id": 231056063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616173356
    },
    {
        "content": "<p>that's certainly one extreme though :)</p>",
        "id": 231056073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616173362
    },
    {
        "content": "<p>There's also the question of whether the sync std is a wrapper around the async, to avoid duplication.</p>",
        "id": 231315350,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616421987
    },
    {
        "content": "<p>If we could do that without overhead.</p>",
        "id": 231315396,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616422006
    },
    {
        "content": "<p>Ideally, with some approaches to async, that would actually be <em>faster</em> than a purely sync approach.</p>",
        "id": 231315646,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616422099
    }
]