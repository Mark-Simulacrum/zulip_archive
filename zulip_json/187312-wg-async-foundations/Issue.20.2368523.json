[
    {
        "content": "<p>Hello, I have been trying to make the changes to <code>hir::IsAsync</code> but I get a test failure for the \"rustdoc/inline_cross/impl_trait.rs\" test.</p>\n<p>I have made the type be:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">IsAsync</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Yes</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">span</span>: <span class=\"nc\">Span</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">No</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>and the output from the test is as follows:</p>\n<div class=\"codehilite\"><pre><span></span>---- [rustdoc] rustdoc/inline_cross/impl_trait.rs stdout ----\n\nerror: rustdoc failed!\nstatus: exit code: 1\ncommand: &quot;/Users/sebastianmalton/repos/rust/build/x86_64-apple-darwin/stage2/bin/rustdoc&quot; &quot;-L&quot; &quot;/Users/sebastianmalton/repos/rust/build/x86_64-apple-darwin/stage2/lib/rustlib/x86_64-apple-darwin/lib&quot; &quot;-L&quot; &quot;/Users/sebastianmalton/repos/rust/build/x86_64-apple-darwin/test/rustdoc/inline_cross/impl_trait/auxiliary&quot; &quot;-o&quot; &quot;/Users/sebastianmalton/repos/rust/build/x86_64-apple-darwin/test/rustdoc/inline_cross/impl_trait&quot; &quot;/Users/sebastianmalton/repos/rust/src/test/rustdoc/inline_cross/impl_trait.rs&quot; &quot;--edition=2018&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nerror: internal compiler error: src/librustc_metadata/rmeta/decoder.rs:398: Cannot decode Span without Session.\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:880:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: aborting due to previous error\n\n\n------------------------------------------\n</pre></div>",
        "id": 193459190,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586443223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span>  might help you perhaps: <a href=\"https://github.com/rust-lang/rust/pull/66364#discussion_r345741153\" title=\"https://github.com/rust-lang/rust/pull/66364#discussion_r345741153\">https://github.com/rust-lang/rust/pull/66364#discussion_r345741153</a></p>",
        "id": 193459450,
        "sender_full_name": "centril",
        "timestamp": 1586443332
    },
    {
        "content": "<p>Thanks I'll look into that</p>",
        "id": 193460016,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586443596
    },
    {
        "content": "<p>I have what was mentioned in that comment but to no avail. My code is here: <a href=\"https://github.com/Nokel81/rust/tree/fix-async-main-error\" title=\"https://github.com/Nokel81/rust/tree/fix-async-main-error\">https://github.com/Nokel81/rust/tree/fix-async-main-error</a> if you have time to help, it would be greatly appreciated. I don't understand how adding the span to <code>hir::IsAsync</code> would cause the <code>Session</code> to be needed in some other place besides when decoding async.</p>",
        "id": 193510430,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586467065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span> hmm I can try to clone your branch locally</p>",
        "id": 193928165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586884040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Issue.20.2368523/near/193928165\" title=\"#narrow/stream/187312-wg-async-foundations/topic/Issue.20.2368523/near/193928165\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"247082\">Sebastian Malton</span> hmm I can try to clone your branch locally</p>\n</blockquote>\n<p>Thank you very much. I really don't know enough about the compiler to progress by myself.</p>",
        "id": 193929635,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586884685
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span> when did you get that error?</p>",
        "id": 193932767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586886149
    },
    {
        "content": "<p>was it bootstrapping, or running tests?</p>",
        "id": 193932803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586886163
    },
    {
        "content": "<p>I didn't get it bootstrapping, at least</p>",
        "id": 193932840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586886180
    },
    {
        "content": "<p>ok, I'm seeing it when running some tests</p>",
        "id": 193934946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> since apparently you helped <span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> earlier, do you have some suggestions regarding the problem that <span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span> is seeing... they added some <code>Span</code> info into a HIR data structure that gets serialized, but we're getting panics in metadata deserialization.</p>",
        "id": 193936135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887713
    },
    {
        "content": "<p>I figure I should ping you before I dig too much more deeply to understand the problem</p>",
        "id": 193936144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887721
    },
    {
        "content": "<p>what do you mean, HIR is never serialized</p>",
        "id": 193936192,
        "sender_full_name": "eddyb",
        "timestamp": 1586887745
    },
    {
        "content": "<p>they tried <a href=\"https://github.com/Nokel81/rust/commit/56f51e622d864fe078cfec4514cea6624cbd00cd\" title=\"https://github.com/Nokel81/rust/commit/56f51e622d864fe078cfec4514cea6624cbd00cd\">this code here</a>, that creates a tuple with session</p>",
        "id": 193936195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887751
    },
    {
        "content": "<p>well, it's the <code>hir::IsAsync</code> enum</p>",
        "id": 193936206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887761
    },
    {
        "content": "<p>ah we tend to avoid stuff like that</p>",
        "id": 193936234,
        "sender_full_name": "eddyb",
        "timestamp": 1586887781
    },
    {
        "content": "<p>but it shouldn't be a problem anyway</p>",
        "id": 193936251,
        "sender_full_name": "eddyb",
        "timestamp": 1586887793
    },
    {
        "content": "<p>pre-existing, I suppose</p>",
        "id": 193936340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887825
    },
    {
        "content": "<p>you have stuff like</p>",
        "id": 193936343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887827
    },
    {
        "content": "<p>hmm why are there reformat changes in that file, wrong <code>rustfmt</code> version?</p>",
        "id": 193936351,
        "sender_full_name": "eddyb",
        "timestamp": 1586887832
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[derive(RustcEncodable, RustcDecodable)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">FnData</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">asyncness</span>: <span class=\"nc\">hir</span>::<span class=\"n\">IsAsync</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">constness</span>: <span class=\"nc\">hir</span>::<span class=\"n\">Constness</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">param_names</span>: <span class=\"nc\">Lazy</span><span class=\"o\">&lt;</span><span class=\"p\">[</span><span class=\"n\">ast</span>::<span class=\"n\">Name</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 193936354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887836
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Issue.20.2368523/near/193936351\" title=\"#narrow/stream/187312-wg-async-foundations/topic/Issue.20.2368523/near/193936351\">said</a>:</p>\n<blockquote>\n<p>hmm why are there reformat changes in that file, wrong <code>rustfmt</code> version?</p>\n</blockquote>\n<p>yes</p>",
        "id": 193936359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887838
    },
    {
        "content": "<p>(sorry, they're distracting)</p>",
        "id": 193936363,
        "sender_full_name": "eddyb",
        "timestamp": 1586887842
    },
    {
        "content": "<p>you can ignore those</p>",
        "id": 193936364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887842
    },
    {
        "content": "<p>yeah,I know</p>",
        "id": 193936368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887846
    },
    {
        "content": "<p>I have that problem sometimes too</p>",
        "id": 193936378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887851
    },
    {
        "content": "<p>is there anything <em>other</em> than a <code>Span</code> in <code>hir::IsAsync</code>?</p>",
        "id": 193936404,
        "sender_full_name": "eddyb",
        "timestamp": 1586887870
    },
    {
        "content": "<p>I didn't quite figure out how this <code>(self, sess)</code> thing works</p>",
        "id": 193936412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887874
    },
    {
        "content": "<p>it implements a trait at the top of the file</p>",
        "id": 193936434,
        "sender_full_name": "eddyb",
        "timestamp": 1586887891
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">IsAsync</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Async</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">span</span>: <span class=\"nc\">Span</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">NotAsync</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 193936443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887896
    },
    {
        "content": "<p>that should work</p>",
        "id": 193936453,
        "sender_full_name": "eddyb",
        "timestamp": 1586887901
    },
    {
        "content": "<p>the tuple does?</p>",
        "id": 193936454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887902
    },
    {
        "content": "<p>yes</p>",
        "id": 193936462,
        "sender_full_name": "eddyb",
        "timestamp": 1586887906
    },
    {
        "content": "<p>I figured it must be <em>somewhere</em></p>",
        "id": 193936465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887907
    },
    {
        "content": "<p>it's all self-contained in that file</p>",
        "id": 193936474,
        "sender_full_name": "eddyb",
        "timestamp": 1586887914
    },
    {
        "content": "<p>ok, I see it now</p>",
        "id": 193936486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887920
    },
    {
        "content": "<p>same for the encoding side</p>",
        "id": 193936487,
        "sender_full_name": "eddyb",
        "timestamp": 1586887921
    },
    {
        "content": "<p>oh I know</p>",
        "id": 193936541,
        "sender_full_name": "eddyb",
        "timestamp": 1586887936
    },
    {
        "content": "<p>yes, I'm starting to see how it's put together now</p>",
        "id": 193936555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887942
    },
    {
        "content": "<p>ok</p>",
        "id": 193936558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887942
    },
    {
        "content": "<p>it's not panicking in <code>asyncness</code></p>",
        "id": 193936562,
        "sender_full_name": "eddyb",
        "timestamp": 1586887946
    },
    {
        "content": "<p>or at least, this is the simplest explanation</p>",
        "id": 193936577,
        "sender_full_name": "eddyb",
        "timestamp": 1586887953
    },
    {
        "content": "<p>seems plausible</p>",
        "id": 193936598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887968
    },
    {
        "content": "<p>I'll dig a bit deeper</p>",
        "id": 193936606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887971
    },
    {
        "content": "<p>there are probably a dozen places where <code>FnData</code> is decoded</p>",
        "id": 193936608,
        "sender_full_name": "eddyb",
        "timestamp": 1586887972
    },
    {
        "content": "<p>ah ok ok</p>",
        "id": 193936613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887976
    },
    {
        "content": "<p><em>all</em> of them need the session now</p>",
        "id": 193936618,
        "sender_full_name": "eddyb",
        "timestamp": 1586887979
    },
    {
        "content": "<p>yes, duh, that makes sense</p>",
        "id": 193936634,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887987
    },
    {
        "content": "<p>unless you wrap <code>IsAsync</code> in <code>Lazy</code> :P</p>",
        "id": 193936638,
        "sender_full_name": "eddyb",
        "timestamp": 1586887989
    },
    {
        "content": "<p>I guess had I even bothered to run with <code>RUST_BACKTRACE=1</code> I'd have seen that :)</p>",
        "id": 193936691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888015
    },
    {
        "content": "<p>/me truly lazy</p>",
        "id": 193936694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888017
    },
    {
        "content": "<p>but yeah indeed</p>\n<div class=\"codehilite\"><pre><span></span>  16: &lt;rustc_metadata::rmeta::FnData as serialize::serialize::Decodable&gt;::decode\n  17: rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::is_const_fn_raw\n  18: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::is_const_fn_raw\n</pre></div>",
        "id": 193936735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888041
    },
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span>, did you follow that? You need to add <code>(self, span)</code> to the various places that <code>FnData</code> is decoded</p>",
        "id": 193936844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888072
    },
    {
        "content": "<p><code>(self, sess)</code> :P</p>",
        "id": 193936875,
        "sender_full_name": "eddyb",
        "timestamp": 1586888091
    },
    {
        "content": "<p>er right</p>",
        "id": 193936896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888103
    },
    {
        "content": "<p>or we can use this moment to start doing the right thing</p>",
        "id": 193936912,
        "sender_full_name": "eddyb",
        "timestamp": 1586888117
    },
    {
        "content": "<p>which is to add another table instead of changing <code>FnData</code> :P</p>",
        "id": 193936926,
        "sender_full_name": "eddyb",
        "timestamp": 1586888126
    },
    {
        "content": "<p>but it might be expensive, size-wise</p>",
        "id": 193936945,
        "sender_full_name": "eddyb",
        "timestamp": 1586888141
    },
    {
        "content": "<p>add another table?</p>",
        "id": 193936976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888155
    },
    {
        "content": "<p>since we don't have a sparse format yet (mw had some ideas)</p>",
        "id": 193936980,
        "sender_full_name": "eddyb",
        "timestamp": 1586888159
    },
    {
        "content": "<p>into the metadata, you mean?</p>",
        "id": 193936983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888161
    },
    {
        "content": "<p>/me a bit confused</p>",
        "id": 193937031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586888169
    },
    {
        "content": "<p>this <code>FnData</code> is in one of the tables</p>",
        "id": 193937034,
        "sender_full_name": "eddyb",
        "timestamp": 1586888171
    },
    {
        "content": "<p>'sec, grabbing the source</p>",
        "id": 193937051,
        "sender_full_name": "eddyb",
        "timestamp": 1586888185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/rmeta/mod.rs#L254-L280\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/rmeta/mod.rs#L254-L280\">https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/rmeta/mod.rs#L254-L280</a></p>",
        "id": 193937104,
        "sender_full_name": "eddyb",
        "timestamp": 1586888211
    },
    {
        "content": "<p><code>FnData</code> is nested in variants of <code>EntryKind</code>, in the first table</p>",
        "id": 193937138,
        "sender_full_name": "eddyb",
        "timestamp": 1586888239
    },
    {
        "content": "<p>it's easy to add another table, just throw it in there. it's free if no defs in the crate insert in it, but it might be extra space wasting for some crates, idk</p>",
        "id": 193937376,
        "sender_full_name": "eddyb",
        "timestamp": 1586888356
    },
    {
        "content": "<p>anyway if you just want to land something, throwing it into <code>FnData</code> is alright</p>",
        "id": 193937407,
        "sender_full_name": "eddyb",
        "timestamp": 1586888370
    },
    {
        "content": "<p>Yes I follow, thank you for all the help. Both of you</p>",
        "id": 193941224,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586890245
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> Would I be able to get a couple of file paths for where I should start looking for the type checking of <code>fn main</code>?</p>",
        "id": 194052007,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586966037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span> presumably somewhere near the top of <code>rustc_typeck</code></p>",
        "id": 194056672,
        "sender_full_name": "eddyb",
        "timestamp": 1586968035
    },
    {
        "content": "<p>assuming you mean how it allows <code>-&gt; SomeTypeThatImplementsATrait</code></p>",
        "id": 194056700,
        "sender_full_name": "eddyb",
        "timestamp": 1586968049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span> <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/lib.rs#L155\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/lib.rs#L155\">https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/lib.rs#L155</a></p>",
        "id": 194056819,
        "sender_full_name": "eddyb",
        "timestamp": 1586968096
    },
    {
        "content": "<p>Okay thanks, I'll start there. Yeah, I have found the definition of <code>Termination</code> but I was having trouble finding where the code that checked that the return type of main implemented <code>Termination</code></p>",
        "id": 194056853,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586968112
    },
    {
        "content": "<p>I guess a simple question. Should we suppress the error would not implementing <code>Termination</code> as well as adding an error about not allowing to be <code>async</code> or just have both?</p>",
        "id": 194060980,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586969988
    },
    {
        "content": "<p>Also, should the error also be emitted for <code>Start</code> functions, and not just for main?</p>",
        "id": 194062184,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586970560
    },
    {
        "content": "<p>I have put up a PR <a href=\"https://github.com/rust-lang/rust/pull/71174\" title=\"https://github.com/rust-lang/rust/pull/71174\">https://github.com/rust-lang/rust/pull/71174</a></p>",
        "id": 194205686,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1586974297
    }
]