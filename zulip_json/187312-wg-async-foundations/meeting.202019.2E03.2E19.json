[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-await</span> -- meeting soon =) </p>\n<p>I'm running a bit behind today. Feel free to start without me, though, if somebody else wants to take the reins.</p>",
        "id": 161169649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015237
    },
    {
        "content": "<p>From last meeting:</p>\n<blockquote>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"120134\">Giles Cope</span> is on <a href=\"https://github.com/rust-lang/rust/issues/51751\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51751\">#51751</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> is on <a href=\"https://github.com/rust-lang/rust/issues/55809\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55809\">#55809</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> is continuing <a href=\"https://github.com/rust-lang/rust/issues/52924\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52924\">#52924</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"127859\">Taylor Cramer</span> is continuing on a fix for all of the lifetime-in-async-fn-declaration issues</li>\n<li><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> is having a relaxing week</li>\n</ul>\n</blockquote>",
        "id": 161169678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015274
    },
    {
        "content": "<p>To slightly update the above, <a href=\"https://github.com/rust-lang/rust/issues/55809\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55809\">#55809</a> ended up being a no-op as it was already fixed, but then some issues cropped up with <a href=\"https://github.com/rust-lang/rust/issues/54716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54716\">#54716</a> and I'm still working on that.</p>",
        "id": 161169806,
        "sender_full_name": "davidtwco",
        "timestamp": 1553015354
    },
    {
        "content": "<p>OK, I'm here, sorry.</p>",
        "id": 161170600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015810
    },
    {
        "content": "<p>np!</p>",
        "id": 161170608,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015816
    },
    {
        "content": "<p>I don't think I have anything to update here other than that I've opened <a href=\"https://github.com/rust-lang/rust/pull/59286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59286\">https://github.com/rust-lang/rust/pull/59286</a></p>",
        "id": 161170651,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015842
    },
    {
        "content": "<p>Let's go in rev order I guess =)</p>",
        "id": 161170707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015875
    },
    {
        "content": "<p>I guess we could chat about how we want to go about landing that (i.e. do we want to go ahead and land it with more tests but without yet fixing the existential bug, given that it fixes a number of the other lifetime-related errors?)</p>",
        "id": 161170710,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015878
    },
    {
        "content": "<p>You saw my comments in <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/Lifetime.20Fixes\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/Lifetime.20Fixes\">this topic</a>?</p>",
        "id": 161170766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015888
    },
    {
        "content": "<p>(Regarding extending inference)</p>",
        "id": 161170790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015896
    },
    {
        "content": "<p>I did, yeah</p>",
        "id": 161170793,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015899
    },
    {
        "content": "<blockquote>\n<p>I guess we could chat about how we want to go about landing that (i.e. do we want to go ahead and land it with more tests but without yet fixing the existential bug, given that it fixes a number of the other lifetime-related errors?)</p>\n</blockquote>\n<p>I'd be inclined to do so, yes</p>",
        "id": 161170814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015912
    },
    {
        "content": "<p>I've not read it in detail, but it seems like progress, and it feels better  to isolate out the lifetime inference changes needed to fix the full bug</p>",
        "id": 161170855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015935
    },
    {
        "content": "<p>k-- the one sad thing about that is that it'd be a regression in the error message you get when  you have multiple argument-position lifetimes</p>",
        "id": 161170864,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015939
    },
    {
        "content": "<p>well, maybe we can improve the error message?</p>",
        "id": 161170895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015952
    },
    {
        "content": "<p>because today it explicitly tells you you can't do that in <code>async fn</code>, but after this change it's \"existential type can't do the thing\"</p>",
        "id": 161170925,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015969
    },
    {
        "content": "<p>yeah, that's not great. Maybe we can fix that.</p>",
        "id": 161171001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553015998
    },
    {
        "content": "<p>perhaps we could amend that error message to mention <code>async fn</code> or tag the existential type as having come from <code>async fn</code> to provide an appropriate message</p>",
        "id": 161171004,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553015998
    },
    {
        "content": "<p>right</p>",
        "id": 161171057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016004
    },
    {
        "content": "<p>let's discuss it I guess in the topic, but that'd be my inclination</p>",
        "id": 161171093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016018
    },
    {
        "content": "<p>sg</p>",
        "id": 161171096,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016023
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span>  is continuing <a href=\"https://github.com/rust-lang/rust/issues/52924\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52924\">#52924</a></p>\n</blockquote>",
        "id": 161171105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016031
    },
    {
        "content": "<p>Not sure if <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> is here, I didn't see much activity here though?</p>",
        "id": 161171116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016040
    },
    {
        "content": "<p>No, got caught up in other work, but plan to spend significant time on that this week</p>",
        "id": 161171179,
        "sender_full_name": "tmandry",
        "timestamp": 1553016081
    },
    {
        "content": "<p>cool</p>",
        "id": 161171209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016111
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> is on <a href=\"https://github.com/rust-lang/rust/issues/55809\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55809\">#55809</a></p>\n</blockquote>\n<p>So <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> probably need reviewing here -- they also uncovered a tricky issue that seems unrelated to async fn, where the drop order is kind of inconsistent between patterns in function arguments and patterns in let bindings.</p>",
        "id": 161171273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016137
    },
    {
        "content": "<p>There...may not be a ton we can do about this.</p>",
        "id": 161171276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016141
    },
    {
        "content": "<p>That feels like a conversation we should surface somewhere else but I'm not really sure exactly <em>where</em> to surface it to</p>",
        "id": 161171307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016164
    },
    {
        "content": "<p>Still, I think that the PR is probably the right approach, if I were going to name the bug, i'd probably put it on the way the drop order from fn patterns</p>",
        "id": 161171344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016184
    },
    {
        "content": "<p>Well, <a href=\"https://github.com/rust-lang/rust/issues/55809\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55809\">#55809</a> doesn't need reviewing, but my fix for <a href=\"https://github.com/rust-lang/rust/issues/54716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54716\">#54716</a> does, but yeah.</p>",
        "id": 161171348,
        "sender_full_name": "davidtwco",
        "timestamp": 1553016185
    },
    {
        "content": "<p>er, sorry, right</p>",
        "id": 161171355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> you're assigned to <a href=\"https://github.com/rust-lang/rust/pull/59135\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59135\">the PR</a> btw :) I did sort of start reading it through, but my reviewing bandwidth is pretty limited right now.</p>",
        "id": 161171395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016217
    },
    {
        "content": "<p>Yeah, I'm struggling to debug a type inference issue that happens with the let bindings that the PR creates, but that previously was working, at which point it introduced a few new errors to a test which I wasn't sure if they should be expected. Otherwise it worked at that point.</p>",
        "id": 161171517,
        "sender_full_name": "davidtwco",
        "timestamp": 1553016277
    },
    {
        "content": "<p>I wrote <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order/near/160792119\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order/near/160792119\">a big summary comment</a> to try make it easier to get up to speed with what it is doing and what it is missing.</p>",
        "id": 161171550,
        "sender_full_name": "davidtwco",
        "timestamp": 1553016302
    },
    {
        "content": "<p>Oh, I see :)</p>",
        "id": 161171821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016459
    },
    {
        "content": "<p>I didn't realize how much more was in that comment</p>",
        "id": 161171827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016463
    },
    {
        "content": "<p>ok, well, next item...? </p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120134\">Giles Cope</span>  is on <a href=\"https://github.com/rust-lang/rust/issues/51751\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51751\">#51751</a></p>\n</blockquote>\n<p>here there was some discussion, the question is whether it makes sense to do anything here before we add the built-in syntax</p>",
        "id": 161171928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016510
    },
    {
        "content": "<p>I guess the reasoning, <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>, is that even if we lower <code>await foo</code> (or <code>foo.await</code>, etc) to some kind of internal calls, we can give those special spans during HIR lowering, which is relatively easy?</p>",
        "id": 161172002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016557
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> suggested of some sort of internal intrinsic <em>could</em> make sense, not really sure. Maybe not worth it.</p>",
        "id": 161172054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016591
    },
    {
        "content": "<p>Seems like we have one new issue filed:</p>\n<blockquote>\n<p>Inconsistency in Send/Sync requirements for async/await <a href=\"https://github.com/rust-lang/rust/issues/59245\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59245\">#59245</a></p>\n</blockquote>",
        "id": 161172176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016635
    },
    {
        "content": "<p>Yeah, that's another \"some temporaries show up in generators that maybe shouldn't\"</p>",
        "id": 161172222,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016659
    },
    {
        "content": "<p>yeah so really that's the \"big issue\" that's not being worked on</p>",
        "id": 161172273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016693
    },
    {
        "content": "<p>my feeling there is that we should consider if there is some sort of way to make the current \"hybrid check\" a bit more precise</p>",
        "id": 161172302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016713
    },
    {
        "content": "<p>even if we eventually remove it</p>",
        "id": 161172321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016722
    },
    {
        "content": "<p>but only if it's easy</p>",
        "id": 161172323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016722
    },
    {
        "content": "<p>Yeah, it also surfaces in another problem I've seen a few people hit which is that using recursive async fn with <code>FutureObj</code> for indirection is really fragile</p>",
        "id": 161172367,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016730
    },
    {
        "content": "<p>because sometimes it'll decide to make a temporary for the future and fail due to an infinitely-sized type</p>",
        "id": 161172409,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016756
    },
    {
        "content": "<p>not sure how urgently to weigh that, probably we should defer it a bit until some of those lifetime work etc is done, but it seems like something we should try to do <em>something</em> about -- I could imagine waiting until april and then scheduling some time to talk about it</p>",
        "id": 161172423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016768
    },
    {
        "content": "<blockquote>\n<p>because sometimes it'll decide to make a temporary for the future and fail due to an infinitely-sized type</p>\n</blockquote>\n<p>huh</p>",
        "id": 161172456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016786
    },
    {
        "content": "<p>I think my biggest concern about it is that this exposes a lot of details of MIR and temporaries that maybe aren't stable</p>",
        "id": 161172481,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016806
    },
    {
        "content": "<p>what does?</p>",
        "id": 161172493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016816
    },
    {
        "content": "<p>basing the results on MIR?</p>",
        "id": 161172502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016823
    },
    {
        "content": "<p>generators / async/await!</p>",
        "id": 161172509,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016826
    },
    {
        "content": "<p>And in particular Send/Sync-ness</p>",
        "id": 161172529,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016837
    },
    {
        "content": "<p>well, presently the <code>Send</code> and <code>Sync</code> considerations etc are not based on MIR</p>",
        "id": 161172531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016841
    },
    {
        "content": "<p>arguably this is a good thing, for the reasons you pointed out</p>",
        "id": 161172595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553016854
    },
    {
        "content": "<p>Ah, well, whatever bit they're evaluated based on seems to be using a heuristic that isn't quite right</p>",
        "id": 161172624,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016875
    },
    {
        "content": "<p>and I'm concerned that changing that heuristic might be a backcompat-hazard</p>",
        "id": 161172657,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016897
    },
    {
        "content": "<p>unless we have strong reason to believe that the current system's check is clearly more conservative than any future check me might want to adopt</p>",
        "id": 161172774,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1553016962
    },
    {
        "content": "<p>I see. I think it is, but yes, I agree -- and this is arguably a reason not to jump to MIR</p>",
        "id": 161172884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017016
    },
    {
        "content": "<p>we encountered some similar questions in and around NLL</p>",
        "id": 161172924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017032
    },
    {
        "content": "<p>but ok, so let's not try to assign anyone</p>",
        "id": 161172940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017038
    },
    {
        "content": "<p>(yet?)</p>",
        "id": 161172949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017043
    },
    {
        "content": "<p>seems like this week we'll focus on trying to land the PRs that are ongoing, and maybe figure out the inference thing?</p>",
        "id": 161172967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017059
    },
    {
        "content": "<p>e.g.,</p>\n<ul>\n<li><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> and <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> to work on landing <a href=\"https://github.com/rust-lang/rust/issues/59135\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59135\">#59135</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> to continue with <a href=\"https://github.com/rust-lang/rust/issues/52924\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52924\">#52924</a></li>\n<li><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> to try to improve error messages and land <a href=\"https://github.com/rust-lang/rust/issues/59286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59286\">#59286</a></li>\n<li>maybe <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> plus <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> to schedule some time to talk out region inference?</li>\n</ul>",
        "id": 161173055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017114
    },
    {
        "content": "<p>(if so, <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>, let's do that in a sec)</p>",
        "id": 161173079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017132
    },
    {
        "content": "<p>thanks y'all</p>",
        "id": 161173159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553017195
    },
    {
        "content": "<p>Sorry - didn't spot we'd started! Just rounding off that previous PR and having a little investigation on the assigned one.</p>",
        "id": 161175989,
        "sender_full_name": "Giles Cope",
        "timestamp": 1553019114
    }
]