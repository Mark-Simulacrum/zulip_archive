[
    {
        "content": "<p>In case others have encountered this issue: I often try to make links to topics, potentially in other streams. E.g. I might want to reference a conversation in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/felix.20chattering\">#t-compiler &gt; felix chattering</a> . However, in my experience, what often happens is that I start typing <code>#t-compil</code>, the popup comes up with the various streams and a message at the bottom that says “Hit <code>&gt;</code> for topic list.” So I’ll arrow key down to <code>#t-compiler</code>, hit <code>&gt;</code>, and at that point, for some reason, Zulip will pick a <em>different</em> stream, a different one on the list that isn’t <code>#t-compiler</code> but is instead <code>#t-compiler/meetings</code> or similar, and give me a list of topics from within that undesired stream.</p>",
        "id": 242910386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623862854
    },
    {
        "content": "<p>I <em>think</em> what causes the misselection of the stream is that there is a hidden action that I overlook: Typing <code>&gt;</code> in practice (at least on my keyboard) requires first holding down Shift and then striking the <code>.</code> key</p>",
        "id": 242910577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623862926
    },
    {
        "content": "<p>But, if you separate those two acts, you see something very interesting: Hitting Shift itself sometimes (always?) causes the selected stream to change.</p>",
        "id": 242910651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623862957
    },
    {
        "content": "<p>(well, now I cannot replicate the behavior I was observing before. Holding down shift isn’t causing the selection to change. But <em>striking</em> shift, or holding it down and then releasing it, <em>is</em> causing the selection to change: It resets the selected stream to the top of the list…)</p>",
        "id": 242910953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623863077
    },
    {
        "content": "<p>In any case, the most reliable thing I seem to find is to do this: start typing the stream name, via <code>#t-whatev</code>, and then when you see that the list is narrowed enough that you see the stream you want, at <em>that</em> point, hold down shift. Then arrow down to the stream while shift is held, and only once the stream is selected, hit <code>&gt;</code> (i.e. <code>.</code> with shift held down).</p>",
        "id": 242911136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623863162
    },
    {
        "content": "<p>what I've found works best is:</p>",
        "id": 242928383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623870787
    },
    {
        "content": "<p>First just write out the stream: <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a> and hit enter</p>",
        "id": 242928395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623870798
    },
    {
        "content": "<p>after hitting enter, hit <code>&gt;</code></p>",
        "id": 242928404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623870803
    },
    {
        "content": "<p><a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/beta.20noms\">#t-compiler &gt; beta noms</a></p>",
        "id": 242928414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623870807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/122653-zulip/topic/making.20links.20to.20topics.20pro-tip/near/242928395\">said</a>:</p>\n<blockquote>\n<p>First just write out the stream: <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a> and hit enter</p>\n</blockquote>\n<p>In the app, everything goes wrong for me on this step. Writing out the stream like <code>#t-compiler</code> brings up the prompt, and tries to guess which stream I wanted (which won’t necessarily be <code>#t-compiler</code>), and highlights it. If “just hit enter” there, it picks the highlighted one.</p>",
        "id": 245391408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625794628
    },
    {
        "content": "<p>(Its possible our experience differs because Zulip is making user-dependent choices on how it guesses which stream to highlight. I could easily believe that for niko, #t-compiler gets top billing, while for me, #t-compiler/meeting gets top billing.)</p>",
        "id": 245391469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625794687
    },
    {
        "content": "<p>So what it does for me is that on <code>&gt;</code> it selects the highlighted topic, no matter what i have written so far. E.g. on <code>#t-compiler</code> if I type <code>&gt;</code> and the popup has <code>#t-compiler/meetings</code> highlit, it will autocomplete to meetings.</p>",
        "id": 245416189,
        "sender_full_name": "nagisa",
        "timestamp": 1625820014
    },
    {
        "content": "<p>gotta select the stream you want with arrow keys or whatever.</p>",
        "id": 245416212,
        "sender_full_name": "nagisa",
        "timestamp": 1625820027
    },
    {
        "content": "<p>It could put exact matches at the top so you didn't have to fiddle with the arrows and whatnot, but that potentially can be confusing too – e.g. if I mean to select <code>/meetings</code> and type <code>#t-compile</code>, <code>/meetings</code> will always remain the selected option during typing that out for me. If I continue typing <code>r&lt;enter&gt;</code> out of inertia, I'd suddenly get the different result without much visual indication as to why <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 245416396,
        "sender_full_name": "nagisa",
        "timestamp": 1625820145
    }
]