[
    {
        "content": "<p>Starting triage now</p>",
        "id": 262474752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637683021
    },
    {
        "content": "<p>I’m thrilled to see all the “regressions” that have already been triaged by the PR authors.</p>",
        "id": 262478444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637684645
    },
    {
        "content": "<p>And I especially liked the evidence presented by <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> for why the regressions flagged by PR <a href=\"https://github.com/rust-lang/rust/issues/90919\">#90919</a> are just noise. More specifically, I’m wondering: Can we <strong>automate</strong> the heuristic that “totally different sets of benchmarks were flagged pre- and post-merge” ?</p>",
        "id": 262478588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637684719
    },
    {
        "content": "<p>It's one of the things we've flagged in the other direction (lots of the same benchmark means it's probably not noise) but if we come up with something for that I expect it'll work in the reverse for this case as well.</p>",
        "id": 262478929,
        "sender_full_name": "simulacrum",
        "timestamp": 1637684885
    },
    {
        "content": "<p>I will admit, the heuristic does assume that “pre-merge” and “post-merge” should have nearly identical performance profiles, which is not a perfect assumption to make. (I.e. it would overlook cases where there is some weird interaction from merge artifacts)</p>",
        "id": 262480206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637685510
    },
    {
        "content": "<p>But it seems like a great thing to at least <em>highlight</em> in the initially generated template, when the information is available.</p>",
        "id": 262480243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637685531
    },
    {
        "content": "<p>I am struck by how often “inflate” is occurring on the list, various improvements and regressions up and down by 5% to 6%</p>",
        "id": 262504387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637696968
    },
    {
        "content": "<p>incr-unchanged? probably incremental verification noise.</p>",
        "id": 262504746,
        "sender_full_name": "The 8472",
        "timestamp": 1637697149
    },
    {
        "content": "<p>Yeah, all the inflate cases are incr-unchanged.</p>",
        "id": 262505449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697484
    },
    {
        "content": "<p>could we put the incremental verification codepaths in standalone tasks/events in -Zself-profile, just to check if it's that or <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">https://github.com/rust-lang/rustc-perf/issues/1105</a> ?</p>",
        "id": 262505530,
        "sender_full_name": "lqd",
        "timestamp": 1637697511
    },
    {
        "content": "<p>er, 1105 is the incremental verification?</p>",
        "id": 262505595,
        "sender_full_name": "simulacrum",
        "timestamp": 1637697543
    },
    {
        "content": "<p>and we should probably follow through and blanket enable it</p>",
        "id": 262505614,
        "sender_full_name": "simulacrum",
        "timestamp": 1637697555
    },
    {
        "content": "<p>blanket enable, but only on perf.rlo? Isn't that at odds of the “measure what you ship” point that we’re discussing on <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/PR.20.2390951.20mixed.20results\">#t-compiler/performance &gt; PR #90951 mixed results</a>  ?</p>",
        "id": 262505806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  I understood 1105 as related to your change enabling one specific different incr flag on 1/32th query, while I was thinking of all the incremental verification, so I may have misunderstood ?</p>",
        "id": 262505958,
        "sender_full_name": "lqd",
        "timestamp": 1637697698
    },
    {
        "content": "<p>we would still measure the same compiler build we ship but profile with a different <em>runtime</em> option</p>",
        "id": 262506009,
        "sender_full_name": "The 8472",
        "timestamp": 1637697722
    },
    {
        "content": "<p>which I think is acceptable to reduce noise, especially since it just does <em>more</em> than what we ship to endusers.</p>",
        "id": 262506117,
        "sender_full_name": "The 8472",
        "timestamp": 1637697767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/perf.20triage.202021.2011.2023/near/262506009\">said</a>:</p>\n<blockquote>\n<p>we would still measure the same compiler build we ship but profile with a different <em>runtime</em> option</p>\n</blockquote>\n<p>I understand the distinction. The main question is whether it could possibly <em>mask</em> a regression</p>",
        "id": 262506201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697809
    },
    {
        "content": "<p>(but I don’t think it is likely to do so.)</p>",
        "id": 262506220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697817
    },
    {
        "content": "<p>changes in verification time might deemphasize other changes</p>",
        "id": 262506256,
        "sender_full_name": "The 8472",
        "timestamp": 1637697842
    },
    {
        "content": "<p>Yes, I guess that is a form of masking</p>",
        "id": 262506323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697858
    },
    {
        "content": "<p>But probably an acceptable one, especially if it makes the perf triage process more systematic</p>",
        "id": 262506392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697898
    },
    {
        "content": "<p>but if people code-golf verification until it's fast then the oh so terrible outcome would be that we can enable it all the time :D</p>",
        "id": 262506401,
        "sender_full_name": "The 8472",
        "timestamp": 1637697902
    },
    {
        "content": "<p>i.e. of the things to be concerned about, I think <strong>human error</strong> presents the biggest risk.</p>",
        "id": 262506449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637697928
    },
    {
        "content": "<p>Report PR for this week is up: <a href=\"https://github.com/rust-lang/rustc-perf/pull/1110\">https://github.com/rust-lang/rustc-perf/pull/1110</a></p>",
        "id": 262540031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637721093
    }
]