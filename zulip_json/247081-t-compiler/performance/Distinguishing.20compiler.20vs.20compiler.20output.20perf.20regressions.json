[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/91840\">#91840</a> regressed perf, but this PR probably causes non-trivial changes to compiler output. Is there a good way for me to test if the output is worse or if I just need to improve the perf of the mir opt itself? (do we have some kind of benchmark suite for rustc output?)</p>",
        "id": 264759979,
        "sender_full_name": "Jake",
        "timestamp": 1639424917
    },
    {
        "content": "<p>No, but you can sometimes guesstimate it from the change in rustdoc performance. Rustdoc is mostly just a ton of memory allocations though</p>",
        "id": 264760200,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639425019
    },
    {
        "content": "<p>that regression is likely just <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">https://github.com/rust-lang/rustc-perf/issues/1105</a>, so I wouldn't directly worry about it</p>",
        "id": 264760594,
        "sender_full_name": "simulacrum",
        "timestamp": 1639425196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Distinguishing.20compiler.20vs.20compiler.20output.20perf.20regressions/near/264760594\">said</a>:</p>\n<blockquote>\n<p>that regression is likely just <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">https://github.com/rust-lang/rustc-perf/issues/1105</a>, so I wouldn't directly worry about it</p>\n</blockquote>\n<p>Ah good to know, but even then the changes are much more mixed than I'd like it to be for an MIR <em>optimization</em> <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> I'll take a look to see if there are any obvious improvements I can make (there was also a previous PR that claimed to pull 5% off a similar strategy so also will look at what's different there)</p>",
        "id": 264760928,
        "sender_full_name": "Jake",
        "timestamp": 1639425363
    },
    {
        "content": "<p>The rustdoc changes are a consistent 0.00% to 0.01%</p>",
        "id": 264761015,
        "sender_full_name": "Jake",
        "timestamp": 1639425402
    },
    {
        "content": "<p>hm</p>",
        "id": 264761076,
        "sender_full_name": "simulacrum",
        "timestamp": 1639425423
    },
    {
        "content": "<p>so generally speaking it's more like \"results are not changing perf\", I'd say</p>",
        "id": 264761106,
        "sender_full_name": "simulacrum",
        "timestamp": 1639425436
    },
    {
        "content": "<p>it's potentially the case that the optimization is not worth it as-is, though</p>",
        "id": 264761202,
        "sender_full_name": "simulacrum",
        "timestamp": 1639425479
    },
    {
        "content": "<p>Aren't Mir opts off by default? Are you sure yours is actually running?</p>",
        "id": 264761341,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639425528
    },
    {
        "content": "<p>That's... a good point. I will test that too (after I do my homework because despite rustc being fun I would also like to graduate!)</p>",
        "id": 264761830,
        "sender_full_name": "Jake",
        "timestamp": 1639425706
    },
    {
        "content": "<p>Each mir opt needs to individually decide at which mir opt level it runs. Currently this means doing an early return from the optimization if the required mir opt level is not enabled.</p>",
        "id": 264778367,
        "sender_full_name": "bjorn3",
        "timestamp": 1639433745
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Distinguishing.20compiler.20vs.20compiler.20output.20perf.20regressions/near/264760200\">said</a>:</p>\n<blockquote>\n<p>No, but you can sometimes guesstimate it from the change in rustdoc performance. Rustdoc is mostly just a ton of memory allocations though</p>\n</blockquote>\n<p>By the way, I figured out the hard way that you can get something nearly equivalent by locally benching the stage 1 compiler which will run the optimization pass but is not itself built with the optimization on</p>",
        "id": 264946049,
        "sender_full_name": "Jake",
        "timestamp": 1639525825
    }
]