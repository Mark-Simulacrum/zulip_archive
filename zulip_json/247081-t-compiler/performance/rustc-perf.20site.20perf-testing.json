[
    {
        "content": "<p>I'd like to be able to test some changes that may improve the performance of the rustc-perf site itself, but not having a large database to work with makes that difficult. Is there any reasonable way to get access to all of the data in the production DB? I think for my purposes, only read access is needed, FWIW.</p>",
        "id": 250385274,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1629740262
    },
    {
        "content": "<p>Excluding self-profile data, the sqlite export is only a few months out of date and had a month's worth of data</p>",
        "id": 250386086,
        "sender_full_name": "simulacrum",
        "timestamp": 1629740661
    },
    {
        "content": "<p>(mostly only partial because the files get pretty big and exports are slow)</p>",
        "id": 250386115,
        "sender_full_name": "simulacrum",
        "timestamp": 1629740678
    },
    {
        "content": "<p>aws rds has a database export feature, but it's to parquet files -- I'd guess we could utilize that if we wanted to have something operating in the long run, but seems potentially complicated.</p>",
        "id": 250386329,
        "sender_full_name": "simulacrum",
        "timestamp": 1629740767
    },
    {
        "content": "<p>(<a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ExportSnapshot.html#USER_ExportSnapshot.Overview\">https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ExportSnapshot.html#USER_ExportSnapshot.Overview</a>)</p>",
        "id": 250386342,
        "sender_full_name": "simulacrum",
        "timestamp": 1629740776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306073\">@Tyson Nottingham</span> the export is at <a href=\"http://perf-data.rust-lang.org/export.db.sz\">perf-data.rust-lang.org/export.db.sz</a> if you want that (snappy compressed)</p>",
        "id": 250386569,
        "sender_full_name": "simulacrum",
        "timestamp": 1629740888
    },
    {
        "content": "<p>Sweet, I think the export should work. Thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>.</p>",
        "id": 250386626,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1629740923
    },
    {
        "content": "<p>FWIW, the profiles I've seen are <em>really</em> different in some cases between a local sqlite and the postgres backend, mostly down to the network round-trip for postgres, I think</p>",
        "id": 250387113,
        "sender_full_name": "simulacrum",
        "timestamp": 1629741176
    },
    {
        "content": "<p>(e.g., many small queries without parallelism is perfectly reasonable for sqlite but really kills perf with postgres)</p>",
        "id": 250387148,
        "sender_full_name": "simulacrum",
        "timestamp": 1629741201
    },
    {
        "content": "<p>but, in any case, happy to see improvements :)</p>",
        "id": 250387157,
        "sender_full_name": "simulacrum",
        "timestamp": 1629741211
    },
    {
        "content": "<p>Right. Luckily the thing I'm testing doesn't involve optimizing the DB accesses.</p>",
        "id": 250387247,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1629741248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, are we good to remove the old graph endpoint and page (<code>index-old.html</code>) at this point? I'm experimenting with some changes and I'm wondering if I should unify <code>handle_graph</code> and <code>handle_graph_new</code>, and remove support for the old graph stuff.</p>",
        "id": 255794818,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1633116149
    },
    {
        "content": "<p>Yeah should be fine</p>",
        "id": 255794905,
        "sender_full_name": "simulacrum",
        "timestamp": 1633116190
    },
    {
        "content": "<p>I don't think it's being used</p>",
        "id": 255794925,
        "sender_full_name": "simulacrum",
        "timestamp": 1633116201
    }
]