[
    {
        "content": "<p>ok, going to start triage -- trying out the endpoint</p>",
        "id": 245833127,
        "sender_full_name": "simulacrum",
        "timestamp": 1626186647
    },
    {
        "content": "<p>endpoint seems to have worked well</p>",
        "id": 245835939,
        "sender_full_name": "simulacrum",
        "timestamp": 1626187822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> did we end up with some docs on handling nag carry-over? It looks like there's several \"untriaged\" regressions - <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged+\">https://github.com/rust-lang/rust/issues?q=is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged+</a></p>",
        "id": 245836011,
        "sender_full_name": "simulacrum",
        "timestamp": 1626187853
    },
    {
        "content": "<p>No we did not. Some thoughts:</p>\n<ul>\n<li>Add untriaged perf issues to the triage report</li>\n<li>Ping author/reviewer to address the issue</li>\n</ul>",
        "id": 245836286,
        "sender_full_name": "rylev",
        "timestamp": 1626187940
    },
    {
        "content": "<p>Question becomes if the regression is constantly unaddressed, what do we do</p>",
        "id": 245836351,
        "sender_full_name": "rylev",
        "timestamp": 1626187963
    },
    {
        "content": "<p>(also, we can easily add the untriaged perf issues to the triage report automatically)</p>",
        "id": 245836414,
        "sender_full_name": "rylev",
        "timestamp": 1626187987
    },
    {
        "content": "<p>I think adding them automatically makes sense</p>",
        "id": 245837820,
        "sender_full_name": "simulacrum",
        "timestamp": 1626188464
    },
    {
        "content": "<p>I'll just include a listing manually for now</p>",
        "id": 245837856,
        "sender_full_name": "simulacrum",
        "timestamp": 1626188469
    },
    {
        "content": "<p>I think we shouldn't ping just yet -- let's see if maybe we can get T-compiler or folks on prioritization etc to assign/handle that</p>",
        "id": 245837962,
        "sender_full_name": "simulacrum",
        "timestamp": 1626188494
    },
    {
        "content": "<p>(it's possible investigation is best done by not the author in some cases)</p>",
        "id": 245838047,
        "sender_full_name": "simulacrum",
        "timestamp": 1626188513
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/904\">https://github.com/rust-lang/rustc-perf/pull/904</a></p>",
        "id": 245838984,
        "sender_full_name": "simulacrum",
        "timestamp": 1626188809
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage.202021.2007.2013/near/245837962\">said</a>:</p>\n<blockquote>\n<p>I think we shouldn't ping just yet -- let's see if maybe we can get T-compiler or folks on prioritization etc to assign/handle that</p>\n</blockquote>\n<p>How do you want to handle getting such a process set up? Would you like to propose this in the next compiler meeting? I think it's fine for T-compiler folks to be in charge as long as T-performance folks make sure it gets done eventually</p>",
        "id": 245845174,
        "sender_full_name": "rylev",
        "timestamp": 1626191360
    },
    {
        "content": "<p>I think we can accumulate for now, it looks like at least some are getting labeled as triaged. We're not seeing too many so far. Maybe T-compiler can discuss in meeting or a planning meeting can be spun out of some brief discussion.</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 245846255,
        "sender_full_name": "simulacrum",
        "timestamp": 1626191843
    },
    {
        "content": "<p>I opened an issue for adding them automatically to the triage report <a href=\"https://github.com/rust-lang/rustc-perf/issues/905\">https://github.com/rust-lang/rustc-perf/issues/905</a></p>",
        "id": 245847629,
        "sender_full_name": "rylev",
        "timestamp": 1626192417
    }
]