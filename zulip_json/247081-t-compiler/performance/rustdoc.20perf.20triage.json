[
    {
        "content": "<p>Do you all triage rustdoc perf as well? There some to be some moderate rustdoc perf improvements over the past week, and I'm curious to know which PRs it was :)</p>",
        "id": 227714935,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614226153
    },
    {
        "content": "<p>bump â€” I'm assuming the answer is \"no\"</p>",
        "id": 228151796,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614541316
    },
    {
        "content": "<p>Currently, no, because rustdoc runs are <a href=\"https://github.com/rust-lang/rustc-perf/blob/115aff9e6ebc72619c6f8c878d812fab9f697d72/triage/weekly_report.py#L158-L160\">explicitly omitted</a> from the performance triage reports by the script we use. I am hesitant to add potentially another set of regressions or improvements to the triage plate - it's already a struggle to find people who can do it, and adding another dimension is unlikely to be helpful, but it would be not too hard to edit the script to <em>only</em> include those and for you to run it locally on some commit range.</p>",
        "id": 228152056,
        "sender_full_name": "simulacrum",
        "timestamp": 1614541599
    },
    {
        "content": "<p>Yeah if the script had a clear \"perf run compiler\" and \"perf run rustdoc\" mode then that might (might) encourage people to investigate rustdoc</p>",
        "id": 228158916,
        "sender_full_name": "Lokathor",
        "timestamp": 1614548384
    },
    {
        "content": "<p>though since rustdoc runs on a distant cloud for most people, i'm not sure they'll investigate too much there</p>",
        "id": 228158975,
        "sender_full_name": "Lokathor",
        "timestamp": 1614548419
    },
    {
        "content": "<p>We are looking into how to improve the process for Rust performance tracking/triage <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review\">here</a>. We should definitely keep this in mind though as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has noted, it's already a struggle to keep up with the base compiler. Hopefully, once we improve our process enough, it can expand to take on more things like rustdoc.</p>",
        "id": 228210935,
        "sender_full_name": "rylev",
        "timestamp": 1614596097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/rustdoc.20perf.20triage/near/228152056\">said</a>:</p>\n<blockquote>\n<p>Currently, no, because rustdoc runs are <a href=\"https://github.com/rust-lang/rustc-perf/blob/115aff9e6ebc72619c6f8c878d812fab9f697d72/triage/weekly_report.py#L158-L160\">explicitly omitted</a> from the performance triage reports by the script we use. I am hesitant to add potentially another set of regressions or improvements to the triage plate - it's already a struggle to find people who can do it, and adding another dimension is unlikely to be helpful, but it would be not too hard to edit the script to <em>only</em> include those and for you to run it locally on some commit range.</p>\n</blockquote>\n<p>Ah, I didn't realize that part of the triage was automated. I'll try out modifying the script, thanks!</p>",
        "id": 228347896,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614656154
    }
]