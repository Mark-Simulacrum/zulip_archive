[
    {
        "content": "<p>late start on this week’s triage. lets see how this goes.</p>",
        "id": 269349077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643158792
    },
    {
        "content": "<p>So, lets see. I failed to take notes here as I was working</p>",
        "id": 269362543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171681
    },
    {
        "content": "<p>For PR <a href=\"https://github.com/rust-lang/rust/issues/92896\">#92896</a>: <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> wrote guess that regression cause could be noise injected via one of the dependency updates, specifically hashbrown 0.11.0 to 0.11.2.</p>\n<ul>\n<li>Left it untriaged for now (I would like to circle back and check whether there's any way to check that hypothesis; but if it goes untouched for a week, then we might just rubber-stamp it as triaged).</li>\n</ul>",
        "id": 269362577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171750
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/93165\">#93165</a> (and PR <a href=\"https://github.com/rust-lang/rust/issues/93138\">#93138</a> / PR <a href=\"https://github.com/rust-lang/rust/issues/91032\">#91032</a>) were already discussed in <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/next.20perf.20triage\">#t-compiler/performance &gt; next perf triage</a> . I did my best to summarize in the report.</p>",
        "id": 269362636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171804
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/93014\">#93014</a> and PR <a href=\"https://github.com/rust-lang/rust/issues/93095\">#93095</a> were already triaged, which was great.</p>",
        "id": 269362644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171824
    },
    {
        "content": "<p>those were the regressions</p>",
        "id": 269362651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171840
    },
    {
        "content": "<p>for Improvements</p>",
        "id": 269362655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171846
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/92138\">#92138</a> hopefully closes the loop on an nearly four-year old hypothesized performance fix, issue <a href=\"https://github.com/rust-lang/rust/issues/48994\">#48994</a>.</p>",
        "id": 269362661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171860
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/93066\">#93066</a> is simply awesome. Thanks <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span>; specifically:</p>\n<ul>\n<li>Wow. This <a href=\"https://perf.rust-lang.org/compare.html?start=1e4067957bd5d0e12c1657e720903209ecc291dc&amp;end=84322efad553c7a79c80189f2d1b9197c1aa005f\">compare page</a> has an impressive amount of green.</li>\n<li>Perhaps even more notably, the bootstrap time had 8 seconds (-1.141%) shaved off via this PR, and from the <a href=\"https://perf.rust-lang.org/bootstrap.html\">bootstrap graph</a>, the bulk of that improvement has stuck.</li>\n</ul>",
        "id": 269362715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171885
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/90842\">#90842</a> was a happy accident, AFAICT</p>",
        "id": 269362731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171941
    },
    {
        "content": "<p>Next, for Mixed</p>",
        "id": 269362749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171967
    },
    {
        "content": "<p>Already talked about PR <a href=\"https://github.com/rust-lang/rust/issues/93138\">#93138</a></p>",
        "id": 269362762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643171980
    },
    {
        "content": "<p>For PR <a href=\"https://github.com/rust-lang/rust/issues/91359\">#91359</a>, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> posted a <a href=\"https://github.com/rust-lang/rust/pull/91359#issuecomment-1013525074\">nice analysis</a> explaining the probable root cause.</p>",
        "id": 269362827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172023
    },
    {
        "content": "<ul>\n<li>Notably, \"with <code>-Csymbol-mangling-version=v0</code> the hashes (changes to which cause LLVM's workload to change) go away; [...] this patch is pretty much an improvement in terms of emitted IR (as roughly expected).”</li>\n</ul>",
        "id": 269362836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172035
    },
    {
        "content": "<p>For PR <a href=\"https://github.com/rust-lang/rust/issues/92998\">#92998</a>, <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> wrote a plausible explanation: \"an overall win but with a bit of noise since this code is extremely sensitive to inlining.” <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> agreed so I’m going with it without looking too deeply. :)</p>",
        "id": 269362869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172087
    },
    {
        "content": "<p>and so we get to the last mixed PR, rollup PR <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a></p>",
        "id": 269362882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172106
    },
    {
        "content": "<p>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a></p>\n<ul>\n<li>Average relevant regression: 1.5%</li>\n<li>Average relevant improvement: -0.7%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e7825f2b690c9a0d21b6f6d84c404bb53b151b38&amp;end=df368ae457c54fb95d3e64f9986a5f171a6370f0&amp;stat=instructions:u\">instruction counts</a>: -0.8% on <code>incr-full</code> builds of <code>keccak check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e7825f2b690c9a0d21b6f6d84c404bb53b151b38&amp;end=df368ae457c54fb95d3e64f9986a5f171a6370f0&amp;stat=instructions:u\">instruction counts</a>: 2.0% on <code>incr-full</code> builds of <code>stm32f4 check</code></li>\n</ul>",
        "id": 269362939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172141
    },
    {
        "content": "<ul>\n<li>It is not obvious what caused the changes here in this rollup.</li>\n</ul>",
        "id": 269362941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172152
    },
    {
        "content": "<ul>\n<li>PR <a href=\"https://github.com/rust-lang/rust/issues/88794\">#88794</a> - std library addition. Its possible this can cause problems. Not sure if we request perf runs here.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93064\">#93064</a> - \"Properly track DepNodes in trait evaluation provisional cache\" Left Q if it needed perf run.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93118\">#93118</a> - revision of error emission code so that we get more output. Unlikely to be cause.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93144\">#93144</a> - code coverage data change. Unlikely to be cause.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93169\">#93169</a> - rustdoc implementation change. Unlikely to be cause.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93175\">#93175</a> - \"Implement stable overlap check considering negative traits\"; maybe expected no-op for feature-free code? Left Q asking if it needed perf run.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93251\">#93251</a> - rustdoc theme change. Unlikely to be cause.<br>\n  PR <a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a> - LLVM backend change to cope with some C/Rust LTO version mismatch issues. Seems innocuous here.</li>\n</ul>",
        "id": 269362948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172165
    },
    {
        "content": "<p>So I’m debating about what to do about PR <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a>, in terms of the report.</p>",
        "id": 269362972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172211
    },
    {
        "content": "<p>I guess I’ll just summarize what I said above: that it is likely narrowed down to one of PR <a href=\"https://github.com/rust-lang/rust/issues/93064\">#93064</a> or PR <a href=\"https://github.com/rust-lang/rust/issues/93175\">#93175</a> (though std library changes do make me nervous in terms of potential for introducing noise).</p>",
        "id": 269363041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172290
    },
    {
        "content": "<p>stm32f4 was added in part to bench compiler trait machinery</p>",
        "id": 269363358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172651
    },
    {
        "content": "<p>so the regression being there might be support for hypothesis that this is PR <a href=\"https://github.com/rust-lang/rust/issues/93064\">#93064</a> or <a href=\"https://github.com/rust-lang/rust/issues/93175\">#93175</a>. Probably former.</p>",
        "id": 269363378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643172675
    },
    {
        "content": "<p>posted PR: <a href=\"https://github.com/rust-lang/rustc-perf/pull/1158\">https://github.com/rust-lang/rustc-perf/pull/1158</a></p>",
        "id": 269364316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643173540
    },
    {
        "content": "<p>do you think it'd be worthwhile to try and make the bot's <code>make-pr-for</code> feature work, to track the source of the changes in rollup <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a> ? it seems likely that we'll be having more rollups like these needing to be investigated, and these perf runs reverting parts of a rollup should help narrow things down.</p>",
        "id": 269382048,
        "sender_full_name": "lqd",
        "timestamp": 1643189131
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a> and benchmark stm32f4 check cachegrind diff is:</p>\n<div class=\"codehilite\"><pre><span></span><code>--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n688,903,346  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr           file:function\n--------------------------------------------------------------------------------\n545,836,918  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr\n 98,006,468  ???:&lt;rustc_session::session::Session&gt;::contains_name\n 45,007,143  ???:rustc_trait_selection::traits::coherence::overlap_within_probe\n ...\n</code></pre></div>\n<p>Which points at <a href=\"https://github.com/rust-lang/rust/issues/93175\">#93175</a> (<code>overlap_mode</code> could easily avoid at least two <code>has_attr</code> calls).</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 269388252,
        "sender_full_name": "tm",
        "timestamp": 1643192675
    },
    {
        "content": "<p>oh, good point <span class=\"user-mention\" data-user-id=\"352985\">@tm</span> !</p>",
        "id": 269406394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643202143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/perf.20triage.202022.2001.2025/near/269388252\">said</a>:</p>\n<blockquote>\n<p>For <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a> and benchmark stm32f4 check cachegrind diff is:</p>\n<div class=\"codehilite\"><pre><span></span><code>--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n688,903,346  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr           file:function\n--------------------------------------------------------------------------------\n545,836,918  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr\n 98,006,468  ???:&lt;rustc_session::session::Session&gt;::contains_name\n 45,007,143  ???:rustc_trait_selection::traits::coherence::overlap_within_probe\n ...\n</code></pre></div>\n<p>Which points at <a href=\"https://github.com/rust-lang/rust/issues/93175\">#93175</a> (<code>overlap_mode</code> could easily avoid at least two <code>has_attr</code> calls).</p>\n<p>cc <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> gonna check this out, thanks for sharing</p>",
        "id": 269407482,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643202633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I implemented the idea in <a href=\"https://github.com/rust-lang/rust/issues/93324\">#93324</a>.</p>",
        "id": 269407650,
        "sender_full_name": "tm",
        "timestamp": 1643202706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/perf.20triage.202022.2001.2025/near/269407650\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> I implemented the idea in <a href=\"https://github.com/rust-lang/rust/issues/93324\">#93324</a>.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, approving it, should we rollup this one or disallow to see the perf impact?</p>",
        "id": 269412720,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643204833
    },
    {
        "content": "<p>Let's see what perf says before approving it, I think.</p>",
        "id": 269412827,
        "sender_full_name": "simulacrum",
        "timestamp": 1643204876
    },
    {
        "content": "<p>this PR can still be slightly improved</p>",
        "id": 269412910,
        "sender_full_name": "lqd",
        "timestamp": 1643204896
    },
    {
        "content": "<p>ohh sorry Mark, didn't see that you fired a perf test and fired a new one</p>",
        "id": 269413581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643205137
    },
    {
        "content": "<p>opened a different PR <a href=\"https://github.com/rust-lang/rust/issues/93328\">#93328</a></p>",
        "id": 269418545,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643206917
    },
    {
        "content": "<p>just in case, my PR is a bit different and probably won't have a perf difference, but the idea is to use with negative and in particular with negative may land on stdlib so the code would do less checks in cases that are more likely to happen</p>",
        "id": 269422177,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643208329
    },
    {
        "content": "<p>but performance of both PRs should be similar right now</p>",
        "id": 269422202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643208341
    },
    {
        "content": "<p>anyway, I'd be more inclined to merge mine because of these reasons</p>",
        "id": 269422237,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643208352
    },
    {
        "content": "<p>Feel free to close <a href=\"https://github.com/rust-lang/rust/issues/93324\">#93324</a>, unless you are interested in perf comparison.</p>",
        "id": 269425012,
        "sender_full_name": "tm",
        "timestamp": 1643209336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, given that is already up, let's see what perf says</p>",
        "id": 269436900,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643213507
    },
    {
        "content": "<p>as I was already expecting after seeing <a href=\"https://github.com/rust-lang/rust/issues/93324\">#93324</a>, <a href=\"https://github.com/rust-lang/rust/issues/93328\">#93328</a> doesn't either bring better results</p>",
        "id": 269464452,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643223982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> how bad the thing were?</p>",
        "id": 269464483,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643223997
    },
    {
        "content": "<p>I was talking to Niko that maybe is better if we switch that and use a crate level attribute</p>",
        "id": 269464512,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643224013
    },
    {
        "content": "<p>well actually 2</p>",
        "id": 269464523,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643224019
    },
    {
        "content": "<p>or I guess I could condense this into just one attribute</p>",
        "id": 269464575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643224040
    },
    {
        "content": "<p>although I wonder ... I understand that this may be affecting instruction counts but does it affect wall time at all? I guess it shouldn't?</p>",
        "id": 269465092,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643224232
    },
    {
        "content": "<p>Is there any reason to assume that in this case instruction count changes wouldn't affect wall time?</p>",
        "id": 269466147,
        "sender_full_name": "The 8472",
        "timestamp": 1643224631
    },
    {
        "content": "<p>The instruction count regressions are fairly small in absolute magnitude, so it might not be something we can standalone measure as impacting wall time (too small effect size), but I wouldn't expect no effect</p>",
        "id": 269466504,
        "sender_full_name": "simulacrum",
        "timestamp": 1643224778
    },
    {
        "content": "<p>Cachegrind diff for <a href=\"https://github.com/rust-lang/rust/issues/93324\">#93324</a> and stm32f4 check:</p>\n<div class=\"codehilite\"><pre><span></span><code>--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n -222,084,494  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr             file:function\n--------------------------------------------------------------------------------\n -181,938,360  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr\n  -33,048,596  ???:&lt;rustc_session::session::Session&gt;::contains_name\n  -12,024,623  ???:&lt;rustc_data_structures::stable_hasher::StableHasher&gt;::finish::&lt;u128&gt;\n   11,945,001  ???:&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;ru\n...\n</code></pre></div>\n<p>Cachegrind diff for <a href=\"https://github.com/rust-lang/rust/issues/93343\">#93343</a> and stm32f4 check:</p>\n<div class=\"codehilite\"><pre><span></span><code>--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n -467,843,688  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr             file:function\n--------------------------------------------------------------------------------\n -545,836,932  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr\n  169,593,607  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::get_attrs\n  -98,006,468  ???:&lt;rustc_session::session::Session&gt;::contains_name\n   11,126,628  ???:&lt;rustc_ast::ast::Attribute&gt;::name_or_empty\n...\n</code></pre></div>",
        "id": 269467230,
        "sender_full_name": "tm",
        "timestamp": 1643225058
    },
    {
        "content": "<p>I was actually trying something similar to what <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> was doing</p>",
        "id": 269467774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643225287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> can you run it on <a href=\"https://github.com/rust-lang/rust/issues/93328\">#93328</a> ?</p>",
        "id": 269467855,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643225320
    },
    {
        "content": "<p>I'd expect it to be similar to your PR</p>",
        "id": 269467884,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643225333
    },
    {
        "content": "<p>ok, I'm going to move this into a crate level attribute and this problem will be fixed</p>",
        "id": 269469664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643226057
    },
    {
        "content": "<p>Cachegrind diff for <a href=\"https://github.com/rust-lang/rust/issues/93328\">#93328</a> and stm32f4 check:</p>\n<div class=\"codehilite\"><pre><span></span><code>--------------------------------------------------------------------------------\nIr\n--------------------------------------------------------------------------------\n -211,707,257  PROGRAM TOTALS\n\n--------------------------------------------------------------------------------\nIr             file:function\n--------------------------------------------------------------------------------\n -181,938,360  ???:&lt;rustc_middle::ty::context::TyCtxt&gt;::has_attr\n  -33,048,596  ???:&lt;rustc_session::session::Session&gt;::contains_name\n  -12,024,623  ???:&lt;rustc_data_structures::stable_hasher::StableHasher&gt;::finish::&lt;u128&gt;\n   11,945,001  ???:&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;ru\n</code></pre></div>",
        "id": 269469772,
        "sender_full_name": "tm",
        "timestamp": 1643226099
    },
    {
        "content": "<p>I think the difference is small, so we might have already spent more time on it than it was worth, it just looked like there was an easy opportunity to recover most of the regression.</p>",
        "id": 269470059,
        "sender_full_name": "tm",
        "timestamp": 1643226211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/perf.20triage.202022.2001.2025/near/269470059\">said</a>:</p>\n<blockquote>\n<p>I think the difference is small, so we might have already spent more time on it than it was worth, it just looked like there was an easy opportunity to recover most of the regression.</p>\n</blockquote>\n<p>well, the difference is small between which things?</p>",
        "id": 269472569,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643227230
    },
    {
        "content": "<p>I thought it wasn't if you were comparing my PR and how the perf was before ?</p>",
        "id": 269472631,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643227248
    },
    {
        "content": "<p>or are you comparing the 3 PRs all of us cooked?</p>",
        "id": 269472689,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643227268
    },
    {
        "content": "<p>in any case, the best thing to do is to move the attribute to the crate level and all this work would be avoided</p>",
        "id": 269472727,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643227286
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/perf.20triage.202022.2001.2025/near/269382048\">said</a>:</p>\n<blockquote>\n<p>do you think it'd be worthwhile to try and make the bot's <code>make-pr-for</code> feature work, to track the source of the changes in rollup <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a> ? it seems likely that we'll be having more rollups like these needing to be investigated, and these perf runs reverting parts of a rollup should help narrow things down.</p>\n</blockquote>\n<p>(what is the <code>make-pr-for</code> feature?)</p>",
        "id": 269472795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643227317
    },
    {
        "content": "<p>make-pr-for is intended to automate in-rollup PR triage, but it's typically not worth it</p>",
        "id": 269473066,
        "sender_full_name": "simulacrum",
        "timestamp": 1643227440
    },
    {
        "content": "<p>it's semi-broken right now</p>",
        "id": 269473108,
        "sender_full_name": "simulacrum",
        "timestamp": 1643227446
    },
    {
        "content": "<p>mark and ryan can explain more, but I remember it as \"let's ask the bot to make a PR that reverts a PR that was in a rollup and we'd like to see the impact on perf\"</p>",
        "id": 269473122,
        "sender_full_name": "lqd",
        "timestamp": 1643227451
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 269473271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643227518
    },
    {
        "content": "<p>btw, twir PR for this week’s triage. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> : <a href=\"https://github.com/rust-lang/this-week-in-rust/pull/2854\">https://github.com/rust-lang/this-week-in-rust/pull/2854</a></p>",
        "id": 269474055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643227880
    },
    {
        "content": "<p>opened <a href=\"https://github.com/rust-lang/rust/issues/93348\">#93348</a></p>",
        "id": 269488115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643234004
    }
]