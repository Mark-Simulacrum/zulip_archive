[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> : I wrote a document on the short-term performance tracking process. This includes the current status quo as well as my idea of an ideal process which we can use to spring board discussion and reach a consensus on an ideal process. This is only for short-term performance tracking (i.e., ensuring that PRs introduce as few regressions as possible and ensuring that they are either fixed or labeled as wont-fix). How we do longer term performance tracking (i.e., keeping the compiler team and wider community informed about trends in performance and making sure that trend is toward improving performance) is left to another exercise. <a href=\"https://hackmd.io/@ryanlevick/Bk1Hidcbu\">https://hackmd.io/@ryanlevick/Bk1Hidcbu</a></p>",
        "id": 226827839,
        "sender_full_name": "rylev",
        "timestamp": 1613662365
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> !</p>",
        "id": 226882873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1613683264
    },
    {
        "content": "<p>Next steps would be to give the document a read and get to a place where everyone agrees on the description of the status quo and agrees enough with this proposed direction that we can bring it to a wider audience (probably t-compiler?).</p>",
        "id": 226939475,
        "sender_full_name": "rylev",
        "timestamp": 1613727174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Do you have time to discuss this ^^</p>",
        "id": 227569471,
        "sender_full_name": "rylev",
        "timestamp": 1614158320
    },
    {
        "content": "<p>I just read it - minor feedback is that I recommend filing new issues, merged PRs just don't work for tracking anything I think</p>",
        "id": 227587793,
        "sender_full_name": "simulacrum",
        "timestamp": 1614168228
    },
    {
        "content": "<p>I also wanted to flag that historically at least, there's not been a huge amount of success with nagging people to do work - I suspect that the performance team itself will need to make PRs aiming to fix performance or revert regressions</p>",
        "id": 227588091,
        "sender_full_name": "simulacrum",
        "timestamp": 1614168391
    },
    {
        "content": "<p>I agree that nagging hasn't been successful so far, but I do think that would change in a world where the nagging is followed up on. I do agree though that the perf team itself may need to follow up on issues, but I don't want to get to a situation where people can just rely on the perf team fixing any performance regressions they may introduce.</p>",
        "id": 227589528,
        "sender_full_name": "rylev",
        "timestamp": 1614169294
    },
    {
        "content": "<p>Agreed, I definitely don't want that, and I think one strategy is to have a default of reverting and asking to reapply regression free (or otherwise mitigating), though this may not be trivial in practice to get right.</p>",
        "id": 227590699,
        "sender_full_name": "simulacrum",
        "timestamp": 1614169987
    },
    {
        "content": "<p>This depends on how seriously we want to take regressions. if performance decreases by 2% on one benchmark, I believe an investigation is warranted but a revert might be overkill.</p>",
        "id": 227591784,
        "sender_full_name": "rylev",
        "timestamp": 1614170579
    },
    {
        "content": "<p>I don't disagree but I think we've historically struggled with getting investigation without an obvious reason to do it. Maybe I'm too pessimistic, but I'd rather revert or not land regressing PRs without that investigation done up front. We could also get stricter over time as tooling to do that investigation improves, though.</p>",
        "id": 227595929,
        "sender_full_name": "simulacrum",
        "timestamp": 1614172653
    },
    {
        "content": "<p>Yea let's start with a more \"optimistic\" process and we can crack down if we need to.</p>",
        "id": 227599757,
        "sender_full_name": "rylev",
        "timestamp": 1614174332
    },
    {
        "content": "<p>Would it help if we changed the format of the weekly report?</p>",
        "id": 227626395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614183795
    },
    {
        "content": "<p>to focus on just “high level, performance went up or went down overall (and by how much)”, and then “here are the nags\"</p>",
        "id": 227626470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614183820
    },
    {
        "content": "<p>that is, if the nags are the real point of the synchronous report with the team, then maybe they should get more weight. Arguably that’s hard without the rest of the context provided by the report as a whole.</p>",
        "id": 227626623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614183858
    },
    {
        "content": "<p>but if the intent is that we need someone to <em>own</em> the action item of pushing on the nag, we can adapt things to make that happen.</p>",
        "id": 227626724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614183891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/227590699\">said</a>:</p>\n<blockquote>\n<p>Agreed, I definitely don't want that, and I think one strategy is to have a default of reverting and asking to reapply regression free (or otherwise mitigating), though this may not be trivial in practice to get right.</p>\n</blockquote>\n<p>I expect this strategy will be difficult until we are very proactive. I.e. the weekly cadence may not be quick enough, in terms of the pain it will introduce to others who are rebasing and then have to undo their rebasing.</p>",
        "id": 227627031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614183970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/227569471\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> Do you have time to discuss this ^^</p>\n</blockquote>\n<p>Would this be worthy of a Friday steering meeting? I’m reading it now with that in mind, but possibly we are better off with a more focused discussion here.</p>",
        "id": 227627217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614184044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/227626470\">said</a>:</p>\n<blockquote>\n<p>to focus on just “high level, performance went up or went down overall (and by how much)”, and then “here are the nags\"</p>\n</blockquote>\n<p>I think keeping general information about the trend for the week probably wouldn't hurt, though I haven't see a case yet where that really comes in handy. I think we won't know the final form the triage report should take until we do more to review the long term performance tracking process.</p>",
        "id": 227627966,
        "sender_full_name": "rylev",
        "timestamp": 1614184266
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/227627217\">said</a>:</p>\n<blockquote>\n<p>Would this be worthy of a Friday steering meeting? I’m reading it now with that in mind, but possibly we are better off with a more focused discussion here.</p>\n</blockquote>\n<p>I'll leave that decision up to you and how controversial you think the proposal is/will be. I'm more than happy to discuss it in a meeting though</p>",
        "id": 227628247,
        "sender_full_name": "rylev",
        "timestamp": 1614184338
    },
    {
        "content": "<p>Rather than talking about reverting or investigating, isn't the goal to raise the issue earlier in the process, i.e.</p>\n<blockquote>\n<p>When the performance run is finished, the perf bot uses heuristics to determine whether this run has found a possible performance regression. If it has, the bot automatically labels the pull request as such (actual label name to be bikeshed) and encourages the reviewer and author to address the regression.</p>\n</blockquote>",
        "id": 227637179,
        "sender_full_name": "The 8472",
        "timestamp": 1614187318
    },
    {
        "content": "<p>Yes ideally we would never reach the point where a merged PR shows a performance regression. This is just the contingency when that does happen.</p>",
        "id": 227639520,
        "sender_full_name": "rylev",
        "timestamp": 1614188091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/227639520\">said</a>:</p>\n<blockquote>\n<p>Yes ideally we would never reach the point where a merged PR shows a performance regression. This is just the contingency when that does happen.</p>\n</blockquote>\n<p>I would just clarify -- <em>unexpected</em> regression :)</p>",
        "id": 227653397,
        "sender_full_name": "simulacrum",
        "timestamp": 1614193334
    },
    {
        "content": "<p>Ok I've updated the document to address the feedback and added more detail to the \"weekly report\". It's shaping up to be somewhat similar to the current triage report just without any human editing needed and more focused on regressions (though improvements are still noted).</p>",
        "id": 227765278,
        "sender_full_name": "rylev",
        "timestamp": 1614259250
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> perhaps this would be interested to announce at the compiler triage meeting and ask people if they believe an MCP is warranted.</p>",
        "id": 227765355,
        "sender_full_name": "rylev",
        "timestamp": 1614259285
    },
    {
        "content": "<p>I'd like to get more feedback and start working with folks on implementing this.</p>",
        "id": 227765405,
        "sender_full_name": "rylev",
        "timestamp": 1614259312
    },
    {
        "content": "<p>sure, I think announcing it makes sense.</p>",
        "id": 227779131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614264866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> are you going to attend the meeting? You can just make an announcement during the initial announcement period; its meant to be open to everyone</p>",
        "id": 227779193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614264900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I haven't gotten any comments on this. Is it worth making it an MCP?</p>",
        "id": 228427366,
        "sender_full_name": "rylev",
        "timestamp": 1614698506
    },
    {
        "content": "<p>Are you thinking the MCP would be the section labelled \"A Possible Ideal\" ?</p>",
        "id": 228431000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614699727
    },
    {
        "content": "<p>Yes. I personally would be happy supporting that idea. <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> are you happy with the proposal or would you like to see some changes?</p>",
        "id": 228431148,
        "sender_full_name": "rylev",
        "timestamp": 1614699785
    },
    {
        "content": "<p>It might be good if you highlight the bullets, or the subparts of bullets, that represent changes over the status quo</p>",
        "id": 228431303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614699842
    },
    {
        "content": "<p>(e.g. add \"(new)\" at the start of the second bullet, and in front of every other entirely new bullet.)</p>",
        "id": 228431421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614699874
    },
    {
        "content": "<p>I can take a look in a bit.</p>",
        "id": 228431689,
        "sender_full_name": "simulacrum",
        "timestamp": 1614699965
    },
    {
        "content": "<p>Seems reasonable to me, but it'll definitely need to get implemented by \"not me\" :)</p>",
        "id": 228436819,
        "sender_full_name": "simulacrum",
        "timestamp": 1614701644
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/228431421\">said</a>:</p>\n<blockquote>\n<p>(e.g. add \"(new)\" at the start of the second bullet, and in front of every other entirely new bullet.)</p>\n</blockquote>\n<p>I can do this though almost every bullet might be marked as such <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 228437075,
        "sender_full_name": "rylev",
        "timestamp": 1614701741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/The.20short-term.20performance.20process.20review/near/228436819\">said</a>:</p>\n<blockquote>\n<p>Seems reasonable to me, but it'll definitely need to get implemented by \"not me\" :)</p>\n</blockquote>\n<p>I'd actually like to implement this myself. I want to learn more about the bots.</p>",
        "id": 228437147,
        "sender_full_name": "rylev",
        "timestamp": 1614701763
    },
    {
        "content": "<p>The proposal seems good!</p>\n<p>My only concern is that we won't have the infrastructure to support as many perf runs as we'd like. If it turns out to be too much of a load on the infrastructure, we might look at tuning the heuristic to suggest full perf runs less often, and integrate lightweight smoke tests, as I talked about <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/lets.20keep.20talking.20about.20perf.2Erlo/near/225359280\">here</a>. And / or convince someone to sponsor some hardware. :)</p>",
        "id": 228488352,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1614720193
    },
    {
        "content": "<p>Also, some thoughts on determining whether or not there was a regression:</p>\n<p>The heuristic should do some kind of analysis which takes into account the history of the particular benchmark. For example, for max-rss, a 5% increase can be within noise for one benchmark (e.g. keccak-opt), but be an obvious regression for another benchmark (e.g. clap-rs-opt).</p>\n<p>For triage, we have more information at our disposal. We can often see that a change that was within noise actually turned out to be a real regression after all. See <a href=\"https://github.com/rust-lang/rustc-perf/issues/138\">https://github.com/rust-lang/rustc-perf/issues/138</a>.</p>",
        "id": 228499883,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1614724776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> thanks for posting this in more places. Do you have a brief moment to describe next steps? I'd like to see if we can at least get this in a tracking issue so I can work on some of these issues and recruit others to help.</p>",
        "id": 230315677,
        "sender_full_name": "rylev",
        "timestamp": 1615800546
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> . Do you just want to talk asynchronously in here?</p>",
        "id": 230359786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615820737
    },
    {
        "content": "<p>Yes (In a meeting right now so I'll be slow to respond right now)</p>",
        "id": 230359943,
        "sender_full_name": "rylev",
        "timestamp": 1615820786
    }
]