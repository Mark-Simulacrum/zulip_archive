[
    {
        "content": "<p>I'm trying to add an option to the compiler that allows it to output profiling data related to closure sizes.</p>\n<p>Right now the way I have it setup is, it will just print to stdout. I'd like to figure out how -Zselfprofile collects the data and outputs it in a file so that I can do something similar allowing it easier for people to share their data with us</p>",
        "id": 242553361,
        "sender_full_name": "Aman Arora",
        "timestamp": 1623647808
    },
    {
        "content": "<p>If someone can point me to the code where the option is setu and the file is created and information is maintained that'd help a lot</p>",
        "id": 242553384,
        "sender_full_name": "Aman Arora",
        "timestamp": 1623647846
    },
    {
        "content": "<p>mw and wesley will probably help more but it's surely in measureme, probably this sink <a href=\"https://github.com/rust-lang/measureme/blob/master/measureme/src/serialization.rs\">https://github.com/rust-lang/measureme/blob/master/measureme/src/serialization.rs</a></p>",
        "id": 242555786,
        "sender_full_name": "lqd",
        "timestamp": 1623650772
    },
    {
        "content": "<p>hooked up from the session <code>prof</code> to <code>rustc_data_structures::profiling</code> <a href=\"https://github.com/rust-lang/rust/blob/2312ff1a850db449b79fd3c4b215395cd2598c25/compiler/rustc_data_structures/src/profiling.rs\">https://github.com/rust-lang/rust/blob/2312ff1a850db449b79fd3c4b215395cd2598c25/compiler/rustc_data_structures/src/profiling.rs</a></p>",
        "id": 242555903,
        "sender_full_name": "lqd",
        "timestamp": 1623650940
    },
    {
        "content": "<p>however, measureme and self-profiling may have requirements that you may not have, rustc sends it a lot of events, it's trying very hard to be performant to not skew the timing, have compact data, etc</p>",
        "id": 242555976,
        "sender_full_name": "lqd",
        "timestamp": 1623651026
    },
    {
        "content": "<p>(the data it deals with is very dynamic while yours seems more static ?)</p>",
        "id": 242556094,
        "sender_full_name": "lqd",
        "timestamp": 1623651197
    },
    {
        "content": "<p>so, it could interesting to look at \"regular debug\" output in rustc, whether the dump-mir or graphviz output features, which should be way simpler than how measureme creates its buffers and maintains its events information</p>",
        "id": 242556147,
        "sender_full_name": "lqd",
        "timestamp": 1623651251
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 242637031,
        "sender_full_name": "Aman Arora",
        "timestamp": 1623693776
    }
]