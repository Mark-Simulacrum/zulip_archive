[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> hm, did we forget to do triage this week? Was I supposed to do it? I forget</p>",
        "id": 214053628,
        "sender_full_name": "simulacrum",
        "timestamp": 1603288945
    },
    {
        "content": "<p>I am going to try and find time later this week -- unfortunately, probably Friday</p>",
        "id": 214081254,
        "sender_full_name": "simulacrum",
        "timestamp": 1603299590
    },
    {
        "content": "<p>maybe I can eke out an hour later today</p>",
        "id": 214081336,
        "sender_full_name": "simulacrum",
        "timestamp": 1603299604
    },
    {
        "content": "<p>please let me know if you do this today so I can include the report for tomorrow compiler meeting</p>",
        "id": 214115079,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603314491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> going to try to start that right now, but not sure if I'll finish. I'll ping you</p>",
        "id": 214128486,
        "sender_full_name": "simulacrum",
        "timestamp": 1603323885
    },
    {
        "content": "<p>ok, going to need to run for now but will try to fit it in in an hour or so. we'll see.</p>",
        "id": 214128913,
        "sender_full_name": "simulacrum",
        "timestamp": 1603324280
    },
    {
        "content": "<p>Definitely could do first thing tomorrow morning</p>",
        "id": 214128923,
        "sender_full_name": "simulacrum",
        "timestamp": 1603324295
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-10-21.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-10-21.md</a>, finished</p>",
        "id": 214135489,
        "sender_full_name": "simulacrum",
        "timestamp": 1603331124
    },
    {
        "content": "<p>Sorry <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I haven't had any time for open source the last two weeks, and I expect that will continue at least until the end of October. I should be able to get back on the horse the second week of November (the 9th), but before that it'll be you or nobody.</p>",
        "id": 214224439,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1603389581
    },
    {
        "content": "<p>No worries, just didn't realize. I can definitely take care of things</p>",
        "id": 214224535,
        "sender_full_name": "simulacrum",
        "timestamp": 1603389606
    },
    {
        "content": "<p>ok, doing triage</p>",
        "id": 214708162,
        "sender_full_name": "simulacrum",
        "timestamp": 1603809501
    },
    {
        "content": "<p>done, posting twir PR</p>",
        "id": 214717146,
        "sender_full_name": "simulacrum",
        "timestamp": 1603812907
    },
    {
        "content": "<p>done</p>",
        "id": 214717424,
        "sender_full_name": "simulacrum",
        "timestamp": 1603812997
    },
    {
        "content": "<p>I am going to try to do triage later today, but not sure yet about finding the time.</p>",
        "id": 215504382,
        "sender_full_name": "simulacrum",
        "timestamp": 1604434285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> do you think you'll be able to do triage today? fine if not, I can find them if so</p>",
        "id": 216225764,
        "sender_full_name": "simulacrum",
        "timestamp": 1605021378
    },
    {
        "content": "<p>Happy to help here, if y'all need it <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 216226072,
        "sender_full_name": "rylev",
        "timestamp": 1605021524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> sure, that would be great!</p>",
        "id": 216228885,
        "sender_full_name": "simulacrum",
        "timestamp": 1605022844
    },
    {
        "content": "<p><code>python3 ./triage/weekly_report.py 5cdf5b882da9e8b7c73b5cadeb7745cb68f6ff63</code> should work for this week</p>",
        "id": 216229227,
        "sender_full_name": "simulacrum",
        "timestamp": 1605022977
    },
    {
        "content": "<p>that'll dump a report to stdout which needs to be checked over, not everything it claims is improvement/regression actually is</p>",
        "id": 216229553,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023128
    },
    {
        "content": "<p>mostly just a gut call</p>",
        "id": 216229561,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023132
    },
    {
        "content": "<p>readme has some more instructions, though the first bits about finding the interesting commits are less relevant now <a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage\">https://github.com/rust-lang/rustc-perf/tree/master/triage</a></p>",
        "id": 216229680,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023168
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is the hash you have there the next commit hash after last weeks report?</p>",
        "id": 216229814,
        "sender_full_name": "rylev",
        "timestamp": 1605023244
    },
    {
        "content": "<p>I usually pull the last commit hash from the previous report</p>",
        "id": 216229843,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023259
    },
    {
        "content": "<p>worst case you land on an already triaged PR and there's a comment on it, no big deal</p>",
        "id": 216229868,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023275
    },
    {
        "content": "<p>much less painful than trying to figure out the next one</p>",
        "id": 216229930,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> let me know if you think you can do that today</p>",
        "id": 216231133,
        "sender_full_name": "simulacrum",
        "timestamp": 1605023802
    },
    {
        "content": "<p>I'm taking a look now. I'm wondering what you think of <a href=\"https://perf.rust-lang.org/compare.html?start=f92b931045dabb00b892519d3451cb41d41f2d31&amp;end=8532e742fc6ec210fab69b8192190bc40c685912&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=f92b931045dabb00b892519d3451cb41d41f2d31&amp;end=8532e742fc6ec210fab69b8192190bc40c685912&amp;stat=instructions:u</a></p>",
        "id": 216231218,
        "sender_full_name": "rylev",
        "timestamp": 1605023835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I could use your help on building up an intuition on how to classify these changes as being actual regressions/improvements or not</p>",
        "id": 216231284,
        "sender_full_name": "rylev",
        "timestamp": 1605023864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> oh, sorry, missed the ping, let me look</p>",
        "id": 216232495,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024315
    },
    {
        "content": "<p>I'm looking for old results to try to get a good idea</p>",
        "id": 216232551,
        "sender_full_name": "rylev",
        "timestamp": 1605024336
    },
    {
        "content": "<p>so one thing I do is I remove the non-full runs by declicking checkboxes</p>",
        "id": 216232601,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024357
    },
    {
        "content": "<p>almost nothing should really affect incremental <em>specifically</em> -- we rarely get PRs modifying it -- and the raw numbers are smaller and noisier there</p>",
        "id": 216232675,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024379
    },
    {
        "content": "<p>And I'm guessing you ignore the bootstrap timings?</p>",
        "id": 216232753,
        "sender_full_name": "rylev",
        "timestamp": 1605024406
    },
    {
        "content": "<p>sort of</p>",
        "id": 216232764,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024410
    },
    {
        "content": "<p>Unless there's something big?</p>",
        "id": 216232798,
        "sender_full_name": "rylev",
        "timestamp": 1605024420
    },
    {
        "content": "<p>those are wall times, so if they're not showing &gt;3-4% (plus or minus) it's probably noise</p>",
        "id": 216232841,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024436
    },
    {
        "content": "<p>almost nothing should be exclusively in bootstrap timings and not affecting any other benchmarks, too</p>",
        "id": 216232871,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024451
    },
    {
        "content": "<p>(unless it's \"we deleted 10k lines of code\" but that doesn't really happen often)</p>",
        "id": 216232909,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024467
    },
    {
        "content": "<p>for this commit in particular, it looks like deeply-nested-async probably did regress a bit</p>",
        "id": 216233020,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024502
    },
    {
        "content": "<p>we see 1% regressions on all three of check/opt/debug</p>",
        "id": 216233050,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024515
    },
    {
        "content": "<p>you can also try and glance at wall times (<a href=\"https://perf.rust-lang.org/compare.html?start=f92b931045dabb00b892519d3451cb41d41f2d31&amp;end=8532e742fc6ec210fab69b8192190bc40c685912&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=f92b931045dabb00b892519d3451cb41d41f2d31&amp;end=8532e742fc6ec210fab69b8192190bc40c685912&amp;stat=wall-time</a>) but in this case those don't really do much, they're within noise on deeply nested async and everything else</p>",
        "id": 216233159,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024560
    },
    {
        "content": "<p>but (and this is where intuition is really key) deeply-nested-async tends to be a bit noisier than most, and this PR in particular doesn't seem to have anything to do with it in particular</p>",
        "id": 216233275,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024601
    },
    {
        "content": "<p>Yea you'll have to forgive me not yet having that intuition, but I can try to stay on top of this stuff, and start developing one</p>",
        "id": 216233494,
        "sender_full_name": "rylev",
        "timestamp": 1605024639
    },
    {
        "content": "<p>plus, it's ultimately a stress test and no other benchmarks are showing similar results (indeed, most are improved 0.5%)</p>",
        "id": 216233506,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024641
    },
    {
        "content": "<p>yeah for sure, and worst case it's an extra ping, not all that bad :)</p>",
        "id": 216233563,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024654
    },
    {
        "content": "<p>I'll make a note that this might be noise and leave it in</p>",
        "id": 216233630,
        "sender_full_name": "rylev",
        "timestamp": 1605024671
    },
    {
        "content": "<p>yep, that's perfect</p>",
        "id": 216233649,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024681
    },
    {
        "content": "<p>I usually try to comment on PRs that I believe to not be noise (improvements or regressions regardless).</p>",
        "id": 216233699,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024705
    },
    {
        "content": "<p>Do you get pinged on PRs where a perf run happens?</p>",
        "id": 216233803,
        "sender_full_name": "rylev",
        "timestamp": 1605024746
    },
    {
        "content": "<p>I do not</p>",
        "id": 216233821,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024754
    },
    {
        "content": "<p>But I'm watching rust-lang/rust</p>",
        "id": 216233843,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024764
    },
    {
        "content": "<p>Is there a reason you ask?</p>",
        "id": 216233882,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024781
    },
    {
        "content": "<p>Just wondering. I find perf work to be satisfying and an easier in-road into rustc so I want to stick with it</p>",
        "id": 216233999,
        "sender_full_name": "rylev",
        "timestamp": 1605024838
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> yeah I don't usually keep too close an eye on try perf runs, though if there's a PR that looks perf-relevant I'll likely kick off a perf run on it</p>",
        "id": 216234183,
        "sender_full_name": "simulacrum",
        "timestamp": 1605024918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any nags you're aware of?</p>",
        "id": 216235371,
        "sender_full_name": "rylev",
        "timestamp": 1605025389
    },
    {
        "content": "<p>hm let me look at previous week</p>",
        "id": 216235391,
        "sender_full_name": "simulacrum",
        "timestamp": 1605025399
    },
    {
        "content": "<p>those are meant to be nags you identify, btw</p>",
        "id": 216235418,
        "sender_full_name": "simulacrum",
        "timestamp": 1605025411
    },
    {
        "content": "<p>basically \"what should be checked in on the following week\"</p>",
        "id": 216235448,
        "sender_full_name": "simulacrum",
        "timestamp": 1605025420
    },
    {
        "content": "<p>I think the main thing was <a href=\"https://github.com/rust-lang/rust/pull/78432\">https://github.com/rust-lang/rust/pull/78432</a> but it was discussed in T-compiler meeting, so nothing from past weeks to my knowledge</p>",
        "id": 216235570,
        "sender_full_name": "simulacrum",
        "timestamp": 1605025457
    },
    {
        "content": "<p>I'm personally not always great about copying them forward but they're usually minor if I'm not actively following up anyway</p>",
        "id": 216235612,
        "sender_full_name": "simulacrum",
        "timestamp": 1605025479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> please let me know if I can make any improvements on this: <a href=\"https://github.com/rust-lang/rustc-perf/pull/793\">https://github.com/rust-lang/rustc-perf/pull/793</a></p>",
        "id": 216237166,
        "sender_full_name": "rylev",
        "timestamp": 1605026102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> Looks great! Can you make a PR against this-week-in-rust as well to update the perf section to point at the just merged file?</p>",
        "id": 216237760,
        "sender_full_name": "simulacrum",
        "timestamp": 1605026335
    },
    {
        "content": "<p>Sure thing!</p>",
        "id": 216237789,
        "sender_full_name": "rylev",
        "timestamp": 1605026352
    },
    {
        "content": "<p>FYI: <a href=\"https://github.com/rust-lang/this-week-in-rust/pull/1626\">https://github.com/rust-lang/this-week-in-rust/pull/1626</a></p>",
        "id": 216238614,
        "sender_full_name": "rylev",
        "timestamp": 1605026736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> would either of you be up for doing triage tomorrow? I can do it if not.</p>",
        "id": 217691571,
        "sender_full_name": "simulacrum",
        "timestamp": 1606170518
    },
    {
        "content": "<p>Assuming I finish my test tomorrow at a reasonable hour, I would be interested in learning how to do triage</p>",
        "id": 217703125,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606179106
    },
    {
        "content": "<p>If you ping me I can guide you - what time (ish) do you expect that to happen? (Morning evening?)</p>",
        "id": 217705015,
        "sender_full_name": "simulacrum",
        "timestamp": 1606181173
    },
    {
        "content": "<p>Well it depends how badly I procrastinate <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> but hopefully I'll be done by mid afternoon</p>",
        "id": 217705161,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606181350
    },
    {
        "content": "<p>I'm also available, but I think it's great to have more people who can do it. I'm also new to triaging so I'll keep an eye on this one to learn from it.</p>",
        "id": 217735388,
        "sender_full_name": "rylev",
        "timestamp": 1606213875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I have time in ~10 minutes to work on this, if you want to throw some resources in here async I can look at them :)</p>",
        "id": 217803795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606246810
    },
    {
        "content": "<p>I'm around</p>",
        "id": 217803807,
        "sender_full_name": "simulacrum",
        "timestamp": 1606246818
    },
    {
        "content": "<p>these instructions are good, but a bit outdated <a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#instructions\">https://github.com/rust-lang/rustc-perf/tree/master/triage#instructions</a></p>",
        "id": 217803884,
        "sender_full_name": "simulacrum",
        "timestamp": 1606246870
    },
    {
        "content": "<p>the first step is to get a clone of that repo locally and run <code>python3 ./triage/weekly_report.py c919f490bbcd2b29b74016101f7ec71aaa24bdbb</code>. that'll dump a triage report to stdout.</p>",
        "id": 217804108,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247014
    },
    {
        "content": "<p>(the hash there was pulled from the previous report's end commit)</p>",
        "id": 217804150,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247039
    },
    {
        "content": "<p>the next step is to check the nags from the previous week</p>",
        "id": 217804208,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247049
    },
    {
        "content": "<p>this time there are none</p>",
        "id": 217804221,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247056
    },
    {
        "content": "<p>Now you'll want to, for each PR in the report investigate the cause of the improvement/regression, and whether it was correctly identified. if it's a rollup, try to determine the cause (i.e., which PR in the rollup) and leave a comment on the rollup indicating the conclusion you drew, pinging the identified likely cause PR's author to confirm that.</p>\n<p>checking if the tool correctly diagnosed a regression is mostly an intuition thing right now. The first step is to try to figure out if the change is just in one benchmark or many or what</p>",
        "id": 217804948,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247464
    },
    {
        "content": "<p>how did you know to pick <a href=\"https://github.com/rust-lang/rust/commit/c919f490bbcd2b29b74016101f7ec71aaa24bdbb\">c919f490bbcd2b29b74016101f7ec71aaa24bdbb</a> ?</p>",
        "id": 217805087,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606247532
    },
    {
        "content": "<blockquote>\n<p>(the hash there was pulled from the previous report's end commit)</p>\n</blockquote>",
        "id": 217805101,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247541
    },
    {
        "content": "<p>not sure how much detail I can give on the determination, I guess, it's really an experience thing. we can talk through questions once you get there.</p>",
        "id": 217805210,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247616
    },
    {
        "content": "<blockquote>\n<h4>Nags requiring follow up</h4>\n<p>TODO: Nags</p>\n</blockquote>\n<p><span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> maybe I can help with that at some point</p>",
        "id": 217805377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606247696
    },
    {
        "content": "<p>the script gave me an error from github, but it seems to have pulled all the rgressions first:</p>\n<div class=\"codehilite\"><pre><span></span><code>Comparing 25a691003cf6676259ee7d4bed05b43cb6283cea to 53d19b37c514246acab020eaba9527cb97c421cf\nHTTP Error 500: Internal Server Error\n\n2020-11-24 Triage Log\n\nTODO: Summary\n\nTriage done by **@joshua**\n...\n</code></pre></div>",
        "id": 217805590,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606247807
    },
    {
        "content": "<p>hm maybe try rerunning it, I hit that error too but seems to be fixed now</p>",
        "id": 217805793,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247911
    },
    {
        "content": "<p>what about this one?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cannot import name <span class=\"s1\">'pp'</span> from <span class=\"s1\">'pprint'</span>\n</code></pre></div>",
        "id": 217805876,
        "sender_full_name": "oliver",
        "timestamp": 1606247969
    },
    {
        "content": "<p>no idea</p>",
        "id": 217805891,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247982
    },
    {
        "content": "<p>are you using python3?</p>",
        "id": 217805912,
        "sender_full_name": "simulacrum",
        "timestamp": 1606247995
    },
    {
        "content": "<p>ok yes it works on a retry, maybe github was overloaded or something</p>",
        "id": 217806059,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248054
    },
    {
        "content": "<p>since it's a shell script you can drop the call to python3 fwiw</p>",
        "id": 217806152,
        "sender_full_name": "oliver",
        "timestamp": 1606248108
    },
    {
        "content": "<p>the error is almost certainly from <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> not github, btw</p>",
        "id": 217806177,
        "sender_full_name": "simulacrum",
        "timestamp": 1606248121
    },
    {
        "content": "<p>so I changed the script to</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</code></pre></div>\n<p>and it's just working</p>",
        "id": 217806439,
        "sender_full_name": "oliver",
        "timestamp": 1606248235
    },
    {
        "content": "<p>I think pp is not used right now</p>",
        "id": 217806534,
        "sender_full_name": "simulacrum",
        "timestamp": 1606248266
    },
    {
        "content": "<p>so here is the first regression in the report: <a href=\"https://perf.rust-lang.org/compare.html?start=7d747db0d5dd8f08f2efb073e2e77a34553465a7&amp;end=8d2d0014922e9f541694bfe87642749239990e0e&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=7d747db0d5dd8f08f2efb073e2e77a34553465a7&amp;end=8d2d0014922e9f541694bfe87642749239990e0e&amp;stat=instructions:u</a><br>\nand it comes from <a href=\"https://github.com/rust-lang/rust/pull/79167\">https://github.com/rust-lang/rust/pull/79167</a>. I'm thinking maybe <a href=\"https://github.com/rust-lang/rust/pull/78785\">https://github.com/rust-lang/rust/pull/78785</a>, which changes the syscall interface?</p>",
        "id": 217806646,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248354
    },
    {
        "content": "<p>seems right</p>",
        "id": 217806805,
        "sender_full_name": "simulacrum",
        "timestamp": 1606248414
    },
    {
        "content": "<p>also a case for leaving a comment, perhaps suggesting a revert</p>",
        "id": 217806937,
        "sender_full_name": "simulacrum",
        "timestamp": 1606248480
    },
    {
        "content": "<p>regression also seems to be a 40% hit to libcore compile times</p>",
        "id": 217806989,
        "sender_full_name": "simulacrum",
        "timestamp": 1606248496
    },
    {
        "content": "<p>oh oof</p>",
        "id": 217806998,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248500
    },
    {
        "content": "<p>pinged <span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> : <a href=\"https://github.com/rust-lang/rust/pull/79167#issuecomment-733207145\">https://github.com/rust-lang/rust/pull/79167#issuecomment-733207145</a><br>\nand I'll note it in the triage log</p>",
        "id": 217807313,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248660
    },
    {
        "content": "<p>there is also this one: <a href=\"https://github.com/rust-lang/rust/pull/78461\">https://github.com/rust-lang/rust/pull/78461</a></p>",
        "id": 217807511,
        "sender_full_name": "oliver",
        "timestamp": 1606248760
    },
    {
        "content": "<p>that wasn't in the same rollup, was it?</p>",
        "id": 217807582,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248801
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=da384694807172f0ca40eca2e49a11688aba6e93&amp;end=a1a13b2bc4fa6370b9501135d97c5fe0bc401894&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=da384694807172f0ca40eca2e49a11688aba6e93&amp;end=a1a13b2bc4fa6370b9501135d97c5fe0bc401894&amp;stat=instructions:u</a></p>",
        "id": 217807586,
        "sender_full_name": "oliver",
        "timestamp": 1606248804
    },
    {
        "content": "<p>no I went back another week</p>",
        "id": 217807604,
        "sender_full_name": "oliver",
        "timestamp": 1606248813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> oh I see - I'm going off a list that the script generated , let's avoid trying to do the same triage at once</p>",
        "id": 217807622,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248829
    },
    {
        "content": "<p>which rollup are we working from?</p>",
        "id": 217807954,
        "sender_full_name": "oliver",
        "timestamp": 1606248968
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/c919f490bbcd2b29b74016101f7ec71aaa24bdbb\">c919f490bbcd2b29b74016101f7ec71aaa24bdbb</a></p>",
        "id": 217807968,
        "sender_full_name": "oliver",
        "timestamp": 1606248975
    },
    {
        "content": "<p>I don't think it makes sense for both of us to do triage at once.</p>",
        "id": 217807987,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248982
    },
    {
        "content": "<p>it will be confusing for both of us</p>",
        "id": 217808002,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606248989
    },
    {
        "content": "<p>would you like to do triage instead? ;)</p>",
        "id": 217808022,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606249002
    },
    {
        "content": "<p>I will probably grab <a href=\"https://github.com/rust-lang/rustc-perf/issues/767\">https://github.com/rust-lang/rustc-perf/issues/767</a> this weekend if someone else doesn't, it's really annoying me <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 217808529,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606249297
    },
    {
        "content": "<p>oh, also <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> if you can note pings with questions asked as nags, that'd be great</p>",
        "id": 217808631,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249351
    },
    {
        "content": "<p>I was putting them in the 'Regressions' section, I can add them to 'Nags' too</p>",
        "id": 217808678,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606249387
    },
    {
        "content": "<p>Hm not sure what you mean</p>",
        "id": 217808739,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249427
    },
    {
        "content": "<p>like this: <a href=\"/user_uploads/4715/d4e35D145maF1HE_HhcNJRFO/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/d4e35D145maF1HE_HhcNJRFO/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/d4e35D145maF1HE_HhcNJRFO/image.png\"></a></div>",
        "id": 217808815,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606249453
    },
    {
        "content": "<p>yeah so the point of the nags section is to follow up next week</p>",
        "id": 217808833,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249471
    },
    {
        "content": "<p>so I'd move that to there</p>",
        "id": 217808846,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249484
    },
    {
        "content": "<p>40% increased bootstrap times is inaccurate btw</p>",
        "id": 217808858,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249491
    },
    {
        "content": "<p>this is just libcore</p>",
        "id": 217808861,
        "sender_full_name": "simulacrum",
        "timestamp": 1606249497
    },
    {
        "content": "<p>'of libcore' is missing, yeah</p>",
        "id": 217808870,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606249502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> perf.rlo says <a href=\"https://perf.rust-lang.org/compare.html?start=20328b532336017213ccb4095740955d81060ebc&amp;end=5d5ff84130da0d74c6ece368dbe821d8f83fa526&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=20328b532336017213ccb4095740955d81060ebc&amp;end=5d5ff84130da0d74c6ece368dbe821d8f83fa526&amp;stat=instructions:u</a> was a regression, but <a href=\"https://github.com/rust-lang/rust/commit/5d5ff84130da0d74c6ece368dbe821d8f83fa526\">https://github.com/rust-lang/rust/commit/5d5ff84130da0d74c6ece368dbe821d8f83fa526</a> just stabilized an existing feature - this is a false positive, right? Should I include it in the triage log?</p>",
        "id": 217811654,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606251052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> not a big regression</p>",
        "id": 217811863,
        "sender_full_name": "simulacrum",
        "timestamp": 1606251157
    },
    {
        "content": "<p>I would skip</p>",
        "id": 217811875,
        "sender_full_name": "simulacrum",
        "timestamp": 1606251163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is there a way to bisect regressions in a rollup? <a href=\"https://github.com/rust-lang/rust/pull/79167#issuecomment-733211966\">https://github.com/rust-lang/rust/pull/79167#issuecomment-733211966</a></p>",
        "id": 217812039,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606251244
    },
    {
        "content": "<p>not really. there's some amount of tooling to make PRs per PR, but it's probably easier to put up a PR reverting getrandom PR and run perf try on that</p>",
        "id": 217812119,
        "sender_full_name": "simulacrum",
        "timestamp": 1606251302
    },
    {
        "content": "<p>ok, the regression is big enough I think I'll do that</p>",
        "id": 217812158,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606251336
    },
    {
        "content": "<p>triage is much more time consuming than I expected <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 217812714,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606251617
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79389\">https://github.com/rust-lang/rust/pull/79389</a></p>",
        "id": 217813848,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606252156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any ideas what could have caused the regression in <a href=\"https://github.com/rust-lang/rust/pull/79167\">https://github.com/rust-lang/rust/pull/79167</a> ?</p>",
        "id": 217816215,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253455
    },
    {
        "content": "<p>the perf.rlo links are useful</p>",
        "id": 217816297,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253506
    },
    {
        "content": "<p>can you give me that link?</p>",
        "id": 217816304,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253511
    },
    {
        "content": "<p>it's in my comment: <a href=\"https://perf.rust-lang.org/compare.html?start=7d747db0d5dd8f08f2efb073e2e77a34553465a7&amp;end=8d2d0014922e9f541694bfe87642749239990e0e&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=7d747db0d5dd8f08f2efb073e2e77a34553465a7&amp;end=8d2d0014922e9f541694bfe87642749239990e0e&amp;stat=instructions:u</a></p>",
        "id": 217816375,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253536
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79167#issuecomment-733207145\">https://github.com/rust-lang/rust/pull/79167#issuecomment-733207145</a></p>",
        "id": 217816379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253538
    },
    {
        "content": "<p>oh</p>",
        "id": 217816409,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253562
    },
    {
        "content": "<p>I have a theory</p>",
        "id": 217816413,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> thought it might be the new avx512 support in the stdarch bump</p>",
        "id": 217816620,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253658
    },
    {
        "content": "<p>yeah</p>",
        "id": 217816663,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253686
    },
    {
        "content": "<p>that seems right</p>",
        "id": 217816665,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253688
    },
    {
        "content": "<p>we're adding a bunch of new functions I guess?</p>",
        "id": 217816679,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253694
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> might know?</p>",
        "id": 217816745,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253736
    },
    {
        "content": "<p>that would explain why core is affected so much more than everything else, though</p>",
        "id": 217816771,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253755
    },
    {
        "content": "<p>oh hey, a zulip thread. hello :)</p>",
        "id": 217816774,
        "sender_full_name": "Mara",
        "timestamp": 1606253756
    },
    {
        "content": "<p>yeah my guess is that the perf regressions instruction wise are from increased metadata decode of libcore, which'll affect everything</p>",
        "id": 217816859,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253795
    },
    {
        "content": "<p>we should test a revert though</p>",
        "id": 217816868,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253803
    },
    {
        "content": "<p>but a 6 second regression to libcore compile times is pretty bad</p>",
        "id": 217816928,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253845
    },
    {
        "content": "<p>I am running out of time for triage so I'm going to pass that off to someone else <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 217816933,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253850
    },
    {
        "content": "<p>I still have most of the improvements to go through</p>",
        "id": 217816939,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606253857
    },
    {
        "content": "<p>I'll post a revert</p>",
        "id": 217817005,
        "sender_full_name": "simulacrum",
        "timestamp": 1606253887
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79391\">https://github.com/rust-lang/rust/pull/79391</a></p>",
        "id": 217817258,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254075
    },
    {
        "content": "<p>(I intentionally r?'d myself so I look at it in a few days during next review session)</p>",
        "id": 217817480,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254226
    },
    {
        "content": "<p>(ah okay, sorry!)</p>",
        "id": 217817534,
        "sender_full_name": "Mara",
        "timestamp": 1606254244
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know why <a href=\"https://github.com/rust-lang/rust/pull/78088\">https://github.com/rust-lang/rust/pull/78088</a> might be a performance improvement? it's not changing anything other than adding a new lint <a href=\"https://perf.rust-lang.org/compare.html?start=4ec27e4b79891b0ebc2ad71a3c4ac94f67d93f93&amp;end=74285eb3a83eac639f9c54ba8c4ccf9879b3b00a&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=4ec27e4b79891b0ebc2ad71a3c4ac94f67d93f93&amp;end=74285eb3a83eac639f9c54ba8c4ccf9879b3b00a&amp;stat=instructions:u</a></p>",
        "id": 217817617,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254293
    },
    {
        "content": "<p>maybe noise?</p>",
        "id": 217817630,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254298
    },
    {
        "content": "<p>hm that is some significant noise if so</p>",
        "id": 217817676,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254316
    },
    {
        "content": "<p>let me take a look</p>",
        "id": 217817681,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254318
    },
    {
        "content": "<p>oh no 28 commits :/</p>",
        "id": 217817727,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254339
    },
    {
        "content": "<p>it did change the desugaring for panic!</p>",
        "id": 217817870,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254398
    },
    {
        "content": "<p>but panic! is not that common in futures-rs, AFAICT</p>",
        "id": 217818076,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254499
    },
    {
        "content": "<p>my bet though is that the change in desugaring to a non-generic call (for example) is what gave us these wins</p>",
        "id": 217818172,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254555
    },
    {
        "content": "<p>ah hmm, ok, I didn't realize the implementation changed too</p>",
        "id": 217818337,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254634
    },
    {
        "content": "<p>if that makes a a big difference, then <a href=\"https://github.com/rust-lang/rust/pull/78343\">https://github.com/rust-lang/rust/pull/78343</a> should show similar improvements</p>",
        "id": 217818769,
        "sender_full_name": "Mara",
        "timestamp": 1606254866
    },
    {
        "content": "<p>that one is next on the list :)</p>",
        "id": 217818798,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254881
    },
    {
        "content": "<p>-3%</p>",
        "id": 217818807,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know why <a href=\"https://github.com/rust-lang/rust/pull/79219\">https://github.com/rust-lang/rust/pull/79219</a> would make a difference (the bootstrap bump)? doesn't perf.rlo run on stage2, not stage1?</p>",
        "id": 217818853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254907
    },
    {
        "content": "<p>stage2 yes</p>",
        "id": 217818886,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254921
    },
    {
        "content": "<p>do you have the perf diff?</p>",
        "id": 217818920,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254936
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=8ca930aa262c04a898cf64155e40a6de3ec9ba9e&amp;end=20328b532336017213ccb4095740955d81060ebc&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=8ca930aa262c04a898cf64155e40a6de3ec9ba9e&amp;end=20328b532336017213ccb4095740955d81060ebc&amp;stat=instructions:u</a></p>",
        "id": 217818934,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254942
    },
    {
        "content": "<p>might just be noise?</p>",
        "id": 217818942,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254945
    },
    {
        "content": "<p>the amount of noise is a little concerning, maybe we should turn down the sensitivity of the script?</p>",
        "id": 217818992,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606254963
    },
    {
        "content": "<p>Yeah that looks like noise</p>",
        "id": 217819085,
        "sender_full_name": "simulacrum",
        "timestamp": 1606254998
    },
    {
        "content": "<p>I think the sensitivity is fine</p>",
        "id": 217819101,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255004
    },
    {
        "content": "<p>err I think that might be the wrong link, one sec</p>",
        "id": 217819109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255010
    },
    {
        "content": "<p>that is the wrong link</p>",
        "id": 217819126,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255023
    },
    {
        "content": "<p>ahhh I have too many tabs</p>",
        "id": 217819155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> would it be possible to show the name of the commit on perf.rlo?</p>",
        "id": 217819175,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255051
    },
    {
        "content": "<p>ideally the PR, but I'm sure that's harder</p>",
        "id": 217819193,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255060
    },
    {
        "content": "<p>not easily</p>",
        "id": 217819200,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255063
    },
    {
        "content": "<p>the PR number is shown though?</p>",
        "id": 217819207,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255067
    },
    {
        "content": "<p>ah ok, so it is</p>",
        "id": 217819220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255077
    },
    {
        "content": "<p>ok I think I am out of time and starting to make mistakes, unfortunately I only got through half the list</p>",
        "id": 217819288,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255100
    },
    {
        "content": "<p>please post a PR with a line or whatever</p>",
        "id": 217819343,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255139
    },
    {
        "content": "<p>I can finish up</p>",
        "id": 217819346,
        "sender_full_name": "simulacrum",
        "timestamp": 1606255142
    },
    {
        "content": "<p>thanks! opened <a href=\"https://github.com/rust-lang/rustc-perf/pull/799\">https://github.com/rust-lang/rustc-perf/pull/799</a></p>",
        "id": 217819401,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606255181
    },
    {
        "content": "<p>ok finished that and posted twir</p>",
        "id": 217825637,
        "sender_full_name": "simulacrum",
        "timestamp": 1606259162
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-11-24.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-11-24.md</a></p>\n<p>It's odd that my PackedFingerprint change has such different results from the perf run in the PR. I wouldn't have wanted to merge it if it were that bad. :)</p>\n<p>But I also can't reproduce the poor results locally using the same commits as in the triage run. Are there differences between the perf runs triggered by rust-timer and the ones done for the triage report? It's totally possible that merges since the PR perf run account for changes, of course, and that I can't reproduce the results because my system is different. But it warrants asking about at least.</p>",
        "id": 217834220,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1606266230
    },
    {
        "content": "<p>Shouldn't be any difference</p>",
        "id": 217836156,
        "sender_full_name": "simulacrum",
        "timestamp": 1606268125
    },
    {
        "content": "<p>Which PR number was it?</p>",
        "id": 217836167,
        "sender_full_name": "simulacrum",
        "timestamp": 1606268149
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78646\">https://github.com/rust-lang/rust/pull/78646</a></p>",
        "id": 217836979,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1606269154
    },
    {
        "content": "<p>Hm yeah, it seems like the kind of change that'll be pretty sensitive</p>",
        "id": 217838543,
        "sender_full_name": "simulacrum",
        "timestamp": 1606271191
    },
    {
        "content": "<p>Definitely feels pretty surprising though</p>",
        "id": 217838551,
        "sender_full_name": "simulacrum",
        "timestamp": 1606271207
    },
    {
        "content": "<p>I noticed this issue: <a href=\"https://github.com/rust-lang/rust/issues/48155\">https://github.com/rust-lang/rust/issues/48155</a><br>\nmight be retired?</p>",
        "id": 218024731,
        "sender_full_name": "oliver",
        "timestamp": 1606411896
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/47665\">https://github.com/rust-lang/rust/issues/47665</a></p>",
        "id": 218024821,
        "sender_full_name": "oliver",
        "timestamp": 1606411961
    },
    {
        "content": "<p>or are legacy regressions still considered an open concern?</p>",
        "id": 218025181,
        "sender_full_name": "oliver",
        "timestamp": 1606412262
    },
    {
        "content": "<p>Probably fine to close but I do not have bandwidth myself. Would be great to fork that into separate topics (triage is intended just for the weekly triage)</p>",
        "id": 218468435,
        "sender_full_name": "simulacrum",
        "timestamp": 1606850375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> would either of you be up for doing triage? I find myself with little time left today for Rust -- if not though we can miss or I'll get to it on Thursday I guess.</p>",
        "id": 218468548,
        "sender_full_name": "simulacrum",
        "timestamp": 1606850412
    },
    {
        "content": "<p>I probably don't have time, it took me almost 2 hours last time to get through only half the log <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218468623,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606850445
    },
    {
        "content": "<p>I can do it tomorrow morning European time if no one else picks it up</p>",
        "id": 218471874,
        "sender_full_name": "rylev",
        "timestamp": 1606852072
    },
    {
        "content": "<p>I'll be around as well if someone wants to peek into those legacy issues<br>\nor just move forward with the weekly triages following the expectation</p>",
        "id": 218472316,
        "sender_full_name": "oliver",
        "timestamp": 1606852294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> did you get a chance to take a look here? I unfortunately am unlikely to find time today and tomorrow, I think</p>",
        "id": 218599044,
        "sender_full_name": "simulacrum",
        "timestamp": 1606933750
    },
    {
        "content": "<p>I did not <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span>I can do it first thing tomorrow though if it's not done by then</p>",
        "id": 218601120,
        "sender_full_name": "rylev",
        "timestamp": 1606934664
    },
    {
        "content": "<p>OK, that would be good.</p>",
        "id": 218621158,
        "sender_full_name": "simulacrum",
        "timestamp": 1606943948
    },
    {
        "content": "<p>I will not have time.</p>",
        "id": 218621163,
        "sender_full_name": "simulacrum",
        "timestamp": 1606943951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> the <a href=\"https://perf.rust-lang.org/compare.html?start=0d9651648d3b741e81ba7042e49a07b78a441517&amp;end=aefcf1f3427a5e522a8c665d7e25529cf971bc93&amp;stat=instructions:u\">perf results</a> for <a href=\"https://github.com/rust-lang/rust/pull/79427\">#79427</a> look possibly legit, but given the change was so small and is actually doing _more_, so this is noise right?</p>",
        "id": 218680040,
        "sender_full_name": "rylev",
        "timestamp": 1606994291
    },
    {
        "content": "<p>Yes I think noise is likely</p>",
        "id": 218680179,
        "sender_full_name": "simulacrum",
        "timestamp": 1606994392
    },
    {
        "content": "<p>Seems odd for opt to be affected better than check if it wasn't for a typeck change</p>",
        "id": 218680274,
        "sender_full_name": "simulacrum",
        "timestamp": 1606994437
    },
    {
        "content": "<p>In this case, best to remove it completely or to leave it and note that it's likely noise?</p>",
        "id": 218680565,
        "sender_full_name": "rylev",
        "timestamp": 1606994612
    },
    {
        "content": "<p>I'd remove</p>",
        "id": 218680720,
        "sender_full_name": "simulacrum",
        "timestamp": 1606994697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> looks like <a href=\"https://github.com/rust-lang/rust/pull/79318\">this PR</a> caused a decent sized regression (avg 4%) in the externs stress test. A perf run was run in the PR but no one really commented on it. Is it worth bringing to their attention again?</p>",
        "id": 218683943,
        "sender_full_name": "rylev",
        "timestamp": 1606996849
    },
    {
        "content": "<p>Especially considering this change has to do with extern items, I think it deserves some attention</p>",
        "id": 218683991,
        "sender_full_name": "rylev",
        "timestamp": 1606996880
    },
    {
        "content": "<p>Yeah I would</p>",
        "id": 218684094,
        "sender_full_name": "simulacrum",
        "timestamp": 1606996924
    },
    {
        "content": "<p>I think the externs benchmark in this case is more important than the deeply nested async, too</p>",
        "id": 218684132,
        "sender_full_name": "simulacrum",
        "timestamp": 1606996949
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/218684132\">said</a>:</p>\n<blockquote>\n<p>I think the externs benchmark in this case is more important than the deeply nested async, too</p>\n</blockquote>\n<p>Can you explain more why you think that. I agree with you but want to check my intuition against yours</p>",
        "id": 218684315,
        "sender_full_name": "rylev",
        "timestamp": 1606997079
    },
    {
        "content": "<p>Deeply nested is more of a stress test</p>",
        "id": 218684692,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997373
    },
    {
        "content": "<p>Whereas IIRC externs is somewhat realistic</p>",
        "id": 218684706,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997385
    },
    {
        "content": "<p>(just not common in quantity)</p>",
        "id": 218684713,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997394
    },
    {
        "content": "<p>i.e. externs is scaling something naturally whereas deeply nested feels like it's sort of not</p>",
        "id": 218684789,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997436
    },
    {
        "content": "<p>Yea externs is normal usage just at an extreme amount</p>",
        "id": 218684794,
        "sender_full_name": "rylev",
        "timestamp": 1606997443
    },
    {
        "content": "<p>deeply nested async is quite natural apparently</p>",
        "id": 218685154,
        "sender_full_name": "lcnr",
        "timestamp": 1606997728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> how do you feel about moving a PR that was originally categorized as \"mixed\" to \"regression\" when the regression is _much_ larger than the gain?</p>",
        "id": 218685290,
        "sender_full_name": "rylev",
        "timestamp": 1606997816
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 218685330,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997840
    },
    {
        "content": "<p>I think we should eagerly do so in either regression or improvement</p>",
        "id": 218685350,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> to some extent, but I worry that this PR seems like it shouldn't really affect async but should affect externs? Maybe I misread</p>",
        "id": 218685454,
        "sender_full_name": "simulacrum",
        "timestamp": 1606997901
    },
    {
        "content": "<p>that's true</p>",
        "id": 218686092,
        "sender_full_name": "lcnr",
        "timestamp": 1606998360
    },
    {
        "content": "<p>will add a short comment to the PR explaining my stance here</p>",
        "id": 218686140,
        "sender_full_name": "lcnr",
        "timestamp": 1606998372
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 218686529,
        "sender_full_name": "simulacrum",
        "timestamp": 1606998650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can I get your eyes on <a href=\"https://perf.rust-lang.org/compare.html?start=d37afad0cc87bf709ad10c85319296ac53030f03&amp;end=a094ff9590b83c8f94d898f92c2964a5803ded06&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=d37afad0cc87bf709ad10c85319296ac53030f03&amp;end=a094ff9590b83c8f94d898f92c2964a5803ded06&amp;stat=instructions:u</a> I'm not sure what to make of it. This is definitely a mixed result. The change was in the pass arguments of 2*size_of::&lt;usize&gt; in registers instead of by reference. I'm not sure what to write about it. thoughts?</p>",
        "id": 218687510,
        "sender_full_name": "rylev",
        "timestamp": 1606999278
    },
    {
        "content": "<p>For a change like that I think looking at instructions is going to be a bit odd</p>",
        "id": 218687560,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999309
    },
    {
        "content": "<p>wall times are pretty mixed too, though</p>",
        "id": 218687631,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999338
    },
    {
        "content": "<p>my guess is that for most workloads there is no major effect</p>",
        "id": 218687676,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999367
    },
    {
        "content": "<p>it seems likely to be more significant in non-compiler benchmarks</p>",
        "id": 218687707,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999384
    },
    {
        "content": "<p>most parts of the compiler are either passing huge structs around (not going to fit in registers anyway) or passing a pointer (to an interned struct, usually)</p>",
        "id": 218687735,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999410
    },
    {
        "content": "<p>I like that analysis. :-) I'll borrow that</p>",
        "id": 218687872,
        "sender_full_name": "rylev",
        "timestamp": 1606999492
    },
    {
        "content": "<p>Or they pass a fat pointer, which always gets passed in two registers even before this change.</p>",
        "id": 218687922,
        "sender_full_name": "bjorn3",
        "timestamp": 1606999539
    },
    {
        "content": "<p>(Though fat pointers are <em>super</em> rare in the compiler)</p>",
        "id": 218688062,
        "sender_full_name": "simulacrum",
        "timestamp": 1606999631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any nags I should be aware of? I believe I'm done with the triage report</p>",
        "id": 218688597,
        "sender_full_name": "rylev",
        "timestamp": 1606999940
    },
    {
        "content": "<p>In any case, here's the first draft: <a href=\"https://github.com/rust-lang/rustc-perf/pull/808\">https://github.com/rust-lang/rustc-perf/pull/808</a></p>",
        "id": 218689523,
        "sender_full_name": "rylev",
        "timestamp": 1607000550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> nothing from me personally, there might be some in last report, that's where you should look</p>",
        "id": 218690003,
        "sender_full_name": "simulacrum",
        "timestamp": 1607000824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">Ryan Levick</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/218689523\">said</a>:</p>\n<blockquote>\n<p>In any case, here's the first draft: <a href=\"https://github.com/rust-lang/rustc-perf/pull/808\">https://github.com/rust-lang/rustc-perf/pull/808</a></p>\n</blockquote>\n<p>thanks <span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> :)</p>",
        "id": 218693977,
        "sender_full_name": "apiraino",
        "timestamp": 1607003191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> this is merged btw so you can link to it (<a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-03.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-03.md</a>)</p>",
        "id": 218701196,
        "sender_full_name": "simulacrum",
        "timestamp": 1607006481
    },
    {
        "content": "<p>okay going to try to spend an hour on triage and see how much I can get done</p>",
        "id": 219209677,
        "sender_full_name": "simulacrum",
        "timestamp": 1607436240
    },
    {
        "content": "<p>okay, quiet week -- finished up</p>",
        "id": 219213634,
        "sender_full_name": "simulacrum",
        "timestamp": 1607438372
    },
    {
        "content": "<p>making PR to TWIR, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> perf is at <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-08.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-08.md</a> but we're still backlogged so we probably want to schedule something with <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> to talk about the most productive way to process these (maybe just highlighting nags? not sure)</p>",
        "id": 219213791,
        "sender_full_name": "simulacrum",
        "timestamp": 1607438440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I’ll do triage today</p>",
        "id": 219962937,
        "sender_full_name": "rylev",
        "timestamp": 1608030061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> that is amazing! :)</p>",
        "id": 219972265,
        "sender_full_name": "simulacrum",
        "timestamp": 1608036021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm getting a 500 when generating the report:</p>\n<div class=\"codehilite\"><pre><span></span><code>Failed to make request for e99a89c7c0b6865a680a2d6169847ec8acc001d3 and 99baddb57c0a950c1af8d125dc470894ddf052a7\nHTTP Error 500: Internal Server Error\nURL: https://perf.rust-lang.org/perf/get\nData: could not find end commit for bound Commit(&quot;99baddb57c0a950c1af8d125dc470894ddf052a7&quot;)\n</code></pre></div>",
        "id": 219991522,
        "sender_full_name": "rylev",
        "timestamp": 1608044868
    },
    {
        "content": "<p>Any ideas before I dive in?</p>",
        "id": 219991535,
        "sender_full_name": "rylev",
        "timestamp": 1608044877
    },
    {
        "content": "<p>ah yeah</p>",
        "id": 219991539,
        "sender_full_name": "simulacrum",
        "timestamp": 1608044882
    },
    {
        "content": "<p>we haven't finished that commit probably</p>",
        "id": 219991594,
        "sender_full_name": "simulacrum",
        "timestamp": 1608044893
    },
    {
        "content": "<p>Should I just ignore the error then?</p>",
        "id": 219991646,
        "sender_full_name": "rylev",
        "timestamp": 1608044924
    },
    {
        "content": "<p>so find the parent and specify that as the end instead</p>",
        "id": 219991664,
        "sender_full_name": "simulacrum",
        "timestamp": 1608044934
    },
    {
        "content": "<p>I think that's the implicit behavior though so yes you can likely just ignore</p>",
        "id": 219991699,
        "sender_full_name": "simulacrum",
        "timestamp": 1608044952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> I think you forgot a link to the perf results in <a href=\"https://github.com/rust-lang/rust/pull/78837#issuecomment-745380762\">https://github.com/rust-lang/rust/pull/78837#issuecomment-745380762</a></p>",
        "id": 219998226,
        "sender_full_name": "simulacrum",
        "timestamp": 1608047571
    },
    {
        "content": "<p>Whoops! Thanks!</p>",
        "id": 219998359,
        "sender_full_name": "rylev",
        "timestamp": 1608047628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thoughts on <a href=\"https://perf.rust-lang.org/compare.html?start=9eb3a7ceafd1e2c1924177caa18c7cc0c25b413e&amp;end=5bd9b60333b3dc0a51e7a5607cd1e0d537a9f718&amp;stat=instructions:u\">this regression</a> caused by <a href=\"https://github.com/rust-lang/rust/pull/79553\">this pr</a> which seems to be behind a feature flag?</p>",
        "id": 219998933,
        "sender_full_name": "rylev",
        "timestamp": 1608047837
    },
    {
        "content": "<p>hm</p>",
        "id": 219999104,
        "sender_full_name": "simulacrum",
        "timestamp": 1608047889
    },
    {
        "content": "<p>I think the changes in that PR are not really gated on the flag</p>",
        "id": 219999140,
        "sender_full_name": "simulacrum",
        "timestamp": 1608047902
    },
    {
        "content": "<p>i.e. we always collect more data just don't use it perhaps?</p>",
        "id": 219999181,
        "sender_full_name": "simulacrum",
        "timestamp": 1608047915
    },
    {
        "content": "<p>are we sure the regressions on <a href=\"https://github.com/rust-lang/rust/pull/79169#issuecomment-745388674\">https://github.com/rust-lang/rust/pull/79169#issuecomment-745388674</a> are real ? those tests are marked as known to have variance</p>",
        "id": 220004169,
        "sender_full_name": "lqd",
        "timestamp": 1608049677
    },
    {
        "content": "<p>That's a good question. I thought that high variance meant that each individually might vary, but if all show a particular change in the same direction it's likely to be an actual issue. If that's not the case then I think we should consider removing the test, because what's the point?</p>",
        "id": 220004468,
        "sender_full_name": "rylev",
        "timestamp": 1608049784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is there an issue open for the \"stdarch expansion causing a 40% libcore compile time regression\" you mentioned in last weeks report? There was a regression caused by updating the stdarch submodule this week, and I'm not sure if they're related.</p>",
        "id": 220007134,
        "sender_full_name": "rylev",
        "timestamp": 1608050779
    },
    {
        "content": "<p>no there isn't</p>",
        "id": 220007191,
        "sender_full_name": "simulacrum",
        "timestamp": 1608050817
    },
    {
        "content": "<p>I assume then I should mention that issue again since I don't believe it's been addressed, right?</p>",
        "id": 220007404,
        "sender_full_name": "rylev",
        "timestamp": 1608050906
    },
    {
        "content": "<p>yes</p>",
        "id": 220007536,
        "sender_full_name": "simulacrum",
        "timestamp": 1608050979
    },
    {
        "content": "<p>PR is up: <a href=\"https://github.com/rust-lang/rustc-perf/pull/811\">https://github.com/rust-lang/rustc-perf/pull/811</a></p>",
        "id": 220011809,
        "sender_full_name": "rylev",
        "timestamp": 1608052784
    },
    {
        "content": "<p>Got an update I'm pushing now</p>",
        "id": 220012000,
        "sender_full_name": "rylev",
        "timestamp": 1608052858
    },
    {
        "content": "<p>The stdarch regressions are caused by the current approach to implementing \"intrinsics\" with const arguments and will continue whenever new ones are added to stdarch.</p>",
        "id": 220012862,
        "sender_full_name": "tm",
        "timestamp": 1608053206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/220012862\">said</a>:</p>\n<blockquote>\n<p>The stdarch regressions are caused by the current approach to implementing \"intrinsics\" with const arguments and will continue whenever new ones are added to stdarch.</p>\n</blockquote>\n<p>that seems interesting can you elaborate here?</p>",
        "id": 220013220,
        "sender_full_name": "lcnr",
        "timestamp": 1608053365
    },
    {
        "content": "<p>would the impact be smaller if we used const generics?</p>",
        "id": 220013258,
        "sender_full_name": "lcnr",
        "timestamp": 1608053382
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/220013258\">said</a>:</p>\n<blockquote>\n<p>would the impact be smaller if we used const generics?</p>\n</blockquote>\n<p>Yes!</p>",
        "id": 220013382,
        "sender_full_name": "tm",
        "timestamp": 1608053422
    },
    {
        "content": "<p>If an intrinsic requires a const argument that takes values in range 0..255, currently the implementation will contain a 256 calls to it with 256 different constant values</p>",
        "id": 220013637,
        "sender_full_name": "tm",
        "timestamp": 1608053524
    },
    {
        "content": "<p>that seems unfortunate <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 220014553,
        "sender_full_name": "lcnr",
        "timestamp": 1608053906
    },
    {
        "content": "<p>can we/you switch to const generics here</p>",
        "id": 220014562,
        "sender_full_name": "lcnr",
        "timestamp": 1608053915
    },
    {
        "content": "<p>or is <code>min_const_generics</code> not powerful enough here?</p>",
        "id": 220014586,
        "sender_full_name": "lcnr",
        "timestamp": 1608053935
    },
    {
        "content": "<p>syntactically those are normal functions where some of arguments are required to be constants at call site</p>",
        "id": 220014946,
        "sender_full_name": "tm",
        "timestamp": 1608054089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> this sounds like this is most likely the reason for the perf regression when updating stdarch then. I'll add this to my comment on the PR.</p>",
        "id": 220015259,
        "sender_full_name": "rylev",
        "timestamp": 1608054230
    },
    {
        "content": "<p>It also _sounds_ like min_const_generics should fix this if all the const arguments are indeed numbers</p>",
        "id": 220015405,
        "sender_full_name": "rylev",
        "timestamp": 1608054298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> for comparison revert of previous stdarch update: <a href=\"https://perf.rust-lang.org/compare.html?start=74459930a951db7a68b3ecd86f3b796339e59fe5&amp;end=490cd5934a606d79cc82c5d16e4d71e0d9aa6dd5\">https://perf.rust-lang.org/compare.html?start=74459930a951db7a68b3ecd86f3b796339e59fe5&amp;end=490cd5934a606d79cc82c5d16e4d71e0d9aa6dd5</a></p>",
        "id": 220017919,
        "sender_full_name": "tm",
        "timestamp": 1608055376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> merged - can you post a twir link?</p>",
        "id": 220018188,
        "sender_full_name": "simulacrum",
        "timestamp": 1608055481
    },
    {
        "content": "<p>er twir PR</p>",
        "id": 220018318,
        "sender_full_name": "simulacrum",
        "timestamp": 1608055543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> small change: <a href=\"https://github.com/rust-lang/rustc-perf/pull/812\">https://github.com/rust-lang/rustc-perf/pull/812</a></p>",
        "id": 220023888,
        "sender_full_name": "rylev",
        "timestamp": 1608058037
    },
    {
        "content": "<p>Going to try and run triage in a bit</p>",
        "id": 220795929,
        "sender_full_name": "simulacrum",
        "timestamp": 1608735659
    },
    {
        "content": "<p>well - going to try to do PR review first</p>",
        "id": 220804831,
        "sender_full_name": "simulacrum",
        "timestamp": 1608741796
    },
    {
        "content": "<p>but hopefully will find time today or tomorrow, don't want too much backlog to build up</p>",
        "id": 220804853,
        "sender_full_name": "simulacrum",
        "timestamp": 1608741818
    },
    {
        "content": "<p>ok kicking off triage</p>",
        "id": 220871150,
        "sender_full_name": "simulacrum",
        "timestamp": 1608818068
    },
    {
        "content": "<p>pushed initial results, filing TWIR PR</p>",
        "id": 220872549,
        "sender_full_name": "simulacrum",
        "timestamp": 1608819770
    },
    {
        "content": "<p>done</p>",
        "id": 220872640,
        "sender_full_name": "simulacrum",
        "timestamp": 1608819869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-24.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-12-24.md</a></p>",
        "id": 220872650,
        "sender_full_name": "simulacrum",
        "timestamp": 1608819893
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=9310aff66c3a9d79c92f621c7f7ca3f87ea9f7de&amp;end=793931f4220297f20116d61ac1a76c74b0fa3311&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=9310aff66c3a9d79c92f621c7f7ca3f87ea9f7de&amp;end=793931f4220297f20116d61ac1a76c74b0fa3311&amp;stat=wall-time</a><br>\nrecovered some of core build time regression, but it also includes 132 new intrinsics, so results are somewhat mixed  :-(</p>",
        "id": 220874870,
        "sender_full_name": "tm",
        "timestamp": 1608822717
    },
    {
        "content": "<p>Btw, up to <a href=\"https://perf.rust-lang.org/compare.html?start=3d10d3e49d9784ba3833ccf5d56d0a4d15bb36f6&amp;end=49b315123e6adb35024437ef7ba408456771c062&amp;stat=max-rss\">13.5% reduction</a> in memory usage and positive effects on other stats from <a href=\"https://github.com/rust-lang/rust/issues/79589\">#79589</a> this week. On large crates even--up to 250MB reduction on style-servo. Pretty happy about that, even if it only affects incremental. <span aria-label=\"happy\" class=\"emoji emoji-1f600\" role=\"img\" title=\"happy\">:happy:</span></p>",
        "id": 220875131,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1608823035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306073\">@Tyson Nottingham</span> congratulations :D</p>",
        "id": 220879079,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608827642
    },
    {
        "content": "<p>that's awesome</p>",
        "id": 220879110,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608827646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thanks for doing this this week! I should be able to do the next one on Tuesday</p>",
        "id": 220976029,
        "sender_full_name": "rylev",
        "timestamp": 1609011042
    },
    {
        "content": "<p>Ok thanks!</p>",
        "id": 220976180,
        "sender_full_name": "simulacrum",
        "timestamp": 1609011290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm going to do the triage report now</p>",
        "id": 221133056,
        "sender_full_name": "rylev",
        "timestamp": 1609247545
    },
    {
        "content": "<p>Great! Feel free to ping with questions, I'm mostly around</p>",
        "id": 221133078,
        "sender_full_name": "simulacrum",
        "timestamp": 1609247565
    },
    {
        "content": "<p>Strange that 3 of the of \"regressions\" and 2 \"improvements\" were in coercisions-debug. Since that benchmark is marked as high variance, I didn't include them in the triage report, but I find it interesting that three of the benchmarks caused the same high variance benchmark to show as a regressions or improvements</p>",
        "id": 221134744,
        "sender_full_name": "rylev",
        "timestamp": 1609249161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm assuming closed PRs (like <a href=\"https://github.com/rust-lang/rust/pull/80209\">https://github.com/rust-lang/rust/pull/80209</a>) should not be included, right?</p>",
        "id": 221134998,
        "sender_full_name": "rylev",
        "timestamp": 1609249385
    },
    {
        "content": "<p>Yeah that benchmark is pretty noisy.</p>",
        "id": 221135024,
        "sender_full_name": "simulacrum",
        "timestamp": 1609249406
    },
    {
        "content": "<p>It should be included</p>",
        "id": 221135046,
        "sender_full_name": "simulacrum",
        "timestamp": 1609249432
    },
    {
        "content": "<p>I guess the squashing support in bors breaks GitHub, that's annoying :/</p>",
        "id": 221135104,
        "sender_full_name": "simulacrum",
        "timestamp": 1609249448
    },
    {
        "content": "<p>ah I see, it was merged by bors</p>",
        "id": 221135370,
        "sender_full_name": "rylev",
        "timestamp": 1609249693
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any nags you know about? Nothing new needs to be followed up on and I re-added the stdarch nag as I believe that's still an issue.</p>",
        "id": 221136055,
        "sender_full_name": "rylev",
        "timestamp": 1609250453
    },
    {
        "content": "<p>No I don't think so, yeah no progress on stdarch</p>",
        "id": 221136067,
        "sender_full_name": "simulacrum",
        "timestamp": 1609250475
    },
    {
        "content": "<p>I must've forgotten to copy it last week</p>",
        "id": 221136075,
        "sender_full_name": "simulacrum",
        "timestamp": 1609250482
    },
    {
        "content": "<p>Ah no you didn't. No need to worry</p>",
        "id": 221136218,
        "sender_full_name": "rylev",
        "timestamp": 1609250620
    },
    {
        "content": "<p>The build times of core / stdarch have been reduced by 9%, but fundamental issues with current implementation are still there.</p>",
        "id": 221136468,
        "sender_full_name": "tm",
        "timestamp": 1609250818
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rustc-perf/pull/814\">https://github.com/rust-lang/rustc-perf/pull/814</a></p>",
        "id": 221136489,
        "sender_full_name": "rylev",
        "timestamp": 1609250844
    },
    {
        "content": "<p>Merged, if you can file a TWIR PR that would be great</p>",
        "id": 221136569,
        "sender_full_name": "simulacrum",
        "timestamp": 1609250942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> is there a chance you can do perf triage this week? If not I can likely find time this morning.</p>",
        "id": 221645318,
        "sender_full_name": "simulacrum",
        "timestamp": 1609853185
    },
    {
        "content": "<p>Yep I can do it in ~30 minutes</p>",
        "id": 221645352,
        "sender_full_name": "rylev",
        "timestamp": 1609853211
    },
    {
        "content": "<p>Great, thanks!</p>",
        "id": 221647155,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> started looking into. FYI: the coercions-debug benchmark is really acting up. there are 6 regressions this week all of which only show ~1% regression on that benchmark which is marked as volatile</p>",
        "id": 221647410,
        "sender_full_name": "rylev",
        "timestamp": 1609854580
    },
    {
        "content": "<p>Hm, ok. Let me see if they're noise on the graph I guess</p>",
        "id": 221647507,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854629
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/oANuXkqkZDh3hswdPByHcriF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/oANuXkqkZDh3hswdPByHcriF/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/oANuXkqkZDh3hswdPByHcriF/image.png\"></a></div>",
        "id": 221647726,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854755
    },
    {
        "content": "<p>seems like noise to me...</p>",
        "id": 221647796,
        "sender_full_name": "rylev",
        "timestamp": 1609854818
    },
    {
        "content": "<p>yeah so looks like there was an improvement on incr patched/unchanged builds</p>",
        "id": 221647802,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854826
    },
    {
        "content": "<p>but everything else looks like noise to me, largely</p>",
        "id": 221647808,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854837
    },
    {
        "content": "<p>we should probably try to compare cachegrind diff or something, there's probably some nondeterminism in the compiler</p>",
        "id": 221647952,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854932
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/r1QfCNDngeCoZZr59u9mcIO_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/r1QfCNDngeCoZZr59u9mcIO_/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/r1QfCNDngeCoZZr59u9mcIO_/image.png\"></a></div>",
        "id": 221647958,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854935
    },
    {
        "content": "<p>seems to have been quite noisy for a while</p>",
        "id": 221647964,
        "sender_full_name": "simulacrum",
        "timestamp": 1609854943
    },
    {
        "content": "<p>(I'll file an issue on this)</p>",
        "id": 221649844,
        "sender_full_name": "simulacrum",
        "timestamp": 1609856050
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/issues/818\">https://github.com/rust-lang/rustc-perf/issues/818</a></p>",
        "id": 221651882,
        "sender_full_name": "simulacrum",
        "timestamp": 1609857187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what's your preferred way of trying to figure out which PR in a rollup is most likely the cause of a perf regression? I see a few in here that could be to blame: <a href=\"https://github.com/rust-lang/rust/pull/80708\">https://github.com/rust-lang/rust/pull/80708</a></p>",
        "id": 221654200,
        "sender_full_name": "rylev",
        "timestamp": 1609858286
    },
    {
        "content": "<p>oh I got completely distracted sorry</p>",
        "id": 221657856,
        "sender_full_name": "simulacrum",
        "timestamp": 1609859905
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> what is the perf compare link?</p>",
        "id": 221657887,
        "sender_full_name": "simulacrum",
        "timestamp": 1609859929
    },
    {
        "content": "<p>I usually can better judge knowing what regressed</p>",
        "id": 221657904,
        "sender_full_name": "simulacrum",
        "timestamp": 1609859940
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=9919ad6e9ed113557c68c430de2e0f434e4f5b6e&amp;end=f412fb56b8d11c168e7ee49ee74e79c4ab2e5637&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=9919ad6e9ed113557c68c430de2e0f434e4f5b6e&amp;end=f412fb56b8d11c168e7ee49ee74e79c4ab2e5637&amp;stat=instructions:u</a></p>",
        "id": 221657995,
        "sender_full_name": "rylev",
        "timestamp": 1609859980
    },
    {
        "content": "<p>Its mixed</p>",
        "id": 221658033,
        "sender_full_name": "rylev",
        "timestamp": 1609859996
    },
    {
        "content": "<p>m</p>",
        "id": 221658282,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860116
    },
    {
        "content": "<p>I think it's basically just a regression, I would ignore the incr improvements</p>",
        "id": 221658341,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860129
    },
    {
        "content": "<p>I am honestly not seeing anything relevant</p>",
        "id": 221658609,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860275
    },
    {
        "content": "<p>it's not the largest regression</p>",
        "id": 221658624,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860283
    },
    {
        "content": "<p>I think I'd suspect  make sure that promoteds which fail to evaluate in dead const code behave correctly <a href=\"https://github.com/rust-lang/rust/issues/80696\">#80696</a></p>",
        "id": 221658679,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860306
    },
    {
        "content": "<p>that was my first guess, but it is just a test case</p>",
        "id": 221658724,
        "sender_full_name": "tm",
        "timestamp": 1609860340
    },
    {
        "content": "<p>Why would you ignore the improvements? 1% is small, but it's still something, no?</p>",
        "id": 221658960,
        "sender_full_name": "rylev",
        "timestamp": 1609860441
    },
    {
        "content": "<p>Yea I'm not sure why a test case would cause a regression...</p>",
        "id": 221659065,
        "sender_full_name": "rylev",
        "timestamp": 1609860484
    },
    {
        "content": "<p>oh I missed that it was a test case</p>",
        "id": 221659126,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860515
    },
    {
        "content": "<p>I'm saying that improvements in incremental are likely for a different reason than the regression  on async</p>",
        "id": 221659170,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860544
    },
    {
        "content": "<p>What about <a href=\"https://github.com/rust-lang/rust/pull/80637\">https://github.com/rust-lang/rust/pull/80637</a></p>",
        "id": 221659239,
        "sender_full_name": "rylev",
        "timestamp": 1609860593
    },
    {
        "content": "<p>I initially concluded that would only run on error</p>",
        "id": 221659341,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860636
    },
    {
        "content": "<p>but maybe the module path is misleading</p>",
        "id": 221659354,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860643
    },
    {
        "content": "<p>Move variable into the only branch where it is relevant <a href=\"https://github.com/rust-lang/rust/issues/80643\">#80643</a>  seems potentially more likely, but that is in metadata decode and async has no deps so seems unlikely</p>",
        "id": 221659434,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860690
    },
    {
        "content": "<p>I think benchmarking a revert of 80637 is probably our best bet</p>",
        "id": 221659461,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860708
    },
    {
        "content": "<p>Should I just push a PR with a revert?</p>",
        "id": 221659630,
        "sender_full_name": "rylev",
        "timestamp": 1609860780
    },
    {
        "content": "<p>sure, or can be done separately from triage</p>",
        "id": 221659747,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860838
    },
    {
        "content": "<p>feel free to just leave a nag</p>",
        "id": 221659793,
        "sender_full_name": "simulacrum",
        "timestamp": 1609860845
    },
    {
        "content": "<p>I'll do it once I push the triage</p>",
        "id": 221659836,
        "sender_full_name": "rylev",
        "timestamp": 1609860871
    },
    {
        "content": "<p>FYI: there was another rollup (<a href=\"https://github.com/rust-lang/rust/issues/80530\">https://github.com/rust-lang/rust/issues/80530</a>) which had a mixed perf impact: <a href=\"https://perf.rust-lang.org/compare.html?start=e2267046859c9ceb932abc983561d53a117089f6&amp;end=9775ffef2a4c3a36cadb58b72ea60cefb92c86ae&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=e2267046859c9ceb932abc983561d53a117089f6&amp;end=9775ffef2a4c3a36cadb58b72ea60cefb92c86ae&amp;stat=instructions:u</a></p>",
        "id": 221659995,
        "sender_full_name": "rylev",
        "timestamp": 1609860950
    },
    {
        "content": "<p>Going to look into it now</p>",
        "id": 221660009,
        "sender_full_name": "rylev",
        "timestamp": 1609860957
    },
    {
        "content": "<p>i'd guess <a href=\"https://github.com/rust-lang/rust/pull/80458\">https://github.com/rust-lang/rust/pull/80458</a></p>",
        "id": 221660136,
        "sender_full_name": "simulacrum",
        "timestamp": 1609861008
    },
    {
        "content": "<p>Yea that's my guess as well</p>",
        "id": 221660230,
        "sender_full_name": "rylev",
        "timestamp": 1609861065
    },
    {
        "content": "<p>I will be in meetings for a few hours starting in ~20 minutes, but should merge later today. feel free to merge/push the triage report without me - I think you should have rights.</p>",
        "id": 221660891,
        "sender_full_name": "simulacrum",
        "timestamp": 1609861325
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/820\">https://github.com/rust-lang/rustc-perf/pull/820</a></p>",
        "id": 221661029,
        "sender_full_name": "rylev",
        "timestamp": 1609861399
    },
    {
        "content": "<p>Here are the reverts: <a href=\"https://github.com/rust-lang/rust/pull/80727\">https://github.com/rust-lang/rust/pull/80727</a> <a href=\"https://github.com/rust-lang/rust/pull/80728\">https://github.com/rust-lang/rust/pull/80728</a></p>",
        "id": 221664473,
        "sender_full_name": "rylev",
        "timestamp": 1609862934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> neither of the reverts had any effect on perf. I suppose we need to find new possibilities for the perf impact inside the rollups.</p>",
        "id": 221925382,
        "sender_full_name": "rylev",
        "timestamp": 1610015028
    },
    {
        "content": "<p>Seems right. Might be worth trying to revert rollup itself, to make sure it's not noise.</p>",
        "id": 221936152,
        "sender_full_name": "simulacrum",
        "timestamp": 1610022721
    },
    {
        "content": "<p>@<strong>Ryan Levick</strong> for <a href=\"https://github.com/rust-lang/rust/pull/80708\">https://github.com/rust-lang/rust/pull/80708</a> there's really only two candidates left. <a href=\"https://github.com/rust-lang/rust/pull/80538\">https://github.com/rust-lang/rust/pull/80538</a> and <a href=\"https://github.com/rust-lang/rust/pull/80643\">https://github.com/rust-lang/rust/pull/80643</a>. the rest are just comment/x.py/bootstrap/test changes or already benchmarked.<br>\n80643 effectively only removes code so I fail to see how it could regress anything.<br>\nif @<strong>simulacrum</strong> is correct that the regression and the improvement are caused by different PRs, 80538 is probably the regression and 80643 the improvement.</p>",
        "id": 221956383,
        "sender_full_name": "LingM",
        "timestamp": 1610033807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296422\">@LingM</span> awesome! Your analysis sounds good to me. I can kick off a revert of <a href=\"https://github.com/rust-lang/rust/issues/80538\">#80538</a> to see if it improves the perf</p>",
        "id": 221957055,
        "sender_full_name": "rylev",
        "timestamp": 1610034105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and for <a href=\"https://github.com/rust-lang/rust/pull/80530\">https://github.com/rust-lang/rust/pull/80530</a> there's three candidates based on the same criteria.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/80488\">https://github.com/rust-lang/rust/pull/80488</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/80491\">https://github.com/rust-lang/rust/pull/80491</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/78934\">https://github.com/rust-lang/rust/pull/78934</a> &lt;- moves a bunch of stuff into their own files, so <del>probably (hopefully) no</del> maybe an effect.</p>",
        "id": 221960102,
        "sender_full_name": "LingM",
        "timestamp": 1610035388
    },
    {
        "content": "<p>moving can definitely have a big effect</p>",
        "id": 221960186,
        "sender_full_name": "simulacrum",
        "timestamp": 1610035416
    },
    {
        "content": "<p>fixed &gt;&lt;</p>",
        "id": 221960568,
        "sender_full_name": "LingM",
        "timestamp": 1610035583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/221960186\">said</a>:</p>\n<blockquote>\n<p>moving can definitely have a big effect</p>\n</blockquote>\n<p>Indeed, we've had several perf gains and losses due to code simply moving around</p>",
        "id": 221960736,
        "sender_full_name": "rylev",
        "timestamp": 1610035679
    },
    {
        "content": "<p>So it looks like <a href=\"https://github.com/rust-lang/rust/issues/80538\">#80538</a> was indeed responsible for the regression as <a href=\"https://github.com/rust-lang/rust/pull/80798\">you can see here</a>. Im going to open a revert for 78934 to see if that was the cause of <a href=\"https://github.com/rust-lang/rust/issues/80530\">#80530</a></p>",
        "id": 222056159,
        "sender_full_name": "rylev",
        "timestamp": 1610101290
    },
    {
        "content": "<p>Looks like <a href=\"https://github.com/rust-lang/rust/issues/78934\">#78934</a> was indeed the cause of the perf regressions in <a href=\"https://github.com/rust-lang/rust/issues/80530\">#80530</a>.</p>",
        "id": 222093396,
        "sender_full_name": "rylev",
        "timestamp": 1610123523
    },
    {
        "content": "<p>I've closed the two revert PRs since I don't think either are bad enough to warrant actually reverting the changes.</p>",
        "id": 222093599,
        "sender_full_name": "rylev",
        "timestamp": 1610123632
    },
    {
        "content": "<p>yep that sounds right to me</p>",
        "id": 222094133,
        "sender_full_name": "simulacrum",
        "timestamp": 1610123909
    },
    {
        "content": "<p>if you could update the triage report with the info that'd be amazing</p>",
        "id": 222094152,
        "sender_full_name": "simulacrum",
        "timestamp": 1610123919
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/822\">https://github.com/rust-lang/rustc-perf/pull/822</a></p>",
        "id": 222095049,
        "sender_full_name": "rylev",
        "timestamp": 1610124411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> hey! wanted to check in and see if you can do triage this week; it's been on you for a while so just let me know if you get tired of it :)</p>",
        "id": 222427242,
        "sender_full_name": "simulacrum",
        "timestamp": 1610456899
    },
    {
        "content": "<p>Yes I can do it <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 222429396,
        "sender_full_name": "rylev",
        "timestamp": 1610457780
    },
    {
        "content": "<p>It takes place here, right? I’d like to try to watch today</p>",
        "id": 222445258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610464803
    },
    {
        "content": "<p>it's not really a more than one person process mostly, but yes, this is where we do it in general</p>",
        "id": 222445523,
        "sender_full_name": "simulacrum",
        "timestamp": 1610464912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> happy to answer any questions. I'm doing it now. I've only been doing it for the best ~4 times so I like to ask <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for feedback on some judgement calls</p>",
        "id": 222447449,
        "sender_full_name": "rylev",
        "timestamp": 1610465605
    },
    {
        "content": "<p>Speaking of which: <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> how would you classify <a href=\"https://perf.rust-lang.org/compare.html?start=6184f23950fb4aa14884ce310d948dc6fca269a3&amp;end=f30733adb9150a9b965a6af1650d5213bec8ddf6&amp;stat=instructions:u\">this</a>? As a mixed or as an improvement?</p>",
        "id": 222447553,
        "sender_full_name": "rylev",
        "timestamp": 1610465642
    },
    {
        "content": "<p>mixed</p>",
        "id": 222447769,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465718
    },
    {
        "content": "<p>but only on incremental, clean perf improved</p>",
        "id": 222447803,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465734
    },
    {
        "content": "<p>er, \"Full\" perf that is</p>",
        "id": 222447843,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465753
    },
    {
        "content": "<p>across the board</p>",
        "id": 222447856,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465757
    },
    {
        "content": "<p>I also tend to weigh averages more heavily than regressions in max. Do you do the same?</p>",
        "id": 222447923,
        "sender_full_name": "rylev",
        "timestamp": 1610465770
    },
    {
        "content": "<p>huh, no, I don't think so, though not sure I am parsing correctly</p>",
        "id": 222448089,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465846
    },
    {
        "content": "<p>can someone remind me how the rows are sorted in those compare.html links? I’m staring at all four columns and don’t see which one is acting as the key for the sort</p>",
        "id": 222448124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610465869
    },
    {
        "content": "<p>I pretty much only look at the max and min columns</p>",
        "id": 222448127,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465870
    },
    {
        "content": "<p>max, but absolute value of it, is the sort key</p>",
        "id": 222448212,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465893
    },
    {
        "content": "<p>hm or that is what I thought</p>",
        "id": 222448255,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465913
    },
    {
        "content": "<p>but it does not appear true lower down</p>",
        "id": 222448270,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465917
    },
    {
        "content": "<p>maybe max of abs of min <em>and</em> max values?</p>",
        "id": 222448318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610465942
    },
    {
        "content": "<p>aha, ok, by the max of the absolute percentages under the header</p>",
        "id": 222448430,
        "sender_full_name": "simulacrum",
        "timestamp": 1610465989
    },
    {
        "content": "<p>so \"largest change first\"</p>",
        "id": 222448510,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466010
    },
    {
        "content": "<p>ah yes okay. Makes sense.</p>",
        "id": 222448605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466046
    },
    {
        "content": "<p>FYI since folks are followingg along: I'm trying to figure out what might have caused <a href=\"https://perf.rust-lang.org/compare.html?start=7a193921a024e910262ff90bfb028074fddf20d0&amp;end=34628e5b533d35840b61c5db0665cf7633ed3c5a&amp;stat=instructions:u\">this minor regression</a>) in this <a href=\"https://github.com/rust-lang/rust/pull/80867\">rollup</a></p>",
        "id": 222448899,
        "sender_full_name": "rylev",
        "timestamp": 1610466156
    },
    {
        "content": "<p>wow those all do look innocuous</p>",
        "id": 222449046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466210
    },
    {
        "content": "<p>Yea this one is tough</p>",
        "id": 222449258,
        "sender_full_name": "rylev",
        "timestamp": 1610466278
    },
    {
        "content": "<p>my guess is <a href=\"https://github.com/rust-lang/rust/pull/79968/\">https://github.com/rust-lang/rust/pull/79968/</a>, leading to more versions of that function</p>",
        "id": 222449428,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466353
    },
    {
        "content": "<p>and potentially less merging (i.e. CGU changes strike again)</p>",
        "id": 222449486,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466363
    },
    {
        "content": "<p>Yea that's my guess as well. The only other one that really does anything is <a href=\"https://github.com/rust-lang/rust/issues/80801\">#80801</a> which I don't think would do it</p>",
        "id": 222449582,
        "sender_full_name": "rylev",
        "timestamp": 1610466403
    },
    {
        "content": "<p>it's worth noting a slight increase in impl_trait_ref executions on syn-opt, not sure what caused that yet though</p>",
        "id": 222449665,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> hmm. Should we be gathering data on CGU (counts, reuse maybe) as part of these builds?</p>",
        "id": 222449695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah, probably should be</p>",
        "id": 222449707,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466470
    },
    {
        "content": "<p>Actually I think it might be the from impls - there's 2 added</p>",
        "id": 222449722,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466480
    },
    {
        "content": "<p>it might help inform discussions like that, but it also would be  potentially tricky to add it to the perf’s output</p>",
        "id": 222449764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466485
    },
    {
        "content": "<p>and that matches the new queries (2 more impl trait ref)</p>",
        "id": 222449769,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/222449665\">said</a>:</p>\n<blockquote>\n<p>it's worth noting a slight increase in impl_trait_ref executions on syn-opt, not sure what caused that yet though</p>\n</blockquote>\n<p>Hmm I hadn't looked at that since it's marked as volatile, but I can make a note</p>",
        "id": 222449851,
        "sender_full_name": "rylev",
        "timestamp": 1610466525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we can add a -Z flag or whatever, and dump it to stdout in perf stat format and it'll just get tracked as a statistic automatically</p>",
        "id": 222449858,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/222449695\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> hmm. Should we be gathering data on CGU (counts, reuse maybe) as part of these builds?</p>\n</blockquote>\n<p>What is CGU?</p>",
        "id": 222449944,
        "sender_full_name": "rylev",
        "timestamp": 1610466563
    },
    {
        "content": "<p>but yeah looking at self-profile info this looks like slightly different cgu layout (codegen unit)</p>",
        "id": 222449971,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466573
    },
    {
        "content": "<p>all of the benchmarks show slight bumps in time spent on lto</p>",
        "id": 222449998,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466583
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> code-gen-unit.</p>",
        "id": 222450014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466588
    },
    {
        "content": "<p>Its the unit of compilation inside LLVM</p>",
        "id": 222450026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466595
    },
    {
        "content": "<p>e.g., <a href=\"https://perf.rust-lang.org/detailed-query.html?commit=34628e5b533d35840b61c5db0665cf7633ed3c5a&amp;base_commit=7a193921a024e910262ff90bfb028074fddf20d0&amp;benchmark=cargo-opt&amp;run_name=incr-patched:%20println\">https://perf.rust-lang.org/detailed-query.html?commit=34628e5b533d35840b61c5db0665cf7633ed3c5a&amp;base_commit=7a193921a024e910262ff90bfb028074fddf20d0&amp;benchmark=cargo-opt&amp;run_name=incr-patched:%20println</a></p>",
        "id": 222450106,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466611
    },
    {
        "content": "<p>its how we fragment code that we feed into LLVM, for both parallel compilation purposes as well as incremental compilation.</p>",
        "id": 222450144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610466629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/222449665\">said</a>:</p>\n<blockquote>\n<p>it's worth noting a slight increase in impl_trait_ref executions on syn-opt, not sure what caused that yet though</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> actually I'm not seeing this. The numbers seem roughly the same</p>",
        "id": 222450594,
        "sender_full_name": "rylev",
        "timestamp": 1610466803
    },
    {
        "content": "<p>well, they should be entirely deterministic?</p>",
        "id": 222450648,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466837
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/detailed-query.html?sort_idx=-5&amp;commit=34628e5b533d35840b61c5db0665cf7633ed3c5a&amp;base_commit=7a193921a024e910262ff90bfb028074fddf20d0&amp;benchmark=syn-opt&amp;run_name=incr-full\">https://perf.rust-lang.org/detailed-query.html?sort_idx=-5&amp;commit=34628e5b533d35840b61c5db0665cf7633ed3c5a&amp;base_commit=7a193921a024e910262ff90bfb028074fddf20d0&amp;benchmark=syn-opt&amp;run_name=incr-full</a></p>",
        "id": 222450774,
        "sender_full_name": "simulacrum",
        "timestamp": 1610466884
    },
    {
        "content": "<p>Yes that's true. I'm just not sure investigating why it increased by such a small amount is a worth looking into. Could you explain your thought process there a bit more so I can look out for such things</p>",
        "id": 222451221,
        "sender_full_name": "rylev",
        "timestamp": 1610467061
    },
    {
        "content": "<p>ah, it's not notable in and of itself</p>",
        "id": 222451560,
        "sender_full_name": "simulacrum",
        "timestamp": 1610467189
    },
    {
        "content": "<p>it just hints at what the regression was caused by</p>",
        "id": 222451574,
        "sender_full_name": "simulacrum",
        "timestamp": 1610467196
    },
    {
        "content": "<p>in particular, in this case, the query is impl trait ref, which IIRC is basically \"what trait is implemented by a particular impl\"</p>",
        "id": 222451788,
        "sender_full_name": "simulacrum",
        "timestamp": 1610467267
    },
    {
        "content": "<p>Ah got you - yes useful for trying to determine the root cause. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 222452153,
        "sender_full_name": "rylev",
        "timestamp": 1610467409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm a bit confused by <a href=\"https://github.com/rust-lang/rust/issues/80441\">https://github.com/rust-lang/rust/issues/80441</a>. It's labeled as addressing the perf regressions introduced <a href=\"https://perf.rust-lang.org/compare.html?start=1cc410710993d036730c11556039e40109f6ab41&amp;end=58d2bad9f7ab0971495247b6c94978848760ca9d&amp;stat=instructions:u\">here</a> but the in the <a href=\"https://perf.rust-lang.org/compare.html?start=6184f23950fb4aa14884ce310d948dc6fca269a3&amp;end=f30733adb9150a9b965a6af1650d5213bec8ddf6&amp;stat=instructions:u\">results</a> don't look like they improve the previously regressed benchmarks.</p>",
        "id": 222455346,
        "sender_full_name": "rylev",
        "timestamp": 1610468557
    },
    {
        "content": "<p>The original PR in question is <a href=\"https://github.com/rust-lang/rust/pull/78837\">https://github.com/rust-lang/rust/pull/78837</a></p>",
        "id": 222455508,
        "sender_full_name": "rylev",
        "timestamp": 1610468617
    },
    {
        "content": "<p>I looked more deeply into which queries seemed effected and there doesn't seem to be a relation.</p>",
        "id": 222455551,
        "sender_full_name": "rylev",
        "timestamp": 1610468641
    },
    {
        "content": "<p>Shall I ask petrochenkov for a clarification?</p>",
        "id": 222455650,
        "sender_full_name": "rylev",
        "timestamp": 1610468666
    },
    {
        "content": "<p>Seems like petrochenkov may have improved performance elsewhere but the original regression persists? That’s not a bad thing in itself.</p>",
        "id": 222456264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610468894
    },
    {
        "content": "<p>Well the performance impact seems to be mixed.</p>",
        "id": 222456353,
        "sender_full_name": "rylev",
        "timestamp": 1610468932
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78837#issuecomment-751844338\">They previously</a> stated that it recovers some of the performance.</p>",
        "id": 222456401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610468950
    },
    {
        "content": "<p>Oh its mixed? Let me look again.</p>",
        "id": 222456413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610468954
    },
    {
        "content": "<p>It seems to be helping incremental in some benches and hurting it in others</p>",
        "id": 222456496,
        "sender_full_name": "rylev",
        "timestamp": 1610468992
    },
    {
        "content": "<p>The <a href=\"https://perf.rust-lang.org/compare.html?start=76aca6659a0eb3f5696541d0be518530cabdd963&amp;end=e3c34b4b68e99fdff4c3f40e35e9df57d62b0085\">perf run on the PR itself</a> seemed uniformly good.</p>",
        "id": 222456572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610469005
    },
    {
        "content": "<p>but the perf results on the PR itself seem <em>quite</em> different from what rylev <a href=\"https://perf.rust-lang.org/compare.html?start=6184f23950fb4aa14884ce310d948dc6fca269a3&amp;end=f30733adb9150a9b965a6af1650d5213bec8ddf6&amp;stat=instructions:u\">linked above</a></p>",
        "id": 222456979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610469163
    },
    {
        "content": "<p>Ah interesting. I'm guessing this PR negates some gains from another change which snuck in after the perf run?</p>",
        "id": 222457079,
        "sender_full_name": "rylev",
        "timestamp": 1610469205
    },
    {
        "content": "<p>yeah that seems right</p>",
        "id": 222457097,
        "sender_full_name": "simulacrum",
        "timestamp": 1610469213
    },
    {
        "content": "<p>Definitely seems worth it to point out that the gains seen in the orginal PR don't seem to address the original issue <em>and</em> that a subsequent run exposed some performance problems</p>",
        "id": 222457216,
        "sender_full_name": "rylev",
        "timestamp": 1610469265
    },
    {
        "content": "<p>yes, I think leaving a comment would be good</p>",
        "id": 222457413,
        "sender_full_name": "simulacrum",
        "timestamp": 1610469355
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/824\">https://github.com/rust-lang/rustc-perf/pull/824</a></p>",
        "id": 222459081,
        "sender_full_name": "rylev",
        "timestamp": 1610470023
    },
    {
        "content": "<p>thanks! merged, don't forget twir</p>",
        "id": 222459562,
        "sender_full_name": "simulacrum",
        "timestamp": 1610470182
    },
    {
        "content": "<p>The <a href=\"https://github.com/rust-lang/rust/issues/80867\">#80867</a> also increased the size of rustc + rust-std components by ~10MB (in top 7 based on data since 2020-07-14).</p>",
        "id": 222463432,
        "sender_full_name": "tm",
        "timestamp": 1610471465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/222463432\">said</a>:</p>\n<blockquote>\n<p>The <a href=\"https://github.com/rust-lang/rust/issues/80928\">#80928</a> also increased the size of rustc + rust-std components by ~10MB (in top 7 based on data since 2020-07-14).</p>\n</blockquote>\n<p>which component increased? rustc or rust-std?</p>",
        "id": 222463552,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610471517
    },
    {
        "content": "<p>the only thing that looks relevant is <a href=\"https://github.com/rust-lang/rust/pull/80870\">https://github.com/rust-lang/rust/pull/80870</a></p>",
        "id": 222463761,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610471591
    },
    {
        "content": "<p>rustc_target isn't called much I think, but I could be wrong: <a href=\"https://github.com/rust-lang/rust/pull/80042\">https://github.com/rust-lang/rust/pull/80042</a></p>",
        "id": 222463802,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610471610
    },
    {
        "content": "<p>sorry, I miscopied the PR number, it was the one with debuginfo changes: <a href=\"https://github.com/rust-lang/rust/issues/80867\">#80867</a></p>",
        "id": 222463988,
        "sender_full_name": "tm",
        "timestamp": 1610471679
    },
    {
        "content": "<p>the names are now much longer so the general outcome is probably expected</p>",
        "id": 222464274,
        "sender_full_name": "tm",
        "timestamp": 1610471796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/triage/near/222463761\">said</a>:</p>\n<blockquote>\n<p>the only thing that looks relevant is <a href=\"https://github.com/rust-lang/rust/pull/80870\">https://github.com/rust-lang/rust/pull/80870</a></p>\n</blockquote>\n<p>Yeah, this is probably my fault. <code>-Zsymbol-mangling-scheme=v0</code> will likely be much worse than this though due to even longer symbol names.</p>",
        "id": 222466319,
        "sender_full_name": "bjorn3",
        "timestamp": 1610472679
    },
    {
        "content": "<p>That being said, the readable names for drop_in_place was always something I wish I had.</p>",
        "id": 222467265,
        "sender_full_name": "tm",
        "timestamp": 1610473090
    },
    {
        "content": "<p>For anyone interested in the memory usage situation, here are the <a href=\"https://perf.rust-lang.org/compare.html?start=467f5e99a541db94235f0c173bdffc8aeb177522&amp;end=8234db5bc7b122dd9e39d738c30bcae005a96568&amp;stat=max-rss\">improvements</a> from <a href=\"https://github.com/rust-lang/rust/issues/80463\">#80463</a>, alluded to in the triage report.</p>",
        "id": 222493316,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1610485035
    },
    {
        "content": "<p>Sorry for the self-promotion, but I'm sure there are some people who will be glad to see the situation is improving. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 222494075,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1610485405
    },
    {
        "content": "<p>We should link to this in the report. Can someone send a PR? I unfortunately won’t be able to get to it today</p>",
        "id": 222496691,
        "sender_full_name": "rylev",
        "timestamp": 1610486725
    },
    {
        "content": "<p>yes, I can send a PR</p>",
        "id": 222505277,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610490651
    },
    {
        "content": "<p>oh it's in the report already actually</p>",
        "id": 222505364,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610490701
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-01-12.md#mixed\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-01-12.md#mixed</a></p>",
        "id": 222505411,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610490723
    },
    {
        "content": "<p>The instruction count perf was linked to but not the memory consumption improvements. I'll send a PR</p>",
        "id": 222551516,
        "sender_full_name": "rylev",
        "timestamp": 1610528387
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/826\">https://github.com/rust-lang/rustc-perf/pull/826</a></p>",
        "id": 222551847,
        "sender_full_name": "rylev",
        "timestamp": 1610528553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> would be great to do perf triage, I unfortunately am pretty booked this week so not sure I will get to it</p>",
        "id": 223237537,
        "sender_full_name": "simulacrum",
        "timestamp": 1611068354
    },
    {
        "content": "<p>I won't be able to today, but I can do it tomorrow</p>",
        "id": 223247894,
        "sender_full_name": "rylev",
        "timestamp": 1611072224
    },
    {
        "content": "<p>ok that works</p>",
        "id": 223254737,
        "sender_full_name": "simulacrum",
        "timestamp": 1611074975
    },
    {
        "content": "<p>(FYI I've started the triage - it's a big one this week)</p>",
        "id": 223367111,
        "sender_full_name": "rylev",
        "timestamp": 1611146381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/78407\">#78407</a> has _very_ big perf regression in <a href=\"https://perf.rust-lang.org/compare.html?start=497c9a256b1c2961e91565ccc6e0dd3a87a031ed&amp;end=704e47f78b4c8801a3c76f235a5a152e1b60b300&amp;stat=instructions:u\">instruction counts</a>. This was expected but is still very large that I think I'd like to see a better justification written for why it's acceptable. Is that something we can ask for in these cases?</p>",
        "id": 223367220,
        "sender_full_name": "rylev",
        "timestamp": 1611146448
    },
    {
        "content": "<p>I think we can but I don't think it's necessary in this case. The ctfe stress test is unique in showing such a large impact here I expect</p>",
        "id": 223367376,
        "sender_full_name": "simulacrum",
        "timestamp": 1611146565
    },
    {
        "content": "<p>everything else is mostly either improvements or regressions, but not major enough to back this out I think</p>",
        "id": 223367396,
        "sender_full_name": "simulacrum",
        "timestamp": 1611146592
    },
    {
        "content": "<p>the justification is expanding const fn to allow checking ub, and that seems like something we definitely want</p>",
        "id": 223367426,
        "sender_full_name": "simulacrum",
        "timestamp": 1611146635
    },
    {
        "content": "<p>That's fair. I guess it's more a point of order. It would be nice if the perf team was proactively involved in such cases. Most of the time people have compiler perf in mind but it'd be nice to know the team responsible for it was made aware.</p>",
        "id": 223368026,
        "sender_full_name": "rylev",
        "timestamp": 1611147019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> am I understanding the automated regression tester that it wants an entire rollup and attempts to run tests on the entire rollup. We don't have a way to point to a specific PR (within the rollup), revert the PR and run perf on it?</p>",
        "id": 223368569,
        "sender_full_name": "rylev",
        "timestamp": 1611147385
    },
    {
        "content": "<p>ah, no, it does target a specific PR</p>",
        "id": 223368614,
        "sender_full_name": "simulacrum",
        "timestamp": 1611147420
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74678\">https://github.com/rust-lang/rust/pull/74678</a></p>",
        "id": 223368691,
        "sender_full_name": "simulacrum",
        "timestamp": 1611147482
    },
    {
        "content": "<p>it isn't quite perfect - e.g. comparison url needs manual work at least - and I think there may be a bug with the revert where it doesn't revert quite fully - the \"head\" of the rollup might be embedded, but overall this should work well. If we start using it ironing out the bugs should not be too hard.</p>",
        "id": 223368894,
        "sender_full_name": "simulacrum",
        "timestamp": 1611147597
    },
    {
        "content": "<p>Awesome! <a href=\"https://github.com/rust-lang/rust/pull/81207\">https://github.com/rust-lang/rust/pull/81207</a></p>",
        "id": 223373654,
        "sender_full_name": "rylev",
        "timestamp": 1611150367
    },
    {
        "content": "<p>Any thoughts on which PR is responsible for the perf regressions in <a href=\"https://github.com/rust-lang/rust/issues/81113\">https://github.com/rust-lang/rust/issues/81113</a>?<br>\nThey seem to be in the <code>expand_crate</code> function. my first guess was <a href=\"https://github.com/rust-lang/rust/issues/80031\">#80031</a></p>",
        "id": 223375919,
        "sender_full_name": "rylev",
        "timestamp": 1611151503
    },
    {
        "content": "<p>First draft of the triage report is up: <a href=\"https://github.com/rust-lang/rustc-perf/pull/827\">https://github.com/rust-lang/rustc-perf/pull/827</a></p>",
        "id": 223375996,
        "sender_full_name": "rylev",
        "timestamp": 1611151539
    },
    {
        "content": "<p>looking</p>",
        "id": 223376023,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151552
    },
    {
        "content": "<p>I would expect <a href=\"https://github.com/rust-lang/rust/pull/80765\">https://github.com/rust-lang/rust/pull/80765</a> to be plausibly responsible for the improvement</p>",
        "id": 223376302,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151698
    },
    {
        "content": "<p>FYI: I've mostly decided to ignore improvements in this weeks triage. The report took me around 2 hours to do even with ignoring improvements. I hope that's ok</p>",
        "id": 223376528,
        "sender_full_name": "rylev",
        "timestamp": 1611151825
    },
    {
        "content": "<p>yeah, seems right</p>",
        "id": 223376776,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151949
    },
    {
        "content": "<p>just trying to parse out this rollup</p>",
        "id": 223376789,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151959
    },
    {
        "content": "<p>I am concerned they take this long, though</p>",
        "id": 223376811,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151967
    },
    {
        "content": "<p>I feel like last time I did one -- maybe 4 weeks ago? -- it took me 30 minutes</p>",
        "id": 223376846,
        "sender_full_name": "simulacrum",
        "timestamp": 1611151986
    },
    {
        "content": "<p>so maybe there's some expectation mismatch</p>",
        "id": 223376885,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152003
    },
    {
        "content": "<p>This was a particularly long one. Last week was about 45 minutes</p>",
        "id": 223376903,
        "sender_full_name": "rylev",
        "timestamp": 1611152017
    },
    {
        "content": "<p>I wouldn't be surprised if you're a bit faster than I am since I'm still getting used to spotting things</p>",
        "id": 223376941,
        "sender_full_name": "rylev",
        "timestamp": 1611152041
    },
    {
        "content": "<p>If they're smaller, they can take as short as 30 minutes for me too though</p>",
        "id": 223377026,
        "sender_full_name": "rylev",
        "timestamp": 1611152065
    },
    {
        "content": "<p>(looking at calendar again - it was closer to 1hr 15 minutes. I had a 30 minute meeting I totally forgot I had <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>and I was multitasking at the beginning)</p>",
        "id": 223377128,
        "sender_full_name": "rylev",
        "timestamp": 1611152135
    },
    {
        "content": "<p>ok</p>",
        "id": 223377161,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152158
    },
    {
        "content": "<p>that makes more sense, I guess you did get roughly 10% more this time too since it's wednesday</p>",
        "id": 223377237,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152178
    },
    {
        "content": "<p>I do think there are things we can do to make them faster,  but we can discuss those at the meeting dedicated to improving our perf processes</p>",
        "id": 223377302,
        "sender_full_name": "rylev",
        "timestamp": 1611152216
    },
    {
        "content": "<p>I am not sure about this rollup's regressions</p>",
        "id": 223378215,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152619
    },
    {
        "content": "<p>I note that some of them appear to be incremental-specific, though I can't really say why</p>",
        "id": 223378245,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152634
    },
    {
        "content": "<p>a bunch of these prs do not seem like good candidates for rolling up, honestly</p>",
        "id": 223378337,
        "sender_full_name": "simulacrum",
        "timestamp": 1611152662
    },
    {
        "content": "<p>That's actually been something I wanted to talk about. There's been several occasions where I've noticed PRs rolled up that seemed like bad candidates...</p>",
        "id": 223380164,
        "sender_full_name": "rylev",
        "timestamp": 1611153435
    },
    {
        "content": "<p>what makes a bad candidate, large deltas?</p>",
        "id": 223380557,
        "sender_full_name": "oliver",
        "timestamp": 1611153609
    },
    {
        "content": "<p>well, not really. it's hard to pinpoint, but multiple of these PRs I would have marked as non-rollup.</p>",
        "id": 223380675,
        "sender_full_name": "simulacrum",
        "timestamp": 1611153666
    },
    {
        "content": "<p><a href=\"https://forge.rust-lang.org/release/rollups.html#selecting-pull-requests\">https://forge.rust-lang.org/release/rollups.html#selecting-pull-requests</a></p>",
        "id": 223380907,
        "sender_full_name": "oliver",
        "timestamp": 1611153758
    },
    {
        "content": "<p>does this need updates?</p>",
        "id": 223381036,
        "sender_full_name": "oliver",
        "timestamp": 1611153823
    },
    {
        "content": "<p>One criteria (for me) is something that seems like it could cause performance issues. Lots of refactorings get rolled up and I think many times they should not.</p>",
        "id": 223381059,
        "sender_full_name": "rylev",
        "timestamp": 1611153831
    },
    {
        "content": "<p>it says 'Avoid having too many large diff pull requests in the same rollup.'</p>",
        "id": 223381313,
        "sender_full_name": "oliver",
        "timestamp": 1611153928
    },
    {
        "content": "<p>but I would assume that means line counts not perf deltas</p>",
        "id": 223381366,
        "sender_full_name": "oliver",
        "timestamp": 1611153952
    }
]