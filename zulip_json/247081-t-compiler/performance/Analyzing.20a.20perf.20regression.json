[
    {
        "content": "<p>Okay, so, I have a problem</p>",
        "id": 244079676,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624819809
    },
    {
        "content": "<p>I have a PR: <a href=\"https://github.com/rust-lang/rust/issues/85499\">#85499</a></p>",
        "id": 244079686,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624819825
    },
    {
        "content": "<p>It currently has a perf regression in multiple benchmarks, which the largest being inflate-check/debug and keccake-check/debug</p>",
        "id": 244079714,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624819875
    },
    {
        "content": "<p>Now, prior to <a href=\"https://github.com/rust-lang/rust/pull/85499/commits/8cb81f5d9b4e54064e2760f449c51f456b320d68\">this</a> commit, it was showing about a 10% regression in instruction counts</p>",
        "id": 244079773,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624819929
    },
    {
        "content": "<p>However, <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> has been helping me check this locally (their local), and has now been able to see really any regression at all</p>",
        "id": 244079786,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624819966
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://zulip-uploads.s3.amazonaws.com/4715/WIOn4BtaarNTzvc6SQP7CBcI/perf.png?AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ&amp;Signature=1H3CLExzkHG8D4fYrhJRa2y52HU%3D&amp;Expires=1624820058\"><img src=\"https://uploads.zulipusercontent.net/f8e2fc38960e31bd98f73d1165ce825685667ff9/68747470733a2f2f7a756c69702d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f343731352f57494f6e3442746161724e547a76633653515037434263492f706572662e706e673f4157534163636573734b657949643d414b49414945564d42434154325744334d354b51265369676e61747572653d314833434c45787a6b4847384434665972684a526132793532485525334426457870697265733d31363234383230303538\"></a></div>",
        "id": 244079819,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820010
    },
    {
        "content": "<p><em>After</em> that commit (and a rebase, but I don't think that's actually relevant), there's actually a slight perf <em>improvement</em></p>",
        "id": 244079843,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820043
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://zulip-uploads.s3.amazonaws.com/4715/ik6NlCqPiQbgqrjfD5CQWuq0/perf.png?AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ&amp;Signature=P9mEqG%2FlV2SSGZPTj48ml3Z%2FFTQ%3D&amp;Expires=1624820109\"><img src=\"https://uploads.zulipusercontent.net/a9f008e4fb860093d7c60071eadd67e5e259a8e8/68747470733a2f2f7a756c69702d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f343731352f696b364e6c4371506951626771726a6644354351577571302f706572662e706e673f4157534163636573734b657949643d414b49414945564d42434154325744334d354b51265369676e61747572653d50396d4571472532466c56325353475a50546a34386d6c335a25324646545125334426457870697265733d31363234383230313039\"></a></div>",
        "id": 244079876,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820058
    },
    {
        "content": "<p>Running through <code>perf</code> for the branch before the rebase, compared to that git base also didn't show really any meaningful differences</p>",
        "id": 244079924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820160
    },
    {
        "content": "<p>I've also analyzed the logs from <code>RUSTC_LOG</code> and nothing is really popping out (though, they're a bit hard to analyze since these end up giving some large logs)</p>",
        "id": 244079971,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820200
    },
    {
        "content": "<p>So, the question: what might be giving such a large regression on perf.rlo and what can I/we do to help reproduce that locally</p>",
        "id": 244079983,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820245
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Analyzing.20a.20perf.20regression/near/244079843\">said</a>:</p>\n<blockquote>\n<p><em>After</em> that commit (and a rebase, but I don't think that's actually relevant), there's actually a slight perf <em>improvement</em></p>\n</blockquote>\n<p>Also worth mentioning that  this was also local. A perf run with that commit, but not a rebase, seems to have improved a few percent: <a href=\"https://perf.rust-lang.org/compare.html?start=a5b7511a6ccf241ba2ce6ad0b04e79f1e3d85686&amp;end=df68c4714df1c1a04afeb0677193895d9c80fa9a\">https://perf.rust-lang.org/compare.html?start=a5b7511a6ccf241ba2ce6ad0b04e79f1e3d85686&amp;end=df68c4714df1c1a04afeb0677193895d9c80fa9a</a></p>",
        "id": 244080049,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Analyzing.20a.20perf.20regression/near/244079983\">said</a>:</p>\n<blockquote>\n<p>So, the question: what might be giving such a large regression on perf.rlo and what can I/we do to help reproduce that locally</p>\n</blockquote>\n<p>And to followup on this: how reasonable is it to just...land this PR with perf as-is. It's already a huge win  for deeply-nested-async. And short of some extra caching, some inlining attributes, or something similar somewhere, I don't really know what I can reasonably do in this PR <em>anyways</em></p>",
        "id": 244080143,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624820472
    },
    {
        "content": "<p>If out of 3 perf runs 2 give reasonable results that you might expect, I think its fine to ignore the one-off. Trying and failing to reproduce locally I think is sufficient indication of attempting to figure out the problem.</p>",
        "id": 244080711,
        "sender_full_name": "nagisa",
        "timestamp": 1624821460
    },
    {
        "content": "<p>It would be a different problem if every single perf run was bad, but not reproducible locally.</p>",
        "id": 244080722,
        "sender_full_name": "nagisa",
        "timestamp": 1624821481
    },
    {
        "content": "<p>Well, the perf runs on perf.rlo are consistently bad</p>",
        "id": 244081933,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624823450
    },
    {
        "content": "<p>whereas locally, the are neutral to <em>positive</em></p>",
        "id": 244081939,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624823464
    },
    {
        "content": "<p>about the discrepancy: are these runs all measuring the same thing ? (the linked commit makes it look like debug assertions and logging are turned on, while changing logging like this wouldnâ€™t be visible on perf.rlo IIRC ?) what do the images above show btw ? they seem to be broken links for me</p>",
        "id": 244083060,
        "sender_full_name": "lqd",
        "timestamp": 1624825316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> can you reproduce regressions locally using the artifacts from perf? I think landing the regression may be reasonable -- haven't looked too much into things, would need to do more to really comment there. But if perf is showing drastically different results to what you're seeing locally, it's possible that we can find wins by adjusting configurations or whatever else to get you nicer results locally.</p>",
        "id": 244085658,
        "sender_full_name": "simulacrum",
        "timestamp": 1624829040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> they should all be measuring the same thing. The important bit of the linked commit is the online attributes. The images show first the neutral local results and second the improved local results</p>",
        "id": 244088320,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624832923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> where can I get the artifacts? Perf is showing bad results, but local isn't. Not sure how to be able to actually figure out the regression on perf.rlo</p>",
        "id": 244088378,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833013
    },
    {
        "content": "<p>rustup toolchain install master</p>",
        "id": 244088388,
        "sender_full_name": "simulacrum",
        "timestamp": 1624833044
    },
    {
        "content": "<p>(it's a crate on <a href=\"http://crates.io\">crates.io</a>, can install try builds)</p>",
        "id": 244088398,
        "sender_full_name": "simulacrum",
        "timestamp": 1624833067
    },
    {
        "content": "<p>Is this documented anywhere?</p>",
        "id": 244088459,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833176
    },
    {
        "content": "<p>Hm not sure maybe</p>",
        "id": 244088470,
        "sender_full_name": "simulacrum",
        "timestamp": 1624833215
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/rustup-toolchain-install-master/\">https://crates.io/crates/rustup-toolchain-install-master/</a></p>",
        "id": 244088538,
        "sender_full_name": "The 8472",
        "timestamp": 1624833291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> do you think you could run perf on the try build?</p>",
        "id": 244088552,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833343
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/85499#issuecomment-869115256\">https://github.com/rust-lang/rust/pull/85499#issuecomment-869115256</a></p>",
        "id": 244088602,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833383
    },
    {
        "content": "<p>I guess the base is also built too, right?</p>",
        "id": 244088608,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833403
    },
    {
        "content": "<p>yeah, will take a bit</p>",
        "id": 244088618,
        "sender_full_name": "The 8472",
        "timestamp": 1624833440
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/49ba9361d87f5d58d54fdd164ef2128cd50ed4b4\">49ba9361d87f5d58d54fdd164ef2128cd50ed4b4</a> is the base I think</p>",
        "id": 244088628,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624833475
    },
    {
        "content": "<p>you can see the actual commits that perf is comparing in the perf results</p>",
        "id": 244088759,
        "sender_full_name": "The 8472",
        "timestamp": 1624833703
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/8342iP9REmuX7UANgfNKUwVa/perf.png\">perf.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/8342iP9REmuX7UANgfNKUwVa/perf.png\" title=\"perf.png\"><img src=\"/user_uploads/4715/8342iP9REmuX7UANgfNKUwVa/perf.png\"></a></div><p>Well, those results don't match those from my local builds.</p>",
        "id": 244088877,
        "sender_full_name": "The 8472",
        "timestamp": 1624833898
    },
    {
        "content": "<p>But they're pretty close to what perf rlo shows. So I wonder why I'm seeing a much smaller difference with local builds.</p>",
        "id": 244088953,
        "sender_full_name": "The 8472",
        "timestamp": 1624834044
    },
    {
        "content": "<p>Note that CI builds are PGO and have, e.g., codegen-units-std = 1 along with things like debug! off... so there could be quite a bit of difference. But the builds tested by perf <em>are</em> what we ship.</p>",
        "id": 244088954,
        "sender_full_name": "simulacrum",
        "timestamp": 1624834047
    },
    {
        "content": "<p>Yesterday I was testing different commits, before a rebase and that was about 0.4% regression with 16CGUs and no rustflags. With 1CGU and RUSTFLAGS=-Ctarget-cpu=native it was a 0.1% regression. Neither matched what perf rlo was showing.<br>\ndebug=false, debuginfo=1 or 2, don't remember which one<br>\nno PGO</p>",
        "id": 244089179,
        "sender_full_name": "The 8472",
        "timestamp": 1624834412
    },
    {
        "content": "<p>I only ran keccak and inflate since those were the top regressions.</p>",
        "id": 244089234,
        "sender_full_name": "The 8472",
        "timestamp": 1624834489
    },
    {
        "content": "<p>You can try to locally build the same way perf does with the docker container (src/ci/docker/run.sh dist-x86_64-linux)</p>",
        "id": 244089695,
        "sender_full_name": "simulacrum",
        "timestamp": 1624835288
    },
    {
        "content": "<p>Certainly perf doesn't use =native codegen, so not really sure why that's a point of comparison...</p>",
        "id": 244089705,
        "sender_full_name": "simulacrum",
        "timestamp": 1624835317
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> if you do perf record then perf diff on those two builds, what does that show?</p>",
        "id": 244089723,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624835384
    },
    {
        "content": "<p>Might actually get something here</p>",
        "id": 244089725,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624835390
    },
    {
        "content": "<blockquote>\n<p>Certainly perf doesn't use =native codegen, so not really sure why that's a point of comparison...</p>\n</blockquote>\n<p>that's just my default environment, I only remembered that I had it set at some point and then turned it off. unintended point of data</p>",
        "id": 244089778,
        "sender_full_name": "The 8472",
        "timestamp": 1624835509
    },
    {
        "content": "<p>diff output for the try builds <a href=\"https://gist.github.com/the8472/b92600421a296a26828030f98d210ee8\">https://gist.github.com/the8472/b92600421a296a26828030f98d210ee8</a></p>",
        "id": 244090336,
        "sender_full_name": "The 8472",
        "timestamp": 1624836376
    },
    {
        "content": "<p>Interesting</p>",
        "id": 244091025,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624837635
    },
    {
        "content": "<p>I wonder if PGO is optimising process_obligations incorrectly</p>",
        "id": 244091248,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624837974
    },
    {
        "content": "<p>Actually, looks like maybe <code>apply_rewrites</code> got inlined. Before it was ~3% of time. Now process_obligations got 5% longer</p>",
        "id": 244091444,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624838319
    },
    {
        "content": "<p>Then also that HashMap::retain</p>",
        "id": 244091447,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624838340
    },
    {
        "content": "<p>Oh hmm. <code>apply_rewrites</code> is called from <code>compress</code>, which isn't inlined</p>",
        "id": 244091525,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624838462
    },
    {
        "content": "<p>You can try adding some of the regressed benchmarks to the pgo script (src/ci/pgo.sh I think? Something like that), maybe it'll help</p>",
        "id": 244092770,
        "sender_full_name": "simulacrum",
        "timestamp": 1624840688
    },
    {
        "content": "<p>But if you do end up seeing wins with that it shouldn't land with any other changes ultimately</p>",
        "id": 244092773,
        "sender_full_name": "simulacrum",
        "timestamp": 1624840722
    },
    {
        "content": "<p>Well, <code>inflate</code> isn't edition 2018: <a href=\"https://github.com/rust-lang/rust/pull/85499#issuecomment-869268462\">https://github.com/rust-lang/rust/pull/85499#issuecomment-869268462</a></p>",
        "id": 244094595,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624843921
    },
    {
        "content": "<p>Okay, so I added <code>inline(never)</code> to <code>apply_rewrites</code> and added <code>inflate</code> to the pgo script. It looks like the former had about a 0.2% improvment (within noise) (<a href=\"https://perf.rust-lang.org/compare.html?start=a5b7511a6ccf241ba2ce6ad0b04e79f1e3d85686&amp;end=df68c4714df1c1a04afeb0677193895d9c80fa9a\">without</a> vs <a href=\"https://perf.rust-lang.org/compare.html?start=17ea490310ba7c836c93fe1b7002555b3bea5eb1&amp;end=735792470d44bbc1c303758b6f543b54e8ef8964\">with</a>) whereas the latter did have a 1-2% improvement (<a href=\"https://perf.rust-lang.org/compare.html?start=17ea490310ba7c836c93fe1b7002555b3bea5eb1&amp;end=735792470d44bbc1c303758b6f543b54e8ef8964\">without</a> vs <a href=\"https://perf.rust-lang.org/compare.html?start=3e9d7ecf784e5ecaf7437d04be3992ad23fa7cb6&amp;end=d6a65aea9952f5f55308e7f4754b06ca9cfd1532\">with</a>)</p>",
        "id": 244189863,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624906526
    },
    {
        "content": "<p>That leaves the the <a href=\"https://github.com/rust-lang/rust/pull/85499#issuecomment-869380399\">current</a> perf at about 30% improvement for deeply-nested-async and 1-4% regression on a dozen or so benchmarks.</p>",
        "id": 244190177,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624906673
    },
    {
        "content": "<p>As <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> said, I can make a separate PR for the pgo script edit. It'll just make the numbers on the current PR look worse again.</p>",
        "id": 244190383,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624906784
    },
    {
        "content": "<p>But I think the benefit of landing this PR heavily outweighs the couple percent regression.</p>",
        "id": 244190461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624906813
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86697\">#86697</a> okay let's see</p>",
        "id": 244191237,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624907256
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> Yes, I think we can likely proceed -- you did want to do a crater run as well it looks like?</p>",
        "id": 244194224,
        "sender_full_name": "simulacrum",
        "timestamp": 1624908939
    },
    {
        "content": "<p>Hmm. Likely a good idea...</p>",
        "id": 244194320,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624908985
    },
    {
        "content": "<p>how's the queue...</p>",
        "id": 244194325,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624908987
    },
    {
        "content": "<p>oh, pretty empty</p>",
        "id": 244194331,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624908992
    }
]