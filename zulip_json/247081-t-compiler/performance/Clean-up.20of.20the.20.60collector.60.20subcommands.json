[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/rustc-perf/issues/683\">https://github.com/rust-lang/rustc-perf/issues/683</a>, and there are some choices required. Specifically, how many things must the user specify, vs. how many of them can we provide reasonable defaults?</p>",
        "id": 204010132,
        "sender_full_name": "njn",
        "timestamp": 1594845683
    },
    {
        "content": "<p>For example, here's one possible formulation for <code>bench_local</code>:</p>",
        "id": 204010159,
        "sender_full_name": "njn",
        "timestamp": 1594845697
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>collector bench_local $DB $RUSTC $CARGO $ID \\\n  --filter $FILTER --exclude $EXCLUDE --self-profile --builds $BUILDS --runs $RUNS\n</code></pre></div>",
        "id": 204010192,
        "sender_full_name": "njn",
        "timestamp": 1594845717
    },
    {
        "content": "<p>In this formulation, you must provide the database name, rustc executable location, cargo executable location, and ID for the results within the database.</p>",
        "id": 204010284,
        "sender_full_name": "njn",
        "timestamp": 1594845750
    },
    {
        "content": "<p>But we could provide defaults for some/all of these.</p>",
        "id": 204010299,
        "sender_full_name": "njn",
        "timestamp": 1594845762
    },
    {
        "content": "<ul>\n<li>Default to a name like <code>results.db</code> for the database.</li>\n</ul>",
        "id": 204010321,
        "sender_full_name": "njn",
        "timestamp": 1594845780
    },
    {
        "content": "<p>The ID to me seems like the only thing that will be different each time you call it</p>",
        "id": 204010335,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594845785
    },
    {
        "content": "<ul>\n<li>Default to 'rustc in your path'</li>\n</ul>",
        "id": 204010341,
        "sender_full_name": "njn",
        "timestamp": 1594845789
    },
    {
        "content": "<p>maybe we could set up a <code>collector.toml</code> config file or something?</p>",
        "id": 204010350,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594845797
    },
    {
        "content": "<ul>\n<li>Default to 'cargo in your path'</li>\n</ul>",
        "id": 204010355,
        "sender_full_name": "njn",
        "timestamp": 1594845799
    },
    {
        "content": "<ul>\n<li>Default to \"Original\" or something for the ID</li>\n</ul>",
        "id": 204010374,
        "sender_full_name": "njn",
        "timestamp": 1594845811
    },
    {
        "content": "<p>And I've omitted <code>rustdoc</code>, too</p>",
        "id": 204010404,
        "sender_full_name": "njn",
        "timestamp": 1594845834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> The good news is that I have a lot of experience running these commands :)</p>",
        "id": 204010459,
        "sender_full_name": "njn",
        "timestamp": 1594845849
    },
    {
        "content": "<p>For me, <code>$CARGO</code> is 99.99% of the time just <code>which cargo</code>. That's the easiest one.</p>",
        "id": 204010506,
        "sender_full_name": "njn",
        "timestamp": 1594845881
    },
    {
        "content": "<p><code>$RUSTC</code> changes frequently. I very often run an unmodified local build vs a modified local build</p>",
        "id": 204010546,
        "sender_full_name": "njn",
        "timestamp": 1594845909
    },
    {
        "content": "<p><code>$DB</code> also changes frequently. I often use a date-based naming system, e.g. <code>jul16.db</code>. For <code>collector profile</code>, instead of a database filename we have an output dir, and I use <code>jul16/</code> for that. I often end up with dozens of different output files in a day's directory, often for multiple profilers.</p>",
        "id": 204010699,
        "sender_full_name": "njn",
        "timestamp": 1594845992
    },
    {
        "content": "<p>I have a bash function that I use, it's usage is like this: <code>rustc-bench &lt;rustc&gt; &lt;db&gt; &lt;id&gt; &lt;builds&gt; &lt;runs&gt; [&lt;filter&gt;]</code></p>",
        "id": 204010836,
        "sender_full_name": "njn",
        "timestamp": 1594846072
    },
    {
        "content": "<p>for that, the builds and runs are mandatory, because I mostly use non-default values</p>",
        "id": 204010937,
        "sender_full_name": "njn",
        "timestamp": 1594846108
    },
    {
        "content": "<p>(I'm mostly just thinking aloud here)</p>",
        "id": 204010971,
        "sender_full_name": "njn",
        "timestamp": 1594846127
    },
    {
        "content": "<p>\"Cargo in your path\" with a <code>--cargo</code> option definitely seems wise, that covers the very common default nicely while allowing flexibility for the rare cases where it's needed</p>",
        "id": 204011028,
        "sender_full_name": "njn",
        "timestamp": 1594846164
    },
    {
        "content": "<p>For <code>rustdoc</code>, I'm inclined to look for it next to <code>rustc</code> by default, and maybe have a <code>--rustdoc</code> option as well.</p>",
        "id": 204011086,
        "sender_full_name": "njn",
        "timestamp": 1594846198
    },
    {
        "content": "<p>For <code>rustc</code>, I think specifying it is common enough that maybe it should just be mandatory?</p>",
        "id": 204011392,
        "sender_full_name": "njn",
        "timestamp": 1594846340
    },
    {
        "content": "<p>and a positional argument I think too</p>",
        "id": 204011436,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594846364
    },
    {
        "content": "<p>having mandatory 'options' is confusing</p>",
        "id": 204011450,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594846375
    },
    {
        "content": "<p>Yeah, the mandatory ones will all be positional</p>",
        "id": 204011462,
        "sender_full_name": "njn",
        "timestamp": 1594846381
    },
    {
        "content": "<p><code>$DB</code>, hmm. A default might be reasonable there. I'm probably unusual in having lots of different databases/directories when I do this stuff.</p>",
        "id": 204011528,
        "sender_full_name": "njn",
        "timestamp": 1594846421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  <a href=\"https://github.com/rust-lang/rustc-perf/issues/683#issuecomment-658520272\">https://github.com/rust-lang/rustc-perf/issues/683#issuecomment-658520272</a> would be helpful for this. Even if you don't add the code, if you could just show me the invocations that would be very helpful</p>",
        "id": 204011675,
        "sender_full_name": "njn",
        "timestamp": 1594846494
    },
    {
        "content": "<p>oh yeah I meant to do that this morning but completely forgot</p>",
        "id": 204011713,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846516
    },
    {
        "content": "<p>let me go push that up</p>",
        "id": 204011718,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846518
    },
    {
        "content": "<p>thanks!</p>",
        "id": 204011805,
        "sender_full_name": "njn",
        "timestamp": 1594846564
    },
    {
        "content": "<p>So, we're circling in on this:</p>\n<div class=\"codehilite\"><pre><span></span><code>collector bench_local $RUSTC $ID \\\n  --rustdoc $RUSTDOC --cargo $CARGO \\\n  --filter $FILTER --exclude $EXCLUDE \\\n  --self-profile --builds $BUILDS --runs $RUNS\n  --db $DB\n</code></pre></div>",
        "id": 204011822,
        "sender_full_name": "njn",
        "timestamp": 1594846578
    },
    {
        "content": "<p><a href=\"https://gist.github.com/Mark-Simulacrum/a0850ed4e7085a0656cb53c2762c0979\">https://gist.github.com/Mark-Simulacrum/a0850ed4e7085a0656cb53c2762c0979</a></p>",
        "id": 204011840,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846587
    },
    {
        "content": "<p>I'll need to pick out the secret variables into .env or something later and actually put it in the repo, but that should do it for now</p>",
        "id": 204011870,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846605
    },
    {
        "content": "<p>I am pretty much <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> on whatever for this</p>",
        "id": 204011903,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  Is <code>bench_published</code> for <a href=\"https://perf.rust-lang.org/dashboard.html\">https://perf.rust-lang.org/dashboard.html</a>, while <code>process</code> is for the per-merge results?</p>",
        "id": 204012362,
        "sender_full_name": "njn",
        "timestamp": 1594846879
    },
    {
        "content": "<p>correct, yes</p>",
        "id": 204012377,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846887
    },
    {
        "content": "<p>Ok, cool</p>",
        "id": 204012388,
        "sender_full_name": "njn",
        "timestamp": 1594846893
    },
    {
        "content": "<p>I'd be totally on board with merging those just haven't gotten around to it, too, btw</p>",
        "id": 204012394,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846899
    },
    {
        "content": "<p>(e.g., with a <code>--only-stable</code> arg or something)</p>",
        "id": 204012415,
        "sender_full_name": "simulacrum",
        "timestamp": 1594846912
    },
    {
        "content": "<p>sorry, merging what?</p>",
        "id": 204012485,
        "sender_full_name": "njn",
        "timestamp": 1594846937
    },
    {
        "content": "<p>oh, combining commands?</p>",
        "id": 204012506,
        "sender_full_name": "njn",
        "timestamp": 1594846948
    },
    {
        "content": "<p>yeah</p>",
        "id": 204012935,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> which ones?</p>",
        "id": 204012959,
        "sender_full_name": "njn",
        "timestamp": 1594847200
    },
    {
        "content": "<p>bench_published and process</p>",
        "id": 204012971,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847206
    },
    {
        "content": "<p>and/or making bench_published and bench_local the same command, though we'd want a \"--only-stable\" filter</p>",
        "id": 204013015,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847231
    },
    {
        "content": "<p>the latter probably makes more sense</p>",
        "id": 204013034,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847248
    },
    {
        "content": "<p>hmm, bench_published seems quite different to bench_local: in the way it gets the toolchain, and because it runs 3 times instead of 1</p>",
        "id": 204013245,
        "sender_full_name": "njn",
        "timestamp": 1594847341
    },
    {
        "content": "<p>I'm happy for it to be separate for now</p>",
        "id": 204013254,
        "sender_full_name": "njn",
        "timestamp": 1594847347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Any preferences for a default database name? <code>results.db</code>?</p>",
        "id": 204013284,
        "sender_full_name": "njn",
        "timestamp": 1594847366
    },
    {
        "content": "<p>seems fine</p>",
        "id": 204013309,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847375
    },
    {
        "content": "<p>personally I'd like it to have some connection to perf, so you know where it came from</p>",
        "id": 204013406,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594847415
    },
    {
        "content": "<p>so <code>perf.db</code> or <code>collector.db</code></p>",
        "id": 204013413,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594847421
    },
    {
        "content": "<p><code>perf.db</code> is easily confused with linux <code>perf</code>, but I like <code>collector.db</code></p>",
        "id": 204013465,
        "sender_full_name": "njn",
        "timestamp": 1594847451
    },
    {
        "content": "<p>yeah perf.db falls into the <code>perf.data</code> namespace from linux perf too closely I think</p>",
        "id": 204013514,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> any reason you put <code>Doc</code> between <code>Debug</code> and <code>Opt</code>? It feels wrong to me there :)</p>",
        "id": 204013545,
        "sender_full_name": "njn",
        "timestamp": 1594847496
    },
    {
        "content": "<p>oh I just made it alphabetical lol</p>",
        "id": 204013570,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594847506
    },
    {
        "content": "<p>ha</p>",
        "id": 204013575,
        "sender_full_name": "njn",
        "timestamp": 1594847515
    },
    {
        "content": "<p>if you want it to be by frequency of use that's probably better</p>",
        "id": 204013579,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594847517
    },
    {
        "content": "<p>ok, I might change that later</p>",
        "id": 204013632,
        "sender_full_name": "njn",
        "timestamp": 1594847526
    },
    {
        "content": "<p>And for <code>profile</code> I will default to <code>collector/</code> as the output dir</p>",
        "id": 204014345,
        "sender_full_name": "njn",
        "timestamp": 1594847875
    },
    {
        "content": "<p>I wonder if I should rename it <code>profile_local</code> to match <code>bench_local</code></p>",
        "id": 204014447,
        "sender_full_name": "njn",
        "timestamp": 1594847907
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> on that</p>",
        "id": 204014468,
        "sender_full_name": "simulacrum",
        "timestamp": 1594847917
    },
    {
        "content": "<p>Ok, here's my design: <a href=\"https://paste.mozilla.org/mi6bKPe2/raw\">https://paste.mozilla.org/mi6bKPe2/raw</a></p>",
        "id": 204015493,
        "sender_full_name": "njn",
        "timestamp": 1594848444
    },
    {
        "content": "<p>I think cargo should default to $CARGO first, and then rustup which cargo --toolchain nightly, and then cargo in path</p>",
        "id": 204015627,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> looks great!</p>",
        "id": 204015784,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848621
    },
    {
        "content": "<p>and process indeed only collects at most one commit</p>",
        "id": 204015800,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848629
    },
    {
        "content": "<p>is it the most recent revision?</p>",
        "id": 204015819,
        "sender_full_name": "njn",
        "timestamp": 1594848645
    },
    {
        "content": "<p>or the earliest not-yet-measured one?</p>",
        "id": 204015834,
        "sender_full_name": "njn",
        "timestamp": 1594848657
    },
    {
        "content": "<p>the one the server specified gives it</p>",
        "id": 204015854,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848677
    },
    {
        "content": "<p>it hits /perf/next_commit on it or so</p>",
        "id": 204015869,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848688
    },
    {
        "content": "<p>server is specified via environment var SITE_URL (e.g., \"<a href=\"https://perf.rust-lang.org\">https://perf.rust-lang.org</a>\") today</p>",
        "id": 204015957,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848725
    },
    {
        "content": "<p>mostly because I'm lazy and env variables are easier to add than cli args</p>",
        "id": 204016013,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848754
    },
    {
        "content": "<p>SITE_URL is really just a local variable in <code>run.sh</code>?</p>",
        "id": 204016074,
        "sender_full_name": "njn",
        "timestamp": 1594848806
    },
    {
        "content": "<p>yes</p>",
        "id": 204016088,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848828
    },
    {
        "content": "<p>oh, but <code>collector</code> looks at it</p>",
        "id": 204016095,
        "sender_full_name": "njn",
        "timestamp": 1594848835
    },
    {
        "content": "<p>yeah there's a bunch of env::var(\"SITE_URL\")</p>",
        "id": 204016154,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848851
    },
    {
        "content": "<p>hmm, maybe I should make that an option instead, for consistency</p>",
        "id": 204016165,
        "sender_full_name": "njn",
        "timestamp": 1594848861
    },
    {
        "content": "<p>and maybe <code>process</code> should be <code>bench_next</code></p>",
        "id": 204016181,
        "sender_full_name": "njn",
        "timestamp": 1594848881
    },
    {
        "content": "<p>I'm not opposed but you'll have to thread it through</p>",
        "id": 204016182,
        "sender_full_name": "simulacrum",
        "timestamp": 1594848883
    },
    {
        "content": "<p>that's fine</p>",
        "id": 204016202,
        "sender_full_name": "njn",
        "timestamp": 1594848903
    },
    {
        "content": "<p>I'm in a \"get rid of all the hacks and mess\" mode, might as well do it properly :)</p>",
        "id": 204016213,
        "sender_full_name": "njn",
        "timestamp": 1594848920
    },
    {
        "content": "<p>For similar reasons, I'm not sold on using $CARGO</p>",
        "id": 204016237,
        "sender_full_name": "njn",
        "timestamp": 1594848941
    },
    {
        "content": "<p>if we allow that, there's little point in also having <code>--cargo</code></p>",
        "id": 204016254,
        "sender_full_name": "njn",
        "timestamp": 1594848956
    },
    {
        "content": "<p>the <code>rustup</code> thing is neat, though</p>",
        "id": 204016304,
        "sender_full_name": "njn",
        "timestamp": 1594848968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if you commit the <a href=\"http://run.sh\">run.sh</a> script I can modify it as part of these changes</p>",
        "id": 204021807,
        "sender_full_name": "njn",
        "timestamp": 1594852783
    },
    {
        "content": "<p>/me also wonders about using dashes instead of underscores in subcommand names, e.g.<code>collector bench-local</code></p>",
        "id": 204021875,
        "sender_full_name": "njn",
        "timestamp": 1594852811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> don't worry about <a href=\"http://run.sh\">run.sh</a> I think</p>",
        "id": 204022692,
        "sender_full_name": "simulacrum",
        "timestamp": 1594853418
    },
    {
        "content": "<p>it's a trivial script</p>",
        "id": 204022697,
        "sender_full_name": "simulacrum",
        "timestamp": 1594853421
    },
    {
        "content": "<p>(and translating it will be a good \"gut check\" I think)</p>",
        "id": 204022720,
        "sender_full_name": "simulacrum",
        "timestamp": 1594853449
    },
    {
        "content": "<p>ok</p>",
        "id": 204022727,
        "sender_full_name": "njn",
        "timestamp": 1594853456
    },
    {
        "content": "<p>Hmm, <code>clap_app!</code> doesn't support hyphens in subcommand names, oh well</p>",
        "id": 204029979,
        "sender_full_name": "njn",
        "timestamp": 1594858666
    },
    {
        "content": "<p>Hmm, using <code>collector/</code> as the default output-dir for <code>profile_local</code> is a problem, because that's already a directory in the repo...</p>",
        "id": 204034585,
        "sender_full_name": "njn",
        "timestamp": 1594862890
    },
    {
        "content": "<p><code>perf_collector</code>?</p>",
        "id": 204034634,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594862969
    },
    {
        "content": "<p>or summon nasal demons and use <code>target/collector</code> <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 204034657,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594862996
    },
    {
        "content": "<p>has someone filed an issue yet to move to <code>structopt</code>?</p>",
        "id": 204038608,
        "sender_full_name": "eddyb",
        "timestamp": 1594867128
    },
    {
        "content": "<p>ehh, I don't think structopt is a giant improvement over the clap macros</p>",
        "id": 204038620,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594867154
    },
    {
        "content": "<p><em>shrug</em> it feels cleaner and I think you can do some options reuse with it</p>",
        "id": 204038626,
        "sender_full_name": "eddyb",
        "timestamp": 1594867186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> I'd expect something with \"results\" in its name, for the output</p>",
        "id": 204038644,
        "sender_full_name": "eddyb",
        "timestamp": 1594867201
    },
    {
        "content": "<p>structopt gives you more flexibility and is what the ecosystem uses, and personally I find it a ton more readable than the macros</p>",
        "id": 204040725,
        "sender_full_name": "simulacrum",
        "timestamp": 1594869765
    },
    {
        "content": "<p>(I guess you pay some compile time but with our 350 deps already it won't matter that much)</p>",
        "id": 204040730,
        "sender_full_name": "simulacrum",
        "timestamp": 1594869789
    },
    {
        "content": "<p>Clap 3 will integrate strctopt, but it's in a long cooking. <a class=\"stream\" data-stream-id=\"220302\" href=\"/#narrow/stream/220302-wg-cli\">#wg-cli</a> knows more</p>",
        "id": 204052474,
        "sender_full_name": "pachi",
        "timestamp": 1594883758
    },
    {
        "content": "<p>presumably clap -&gt; structopt will be where you need to change the code, and structopt -&gt; clap3 is mostly a surface thing</p>",
        "id": 204052649,
        "sender_full_name": "eddyb",
        "timestamp": 1594883922
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is the <code>script-servo</code> comment in <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/README.md\">https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/README.md</a> out of date?</p>",
        "id": 204148563,
        "sender_full_name": "njn",
        "timestamp": 1594936586
    },
    {
        "content": "<p>Hm you mean which commit we pulled in?</p>",
        "id": 204148595,
        "sender_full_name": "simulacrum",
        "timestamp": 1594936616
    },
    {
        "content": "<p>I think it should be correct</p>",
        "id": 204148605,
        "sender_full_name": "simulacrum",
        "timestamp": 1594936623
    },
    {
        "content": "<p>Maybe I managed to mess up somehow though</p>",
        "id": 204148637,
        "sender_full_name": "simulacrum",
        "timestamp": 1594936643
    },
    {
        "content": "<p>Ok, but the name is missing the <code>-2</code> suffix</p>",
        "id": 204149438,
        "sender_full_name": "njn",
        "timestamp": 1594937169
    },
    {
        "content": "<p>I checked blame, you updated the description, but missed the -2 suffix</p>",
        "id": 204149511,
        "sender_full_name": "njn",
        "timestamp": 1594937243
    },
    {
        "content": "<p>I will fix that</p>",
        "id": 204149513,
        "sender_full_name": "njn",
        "timestamp": 1594937245
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I have addressed your review comments for the big overhaul, thank you. Is it ok for me to merge this now? It's 8.15am here so I will be around all day to help fix any problems</p>",
        "id": 204150139,
        "sender_full_name": "njn",
        "timestamp": 1594937661
    },
    {
        "content": "<p>Oh conflicts. Oh dear, I hope they aren't bad...</p>",
        "id": 204150422,
        "sender_full_name": "njn",
        "timestamp": 1594937875
    },
    {
        "content": "<p>Ok, easy</p>",
        "id": 204150719,
        "sender_full_name": "njn",
        "timestamp": 1594938058
    },
    {
        "content": "<p>I guess you'll have to deploy for the changes to reach production</p>",
        "id": 204150857,
        "sender_full_name": "njn",
        "timestamp": 1594938126
    },
    {
        "content": "<p>And I should at least wait for CI tests to pass</p>",
        "id": 204151030,
        "sender_full_name": "njn",
        "timestamp": 1594938269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> yeah feel free to merge in the future</p>",
        "id": 204155306,
        "sender_full_name": "simulacrum",
        "timestamp": 1594941891
    },
    {
        "content": "<p>I deploy whenever I get a chance -- we currently don't cache in-progress builds so most of the time I try to wait till we're in between (or right at the start) to avoid losing a lot of work</p>",
        "id": 204155351,
        "sender_full_name": "simulacrum",
        "timestamp": 1594941931
    },
    {
        "content": "<p>Thanks for merging.</p>",
        "id": 204155773,
        "sender_full_name": "njn",
        "timestamp": 1594942263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> I just landed a big overhaul to the command-line interface of rustc-perf. It's a lot easier to get started now!</p>",
        "id": 204155800,
        "sender_full_name": "njn",
        "timestamp": 1594942287
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/README.md\">https://github.com/rust-lang/rustc-perf/blob/master/collector/README.md</a></p>",
        "id": 204155817,
        "sender_full_name": "njn",
        "timestamp": 1594942299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> wow, thanks so much, that looks very good!</p>",
        "id": 204155903,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594942344
    },
    {
        "content": "<p>We definitely want people to be running the benchmarks locally, so when you tried and failed, for me it was like a red rag to a bull</p>",
        "id": 204155962,
        "sender_full_name": "njn",
        "timestamp": 1594942394
    },
    {
        "content": "<p>I'll probably deploy the changes later tonight or tomorrow, we're 5 benchmarks away from completing the current run</p>",
        "id": 204156192,
        "sender_full_name": "simulacrum",
        "timestamp": 1594942548
    },
    {
        "content": "<p>okay changes are deployed</p>",
        "id": 204158066,
        "sender_full_name": "simulacrum",
        "timestamp": 1594944093
    },
    {
        "content": "<p>seems to be working...</p>",
        "id": 204158078,
        "sender_full_name": "simulacrum",
        "timestamp": 1594944099
    }
]