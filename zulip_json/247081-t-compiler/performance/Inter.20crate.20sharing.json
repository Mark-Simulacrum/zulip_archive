[
    {
        "content": "<p>Topic for inter crate sharing aspirations as defined on this <a href=\"https://blog.rust-lang.org/inside-rust/2022/02/22/compiler-team-ambitions-2022.html\">page</a></p>",
        "id": 275974246,
        "sender_full_name": "Vikram Pal",
        "timestamp": 1647792741
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> , <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> </p>\n<ul>\n<li>as I see on this <a href=\"https://blog.rust-lang.org/inside-rust/2022/02/22/compiler-team-ambitions-2022.html\">page</a>, \"For example, the metadata from libstd is read and decoded on every single crate compile.\" - does this metadata reading take up a significant portion of the compile time?</li>\n<li>Also is there anywhere where I can see which stage of the compiler takes how much time? Or a page with instructions how to profile rustc myself?</li>\n</ul>",
        "id": 275974429,
        "sender_full_name": "Vikram Pal",
        "timestamp": 1647793011
    },
    {
        "content": "<p>Crate metadata loading takes ~5-10% I would expect as a wild guess. Hard to estimate as it is lazily decoded as the OS also lazily reads mmaped files.</p>",
        "id": 275974674,
        "sender_full_name": "bjorn3",
        "timestamp": 1647793348
    },
    {
        "content": "<p>the easiest way to profile rustc is to use the perf collector locally, it's very well <a href=\"https://github.com/rust-lang/rustc-perf/tree/master/collector\">documented here</a>, lots of instructions to profile with different tools</p>",
        "id": 275984772,
        "sender_full_name": "lqd",
        "timestamp": 1647806248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"366040\">@Vikram Pal</span> Hi, and welcome!</p>",
        "id": 275987128,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809528
    },
    {
        "content": "<p>So, this inter-crate sharing idea is very embryonic; the paragraph you quoted is about as much detail as we have on it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 275987144,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809561
    },
    {
        "content": "<p>Metadata decoding's impact varies greatly depending on the input. For very small programs, it's a non-trivial fraction. For larger programs, it's less important. Search for \"metadata decoding\" in the <a href=\"https://hackmd.io/mxdn4U58Su-UQXwzOHpHag?view\">analysis</a> doc for more details.</p>",
        "id": 275987259,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809692
    },
    {
        "content": "<p><code>&lt;rustc_span::SourceFile as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode</code> is one key function.</p>",
        "id": 275987271,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809720
    },
    {
        "content": "<p>The sharing idea is basically just this: when compiling a multi-crate Rust programs, <code>rustc</code> is invoked separately on each crate. And almost every rustc invocation will decode the metadata for <code>std</code> and <code>alloc</code> and <code>core</code>. (The only exception would be <code>no_std</code> programs that don't use those libraries, but those are relatively rare.) Could we somehow avoid this repeated work, e.g. with some kind of compiler server that decodes that metadata once and then subsequent rustc invocations would use shared memory to access the data?</p>",
        "id": 275987370,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809846
    },
    {
        "content": "<p>I'm not sure it's even worthwhile, TBH, it was just a brainstorming idea that made its way into the Compiler Ambitions document. It's also a big challenge, especially for a newcomer.</p>",
        "id": 275987420,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809891
    },
    {
        "content": "<p>As for benchmarking and profiling, @lqd gave you the link to the relevant docs. I think they are pretty good, but please ask if anything is unclear.</p>",
        "id": 275987441,
        "sender_full_name": "nnethercote",
        "timestamp": 1647809963
    },
    {
        "content": "<p>They are heavily oriented towards Linux users, with some Windows stuff.</p>",
        "id": 275987494,
        "sender_full_name": "nnethercote",
        "timestamp": 1647810004
    },
    {
        "content": "<p>A big part of metadata decoding is remapping things like Span's and CrateNum's to match the local compilation session. This is not something that can be shared between rustc invocations.</p>",
        "id": 275993419,
        "sender_full_name": "bjorn3",
        "timestamp": 1647818976
    },
    {
        "content": "<p>Interesting... maybe it's not a feasible idea, then. Though it might be worth thinking whether there are any other things shareable between rustc invocations.</p>",
        "id": 275995485,
        "sender_full_name": "nnethercote",
        "timestamp": 1647822415
    },
    {
        "content": "<p>it would be really nice to have some insight into what metadata is stored in .rlib's; if we can decrease the size of the file, it would make all loading faster I think, as well as not needing to load as much data</p>",
        "id": 276067978,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1647876370
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/051d1176b786aadd7d7c048f822cb6bfab00fe03/compiler/rustc_metadata/src/rmeta/mod.rs#L192-L237\">https://github.com/rust-lang/rust/blob/051d1176b786aadd7d7c048f822cb6bfab00fe03/compiler/rustc_metadata/src/rmeta/mod.rs#L192-L237</a> and <a href=\"https://github.com/rust-lang/rust/blob/051d1176b786aadd7d7c048f822cb6bfab00fe03/compiler/rustc_metadata/src/rmeta/mod.rs#L277-L328\">https://github.com/rust-lang/rust/blob/051d1176b786aadd7d7c048f822cb6bfab00fe03/compiler/rustc_metadata/src/rmeta/mod.rs#L277-L328</a> list everything in the crate metadata.</p>",
        "id": 276069914,
        "sender_full_name": "bjorn3",
        "timestamp": 1647877123
    }
]