[
    {
        "content": "<p>Going to be kicking this off soon!</p>",
        "id": 247324341,
        "sender_full_name": "rylev",
        "timestamp": 1627387821
    },
    {
        "content": "<p>Done: <a href=\"https://github.com/rust-lang/rustc-perf/pull/941\">https://github.com/rust-lang/rustc-perf/pull/941</a> (this week was very quiet)</p>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> a few things we should discuss:</p>\n<ul>\n<li>We still have a few \"untriaged\" perf regressions. I'm not sure how we want to handle this. Should we continue to nag the author and/or reviewer? Should we just leave them? </li>\n<li>It would be nice for perf runs that get run after merging to post their results to the PR. This way we can easily see if a perf-result improves or degrades after merging. This is particularly helpful if a perf run is performed during review and then the reviewer decides to merge despite a regression of some sort. Sometimes the commits after the initial perf run fix the perf issue, and sometimes it makes it even worse.</li>\n</ul>",
        "id": 247326606,
        "sender_full_name": "rylev",
        "timestamp": 1627389208
    },
    {
        "content": "<p>I think we could definitely post a comment after merge on PRs, once the run completes. I'd guess that you get the same sort of summary from the triage perf report though so you can compare with that?</p>",
        "id": 247327101,
        "sender_full_name": "simulacrum",
        "timestamp": 1627389565
    },
    {
        "content": "<p>Yea no information is lost the way we currently do things, it just would be helpful for record keeping. Right now, we rely on the triage process to do this, but why not do it automatically?</p>",
        "id": 247328159,
        "sender_full_name": "rylev",
        "timestamp": 1627390188
    },
    {
        "content": "<p>Our understanding of noise has gotten better. We should be able to avoid cases where itâ€™s clearly noise.</p>",
        "id": 247328278,
        "sender_full_name": "rylev",
        "timestamp": 1627390232
    }
]