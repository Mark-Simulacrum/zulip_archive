[
    {
        "content": "<p>The rustdoc crate itself, that is, not all the rustc_middle dependencies. It takes about 40 seconds with incr-full and 30 seconds with incr-patched.</p>",
        "id": 218946739,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607192939
    },
    {
        "content": "<p>I'm timing this with the original chagnes from <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a> which use <code>rustc_private</code> and nightly artifacts from CI</p>",
        "id": 218946750,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607192971
    },
    {
        "content": "<p>... -Z self-profile does not seem to be generating any files?</p>",
        "id": 218946759,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607192986
    },
    {
        "content": "<p>I'm running <code>cargo rustc -v --lib -- -Z self-profile -v</code>, and <code>fd mm_profdata</code> has no results</p>",
        "id": 218946810,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607193016
    },
    {
        "content": "<p>I know the argument is getting through because -Z time-passes has lots of output</p>",
        "id": 218946927,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607193214
    },
    {
        "content": "<p>oh hmm I just found a bunch of profdata files lying around that weren't there before, maybe because I called rustc directly instead of going through cargo</p>",
        "id": 218947182,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607193542
    },
    {
        "content": "<p>ahhh cargo was putting them in the workspace root</p>",
        "id": 218947208,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607193600
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/8947\">https://github.com/rust-lang/cargo/issues/8947</a></p>",
        "id": 218947430,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607193921
    },
    {
        "content": "<p>ok so the issue is that rustc is spending a truly inordinate amount of time on llvm:</p>\n<div class=\"codehilite\"><pre><span></span><code>+--------------------------------------------------+-----------+-----------------+----------+------------+\n| Item                                             | Self time | % of total time | Time     | Item count |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen_emit_obj                     | 38.90s    | 42.103          | 38.90s   | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_module                                   | 19.08s    | 20.652          | 19.95s   | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_passes                                      | 18.82s    | 20.369          | 18.82s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen                              | 1.92s     | 2.080           | 40.82s   | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| typeck                                           | 1.69s     | 1.828           | 1.96s    | 2969       |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| link_rlib                                        | 1.58s     | 1.706           | 1.58s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_optimize_module_passes               | 1.23s     | 1.330           | 1.23s    | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n</code></pre></div>",
        "id": 218947602,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194166
    },
    {
        "content": "<p>(this is an incr-full build)</p>",
        "id": 218947607,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194169
    },
    {
        "content": "<p>is there a way to see which modules take the most time?</p>",
        "id": 218947615,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194198
    },
    {
        "content": "<p>If you use crox, you can see the individual optimization invocations. I know there is a PR to show the cgu name as argument, but I don't know if it is merged yet.</p>",
        "id": 218947853,
        "sender_full_name": "bjorn3",
        "timestamp": 1607194542
    },
    {
        "content": "<p>crox?</p>",
        "id": 218947902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194576
    },
    {
        "content": "<p>One of the tools of measureme. It outputs a chrome style profile file.</p>",
        "id": 218947918,
        "sender_full_name": "bjorn3",
        "timestamp": 1607194613
    },
    {
        "content": "<p>I think it stands for chromium oxide.</p>",
        "id": 218947931,
        "sender_full_name": "bjorn3",
        "timestamp": 1607194634
    },
    {
        "content": "<p>wow, rustc spawns 261 threads to compile rustdoc!</p>",
        "id": 218948038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194796
    },
    {
        "content": "<p>are those all different calls to LLVM?</p>",
        "id": 218948046,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194802
    },
    {
        "content": "<p>I guess so since there are 256 modules, the numbers are about right</p>",
        "id": 218948091,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194819
    },
    {
        "content": "<p>the one taking the most time is <code>LLVM_passes</code> at 19 seconds</p>",
        "id": 218948117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194877
    },
    {
        "content": "<p>Most are probably. It doesn't spawn all threads at once I think though. I think it does wait for some to complete to keep it at or below the parallelism limit.</p>",
        "id": 218948125,
        "sender_full_name": "bjorn3",
        "timestamp": 1607194894
    },
    {
        "content": "<p>yeah it's definitely not all at once: <a href=\"/user_uploads/4715/hMOOAIsfMOjQqxzz1Hzmsb0O/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/hMOOAIsfMOjQqxzz1Hzmsb0O/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/hMOOAIsfMOjQqxzz1Hzmsb0O/image.png\"></a></div>",
        "id": 218948139,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194921
    },
    {
        "content": "<p>I can't find info about what LLVM_passes is doing, the call-tree doesn't show anything</p>",
        "id": 218948194,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194971
    },
    {
        "content": "<p>is that just waiting for all the modules in their separate threads to finish?</p>",
        "id": 218948197,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607194983
    },
    {
        "content": "<p>What opt level are you at? Does <code>-Clto=no</code> help?</p>",
        "id": 218948214,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195006
    },
    {
        "content": "<p>this is debug mode :(</p>",
        "id": 218948219,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195018
    },
    {
        "content": "<p>although it does have debuginfo=2, let me turn that off</p>",
        "id": 218948263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195054
    },
    {
        "content": "<p>... <code>[profile.dev] debug = 1</code> is still passing -C debuginfo=2 ??</p>",
        "id": 218948296,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195134
    },
    {
        "content": "<p>LLVM_passes is started at <a href=\"https://github.com/rust-lang/rust/blob/66c1309446236985da64b56994ceca1127ca514e/compiler/rustc_codegen_ssa/src/back/write.rs#L1519\">https://github.com/rust-lang/rust/blob/66c1309446236985da64b56994ceca1127ca514e/compiler/rustc_codegen_ssa/src/back/write.rs#L1519</a></p>",
        "id": 218948301,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195141
    },
    {
        "content": "<p>huh</p>",
        "id": 218948303,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195148
    },
    {
        "content": "<p>debug = false too :(</p>",
        "id": 218948379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195247
    },
    {
        "content": "<p>time for more cargo bugs!</p>",
        "id": 218948432,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195293
    },
    {
        "content": "<p>I found <code>-Ztime-llvm-passes=yes</code> by the way.</p>",
        "id": 218948442,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195321
    },
    {
        "content": "<p>It may require <code>-Ztime-passes</code> to also be used.</p>",
        "id": 218948462,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195354
    },
    {
        "content": "<p>ok I found the issue:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: profiles for the non root package will be ignored, specify profiles at the workspace root:\npackage:   /home/joshua/rustc2/src/librustdoc/Cargo.toml\nworkspace: /home/joshua/rustc2/Cargo.toml\n</code></pre></div>",
        "id": 218948474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195368
    },
    {
        "content": "<p>... not sure why that's required, but ok</p>",
        "id": 218948488,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195388
    },
    {
        "content": "<p>maybe I should jsut build rustdoc out of tree</p>",
        "id": 218948489,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/rustdoc.20takes.20a.20long.20time.20to.20build/near/218948442\">said</a>:</p>\n<blockquote>\n<p>I found <code>-Ztime-llvm-passes=yes</code> by the way.</p>\n</blockquote>\n<p>that gives me</p>\n<div class=\"codehilite\"><pre><span></span><code>time: 21.691; rss: 1542MB       codegen_to_LLVM_IR\ntime: 26.819; rss: 1558MB       LLVM_passes(crate)\n</code></pre></div>\n<p>but not much more</p>",
        "id": 218948551,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195475
    },
    {
        "content": "<p>actually let me use -Z self-profile instead</p>",
        "id": 218948557,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195484
    },
    {
        "content": "<p>Profiles can only be defined in the workspace root.</p>",
        "id": 218948626,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195558
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/rustdoc.20takes.20a.20long.20time.20to.20build/near/218948557\">said</a>:</p>\n<blockquote>\n<p>actually let me use -Z self-profile instead</p>\n</blockquote>\n<p>that didn't give much more info:</p>\n<div class=\"codehilite\"><pre><span></span><code>+--------------------------------------------------+-----------+-----------------+----------+------------+\n| Item                                             | Self time | % of total time | Time     | Item count |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen_emit_obj                     | 125.23s   | 63.881          | 125.23s  | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_passes                                      | 26.07s    | 13.299          | 26.07s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_module                                   | 21.11s    | 10.769          | 22.01s   | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_crate                                    | 5.22s     | 2.660           | 28.41s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen                              | 2.22s     | 1.132           | 127.45s  | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_optimize_module_passes               | 2.11s     | 1.074           | 2.11s    | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| link_rlib                                        | 1.91s     | 0.975           | 1.91s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n</code></pre></div>",
        "id": 218948664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195634
    },
    {
        "content": "<p>(why did that go up so much? it only used 40 seconds of real time)</p>",
        "id": 218948710,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607195660
    },
    {
        "content": "<p>LLVM optimizations happen in parallel for each codegen unit.</p>",
        "id": 218948747,
        "sender_full_name": "bjorn3",
        "timestamp": 1607195747
    },
    {
        "content": "<p>setting <code>debuginfo = 1</code> alone cut 10 seconds off the build, in particular, link_rlib now takes almost no time:</p>\n<div class=\"codehilite\"><pre><span></span><code>| link_rlib                                        | 81.13ms   | 0.046           | 81.13ms  | 1          |\n</code></pre></div>",
        "id": 218949056,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196186
    },
    {
        "content": "<p>new top 6:</p>\n<div class=\"codehilite\"><pre><span></span><code>+--------------------------------------------------+-----------+-----------------+----------+------------+\n| Item                                             | Self time | % of total time | Time     | Item count |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen_emit_obj                     | 125.96s   | 71.031          | 125.96s  | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_passes                                      | 18.58s    | 10.480          | 18.58s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_crate                                    | 9.74s     | 5.491           | 19.85s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_module                                   | 8.88s     | 5.008           | 9.77s    | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_optimize_module_passes               | 2.15s     | 1.214           | 2.15s    | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| typeck                                           | 1.72s     | 0.971           | 2.00s    | 2969       |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n</code></pre></div>",
        "id": 218949121,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196244
    },
    {
        "content": "<p>didn't affect <code>LLVM_module_codegen_emit_obj</code> at all though</p>",
        "id": 218949132,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196260
    },
    {
        "content": "<p>weird that codegen_crate and codegen_module switched places</p>",
        "id": 218949158,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196310
    },
    {
        "content": "<p><code>emit_obj</code> is <a href=\"https://github.com/rust-lang/rust/blob/5bb68c31f8cef24174a7d3499de6b4ebea069900/compiler/rustc_codegen_llvm/src/back/write.rs#L793\">https://github.com/rust-lang/rust/blob/5bb68c31f8cef24174a7d3499de6b4ebea069900/compiler/rustc_codegen_llvm/src/back/write.rs#L793</a></p>",
        "id": 218949228,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196384
    },
    {
        "content": "<p>... all that's doing is writing an output file :(</p>",
        "id": 218949329,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196560
    },
    {
        "content": "<p>how big is this file, damn</p>",
        "id": 218949333,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196564
    },
    {
        "content": "<p>apparently this is using LegacyPassManager? Does anyone know why it's 'legacy'? <a href=\"https://llvm.org/doxygen/classllvm_1_1legacy_1_1PassManager.html\">https://llvm.org/doxygen/classllvm_1_1legacy_1_1PassManager.html</a></p>",
        "id": 218949589,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196871
    },
    {
        "content": "<p><a href=\"https://llvm.org/docs/WritingAnLLVMNewPMPass.html\">https://llvm.org/docs/WritingAnLLVMNewPMPass.html</a></p>",
        "id": 218949620,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607196937
    },
    {
        "content": "<p>anyway I'm feeling a little out of my depth <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218949754,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607197094
    },
    {
        "content": "<p>the legacy pass manager is the default in rust and also in clang there is a \"new pass manager\" have been around for years but is still experimental.</p>",
        "id": 218950037,
        "sender_full_name": "andjo403",
        "timestamp": 1607197443
    },
    {
        "content": "<p>is there a way to add debug logging to rustc_codegen_llvm and build rustdoc using that without having to rebuild the whole compiler twice?</p>",
        "id": 218950478,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198074
    },
    {
        "content": "<p>from the crox image I think that you have a cpu that can run more then 7 threads due to that is how many I see execute at the same time so I think that the biggest problem in this case is not the llvm code gen but the translation from mir to llvm ir you can see that if you expand thread 2 this result in the staircase look at all the llvm threads. I think this is common for debug builds when many threads cpus is used. if you do a release build the llvm code gen will take longer and the main thread have more time to make the mir to llvm convertion resulting more of batches of llvm threads is created in the crox image</p>",
        "id": 218950479,
        "sender_full_name": "andjo403",
        "timestamp": 1607198076
    },
    {
        "content": "<blockquote>\n<p>I think that the biggest problem in this case is not the llvm code gen but the translation from mir to llvm ir </p>\n</blockquote>\n<p>is there a way to find out what <em>part</em> of the translation is taking so long?</p>",
        "id": 218950494,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198112
    },
    {
        "content": "<p>like a module or something?</p>",
        "id": 218950502,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/rustdoc.20takes.20a.20long.20time.20to.20build/near/218950478\">said</a>:</p>\n<blockquote>\n<p>is there a way to add debug logging to rustc_codegen_llvm and build rustdoc using that without having to rebuild the whole compiler twice?</p>\n</blockquote>\n<p>I tried <code>xpy build --keep-stage 1 --stage 2 src/tools/rustdoc -v</code> but that gives an error about <code>lazy_static</code> needing to be rebuilt, probably ABI issues</p>",
        "id": 218950564,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198205
    },
    {
        "content": "<p>from the crox image there modules that is compiled in thread 6,7,8 and 9 is the once that take the longest as is expected as the biggest modules is compiled first<br>\ndo not remember if the modules is added to the events in the crox log or not maybe helps with adding -Z self-profile-events=default,args</p>",
        "id": 218950889,
        "sender_full_name": "andjo403",
        "timestamp": 1607198601
    },
    {
        "content": "<p>probably also wants  -Z human-readable-cgu-names</p>",
        "id": 218950955,
        "sender_full_name": "andjo403",
        "timestamp": 1607198661
    },
    {
        "content": "<p>these are really great flags <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> thanks so much!</p>",
        "id": 218950974,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198696
    },
    {
        "content": "<p>-Z human-readable-cgu-names gives 'file name too long' unfortunately</p>",
        "id": 218950996,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198737
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error: could not write output to /home/joshua/rustc2/target/debug/deps/rustdoc-d1788cb94b209e31.core.e41k29p2-in-rustdoc.blpus0z3-str-traits.volatile--rustc_data_structures.754dy80n-in-rustdoc.blpus0z3-sorted_map.volatile--rustc_data_structures.754dy80n-in-rustdoc.blpus0z3-stack.volatile--rustc_middle.51don9dg-in-rustdoc.blpus0z3-ty-trait_def.volatile--rustdoc.blpus0z3-passes-strip_private--std.7uelo83d-in-rustdoc.blpus0z3-sys-unix-io--std.7uelo83d-in-rustdoc.blpus0z3-sys_common-backtrace.volatile.rcgu.o: File name too long\n</code></pre></div>",
        "id": 218950997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198746
    },
    {
        "content": "<p>strange without it the event in crox  will only say something like cgu0</p>",
        "id": 218951070,
        "sender_full_name": "andjo403",
        "timestamp": 1607198856
    },
    {
        "content": "<p>lol chrome crashed trying to load the profile</p>",
        "id": 218951155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198985
    },
    {
        "content": "<p>let me close some tabs</p>",
        "id": 218951162,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607198998
    },
    {
        "content": "<p>yup, you're right, the names are useless <a href=\"/user_uploads/4715/Vj5wqIkFgZU16fPcuRSsLIFV/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/Vj5wqIkFgZU16fPcuRSsLIFV/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/Vj5wqIkFgZU16fPcuRSsLIFV/image.png\"></a></div>",
        "id": 218951248,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199091
    },
    {
        "content": "<p>can be good to add \"--minimum-duration=10 \" to crox command to remove all events that is 10ms or shorter</p>",
        "id": 218951255,
        "sender_full_name": "andjo403",
        "timestamp": 1607199111
    },
    {
        "content": "<p>to not make chrome crash due to large files</p>",
        "id": 218951323,
        "sender_full_name": "andjo403",
        "timestamp": 1607199192
    },
    {
        "content": "<p>well, chrome is working now, the file just is not very helpful because the codegen names are hashed</p>",
        "id": 218951332,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199210
    },
    {
        "content": "<p>is there a way to shorten the path names and still make them human readable?</p>",
        "id": 218951347,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199224
    },
    {
        "content": "<p>not that I know about</p>",
        "id": 218951406,
        "sender_full_name": "andjo403",
        "timestamp": 1607199266
    },
    {
        "content": "<p>has this worked for you in the past?</p>",
        "id": 218951434,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199317
    },
    {
        "content": "<p>at least you got the first cgu in the error</p>",
        "id": 218951443,
        "sender_full_name": "andjo403",
        "timestamp": 1607199333
    },
    {
        "content": "<p>oh right, that will be the largest one!</p>",
        "id": 218951499,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199372
    },
    {
        "content": "<p>do not remember if I ever did the -Z human-readable-cgu-names only remember some one else say it when I was looking in to this last year I already had the debug log and looked at the cgu merging logs</p>",
        "id": 218951612,
        "sender_full_name": "andjo403",
        "timestamp": 1607199483
    },
    {
        "content": "<p>looks like rustdoc::core, rustc_data_structures::sorted_map, rustc_data_structures::stack, rustc_middle::ty::trait_def, rustdoc::passes::strip_private, std::sys::unix::io, std::sys_common::backtrace are the modules it's compiling</p>",
        "id": 218951623,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199495
    },
    {
        "content": "<p>wow that's a lot at once</p>",
        "id": 218951629,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199505
    },
    {
        "content": "<p>ok so rather than trying to mess with this I'm going to comment out rustdoc passes one at a time and see how long it takes before and after <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218951651,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199532
    },
    {
        "content": "<p>and as it say volatile it is the generic functions in them</p>",
        "id": 218951672,
        "sender_full_name": "andjo403",
        "timestamp": 1607199563
    },
    {
        "content": "<p>all except strip_private, yeah</p>",
        "id": 218951740,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199615
    },
    {
        "content": "<p>you can also try to set -C  codegen-units=2000 or something so it do not merge the cgus</p>",
        "id": 218951785,
        "sender_full_name": "andjo403",
        "timestamp": 1607199707
    },
    {
        "content": "<p>then you also get shorter cgu names</p>",
        "id": 218951834,
        "sender_full_name": "andjo403",
        "timestamp": 1607199748
    },
    {
        "content": "<p>ok well I have good news, commenting out of rustdoc gets you half teh compile times <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218951855,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199788
    },
    {
        "content": "<p>I removed all the <code>passes</code> modules and relevant code and it now only takes 17 seconds to compile</p>",
        "id": 218951860,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199804
    },
    {
        "content": "<p>which is still not great but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 218951862,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199812
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>+--------------------------------------------------+-----------+-----------------+----------+------------+\n| Item                                             | Self time | % of total time | Time     | Item count |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen_emit_obj                     | 25.85s    | 51.124          | 25.85s   | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_module                                   | 7.01s     | 13.874          | 7.81s    | 256        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_passes                                      | 7.00s     | 13.846          | 7.00s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| typeck                                           | 1.51s     | 2.980           | 1.76s    | 2635       |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n</code></pre></div>",
        "id": 218951916,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199844
    },
    {
        "content": "<p>« We have the fastest tool in existence » « how ? » « well, it did things but was slow, now it does nothing but it’s fast » <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218951933,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1607199894
    },
    {
        "content": "<p>I don't know if I'd say 17 seconds is \"fast\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218951951,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199935
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125799\">andjo403</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/rustdoc.20takes.20a.20long.20time.20to.20build/near/218951785\">said</a>:</p>\n<blockquote>\n<p>you can also try to set -C  codegen-units=2000 or something so it do not merge the cgus</p>\n</blockquote>\n<p>this worked!</p>",
        "id": 218951960,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607199954
    },
    {
        "content": "<p>generated a 465 MB chrome_profile.json file <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218952026,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200043
    },
    {
        "content": "<p>apparently the largest module is <code>hashbrown::raw</code>??</p>",
        "id": 218952096,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200121
    },
    {
        "content": "<p>that's not even in rustdoc :/</p>",
        "id": 218952098,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200132
    },
    {
        "content": "<p>after that is <code>alloc::vec</code> at 9.5 seconds and <code>rustdoc.blpus0z3-fallback.cgu</code> at 12 seconds</p>",
        "id": 218952182,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200216
    },
    {
        "content": "<p>I don't know what the rustdoc one is - is that for the whole crate?</p>",
        "id": 218952187,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200223
    },
    {
        "content": "<p>anyway I don't know what I can do about compile times in other crates :(</p>",
        "id": 218952217,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200313
    },
    {
        "content": "<p>this is really frustrating</p>",
        "id": 218952258,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607200328
    },
    {
        "content": "<p>the downside with generic code that you as a user get the compile time, if possible reduce the number of types of hashmaps in rustdoc</p>",
        "id": 218952312,
        "sender_full_name": "andjo403",
        "timestamp": 1607200432
    },
    {
        "content": "<p>but it is also possible that it is some other generic function that is in some other crate that rustdoc is using that have the hashmaps</p>",
        "id": 218952450,
        "sender_full_name": "andjo403",
        "timestamp": 1607200652
    },
    {
        "content": "<p>I'd expect most of the hash maps to be in rustc proper :/</p>",
        "id": 218953117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607201663
    },
    {
        "content": "<p>so I don't forget: the command that worked was <code>cargo clean -p rustdoc &amp;&amp; cargo rustc --lib -- -Z self-profile -Z time-llvm-passes=yes -Z self-profile-events=default,args  -Z human-readable-cgu-names -C codegen-units=2000\n</code></p>",
        "id": 218956958,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607207665
    }
]