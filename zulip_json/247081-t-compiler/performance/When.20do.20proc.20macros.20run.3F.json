[
    {
        "content": "<p>rustc has a proc macro that generates the table of static symbols. There's <a href=\"https://github.com/rust-lang/rust/blob/ac48e62db85e6db4bbe026490381ab205f4a614d/src/librustc_macros/src/symbols.rs#L192\">an <code>eprintln!</code>statement</a> at its end that you can uncomment if you want to see the generated code.</p>",
        "id": 205196960,
        "sender_full_name": "njn",
        "timestamp": 1595910052
    },
    {
        "content": "<p>When I run <code>./x.py check</code>, that <code>eprintln</code> statement prints stuff out every single time. Even if I haven't changed the code.</p>",
        "id": 205196968,
        "sender_full_name": "njn",
        "timestamp": 1595910080
    },
    {
        "content": "<p>That seems wrong. Is it wrong?</p>",
        "id": 205196971,
        "sender_full_name": "njn",
        "timestamp": 1595910088
    },
    {
        "content": "<p>The output from a nothing-changed <code>./x.py check</code> run is like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Submodules updated in 0.05 seconds\n    Finished dev [unoptimized + debuginfo] target(s) in 0.10s\nChecking rustdoc artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\nChecking clippy artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\nChecking std artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\n    Finished release [optimized + debuginfo] target(s) in 0.10s\nChecking compiler artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\n&lt;... eprintln output...&gt;\n    Finished release [optimized + debuginfo] target(s) in 0.15s\nChecking rustdoc artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\n    Finished release [optimized + debuginfo] target(s) in 0.11s\nChecking clippy artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\n    Finished release [optimized + debuginfo] target(s) in 0.10s\nBuild completed successfully in 0:00:52\n</code></pre></div>",
        "id": 205197030,
        "sender_full_name": "njn",
        "timestamp": 1595910173
    },
    {
        "content": "<p>And with <code>./x.py build --stage 2 src/rustc</code> it runs twice every time, once per stage</p>",
        "id": 205197834,
        "sender_full_name": "njn",
        "timestamp": 1595911539
    },
    {
        "content": "<p>I think in this case, the output is cached by Cargo, and replayed during each build.  I think you can use stdout (<code>println</code>) to avoid the cache if that's a problem.</p>",
        "id": 205199953,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595914958
    },
    {
        "content": "<p>ah</p>",
        "id": 205201445,
        "sender_full_name": "njn",
        "timestamp": 1595917109
    },
    {
        "content": "<p>Yes, using <code>println</code> avoids the repetition. Makes sense, thanks!</p>",
        "id": 205201573,
        "sender_full_name": "njn",
        "timestamp": 1595917312
    }
]