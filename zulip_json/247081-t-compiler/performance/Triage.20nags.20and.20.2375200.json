[
    {
        "content": "<p>I was sad to see the response by the author to the <a href=\"https://github.com/rust-lang/rust/pull/75200#issuecomment-689123704\">perf triage comment</a> I left on <a href=\"https://github.com/rust-lang/rust/issues/75200\">#75200</a>. AFAIK, there's no template for such comments, but maybe there should be some front-matter indicating that perf triage is a normal part of contributing to the compiler, and that PRs that don't provide tangible benefits to users should provide some justification if they regress performance.</p>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you have any thoughts on the general outline, or on <a href=\"https://github.com/rust-lang/rust/issues/75200\">#75200</a> in particular? I'd like to leave another comment on that PR, since I don't want the author to feel singled-out. I'm sympathetic since A) The increase is barely over the 1% threshold (full builds of cranelift) B) there's no runtime regressions for BTreeMap users C) I am guessing that the increase in instruction counts is purely due to more LLVM IR, which is a pretty high burden to put on standard library maintainers.</p>\n<p>OTOH, I suspect that the <code>Handle</code>/<code>NodeRef</code> part of the <code>BTreeMap</code> implementation is already excessively generic, and contributor time would be better spent removing the <code>marker</code> abstraction (it seems to cause safety issues anyway) than doubling down on it.</p>",
        "id": 209550780,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1599676816
    },
    {
        "content": "<p>It's... a complicated topic</p>",
        "id": 209550833,
        "sender_full_name": "simulacrum",
        "timestamp": 1599676855
    },
    {
        "content": "<p>Yeah, I'm not going to do anything unilaterally here.</p>",
        "id": 209550962,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1599676927
    },
    {
        "content": "<p>some more context in <a href=\"https://github.com/rust-lang/rust/pull/73971#issuecomment-687250207\">https://github.com/rust-lang/rust/pull/73971#issuecomment-687250207</a> and <a href=\"https://github.com/rust-lang/rust/pull/74437#issuecomment-689475199\">https://github.com/rust-lang/rust/pull/74437#issuecomment-689475199</a> maybe</p>",
        "id": 209550995,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599676950
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 209552149,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1599677487
    },
    {
        "content": "<p>well to be fair, instruction counts <em>aren't</em> necessarily a good predictor for observed performance</p>",
        "id": 209785457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833604
    },
    {
        "content": "<p>but yeah, the tone of the PR author's response is unfortunate</p>",
        "id": 209785483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833617
    },
    {
        "content": "<p>I mean, there's ways of reading \"but I'm beyond caring\" so that it can be taken to mean \"do whatever you like here; I'm not going to object if you choose to revert.\" But that's not really what you had asked them anyway.</p>",
        "id": 209785595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833663
    },
    {
        "content": "<p>i sense a bit of harshness from the author in a few other places as well (including the ones which joshua linked),I guess they were expecting the entire contribution process to be faster than expected and they got pulled into making changes and resolving conflicts</p>",
        "id": 209845157,
        "sender_full_name": "DPC",
        "timestamp": 1599865347
    },
    {
        "content": "<p>This is kind of just a thought on the review process based one one of the things that the author brought up. Maybe when a PR  or changes are requested on the PR, rust highfive puts a message saying if the comments are resolved please update the labels using this command <code>@rustbot </code> essentially the exact command someone can copy paste to set waiting on review label. And it also just lets the user know that this is an Open Source Project and that review can take time. The frequency of this can be tailored to when was the last time the person created a PR or any other factors.</p>\n<p>At some point if the user runs the rustbot command to notify that they have applied some fixups as requested, and the PR isn't reviewed for some time (say 1 week after the change in label), it sends a gentle reminder to the person who requested changes. and if say it gets to two weeks or some other arbitary period it maybe requests review from another person similar to how rust-highfive would've when a PR is created without <code>r?</code></p>",
        "id": 209896863,
        "sender_full_name": "Aman Arora",
        "timestamp": 1599939907
    }
]