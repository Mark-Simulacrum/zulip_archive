[
    {
        "content": "<p>Why does MIR_effect_checking (more precisely, mir_drops_elaborated_and_const_checked) run borrowck? There is a comment (This also runs mir borrowck <em>before</em> doing so in order to ensure that borrowck can be run and doesn't end up missing the source MIR due to stealing happening.) but the pass runs <em>after</em> borrowck so I believe this just re-runs the check?</p>",
        "id": 223676251,
        "sender_full_name": "D치niel Buga",
        "timestamp": 1611338349
    },
    {
        "content": "<p>I guess the question is whether borrowck runs twice in some cases, or I don't understand what ensure does? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 223677301,
        "sender_full_name": "D치niel Buga",
        "timestamp": 1611338826
    },
    {
        "content": "<p>The borrowck result for the particular def_id should be cached by the first query, so the second borrowck for that def_id shouldn't actually run.</p>\n<p>The <code>ensure()</code> just means to ensure that the query result is in the cache (i.e. if the query hasn't run, run it and cache result, otherwise do nothing), and that the client isn't interested in the actual return value, so we can avoid the work of extracting it from the cache.</p>",
        "id": 223681253,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611340628
    },
    {
        "content": "<p>I don't know the details of <code>mir_drops_elaborated_and_const_checked</code> and <code>borrowck</code> specifically, but I assume the former runs the latter because it is called by other clients who <em>don't</em> run <code>borrowck</code> before calling it.</p>",
        "id": 223681385,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611340697
    },
    {
        "content": "<p>Thanks</p>",
        "id": 223681629,
        "sender_full_name": "D치niel Buga",
        "timestamp": 1611340838
    },
    {
        "content": "<p>I guess what mislead me somewhat is the comment above ensure: \"Returns a transparent wrapper for <code>TyCtxt</code>, which ensures queries are executed instead of just returning their results.\" - I guess I should look for the eval_always flag on the particular query, right?</p>",
        "id": 223681933,
        "sender_full_name": "D치niel Buga",
        "timestamp": 1611341020
    },
    {
        "content": "<p>Yeah, that comment could use some tuning. :)</p>\n<p><code>eval_always</code> query results are cached in memory too. So it wouldn't run twice if it were <code>eval_always</code>, either. \"Always\" doesn't mean <em>always</em>. :) It means the first time we encounter this query during incremental compilation.</p>",
        "id": 223685083,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611342694
    },
    {
        "content": "<p>The name should probably be changed, really</p>",
        "id": 223685719,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611343035
    }
]