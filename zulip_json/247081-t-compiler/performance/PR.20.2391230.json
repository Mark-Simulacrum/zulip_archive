[
    {
        "content": "<p>I'm looking into the perf regression arising from this PR, but this is my first foray into using rustc-perf/collector.  I've pulled the toolchains with <code>rustup-toolchain-install-master</code>, but on running <code>collector profile_local cachegrind</code> rustup complains that it cannot find <code>cargo</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ rustup which cargo\n/usr/local/rustup/toolchains/1.56.0-x86_64-unknown-linux-gnu/bin/cargo\n$ ./collector profile_local cachegrind +862962b90e59c5c1e217df74de80d3a81eee42f4 before --builds Check --include diesel --runs Full\ncollector error: `rustup which cargo` exited with status exit status: 101\nstderr=thread 'main' panicked at 'binary not found', src/cli/rustup_mode.rs:1053:6\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>Do I need to install cargo for the rustc toolchains that are to be benchmarked and, if so, how (<code>rustup component add --toolchain ... cargo</code> complains that <code>... is a custom toolchain</code>)?</p>",
        "id": 262786079,
        "sender_full_name": "eggyal",
        "timestamp": 1637925833
    },
    {
        "content": "<p>Ah.  Installing a nightly toolchain fixed it.  I'll open a PR shortly to provide a better error message in this case.</p>",
        "id": 262788003,
        "sender_full_name": "eggyal",
        "timestamp": 1637927143
    },
    {
        "content": "<p>there's a recently added command that does it automatically</p>\n<div class=\"codehilite\"><pre><span></span><code>collector diff_local cachegrind +commitID1 +commitID2\n</code></pre></div>\n<p>Automatically downloads the appropriate versions if you have rustup-toolchain-installer-master installed.</p>",
        "id": 262788124,
        "sender_full_name": "The 8472",
        "timestamp": 1637927231
    },
    {
        "content": "<p>Aye, I was using that at first and got the same error so delved deeper and tried with <code>profile_local</code> directly.  The problem was that (in this container) I didn't have a nightly toolchain installed.</p>",
        "id": 262788288,
        "sender_full_name": "eggyal",
        "timestamp": 1637927371
    },
    {
        "content": "<p>I've posted the cg_diff in <a href=\"https://github.com/rust-lang/rust/pull/91230#issuecomment-979960152\">a comment on the PR</a> (click to expand details).  Nothing obvious is readily jumping out at me so I'll continue investigating, but maybe someone more familiar with the compiler might readily notice something I've missed?  Grateful if anyone has 30 seconds to take a quick peek.</p>",
        "id": 262794589,
        "sender_full_name": "eggyal",
        "timestamp": 1637931670
    },
    {
        "content": "<p>hmm, the regressions there look mostly balanced with the improvements, but in different functions - I wonder if LLVM just made different optimization decisions?</p>",
        "id": 262797002,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637933194
    },
    {
        "content": "<p>(having PGO on makes this hard to diagnose IMO)</p>",
        "id": 262797027,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637933211
    },
    {
        "content": "<p>Hmmmm... is PGO enabled?  The compilers themselves aren't emitting <code>.profraw</code> files so I guess they weren't compiled with instrumentation; and I don't see any PGO args amongst those passed to the invocations?</p>",
        "id": 262798521,
        "sender_full_name": "eggyal",
        "timestamp": 1637934093
    },
    {
        "content": "<p>not locally, but in CI</p>",
        "id": 262798728,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637934233
    },
    {
        "content": "<p>Ah, CI feeds in some profile when the compilers were built?  Gotcha.</p>",
        "id": 262798812,
        "sender_full_name": "eggyal",
        "timestamp": 1637934274
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> FYI</p>",
        "id": 262799497,
        "sender_full_name": "eggyal",
        "timestamp": 1637934718
    },
    {
        "content": "<p>I somewhat expected this might just be \"noise\" from llvm</p>",
        "id": 262799876,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637934959
    },
    {
        "content": "<p>I don't think it's worth looking deeper into it</p>",
        "id": 262799982,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637935042
    }
]