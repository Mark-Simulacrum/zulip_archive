[
    {
        "content": "<p>Was thinking a bit about the layout of the database (at least for benchmark runs). There's a few small pieces that make it a bit strange to query for some stuff. I took a stab at doing some slight tweaks to the schema to hopefully make things a bit clearer. <a href=\"https://asciiflow.com/#/share/eJzNVktqwzAQvYrQsmTTrpqcxWAURSGishwkpcSEQDFddtGFSbvosqcoPo1PUrnyR4kVsJQ2VAzE8vN788bxDNpBjhICZ3zD2AQylBEBZ3AXwW0EZ9Pp7SSCmb66u5%2FqK0W2Sm8iCMyqipeqePKJ1ygSV%2BbxzmwO5oTjVYLEg2zuNLI5wCljBCuacnmCIKHoEmElQcfpJT88%2FXw2slfk2fUfL7tKL4RXRXkah6%2F6YboAN26ZAVK9PWueG9MsA5swGUPLaLO4WcChX7eEWx%2BnSUKVW9%2FNcun%2FtX%2Bx4TJOeSwVmjMyTr8EC6T%2Bif8wfZWtR%2FkvPHvovckewjPewjJazs1%2B5OpKtdfvKwKXXuhkDyH6uMrBWjeDiiURlMijr6OBZM%2FOfZRLT9tl90%2F4jnIvV65HxBnIr97BtK6Vq0PZjpHhoL%2Fcd6sd4NwZ%2FUEg1natLA1sPpMfbFSefuP2H%2FbeLdW1SJeUERtuVdvziXF7ruKAuKiuYzJGeEXc5P7gVRfgIntkPmHWfU2lotjWqn8eEduQAc%2Fuab%2FoaJ6jAO7h%2FhuTYt6r\">Here's a diagram</a><br>\nIn general it just gives every table an id and does joins through ids instead of multi-column joins. I'm not sure if this will be any more performant, but it definitely feels a bit more \"normal\" - at least coming from a web backend background.</p>",
        "id": 245511912,
        "sender_full_name": "rylev",
        "timestamp": 1625868981
    },
    {
        "content": "<p>If you're curious what the schema is like now, I did a bit of a write up on it <a href=\"https://github.com/rust-lang/rustc-perf/pull/899\">here</a></p>",
        "id": 245511997,
        "sender_full_name": "rylev",
        "timestamp": 1625869018
    },
    {
        "content": "<p>hm, I am trying to see how that diagram is different from what we do today</p>",
        "id": 245512428,
        "sender_full_name": "simulacrum",
        "timestamp": 1625869178
    },
    {
        "content": "<p>ah, I see, every table an ID</p>",
        "id": 245512615,
        "sender_full_name": "simulacrum",
        "timestamp": 1625869278
    },
    {
        "content": "<p>I think that we already have that -- we just drop the id from tables where it seems \"unnecessary\" (i.e., we never reference that table)</p>",
        "id": 245512690,
        "sender_full_name": "simulacrum",
        "timestamp": 1625869324
    },
    {
        "content": "<p>Yea there's not too much of a difference. The biggest one is having the benchmark name be the primary key. I'm not sure how well the databases handle text as primary keys</p>",
        "id": 245512838,
        "sender_full_name": "rylev",
        "timestamp": 1625869447
    },
    {
        "content": "<p>I have to admit, my first version was a bit different, but I tried to scale it back to not have to do huge migrations.</p>",
        "id": 245512871,
        "sender_full_name": "rylev",
        "timestamp": 1625869475
    },
    {
        "content": "<p>I suppose we can leave it as it is since it's probably not worth the migrations for the small quality of life changes. I can add a diagram to the schema documentation PR</p>",
        "id": 245512930,
        "sender_full_name": "rylev",
        "timestamp": 1625869534
    },
    {
        "content": "<p>hm, yeah, probably not worth the migration hassle. thanks!</p>",
        "id": 245513008,
        "sender_full_name": "simulacrum",
        "timestamp": 1625869583
    }
]