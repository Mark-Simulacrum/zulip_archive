[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is there anything preventing us from queuing an already merged PR (through a rollup) to see if it introduces performance issues? Is there any reason why this wouldn't already just work?</p>",
        "id": 258197853,
        "sender_full_name": "rylev",
        "timestamp": 1634651540
    },
    {
        "content": "<p>not sure I follow</p>",
        "id": 258211891,
        "sender_full_name": "simulacrum",
        "timestamp": 1634656220
    },
    {
        "content": "<p>we need artifacts, individual PRs in a rollup don't have them (and in theory aren't even guaranteed to build)</p>",
        "id": 258211927,
        "sender_full_name": "simulacrum",
        "timestamp": 1634656240
    },
    {
        "content": "<p>I mean we could get bors to build them using the try mechanism</p>",
        "id": 258212781,
        "sender_full_name": "rylev",
        "timestamp": 1634656515
    },
    {
        "content": "<p>yeah that's the partial support we have in-tree (pull-request-build command) and such, it doesn't get the commit list quite right today</p>",
        "id": 258212960,
        "sender_full_name": "simulacrum",
        "timestamp": 1634656564
    },
    {
        "content": "<p>I think it may be worth considering the impact of having bors automatically enqueue try builds for all PRs merged via rollup, as-if they were merged in sequence (i.e., not trying to base them on master), with the goal of easing bisection and such</p>",
        "id": 258213203,
        "sender_full_name": "simulacrum",
        "timestamp": 1634656650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/running.20perf.20after.20merge/near/258212960\">said</a>:</p>\n<blockquote>\n<p>yeah that's the partial support we have in-tree (pull-request-build command) and such, it doesn't get the commit list quite right today</p>\n</blockquote>\n<p>I think what I want is slightly different. I simply want bors to build the PR branch (just like we do for try builds). I'm not asking to fast forward the commits on top of the latest master</p>",
        "id": 258213973,
        "sender_full_name": "rylev",
        "timestamp": 1634656892
    },
    {
        "content": "<p>But perhaps I'm miss understanding how the pull-request-build command works</p>",
        "id": 258214048,
        "sender_full_name": "rylev",
        "timestamp": 1634656915
    },
    {
        "content": "<p>Individual PR test should only be needed if rollup has significant perf change, right?</p>",
        "id": 258214174,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634656946
    },
    {
        "content": "<p>try builds rebase atop latest master?</p>",
        "id": 258215029,
        "sender_full_name": "simulacrum",
        "timestamp": 1634657243
    },
    {
        "content": "<p>but regardless, yes, you want something a little different.</p>",
        "id": 258215048,
        "sender_full_name": "simulacrum",
        "timestamp": 1634657251
    },
    {
        "content": "<p>(in the sense that what you want I think is the same goal just different means of achieving it)</p>",
        "id": 258215107,
        "sender_full_name": "simulacrum",
        "timestamp": 1634657273
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/running.20perf.20after.20merge/near/258215029\">said</a>:</p>\n<blockquote>\n<p>try builds rebase atop latest master?</p>\n</blockquote>\n<p>Ah this makes sense but I actually didn't realize this.</p>",
        "id": 258216826,
        "sender_full_name": "rylev",
        "timestamp": 1634657853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303710\">Gary Guo</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/running.20perf.20after.20merge/near/258214174\">said</a>:</p>\n<blockquote>\n<p>Individual PR test should only be needed if rollup has significant perf change, right?</p>\n</blockquote>\n<p>Yes I think we could automatically kick this off in the case that a perf change was found</p>",
        "id": 258216947,
        "sender_full_name": "rylev",
        "timestamp": 1634657887
    },
    {
        "content": "<p>The issue is that it's often easier for a person to tell when a particular PR is definitely not to blame (e.g., only tests or markdown files were changed)</p>",
        "id": 258217077,
        "sender_full_name": "rylev",
        "timestamp": 1634657928
    },
    {
        "content": "<p>I think doing it after the fact is actually probably somewhat harder than having it automatically happen on r+ for a rollup, but I could be wrong</p>",
        "id": 258217794,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658149
    },
    {
        "content": "<p>IIRC my thinking at one point was for rust-timer to actually queue these up itself, by setting up permissions appropriately and pushing to the right branch</p>",
        "id": 258217870,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658180
    },
    {
        "content": "<p>We can change the try command to:</p>\n<ul>\n<li>Check if the PR is already merged</li>\n<li>If not, rebase on master</li>\n<li>If merged, find the rollup merge commit, and rebase on its parent</li>\n</ul>",
        "id": 258218038,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658236
    },
    {
        "content": "<p>that... seems a bit excessive to try to put into try</p>",
        "id": 258218471,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658366
    },
    {
        "content": "<p>I think doing this after the PR merges quickly runs into CI breakage trouble, especially if it's a while afterwards, and I don't think we benefit that much from trying to avoid some of the try builds</p>",
        "id": 258218578,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658416
    },
    {
        "content": "<p>What trouble?</p>",
        "id": 258218862,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658496
    },
    {
        "content": "<p>The parent commit should have its perf run available already</p>",
        "id": 258218922,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658514
    },
    {
        "content": "<p>a try build currently rebases on latest master, because we may have landed CI-fixing commits that will otherwise prevent running CI regardless of the state of the branch</p>",
        "id": 258219472,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658686
    },
    {
        "content": "<p>my recommendation would be to immediately run try build equivalents on r+ of a rollup for each of the contained PRs, though likely bypassing bors entirely -- we can have rustc-perf push directly to the appropriate branch and enqueue a build that way.</p>",
        "id": 258219808,
        "sender_full_name": "simulacrum",
        "timestamp": 1634658777
    },
    {
        "content": "<p>If all PRs will be individually build anyway then probably the whole flow could be improved.</p>",
        "id": 258220179,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658894
    },
    {
        "content": "<p>E.g. try build all PRs regardless rollup</p>",
        "id": 258220214,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658907
    },
    {
        "content": "<p>And then only consider a PR approved once try build is also completed</p>",
        "id": 258220432,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634658969
    },
    {
        "content": "<p>well, you want to time it synchronous to the merge, basically</p>",
        "id": 258220675,
        "sender_full_name": "simulacrum",
        "timestamp": 1634659042
    },
    {
        "content": "<p>but in theory, yes, you could also do this on r+ immediately</p>",
        "id": 258220753,
        "sender_full_name": "simulacrum",
        "timestamp": 1634659062
    },
    {
        "content": "<p>which is probably ~80% good enough</p>",
        "id": 258220787,
        "sender_full_name": "simulacrum",
        "timestamp": 1634659070
    }
]