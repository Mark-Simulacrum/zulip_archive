[
    {
        "content": "<p>Hey y'all, I was looking at the <a href=\"https://perf.rust-lang.org/?start=2022-03-01&amp;end=2022-03-30&amp;kind=percentfromfirst&amp;stat=max-rss\">max-rss data for march</a> and it seemed worth talking about</p>",
        "id": 277194155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668167
    },
    {
        "content": "<p>It <em>seems</em> like we might have had a slight regression here over the past month. I'm not yet sure what to attribute it to</p>",
        "id": 277194190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668191
    },
    {
        "content": "<p>Some of the phase shift might be attributable to PR <a href=\"https://github.com/rust-lang/rust/issues/90253\">#90253</a>; if you look at <a href=\"https://perf.rust-lang.org/compare.html?start=af8604faddc44b27a59d1a719ff6ceca8bc145eb&amp;end=c9b45e601065c3fb71a4f67481e912391d075621&amp;stat=max-rss\">max-rss for its associated perf run</a> you do see a fair amount of red</p>",
        "id": 277194322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668260
    },
    {
        "content": "<p>(though the \"low\" significance factor may lead me to conclude that its a mistake to look just there...)</p>",
        "id": 277194370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668297
    },
    {
        "content": "<p>maybe I'm just attaching too much importance to small shifts in the summary data.  E.g. I thought from the Summary-debug graph that maybe <a href=\"https://github.com/rust-lang/rust/issues/95056\">#95056</a> represents another regressive phase shift, but the associated <a href=\"https://perf.rust-lang.org/compare.html?start=4ca56d2b7bbe275bc6c9f3cd698c6e0719a07182&amp;end=cd119057160cedea245aa2679add56723f3dc784&amp;stat=max-rss\">max-rss for its perf run</a> isn't triggering any red flags for me.</p>",
        "id": 277194686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668484
    },
    {
        "content": "<p>I'm currently planning to at least mention the max-rss in the triage report</p>",
        "id": 277194803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648668564
    },
    {
        "content": "<p>We should add a notification to the PR comment summary if RSS changes too much (<a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Performance.20summary.20only.20warns.20about.20icount\">https://rust-lang.zulipchat.com/#narrow/stream/247081-t-compiler.2Fperformance/topic/Performance.20summary.20only.20warns.20about.20icount</a>). I'll try to design some prototype once <a href=\"https://github.com/rust-lang/rustc-perf/pull/1245\">https://github.com/rust-lang/rustc-perf/pull/1245</a> lands.</p>",
        "id": 277197916,
        "sender_full_name": "Jakub Ber√°nek",
        "timestamp": 1648670457
    },
    {
        "content": "<p>It's expected that <code>IndexMap</code> takes more space than <code>HashMap</code> for the same data, because it adds index storage, and also stores hashes to recoup some performance.</p>",
        "id": 277202072,
        "sender_full_name": "cuviper",
        "timestamp": 1648673274
    },
    {
        "content": "<p>Whether that's significant in the grand scheme is another question.</p>",
        "id": 277202241,
        "sender_full_name": "cuviper",
        "timestamp": 1648673385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/max-rss.20over.202022-03/near/277202072\">said</a>:</p>\n<blockquote>\n<p>It's expected that <code>IndexMap</code> takes more space than <code>HashMap</code> for the same data, because it adds index storage, and also stores hashes to recoup some performance.</p>\n</blockquote>\n<p>huh. \"adds index storage\" ==&gt; I would have assumed the indexes were left implicit, and you'd convert back from <code>usize</code> to the index type on demand.</p>",
        "id": 277293740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738492
    },
    {
        "content": "<p>so now I'm looking at the implementation ...</p>",
        "id": 277293794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738515
    },
    {
        "content": "<p>oh oh oh, of course: to be drop-in replacement for HashMap, you need to have map from hashcode to index</p>",
        "id": 277294045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738613
    },
    {
        "content": "<p>(I was assuming <code>IndexMap</code> was something else entirely; a map structure where the keys are themselves newtype'd usizes)</p>",
        "id": 277294144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738660
    },
    {
        "content": "<p>okay, yes, I was thinking of <a href=\"https://docs.rs/index_vec/latest/index_vec/\"><code>index_vec</code></a></p>",
        "id": 277294354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738765
    },
    {
        "content": "<p>The <code>vec_map</code> crate is another form of implicit <code>usize</code> key</p>",
        "id": 277295116,
        "sender_full_name": "cuviper",
        "timestamp": 1648739057
    }
]