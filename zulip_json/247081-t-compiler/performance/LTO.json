[
    {
        "content": "<p>Is rustc itself built with LTO?</p>",
        "id": 260878731,
        "sender_full_name": "nnethercote",
        "timestamp": 1636501102
    },
    {
        "content": "<p>x86_64-unknown-linux-gnu currently has std built with CGU=1, LLVM is ThinLTO'd and PGO'd, and rustc itself is PGO'd and I think ThinLTO'd (like all rust compilations) within each crate's codegen units but not across crates</p>",
        "id": 260879156,
        "sender_full_name": "simulacrum",
        "timestamp": 1636501390
    },
    {
        "content": "<p>src/ci/pgo.sh may be a helpful reference</p>",
        "id": 260879174,
        "sender_full_name": "simulacrum",
        "timestamp": 1636501409
    },
    {
        "content": "<p>Lovely, thanks</p>",
        "id": 260879900,
        "sender_full_name": "nnethercote",
        "timestamp": 1636501868
    },
    {
        "content": "<p>Wait, ThinLTO is on by default? Is that new?</p>",
        "id": 260880153,
        "sender_full_name": "nnethercote",
        "timestamp": 1636502008
    },
    {
        "content": "<p>Hm. I think it's always been the case within a crate</p>",
        "id": 260880259,
        "sender_full_name": "simulacrum",
        "timestamp": 1636502056
    },
    {
        "content": "<p>after we moved the cgu default to 16</p>",
        "id": 260880266,
        "sender_full_name": "simulacrum",
        "timestamp": 1636502062
    },
    {
        "content": "<p>I have worked a bit on getting rustc built with (cross-crate) thin LTO (not PR ready yet) and preliminary results are promising. Of course rustc and rustdoc are about ~150MiB with LTO. I can open a draft PR (without proper rustbuild integration) so we can do a perf run.</p>",
        "id": 260880335,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1636502116
    },
    {
        "content": "<p>yeah, so this PR implies <a href=\"https://github.com/rust-lang/rust/pull/46910\">https://github.com/rust-lang/rust/pull/46910</a></p>",
        "id": 260880343,
        "sender_full_name": "simulacrum",
        "timestamp": 1636502120
    },
    {
        "content": "<p>I'm confused by the conflicting answers</p>",
        "id": 260880638,
        "sender_full_name": "nnethercote",
        "timestamp": 1636502287
    },
    {
        "content": "<p>Rust does \"thin-local LTO\" so that it can optimize across cgu boundaries within a crate. That is what we use for rustc. We don't do any cross-crate LTO at the moment.</p>",
        "id": 260881026,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1636502497
    },
    {
        "content": "<p>Ah, \"thin LTO\" != \"thin-local LTO\", thanks</p>",
        "id": 260881229,
        "sender_full_name": "nnethercote",
        "timestamp": 1636502624
    },
    {
        "content": "<p>So rustc uses thin-local LTO, but not thin LTO, sounds like</p>",
        "id": 260881341,
        "sender_full_name": "nnethercote",
        "timestamp": 1636502671
    },
    {
        "content": "<p>yeah, I think that's right</p>",
        "id": 260881351,
        "sender_full_name": "simulacrum",
        "timestamp": 1636502679
    }
]