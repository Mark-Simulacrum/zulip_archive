[
    {
        "content": "<p>Some of our benchmarks, like <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/externs/src/lib.rs\">externs</a>, are designed to exericise certain paths of the compiler in a pathological way.</p>",
        "id": 264966561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545006
    },
    {
        "content": "<p>I understand why we have such benchmarks</p>",
        "id": 264966574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545019
    },
    {
        "content": "<p>however:</p>",
        "id": 264966575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545032
    },
    {
        "content": "<ol>\n<li>it would be nice if they were separated from the “real world” benchmarks in the summary presentations.</li>\n</ol>",
        "id": 264966582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545044
    },
    {
        "content": "<ol start=\"2\">\n<li>maybe the threshold for when we trigger a regresion warning should be higher for such cases? Like, no one cares if <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/externs/src/lib.rs\">externs</a> compile-time goes up (or down!) by 0.8% , right?</li>\n</ol>",
        "id": 264966610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> I think you might have had comments along these lines recently, though I couldn’t immediately find them</p>",
        "id": 264966940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545444
    },
    {
        "content": "<p>I think I mentioned it as a tangent in a thread about something else. I agree with the idea of separating them!</p>",
        "id": 264967020,
        "sender_full_name": "nnethercote",
        "timestamp": 1639545516
    },
    {
        "content": "<p>I can mentally filter out the uninteresting ones, but it's a bit annoying, and most people don't have that knowledge of the benchmark suite</p>",
        "id": 264967066,
        "sender_full_name": "nnethercote",
        "timestamp": 1639545577
    },
    {
        "content": "<p>One big potential benefit of tagging+separating them would also to have separate summary from just combining the real-world cases, which is harder to do in one’s head.</p>",
        "id": 264967175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639545676
    },
    {
        "content": "<p>Another pattern I find myself doing that we might be able to automate in our tooling: When there’s only one benchmark regressing, I look at the preceding and successor PRs, to see if this was just a “bounce.” We could/should make that either easier (i.e. detect it as part of report genreation and remove it) or completely unnecessary.</p>",
        "id": 264969382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639548446
    },
    {
        "content": "<p>I haven't had any good idea about how do do the real-world/artificial split in the presentation</p>",
        "id": 264969884,
        "sender_full_name": "nnethercote",
        "timestamp": 1639549074
    },
    {
        "content": "<p>I guess the dumb thing is to just split everything (tables, pages of graphs, etc.) into two halves: real first, then artificial</p>",
        "id": 264969935,
        "sender_full_name": "nnethercote",
        "timestamp": 1639549108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/categorize.20.E2.80.9Creal.20world.E2.80.9D.20vs.20.E2.80.9Cpathological.E2.80.9D.20benchmarks.3F/near/264969382\">said</a>:</p>\n<blockquote>\n<p>Another pattern I find myself doing that we might be able to automate in our tooling: When there’s only one benchmark regressing, I look at the preceding and successor PRs, to see if this was just a “bounce.” We could/should make that either easier (i.e. detect it as part of report genreation and remove it) or completely unnecessary.</p>\n</blockquote>\n<p>Is that all that common outside the incremental verification issue?</p>",
        "id": 264983666,
        "sender_full_name": "The 8472",
        "timestamp": 1639560678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/categorize.20.E2.80.9Creal.20world.E2.80.9D.20vs.20.E2.80.9Cpathological.E2.80.9D.20benchmarks.3F/near/264983666\">said</a>:</p>\n<blockquote>\n<p>Is that all that common outside the incremental verification issue?</p>\n</blockquote>\n<p>Hmm I’d have to go back and look again at the cases that arose to check if they all fell into that category.</p>",
        "id": 265027695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639582799
    },
    {
        "content": "<p>I like the idea of separating out artificial regression tests for pathological cases. I don't have that knowledge of the perf suite either, and in general I think many people who encounter what look like performance regressions don't.</p>",
        "id": 265075720,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639602806
    },
    {
        "content": "<p>It seems OK if some of the pathological regression cases go up by 2% in exchange for everything else going down by 1%.</p>",
        "id": 265075762,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639602833
    },
    {
        "content": "<p>As long as the pathological regression cases don't go up by 20%.</p>",
        "id": 265075813,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639602844
    },
    {
        "content": "<p>Aren't many of the pathological cases just distilled versions of real workloads? So if they regress that'll also regress real crates.</p>",
        "id": 265077338,
        "sender_full_name": "The 8472",
        "timestamp": 1639603642
    },
    {
        "content": "<p>There's a mixture. The real vs artificial categorization is more of a spectrum. E.g.</p>\n<ul>\n<li><code>deep-vector</code> just contains a <code>vec!()</code> literal with 135,000 <code>0</code> elements, which is 100% artificial.</li>\n<li><code>tuple-stress</code> contains an array with 64k tuples of real geographic data, which was stripped out of a real program. So it's partly real and partly artificial.</li>\n</ul>",
        "id": 265087311,
        "sender_full_name": "nnethercote",
        "timestamp": 1639608516
    },
    {
        "content": "<p>But I think a binary split is still reasonable, and better than what we currently have. I'm happy to propose what benchmarks goes in which half of the split.</p>",
        "id": 265087384,
        "sender_full_name": "nnethercote",
        "timestamp": 1639608561
    },
    {
        "content": "<p>Basically the predicate would be \"is this a real crate?\"  And then I'd probably include <code>helloworld</code> among the \"real\" ones, because it's representative of tiny programs</p>",
        "id": 265087521,
        "sender_full_name": "nnethercote",
        "timestamp": 1639608621
    },
    {
        "content": "<p>Encouraging the artificial ones to be stripped down versions of real code (like <code>tuple-stress</code>) rather than synthetic (like <code>deep-vector</code>) is also worthwhile.</p>",
        "id": 265087610,
        "sender_full_name": "nnethercote",
        "timestamp": 1639608707
    },
    {
        "content": "<p>Similarly, I'm guessing <code>issue-*</code> tests are closer to artificial?</p>",
        "id": 265093122,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639611918
    },
    {
        "content": "<p>I think they're regression tests, more pathological than synthetic.</p>",
        "id": 265093251,
        "sender_full_name": "Jubilee",
        "timestamp": 1639611992
    },
    {
        "content": "<p>I brought up this topic (of “real world” vs “pathological” benchmarks) in today’s T-compiler triage meeting, and the group agreed to dedicate tomorrow’s steering meeting to that topic. <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , do you think you’d be able to make it to a zulip meeting at <time datetime=\"2021-12-17T15:00:00Z\">2021-12-17T10:00:00-05:00</time>  ?</p>",
        "id": 265181046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639672210
    },
    {
        "content": "<p>should be</p>",
        "id": 265181273,
        "sender_full_name": "simulacrum",
        "timestamp": 1639672313
    },
    {
        "content": "<p>I'd likely be yes (though if I'm not and <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is that's as good as me being there IMO)</p>",
        "id": 265181436,
        "sender_full_name": "rylev",
        "timestamp": 1639672377
    },
    {
        "content": "<p>fwiw, I am not sure there's meeting-worthy discussion at a glance -- or, at least, it would be good to go in with a categorized list I suspect.</p>",
        "id": 265181532,
        "sender_full_name": "simulacrum",
        "timestamp": 1639672423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that’s a good reminder: I was going to see if I could put a write-up together</p>",
        "id": 265196671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639678513
    },
    {
        "content": "<p>The main points I’d want to address are: 1. <em>why</em> we include pathological benchmarks in the test suite. (It is definitely motivated. But its good to make sure everyone is on the same page about that point.) and then 2. How to categorize the existing set of benchmarks</p>",
        "id": 265196859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639678582
    },
    {
        "content": "<p>My draft classification:</p>\n<ul>\n<li>Real: cargo, clap-rs, cranelife-codegen, diesel, encoding, futures, html5ever, hyper-2, piston-image, regex, ripgrep, serde, stm32f4, style-servo, syn, tokio-webpush-simple, ucd, webrender, webrender-wrench</li>\n<li>Maybe real: inflate, keccak, wg-grammar, unicode_normalization</li>\n<li>Artificial: coercions, ctfe-stress-4, deeply-nested, deeply-nested-async, deeply-nested-closures, deep-vector, derive, externs, issue-*, many-assoc-items, match-stress-enum, match-stress-exhaustive_patterns, regression-31157, token-stream-stress, tuple-stress, unify-linearly, unused-warnings, wf-projection-stress-65510</li>\n</ul>",
        "id": 265222970,
        "sender_full_name": "nnethercote",
        "timestamp": 1639690656
    },
    {
        "content": "<p>I suspect \"real\"/\"artificial\" are not the best terms, particularly since some of the \"artificial\" ones are derived from real crates. Perhaps \"typical\" vs \"atypical\" or \"stress\" might be better, feels less judgmental</p>",
        "id": 265223117,
        "sender_full_name": "nnethercote",
        "timestamp": 1639690720
    },
    {
        "content": "<p>Avoids the \"no true Scotsman\" problem</p>",
        "id": 265223402,
        "sender_full_name": "nnethercote",
        "timestamp": 1639690880
    },
    {
        "content": "<p>Really, it comes down to a \"more important\" vs \"less important\" distinction</p>",
        "id": 265223935,
        "sender_full_name": "nnethercote",
        "timestamp": 1639691158
    },
    {
        "content": "<p>I think one idea was to distinguish between pathological cases that are reduced from real world code, versus pathological cases that are constructed by taking some example (which may have been reduced from real world code), and then artificially repeating it in order to scale up its effect on performance, and/or expose quadratic blowup issues, etc.</p>",
        "id": 265227370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639692811
    },
    {
        "content": "<p>Yes, I was saying \"synthetic\" where you would use \"artificial\", as it is quite literally synthesized from something else, and I think some synthetic cases could conceivably be non-pathological, but Of Interest nonetheless, though the dominant tendency will be that a synthetic case will be pathological.</p>\n<p>Vice versa, some \"real\" cases (I would call them \"wild\", \"observed\", or \"community\" perhaps) expose a pathological pattern, but the dominant tendency will be away from pathological patterns.</p>",
        "id": 265238201,
        "sender_full_name": "Jubilee",
        "timestamp": 1639699768
    },
    {
        "content": "<p>A fine-grained classifications is certainly possible. But is it useful? I really just want a \"primary\" vs \"secondary\" distinction, because that's the filter I do in my head</p>",
        "id": 265241206,
        "sender_full_name": "nnethercote",
        "timestamp": 1639702321
    },
    {
        "content": "<p>I expect everyone involved to also wind up with that as a result, tbh, no matter how many actual categories are drawn up, I think the only merit of cutting more finely is a contemplative exercise on trying to see if there is something \"underneath\".</p>",
        "id": 265243202,
        "sender_full_name": "Jubilee",
        "timestamp": 1639704197
    },
    {
        "content": "<p>One advantage of primary/secondary vs real/artificial (or whatever) is that we can choose to make \"real\" crates secondary. E.g. I think <code>inflate</code> is a really old version of that crate that doesn't reflect the current version, and it's a weird example. So I'd be fine with making it \"secondary\", even though it is undeniably \"real world code\"</p>",
        "id": 265250143,
        "sender_full_name": "nnethercote",
        "timestamp": 1639711926
    },
    {
        "content": "<p>I certainly don't think it's as important as, say, <code>cargo</code> or <code>webrender</code></p>",
        "id": 265250157,
        "sender_full_name": "nnethercote",
        "timestamp": 1639711953
    },
    {
        "content": "<p>For anyone who likes thinking about this topic, sections 2.2-2.4 of <a href=\"http://web.mit.edu/~ezyang/Public/10.1.1.53.4124.pdf\">http://web.mit.edu/~ezyang/Public/10.1.1.53.4124.pdf</a> may be of interest. It's a Haskell benchmarking suite divided into \"real\", \"spectral\", and \"imaginary\"</p>",
        "id": 265253955,
        "sender_full_name": "nnethercote",
        "timestamp": 1639716625
    },
    {
        "content": "<p>Hennessy &amp; Patterson is always good for this sort of thing, too. Chapter 1 distinguishes: real applications, modified applications, kernels, toy benchmarks, and synthetic benchmarks</p>",
        "id": 265254034,
        "sender_full_name": "nnethercote",
        "timestamp": 1639716734
    },
    {
        "content": "<p>Thanks so much for these inputs. That <code>nofib</code> paper was a really neat find, <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span></p>",
        "id": 265294531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639747338
    },
    {
        "content": "<p>I wrote a doc, mostly cribbed from the comments here and from yesterday’s team meeting. It is linked from the first message in <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-12-17\">#t-compiler/meetings &gt; [steering meeting] 2021-12-17</a></p>",
        "id": 265295083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639747678
    },
    {
        "content": "<p>As an idea for how to display it: Make the names of the \"synthetic\" benchmarks grey instead of black.<br>\nThat should intuitively give the impression that grey benchmarks are less important than black ones</p>",
        "id": 265680521,
        "sender_full_name": "Julian-Wollersberger",
        "timestamp": 1640090451
    },
    {
        "content": "<p>I'd prefer a second section. With greying you might still have to scan past a bunch of less-interesting results to get to the more-interesting results</p>",
        "id": 265721705,
        "sender_full_name": "nnethercote",
        "timestamp": 1640112921
    }
]