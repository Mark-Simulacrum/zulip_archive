[
    {
        "content": "<p>What would it take for us to get a point-in-time snapshot of <code>rustc_middle</code> or similar and somehow turn it into a component of the performance test suite?</p>",
        "id": 210808315,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600727352
    },
    {
        "content": "<p>I feel like the compiler itself is a <em>huge</em> performance test case that covers certain things the existing performance test suite may not cover as well.</p>",
        "id": 210808332,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600727381
    },
    {
        "content": "<p>I'd imagine that part of the issue would be that nightly features change over time and a newer rustc may not always be able to compile an old rustc.</p>",
        "id": 210808423,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600727424
    },
    {
        "content": "<p>Also, it might be a challenge to sufficiently isolate a self-contained test case.</p>",
        "id": 210808438,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600727436
    },
    {
        "content": "<p>But I think there'd be value in doing so, if we could.</p>",
        "id": 210808448,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600727443
    },
    {
        "content": "<p>we used to have this, if you remember irsy, and I'm a bit sad we don't anymore</p>",
        "id": 210809599,
        "sender_full_name": "eddyb",
        "timestamp": 1600728333
    },
    {
        "content": "<p>I'm not aware of \"irsy\".</p>",
        "id": 210809678,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728366
    },
    {
        "content": "<p>so <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> is not the first Rust performance collection project</p>",
        "id": 210809696,
        "sender_full_name": "eddyb",
        "timestamp": 1600728381
    },
    {
        "content": "<p>when I started with Rust, we had irsy (\"Is Rust Slim Yet\") which gave a combination of time and memory profile (total RSS across the execution of each run, something which <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> doesn't have yet)</p>",
        "id": 210809812,
        "sender_full_name": "eddyb",
        "timestamp": 1600728481
    },
    {
        "content": "<p>I can try to give some links but it may be broken given how old it is (and ofc it stopped collecting probably before 1.0)</p>",
        "id": 210809872,
        "sender_full_name": "eddyb",
        "timestamp": 1600728506
    },
    {
        "content": "<p>Oooh, memory usage would be an awesome thing to include in perf.</p>",
        "id": 210809907,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728544
    },
    {
        "content": "<p>we do have max RSS but not anything like irsy did</p>",
        "id": 210809922,
        "sender_full_name": "eddyb",
        "timestamp": 1600728556
    },
    {
        "content": "<p>OTOH we have many more benchmarks whereas irsy only used rustc itself</p>",
        "id": 210809935,
        "sender_full_name": "eddyb",
        "timestamp": 1600728570
    },
    {
        "content": "<p>Where does RSS appear?</p>",
        "id": 210809966,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728602
    },
    {
        "content": "<p>anyway regarding using rustc as a benchmark, on top of the nightly features you mention, there's also the fact that it would add even more to the perf collection time</p>",
        "id": 210810008,
        "sender_full_name": "eddyb",
        "timestamp": 1600728606
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> on <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> you always choose what to view. the default is <code>instructions:u</code> but there's a handful of things measured</p>",
        "id": 210810024,
        "sender_full_name": "eddyb",
        "timestamp": 1600728626
    },
    {
        "content": "<p>there's usually a downdrop somewhere</p>",
        "id": 210810044,
        "sender_full_name": "eddyb",
        "timestamp": 1600728650
    },
    {
        "content": "<p>e.g. <a href=\"https://perf.rust-lang.org/?stat=max-rss\">https://perf.rust-lang.org/?stat=max-rss</a></p>",
        "id": 210810067,
        "sender_full_name": "eddyb",
        "timestamp": 1600728675
    },
    {
        "content": "<p>I'm not seeing such a dropdown.</p>",
        "id": 210810078,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728687
    },
    {
        "content": "<p>I've seen URLs like that before, but not how to get to them from a normal perf report page.</p>",
        "id": 210810090,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728698
    },
    {
        "content": "<p>(other than hand-editing the URL)</p>",
        "id": 210810163,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600728744
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> isn't there a drop-down at the top of the page that says <code>instructions:u</code>?</p>",
        "id": 210810445,
        "sender_full_name": "eddyb",
        "timestamp": 1600728966
    },
    {
        "content": "<p>if not can you screenshot the page?</p>",
        "id": 210810450,
        "sender_full_name": "eddyb",
        "timestamp": 1600728978
    },
    {
        "content": "<p>Oh, I just saw the dropdown at the <em>bottom</em> of the page, next to the option to start a new comparison.</p>",
        "id": 210810512,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600729043
    },
    {
        "content": "<p>oh if you're looking at a perf result then yeah</p>",
        "id": 210810529,
        "sender_full_name": "eddyb",
        "timestamp": 1600729063
    },
    {
        "content": "<p>it should be at the top on <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> itself though</p>",
        "id": 210810539,
        "sender_full_name": "eddyb",
        "timestamp": 1600729073
    },
    {
        "content": "<p>The most common way I end up on perf is via a link from <code>@rust-timer</code>. :)</p>",
        "id": 210810595,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600729090
    },
    {
        "content": "<p>it's not really \"new comparison\", other than being perhaps presented wrong. IMO it should also be at the top</p>",
        "id": 210810615,
        "sender_full_name": "eddyb",
        "timestamp": 1600729117
    },
    {
        "content": "<p>it sort of serves dual function I guess though I never use it to change the commit hashes, since it's much easier to do that in the URL</p>",
        "id": 210810675,
        "sender_full_name": "eddyb",
        "timestamp": 1600729191
    },
    {
        "content": "<p>anyway it's a bit hard to demo how irsy worked but you can kind of see here <a href=\"/user_uploads/4715/sImX2VDj_pCKbA1ITRLCEZ0l/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/sImX2VDj_pCKbA1ITRLCEZ0l/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/sImX2VDj_pCKbA1ITRLCEZ0l/image.png\"></a></div>",
        "id": 210810861,
        "sender_full_name": "eddyb",
        "timestamp": 1600729276
    },
    {
        "content": "<p>(I zoomed it to 200% to take that screenshot)</p>",
        "id": 210810879,
        "sender_full_name": "eddyb",
        "timestamp": 1600729289
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Adding.20parts.20of.20rustc.20to.20the.20performance.20test.20suite.3F/near/210810615\">said</a>:</p>\n<blockquote>\n<p>it's not really \"new comparison\", other than being perhaps presented wrong. IMO it should also be at the top</p>\n</blockquote>\n<p>I agree that it should be at the top.</p>",
        "id": 210810992,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600729364
    },
    {
        "content": "<p>That would have helped.</p>",
        "id": 210811000,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600729369
    },
    {
        "content": "<p>also one annoying thing on large screens is stuff that's right-aligned (when the rest of the page is left-aligned) though I'm not sure now what was</p>",
        "id": 210811051,
        "sender_full_name": "eddyb",
        "timestamp": 1600729402
    },
    {
        "content": "<p>the dropdown is on the left while the submit \"button\" to actually switch the metric is all the way on the right</p>",
        "id": 210811873,
        "sender_full_name": "LingM",
        "timestamp": 1600730058
    },
    {
        "content": "<p>ah yeah that must've been it, thanks!</p>",
        "id": 210811893,
        "sender_full_name": "eddyb",
        "timestamp": 1600730081
    },
    {
        "content": "<p>zulip, <a href=\"/user_uploads/4715/8UTe0JAbmiwN9hAimtfbOW_1/Screenshot-from-2020-09-22-01-23-31.png\">you're drunk</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/8UTe0JAbmiwN9hAimtfbOW_1/Screenshot-from-2020-09-22-01-23-31.png\" title=\"you're drunk\"><img src=\"/user_uploads/4715/8UTe0JAbmiwN9hAimtfbOW_1/Screenshot-from-2020-09-22-01-23-31.png\"></a></div>",
        "id": 210812752,
        "sender_full_name": "LingM",
        "timestamp": 1600730739
    },
    {
        "content": "<p>I would <em>love</em> to have this</p>",
        "id": 210812827,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600730784
    },
    {
        "content": "<p>I think artificial benchmarks are a great way to make you game benchmarks, gaming rustc itself sounds like a much better way to spend time ;)</p>",
        "id": 210812872,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600730835
    },
    {
        "content": "<p>The other good benchmark would be incremental for <code>rustc_driver</code> and <code>interface</code> since it's recompiled so much</p>",
        "id": 210812946,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600730884
    },
    {
        "content": "<p>Actually, I know perf has a limited time budget so there's only so much it can do per run - could we collect these stats on CI?</p>",
        "id": 210813038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600730970
    },
    {
        "content": "<p>Then we get the data for ~free and also much more frequently</p>",
        "id": 210813056,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600730987
    },
    {
        "content": "<p>Only full builds but it would still be enormously useful</p>",
        "id": 210813110,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600731004
    },
    {
        "content": "<p>Not sure how much overhead perf stats have, if it's a lot we could only run on PR builds so it doesn't slow down bors</p>",
        "id": 210813171,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600731082
    },
    {
        "content": "<p>That also neatly sidesteps the \"only builds on beta\" issue by only building with beta ;)</p>",
        "id": 210813261,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600731155
    },
    {
        "content": "<p>I am currently looking at adding <em>current</em> rustc to perf</p>",
        "id": 210813447,
        "sender_full_name": "simulacrum",
        "timestamp": 1600731322
    },
    {
        "content": "<p>I think a snapshot will be quite painful to backport nightly breakage fixes to</p>",
        "id": 210813469,
        "sender_full_name": "simulacrum",
        "timestamp": 1600731342
    },
    {
        "content": "<p>I think we should have budget to do this</p>",
        "id": 210813529,
        "sender_full_name": "simulacrum",
        "timestamp": 1600731366
    },
    {
        "content": "<p>Current is even better, then we can see how changes affected compile time for bootstrapping, not just whether rustc is slower to run</p>",
        "id": 210813660,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600731491
    },
    {
        "content": "<p>I read an article a while back about a codebase (maybe D?) that would only accept new optimizations if they made compiling the compiler itself faster even with the added code <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 210813780,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600731618
    },
    {
        "content": "<p>I don't think we'll go that far :)</p>\n<p>But I think incremental perf is not going to be a first goal -- modifying the codebase and recompiling is hard(er).</p>",
        "id": 210815795,
        "sender_full_name": "simulacrum",
        "timestamp": 1600733406
    },
    {
        "content": "<p>sure, just tracking full builds at all would be a major improvement :)</p>",
        "id": 210815845,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600733459
    }
]