[
    {
        "content": "<p>thought I'd start a log-like thing here so there's some reference</p>",
        "id": 255585429,
        "sender_full_name": "simulacrum",
        "timestamp": 1633012769
    },
    {
        "content": "<p>so I started investigating this on tuesday after Ryan pointed me to it as a weird result</p>",
        "id": 255585473,
        "sender_full_name": "simulacrum",
        "timestamp": 1633012787
    },
    {
        "content": "<p>I added support for dep-graph collection to perf (locally for now) which took a bit (needed a compiler patch <a href=\"https://github.com/rust-lang/rust/pull/89343\">https://github.com/rust-lang/rust/pull/89343</a>, though that's not yet ready to merge). The dep graph didn't yield anything obvious to me, everything seemed to match up, though I know have a possible theory as to why</p>",
        "id": 255585666,
        "sender_full_name": "simulacrum",
        "timestamp": 1633012841
    },
    {
        "content": "<p>I think the problem is that afaict the dep-graph view doesn't expose red/green edges (or at least I didn't see how)</p>",
        "id": 255586091,
        "sender_full_name": "simulacrum",
        "timestamp": 1633012997
    },
    {
        "content": "<p>and in this case the edges thankfully were all the same, just a specific query was considered red</p>",
        "id": 255586135,
        "sender_full_name": "simulacrum",
        "timestamp": 1633013012
    },
    {
        "content": "<p>this query seems to be trimmed_def_paths, which is currently non-deterministic</p>",
        "id": 255586170,
        "sender_full_name": "simulacrum",
        "timestamp": 1633013024
    },
    {
        "content": "<p>specifically I'm seeing</p>\n<div class=\"codehilite\"><pre><span></span><code>-DefId(42:3576 ~ winit[ffa4]::platform::platform::x11::util::hint::WindowType) =&gt; &quot;XWindowType&quot;\n+DefId(42:3576 ~ winit[ffa4]::platform::platform::x11::util::hint::WindowType) =&gt; &quot;WindowType&quot;\n</code></pre></div>",
        "id": 255586436,
        "sender_full_name": "simulacrum",
        "timestamp": 1633013125
    },
    {
        "content": "<p>I am not 100% sure yet -- but fairly confident -- that that's because this loop: <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/ty/print/pretty.rs#L2448-L2452\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/ty/print/pretty.rs#L2448-L2452</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">opt_def_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">unique_symbols_rev</span><span class=\"p\">.</span><span class=\"n\">drain</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">def_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">opt_def_id</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">def_id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is iterating <code>unique_symbols_rev</code>, which is a FxHashMap over <code>(Namespace, Symbol)</code>. Notably, that means that the <em>order</em> of that iteration is going to depend on the order in which we interned symbols (since those are hashed by id, not string content)</p>",
        "id": 255589497,
        "sender_full_name": "simulacrum",
        "timestamp": 1633014130
    },
    {
        "content": "<p>which sort of makes me wonder if this can lead to incremental bugs (since the query has dependency on global state), cc <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></p>",
        "id": 255589774,
        "sender_full_name": "simulacrum",
        "timestamp": 1633014218
    },
    {
        "content": "<p>but I think regardless, we'll want to fix this, nondeterministic diagnostics are bad</p>",
        "id": 255589816,
        "sender_full_name": "simulacrum",
        "timestamp": 1633014233
    },
    {
        "content": "<p>posted <a href=\"https://github.com/rust-lang/rust/pull/89408\">https://github.com/rust-lang/rust/pull/89408</a></p>",
        "id": 255624784,
        "sender_full_name": "simulacrum",
        "timestamp": 1633026705
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/investigation.20.2388343/near/255586436\">said</a>:</p>\n<blockquote>\n<p>specifically I'm seeing</p>\n<p><div class=\"codehilite\"><pre><span></span><code>-DefId(42:3576 ~ winit[ffa4]::platform::platform::x11::util::hint::WindowType) =&gt; &quot;XWindowType&quot;\n+DefId(42:3576 ~ winit[ffa4]::platform::platform::x11::util::hint::WindowType) =&gt; &quot;WindowType&quot;\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Oh, should mention -- I achieved this by adding eprintln! to the query just before it returns and then sorting outputs</p>",
        "id": 255626289,
        "sender_full_name": "simulacrum",
        "timestamp": 1633027266
    }
]