[
    {
        "content": "<p>I see that <a href=\"https://perf.rust-lang.org/compare.html\">https://perf.rust-lang.org/compare.html</a> doesn't yet have the latest changes from master (it shows the latest commit as c724b67e and master is 23744c8). How often is it updated? Has the site been redeployed since the rustdoc PR was merged?</p>\n<p>Sorry to nag so much, everyone's been really helpful :)</p>",
        "id": 203906236,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> you just have to remind <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> until it happens, I don't think anyone else manages it</p>",
        "id": 203906262,
        "sender_full_name": "eddyb",
        "timestamp": 1594774301
    },
    {
        "content": "<p>see status page</p>",
        "id": 203906276,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774316
    },
    {
        "content": "<p>we've not yet benchmarked the first commit with rustdoc on</p>",
        "id": 203906320,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774329
    },
    {
        "content": "<p>awesome, thank you!</p>",
        "id": 203906364,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774392
    },
    {
        "content": "<p>only 2 benchmarks left</p>",
        "id": 203906435,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774444
    },
    {
        "content": "<p>note: there's actually no way for you to <em>know</em> that we haven't benchmarked the first commit with rustdoc on since the status page doesn't tell you that information, so really I'm lying and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is right -- you gotta just bug me :)</p>",
        "id": 203906454,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774494
    },
    {
        "content": "<p>I can't believe <a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a> is almost done, this and a couple nits from eddy are the last blockers</p>",
        "id": 203906485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774550
    },
    {
        "content": "<p>I've been working on it for like a month lol</p>",
        "id": 203906490,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774557
    },
    {
        "content": "<p>oh I lied, we're on the last benchmark -- I guess we don't print when there's 1 left...</p>",
        "id": 203906557,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774618
    },
    {
        "content": "<p>oh my regex is bad</p>",
        "id": 203906579,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774650
    },
    {
        "content": "<p>we're too smart for our own good and are fancy with getting pluralization wrong</p>",
        "id": 203906597,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774669
    },
    {
        "content": "<p>well, pluralization <em>right</em> which breaks my regex</p>",
        "id": 203906649,
        "sender_full_name": "simulacrum",
        "timestamp": 1594774688
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> congrats on your first mini-megaproject</p>",
        "id": 203906674,
        "sender_full_name": "eddyb",
        "timestamp": 1594774723
    },
    {
        "content": "<p>this is what I get for starting with an E-hard lol</p>",
        "id": 203906683,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774739
    },
    {
        "content": "<p>the next levels are 3mo, 6mo, 1yr, 2yr, 5yr</p>",
        "id": 203906691,
        "sender_full_name": "eddyb",
        "timestamp": 1594774749
    },
    {
        "content": "<p>:ferrisUnsafe:</p>",
        "id": 203906710,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774767
    },
    {
        "content": "<p>oh I had a question for you btw <a href=\"https://github.com/rust-lang/rust/pull/73566#discussion_r454723928\">https://github.com/rust-lang/rust/pull/73566#discussion_r454723928</a></p>",
        "id": 203906774,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774811
    },
    {
        "content": "<p>yes</p>",
        "id": 203906835,
        "sender_full_name": "eddyb",
        "timestamp": 1594774891
    },
    {
        "content": "<p>it makes sense to keep it uniform for all items</p>",
        "id": 203906841,
        "sender_full_name": "eddyb",
        "timestamp": 1594774899
    },
    {
        "content": "<p>basically when you enter a nested item, you're \"leaving\" the body</p>",
        "id": 203906845,
        "sender_full_name": "eddyb",
        "timestamp": 1594774911
    },
    {
        "content": "<p>(temporarily)</p>",
        "id": 203906847,
        "sender_full_name": "eddyb",
        "timestamp": 1594774915
    },
    {
        "content": "<p>makes sense</p>",
        "id": 203906897,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774943
    },
    {
        "content": "<p>I think this was actually the previous behavior and I glossed over it in a test case</p>",
        "id": 203906902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594774962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I'm running <code>bench_local</code> on <code>helloworld</code>, and the <code>Doc</code> run is taking an awfully long time</p>",
        "id": 203907649,
        "sender_full_name": "njn",
        "timestamp": 1594775839
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> I bet it's something to do with <a href=\"https://github.com/rust-lang/rustc-perf/pull/680\">https://github.com/rust-lang/rustc-perf/pull/680</a></p>",
        "id": 203907674,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775869
    },
    {
        "content": "<p>it's been going for several minutes</p>",
        "id": 203907676,
        "sender_full_name": "njn",
        "timestamp": 1594775869
    },
    {
        "content": "<p>try setting <code>RUST_LOG=info</code></p>",
        "id": 203907682,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775877
    },
    {
        "content": "<p>Yep, that's the problem</p>",
        "id": 203907740,
        "sender_full_name": "njn",
        "timestamp": 1594775922
    },
    {
        "content": "<p>also you will need to update to latest nightly, there was a cargo bug that was only fixed this week</p>",
        "id": 203907741,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775929
    },
    {
        "content": "<p><code>rustup update nightly</code>?</p>",
        "id": 203907744,
        "sender_full_name": "njn",
        "timestamp": 1594775940
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/pull/8449\">https://github.com/rust-lang/cargo/pull/8449</a></p>",
        "id": 203907747,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775948
    },
    {
        "content": "<p>yup</p>",
        "id": 203907749,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775950
    },
    {
        "content": "<p>hmm, <code>which cargo</code> probably won't suffice, then</p>",
        "id": 203907751,
        "sender_full_name": "njn",
        "timestamp": 1594775959
    },
    {
        "content": "<p>ahh ... good point</p>",
        "id": 203907754,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594775978
    },
    {
        "content": "<p>more reason to make doc runs opt-in IMO</p>",
        "id": 203907760,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776000
    },
    {
        "content": "<p>how can I find the executable that <code>cargo +nightly</code> runs?</p>",
        "id": 203907824,
        "sender_full_name": "njn",
        "timestamp": 1594776065
    },
    {
        "content": "<p><code>$RUSTUP_HOME/toolchains/nightly-x86_64-unknown-linux-gnu//bin/cargo</code></p>",
        "id": 203907846,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776114
    },
    {
        "content": "<p>if RUSTUP_HOME isn't set it's ~/.rustup</p>",
        "id": 203907886,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776124
    },
    {
        "content": "<p>thanks</p>",
        "id": 203908345,
        "sender_full_name": "njn",
        "timestamp": 1594776824
    },
    {
        "content": "<p>uhhhh <a href=\"/user_uploads/4715/4lFG-qER8FKN8dU83G8hSlIP/image.png\">image.png</a>  <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/4lFG-qER8FKN8dU83G8hSlIP/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/4lFG-qER8FKN8dU83G8hSlIP/image.png\"></a></div>",
        "id": 203908398,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776873
    },
    {
        "content": "<p>from <a href=\"https://perf.rust-lang.org/compare.html\">https://perf.rust-lang.org/compare.html</a></p>",
        "id": 203908400,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776879
    },
    {
        "content": "<p>Looking into it</p>",
        "id": 203908403,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776889
    },
    {
        "content": "<p>whole site looks like the database went missing :(</p>",
        "id": 203908406,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776898
    },
    {
        "content": "<p>(watch it be my fault <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> )</p>",
        "id": 203908420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594776929
    },
    {
        "content": "<p>well kinda</p>",
        "id": 203908428,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776950
    },
    {
        "content": "<p>we missed some cases</p>",
        "id": 203908434,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776959
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/runs/871661206\">https://github.com/rust-lang/rustc-perf/runs/871661206</a></p>",
        "id": 203908436,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776960
    },
    {
        "content": "<p>once that pushes should be good, <a href=\"https://github.com/rust-lang/rustc-perf/commit/9f190aca5fabba897e891d6186d28e47948302d9\">https://github.com/rust-lang/rustc-perf/commit/9f190aca5fabba897e891d6186d28e47948302d9</a></p>",
        "id": 203908481,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776971
    },
    {
        "content": "<p>finished benchmarking the first rustdoc commit though!</p>",
        "id": 203908495,
        "sender_full_name": "simulacrum",
        "timestamp": 1594776995
    },
    {
        "content": "<p>(that's why everything went down)</p>",
        "id": 203908503,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777003
    },
    {
        "content": "<p>oh yay so it was only in the site!</p>",
        "id": 203908509,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777017
    },
    {
        "content": "<p>yeah I only had sqlite locally to test with</p>",
        "id": 203908517,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777028
    },
    {
        "content": "<p>no worries</p>",
        "id": 203908528,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777045
    },
    {
        "content": "<p>really there shouldn't be 4 instances of that match</p>",
        "id": 203908533,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777053
    },
    {
        "content": "<p>okay it's almost there</p>",
        "id": 203908754,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <a href=\"https://perf.rust-lang.org/compare.html?start=c724b67e1b474262917a5154d74e7072267593fe&amp;end=8e0830658e77454a0c7dd437c75522a6debf9f64\">https://perf.rust-lang.org/compare.html?start=c724b67e1b474262917a5154d74e7072267593fe&amp;end=8e0830658e77454a0c7dd437c75522a6debf9f64</a></p>",
        "id": 203908846,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777409
    },
    {
        "content": "<p>(scroll down and open some of them)</p>",
        "id": 203908849,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777416
    },
    {
        "content": "<p>once we get a master commit it'll actually have non-dashed</p>",
        "id": 203908856,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777431
    },
    {
        "content": "<p>oh that's beautiful</p>",
        "id": 203908914,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777460
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 203908918,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777464
    },
    {
        "content": "<p>it would also be great to add it to the graph at some point</p>",
        "id": 203908959,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777556
    },
    {
        "content": "<p>but now that we have the data it's easy to add that retroactively</p>",
        "id": 203909002,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777578
    },
    {
        "content": "<p>4 columns is ungreat</p>",
        "id": 203909005,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777581
    },
    {
        "content": "<p>I don't know</p>",
        "id": 203909008,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777584
    },
    {
        "content": "<p>UI design is not my forte if you can't tell by perf :)</p>",
        "id": 203909015,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777594
    },
    {
        "content": "<p>sorry, I meant dashboard</p>",
        "id": 203909017,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777602
    },
    {
        "content": "<p>since that makes you scroll anyway</p>",
        "id": 203909024,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777611
    },
    {
        "content": "<p>oh.. hm, well, we don't have data for anything but master</p>",
        "id": 203909027,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777616
    },
    {
        "content": "<p>but we should get stable/beta data in a few days</p>",
        "id": 203909035,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777624
    },
    {
        "content": "<p>yeah shouldn't be too hard</p>",
        "id": 203909040,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Impatient.20for.20rustdoc.20perf.20runs/near/203909035\">said</a>:</p>\n<blockquote>\n<p>but we should get stable/beta data in a few days</p>\n</blockquote>\n<p>(since we just happened to fall on a release week)</p>",
        "id": 203909048,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777647
    },
    {
        "content": "<p>oh perfect, I didn't even realize we'd get perf on stable for free :D</p>",
        "id": 203909053,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777651
    },
    {
        "content": "<p>then we have lots to compare it to</p>",
        "id": 203909060,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777660
    },
    {
        "content": "<p>hm?</p>",
        "id": 203909066,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777667
    },
    {
        "content": "<p>it'd just be the latest stable to be clear</p>",
        "id": 203909070,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777673
    },
    {
        "content": "<p>right</p>",
        "id": 203909071,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777676
    },
    {
        "content": "<p>I thought we'd <em>only</em> have the data from the 2 or 3 tries before <a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a> landed</p>",
        "id": 203909114,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777694
    },
    {
        "content": "<p>ah</p>",
        "id": 203909141,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777780
    },
    {
        "content": "<p>eh we should have data from all commits before it lands too, even without stable</p>",
        "id": 203909202,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777826
    },
    {
        "content": "<p>actually I guess it wouldn't be too hard to go back and run perf for past stable</p>",
        "id": 203909205,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777828
    },
    {
        "content": "<p>just time consuming and painful :P</p>",
        "id": 203909207,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594777834
    },
    {
        "content": "<p>nah, stable builds are pretty fast -- they don't have script-servo</p>",
        "id": 203909218,
        "sender_full_name": "simulacrum",
        "timestamp": 1594777845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> review ping on <a href=\"https://github.com/rust-lang/rust/pull/74119\">https://github.com/rust-lang/rust/pull/74119</a> :)</p>",
        "id": 203909909,
        "sender_full_name": "njn",
        "timestamp": 1594778780
    },
    {
        "content": "<p>I love how this has turned into <a class=\"stream\" data-stream-id=\"122651\" href=\"/#narrow/stream/122651-general\">#general</a> <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 203909915,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594778807
    },
    {
        "content": "<p>not that I'm complaining</p>",
        "id": 203909919,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594778814
    },
    {
        "content": "<p>taking a break to play hollow knight, someone ping me when the try run for <a href=\"https://github.com/rust-lang/rust/pull/74347\">https://github.com/rust-lang/rust/pull/74347</a> finishes</p>",
        "id": 203909934,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594778843
    },
    {
        "content": "<p>zulip isn't great for extremely short comments that don't warrant a proper thread</p>",
        "id": 203909936,
        "sender_full_name": "njn",
        "timestamp": 1594778855
    },
    {
        "content": "<p><code>--filter</code> and <code>--exclude</code> take a comma-separate list of substrings? I wish I'd known that earlier</p>",
        "id": 203912941,
        "sender_full_name": "njn",
        "timestamp": 1594783080
    },
    {
        "content": "<p>/me will update the docs</p>",
        "id": 203912977,
        "sender_full_name": "njn",
        "timestamp": 1594783083
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/203912941\">said</a>:</p>\n<blockquote>\n<p><code>--filter</code> and <code>--exclude</code> take a comma-separate list of substrings? I wish I'd known that earlier</p>\n</blockquote>\n<p>I thought you implemented one of those :)</p>\n<p>I recently did it for the other -- iirc exclude</p>",
        "id": 203946366,
        "sender_full_name": "simulacrum",
        "timestamp": 1594814873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> hey I'm confused about the state of the perf run for <a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a>. It looks like the try succeeded but bors didn't comment and I don't see it on <a href=\"https://perf.rust-lang.org/status.html\">https://perf.rust-lang.org/status.html</a>.</p>",
        "id": 204019969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594851498
    },
    {
        "content": "<p>oh then we need to manually queue it</p>",
        "id": 204019988,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851512
    },
    {
        "content": "<p>we rely on the bors finish comment</p>",
        "id": 204020012,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851537
    },
    {
        "content": "<p>ah so it's just bors being buggy</p>",
        "id": 204020033,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594851552
    },
    {
        "content": "<p>thanks!</p>",
        "id": 204020035,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594851555
    },
    {
        "content": "<p>probably github</p>",
        "id": 204020040,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851558
    },
    {
        "content": "<p>queue is growing though which is not good news :/</p>",
        "id": 204020050,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851570
    },
    {
        "content": "<p>well we do keep queueing more commits :P</p>",
        "id": 204020067,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594851586
    },
    {
        "content": "<p>do you think the time from doc runs is putting it over the edge?</p>",
        "id": 204020114,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594851602
    },
    {
        "content": "<p>it's not impossible</p>",
        "id": 204020135,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851607
    },
    {
        "content": "<p>but I don't know</p>",
        "id": 204020139,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851610
    },
    {
        "content": "<p>I've been meaning to get metrics for \"total time per run\" for ~months now</p>",
        "id": 204020154,
        "sender_full_name": "simulacrum",
        "timestamp": 1594851622
    },
    {
        "content": "<p>Hellu, quick question: how long do normal projects take to compile and then, recompile, after small changes? A ballpark is enough for me.</p>\n<ul>\n<li>0-10s</li>\n<li>10-30s</li>\n<li>30-60s</li>\n<li>1-2m</li>\n<li>more than 2m</li>\n</ul>",
        "id": 204266792,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595024847
    },
    {
        "content": "<p>I usually hit more than one minute pretty quickly, though it really depends. Sometimes pretty large things compile fast, sometimes not so much.</p>",
        "id": 204266867,
        "sender_full_name": "simulacrum",
        "timestamp": 1595024905
    },
    {
        "content": "<p>Most things I work on are more than 2 minutes, but then my normal things are e.g. rustc, std, rustc-perf, triagebot, etc. none of which are small</p>",
        "id": 204266887,
        "sender_full_name": "simulacrum",
        "timestamp": 1595024938
    },
    {
        "content": "<p>Do you have a reference project I could try to compile? I have a pretty crummy machine so I hope it's representative of the lower performance group of computers :3</p>",
        "id": 204266916,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595024966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204266887\">said</a>:</p>\n<blockquote>\n<p>(...) but then my normal things are e.g. rustc, std, rustc-perf, triagebot, etc. none of which are small</p>\n</blockquote>\n<p>Yeah, that's my problem as well. I don't have any Rust projects that are \"mine\", and the ones I've worked on recently are rustc and clippy, and both of them are kinda big.</p>",
        "id": 204266988,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595025007
    },
    {
        "content": "<p>rust-analyzer takes great care to optimize for fast compiles, but can still take ~5 minutes for a release build</p>",
        "id": 204267011,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595025027
    },
    {
        "content": "<p>It's medium-sized at ~100 kloc</p>",
        "id": 204267020,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595025042
    },
    {
        "content": "<p>Excellent, I'll play with it a bit then and care to write down the times</p>",
        "id": 204267048,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595025080
    },
    {
        "content": "<p>Any small sized projects you'd recommend me try as well?</p>",
        "id": 204267056,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595025094
    },
    {
        "content": "<p>only ones that compile almost instantly :)</p>",
        "id": 204267161,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595025174
    },
    {
        "content": "<p>(PS: this is basically as sanity info for my thesis. I need to posit that compile times are <em>way too long</em> and that therefore it'd be great if I invested uni's time through me, working on them)</p>",
        "id": 204267167,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595025181
    },
    {
        "content": "<p>maybe check some of the <code>I-compiletime</code> issues for example code bases?</p>",
        "id": 204267198,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595025216
    },
    {
        "content": "<p>Nice! I didn't know about those :D thank you, I will definitely take a peek :)</p>",
        "id": 204267251,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595025247
    },
    {
        "content": "<p>Wow, rust-analyzer makes a strong case. One <code>println!</code> gave me 12s of incremental compilation time</p>",
        "id": 204268682,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595026428
    },
    {
        "content": "<p>Non-trivial changes oughta be a lot harder to recompile. This is great evidence :D</p>",
        "id": 204268743,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595026468
    },
    {
        "content": "<p>Yeah, incremental struggles a lot when used across crates</p>",
        "id": 204268847,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595026575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> <a href=\"http://docs.rs\">docs.rs</a> takes ~20 seconds for an incremental rebuild</p>",
        "id": 204269046,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595026794
    },
    {
        "content": "<p>And uses an insane amount of memory, sometimes I run out and have to hard shutdown my laptop lol</p>",
        "id": 204269107,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595026817
    },
    {
        "content": "<p>my medium size project takes closer to 5 seconds which still feels pretty painful <a href=\"https://github.com/jyn514/saltwater\">https://github.com/jyn514/saltwater</a></p>",
        "id": 204269153,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595026884
    },
    {
        "content": "<blockquote>\n<p>sometimes I run out and have to hard shutdown my laptop lol</p>\n</blockquote>\n<p>Holy crap. How much ram do you have? I used to have 8, now I'm capped out at 12 x3<br>\nI used to start swapping when hacking on rustc, 12 got me out of it and omg that is a friggin save.</p>",
        "id": 204269223,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595026937
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269046\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"212698\">Félix Fischer</span> <a href=\"http://docs.rs\">docs.rs</a> takes ~20 seconds for an incremental rebuild</p>\n</blockquote>\n<p>Nice, thank you!</p>",
        "id": 204269232,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595026944
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269153\">said</a>:</p>\n<blockquote>\n<p>my medium size project takes closer to 5 seconds which still feels pretty painful <a href=\"https://github.com/jyn514/saltwater\">https://github.com/jyn514/saltwater</a></p>\n</blockquote>\n<p>Thanks again :D</p>",
        "id": 204269236,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595026951
    },
    {
        "content": "<p>I have 8 GB of RAM but a fair amount goes to rust_analyzer, it's a hog</p>",
        "id": 204269281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027009
    },
    {
        "content": "<p>So I'd estimate rustc is using ~3-5 GB for an incremental rebuild</p>",
        "id": 204269301,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027026
    },
    {
        "content": "<p>I also have swap but I'm considering turning it off so rustc will get killed instead of freezing my laptop lol</p>",
        "id": 204269369,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269281\">said</a>:</p>\n<blockquote>\n<p>I have 8 GB of RAM but a fair amount goes to rust_analyzer, it's a hog</p>\n</blockquote>\n<p>YES<br>\n(I love RA's help, but I cannot not agree with this sentiment x3)</p>",
        "id": 204269378,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269369\">said</a>:</p>\n<blockquote>\n<p>I also have swap but I'm considering turning it off so rustc will get killed instead of freezing my laptop lol</p>\n</blockquote>\n<p>omg that is pretty genius :D</p>",
        "id": 204269395,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027094
    },
    {
        "content": "<p>I've been doing some optimization work on r-a in the last couple of weeks, including reducing memory usage, but it's still more than I'd like</p>",
        "id": 204269430,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595027128
    },
    {
        "content": "<p>OTOH I've seen RLS use something like 12 GB on rustc, sooo r-a seems way more reasonable than that</p>",
        "id": 204269482,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595027155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> for what it's worth I tried that for compiling rustc itself which didn't work because it _always_ uses &gt; 8 GB lol</p>",
        "id": 204269545,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027182
    },
    {
        "content": "<p>I'm convinced that build times are somehow linked to the number of dependencies</p>",
        "id": 204269580,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027235
    },
    {
        "content": "<p><a href=\"http://docs.rs\">docs.rs</a> has 490 (I know, we're working on it) and also the worst incremental time I know other than rustc</p>",
        "id": 204269674,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027309
    },
    {
        "content": "<p>Well, I guess rustdoc is also worse</p>",
        "id": 204269679,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027316
    },
    {
        "content": "<p>rustdoc is probably ~30 seconds, rustc can be up to a minute</p>",
        "id": 204269755,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027401
    },
    {
        "content": "<p>for incremental I mean, full builds are way longer</p>",
        "id": 204269804,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269580\">said</a>:</p>\n<blockquote>\n<p>I'm convinced that build times are somehow linked to the number of dependencies</p>\n</blockquote>\n<p>I think that is true, in the sense that the deps. LOC add to your compile times. However, if I remember correctly, each crate is a compilation unit on its own, which should help with... parallelization? I don't remember the details.<br>\nPS: oh no, <a href=\"http://docs.rs\">docs.rs</a> is starting to swap. Oh nooooooooo</p>",
        "id": 204269812,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027419
    },
    {
        "content": "<p>I mean for incremental builds though, obviously it will take more time for full builds</p>",
        "id": 204269830,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269804\">said</a>:</p>\n<blockquote>\n<p>for incremental I mean, full builds are way longer</p>\n</blockquote>\n<p>AHH I see what you mean! Okay, yeah, that's... probably true</p>",
        "id": 204269832,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027453
    },
    {
        "content": "<p>I have no idea how that affects incr. times, but your experience reflects mine</p>",
        "id": 204269845,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027472
    },
    {
        "content": "<p>Like I also have 30s-1min incr. times with rustc</p>",
        "id": 204269859,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595027496
    },
    {
        "content": "<p>even <code>src/rustc</code> (the thing that literally just calls <code>rustc_driver::main</code> can take a couple seconds</p>",
        "id": 204269965,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595027594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"212698\">Félix Fischer</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204267167\">said</a>:</p>\n<blockquote>\n<p>(PS: this is basically as sanity info for my thesis. I need to posit that compile times are <em>way too long</em> and that therefore it'd be great if I invested uni's time through me, working on them)</p>\n</blockquote>\n<p>I could revive my old Core 2 Duo PC if you want \"way too long build times\" <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 204270625,
        "sender_full_name": "mati865",
        "timestamp": 1595028248
    },
    {
        "content": "<p>That'd be great, that'd be lower perf than mine :D (only do it if you can and want to spend the time, there's no hard feelings if you don't! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>)</p>",
        "id": 204270694,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028362
    },
    {
        "content": "<blockquote>\n<p>I need to posit that compile times are way too long </p>\n</blockquote>\n<p>I mean, we were just talking about benchmarks taking three hours :P</p>",
        "id": 204270726,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028367
    },
    {
        "content": "<p><a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/average.20run.20duration\">https://rust-lang.zulipchat.com/#narrow/stream/247081-t-compiler.2Fperformance/topic/average.20run.20duration</a></p>",
        "id": 204270735,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> you could try cloning and building <a href=\"https://github.com/Lokathor/gl46\">https://github.com/Lokathor/gl46</a>. Be sure to activate at least the <code>global_loader</code> or <code>struct_loader</code> feature, and you can activate as many more as you like. It's all bindings, but over 2MB of source code, and so it takes a few seconds just to build the lib. And if you want you can also grab <code>winapi</code> and just turn on increasingly more features. It's <em>all</em> definitions and bindings, no codegen really, and it still takes ages (well, seconds, but when there's not even codegen happening that feels like ages).</p>",
        "id": 204270736,
        "sender_full_name": "Lokathor",
        "timestamp": 1595028380
    },
    {
        "content": "<p>oh yeah winapi is the biggest single crate I've seen</p>",
        "id": 204270744,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028402
    },
    {
        "content": "<p>well no that's not true</p>",
        "id": 204270747,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028410
    },
    {
        "content": "<p><a href=\"https://github.com/stm32-rs/stm32f3xx-hal/issues/46\">https://github.com/stm32-rs/stm32f3xx-hal/issues/46</a> is the biggest</p>",
        "id": 204270755,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028421
    },
    {
        "content": "<p>Generated code is cheating :P</p>",
        "id": 204270763,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595028430
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204270726\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I need to posit that compile times are way too long </p>\n</blockquote>\n<p>I mean, we were just talking about benchmarks taking three hours :P</p>\n</blockquote>\n<p>x3 true! Although one could always counter-argue that \"yeah but how many benchmark tests did you run? One or 2000?\" and stuff</p>",
        "id": 204270767,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028434
    },
    {
        "content": "<p>only 30 I think</p>",
        "id": 204270788,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028470
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> would know</p>",
        "id": 204270796,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028479
    },
    {
        "content": "<p>i have a discord bot that took 20 minutes to recompile after a single line change</p>",
        "id": 204270845,
        "sender_full_name": "Lokathor",
        "timestamp": 1595028501
    },
    {
        "content": "<p>slightly my fault, i turned on LTO and stuff, and it was on a virtual server so build times are a little inflated anyway.</p>",
        "id": 204270888,
        "sender_full_name": "Lokathor",
        "timestamp": 1595028566
    },
    {
        "content": "<p>and it uses tokio async/await magic, which i'm sure doesn't help</p>",
        "id": 204270899,
        "sender_full_name": "Lokathor",
        "timestamp": 1595028583
    },
    {
        "content": "<p>Re: number of benchs <br>\nYeah, they're not that many... well, not quite. They are a lot, but they aren't as well. There's only a few projects, but in average each of them is compiled like 5 times (3 always: full, incr-fromscratch, incr-ideal + some that have one or more patches applied after incremental builds)</p>",
        "id": 204270902,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204270845\">said</a>:</p>\n<blockquote>\n<p>i have a discord bot that took 20 minutes to recompile after a single line change</p>\n</blockquote>\n<p>wow</p>",
        "id": 204270982,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028634
    },
    {
        "content": "<p>that sounds like you hit something exponential in rustc</p>",
        "id": 204271011,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028665
    },
    {
        "content": "<p>you should file a bug report <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span></p>",
        "id": 204271023,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028674
    },
    {
        "content": "<p>Actually is wasn't even a code change, it was a const that changed (a string literal entry).</p>",
        "id": 204271052,
        "sender_full_name": "Lokathor",
        "timestamp": 1595028711
    },
    {
        "content": "<p>btw, wow, <a href=\"http://docs.rs\">docs.rs</a> took almost 8 minutes to build from scratch. And with only 10k LOC :D this is exactly the sort of size of code that I was looking for</p>",
        "id": 204271163,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028796
    },
    {
        "content": "<p>well to be fair you did have to compile both tokio 0.1 and 0.2 lol</p>",
        "id": 204271188,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028823
    },
    {
        "content": "<p>we can't upgrade because it crashes the site <a href=\"https://github.com/tokio-rs/tokio/issues/2635\">https://github.com/tokio-rs/tokio/issues/2635</a></p>",
        "id": 204271248,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028851
    },
    {
        "content": "<p>wow</p>",
        "id": 204271272,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595028875
    },
    {
        "content": "<p><a href=\"http://docs.rs\">docs.rs</a> has all sorts of issues lol</p>",
        "id": 204271303,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028909
    },
    {
        "content": "<p>this is actually a lot _better_ than it used to be which should tell you something lol</p>",
        "id": 204271321,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028934
    },
    {
        "content": "<p>oh boi <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 204271331,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595028953
    },
    {
        "content": "<p>we used to compiler cargo from scratch</p>",
        "id": 204271336,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028957
    },
    {
        "content": "<p>no idea why <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 204271381,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595028975
    },
    {
        "content": "<p>I'm more surprised at the tokio issues :) Building Cargo from source sounds almost reasonable for a site like <a href=\"http://docs.rs\">docs.rs</a></p>",
        "id": 204271434,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595029047
    },
    {
        "content": "<p>1 println added to <a href=\"http://docs.rs\">docs.rs</a> -&gt; 20s of rebuild time. This is better evidence than I expected to have in hand :D</p>",
        "id": 204271497,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595029085
    },
    {
        "content": "<p>well we do launch a new tokio runtime for each request <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 204271502,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595029094
    },
    {
        "content": "<p>Oh. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> indeed :)</p>",
        "id": 204271520,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595029139
    },
    {
        "content": "<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 204271543,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595029173
    },
    {
        "content": "<p>okay okay if generated code doesn't count, try the <code>safe_arch</code> crate. Be sure to use <code>-Ctarget-cpu=native</code> so that it turns on as many modules as possible.</p>",
        "id": 204271548,
        "sender_full_name": "Lokathor",
        "timestamp": 1595029180
    },
    {
        "content": "<p>:P</p>",
        "id": 204271558,
        "sender_full_name": "Lokathor",
        "timestamp": 1595029189
    },
    {
        "content": "<p>Well it's still not that large, only ~800 functions I guess, but I did write them out all by hand, no auto-generation here.</p>",
        "id": 204271621,
        "sender_full_name": "Lokathor",
        "timestamp": 1595029216
    },
    {
        "content": "<p>ooh take a look a cranelift-codegen</p>",
        "id": 204271804,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595029397
    },
    {
        "content": "<p>they have _lots_ of build scripts, codegen takes like 20 seconds and codegen-meta takes another 15</p>",
        "id": 204271834,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595029417
    },
    {
        "content": "<p>awesome, thank you both <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 204272540,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595030213
    },
    {
        "content": "<p>I will be taking a look at all of these during today and maybe the weekend :)</p>",
        "id": 204272555,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595030237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204269369\">said</a>:</p>\n<blockquote>\n<p>I also have swap but I'm considering turning it off so rustc will get killed instead of freezing my laptop lol</p>\n</blockquote>\n<p>Set the kernel.sysrq sysctl to a value with the bit corresponding to 0x40 set (or set it to 1 to allow all magic sysrequests, including force-reboot) and use alt-PrtSc-f to invoke the OOM killer.</p>",
        "id": 204298881,
        "sender_full_name": "bjorn3",
        "timestamp": 1595075519
    },
    {
        "content": "<p>I've now collected about 28 timings of incremental time and incremental recompilation time after adding a <code>println</code> line.</p>",
        "id": 204388518,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224363
    },
    {
        "content": "<p>About how much would y'all say is too slow for incremental recompilation after changing 1 line of code?</p>",
        "id": 204388525,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224389
    },
    {
        "content": "<p>The craziest one was Rocket, which took almost 2 minutes after adding a print somewhere</p>",
        "id": 204388587,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224483
    },
    {
        "content": "<p>But <a href=\"http://docs.rs\">docs.rs</a> was also pretty bananas at 20s</p>",
        "id": 204388595,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224501
    },
    {
        "content": "<p>Both of those seem like too much to me</p>",
        "id": 204388605,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224512
    },
    {
        "content": "<p>But how slow is <em>too slow</em>?</p>",
        "id": 204388608,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224521
    },
    {
        "content": "<p>5 seconds? 1s? Less?</p>",
        "id": 204388613,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224536
    },
    {
        "content": "<p>I think that working for so long on interpreted languages has kind of messed up my intuition of what is too long of a compile time XD</p>",
        "id": 204388664,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224589
    },
    {
        "content": "<p>1/60 seconds</p>",
        "id": 204388672,
        "sender_full_name": "eddyb",
        "timestamp": 1595224611
    },
    {
        "content": "<p>(i.e. the duration of one frame at 60 frames per second)</p>",
        "id": 204388677,
        "sender_full_name": "eddyb",
        "timestamp": 1595224624
    },
    {
        "content": "<p>at least personally that has always been the goal, since 2013</p>",
        "id": 204388680,
        "sender_full_name": "eddyb",
        "timestamp": 1595224636
    },
    {
        "content": "<p>Okay, I kinda like that attitude. If it were less than 1/60, it would feel basically instant</p>",
        "id": 204388694,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224662
    },
    {
        "content": "<p>:)</p>",
        "id": 204388697,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> try using <code>-Z time-passes</code> (if it still works) to see how much of those 20 seconds are in parsing / expansion</p>",
        "id": 204388699,
        "sender_full_name": "eddyb",
        "timestamp": 1595224671
    },
    {
        "content": "<p>ohh, I shall :)</p>",
        "id": 204388742,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224688
    },
    {
        "content": "<p>because that's not incremental at all</p>",
        "id": 204388746,
        "sender_full_name": "eddyb",
        "timestamp": 1595224696
    },
    {
        "content": "<p>(currently)</p>",
        "id": 204388748,
        "sender_full_name": "eddyb",
        "timestamp": 1595224700
    },
    {
        "content": "<p>Oh, really? That makes... sense. A bit. Wait</p>",
        "id": 204388756,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224717
    },
    {
        "content": "<p>and, well, the goal for me is to update the compilation state as you're typing, hence needing to be faster than one frame</p>",
        "id": 204388762,
        "sender_full_name": "eddyb",
        "timestamp": 1595224725
    },
    {
        "content": "<p>Hahahahahaha</p>",
        "id": 204388765,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224734
    },
    {
        "content": "<p>I love that</p>",
        "id": 204388769,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224737
    },
    {
        "content": "<p>:D</p>",
        "id": 204388772,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224739
    },
    {
        "content": "<p>One question. You say that those 20s are not incremental messing things up</p>",
        "id": 204388792,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224794
    },
    {
        "content": "<p>How did you know?</p>",
        "id": 204388796,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224799
    },
    {
        "content": "<p>What order of times are being spent in the actual incremental comp part?</p>",
        "id": 204388841,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224814
    },
    {
        "content": "<p>I'm not saying that</p>",
        "id": 204388844,
        "sender_full_name": "eddyb",
        "timestamp": 1595224817
    },
    {
        "content": "<p>I'm saying <em>you</em> should look</p>",
        "id": 204388845,
        "sender_full_name": "eddyb",
        "timestamp": 1595224824
    },
    {
        "content": "<p>Yes yes yes</p>",
        "id": 204388849,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224829
    },
    {
        "content": "<p>But I trust your judgement</p>",
        "id": 204388853,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224837
    },
    {
        "content": "<p>the problem is that incremental currently relies on treating the HIR as the input to check for changes, using paths as the persisted identity, etc.. but also the stuff that happens before HIR is hard to split up into individual chunks of work, it's sort of all tangled together</p>",
        "id": 204388878,
        "sender_full_name": "eddyb",
        "timestamp": 1595224866
    },
    {
        "content": "<p>*(While I set up that println that slowed it down 20s, I'd like to know how did you have that hunch)</p>",
        "id": 204388883,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204388878\">said</a>:</p>\n<blockquote>\n<p>the problem is that incremental currently relies on treating the HIR as the input to check for changes, using paths as the persisted identity, etc.. but also the stuff that happens before HIR is hard to split up into individual chunks of work, it's sort of all tangled together</p>\n</blockquote>\n<p>OHHHHH</p>",
        "id": 204388893,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224891
    },
    {
        "content": "<p>so a bunch more work is needed to push it past before HIR than ever was to bring it to the current point</p>",
        "id": 204388897,
        "sender_full_name": "eddyb",
        "timestamp": 1595224892
    },
    {
        "content": "<p>I'm starting to get it</p>",
        "id": 204388900,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224897
    },
    {
        "content": "<p>What you say makes a lot of sense</p>",
        "id": 204388906,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224914
    },
    {
        "content": "<p>(which frankly, once we had the \"red-green\" incremental algorithm, wasn't that hard, you \"just\" throw stuff into queries and it magically works)</p>",
        "id": 204388911,
        "sender_full_name": "eddyb",
        "timestamp": 1595224920
    },
    {
        "content": "<p>it's possible we're not caching some things on disk that we should, that's still opt-in (but just one line in the query definition)</p>",
        "id": 204388958,
        "sender_full_name": "eddyb",
        "timestamp": 1595224941
    },
    {
        "content": "<p>I see</p>",
        "id": 204388988,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595224991
    },
    {
        "content": "<p>(the dependency tracking works without saving the data because it only recomputes something if its dependencies changed, and this both propagates and stops propagation, to minimize what you have to recompute)</p>",
        "id": 204389002,
        "sender_full_name": "eddyb",
        "timestamp": 1595225013
    },
    {
        "content": "<p>(Okay this will take a while; I might've done a <code>cargo clean</code> yesterday and now I have to wait for the full <a href=\"http://docs.rs\">docs.rs</a> build)</p>",
        "id": 204389012,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225028
    },
    {
        "content": "<p>btw to measure incremental time, you can nuke just <code>target/debug/incremental/crate-name-*</code> or similar</p>",
        "id": 204389055,
        "sender_full_name": "eddyb",
        "timestamp": 1595225051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204389002\">said</a>:</p>\n<blockquote>\n<p>(the dependency tracking works without saving the data because it only recomputes something if its dependencies changed, and this both propagates and stops propagation, to minimize what you have to recompute)</p>\n</blockquote>\n<p>Is this algorithm documented somewhere?</p>",
        "id": 204389062,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225067
    },
    {
        "content": "<p>in order to force it to start from scratch</p>",
        "id": 204389063,
        "sender_full_name": "eddyb",
        "timestamp": 1595225070
    },
    {
        "content": "<p>I have no idea, although it's not a particularly complicated one</p>",
        "id": 204389070,
        "sender_full_name": "eddyb",
        "timestamp": 1595225080
    },
    {
        "content": "<p>you store hashes of the outputs of queries even if you don't keep the value around</p>",
        "id": 204389088,
        "sender_full_name": "eddyb",
        "timestamp": 1595225112
    },
    {
        "content": "<p>if you had to recompute something because its inputs changed, you can compare the hash of the output, and if it's the same, that stops the propagation</p>",
        "id": 204389103,
        "sender_full_name": "eddyb",
        "timestamp": 1595225148
    },
    {
        "content": "<p>I see, that makes sense</p>",
        "id": 204389150,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225172
    },
    {
        "content": "<p>so it's sort of \"dependency graph says you depend on this but the logic doesn't rely on the thing that just changed\"</p>",
        "id": 204389159,
        "sender_full_name": "eddyb",
        "timestamp": 1595225190
    },
    {
        "content": "<p>like the generics of a function not depending on its signature, or even more importantly, neither depending on its body</p>",
        "id": 204389183,
        "sender_full_name": "eddyb",
        "timestamp": 1595225256
    },
    {
        "content": "<p>got it</p>",
        "id": 204389293,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225394
    },
    {
        "content": "<p>it's still on-demand so you only figure out whether something is \"dirty\" when it's needed by something else, but once you do, if it's not  dirty, you can either load it from disk, or recompute it, or neither if the value isn't needed (but e.g. the diagnostics side-effects are, which I believe are tracked automatically)</p>",
        "id": 204389295,
        "sender_full_name": "eddyb",
        "timestamp": 1595225396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> oh I'm dumb. salsa must have this documented!</p>",
        "id": 204389347,
        "sender_full_name": "eddyb",
        "timestamp": 1595225432
    },
    {
        "content": "<p>since I believe it must be using the same algorithm</p>",
        "id": 204389349,
        "sender_full_name": "eddyb",
        "timestamp": 1595225439
    },
    {
        "content": "<p>haha we all are</p>",
        "id": 204389350,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225442
    },
    {
        "content": "<p><a href=\"https://github.com/salsa-rs/salsa\">https://github.com/salsa-rs/salsa</a></p>",
        "id": 204389356,
        "sender_full_name": "eddyb",
        "timestamp": 1595225453
    },
    {
        "content": "<p>nice. Will add salsa to my homework list :)</p>",
        "id": 204389362,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225464
    },
    {
        "content": "<p>actually I could read it while <a href=\"http://docs.rs\">docs.rs</a> compiles ^^</p>",
        "id": 204389366,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225473
    },
    {
        "content": "<p>(noooo it just finished T-T)</p>",
        "id": 204389375,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225494
    },
    {
        "content": "<p>the main difference between the rustc incremental on-demand system and salsa is that salsa came later and it's a \"librarization\"/\"frameworkization\" of the concept</p>",
        "id": 204389378,
        "sender_full_name": "eddyb",
        "timestamp": 1595225498
    },
    {
        "content": "<p>salsa is cleaner but also less specialized/obsessed with overhead</p>",
        "id": 204389384,
        "sender_full_name": "eddyb",
        "timestamp": 1595225516
    },
    {
        "content": "<p>less obsessed with overhead? or (nevermind, you clarified it :3)</p>",
        "id": 204389431,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225551
    },
    {
        "content": "<p>interesting!</p>",
        "id": 204389438,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225568
    },
    {
        "content": "<p>it uses traits and trait objects (or maybe even just <code>impl Trait</code>? so generics) whereas the rustc one uses a macro to define everything, and function pointers</p>",
        "id": 204389441,
        "sender_full_name": "eddyb",
        "timestamp": 1595225570
    },
    {
        "content": "<p>woah</p>",
        "id": 204389453,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225585
    },
    {
        "content": "<p>yeah that feels like quite the different approach</p>",
        "id": 204389462,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225601
    },
    {
        "content": "<p>I doubt salsa is significantly slower, it's just scary to try and change the rustc one because a lot of things are likely to be a waste of time due to second-order effects and whatnot</p>",
        "id": 204389481,
        "sender_full_name": "eddyb",
        "timestamp": 1595225632
    },
    {
        "content": "<p>yas yas</p>",
        "id": 204389525,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225644
    },
    {
        "content": "<p>at least we have <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> so it's at most a waste of time :P</p>",
        "id": 204389528,
        "sender_full_name": "eddyb",
        "timestamp": 1595225645
    },
    {
        "content": "<p>:)</p>",
        "id": 204389532,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225652
    },
    {
        "content": "<p>perf.rlo is so friggin useful</p>",
        "id": 204389536,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225660
    },
    {
        "content": "<p>sounds like the incremental algorithm is only described in <a href=\"https://www.youtube.com/watch?v=i_IhACacPRY\">https://www.youtube.com/watch?v=i_IhACacPRY</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"i_IhACacPRY\" href=\"https://www.youtube.com/watch?v=i_IhACacPRY\"><img src=\"https://i.ytimg.com/vi/i_IhACacPRY/default.jpg\"></a></div>",
        "id": 204389550,
        "sender_full_name": "eddyb",
        "timestamp": 1595225686
    },
    {
        "content": "<p>I mean (tangent!) have you looked at how llvm 11 improved its times after they starting keeping track?</p>",
        "id": 204389552,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225689
    },
    {
        "content": "<p>(looking at the salsa book)</p>",
        "id": 204389554,
        "sender_full_name": "eddyb",
        "timestamp": 1595225694
    },
    {
        "content": "<p>anyway the other thing that's coarse-grained (but more fine-grained than \"the entire crate and always runs\") is CGUs</p>",
        "id": 204389574,
        "sender_full_name": "eddyb",
        "timestamp": 1595225729
    },
    {
        "content": "<p>yes, CGUs! I know a little bit about them. Wesley has been investigating them for the purposes of accelerating incr. comp</p>",
        "id": 204389635,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225781
    },
    {
        "content": "<p>so even if your parsing and macro expansion time is negligible, you run into the problem that some small change somewhere may be in a large CGU (or all your CGUs are large, lolsob) and redoing the MIR -&gt; LLVM IR codegen and LLVM optimizations on that CGU will take a long  time</p>",
        "id": 204389638,
        "sender_full_name": "eddyb",
        "timestamp": 1595225786
    },
    {
        "content": "<p>note that if you want to ignore all that, and measure just the \"IDE-facing\" overhead, you should use <code>cargo check</code></p>",
        "id": 204389649,
        "sender_full_name": "eddyb",
        "timestamp": 1595225809
    },
    {
        "content": "<blockquote>\n<p>or all your CGUs are large, lolsob</p>\n</blockquote>\n<p>Been there T.T</p>",
        "id": 204389652,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225819
    },
    {
        "content": "<p>sadly I don't think there's a way to run <code>cargo rustc</code> as if it were <code>cargo check</code>, which would be really handy</p>",
        "id": 204389663,
        "sender_full_name": "eddyb",
        "timestamp": 1595225837
    },
    {
        "content": "<p>One smol mir opt I implemented is disabled because of CGU partitioning</p>",
        "id": 204389672,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225849
    },
    {
        "content": "<p>so the <code>-Z time-passes</code> thing, is that a <code>cargo</code> flag?</p>",
        "id": 204389763,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595225974
    },
    {
        "content": "<p>rustc</p>",
        "id": 204389765,
        "sender_full_name": "eddyb",
        "timestamp": 1595225979
    },
    {
        "content": "<p>Cargo <del>doesn't</del> didn't <em>really</em> have -Z flags, except now it's starting to, lol</p>",
        "id": 204389771,
        "sender_full_name": "eddyb",
        "timestamp": 1595225990
    },
    {
        "content": "<p>so it's really easy to get a confusing error that you can't even tell is from Cargo telling you a flag you're sure exists, doesn't</p>",
        "id": 204389817,
        "sender_full_name": "eddyb",
        "timestamp": 1595226010
    },
    {
        "content": "<p>yeah, I was just confused when invoking the cargo help command for <code>-Z</code> flags and saw nothing about time passes</p>",
        "id": 204389851,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226093
    },
    {
        "content": "<p>the Cargo -Z flags are mostly about controlling or extracting information from, well, the Cargo side. wow that sounds so tautological</p>",
        "id": 204389902,
        "sender_full_name": "eddyb",
        "timestamp": 1595226150
    },
    {
        "content": "<p>basically Cargo treats the compilation as opaque (JSON diagnostic output being the main exception AFAIK)</p>",
        "id": 204389910,
        "sender_full_name": "eddyb",
        "timestamp": 1595226179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204389910\">said</a>:</p>\n<blockquote>\n<p>basically Cargo treats the compilation as opaque (JSON diagnostic output being the main exception AFAIK)</p>\n</blockquote>\n<p>Ohh, I had no idea. Well, that seems very sensible. Keeps the interfaces well defined. Had no idea tho</p>",
        "id": 204389925,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226219
    },
    {
        "content": "<p>so anything that peers into the compilation needs to go through rustc flags - either <code>cargo rustc -- ...</code> (the <code>--</code> ends Cargo flags) or <code>RUSTFLAGS</code> (which you don't really want because it will affect all your dependencies and cause a full rebuild)</p>",
        "id": 204389982,
        "sender_full_name": "eddyb",
        "timestamp": 1595226285
    },
    {
        "content": "<p>I gave this to <code>cargo</code>: <code>cargo +nightly rustc --lib -- -Z time-passes</code>, I hope it works.<br>\n(PS: just realized. Since I'm now compiling with nightly, I'll be building a new incr. cache XD!)</p>",
        "id": 204389996,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226324
    },
    {
        "content": "<p>did you spend all the time we were talking compiling with non-nightly :P?</p>",
        "id": 204390044,
        "sender_full_name": "eddyb",
        "timestamp": 1595226373
    },
    {
        "content": "<blockquote>\n<p>(the -- ends Cargo flags)</p>\n</blockquote>\n<p>OHH THAT WAS IT. I had forgotten what were the <code>--</code> for. It's been at least 18 months since I last used it</p>",
        "id": 204390047,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390044\">said</a>:</p>\n<blockquote>\n<p>did you spend all the time we were talking compiling with non-nightly :P?</p>\n</blockquote>\n<p>I want to exercise my right to not self-incriminate, but yes, yes I did XDDD</p>",
        "id": 204390059,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226405
    },
    {
        "content": "<p>another fun use of <code>--</code> is grep (or <code>rg</code>) when your regex starts with <code>-</code> :P</p>",
        "id": 204390067,
        "sender_full_name": "eddyb",
        "timestamp": 1595226416
    },
    {
        "content": "<p>I tend to just have nightly as the default and only even install stable/beta for testing</p>",
        "id": 204390072,
        "sender_full_name": "eddyb",
        "timestamp": 1595226432
    },
    {
        "content": "<p>lool!</p>",
        "id": 204390076,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226450
    },
    {
        "content": "<p>leads to less pain overall I feel. but maybe I'm biased by having worked on Rust since before the trains even existed</p>",
        "id": 204390081,
        "sender_full_name": "eddyb",
        "timestamp": 1595226464
    },
    {
        "content": "<p>(or nightly, lol)</p>",
        "id": 204390084,
        "sender_full_name": "eddyb",
        "timestamp": 1595226470
    },
    {
        "content": "<p>I would do that happily (having nightly as the default), but then I could forget and end up in a mess of my own creation</p>",
        "id": 204390125,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226493
    },
    {
        "content": "<p>it's easier to mess up with stable/beta because you can end up reporting bugs that have been fixed already :P</p>",
        "id": 204390137,
        "sender_full_name": "eddyb",
        "timestamp": 1595226517
    },
    {
        "content": "<p>Maybe in a later year I could, if I managed to work on Rust stuff full time</p>",
        "id": 204390141,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226522
    },
    {
        "content": "<p>(although the converse is also true, so YMMV)</p>",
        "id": 204390148,
        "sender_full_name": "eddyb",
        "timestamp": 1595226538
    },
    {
        "content": "<p>So coming back to salsa</p>",
        "id": 204390228,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226609
    },
    {
        "content": "<p>The idea is to eventually have salsa in the rust compiler... right?</p>",
        "id": 204390236,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226627
    },
    {
        "content": "<p>sort of?</p>",
        "id": 204390238,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226632
    },
    {
        "content": "<p>it's not really necessary other than for aesthetics reasons</p>",
        "id": 204390256,
        "sender_full_name": "eddyb",
        "timestamp": 1595226679
    },
    {
        "content": "<p>but maybe <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has some long-term plans <em>shrug</em></p>",
        "id": 204390262,
        "sender_full_name": "eddyb",
        "timestamp": 1595226701
    },
    {
        "content": "<p>the important thing is querifying/incrementalizing the rest of the compilation, on the \"front\" side, and maybe improving CGU partitioning, on the \"back\" side</p>",
        "id": 204390317,
        "sender_full_name": "eddyb",
        "timestamp": 1595226742
    },
    {
        "content": "<p>and only the former is relevant to IDEs</p>",
        "id": 204390318,
        "sender_full_name": "eddyb",
        "timestamp": 1595226750
    },
    {
        "content": "<p>right, right</p>",
        "id": 204390344,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595226802
    },
    {
        "content": "<p>I have three big hopes wrt to the backend</p>\n<ol>\n<li>That LLVM keeps this trend going and registers a speedup (yep, better times. On llvm. I'm a crazy person) now that they're actually measuring the compilation times.</li>\n<li>That Wesley and the rest of us figure out a way to better partition the CGUs. We don't really care that much about performance in debug builds, so this seems like a very fertile ground to reduce incremental times (by reducing the overall span of the CGUs over compiled code).</li>\n<li>That the mir-opts wg manages to lift a lot of weight off of LLVM, resulting in better compile times c:</li>\n</ol>",
        "id": 204390513,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227006
    },
    {
        "content": "<p>wtf did I just see. Nightly is recompiling <code>docs.rs</code> in 4!!! SECONDS!</p>",
        "id": 204390624,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227108
    },
    {
        "content": "<p>lost 16 seconds between stable and nightly</p>",
        "id": 204390630,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227124
    },
    {
        "content": "<p>what is sleeping in that nightly</p>",
        "id": 204390638,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390137\">said</a>:</p>\n<blockquote>\n<p>it's easier to mess up with stable/beta because you can end up reporting bugs that have been fixed already :P</p>\n</blockquote>\n<p>okay but I didn't really expect to be right in this case,</p>",
        "id": 204390641,
        "sender_full_name": "eddyb",
        "timestamp": 1595227146
    },
    {
        "content": "<p>you can also try beta if you're bored :P</p>",
        "id": 204390643,
        "sender_full_name": "eddyb",
        "timestamp": 1595227160
    },
    {
        "content": "<p>omg eddy don't tempt me <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> I dunno if you know, but I want to keep going even tho I should go sleep</p>",
        "id": 204390656,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227199
    },
    {
        "content": "<p>oh I thought you started replying in this thread because it's monday morning</p>",
        "id": 204390706,
        "sender_full_name": "eddyb",
        "timestamp": 1595227238
    },
    {
        "content": "<p>This is cool tho. -16 seconds. Did I just accidentally download faster ram or something? This feels like magic</p>",
        "id": 204390709,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227240
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390706\">said</a>:</p>\n<blockquote>\n<p>oh I thought you started replying in this thread because it's monday morning</p>\n</blockquote>\n<p>Oh no, it's sunday night for me still</p>",
        "id": 204390719,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227258
    },
    {
        "content": "<p>so not in europe, got it :P</p>",
        "id": 204390722,
        "sender_full_name": "eddyb",
        "timestamp": 1595227269
    },
    {
        "content": "<p>\"still\" &lt;- this dummy you're talking to has insomnia</p>",
        "id": 204390731,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390722\">said</a>:</p>\n<blockquote>\n<p>so not in europe, got it :P</p>\n</blockquote>\n<p>Yup! I'm in Chile ^^</p>",
        "id": 204390748,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227318
    },
    {
        "content": "<p>to clarify something I've said earlier: 1/60 is for IDEs, when you can <em>theoretically</em> do 0 work, and the hard part is minimizing the overhead of tracking and propagating changes, once everything is incrementalized. it's not feasible for actual codegen I don't think :P</p>",
        "id": 204390750,
        "sender_full_name": "eddyb",
        "timestamp": 1595227321
    },
    {
        "content": "<p>btw did you get a breakdown of those 4 seconds?</p>",
        "id": 204390806,
        "sender_full_name": "eddyb",
        "timestamp": 1595227363
    },
    {
        "content": "<p>It might be feasible for codegen if we ever managed to use something like cranelift for debug builds, right?</p>",
        "id": 204390807,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227367
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390806\">said</a>:</p>\n<blockquote>\n<p>btw did you get a breakdown of those 4 seconds?</p>\n</blockquote>\n<p>Yaas! Almost forgot. Will put it in a pastebin, it's a long scroll</p>",
        "id": 204390822,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227388
    },
    {
        "content": "<p>even then, it would need to be something far more advanced than cranelift... or maybe not, idk, we're still talking more than a milisecond</p>",
        "id": 204390827,
        "sender_full_name": "eddyb",
        "timestamp": 1595227401
    },
    {
        "content": "<p>although it would be far more interesting to get the timings from the (longer) stable build</p>",
        "id": 204390834,
        "sender_full_name": "eddyb",
        "timestamp": 1595227415
    },
    {
        "content": "<p>Output: <a href=\"https://pastebin.ubuntu.com/p/W7b3YxWK5r/\">https://pastebin.ubuntu.com/p/W7b3YxWK5r/</a></p>",
        "id": 204390893,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227453
    },
    {
        "content": "<p>presumably you can add <code>RUSTC_BOOTSTRAP=1</code> in front of your command to make <code>-Z</code> work on stable (NB: I don't condone doing this in general, this is just to get some data)</p>",
        "id": 204390894,
        "sender_full_name": "eddyb",
        "timestamp": 1595227455
    },
    {
        "content": "<blockquote>\n<p><code>time: 0.000; rss: 52MB   parse_crate</code></p>\n</blockquote>\n<p>do we actually measure this correctly anymore? surely it's at least 1ms??</p>",
        "id": 204390925,
        "sender_full_name": "eddyb",
        "timestamp": 1595227515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390894\">said</a>:</p>\n<blockquote>\n<p>presumably you can add <code>RUSTC_BOOTSTRAP=1</code> in front of your command to make <code>-Z</code> work on stable (NB: I don't condone doing this in general, this is just to get some data)</p>\n</blockquote>\n<p>I love the hacks that you're showing me. I have a friend that teaches like that, I really like this \"there is a tool that is really advanced, not intended for this really, but both you and I will learn from it :D\" thing</p>",
        "id": 204390935,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227543
    },
    {
        "content": "<p>not really like that no. it only works because we cheapened out on solving compiling rustc with the previous version of itself, properly</p>",
        "id": 204390986,
        "sender_full_name": "eddyb",
        "timestamp": 1595227579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204390925\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p><code>time: 0.000; rss: 52MB   parse_crate</code></p>\n</blockquote>\n<p>do we actually measure this correctly anymore? surely it's at least 1ms??</p>\n</blockquote>\n<p>Might be because it's incremental recompilation?</p>",
        "id": 204390990,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227585
    },
    {
        "content": "<p>no, we don't do incremental reparsing</p>",
        "id": 204390996,
        "sender_full_name": "eddyb",
        "timestamp": 1595227595
    },
    {
        "content": "<p>for some reason I thought we made <code>-Z time-passes</code> hierarchical. I guess not. so arguably it's still broken?</p>",
        "id": 204391004,
        "sender_full_name": "eddyb",
        "timestamp": 1595227609
    },
    {
        "content": "<p>mm, I see, so this output should be taken with a grain of salt then, 'cause we don't know how much is the flag broken?</p>",
        "id": 204391026,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227658
    },
    {
        "content": "<p>anyway looks like a whole second is spend on macro expansion (including parsing maybe?)</p>",
        "id": 204391028,
        "sender_full_name": "eddyb",
        "timestamp": 1595227665
    },
    {
        "content": "<p>that's what I was looking for anyway</p>",
        "id": 204391031,
        "sender_full_name": "eddyb",
        "timestamp": 1595227672
    },
    {
        "content": "<p>(<code>time: 0.967; rss: 298MB   configure_and_expand</code>)</p>",
        "id": 204391034,
        "sender_full_name": "eddyb",
        "timestamp": 1595227679
    },
    {
        "content": "<p>(BTW I really like the <code>rss</code> metric. This is the first project where I've had the chance to see memory usage been measured in such a way)</p>",
        "id": 204391076,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227700
    },
    {
        "content": "<p>the rest seems to be CGU-driven</p>",
        "id": 204391093,
        "sender_full_name": "eddyb",
        "timestamp": 1595227729
    },
    {
        "content": "<p>holy crap, even the crate metadata?</p>",
        "id": 204391106,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227745
    },
    {
        "content": "<p>(<code>time: 1.042; rss: 618MB   generate_crate_metadata</code>)</p>",
        "id": 204391111,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227754
    },
    {
        "content": "<p>presumably it's timing the total time which includes running a lot of stuff because one (or more) CGU(s) had to be rebuilt?</p>",
        "id": 204391120,
        "sender_full_name": "eddyb",
        "timestamp": 1595227775
    },
    {
        "content": "<p>if you want to see the true timings, I guess you'll need <code>-Z self-profile</code></p>",
        "id": 204391124,
        "sender_full_name": "eddyb",
        "timestamp": 1595227791
    },
    {
        "content": "<p>just like that?</p>",
        "id": 204391166,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227804
    },
    {
        "content": "<p>everything else the same? It keeps its cache and all of that?</p>",
        "id": 204391175,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227823
    },
    {
        "content": "<p>yeah, have you use measureme's <code>summarize</code>/<code>crox</code> before?</p>",
        "id": 204391178,
        "sender_full_name": "eddyb",
        "timestamp": 1595227835
    },
    {
        "content": "<p>nu, never</p>",
        "id": 204391182,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227842
    },
    {
        "content": "<p><code>cargo +nightly install --git https://github.com/rust-lang/measureme summarize crox</code></p>",
        "id": 204391187,
        "sender_full_name": "eddyb",
        "timestamp": 1595227855
    },
    {
        "content": "<p>(rustc will generate 3 files, those tools can read them)</p>",
        "id": 204391203,
        "sender_full_name": "eddyb",
        "timestamp": 1595227876
    },
    {
        "content": "<p>nice!</p>",
        "id": 204391209,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227890
    },
    {
        "content": "<p>I wish it was integrated with rustc better but eh</p>",
        "id": 204391218,
        "sender_full_name": "eddyb",
        "timestamp": 1595227900
    },
    {
        "content": "<p>yeah, baby steps</p>",
        "id": 204391224,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227914
    },
    {
        "content": "<p>eventually all the good tools end up in the right place</p>",
        "id": 204391264,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595227927
    },
    {
        "content": "<p>kay, installed the crates and ran self-profile</p>",
        "id": 204391519,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595228304
    },
    {
        "content": "<p>now I'm guessing that measureme must have the rest of the instructions... lemme see...</p>",
        "id": 204391544,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595228354
    },
    {
        "content": "<p>it does!</p>",
        "id": 204391722,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595228537
    },
    {
        "content": "<p>kay one sec, I'm installing flamegraph as well</p>",
        "id": 204391755,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595228596
    },
    {
        "content": "<p>Kay, this is the summarized table: <a href=\"https://pastebin.ubuntu.com/p/Jp93zsz23x/\">https://pastebin.ubuntu.com/p/Jp93zsz23x/</a></p>",
        "id": 204391939,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595228787
    },
    {
        "content": "<p>These files are the output of the self-profiling: <br>\n<a href=\"/user_uploads/4715/xo5AQzqSem6m4VyaYrPV9ALB/cratesfyi-8963.events\">cratesfyi-8963.events</a> <a href=\"/user_uploads/4715/2EgTtGks49UUgmgtfC3AUXV9/cratesfyi-8963.string_data\">cratesfyi-8963.string_data</a> <a href=\"/user_uploads/4715/Sj5MlEfQY5jc6-pVR6uo5aUV/cratesfyi-8963.string_index\">cratesfyi-8963.string_index</a></p>",
        "id": 204392209,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span>  IIRC <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> was talking with Niko about improving salsa for faster queries in rust analyzer.</p>",
        "id": 204392230,
        "sender_full_name": "pachi",
        "timestamp": 1595229105
    },
    {
        "content": "<p><span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 204392332,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229198
    },
    {
        "content": "<p>wow parsing the crate is a quarter of a milisecond</p>",
        "id": 204392341,
        "sender_full_name": "eddyb",
        "timestamp": 1595229212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> btw do you have chrome installed?</p>",
        "id": 204392434,
        "sender_full_name": "eddyb",
        "timestamp": 1595229275
    },
    {
        "content": "<p>Yas!</p>",
        "id": 204392438,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229283
    },
    {
        "content": "<p>run <code>crox cratesfyi-8963</code> then load the resulting <code>chrome_profile.json</code> file into Chrome DevTools</p>",
        "id": 204392456,
        "sender_full_name": "eddyb",
        "timestamp": 1595229308
    },
    {
        "content": "<p>I use FF for the most part, but for messing around with jitsi and for some cool web dev tools I have Chromium as well</p>",
        "id": 204392457,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229311
    },
    {
        "content": "<p>(Performance tab in DevTools, I think it looks like an upload icon)</p>",
        "id": 204392466,
        "sender_full_name": "eddyb",
        "timestamp": 1595229329
    },
    {
        "content": "<p>yup!</p>",
        "id": 204392470,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229334
    },
    {
        "content": "<p>What can I do with this? It looks like a flamegraph, but I assume it's like that and better</p>",
        "id": 204392482,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229359
    },
    {
        "content": "<p>you can see what takes up most of the time, and how it nests</p>",
        "id": 204392562,
        "sender_full_name": "eddyb",
        "timestamp": 1595229417
    },
    {
        "content": "<p>a wide screenshot of it would be helpful :P</p>",
        "id": 204392569,
        "sender_full_name": "eddyb",
        "timestamp": 1595229428
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/RQNd-fWmH99Ja3FeBBBSb8wu/rustc.svg\">rustc.svg</a></p>",
        "id": 204392578,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229444
    },
    {
        "content": "<p>ugh Zulip doesn't let me just see it</p>",
        "id": 204392585,
        "sender_full_name": "eddyb",
        "timestamp": 1595229462
    },
    {
        "content": "<p>also how did you get an SVG?</p>",
        "id": 204392588,
        "sender_full_name": "eddyb",
        "timestamp": 1595229469
    },
    {
        "content": "<p>aw noes :c</p>",
        "id": 204392590,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229477
    },
    {
        "content": "<p>flamegraph!</p>",
        "id": 204392593,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229480
    },
    {
        "content": "<p>huh</p>",
        "id": 204392646,
        "sender_full_name": "eddyb",
        "timestamp": 1595229509
    },
    {
        "content": "<p><code>cargo +nightly install --git https://github.com/rust-lang/measureme flamegraph</code> and then <code>flamegraph cratesfyi-8963</code></p>",
        "id": 204392649,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229515
    },
    {
        "content": "<p>oh that</p>",
        "id": 204392653,
        "sender_full_name": "eddyb",
        "timestamp": 1595229525
    },
    {
        "content": "<p>see how <code>generate_crate_metadata</code> is mostly the monomorphization collector?</p>",
        "id": 204392656,
        "sender_full_name": "eddyb",
        "timestamp": 1595229541
    },
    {
        "content": "<p>yes!</p>",
        "id": 204392667,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229556
    },
    {
        "content": "<p>what does the monomorphization collector do?</p>",
        "id": 204392680,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229572
    },
    {
        "content": "<p>it's what finds all the instantiations (of functions) that need to exist</p>",
        "id": 204392692,
        "sender_full_name": "eddyb",
        "timestamp": 1595229592
    },
    {
        "content": "<p>which then get partitioned into CGUs</p>",
        "id": 204392695,
        "sender_full_name": "eddyb",
        "timestamp": 1595229598
    },
    {
        "content": "<p>ahhhh, got it</p>",
        "id": 204392737,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229607
    },
    {
        "content": "<p>oh I can click on stuff heh</p>",
        "id": 204392760,
        "sender_full_name": "eddyb",
        "timestamp": 1595229633
    },
    {
        "content": "<p>yeees!</p>",
        "id": 204392762,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229638
    },
    {
        "content": "<p>it's so cool!</p>",
        "id": 204392763,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229640
    },
    {
        "content": "<p><span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 204392765,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229643
    },
    {
        "content": "<p>I loved it instantly, that's why I sent you the svg ^^</p>",
        "id": 204392777,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229660
    },
    {
        "content": "<p>partitioning takes so much less time than just colelcting them, that's so weird</p>",
        "id": 204392783,
        "sender_full_name": "eddyb",
        "timestamp": 1595229666
    },
    {
        "content": "<p>yeah</p>",
        "id": 204392795,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229695
    },
    {
        "content": "<p>I guess we don't cache most of what the monomorphization collector does, I didn't consider that</p>",
        "id": 204392805,
        "sender_full_name": "eddyb",
        "timestamp": 1595229714
    },
    {
        "content": "<p>oh this being a flame graph is confusing</p>",
        "id": 204392851,
        "sender_full_name": "eddyb",
        "timestamp": 1595229735
    },
    {
        "content": "<p>the chrome thing shows you every instance</p>",
        "id": 204392855,
        "sender_full_name": "eddyb",
        "timestamp": 1595229741
    },
    {
        "content": "<p>so you don't  end up with things being in the wrong place timeline-wise</p>",
        "id": 204392858,
        "sender_full_name": "eddyb",
        "timestamp": 1595229754
    },
    {
        "content": "<p>also it measures time, idk what this thing does</p>",
        "id": 204392866,
        "sender_full_name": "eddyb",
        "timestamp": 1595229773
    },
    {
        "content": "<p>Apparently the idea is to follow this: <a href=\"https://github.com/brendangregg/FlameGraph\">https://github.com/brendangregg/FlameGraph</a></p>",
        "id": 204392924,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229839
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> btw you can get extra detail if you run with <code>-Z self-profile -Z self-profile-events=default,query-keys</code></p>",
        "id": 204392972,
        "sender_full_name": "eddyb",
        "timestamp": 1595229850
    },
    {
        "content": "<p>oh, that's cool</p>",
        "id": 204392997,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229883
    },
    {
        "content": "<p><code>metadata_register_crate</code> takes a long time, kind of surprised it does tbh</p>",
        "id": 204393012,
        "sender_full_name": "eddyb",
        "timestamp": 1595229906
    },
    {
        "content": "<p>the nesting would suggest it's recursing through dependencies? we should be as lazy as we can with loading data, in case it's not needed</p>",
        "id": 204393022,
        "sender_full_name": "eddyb",
        "timestamp": 1595229928
    },
    {
        "content": "<p>I think so</p>",
        "id": 204393026,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595229939
    },
    {
        "content": "<p>anyway in the chrome devtools thing you should be able to see the exact point at which <code>resolve_crate</code> / <code>hir_lowering</code> end and incremental starts</p>",
        "id": 204393090,
        "sender_full_name": "eddyb",
        "timestamp": 1595229997
    },
    {
        "content": "<p>aha!</p>",
        "id": 204393209,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230127
    },
    {
        "content": "<p>yes, I see it now</p>",
        "id": 204393212,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230131
    },
    {
        "content": "<p>(I wish the chrome thing had this clicking feature... it's a bit hard to navigate)</p>",
        "id": 204393275,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230190
    },
    {
        "content": "<p>It ends at around 990ms</p>",
        "id": 204393343,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230231
    },
    {
        "content": "<p>No, I'm wrong. At 970ms</p>",
        "id": 204393355,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230254
    },
    {
        "content": "<p>Everything else is more or less incremental, right?</p>",
        "id": 204393366,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230267
    },
    {
        "content": "<p>That's a heck of a lot</p>",
        "id": 204393371,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230272
    },
    {
        "content": "<p>yeah, except for the fact that some stuff is monolithic so it gets fully redone if anything changes</p>",
        "id": 204393382,
        "sender_full_name": "eddyb",
        "timestamp": 1595230291
    },
    {
        "content": "<p>i.e. it would be nice to break it up and cache some parts of it, if possible</p>",
        "id": 204393387,
        "sender_full_name": "eddyb",
        "timestamp": 1595230304
    },
    {
        "content": "<p>makes sense</p>",
        "id": 204393449,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230340
    },
    {
        "content": "<p>mm. Now I want to do a survey of this behavior</p>",
        "id": 204393462,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230353
    },
    {
        "content": "<p>welp</p>",
        "id": 204393467,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230357
    },
    {
        "content": "<p>more work for the thesis! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 204393473,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230368
    },
    {
        "content": "<p>My target is reducing compile times. A detour on what exactly is taking away compile time is sort of the fuel that I need</p>",
        "id": 204393501,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230406
    },
    {
        "content": "<p>Anywho</p>",
        "id": 204393528,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230439
    },
    {
        "content": "<p>Eddy (btw can I call you Eddy or is eddyb/Eddyb better?), I'm running out of stamina.</p>",
        "id": 204393576,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230447
    },
    {
        "content": "<p>i.e. I should go sleep now</p>",
        "id": 204393597,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230458
    },
    {
        "content": "<p>This was a lot of fun. Thank you for your time <span aria-label=\"rainbow\" class=\"emoji emoji-1f308\" role=\"img\" title=\"rainbow\">:rainbow:</span> I've learned a lot</p>",
        "id": 204393636,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230496
    },
    {
        "content": "<p>As it's often the case when you're around ^^</p>",
        "id": 204393670,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230521
    },
    {
        "content": "<p>I find it weird that people use non-nicks on Zulip btw</p>",
        "id": 204393680,
        "sender_full_name": "eddyb",
        "timestamp": 1595230529
    },
    {
        "content": "<p>ideally it would just be GitHub handles to keep things uniform :P</p>",
        "id": 204393703,
        "sender_full_name": "eddyb",
        "timestamp": 1595230546
    },
    {
        "content": "<p>Yeah, I just use mine because of github</p>",
        "id": 204393704,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230549
    },
    {
        "content": "<p>I guess I could use felix91gr</p>",
        "id": 204393709,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230557
    },
    {
        "content": "<p>which is my GH handle</p>",
        "id": 204393740,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230563
    },
    {
        "content": "<p>(not saying you or anyone else should change it, it just seems like Zulip makes people write in full names instead of nicks, so the UI must be doing something to cause that)</p>",
        "id": 204393769,
        "sender_full_name": "eddyb",
        "timestamp": 1595230585
    },
    {
        "content": "<p>maybe if they provided both options and showed them differently, and mentioned worked based on nicks not full names, might be easier for everyone</p>",
        "id": 204393795,
        "sender_full_name": "eddyb",
        "timestamp": 1595230612
    },
    {
        "content": "<p>(ohh, that's an interesting theory! It might! I've heard that subtle changes in defaults and what not can cause people to do that!)</p>",
        "id": 204393802,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230618
    },
    {
        "content": "<p>yas</p>",
        "id": 204393818,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230634
    },
    {
        "content": "<p>like I don't mind my real name being available for legal reasons or w/e (copyright and running a company etc.)</p>",
        "id": 204393822,
        "sender_full_name": "eddyb",
        "timestamp": 1595230641
    },
    {
        "content": "<p>but if you don't call me \"eddyb\" I'll turn and look around like you're not speaking to me :P</p>",
        "id": 204393840,
        "sender_full_name": "eddyb",
        "timestamp": 1595230655
    },
    {
        "content": "<p>hahahahahahaha</p>",
        "id": 204393853,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230663
    },
    {
        "content": "<p>(\"eddy\" also works but only spoken)</p>",
        "id": 204393925,
        "sender_full_name": "eddyb",
        "timestamp": 1595230695
    },
    {
        "content": "<p>dang, I'll try to remember! I would usually <em>just remember</em> but this whole thing (points everywhere) has dulled my mind a little bit, I'm having trouble remembering these small details</p>",
        "id": 204393935,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230707
    },
    {
        "content": "<p>anyway this is offtopic lol</p>",
        "id": 204393936,
        "sender_full_name": "eddyb",
        "timestamp": 1595230708
    },
    {
        "content": "<p>basically just use my @, it's short and simple for a reason :P</p>",
        "id": 204393961,
        "sender_full_name": "eddyb",
        "timestamp": 1595230729
    },
    {
        "content": "<p>neh, this has to do with performance in a very obscure way, I'm sure. 4th order effect or something</p>",
        "id": 204393965,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230732
    },
    {
        "content": "<p>please don't go there, microoptimizing human communication is such a rabbit hole :P</p>",
        "id": 204393994,
        "sender_full_name": "eddyb",
        "timestamp": 1595230752
    },
    {
        "content": "<p>hahahaha</p>",
        "id": 204394004,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230763
    },
    {
        "content": "<p>nono, I wasn't thinking of that, although I agree, it is :P</p>",
        "id": 204394025,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230787
    },
    {
        "content": "<p>like stenography exists. have you ever wanted to type several times faster, at the cost of losing the ability to type with one hand or w/e?</p>",
        "id": 204394026,
        "sender_full_name": "eddyb",
        "timestamp": 1595230787
    },
    {
        "content": "<p>or on a computer that's not yours</p>",
        "id": 204394087,
        "sender_full_name": "eddyb",
        "timestamp": 1595230811
    },
    {
        "content": "<p>not really, I have enough mental burden by swapping keyboards all the time bc of tildes for spanish and stuff</p>",
        "id": 204394099,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204394087\">said</a>:</p>\n<blockquote>\n<p>or on a computer that's not yours</p>\n</blockquote>\n<p>oh yeah also this</p>",
        "id": 204394103,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230832
    },
    {
        "content": "<p>I was just thinking that some things are related to performance in obscure ways that are out of our control, and we could put up an excuse to a moderator of sorts by inventing a magical thinking framework whereby our talk was somehow related to rustc's performance</p>",
        "id": 204394224,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230934
    },
    {
        "content": "<p>we could also split conversations into separate threads, since we're on Zulip anyway</p>",
        "id": 204394246,
        "sender_full_name": "eddyb",
        "timestamp": 1595230968
    },
    {
        "content": "<p>yas!</p>",
        "id": 204394252,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230978
    },
    {
        "content": "<p>anyway</p>",
        "id": 204394263,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595230986
    },
    {
        "content": "<p>(you can edit your own message to give it a new topic, even if you can't edit the message contents anyway, and by default it will move every subsequent messages to that new topic. so if you started every separate level of the rabbit hole, you can just go back and clean it up)</p>",
        "id": 204394296,
        "sender_full_name": "eddyb",
        "timestamp": 1595231019
    },
    {
        "content": "<p>hahahaha</p>",
        "id": 204394305,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231038
    },
    {
        "content": "<p>good to know</p>",
        "id": 204394347,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231044
    },
    {
        "content": "<p>(Zulip allowing it to be after-the-fact is IMO a big reason for threading not being a borderline useless feature, which would've made Zulip as a whole completely unattractive to me)</p>",
        "id": 204394350,
        "sender_full_name": "eddyb",
        "timestamp": 1595231047
    },
    {
        "content": "<p>mmmm, that's an interesting thought</p>",
        "id": 204394367,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231067
    },
    {
        "content": "<p>I'll give it a spin for sure</p>",
        "id": 204394402,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231098
    },
    {
        "content": "<p>to me the fact that it's OSS makes it already oo better than Discord</p>",
        "id": 204394424,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231119
    },
    {
        "content": "<p>Also Discord being hostile to users and all of that</p>",
        "id": 204394430,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231126
    },
    {
        "content": "<p>yeah, but, e.g. Matrix exists, and Mozilla moved the non-Rust parts of mozirc on their own Matrix instance</p>",
        "id": 204394464,
        "sender_full_name": "eddyb",
        "timestamp": 1595231160
    },
    {
        "content": "<p>ah yes</p>",
        "id": 204394509,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231168
    },
    {
        "content": "<p>Matrix is nice c: I like that it exists at least</p>",
        "id": 204394516,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231178
    },
    {
        "content": "<p>Zulip's main value proposition is threads, which you wonder why it took so long for them to be a thing</p>",
        "id": 204394527,
        "sender_full_name": "eddyb",
        "timestamp": 1595231187
    },
    {
        "content": "<p>Maybe marketing?</p>",
        "id": 204394537,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231200
    },
    {
        "content": "<p>Maybe UX</p>",
        "id": 204394541,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231205
    },
    {
        "content": "<p>Zulip is definitely on the low-end of UX although getting better</p>",
        "id": 204394548,
        "sender_full_name": "eddyb",
        "timestamp": 1595231217
    },
    {
        "content": "<p>yes</p>",
        "id": 204394557,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231224
    },
    {
        "content": "<p>I wonder if slack tried threads and where they screwed up :P</p>",
        "id": 204394570,
        "sender_full_name": "eddyb",
        "timestamp": 1595231237
    },
    {
        "content": "<p>the mobile app (which I use a lot!) is kinda meh</p>",
        "id": 204394571,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231239
    },
    {
        "content": "<p>I mean it works but it's... let's say it needs a couple more iterations at least</p>",
        "id": 204394585,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231261
    },
    {
        "content": "<p>At least it hasn't crashed on me or anything. It seems to be solid. But the UI is lacking a lot</p>",
        "id": 204394635,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231285
    },
    {
        "content": "<p>maybe it's that effect where some platform/app in the past really botched it and everyone stayed away from the idea as a whole</p>",
        "id": 204394661,
        "sender_full_name": "eddyb",
        "timestamp": 1595231316
    },
    {
        "content": "<p>Ah, could be</p>",
        "id": 204394677,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231330
    },
    {
        "content": "<p>but that's just speculation on my part, idk how common that effect even is</p>",
        "id": 204394682,
        "sender_full_name": "eddyb",
        "timestamp": 1595231333
    },
    {
        "content": "<p>Maybe wave (that weird google thing) tried it</p>",
        "id": 204394687,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231342
    },
    {
        "content": "<p>maybe this is related to mailing lists being kind of an UX... not nightmare, more like barren land</p>",
        "id": 204394722,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231369
    },
    {
        "content": "<p>because mailing lists and Zulip feel a lot alike in the flexibility of threads</p>",
        "id": 204394758,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231390
    },
    {
        "content": "<p>Only Zulip has css to begin with <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> (no but really it's already a lot better than Ml.Lsts)</p>",
        "id": 204394813,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231418
    },
    {
        "content": "<p>Anywho... let's button this one up or... however it's said x3 (I've heard it said like that before but it might have been a joke?)<br>\nI'm tired and yet fairly content :) I Iearned a lot from this. <br>\nKudos, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>. This is not the first time you teach me stuff, I really appreciate your patience.</p>",
        "id": 204394849,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231463
    },
    {
        "content": "<p>don't mistake me distractability for patience :P</p>",
        "id": 204394896,
        "sender_full_name": "eddyb",
        "timestamp": 1595231505
    },
    {
        "content": "<p>Look, if this is you distracted, then you could make a really incredible teacher when focused :P</p>",
        "id": 204394965,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231542
    },
    {
        "content": "<p>Because this was more than good enough :D</p>",
        "id": 204394990,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231569
    },
    {
        "content": "<p>Well, for me at least. Maybe you like students who ask a lot of questions</p>",
        "id": 204395013,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1595231594
    },
    {
        "content": "<p>I make a good sleeping aid,</p>",
        "id": 204395041,
        "sender_full_name": "eddyb",
        "timestamp": 1595231627
    },
    {
        "content": "<p>re flamegraphs, have you seen <a href=\"https://speedscope.app\">https://speedscope.app</a>?</p>",
        "id": 204399924,
        "sender_full_name": "bjorn3",
        "timestamp": 1595235754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"212698\">Félix Fischer</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204389062\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204389002\">said</a>:</p>\n<blockquote>\n<p>(the dependency tracking works without saving the data because it only recomputes something if its dependencies changed, and this both propagates and stops propagation, to minimize what you have to recompute)</p>\n</blockquote>\n<p>Is this algorithm documented somewhere?</p>\n</blockquote>\n<p><a href=\"https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation-in-detail.html#improving-accuracy-the-red-green-algorithm\">https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation-in-detail.html#improving-accuracy-the-red-green-algorithm</a></p>",
        "id": 204436058,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595258511
    },
    {
        "content": "<p>hah, cool, thanks!</p>",
        "id": 204436140,
        "sender_full_name": "eddyb",
        "timestamp": 1595258539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204393022\">said</a>:</p>\n<blockquote>\n<p>the nesting would suggest it's recursing through dependencies? we should be as lazy as we can with loading data, in case it's not needed</p>\n</blockquote>\n<p><a href=\"http://docs.rs\">docs.rs</a> has 490 dependencies so I'm not surprised it takes a while</p>",
        "id": 204438156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595259513
    },
    {
        "content": "<p>if there's a way to load them lazily that would be a <em>huge</em> speedup I imagine</p>",
        "id": 204438196,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595259526
    },
    {
        "content": "<p>I mean, they are <em>almost entirely</em> lazy (in that we try to load as little as possible from each crate, just enough to know how to get more). I guess because it's a flamegraph I don't actually know how each an individual call takes or what it does</p>",
        "id": 204439158,
        "sender_full_name": "eddyb",
        "timestamp": 1595259931
    },
    {
        "content": "<p>then we're probably just using them all :/</p>",
        "id": 204439424,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595260061
    },
    {
        "content": "<p>hopefully getting rid of tokio 0.1 will help a lot</p>",
        "id": 204439472,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595260080
    },
    {
        "content": "<p>well it still feels like a lot, it's possible we're still eagerly loading something we don't need</p>",
        "id": 204440417,
        "sender_full_name": "eddyb",
        "timestamp": 1595260535
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/204389663\">said</a>:</p>\n<blockquote>\n<p>sadly I don't think there's a way to run <code>cargo rustc</code> as if it were <code>cargo check</code>, which would be really handy</p>\n</blockquote>\n<p>I believe <code>cargo rustc --profile=check</code> does what you want</p>",
        "id": 204474831,
        "sender_full_name": "njn",
        "timestamp": 1595278523
    },
    {
        "content": "<p>At least, that's what <code>rustc-perf</code> does.</p>",
        "id": 204475361,
        "sender_full_name": "njn",
        "timestamp": 1595278811
    },
    {
        "content": "<p>My perf triage today is going to be painful, isn't it?</p>",
        "id": 204476501,
        "sender_full_name": "njn",
        "timestamp": 1595279384
    },
    {
        "content": "<p>yeah</p>",
        "id": 204476635,
        "sender_full_name": "simulacrum",
        "timestamp": 1595279437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <code>collector bench_published</code> and <code>collector bench_next</code> currently both return 0 even if there's a problem with one or more of the tests. Is that deliberate? E.g. is it necessary for the <code>run.sh</code> script?</p>",
        "id": 204493025,
        "sender_full_name": "njn",
        "timestamp": 1595285262
    },
    {
        "content": "<p>I've committed the script now btw</p>",
        "id": 204493077,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285284
    },
    {
        "content": "<p>(collector/collect.sh)</p>",
        "id": 204493082,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285288
    },
    {
        "content": "<p>we shouldn't exit if we fail to benchmark, but I think we can make the exit code \"correct\" and just handle that appropriately in <a href=\"http://collect.sh\">collect.sh</a></p>",
        "id": 204493107,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285312
    },
    {
        "content": "<p>(it might be already the case)</p>",
        "id": 204493111,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285317
    },
    {
        "content": "<p>Hmm, it sleeps for 30 seconds if <code>bench_next</code> returns non-zero. But that only happens if there's some kind of setup failure (e.g. network connection), rather than a benchmarking failure. So the existing behaviour is important there, because a 30 second pause won't help if a benchmark is busted.</p>",
        "id": 204493304,
        "sender_full_name": "njn",
        "timestamp": 1595285493
    },
    {
        "content": "<p>So I might just leave that alone.</p>",
        "id": 204493309,
        "sender_full_name": "njn",
        "timestamp": 1595285499
    },
    {
        "content": "<p>(I'm looking at improving testing, and I plan to remove <code>bench_test</code> and use <code>bench_local</code> instead for testing. This is why I'm asking about this stuff.)</p>",
        "id": 204493376,
        "sender_full_name": "njn",
        "timestamp": 1595285529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> oh that should be fine to remove</p>",
        "id": 204493428,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285593
    },
    {
        "content": "<p>the 30 second pause?</p>",
        "id": 204494344,
        "sender_full_name": "njn",
        "timestamp": 1595285605
    },
    {
        "content": "<p>the sleeping is mostly to avoid busy looping</p>",
        "id": 204494346,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285607
    },
    {
        "content": "<p>which is ... mostly not a problem? Like, we're going to end up with at least one network round trip or w/e so I'm not too worried</p>",
        "id": 204494362,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285629
    },
    {
        "content": "<p>Well, there's a 30 second wait on every time around the loop, and then another 30 second wait if there's a failure in <code>bench_next</code>... hmm.</p>",
        "id": 204494442,
        "sender_full_name": "njn",
        "timestamp": 1595285669
    },
    {
        "content": "<p>The important behavior is that even if we fail to benchmark we keep going to the next commit -- but regardless, that'll basically \"just happen\" as the whole thing runs in systemd and that'll restart it if the script ever exits</p>",
        "id": 204494445,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285673
    },
    {
        "content": "<p>so really we can just remove the loop, and just rely on the systemd restarting if we wanted to</p>",
        "id": 204494463,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285692
    },
    {
        "content": "<p>(would simplify code too!)</p>",
        "id": 204494481,
        "sender_full_name": "simulacrum",
        "timestamp": 1595285711
    },
    {
        "content": "<p>My god this perf triage is a disaster. Just an utter disaster.</p>",
        "id": 204503874,
        "sender_full_name": "njn",
        "timestamp": 1595294362
    },
    {
        "content": "<p>sorry about the rustdoc end :/</p>",
        "id": 204503924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595294424
    },
    {
        "content": "<p>we had a _lot_ of changes in the last few days haha</p>",
        "id": 204503928,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595294432
    },
    {
        "content": "<p>I don't even know how many regression we have had, so many rollups</p>",
        "id": 204503933,
        "sender_full_name": "njn",
        "timestamp": 1595294440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> The rustdoc parts aren't as bad</p>",
        "id": 204503942,
        "sender_full_name": "njn",
        "timestamp": 1595294461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> I don't know if it was here or not, but there was some discussion about tool-supported \"introspection\" into rollups (i.e., you point perf at a rollup and a PR and it gives you results for that). Would that be useful here? In theory I imagine we could get something basic going fairly quickly.</p>",
        "id": 204504961,
        "sender_full_name": "simulacrum",
        "timestamp": 1595295834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> That would be extremely helpful</p>",
        "id": 204505006,
        "sender_full_name": "njn",
        "timestamp": 1595295860
    },
    {
        "content": "<p>Do you think it's necessary to \"go back in time\" to when the rollup landed, i.e., basically replacing the rollup with that PR? Would that be the best approach?</p>",
        "id": 204505027,
        "sender_full_name": "simulacrum",
        "timestamp": 1595295888
    },
    {
        "content": "<p>The though of having to bisect all these problems manually is giving me conniptions</p>",
        "id": 204505028,
        "sender_full_name": "njn",
        "timestamp": 1595295892
    },
    {
        "content": "<p>There's several possibilities I can see:</p>\n<ul>\n<li>Just revert the PR on current master -- upside: super easy, downside: hard to interpret results, they're not really \"that PR's effects in the rollup\", e.g., if we've landed regressions/improvements since then that mask the PR indirectly</li>\n</ul>",
        "id": 204505080,
        "sender_full_name": "simulacrum",
        "timestamp": 1595295962
    },
    {
        "content": "<ul>\n<li>Replace the rollup with this PR, essentially virtually reverting the world back to the rollup and then \"landing\" the PR<ul>\n<li>downsides: may miss effects of other PRs in the same rollup on that PR, or just not possible is those PRs had side-effects fixing CI for example</li>\n</ul>\n</li>\n</ul>",
        "id": 204505144,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296027
    },
    {
        "content": "<ul>\n<li>Revert the PR just after the rollup<ul>\n<li>basically guaranteed to work but has some of the downsides of (1) where you might mask things</li>\n</ul>\n</li>\n</ul>",
        "id": 204505160,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> thoughts on which would be best?</p>",
        "id": 204505164,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296067
    },
    {
        "content": "<p>sorry, my kids are doing \"home learning\" due to Covid, I was just helping my daughter with some long multiplication</p>",
        "id": 204505301,
        "sender_full_name": "njn",
        "timestamp": 1595296212
    },
    {
        "content": "<p>no worries :)</p>",
        "id": 204505311,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296234
    },
    {
        "content": "<p>I guess the middle one is the purest solution, right?</p>",
        "id": 204505339,
        "sender_full_name": "njn",
        "timestamp": 1595296276
    },
    {
        "content": "<p>I think it's the best thing we can do if we don't have options</p>",
        "id": 204505350,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296310
    },
    {
        "content": "<p>(which we can add later)</p>",
        "id": 204505351,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> So you'd have to pick which PR or PRs you'd think are responsible?</p>",
        "id": 204505428,
        "sender_full_name": "njn",
        "timestamp": 1595296428
    },
    {
        "content": "<p>basically, yeah, obviously if you throw everything at perf things are basically just going to be quite slow</p>",
        "id": 204505469,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296450
    },
    {
        "content": "<p>I guess we could fairly easily support \"group testing\" of sorts</p>",
        "id": 204505476,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296471
    },
    {
        "content": "<p>The workflow I'm imagining is: <code>@rust-timer post-pr XXXX, XXXX, XXXX</code> and that files a PR with a branch prepared that reverts master to the right point, which you're expected to ~immediately bors try on</p>",
        "id": 204505504,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296526
    },
    {
        "content": "<p>(The alternative is building rustc on the collection machine, which might not actually be a bad idea, but I'm more scared of that)</p>",
        "id": 204505515,
        "sender_full_name": "simulacrum",
        "timestamp": 1595296547
    },
    {
        "content": "<p><code>@rust-timer post-pr XXXX, XXXX, XXXX</code> sounds good</p>",
        "id": 204505836,
        "sender_full_name": "njn",
        "timestamp": 1595296911
    },
    {
        "content": "<p>okay I will investigate that</p>",
        "id": 204505972,
        "sender_full_name": "simulacrum",
        "timestamp": 1595297055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> somewhat relatedly, just fyi: we're auto-deploying both site and collector now so it should be relatively easy to roll things out for anyone</p>",
        "id": 204505988,
        "sender_full_name": "simulacrum",
        "timestamp": 1595297082
    },
    {
        "content": "<p>okay I'm going to work on the \"post-pr\" stuff tomorrow first thing (unless some fire burns again), I'm optimistic it won't be too hard</p>",
        "id": 204506751,
        "sender_full_name": "simulacrum",
        "timestamp": 1595298089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> if you want to post a collection of PRs that would be good to invoke it on that'd be amazing -- I'd want the rollup # they landed in and then PR # itself</p>",
        "id": 204506781,
        "sender_full_name": "simulacrum",
        "timestamp": 1595298122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> oh wow when was <code>--profile=check</code> added?!</p>",
        "id": 204509032,
        "sender_full_name": "eddyb",
        "timestamp": 1595301616
    },
    {
        "content": "<p>I've never heard of it, at most seen people other than me also ask for it</p>",
        "id": 204509043,
        "sender_full_name": "eddyb",
        "timestamp": 1595301630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Any idea about <a href=\"https://github.com/rust-lang/rustc-perf/pull/702#issuecomment-662198817\">https://github.com/rust-lang/rustc-perf/pull/702#issuecomment-662198817</a> ? It doesn't seem like my changes could have triggered it</p>",
        "id": 204625725,
        "sender_full_name": "njn",
        "timestamp": 1595386329
    },
    {
        "content": "<p>Flattening the rustc-perf directory hierarchy has greatly improved my quality of life, no joke</p>",
        "id": 204879708,
        "sender_full_name": "njn",
        "timestamp": 1595566571
    },
    {
        "content": "<p>I remember thinking it was hard to navigate</p>",
        "id": 204879714,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595566603
    },
    {
        "content": "<p>WTF, I added a test for <code>llvm-lines</code> last week and yet it's broken for me locally, somehow</p>",
        "id": 205074913,
        "sender_full_name": "njn",
        "timestamp": 1595812122
    },
    {
        "content": "<p>are you on an old branch maybe?</p>",
        "id": 205074923,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595812156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> hm, I might've broken the test by accident perhaps?</p>",
        "id": 205074972,
        "sender_full_name": "simulacrum",
        "timestamp": 1595812226
    },
    {
        "content": "<p>(or maybe we're not testing it suffiicently well)</p>",
        "id": 205074974,
        "sender_full_name": "simulacrum",
        "timestamp": 1595812235
    },
    {
        "content": "<p>The test is really simple, but the broken case I'm running is equally simple</p>",
        "id": 205075083,
        "sender_full_name": "njn",
        "timestamp": 1595812443
    },
    {
        "content": "<p>/me starts bisecting</p>",
        "id": 205075221,
        "sender_full_name": "njn",
        "timestamp": 1595812801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> what's the log? I might be able to spot the problem just from knowing what's landed</p>",
        "id": 205075317,
        "sender_full_name": "simulacrum",
        "timestamp": 1595812942
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>collector error: Failed to profile &#39;futures&#39; with LlvmLines, recorded: expected success, got exit code: 1\n\nstderr=error: process didn&#39;t exit successfully: `/home/njn/moz/rustc-perf/target/release/rustc-fake -vV` (exit code: 1)\n--- stderr\n&quot;/home/njn/moz/rust1/build/x86_64-unknown-linux-gnu/stage2/bin/rustc&quot; [&quot;-vV&quot;, &quot;-Adeprecated&quot;, &quot;-Aunknown-lints&quot;]\nexiting -- non-wrapped rustc\nRan --emit=llvm-ir but did not find output IR\n</code></pre></div>",
        "id": 205075323,
        "sender_full_name": "njn",
        "timestamp": 1595812968
    },
    {
        "content": "<p>bisection finished:</p>",
        "id": 205075377,
        "sender_full_name": "njn",
        "timestamp": 1595813075
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>96b71fb74faa0782b20c1411f6c2fecc7de7fc18 is the first bad commit\ncommit 96b71fb74faa0782b20c1411f6c2fecc7de7fc18\nAuthor: Mark Rousskov &lt;mark.simulacrum@gmail.com&gt;\nDate:   Fri Jul 24 16:01:31 2020 -0400\n\n    Assert only final rustc\n</code></pre></div>",
        "id": 205075378,
        "sender_full_name": "njn",
        "timestamp": 1595813078
    },
    {
        "content": "<p>Makes sense, that commit added the \"existing -- non-wrapped rustc\" check</p>",
        "id": 205075428,
        "sender_full_name": "njn",
        "timestamp": 1595813177
    },
    {
        "content": "<p>Did <a href=\"https://github.com/rust-lang/rust/issues/717\">#717</a> pass tests? I can't tell at this point</p>",
        "id": 205075432,
        "sender_full_name": "njn",
        "timestamp": 1595813199
    },
    {
        "content": "<p>Hmm, \"Test profiling\" did pass, huh</p>",
        "id": 205075442,
        "sender_full_name": "njn",
        "timestamp": 1595813236
    },
    {
        "content": "<p>aha</p>",
        "id": 205075492,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813327
    },
    {
        "content": "<p>oh I guess maybe <code>cargo llvm-lines</code> should not do that testing</p>",
        "id": 205075496,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813340
    },
    {
        "content": "<p>not sure if that runs rustc more times or something</p>",
        "id": 205075499,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813360
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> the intent of the check is that we should really only be recompiling one crate, i.e., one rustc invocation, per benchmark</p>",
        "id": 205075507,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813380
    },
    {
        "content": "<p>but we might not be able to do it if we're not using <code>cargo rustc -- </code></p>",
        "id": 205075512,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813390
    },
    {
        "content": "<p>in fact I'm actually certain we can't</p>",
        "id": 205075553,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813403
    },
    {
        "content": "<p>so it should be gated on that</p>",
        "id": 205075559,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813411
    },
    {
        "content": "<p><code>cargo llvm-lines</code> itself invokes <code>cargo rustc</code></p>",
        "id": 205075569,
        "sender_full_name": "njn",
        "timestamp": 1595813458
    },
    {
        "content": "<p>but how did the CI test pass?</p>",
        "id": 205075577,
        "sender_full_name": "njn",
        "timestamp": 1595813478
    },
    {
        "content": "<p>are you using futures locally as well?</p>",
        "id": 205075585,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813499
    },
    {
        "content": "<p>yeah you are</p>",
        "id": 205075587,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> oh, \" Running futures: Debug + [Full]\"</p>",
        "id": 205075625,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813537
    },
    {
        "content": "<p>I think we must need incremental for this?</p>",
        "id": 205075627,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813543
    },
    {
        "content": "<p>or are you doing full locally as well?</p>",
        "id": 205075631,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813556
    },
    {
        "content": "<p>I'm running Debug+Full locally</p>",
        "id": 205075632,
        "sender_full_name": "njn",
        "timestamp": 1595813563
    },
    {
        "content": "<p>hmm</p>",
        "id": 205075639,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813616
    },
    {
        "content": "<p>yeah no idea how CI passed</p>",
        "id": 205075642,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813623
    },
    {
        "content": "<p>you're not editing the sources or anything mid-build?</p>",
        "id": 205075685,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813652
    },
    {
        "content": "<p>or maybe you have an old cargo being used? there was a semi-recent bug fix there</p>",
        "id": 205075691,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813689
    },
    {
        "content": "<p>maybe a week or so ago</p>",
        "id": 205075692,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813692
    },
    {
        "content": "<p>My nightly cargo is from Jul 08, I will update</p>",
        "id": 205075704,
        "sender_full_name": "njn",
        "timestamp": 1595813726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/General/near/205075691\">said</a>:</p>\n<blockquote>\n<p>or maybe you have an old cargo being used? there was a semi-recent bug fix there</p>\n</blockquote>\n<p>that should only be for doc builds though ...</p>",
        "id": 205075709,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595813745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> oh, no, I'm talking about a build script bugfix</p>",
        "id": 205075767,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813865
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/pull/8497\">https://github.com/rust-lang/cargo/pull/8497</a></p>",
        "id": 205075813,
        "sender_full_name": "simulacrum",
        "timestamp": 1595813913
    },
    {
        "content": "<p>Cargo from July 23 doesn't help</p>",
        "id": 205075824,
        "sender_full_name": "njn",
        "timestamp": 1595813964
    },
    {
        "content": "<p>my command is <code>target/release/collector profile_local cachegrind $RUSTC0 Orig --include hello --builds Debug --runs Full</code></p>",
        "id": 205075828,
        "sender_full_name": "njn",
        "timestamp": 1595813978
    },
    {
        "content": "<p>insert a <code>$RUSTC0</code> of your choice</p>",
        "id": 205075832,
        "sender_full_name": "njn",
        "timestamp": 1595813993
    },
    {
        "content": "<p>let me try locally I guess</p>",
        "id": 205075872,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814010
    },
    {
        "content": "<p>hm I thought you were doing llvm-lines?</p>",
        "id": 205075874,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> hm so that command seems to pass locally for me</p>",
        "id": 205075926,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814124
    },
    {
        "content": "<p>sorry, change <code>cachegrind</code> to <code>llvm-lines</code></p>",
        "id": 205075932,
        "sender_full_name": "njn",
        "timestamp": 1595814149
    },
    {
        "content": "<p>yeah just rechecked on latest nightly</p>",
        "id": 205075933,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814150
    },
    {
        "content": "<p>(I was testing Cachegrind to make sure)</p>",
        "id": 205075934,
        "sender_full_name": "njn",
        "timestamp": 1595814156
    },
    {
        "content": "<p>let me install it...</p>",
        "id": 205075936,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814184
    },
    {
        "content": "<p>you have cargo-llvm-lines v0.4.3?</p>",
        "id": 205075942,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814207
    },
    {
        "content": "<p>I have 0.4.1</p>",
        "id": 205075952,
        "sender_full_name": "njn",
        "timestamp": 1595814238
    },
    {
        "content": "<p>okay I can reproduce with .3 too</p>",
        "id": 205075993,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814248
    },
    {
        "content": "<p>I have a hunch</p>",
        "id": 205076004,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814300
    },
    {
        "content": "<p><a href=\"https://github.com/dtolnay/cargo-llvm-lines/blob/master/src/main.rs#L123\">https://github.com/dtolnay/cargo-llvm-lines/blob/master/src/main.rs#L123</a> might be responsible, if cargo caches the raw value instead of the parsed value (perf sets it to zero)</p>",
        "id": 205076020,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814346
    },
    {
        "content": "<p>doesn't seem to fix it if I use \"\"</p>",
        "id": 205076080,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> This fixes it:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gh\">diff --git a/collector/src/rustc-fake.rs b/collector/src/rustc-fake.rs</span>\n<span class=\"gh\">index f0a867df..d73bdd70 100644</span>\n<span class=\"gd\">--- a/collector/src/rustc-fake.rs</span>\n<span class=\"gi\">+++ b/collector/src/rustc-fake.rs</span>\n<span class=\"gu\">@@ -216,9 +216,15 @@ fn main() {</span>\n         }\n     } else {\n         if env::var_os(&quot;EXPECT_ONLY_WRAPPED_RUSTC&quot;).is_some() {\n<span class=\"gd\">-            eprintln!(&quot;{:?} {:?}&quot;, tool, args);</span>\n<span class=\"gd\">-            eprintln!(&quot;exiting -- non-wrapped rustc&quot;);</span>\n<span class=\"gd\">-            std::process::exit(1);</span>\n<span class=\"gi\">+            // If it&#39;s a version check then it&#39;s fine</span>\n<span class=\"gi\">+            if !args</span>\n<span class=\"gi\">+                .iter()</span>\n<span class=\"gi\">+                .any(|arg| arg == &quot;-vV&quot; || arg == &quot;--print=file-names&quot;)</span>\n<span class=\"gi\">+            {</span>\n<span class=\"gi\">+                eprintln!(&quot;{:?} {:?}&quot;, tool, args);</span>\n<span class=\"gi\">+                eprintln!(&quot;exiting -- non-wrapped rustc&quot;);</span>\n<span class=\"gi\">+                std::process::exit(1);</span>\n<span class=\"gi\">+            }</span>\n         }\n\n         let mut cmd = Command::new(&amp;tool);\n</code></pre></div>",
        "id": 205076189,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814607
    },
    {
        "content": "<p>So it seems like it's not finding the cargo rustc cache or something like that</p>",
        "id": 205076190,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814625
    },
    {
        "content": "<p>I don't know why</p>",
        "id": 205076191,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814628
    },
    {
        "content": "<p>And what's the difference between CI and local runs</p>",
        "id": 205076197,
        "sender_full_name": "njn",
        "timestamp": 1595814667
    },
    {
        "content": "<p>so annoying that this new test fell over at the first challenge, sigh</p>",
        "id": 205076202,
        "sender_full_name": "njn",
        "timestamp": 1595814697
    },
    {
        "content": "<p>yeah :/</p>",
        "id": 205076206,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814708
    },
    {
        "content": "<p>I'll look into it some more tomorrow probably, but I'm off for the night -- will post comments on the pull requests and such then as well. I did post a triage update PR for your review <a href=\"https://github.com/rust-lang/rustc-perf/pull/725\">https://github.com/rust-lang/rustc-perf/pull/725</a></p>",
        "id": 205076247,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814747
    },
    {
        "content": "<p>thanks</p>",
        "id": 205076250,
        "sender_full_name": "njn",
        "timestamp": 1595814759
    },
    {
        "content": "<p>we'll need to make a call on the exclusion of script-servo soon btw, otherwise we can't keep up with rust-lang/rust CI</p>",
        "id": 205076269,
        "sender_full_name": "simulacrum",
        "timestamp": 1595814836
    },
    {
        "content": "<p>I'm in favour</p>",
        "id": 205077179,
        "sender_full_name": "njn",
        "timestamp": 1595816502
    },
    {
        "content": "<p>This is interesting: if I run <code>ci/check-profiling.sh</code> it works for me. Something about using the rustc from <code>collector install_next</code> makes it work</p>",
        "id": 205078725,
        "sender_full_name": "njn",
        "timestamp": 1595819538
    },
    {
        "content": "<p>Aw geez, the valgrind you get on Github with \"sudo apt install -y valgrind\" is 3.13. I need at least 3.15 to fully test things</p>",
        "id": 205081690,
        "sender_full_name": "njn",
        "timestamp": 1595825476
    },
    {
        "content": "<p>\"sudo apt install -y valgrind-3.15\" didn't work</p>",
        "id": 205081693,
        "sender_full_name": "njn",
        "timestamp": 1595825487
    },
    {
        "content": "<p>/me will do as much as possible with 3.13</p>",
        "id": 205083836,
        "sender_full_name": "njn",
        "timestamp": 1595829186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Did the Ubuntu upgrade land?</p>",
        "id": 205185784,
        "sender_full_name": "njn",
        "timestamp": 1595897312
    },
    {
        "content": "<p>Hm I forget if I merged it</p>",
        "id": 205185789,
        "sender_full_name": "simulacrum",
        "timestamp": 1595897330
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/729\">https://github.com/rust-lang/rustc-perf/pull/729</a> nope, but the tests passed</p>",
        "id": 205185801,
        "sender_full_name": "njn",
        "timestamp": 1595897351
    },
    {
        "content": "<p>Merged</p>",
        "id": 205185804,
        "sender_full_name": "simulacrum",
        "timestamp": 1595897365
    },
    {
        "content": "<p>Just went to look at the perf queue while reviewing <a href=\"https://github.com/rust-lang/rust/issues/74983\">#74983</a> and saw the new progress bars/expected time UI. Very cool!</p>",
        "id": 205631514,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1596223635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> you were saying something about rustdoc being disproportionately affected by new libraries? <a href=\"https://github.com/rust-lang/rust/blob/ffa80f01d800528b2cfbe5b5a8a218d20c7d8e95/src/librustdoc/core.rs#L423-L426\">https://github.com/rust-lang/rust/blob/ffa80f01d800528b2cfbe5b5a8a218d20c7d8e95/src/librustdoc/core.rs#L423-L426</a></p>",
        "id": 206253327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596805086
    },
    {
        "content": "<p>lol, just getting rid of that clone would probably speed it by 10%</p>",
        "id": 206253354,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596805109
    },
    {
        "content": "<p>FYI: I will be on PTO for the next two weeks</p>",
        "id": 206322017,
        "sender_full_name": "njn",
        "timestamp": 1596845422
    },
    {
        "content": "<p>Have fun <span class=\"user-mention\" data-user-id=\"120989\">@njn</span> <span aria-label=\"rainbow\" class=\"emoji emoji-1f308\" role=\"img\" title=\"rainbow\">:rainbow:</span></p>",
        "id": 206324280,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596848548
    },
    {
        "content": "<p>doing perf triage for this last week now</p>",
        "id": 206644934,
        "sender_full_name": "simulacrum",
        "timestamp": 1597189637
    },
    {
        "content": "<p>will have to finish later or tomorrow</p>",
        "id": 206646707,
        "sender_full_name": "simulacrum",
        "timestamp": 1597191020
    },
    {
        "content": "<p>Thanks for doing it! Looks like it was a simple week</p>",
        "id": 206766872,
        "sender_full_name": "njn",
        "timestamp": 1597275926
    },
    {
        "content": "<p>Yep, though had to rebench several commits</p>",
        "id": 206769590,
        "sender_full_name": "simulacrum",
        "timestamp": 1597278404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I can do next week's if you like.</p>",
        "id": 206864092,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1597349343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> that would be great! It's best to do it ~Monday night so there's plenty of time to get it into TWIR</p>",
        "id": 206864356,
        "sender_full_name": "simulacrum",
        "timestamp": 1597349444
    },
    {
        "content": "<p>Got it. I'll run through the triage instructions on Monday.</p>",
        "id": 206864676,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1597349603
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> I just saw your last blog post: <a href=\"https://blog.mozilla.org/nnethercote/2020/09/08/how-to-speed-up-the-rust-compiler-one-last-time/\">https://blog.mozilla.org/nnethercote/2020/09/08/how-to-speed-up-the-rust-compiler-one-last-time/</a></p>\n<p>I'll miss working with you! Best wishes and have fun working on Firefox <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>️</p>",
        "id": 209335207,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599523257
    },
    {
        "content": "<p>(also, time zones strike again - it's still the 7th in the US <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span>)</p>",
        "id": 209335297,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599523308
    },
    {
        "content": "<p>greetings from the future</p>",
        "id": 209336194,
        "sender_full_name": "njn",
        "timestamp": 1599524536
    },
    {
        "content": "<p>TIL that njn and nethercote are the same person <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span>  thanks a lot <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> loved reading your articles</p>",
        "id": 209337064,
        "sender_full_name": "DPC",
        "timestamp": 1599526100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> You did incredible work; thank you.</p>",
        "id": 209345852,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599540998
    }
]