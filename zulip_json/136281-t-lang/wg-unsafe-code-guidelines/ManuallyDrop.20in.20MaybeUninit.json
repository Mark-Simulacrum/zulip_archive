[
    {
        "content": "<p>I wonder why is there ManuallyDrop in MaybeUninit?</p>",
        "id": 170411477,
        "sender_full_name": "est31",
        "timestamp": 1562629408
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/stable/src/core/mem.rs.html#1081-1084\" target=\"_blank\" title=\"https://doc.rust-lang.org/stable/src/core/mem.rs.html#1081-1084\">https://doc.rust-lang.org/stable/src/core/mem.rs.html#1081-1084</a><br>\nWhy is it ManuallyDrop? I've thought that Drop is never called for unions?</p>",
        "id": 170411554,
        "sender_full_name": "est31",
        "timestamp": 1562629477
    },
    {
        "content": "<p>Is the ManuallyDrop needed for anything safety related?</p>",
        "id": 170411563,
        "sender_full_name": "est31",
        "timestamp": 1562629498
    },
    {
        "content": "<p><a href=\"https://rust-lang.github.io/rfcs/2514-union-initialization-and-drop.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rfcs/2514-union-initialization-and-drop.html\">https://rust-lang.github.io/rfcs/2514-union-initialization-and-drop.html</a></p>",
        "id": 170411739,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562629683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> so drop is called after all?</p>",
        "id": 170411886,
        "sender_full_name": "est31",
        "timestamp": 1562629869
    },
    {
        "content": "<p>Oh so it's not meant for safety, but for forward compatibility?</p>",
        "id": 170411944,
        "sender_full_name": "est31",
        "timestamp": 1562629928
    },
    {
        "content": "<p>For a possible future where that RFC is implemented and stabilized</p>",
        "id": 170411950,
        "sender_full_name": "est31",
        "timestamp": 1562629947
    },
    {
        "content": "<p>As then e.g. MaybeUninit&lt;Vec&lt;u32&gt;&gt; would not be allowed any more?</p>",
        "id": 170411978,
        "sender_full_name": "est31",
        "timestamp": 1562629997
    },
    {
        "content": "<p>No</p>",
        "id": 170411983,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562630009
    },
    {
        "content": "<p>The point of disallowing union fields with drop glue is so we never have to worry about what that means and can simply never call drop union fields without that being a massive surprise and footgun</p>",
        "id": 170412052,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562630074
    },
    {
        "content": "<p>Ok</p>",
        "id": 170412117,
        "sender_full_name": "est31",
        "timestamp": 1562630127
    },
    {
        "content": "<p>but that doesn't answer my question: Is the presence of ManuallyDrop is for forwards compatibility only, to keep MaybeUninit&lt;Vec&lt;u32&gt;&gt; working even after the RFC is implemented?</p>",
        "id": 170412180,
        "sender_full_name": "est31",
        "timestamp": 1562630199
    },
    {
        "content": "<p>I guess it's yes.</p>",
        "id": 170412286,
        "sender_full_name": "est31",
        "timestamp": 1562630347
    },
    {
        "content": "<p>Oh I guess if it's not implemented yet, then it's technically for forward compatibility yes</p>",
        "id": 170412359,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562630423
    },
    {
        "content": "<p>Sorry for misunderstanding</p>",
        "id": 170412374,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562630440
    },
    {
        "content": "<p>Thanks, that's what I wanted to know!</p>",
        "id": 170412394,
        "sender_full_name": "est31",
        "timestamp": 1562630510
    },
    {
        "content": "<p><code>ManuallyDrop</code> is not just for compatibility</p>",
        "id": 170643330,
        "sender_full_name": "RalfJ",
        "timestamp": 1562858498
    },
    {
        "content": "<p>e.g. <code>ManuallyDrop</code> works with unsized types. And <code>Option&lt;ManuallyDrop&lt;Vec&lt;u8&gt;&gt;&gt;</code> gets layout optimizations</p>",
        "id": 170643355,
        "sender_full_name": "RalfJ",
        "timestamp": 1562858518
    },
    {
        "content": "<p>\"I may have totally uninitialized data\" vs \"I want to control dropping\" are not the same concerns</p>",
        "id": 170643411,
        "sender_full_name": "RalfJ",
        "timestamp": 1562858536
    },
    {
        "content": "<p>having uninitialized data implies you need to control dropping (hence <code>MaybeUninit</code> does not auto-drp), but not vice versa</p>",
        "id": 170643431,
        "sender_full_name": "RalfJ",
        "timestamp": 1562858558
    }
]