[
    {
        "content": "<p>I am moving this subtopic out of the raw ref semantics conversation since it doesn't depend on it. I don't know how to push conversations around nor do I want to interrupt the flow of that one, so I'll copy the relevant message here:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/raw.20ref.20semantics/near/232646288\">said</a>:</p>\n<blockquote>\n<p>I propose to change the wording to something like</p>\n<blockquote>\n<p>Dereferencing (i.e., the <code>*expr</code> <em>place</em> expression) a dangling or unaligned raw pointer.</p>\n</blockquote>\n<p>would that help?</p>\n</blockquote>\n<p>I counter-propose being very very specific:</p>\n<div class=\"codehilite\" data-code-language=\"markdown\"><pre><span></span><code>Evaluating a [dereference expression] on a [raw pointer] value that is [dangling] or unaligned.\n\n&lt;&lt; And then have examples of both here, or if we want to keep the list to just normative information, put examples after the list &gt;&gt;\n</code></pre></div>",
        "id": 232697801,
        "sender_full_name": "isHavvy",
        "timestamp": 1617247145
    },
    {
        "content": "<p>I would like it to say <code>[dereference place expression]</code> there</p>",
        "id": 232722237,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617266301
    },
    {
        "content": "<p>\"Evaluating a [dereference expression]\" again sounds like <code>place2value(*ptr)</code> to me</p>",
        "id": 232722286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617266337
    },
    {
        "content": "<p>especially since \"evaluating a place expression\" is a bit of a weird operation, considering that for the most part nothing actually <em>happens</em></p>",
        "id": 232722356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617266385
    },
    {
        "content": "<p>Dereference is always a place expression, no?</p>",
        "id": 232723720,
        "sender_full_name": "isHavvy",
        "timestamp": 1617267150
    },
    {
        "content": "<p>Evaluating a place expression gives you a location in memory. Although the expressions page could be more explicit on that.</p>",
        "id": 232724573,
        "sender_full_name": "isHavvy",
        "timestamp": 1617267666
    },
    {
        "content": "<p>I don't know if you can say that dereferencing is a place expression in statements like <code>let x = *p</code> or <code>*p + 2</code></p>",
        "id": 232724960,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617267859
    },
    {
        "content": "<p>You can and we do.</p>",
        "id": 232725016,
        "sender_full_name": "isHavvy",
        "timestamp": 1617267897
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/reference/expressions.html#moved-and-copied-types\">https://doc.rust-lang.org/nightly/reference/expressions.html#moved-and-copied-types</a></p>",
        "id": 232725029,
        "sender_full_name": "isHavvy",
        "timestamp": 1617267908
    },
    {
        "content": "<p>I've said this already, but there is an ambiguity because if I highlight the span of the place <code>*p</code> and the value <code>*p</code> exactly the same bytes are selected</p>",
        "id": 232725092,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617267942
    },
    {
        "content": "<p>because <code>place2value</code> is invisible</p>",
        "id": 232725131,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617267958
    },
    {
        "content": "<p>you could use <code>{ *p }</code> but I'm not sure that this idiom is very transparent</p>",
        "id": 232725349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617268056
    },
    {
        "content": "<p>place2value is literally \"using a place expression in a value expression context\". But evaluating a place expression in place expression context is still evaluating the place expression.</p>",
        "id": 232725737,
        "sender_full_name": "isHavvy",
        "timestamp": 1617268251
    },
    {
        "content": "<p>I agree with you. I just think that the documentation needs to be more explicit about this, because many people don't understand place expressions at this level of precision, and in particular I usually hear the term \"dereference a pointer\" to mean \"load memory at a pointer location\", and the fact that \"construct a place expression from a pointer\" uses exactly the same syntax isn't helping matters</p>",
        "id": 232726349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617268620
    },
    {
        "content": "<p>Yeah. Next time I write stuff, I'll focus on making that all more clear and explicit</p>",
        "id": 232730203,
        "sender_full_name": "isHavvy",
        "timestamp": 1617270530
    },
    {
        "content": "<p>In the expressions chapter itself.</p>",
        "id": 232730338,
        "sender_full_name": "isHavvy",
        "timestamp": 1617270601
    },
    {
        "content": "<blockquote>\n<p>I counter-propose being very very specific:</p>\n</blockquote>\n<p>That seems to be almost the same, just avoiding the parenthetical? I agree with that part; I am not sure I like the changes to the 2nd half of the sentence but I'm not fundamentally opposed either.<br>\nWrt having examples, we probably should have that for all the UB. I am not sure what would be a good way to add that information to the page.</p>",
        "id": 232922321,
        "sender_full_name": "RalfJ",
        "timestamp": 1617382253
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296643\">isHavvy</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Deferencing.20Bad.20Value.20UB.20Reference.20Description/near/232723720\">said</a>:</p>\n<blockquote>\n<p>Dereference is always a place expression, no?</p>\n</blockquote>\n<p>in a sense it is both a place expression and a value expression... at least it can be used in syntactic positions that expect either. when used in value position, a <code>place2value</code> coercion is implicitly inserted.</p>",
        "id": 232998168,
        "sender_full_name": "RalfJ",
        "timestamp": 1617447162
    },
    {
        "content": "<p>I created a PR to adjust the wording: <a href=\"https://github.com/rust-lang/reference/pull/1000\">https://github.com/rust-lang/reference/pull/1000</a></p>",
        "id": 232998174,
        "sender_full_name": "RalfJ",
        "timestamp": 1617447173
    },
    {
        "content": "<p>(Yay PR 1000 :D)</p>",
        "id": 232998176,
        "sender_full_name": "RalfJ",
        "timestamp": 1617447177
    },
    {
        "content": "<p>I am way too tired to review tonight, but hopefully tomorrow. No later than Monday (I don't work Monday)</p>",
        "id": 233000570,
        "sender_full_name": "isHavvy",
        "timestamp": 1617449996
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296643\">isHavvy</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Deferencing.20Bad.20Value.20UB.20Reference.20Description/near/233000570\">said</a>:</p>\n<blockquote>\n<p>I am way too tired to review tonight, but hopefully tomorrow. No later than Monday (I don't work Monday)</p>\n</blockquote>\n<p>no worries, this is not urgent</p>",
        "id": 233000941,
        "sender_full_name": "RalfJ",
        "timestamp": 1617450395
    },
    {
        "content": "<p>I hope <a href=\"https://github.com/rust-lang/reference/pull/1003/files\">https://github.com/rust-lang/reference/pull/1003/files</a> is a step in the right direction.</p>",
        "id": 233258204,
        "sender_full_name": "isHavvy",
        "timestamp": 1617676084
    }
]