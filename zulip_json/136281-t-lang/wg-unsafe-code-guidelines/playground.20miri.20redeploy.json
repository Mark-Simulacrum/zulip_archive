[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> Could I get you to trigger a redeploy of miri on the playground? That would make it fetch an update that I'd like to be deployed when publishing a certain blog post. ;)</p>",
        "id": 147807031,
        "sender_full_name": "RalfJ",
        "timestamp": 1542361752
    },
    {
        "content": "<p>done</p>",
        "id": 147819755,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542378430
    },
    {
        "content": "<p>well, check the version yourself; I pushed the buttons</p>",
        "id": 147819767,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542378453
    },
    {
        "content": "<p>commit number looks identical to master, thanks &lt;3</p>",
        "id": 147823013,
        "sender_full_name": "RalfJ",
        "timestamp": 1542381763
    },
    {
        "content": "<p>Where's the blog post <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> ?</p>",
        "id": 147890709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542487378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> <a href=\"https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html\" target=\"_blank\" title=\"https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html\">https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html</a></p>",
        "id": 147890716,
        "sender_full_name": "RalfJ",
        "timestamp": 1542487423
    },
    {
        "content": "<p>been on IRLO and reddit since yesterday :)</p>",
        "id": 147890717,
        "sender_full_name": "RalfJ",
        "timestamp": 1542487433
    },
    {
        "content": "<p>I try to mostly stay away from r/rust and I'm not doing enough internals development to hang out on IRLO.</p>",
        "id": 147891223,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542488492
    },
    {
        "content": "<p>I just knew you had mentioned the blog post in regards to the update so I figured I'd see what's what.</p>",
        "id": 147891224,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542488521
    },
    {
        "content": "<blockquote>\n<p>The amazing @shepmaster has integrated miri into the playground</p>\n</blockquote>\n<p>Aww <span class=\"emoji emoji-2764\" title=\"heart\">:heart:</span></p>",
        "id": 147891378,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542488810
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  Excellent post that one. <span class=\"emoji emoji-261d\" title=\"wait one second\">:wait_one_second:</span>️ I will have to go over it again to fully wrap my head around it. Do you have a list of PRs that made the model possible ?</p>",
        "id": 147895645,
        "sender_full_name": "blitzerr",
        "timestamp": 1542498367
    },
    {
        "content": "<p>Also, rustc does not incorporate miri at this point right ? What's the plan on integrating it ?</p>",
        "id": 147895929,
        "sender_full_name": "blitzerr",
        "timestamp": 1542499029
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  Excellent post that one. <span class=\"emoji emoji-261d\" title=\"wait one second\">:wait_one_second:</span>️ I will have to go over it again to fully wrap my head around it. Do you have a list of PRs that made the model possible ?</p>\n</blockquote>\n<p>I guess on the rustc side that would be<br>\n<a href=\"https://github.com/rust-lang/rust/pull/54461\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54461\">https://github.com/rust-lang/rust/pull/54461</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/54762\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54762\">https://github.com/rust-lang/rust/pull/54762</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/54955\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54955\">https://github.com/rust-lang/rust/pull/54955</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/55125\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55125\">https://github.com/rust-lang/rust/pull/55125</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/55270\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55270\">https://github.com/rust-lang/rust/pull/55270</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/55316\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55316\">https://github.com/rust-lang/rust/pull/55316</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/55549\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55549\">https://github.com/rust-lang/rust/pull/55549</a><br>\n<a href=\"https://github.com/rust-lang/rust/pull/55716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55716\">https://github.com/rust-lang/rust/pull/55716</a><br>\nand <a href=\"https://github.com/rust-lang/rust/pull/55916\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55916\">https://github.com/rust-lang/rust/pull/55916</a> still waits to land</p>\n<p>and on the miri side<br>\n<a href=\"https://github.com/solson/miri/pull/468\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/468\">https://github.com/solson/miri/pull/468</a><br>\n<a href=\"https://github.com/solson/miri/pull/473\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/473\">https://github.com/solson/miri/pull/473</a><br>\n<a href=\"https://github.com/solson/miri/pull/474\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/474\">https://github.com/solson/miri/pull/474</a><br>\n<a href=\"https://github.com/solson/miri/pull/477\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/477\">https://github.com/solson/miri/pull/477</a><br>\n<a href=\"https://github.com/solson/miri/pull/487\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/487\">https://github.com/solson/miri/pull/487</a><br>\n<a href=\"https://github.com/solson/miri/pull/492\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/492\">https://github.com/solson/miri/pull/492</a><br>\n<a href=\"https://github.com/solson/miri/pull/506\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/506\">https://github.com/solson/miri/pull/506</a><br>\n<a href=\"https://github.com/solson/miri/pull/513\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/513\">https://github.com/solson/miri/pull/513</a><br>\n<a href=\"https://github.com/solson/miri/pull/524\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/524\">https://github.com/solson/miri/pull/524</a><br>\nand <a href=\"https://github.com/solson/miri/pull/526\" target=\"_blank\" title=\"https://github.com/solson/miri/pull/526\">https://github.com/solson/miri/pull/526</a> still waits to land</p>",
        "id": 147909179,
        "sender_full_name": "RalfJ",
        "timestamp": 1542528843
    },
    {
        "content": "<blockquote>\n<p>Also, rustc does not incorporate miri at this point right ? What's the plan on integrating it ?</p>\n</blockquote>\n<p>rustc uses the miri engine for CTFE. but CTFE does not implement stacked borrows. I am not sure if there are any plans to change that -- this stuff comes with a significant performance cost.</p>",
        "id": 147909191,
        "sender_full_name": "RalfJ",
        "timestamp": 1542528895
    },
    {
        "content": "<p>Thanks a lot for all the info and the PR list<br>\nEven if not in rustc directly, but stacked borrow gives people a way to verify unsafe rust. And that's a great step forward. So thank you for that. <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span></p>",
        "id": 147921972,
        "sender_full_name": "blitzerr",
        "timestamp": 1542557994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> so i just finished a chat with niko about NLL which touched on your stacked model. It came up that creating a raw ptr from an &amp;mut makes <em>all</em> raw ptrs allowed to access the &amp;mut's memory -- is that true even if it's dead code?</p>",
        "id": 147983271,
        "sender_full_name": "Gankra",
        "timestamp": 1542651359
    },
    {
        "content": "<p>e.g.</p>",
        "id": 147983310,
        "sender_full_name": "Gankra",
        "timestamp": 1542651363
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>mut_ref as *mut _;\n*other_aliasing_ptr += 1;\n</pre></div>",
        "id": 147983336,
        "sender_full_name": "Gankra",
        "timestamp": 1542651391
    },
    {
        "content": "<p>examples: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e2a61d03963423a824292b287f842fb6\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e2a61d03963423a824292b287f842fb6\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e2a61d03963423a824292b287f842fb6</a></p>",
        "id": 147984563,
        "sender_full_name": "Gankra",
        "timestamp": 1542652785
    },
    {
        "content": "<blockquote>\n<p>is that true even if it's dead code?</p>\n</blockquote>\n<p>No. This is completely a dynamic model, think of an instrumented execution, if a statement is not executed it has no effect.</p>\n<p>But you seem to have a different definition of dead code, if I look at your example... it does <em>not</em> matter whether the result of the cast is used. It <em>does</em> matter whether the cast is executed.</p>",
        "id": 147984781,
        "sender_full_name": "RalfJ",
        "timestamp": 1542652959
    },
    {
        "content": "<p>I think this is a property (flaw?) inherent in all models that make casts have side-effects: You cannot remove them even if the result is unused.</p>",
        "id": 147984812,
        "sender_full_name": "RalfJ",
        "timestamp": 1542652989
    },
    {
        "content": "<p>And I doubt it is possible to get an access-based model for rust references where casts are side-effect-free.</p>",
        "id": 147984831,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankro</span> also see <a href=\"https://internals.rust-lang.org/t/types-as-contracts/5562/113?u=ralfjung\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/types-as-contracts/5562/113?u=ralfjung\">https://internals.rust-lang.org/t/types-as-contracts/5562/113?u=ralfjung</a></p>",
        "id": 147984930,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653086
    },
    {
        "content": "<p>yeah by \"dead\" I mean \"otherwise pure code that could be compiled out of the final binary\"</p>",
        "id": 147985049,
        "sender_full_name": "Gankra",
        "timestamp": 1542653171
    },
    {
        "content": "<p>though the funny thing is that <code>is_ub_1012A</code> is actually not UB in my model... <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> should it be? It is no more UB since I made <code>[T]::iter_mut</code> work</p>",
        "id": 147985053,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653174
    },
    {
        "content": "<blockquote>\n<p>yeah by \"dead\" I mean \"otherwise pure code that could be compiled out of the final binary\"</p>\n</blockquote>\n<p>escape-to-raw is not pure code :D</p>",
        "id": 147985072,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> also you still haven't posted that blog post yet, eh?</p>",
        "id": 147985085,
        "sender_full_name": "Gankra",
        "timestamp": 1542653201
    },
    {
        "content": "<p>in the MIR this is explicit. the cast has no side-effect, it is pure, but the escape-to-raw statement that got emitted next to it is not pure</p>",
        "id": 147985108,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653218
    },
    {
        "content": "<p>I have, even posted the here in the very topic we are talking in^^</p>",
        "id": 147985121,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankro</span>  <a href=\"https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html\" target=\"_blank\" title=\"https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html\">https://www.ralfj.de/blog/2018/11/16/stacked-borrows-implementation.html</a></p>",
        "id": 147985134,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> ah, I checked your blog's index, which lacks it :)</p>",
        "id": 147985137,
        "sender_full_name": "Gankra",
        "timestamp": 1542653260
    },
    {
        "content": "<p>or, wait</p>",
        "id": 147985145,
        "sender_full_name": "Gankra",
        "timestamp": 1542653279
    },
    {
        "content": "<p>uh, no? <a href=\"https://www.ralfj.de/blog/\" target=\"_blank\" title=\"https://www.ralfj.de/blog/\">https://www.ralfj.de/blog/</a></p>",
        "id": 147985152,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653282
    },
    {
        "content": "<p>it's on <a href=\"https://www.ralfj.de/blog/feed.xml\" target=\"_blank\" title=\"https://www.ralfj.de/blog/feed.xml\">https://www.ralfj.de/blog/feed.xml</a> as well</p>",
        "id": 147985192,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> oh I followed links and ended up on <a href=\"https://www.ralfj.de/blog/categories/research.html\" target=\"_blank\" title=\"https://www.ralfj.de/blog/categories/research.html\">https://www.ralfj.de/blog/categories/research.html</a></p>",
        "id": 147985198,
        "sender_full_name": "Gankra",
        "timestamp": 1542653306
    },
    {
        "content": "<p><em>shrug</em></p>",
        "id": 147985199,
        "sender_full_name": "Gankra",
        "timestamp": 1542653309
    },
    {
        "content": "<p>ah^^</p>",
        "id": 147985217,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> so is the playground I linked correct?</p>",
        "id": 147985230,
        "sender_full_name": "Gankra",
        "timestamp": 1542653341
    },
    {
        "content": "<p>yeah it's in the Rust category but not in Research... dunno, Research is MPI stuff^^</p>",
        "id": 147985235,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653344
    },
    {
        "content": "<p>hm seems like the edition switch isnt propagated to miri, <code>example1</code> dosn't compile</p>",
        "id": 147985356,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankro</span> yes that looks all right, and if you run it in miri it agrees^^</p>",
        "id": 147985471,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653543
    },
    {
        "content": "<p>sweet</p>",
        "id": 147985478,
        "sender_full_name": "Gankra",
        "timestamp": 1542653551
    },
    {
        "content": "<p>it points out exactly the two lines you marked UB</p>",
        "id": 147985479,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653552
    },
    {
        "content": "<p>and I'll need to ask <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> about the edition</p>",
        "id": 147985488,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653566
    },
    {
        "content": "<blockquote>\n<p>where only the top of the stack is the valid path</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankro</span> that's not correct or at least not how I'd put it. Every item on the stack is valid to use. But using one invalidates everything further up the stack.</p>",
        "id": 147985517,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653621
    },
    {
        "content": "<p>Sure</p>",
        "id": 147985530,
        "sender_full_name": "Gankra",
        "timestamp": 1542653640
    },
    {
        "content": "<p>I handled that by suggesting accessing A \"pops\" everything above it implicitly</p>",
        "id": 147985577,
        "sender_full_name": "Gankra",
        "timestamp": 1542653655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> If I'm reading correctly, You are saying that setting the edition to 2018 doesn't affect running Miri? Mind filing an issue if so?</p>",
        "id": 147985612,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542653699
    },
    {
        "content": "<p>I wonder how rustfmt and clippy handle the edition...</p>",
        "id": 147985626,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542653716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I was literally filing the issue while you posted :) <a href=\"https://github.com/integer32llc/rust-playground/issues/429\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/429\">https://github.com/integer32llc/rust-playground/issues/429</a></p>",
        "id": 147985638,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653738
    },
    {
        "content": "<blockquote>\n<p>I wonder how rustfmt and clippy handle the edition...</p>\n</blockquote>\n<p>clippy on playground has the same problem</p>",
        "id": 147985703,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653788
    },
    {
        "content": "<p>when using miri directly I think you just have to pass <code>--edition</code></p>",
        "id": 147985726,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653828
    },
    {
        "content": "<p>I guess <code>cargo miri</code> should do that based on what it says in the <code>Cargo.toml</code>?</p>",
        "id": 147985739,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653845
    },
    {
        "content": "<p>I wonder if cargo provides a nice API for that</p>",
        "id": 147985747,
        "sender_full_name": "RalfJ",
        "timestamp": 1542653855
    }
]