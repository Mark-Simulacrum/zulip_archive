[
    {
        "content": "<p>Question: is the address of null pointer (<code>ptr::null()</code>/<code>ptr::null_mut()</code>) always a multiple of the alignment of <code>T</code> ?</p>",
        "id": 148177985,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542896486
    },
    {
        "content": "<p>For <code>0x0</code> and <code>0x1</code> this is true, but it wouldn't be true for <code>0xfffff</code>.</p>",
        "id": 148178049,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542896558
    },
    {
        "content": "<p>it is if that address is 0; if not then clearly it cannot be for arbitrary T unless we restrict the address in a ridiculous manner like requiring it's either 0 or the middle of the address space</p>",
        "id": 148178071,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1542896588
    },
    {
        "content": "<p>0x1 is not aligned for any T except for with align 1</p>",
        "id": 148178078,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1542896597
    },
    {
        "content": "<p>why does it matter anyway? usually alignment matters because you want it to be a reference (but references aren't nullable) or because you want to stash something in the lower order bits (which you can do regardless of the address of the null pointer if you don't need to tag the null pointer, which typically you don't)</p>",
        "id": 148178168,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1542896720
    }
]