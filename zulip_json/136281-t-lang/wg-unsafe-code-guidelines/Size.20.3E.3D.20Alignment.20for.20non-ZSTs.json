[
    {
        "content": "<p>We don't have any general layout rules that hold for all types. But AFAICT for all non-ZSTs, Size &gt;= Alignment.</p>",
        "id": 169500209,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562088169
    },
    {
        "content": "<p>Shall we document this somewhere ?</p>",
        "id": 169500226,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562088180
    },
    {
        "content": "<p>We should also probably document for each of the possible ZSTs that their alignment &gt;= size.</p>",
        "id": 169500281,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562088225
    },
    {
        "content": "<p>The formulation that doesn't need special casing for ZSTs is that \"size has to be a multiple of alignment\". Which is currently true but trying to document it riles up the \"size vs stride\" discussion again...</p>",
        "id": 169500671,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562088479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> that sounds good - we can add a note, explaining some of the straightforward consequences of that.</p>",
        "id": 169502225,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562089518
    },
    {
        "content": "<p>I'm not sure where, but the beginning of the layout section might be appropriate</p>",
        "id": 169502275,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562089559
    },
    {
        "content": "<p>or the glossary</p>",
        "id": 169502364,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562089583
    },
    {
        "content": "<p>we can define <code>size</code> and <code>alignment</code> there</p>",
        "id": 169502379,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562089595
    },
    {
        "content": "<p>as long as we keep the reading from the array section, that we might want to change this to support stride&gt;size types</p>",
        "id": 169504517,
        "sender_full_name": "RalfJ",
        "timestamp": 1562090785
    },
    {
        "content": "<p>until the lang team tells us \"no\"^^</p>",
        "id": 169504522,
        "sender_full_name": "RalfJ",
        "timestamp": 1562090793
    },
    {
        "content": "<p>this is one of the things I think Rust should have done pre-1.0 :/</p>",
        "id": 169504542,
        "sender_full_name": "RalfJ",
        "timestamp": 1562090814
    },
    {
        "content": "<p>I can't really imagine us ever actually doing this change now that we're years past 1.0, but <em>long sigh</em> yeah, in the terminology of the array chapter, it's \"stride is a multiple of alignment\"</p>",
        "id": 169504820,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1562091007
    },
    {
        "content": "<p>well if I am the only one who thinks it is worthwhile to keep that option open, I am fine being outvoted</p>",
        "id": 169506192,
        "sender_full_name": "RalfJ",
        "timestamp": 1562091843
    },
    {
        "content": "<p>it's not like this is <em>so</em> close to my heart. we are not talking about union semantics after all. :P</p>",
        "id": 169506250,
        "sender_full_name": "RalfJ",
        "timestamp": 1562091882
    },
    {
        "content": "<p>I would prefer to have a stride, and I'll also would prefer to somehow be able to reuse trailing padding.</p>",
        "id": 169508656,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562093516
    },
    {
        "content": "<p>I don't know what Swift does here</p>",
        "id": 169508753,
        "sender_full_name": "gnzlbg",
        "timestamp": 1562093547
    },
    {
        "content": "<p>given the existence of unsafe code that assumes that stride = size, it's unlikely that we'd ever have the ability to change it</p>",
        "id": 169798674,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1562481282
    }
]