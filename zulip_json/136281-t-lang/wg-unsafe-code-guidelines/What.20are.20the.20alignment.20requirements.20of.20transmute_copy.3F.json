[
    {
        "content": "<p>The docs for <a href=\"https://doc.rust-lang.org/core/mem/fn.transmute_copy.html\">transmute_copy</a> say</p>\n<blockquote>\n<p>Interprets src as having type &amp;U, and then reads src without moving the contained value.</p>\n</blockquote>\n<p>However, if <code>&amp;T</code> isn't sufficiently aligned to be a <code>&amp;U</code> reference, does anything bad happen? or is the wording just a little imprecise here and it's actually not a problem?</p>",
        "id": 207353212,
        "sender_full_name": "Lokathor",
        "timestamp": 1597792038
    },
    {
        "content": "<p>The source code uses <code>read_unaligned</code> if <code>U</code> is more aligned than <code>T</code>: <a href=\"https://doc.rust-lang.org/src/core/mem/mod.rs.html#918-925\">https://doc.rust-lang.org/src/core/mem/mod.rs.html#918-925</a></p>",
        "id": 207354133,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1597792738
    },
    {
        "content": "<p>oh heck i should have checked the source. I figured it was intrinsic and wouldn't have source XD</p>",
        "id": 207357307,
        "sender_full_name": "Lokathor",
        "timestamp": 1597795652
    },
    {
        "content": "<p>Surprisingly it looks like it manages to generate correctly-aligned LLVM load instructions despite using <code>read_unaligned</code>, so I guess it didn't need an intrinsic.</p>",
        "id": 207358311,
        "sender_full_name": "scottmcm",
        "timestamp": 1597796605
    },
    {
        "content": "<p>well in the general case that probably depends on the generic types involved, right?</p>",
        "id": 207360134,
        "sender_full_name": "Lokathor",
        "timestamp": 1597798448
    },
    {
        "content": "<p>Looking at the source is not a great idea though if you wonder what the guarantees are for how this function will behave in the future</p>",
        "id": 207374281,
        "sender_full_name": "RalfJ",
        "timestamp": 1597818527
    },
    {
        "content": "<p>the safety condition re: alignment is that things must be aligned for <code>T</code>, and that's it. I guess that's not explicitly stated because all <code>&amp;T</code> are aligned for <code>T</code>.</p>",
        "id": 207374297,
        "sender_full_name": "RalfJ",
        "timestamp": 1597818561
    },
    {
        "content": "<p>Wouldn't be the worst to document that.</p>",
        "id": 207411138,
        "sender_full_name": "Lokathor",
        "timestamp": 1597845513
    },
    {
        "content": "<p>The requirement of <code>&amp;T</code> being correctly aligned for <code>T</code> is rather obvious (it's a reference, not a pointer), but not having the requirement of <code>&amp;T</code> being aligned for <code>U</code> isn't, and I think it would be a good idea to document that there is no such requirement.</p>",
        "id": 208189161,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1598516270
    },
    {
        "content": "<p>fair. <span class=\"user-mention\" data-user-id=\"198039\">@Konrad Borowski</span> do you want to make a PR?</p>",
        "id": 208189345,
        "sender_full_name": "RalfJ",
        "timestamp": 1598516384
    },
    {
        "content": "<p>in fact, i'm looking at the documentation, and it's kinda misleading here: \"transmuting <code>&amp;T</code> to <code>&amp;U</code> and then reading the <code>&amp;U</code>\"</p>",
        "id": 208189459,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1598516446
    },
    {
        "content": "<p>transmuting to <code>&amp;U</code> implies alignment requirements that aren't here</p>",
        "id": 208189468,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1598516458
    },
    {
        "content": "<p>good point</p>",
        "id": 208190019,
        "sender_full_name": "RalfJ",
        "timestamp": 1598516877
    },
    {
        "content": "<p>as for writing a PR, probably not, I don't know how I would document this function</p>",
        "id": 208190240,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1598517057
    },
    {
        "content": "<p>I mean you just did ;) but I can also put it on my list. It's just a long list so might take a bit until I get around to it.</p>",
        "id": 208193746,
        "sender_full_name": "RalfJ",
        "timestamp": 1598519752
    }
]