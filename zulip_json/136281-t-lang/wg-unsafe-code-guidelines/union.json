[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> Does this looks like a bad idea or a terrible idea? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb</a></p>",
        "id": 173653246,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1566304727
    },
    {
        "content": "<p>Well, I've seen worse ideas.</p>",
        "id": 173667641,
        "sender_full_name": "Lokathor",
        "timestamp": 1566314481
    },
    {
        "content": "<p>Why</p>",
        "id": 173793189,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566393880
    },
    {
        "content": "<p>I mean, that doesn't really buy you anything over a <code>#[repr(C)] union</code></p>",
        "id": 173793222,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566393905
    },
    {
        "content": "<p>If it's just for fun, or to support older Rust toolchains without unions, then sure</p>",
        "id": 173793258,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566393936
    },
    {
        "content": "<p>but since you are using <code>MaybeUninit</code>..</p>",
        "id": 173793264,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566393946
    },
    {
        "content": "<p>My first reaction was similar, but the padding-related ABI headaches w.r.t. unions wouldn't apply the a struct containing a big MaybeUninit.</p>",
        "id": 173794232,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1566394596
    },
    {
        "content": "<p>you can add an extra field to the union to avoid those headaches</p>",
        "id": 173796877,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566396327
    },
    {
        "content": "<p>(e.g. <code>()</code> or <code>[u8; size_of::&lt;Self&gt;()]</code>)</p>",
        "id": 173796885,
        "sender_full_name": "gnzlbg",
        "timestamp": 1566396334
    },
    {
        "content": "<p>do unions still not support non-Copy types on stable? This would.</p>",
        "id": 173810148,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1566404815
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> Does this looks like a bad idea or a terrible idea? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72153dbf42418f6de937b4ed55dc93eb</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"219747\">@Simon Sapin</span> it is certainly interesting. ;)</p>",
        "id": 174035030,
        "sender_full_name": "RalfJ",
        "timestamp": 1566645358
    },
    {
        "content": "<p>this is some crazy hacking around const limitations for sure</p>",
        "id": 174035084,
        "sender_full_name": "RalfJ",
        "timestamp": 1566645424
    },
    {
        "content": "<p>but I guess the question is more about the struct thing you are doing</p>",
        "id": 174035089,
        "sender_full_name": "RalfJ",
        "timestamp": 1566645433
    },
    {
        "content": "<p>I would probably prefer an array-of-<code>MaybeUninit&lt;u8&gt;</code> over a maybeuninit-array, but other than that, as much as I would like to, I cannot find anything inherently wrong with this ;)</p>",
        "id": 174035141,
        "sender_full_name": "RalfJ",
        "timestamp": 1566645500
    },
    {
        "content": "<p>I view unions as sugar for transmuting memory, and thats what you are implementing here. Nice hack!</p>",
        "id": 174035297,
        "sender_full_name": "RalfJ",
        "timestamp": 1566645865
    },
    {
        "content": "<p>On top of this I tried implementing compiletime checked unions, keeping track of the current 'selected' type,<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1028dc58599ab7bb757d994e79e8cc4a\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1028dc58599ab7bb757d994e79e8cc4a\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1028dc58599ab7bb757d994e79e8cc4a</a></p>\n<p>The test given passes Miri.</p>",
        "id": 174579787,
        "sender_full_name": "DutchGhost",
        "timestamp": 1567196768
    },
    {
        "content": "<blockquote>\n<p>On top of this I tried implementing compiletime checked unions, keeping track of the current 'selected' type</p>\n</blockquote>\n<p>isn't that what <code>enum</code> does?</p>",
        "id": 174605682,
        "sender_full_name": "RalfJ",
        "timestamp": 1567234869
    }
]