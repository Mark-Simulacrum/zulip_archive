[
    {
        "content": "<p>I'm at a w3c meeting and won't be able to lead the meeting this week-- <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you want to lead it or postpone?</p>",
        "id": 134687416,
        "sender_full_name": "avadacatavra",
        "timestamp": 1537979601
    },
    {
        "content": "<p>either way, but I'm not sure how many write-ups we actually <em>have</em>?</p>",
        "id": 134687430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979626
    },
    {
        "content": "<p>I wanted to check back on who was assigned to what</p>",
        "id": 134687440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979632
    },
    {
        "content": "<p>maybe best to postpone so that we have a bit more time for people to process the writeups anyway? (once we have them, that is)</p>",
        "id": 134687501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979676
    },
    {
        "content": "<p>well, let's do the meeting, but I suspect we won't be able to do much <em>at it</em></p>",
        "id": 134687506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979683
    },
    {
        "content": "<p>I can lead it</p>",
        "id": 134687512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979693
    },
    {
        "content": "<p>if nothing else it's a time to nag</p>",
        "id": 134687514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979699
    },
    {
        "content": "<p>yeah i didn't manage to get to mine, so maybe a postponement  + nagging</p>",
        "id": 134700898,
        "sender_full_name": "avadacatavra",
        "timestamp": 1537993539
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> did you get your writeups done?</p>",
        "id": 134706390,
        "sender_full_name": "avadacatavra",
        "timestamp": 1537999558
    },
    {
        "content": "<p>nooooo.....i will be better</p>",
        "id": 134706434,
        "sender_full_name": "avadacatavra",
        "timestamp": 1537999567
    },
    {
        "content": "<p>lol</p>",
        "id": 134745652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538056272
    },
    {
        "content": "<p>do we have another mtg today?</p>",
        "id": 135610220,
        "sender_full_name": "RalfJ",
        "timestamp": 1539266717
    },
    {
        "content": "<p>I think so, yes, <span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> you around?</p>",
        "id": 135610359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539266835
    },
    {
        "content": "<p>Hi everyone.</p>",
        "id": 135615347,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539270910
    },
    {
        "content": "<p>Hi all!</p>",
        "id": 135615401,
        "sender_full_name": "RalfJ",
        "timestamp": 1539270956
    },
    {
        "content": "<p>I'll ping <span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> on IRC.</p>",
        "id": 135615479,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539270996
    },
    {
        "content": "<p>I'll try slack ;)</p>",
        "id": 135615628,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271095
    },
    {
        "content": "<p>they seem to be offline there though</p>",
        "id": 135615675,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271137
    },
    {
        "content": "<p>(I <em>think</em> that's what that icon means. don't actually know.)</p>",
        "id": 135615697,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> said sth. come up and they're late</p>",
        "id": 135615956,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271342
    },
    {
        "content": "<p>OK, I can wait. <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> do you have time pressures?</p>",
        "id": 135616012,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271397
    },
    {
        "content": "<p>well I have to leave exactly when the meeting ends (1745)</p>",
        "id": 135616102,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271466
    },
    {
        "content": "<p>to catch a bus</p>",
        "id": 135616103,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271468
    },
    {
        "content": "<p>;)</p>",
        "id": 135616104,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271468
    },
    {
        "content": "<p>OK, while we're waiting...</p>",
        "id": 135616110,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271479
    },
    {
        "content": "<p>Have you read \"Rust Distilled: An Expressive Tower of Languages\"?</p>",
        "id": 135616123,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271495
    },
    {
        "content": "<p>public transport is great but sometimes I wish I had a car so I would have more flexible timing...</p>",
        "id": 135616134,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271507
    },
    {
        "content": "<p>no I do not think I have heard of that</p>",
        "id": 135616136,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271518
    },
    {
        "content": "<p>There was a talk at the ML workshop co-located with ICFP. <a href=\"https://aaronweiss.us/\" target=\"_blank\" title=\"https://aaronweiss.us/\">https://aaronweiss.us/</a></p>",
        "id": 135616147,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271536
    },
    {
        "content": "<p>oh yes I have it on my to-read list</p>",
        "id": 135616148,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271537
    },
    {
        "content": "<p>or sth else by the same author?</p>",
        "id": 135616157,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271545
    },
    {
        "content": "<p>what I have is older than ICFP</p>",
        "id": 135616160,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271552
    },
    {
        "content": "<p>same thing though</p>",
        "id": 135616199,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271564
    },
    {
        "content": "<p>was on arXiv way before ICFP</p>",
        "id": 135616213,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271568
    },
    {
        "content": "<p>I strongly encouraged Amal and Aaron to take part in the unsafe code guidelines discussions.</p>",
        "id": 135616221,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271577
    },
    {
        "content": "<p>and you also strongly encourage me to read their paper? ;)</p>",
        "id": 135616268,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271631
    },
    {
        "content": "<p>At some point we'll have to start drafting the invariants for &amp;T and &amp;mut T.</p>",
        "id": 135616280,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> yes, I am doing a lot of strong encouragement :)</p>",
        "id": 135616295,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271672
    },
    {
        "content": "<p>^^</p>",
        "id": 135616348,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271689
    },
    {
        "content": "<p>well I got it printed now, at least</p>",
        "id": 135616351,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271694
    },
    {
        "content": "<p>most of the battle</p>",
        "id": 135616357,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271705
    },
    {
        "content": "<blockquote>\n<p>At some point we'll have to start drafting the invariants for &amp;T and &amp;mut T.</p>\n</blockquote>\n<p>right... however, we first need to develop the language/logic in which we want to do that</p>",
        "id": 135616371,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271715
    },
    {
        "content": "<p>like, I have such an invariant in my RustBelt work. but it's not exactly suited for consumption by non-PL-researchers</p>",
        "id": 135616384,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271734
    },
    {
        "content": "<p>Indeed.</p>",
        "id": 135616388,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271739
    },
    {
        "content": "<p>Not sure that \"first learn CSL\" is going to pan out :/</p>",
        "id": 135616404,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271758
    },
    {
        "content": "<p>however, I also don't see anything simpler that actually gets the job done</p>",
        "id": 135616432,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271792
    },
    {
        "content": "<p>but maybe I should read their paper first? ;)</p>",
        "id": 135616437,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271799
    },
    {
        "content": "<p>it also depends on what you mean by \"invariants\"</p>",
        "id": 135616509,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271825
    },
    {
        "content": "<p>there is Stacked Borrows</p>",
        "id": 135616515,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271831
    },
    {
        "content": "<p>which is answering lots of questions around reference types</p>",
        "id": 135616523,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271837
    },
    {
        "content": "<p>The ML paper doesn't have the gory details IIRC</p>",
        "id": 135616527,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271839
    },
    {
        "content": "<p>but that's something very different from specifying the <em>semantic invariant</em> of reference types</p>",
        "id": 135616534,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271850
    },
    {
        "content": "<p>They're using fractional permissions, plus IIRC run-time capabilities kept as shadow state.</p>",
        "id": 135616626,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271924
    },
    {
        "content": "<p>can they handle interior mutability?</p>",
        "id": 135616644,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271959
    },
    {
        "content": "<p>that's what killed it for us</p>",
        "id": 135616658,
        "sender_full_name": "RalfJ",
        "timestamp": 1539271975
    },
    {
        "content": "<p>Don't know.</p>",
        "id": 135616664,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539271985
    },
    {
        "content": "<p>Is there a short explaination of why interior mutability is an issue? On the surface it seems like it should be a case where there is a capability that is being kept in \"real\" (i.e. not shadow) state?</p>",
        "id": 135616764,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272061
    },
    {
        "content": "<p>But devil in the details.</p>",
        "id": 135616774,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  Could you explain what interior mutability is ?</p>",
        "id": 135616790,
        "sender_full_name": "blitzerr",
        "timestamp": 1539272100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> things RefCell.</p>",
        "id": 135616813,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272126
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html\">https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html</a></p>",
        "id": 135616822,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272141
    },
    {
        "content": "<p>Ahh ! thanks <span class=\"user-mention\" data-user-id=\"128323\">@Alan Jeffrey</span></p>",
        "id": 135616831,
        "sender_full_name": "blitzerr",
        "timestamp": 1539272152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span>  basically, mutating memory where someone holds a shared ref to it</p>",
        "id": 135616935,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272260
    },
    {
        "content": "<p>IOW, violating \"shared references point to read-only memory\"</p>",
        "id": 135616942,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272272
    },
    {
        "content": "<p>I am very interested in the unsafe-code. But don't know much about it. So I am just following along and would like to contribute. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 135616994,
        "sender_full_name": "blitzerr",
        "timestamp": 1539272292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128323\">@Alan Jeffrey</span> well, without interior mutability, <code>&amp;</code> is simply modeled as \"read-only\", done</p>",
        "id": 135617007,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272304
    },
    {
        "content": "<p>fractional permissions can do that (though I'll have to see how they handle lifetimes)</p>",
        "id": 135617016,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272314
    },
    {
        "content": "<p>Hence, the questions <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 135617019,
        "sender_full_name": "blitzerr",
        "timestamp": 1539272317
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span></p>",
        "id": 135617037,
        "sender_full_name": "blitzerr",
        "timestamp": 1539272331
    },
    {
        "content": "<p>you're welcome :)</p>",
        "id": 135617041,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span>  also <a href=\"https://doc.rust-lang.org/std/cell/index.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/cell/index.html\">https://doc.rust-lang.org/std/cell/index.html</a></p>",
        "id": 135617058,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539272362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> One thing that interior mutability means is that capabilities sometimes live in real state, not shadow state,</p>",
        "id": 135617061,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128323\">@Alan Jeffrey</span>  but with interior mutability -- really we should call it <em>shared mutability</em> -- the rules for <code>&amp;T</code> are... well, they are whatever <code>T</code> wants them to be</p>",
        "id": 135617070,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272374
    },
    {
        "content": "<p>I dont know what you mean by that</p>",
        "id": 135617079,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272385
    },
    {
        "content": "<p>but capabilities are always shadow as they dont exist on the real machine</p>",
        "id": 135617086,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272395
    },
    {
        "content": "<p>so your proof should reflect that</p>",
        "id": 135617089,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272400
    },
    {
        "content": "<p>so I can imagine this complicates what is otherwise a nice split between capabilities and the stack/heap.</p>",
        "id": 135617132,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272406
    },
    {
        "content": "<p>or do you mean \"Stacked Borrows\"-style \"shadow state\"?</p>",
        "id": 135617153,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272438
    },
    {
        "content": "<p>that would just entirely ignore interior mutability though. you cant statically say in the machine what the rules are as every type defines them for itself.</p>",
        "id": 135617164,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272455
    },
    {
        "content": "<p>for Stacked Borrows, <code>&amp;Cell&lt;T&gt;</code> and <code>*mut T</code> are basically the same thing</p>",
        "id": 135617192,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272486
    },
    {
        "content": "<p>I'm not sure I have a precise thing here, but...</p>",
        "id": 135617196,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272490
    },
    {
        "content": "<p>no alias reistrictions either way</p>",
        "id": 135617197,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272491
    },
    {
        "content": "<p>it seems like RefCell is essentially keeping a real-state version of a capability.</p>",
        "id": 135617215,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272517
    },
    {
        "content": "<p>but how do you explain <code>Cell</code> then?</p>",
        "id": 135617265,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272537
    },
    {
        "content": "<p>TBH that looks like a red herring to me</p>",
        "id": 135617267,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272544
    },
    {
        "content": "<p>but I'll first have to figure out which kind of capabilities you mean</p>",
        "id": 135617292,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272585
    },
    {
        "content": "<p>so I may be just misunderstanding entirely</p>",
        "id": 135617298,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> good point, I'd mainly been thinking about RefCell not Cell.</p>",
        "id": 135617313,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272608
    },
    {
        "content": "<p>and then there's <code>Rc</code>...</p>",
        "id": 135617336,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> does Rc impact anything other than when drop code is run?</p>",
        "id": 135617402,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272681
    },
    {
        "content": "<p>ie in a model that's ignoring reclaiming memory, does Rc have semantic impact?</p>",
        "id": 135617429,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272713
    },
    {
        "content": "<p><code>Rc</code> was extremnely hard to prove correct</p>",
        "id": 135617432,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272716
    },
    {
        "content": "<p>in particular, <code>Rc::get_mut</code></p>",
        "id": 135617434,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272721
    },
    {
        "content": "<p>because the content of an <code>Rc</code>  isn't always shared</p>",
        "id": 135617442,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272731
    },
    {
        "content": "<p>and justifying that you can make it not-shared in <code>get_mut</code> was one of the most tricky things in the entire RustBelt paper</p>",
        "id": 135617446,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> is Rc difficult for different reasons than RefCell?</p>",
        "id": 135617455,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272758
    },
    {
        "content": "<p>yes</p>",
        "id": 135617473,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272762
    },
    {
        "content": "<p>well, maybe</p>",
        "id": 135617498,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272769
    },
    {
        "content": "<p>not sure what the equivalence relation on \"reasons\" is^^</p>",
        "id": 135617506,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272780
    },
    {
        "content": "<p>fair enough, I'm not sure I do either :/</p>",
        "id": 135617515,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272798
    },
    {
        "content": "<p>from a mile high view, it looks like a model which can cope with RefCell could probably also cope with Rc.</p>",
        "id": 135617540,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272835
    },
    {
        "content": "<p>(at least, ignoring Rc's impact on memory reclamation)</p>",
        "id": 135617547,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272861
    },
    {
        "content": "<p>from what I recall we had to change the way we do lifetimes to be able to handle <code>Rc::get_mut</code></p>",
        "id": 135617599,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272896
    },
    {
        "content": "<p>but it might have been <code>RefMut::map</code> instead</p>",
        "id": 135617609,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272906
    },
    {
        "content": "<p>one of the two required fundamental changes that threw us back a couple months</p>",
        "id": 135617620,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272920
    },
    {
        "content": "<p>the other probably benefited from those changes</p>",
        "id": 135617623,
        "sender_full_name": "RalfJ",
        "timestamp": 1539272927
    },
    {
        "content": "<p>One thing that's slightly annoying is that Rc and RefCell are doing very similar things (keeping a capability in real state rather than shadow state) but in different ways, sigh.</p>",
        "id": 135617650,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539272967
    },
    {
        "content": "<p>they are rather fundamentally different in what they do though</p>",
        "id": 135617726,
        "sender_full_name": "RalfJ",
        "timestamp": 1539273016
    },
    {
        "content": "<p>and I wouldnt describe either as keeping a capability in real state^^</p>",
        "id": 135617734,
        "sender_full_name": "RalfJ",
        "timestamp": 1539273027
    },
    {
        "content": "<p>rhater, they have elaborate ways of sharing</p>",
        "id": 135617741,
        "sender_full_name": "RalfJ",
        "timestamp": 1539273035
    },
    {
        "content": "<p>So each type gets to define its own invariant about the relationship between shadow state and real state.</p>",
        "id": 135617743,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539273037
    },
    {
        "content": "<p>and ending sharing</p>",
        "id": 135617745,
        "sender_full_name": "RalfJ",
        "timestamp": 1539273039
    },
    {
        "content": "<p>anyway, got to catch a bus. ttyl!</p>",
        "id": 135617758,
        "sender_full_name": "RalfJ",
        "timestamp": 1539273048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> ok, see you later!</p>",
        "id": 135617770,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539273062
    },
    {
        "content": "<p>Hmm, we'll see if <span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> turn up at some point.</p>",
        "id": 135617802,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539273104
    },
    {
        "content": "<p>Otherwise this week's meeting topic was \"Ralf and Alan pass the time talking about memory invariants\".</p>",
        "id": 135617872,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539273160
    },
    {
        "content": "<p>:D</p>",
        "id": 135617888,
        "sender_full_name": "blitzerr",
        "timestamp": 1539273178
    },
    {
        "content": "<p>hi all =) I'm sorry, as <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> said, something came up</p>",
        "id": 135619961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539275482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hi</p>",
        "id": 135620032,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539275542
    },
    {
        "content": "<p>(I started a topic with the proper title, for easier finding in the future)</p>",
        "id": 135620048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539275555
    },
    {
        "content": "<p>i was on a plane</p>",
        "id": 135625849,
        "sender_full_name": "avadacatavra",
        "timestamp": 1539281706
    },
    {
        "content": "<p>sorry about that</p>",
        "id": 135625853,
        "sender_full_name": "avadacatavra",
        "timestamp": 1539281711
    },
    {
        "content": "<p>i'll read backlog and get caught up :)</p>",
        "id": 135625864,
        "sender_full_name": "avadacatavra",
        "timestamp": 1539281719
    },
    {
        "content": "<p>I'd like to guarantee the following:</p>\n<p>- Given a raw lvalue field access of type T on an object x, this should not guarantee that the object x is valid under type T<br>\n  - it should only guarantee that the field access is inbounds on x<br>\n  - Given an lvalue-to-raw-pointer conversion of type T, this does not guarantee that the object the lvalue refers to is valid under type T</p>\n<p>basically, this means that raw field accesses are equivalent to an <code>offset</code>.</p>\n<p>note: code that explains what the above things mean</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// raw lvalue field access</span>\n<span class=\"n\">given</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">).</span><span class=\"n\">y</span><span class=\"w\"></span>\n<span class=\"c1\">// lvalue-to-raw-pointer conversion</span>\n<span class=\"n\">given</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"nc\">immutable</span><span class=\"w\"> </span><span class=\"n\">lvalue</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"w\"></span>\n</pre></div>",
        "id": 135626420,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1539282230
    },
    {
        "content": "<p>I don't really follow the context here — also, who is guaranteeing what? </p>\n<p>e.g., \"given a raw lvalue field access of type T on an object x\" -- you mean given something like <code>x.f</code>? In that case, though, the object <code>x</code> would not have type <code>T</code>.. </p>\n<p>...maybe it'd be good to give some Rust example code to get at it more precisely.</p>",
        "id": 135626596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539282379
    },
    {
        "content": "<p>See #design in the discord for why I want to guarantee this</p>",
        "id": 135626725,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1539282496
    },
    {
        "content": "<p>also, the language is guaranteeing that this is not UB, basically</p>",
        "id": 135626734,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1539282509
    },
    {
        "content": "<p>(oh, now I see the code, I didn't see it before)</p>",
        "id": 135626928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539282701
    },
    {
        "content": "<p>but I feel like the example doesn't make sense in isolation</p>",
        "id": 135626941,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539282718
    },
    {
        "content": "<p>e.g., it matters a lot what you do with <code>(*x).y</code> -- is that <code>&amp;(*x).y</code>? Is it <code>foo((*x).y)</code>?</p>",
        "id": 135626984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539282737
    },
    {
        "content": "<p>the first would be an lvalue-to-reference conversion, in which case all the rules of lvalue-to-reference conversion hold. The second would be an lvalue-to-rvalue conversion, in which case all the rules of lvalue-to-rvalue conversion hold</p>",
        "id": 135627045,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1539282821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128323\">@Alan Jeffrey</span> sorry that I couldn't make it this morning (I had one of those GlobalEntry interview things). You're definitely right to say that the ML workshop extended abstract doesn't have tons of details. But it also predates a very useful meeting that I had with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that has added a lot of clarity. The stuff present in the talk I gave was definitely informed a lot by that meeting and the subsequent changes I've been working on (and am still working on) to our semantics. That being said, I think you've appropriately captured my thinking (and likely Amal's) on RefCell in your talking with <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>. From my perspective right now, it seems like it shouldn't be too hard to add runtime instruments to our operational semantics for Rc and RefCell, but it could certainly surprise me.</p>",
        "id": 135627909,
        "sender_full_name": "Aaron Weiss",
        "timestamp": 1539283774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127262\">@Aaron Weiss</span> hi, glad you're here!</p>",
        "id": 135630267,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539286169
    },
    {
        "content": "<p>Ah, that explains the gap between the paper and the talk :)</p>",
        "id": 135630285,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539286189
    },
    {
        "content": "<p>Are the slides online somewhere?</p>",
        "id": 135630290,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1539286200
    },
    {
        "content": "<p>I am curious to see any other approach to tackling Rc and RefCell :)</p>",
        "id": 135632581,
        "sender_full_name": "RalfJ",
        "timestamp": 1539288516
    },
    {
        "content": "<p>and yes, I'd be interested in the slides as well</p>",
        "id": 135632589,
        "sender_full_name": "RalfJ",
        "timestamp": 1539288528
    },
    {
        "content": "<p>The slides are on my website that you linked, but here's the direct link to the slides: <a href=\"https://aaronweiss.us/pubs/ml18-slides.pdf\" target=\"_blank\" title=\"https://aaronweiss.us/pubs/ml18-slides.pdf\">https://aaronweiss.us/pubs/ml18-slides.pdf</a></p>",
        "id": 135634959,
        "sender_full_name": "Aaron Weiss",
        "timestamp": 1539290674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127262\">@Aaron Weiss</span> thanks!</p>",
        "id": 135635166,
        "sender_full_name": "RalfJ",
        "timestamp": 1539290875
    },
    {
        "content": "<p>they didnt make a recording, did they?</p>",
        "id": 135635225,
        "sender_full_name": "RalfJ",
        "timestamp": 1539290894
    },
    {
        "content": "<p>Fortunately, they did! Leif was there filming it for the workshop, but she's not responsible for the production. So unfortunately, I have no idea how long until they release the videos.</p>",
        "id": 135635345,
        "sender_full_name": "Aaron Weiss",
        "timestamp": 1539291008
    },
    {
        "content": "<p>ah cool. well if anyone hears something let's post here (and maybe also in the verification-wg thing on gitter, are you on there?)</p>",
        "id": 135635404,
        "sender_full_name": "RalfJ",
        "timestamp": 1539291105
    },
    {
        "content": "<p>ah seems you are. we got three aaron's there^^</p>",
        "id": 135635455,
        "sender_full_name": "RalfJ",
        "timestamp": 1539291128
    },
    {
        "content": "<p>I am actually quite surprised I am still the only Ralf in Rustland (that I know of)... it's a pretty common name around here. There are actually two people sharing my <em>first and last</em> name at my university (well, if you count past members, one of them left before the other joined)^^</p>",
        "id": 135635507,
        "sender_full_name": "RalfJ",
        "timestamp": 1539291200
    },
    {
        "content": "<p>Yeah, I'm keeping my eyes peeled for the video since I intend on tweeting about it and sharing it with some friends who weren't there to see it. So, if I find them first, I'll definitely post them here and on the verification-wg.</p>",
        "id": 135635613,
        "sender_full_name": "Aaron Weiss",
        "timestamp": 1539291298
    },
    {
        "content": "<p>The work is obviously in a much rougher state than RustBelt (otherwise, it'd already be published <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span>), but I think has been going a lot better since the aforementioned meeting with Niko.</p>",
        "id": 135635664,
        "sender_full_name": "Aaron Weiss",
        "timestamp": 1539291348
    },
    {
        "content": "<p>I'm certainly curious what you'll end up with :) I sure hope there's something simpler than our proofs^^</p>",
        "id": 135636476,
        "sender_full_name": "RalfJ",
        "timestamp": 1539292154
    },
    {
        "content": "<p>I am finally off the three planes it took to get home. I’m happy to lead a meeting today to make up for the last one :)</p>",
        "id": 147737168,
        "sender_full_name": "avadacatavra",
        "timestamp": 1542283697
    },
    {
        "content": "<p>When is the meeting? I thought it was going to start 40 minutes ago :/</p>",
        "id": 147741541,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542289237
    },
    {
        "content": "<p>Isn't it 13:00 UTC ?</p>",
        "id": 147741554,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542289256
    },
    {
        "content": "<p>since it moved by 1h with US DST, I'd expect it to be 16:15 UTC</p>",
        "id": 147741949,
        "sender_full_name": "RalfJ",
        "timestamp": 1542289698
    },
    {
        "content": "<p>or maybe 16:00, not sure if we did that move by 15min</p>",
        "id": 147741956,
        "sender_full_name": "RalfJ",
        "timestamp": 1542289713
    },
    {
        "content": "<p>Meeting in 15 :)</p>",
        "id": 147751927,
        "sender_full_name": "avadacatavra",
        "timestamp": 1542297711
    },
    {
        "content": "<p>Captain, sensors are picking up an unexpected meeting.</p>",
        "id": 147752065,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1542297797
    },
    {
        "content": "<p>so I <a href=\"#narrow/stream/136281-wg-unsafe-code-guidelines/topic/meeting.202018-11-14\" title=\"#narrow/stream/136281-wg-unsafe-code-guidelines/topic/meeting.202018-11-14\">made a Zulip topic</a> but apparently I did my math wrong :)</p>",
        "id": 147752299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297989
    },
    {
        "content": "<p>in that topic, however, there are a few thoughts about agenda etc</p>",
        "id": 147752336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542298028
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span>, do you want to be added to the calendar invite?</p>",
        "id": 147752337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542298035
    },
    {
        "content": "<p>(if you're not already)</p>",
        "id": 147752340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542298038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes please</p>",
        "id": 147752360,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542298059
    },
    {
        "content": "<blockquote>\n<p>Captain, sensors are picking up an unexpected meeting.</p>\n</blockquote>\n<p>we said last week we'd move to this week because noone was there</p>",
        "id": 147752369,
        "sender_full_name": "RalfJ",
        "timestamp": 1542298074
    },
    {
        "content": "<p>I suppose I did not make a new calendar invite :P</p>",
        "id": 147752796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542298272
    },
    {
        "content": "<p>for this day</p>",
        "id": 147752797,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542298274
    }
]