[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"810\">@WG-unsafe-code-guidelines</span> !</p>",
        "id": 163108862,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995695
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 163108890,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1554995711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> <span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span></p>",
        "id": 163109068,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995848
    },
    {
        "content": "<p>is there anything to discuss? we have two open PRs by <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span></p>",
        "id": 163109090,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995875
    },
    {
        "content": "<p>and also the GH pages book publishing thing still doesnt work, AFAIK</p>",
        "id": 163109158,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995899
    },
    {
        "content": "<p>not sure who can do what about that though</p>",
        "id": 163109171,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995908
    },
    {
        "content": "<p>Also sorry for just missing last week's meeting, I was travelling and forget to tell y'all. I guess today I get to see how that feels from the other side ;)</p>",
        "id": 163109250,
        "sender_full_name": "RalfJ",
        "timestamp": 1554995974
    },
    {
        "content": "<p><span aria-label=\"hi\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"hi\">:hi:</span></p>",
        "id": 163109447,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996087
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 163109461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996102
    },
    {
        "content": "<p>I'm back from traveling and things too this week</p>",
        "id": 163109465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996108
    },
    {
        "content": "<blockquote>\n<p>and also the GH pages book publishing thing still doesnt work, AFAIK</p>\n</blockquote>\n<p>ok sorry this is probably my fault</p>",
        "id": 163109484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996121
    },
    {
        "content": "<p>i couldn't manage to properly update the deploy key to travis</p>",
        "id": 163109587,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996151
    },
    {
        "content": "<p>OK, let me see if I can fix it.</p>",
        "id": 163109593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996157
    },
    {
        "content": "<p>:)</p>",
        "id": 163109613,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> what is the status of your PRs?</p>",
        "id": 163109615,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996174
    },
    {
        "content": "<p>alex mentioned that we shouldn't use github tokens, but deploy keys instead</p>",
        "id": 163109616,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996175
    },
    {
        "content": "<p>i don't remember what those were about</p>",
        "id": 163109634,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996186
    },
    {
        "content": "<p>Oh? (cc <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>) I don't know anything about deploying keys</p>",
        "id": 163109660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996209
    },
    {
        "content": "<blockquote>\n<p>If <code>T</code> is sized, references and pointers to <code>T</code> have a size and alignment of one<br>\nword and have therefore the same layout as C pointers.</p>\n</blockquote>",
        "id": 163109661,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996209
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/100\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/100\">https://github.com/rust-lang/unsafe-code-guidelines/pull/100</a></p>",
        "id": 163109687,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996226
    },
    {
        "content": "<p>seems fine to merge?</p>",
        "id": 163109693,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996230
    },
    {
        "content": "<p>nobody complained for 4 weeks^^</p>",
        "id": 163109766,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996259
    },
    {
        "content": "<p>That one seems to just fix an omission in the layout of ptrs sections, right ?</p>",
        "id": 163109771,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996262
    },
    {
        "content": "<p>I guess so</p>",
        "id": 163109780,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996269
    },
    {
        "content": "<p>that seems fine to me except i'm not sure about the word \"word\"</p>",
        "id": 163109787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996274
    },
    {
        "content": "<p>like, is that defined and well understood?</p>",
        "id": 163109798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996287
    },
    {
        "content": "<p>I guess \"same as C pointers\" is pretty clear :)</p>",
        "id": 163109808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996292
    },
    {
        "content": "<p>that term is also used a lot in the same document</p>",
        "id": 163109817,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996302
    },
    {
        "content": "<p>ok</p>",
        "id": 163109829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996306
    },
    {
        "content": "<p>then fine</p>",
        "id": 163109833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996308
    },
    {
        "content": "<p>but I agree with the concern</p>",
        "id": 163109836,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996313
    },
    {
        "content": "<p>good question, word size == pointer size, but maybe we should just define word somewhere as \"something pointer sized\"</p>",
        "id": 163109848,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996323
    },
    {
        "content": "<p>in that case it seems redundant there</p>",
        "id": 163109857,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996330
    },
    {
        "content": "<p>seems worth adding to the \"terminology\" section that this document has</p>",
        "id": 163109869,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996342
    },
    {
        "content": "<p>is that universally correct? like, I am thinking of CHERI here</p>",
        "id": 163109900,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996362
    },
    {
        "content": "<p>or we should just not use \"word\" and just say \"pointer-sized\", size of a pointer, etc.</p>",
        "id": 163109945,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996372
    },
    {
        "content": "<p>i mean, in CHERI pointers are 128-bit wide, that would be true for both Rust and C</p>",
        "id": 163109958,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996389
    },
    {
        "content": "<p>yes but does that really make CHERI's word size 128 bits</p>",
        "id": 163109981,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996407
    },
    {
        "content": "<p>so.. a word in CHERI would be 128-bit i suppose, this is confusiong, I really would prefer to just talk about pointer sizes</p>",
        "id": 163109997,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996422
    },
    {
        "content": "<p>I'd imagine for, e.g. CHERI-MIPS if this is 64bit MIPS with CHERI extensions, the word size would still be considered 64bits</p>",
        "id": 163110015,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> I'd prioritize getting something working, but if you're setting up CI I'd recommend using a deploy key instead of a token so it's scoped to just one repo rather than \"all repos the user who created the token has access to\"</p>",
        "id": 163110016,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554996433
    },
    {
        "content": "<p>but maybe that's too weird to be a concern right now</p>",
        "id": 163110051,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>  that's what I did, but I don't appear to have enough permission to upload the deploy key to travis or something like that</p>",
        "id": 163110055,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996479
    },
    {
        "content": "<p>and for Rust, \"word\" = \"size of usize\"</p>",
        "id": 163110064,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996482
    },
    {
        "content": "<p>anyway that's a separate PR/issue, let's merge this one</p>",
        "id": 163110142,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996520
    },
    {
        "content": "<p>maybe we should just open an issue about the word \"word\" and either add it to the glossary, or remove it. IIRC that was the only document that uses it</p>",
        "id": 163110152,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996528
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> do you want to do that?</p>",
        "id": 163110187,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996562
    },
    {
        "content": "<p>the other PR is <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/98\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/98\">https://github.com/rust-lang/unsafe-code-guidelines/pull/98</a>. That diff is hard to read because it also moves stuff around.</p>",
        "id": 163110310,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996650
    },
    {
        "content": "<p>and then it <em>also</em> does the \"maximal object size\" thing</p>",
        "id": 163110336,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996671
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/109\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/109\">https://github.com/rust-lang/unsafe-code-guidelines/issues/109</a></p>",
        "id": 163110338,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996675
    },
    {
        "content": "<p>we don't guarantee anything about \"maximal object size\" there I think, just document how its currently implemented</p>",
        "id": 163110377,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996715
    },
    {
        "content": "<p>so the <code>uint8_t == u8</code> etc seems <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> to me</p>",
        "id": 163110458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996755
    },
    {
        "content": "<p>I'm skimming the rest</p>",
        "id": 163110462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996759
    },
    {
        "content": "<p>there is an issue open about whether we should guarantee anything at all about the maximum size of Rust objects or not: <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/102\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/102\">https://github.com/rust-lang/unsafe-code-guidelines/issues/102</a></p>",
        "id": 163110469,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996767
    },
    {
        "content": "<p>well it says something about \"the maximum size of Rust _values_ is limited to <code>isize::max_value()</code>\"</p>",
        "id": 163110482,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996778
    },
    {
        "content": "<p>sure, but it says so in a n\"ote: in the current implementation...\"... right?</p>",
        "id": 163110520,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996800
    },
    {
        "content": "<p>yes</p>",
        "id": 163110526,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996805
    },
    {
        "content": "<p>but then there was this discussion about \"value\" or \"object\" or \"allocation\" or whatever</p>",
        "id": 163110533,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996818
    },
    {
        "content": "<p>There was a thread there were we decided to not guarantee anything</p>",
        "id": 163110539,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996822
    },
    {
        "content": "<p>That's <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/40\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/40\">https://github.com/rust-lang/unsafe-code-guidelines/pull/40</a></p>",
        "id": 163110556,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996837
    },
    {
        "content": "<p>no its <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/98#discussion_r266196387\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/98#discussion_r266196387\">https://github.com/rust-lang/unsafe-code-guidelines/pull/98#discussion_r266196387</a></p>",
        "id": 163110619,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996857
    },
    {
        "content": "<p>once that is merged, somebody needs to do a pass through the whole document, and make it consistent</p>",
        "id": 163110621,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996858
    },
    {
        "content": "<p>I concur with what <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> says there</p>",
        "id": 163110648,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996883
    },
    {
        "content": "<p>\"allocations\" (on the heap, the stack or elsewhere) are the better term</p>",
        "id": 163110665,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996901
    },
    {
        "content": "<p>in particular, the limit applies even to just calling the <code>alloc</code> function without putting any \"value\" into it</p>",
        "id": 163110695,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996919
    },
    {
        "content": "<p>shouldn't that be places ?</p>",
        "id": 163110708,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996930
    },
    {
        "content": "<p>places are an ephemeral concept arising during evaluation of some statements</p>",
        "id": 163110732,
        "sender_full_name": "RalfJ",
        "timestamp": 1554996946
    },
    {
        "content": "<p>also this affects the size of temporaries without a real place</p>",
        "id": 163110739,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996953
    },
    {
        "content": "<p>(I think, e.g., if an expression produces a value that's too large)</p>",
        "id": 163110805,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554996971
    },
    {
        "content": "<blockquote>\n<p>\"allocations\" (on the heap, the stack or elsewhere) are the better term</p>\n</blockquote>\n<p>this sounds correct to me too; but modulo the terminology, the overall approach of the PR seems right (documenting limits + current behavior)</p>",
        "id": 163110842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997006
    },
    {
        "content": "<p>on the LLVM level there is no such thing as a \"value\" not backed by an allocation</p>",
        "id": 163110871,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997033
    },
    {
        "content": "<p>and on MIR ?</p>",
        "id": 163110886,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997045
    },
    {
        "content": "<p>let me go look that up in the MIR spec... ;)</p>",
        "id": 163110903,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997057
    },
    {
        "content": "<p>in Miri, there is not</p>",
        "id": 163110905,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997059
    },
    {
        "content": "<p>but there are different ways to write the spec</p>",
        "id": 163110918,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997064
    },
    {
        "content": "<p>this is a limit on the size of the result of any expression as well</p>",
        "id": 163110946,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997079
    },
    {
        "content": "<p>(well, there is not except for \"immediates\", which are basically scalars, plus fat pointers)</p>",
        "id": 163110982,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997082
    },
    {
        "content": "<p>yes but that result is put into an allocation</p>",
        "id": 163111010,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997094
    },
    {
        "content": "<p>so the term covers that case</p>",
        "id": 163111013,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997097
    },
    {
        "content": "<p>so what's the difference between an allocation and a place ?</p>",
        "id": 163111051,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997120
    },
    {
        "content": "<p>we should probably come back to this once <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/40\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/40\">ucg#40</a> is resolved</p>",
        "id": 163111052,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997121
    },
    {
        "content": "<p>an allocation is an entity in the machine state</p>",
        "id": 163111060,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997131
    },
    {
        "content": "<p>it has properties such as alignment, size, blah</p>",
        "id": 163111072,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997139
    },
    {
        "content": "<p>a place arises ephemerally during evaluation of a statement, and is basically a synonym for \"location\" (!= allocation)</p>",
        "id": 163111118,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997161
    },
    {
        "content": "<p>in particular a place can point to part of an allocation, like <code>&amp;(1,2).1</code></p>",
        "id": 163111153,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997197
    },
    {
        "content": "<p>i think we should document that in the glossary, I'll change the PR to say allocation there, and then I'll merge</p>",
        "id": 163111227,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997229
    },
    {
        "content": "<p>well we can document this once we resolved <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/40\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/40\">ucg#40</a> I guess^^</p>",
        "id": 163111245,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997243
    },
    {
        "content": "<p>and for the bigger picture, once we get a MIR spec</p>",
        "id": 163111262,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997257
    },
    {
        "content": "<p>i think we can add the definition of \"allocation\" in parallel right ?</p>",
        "id": 163111266,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997262
    },
    {
        "content": "<p>but judging from how long it takes us to agree on 1 term, the expected time to agree on the framework of terminology in a MIR spec is &gt;10 years :P</p>",
        "id": 163111300,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997280
    },
    {
        "content": "<p>I find it hard to \"define\" allocation. for me \"define\" is something mathematical, and to do taht you cannot just define one thing... allocation talks about memory, so you got to define that, and at that point you basically have to define the entire machine model.</p>",
        "id": 163111425,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997347
    },
    {
        "content": "<p>we can \"define\" in the sense of \"putting down some hand-wavy English sentences\" but I see little value in that for terms like \"allocation\", TBH...</p>",
        "id": 163111468,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997384
    },
    {
        "content": "<p>but that is a separate discussion ;)</p>",
        "id": 163111498,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997403
    },
    {
        "content": "<p>I think using the term allocation seems good for now. I agree it's meaning seems fairly clear, but I also think defining in the sense of giving a few examples of allocations seems harmless</p>",
        "id": 163111524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997424
    },
    {
        "content": "<p>in particular it's probably worth pointing out that this is not restrictied to \"things returned by malloc\"</p>",
        "id": 163111548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997442
    },
    {
        "content": "<p>but includes e.g. stack slots</p>",
        "id": 163111589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997446
    },
    {
        "content": "<p>i've updated the PR</p>",
        "id": 163111596,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997450
    },
    {
        "content": "<p>something else: when we had the lang team sync discussion, one thing I took away was the need for us to not only document <em>conclusions</em> but also the <em>considerations</em> that led to those conclusions</p>",
        "id": 163111646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997486
    },
    {
        "content": "<p>I don't thnk we've done much in that direction so far, right?</p>",
        "id": 163111651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997492
    },
    {
        "content": "<p>its in the issues and PRs, but its not part of a document</p>",
        "id": 163111687,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997509
    },
    {
        "content": "<p>right, the key point was to extract out from the issues and into the document</p>",
        "id": 163111703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997522
    },
    {
        "content": "<p>or into <em>a</em> document</p>",
        "id": 163111710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997525
    },
    {
        "content": "<p>maybe it would be nice to have like drop-down rationale lists that can be expanded to read the rationale of things</p>",
        "id": 163111717,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997534
    },
    {
        "content": "<p>i mean, inline within the documents</p>",
        "id": 163111730,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997544
    },
    {
        "content": "<p>we could use <code>&lt;details&gt;</code> for that?</p>",
        "id": 163111737,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997550
    },
    {
        "content": "<p>I think we were talking about having separate sections</p>",
        "id": 163111739,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997551
    },
    {
        "content": "<p>but I'm game for details if that works =)</p>",
        "id": 163111745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997560
    },
    {
        "content": "<p>i think i would prefer to have the rationale of each section (or each paragraph) \"inline\" so that one can quickly read it for the parts that might be unclear, and also make it easy to update.</p>",
        "id": 163111835,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997601
    },
    {
        "content": "<p>for C++ the rationale was in a different document, and now its 20 years out of date</p>",
        "id": 163111872,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997627
    },
    {
        "content": "<p>got to go to catch a bus, thanks all!</p>",
        "id": 163111975,
        "sender_full_name": "RalfJ",
        "timestamp": 1554997699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  collecting the whole rationale is going to be a lot of work, for things that stem from RFCs, there was a lot of discussion in the PRs, which is not necessarily accounted for in the RFC rationale and alternatives</p>",
        "id": 163112033,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554997756
    },
    {
        "content": "<p>yep</p>",
        "id": 163112096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997802
    },
    {
        "content": "<p>luckily almost none of this comes from RFCs :P</p>",
        "id": 163112146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997812
    },
    {
        "content": "<p>(fwiw I think this is a place where our RFC process needs to be updated too)</p>",
        "id": 163112161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997823
    },
    {
        "content": "<p>to do a better job of this</p>",
        "id": 163112171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997827
    },
    {
        "content": "<p>anyway as a first step maybe we can just try to make a <em>list</em> of places we might want to add rationale</p>",
        "id": 163112187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554997845
    },
    {
        "content": "<p>in many places the rationale is \"there wasn't any other reasonable option\"</p>",
        "id": 163112675,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554998221
    },
    {
        "content": "<p>should we document those as well ?</p>",
        "id": 163112793,
        "sender_full_name": "gnzlbg",
        "timestamp": 1554998298
    },
    {
        "content": "<p>seems like it would be valuable to docuent</p>",
        "id": 163112895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554998397
    },
    {
        "content": "<p>In some cases there are \"unreasonable\" alternatives that were brought up and dismissed, we should document the reasons why they're considered unreasonable.</p>",
        "id": 163112965,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1554998415
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/110\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/pull/110\">https://github.com/rust-lang/unsafe-code-guidelines/pull/110</a> shows an example of how that could look like</p>",
        "id": 163115704,
        "sender_full_name": "gnzlbg",
        "timestamp": 1555000318
    },
    {
        "content": "<p>maybe we could make the rationale labels a bit smaller</p>",
        "id": 163115766,
        "sender_full_name": "gnzlbg",
        "timestamp": 1555000346
    },
    {
        "content": "<p>Collapsed:</p>\n<p><a href=\"/user_uploads/4715/xNASdDFJosO9A1qRF8JKELtS/collapsed.png\" target=\"_blank\" title=\"collapsed.png\">collapsed.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/xNASdDFJosO9A1qRF8JKELtS/collapsed.png\" target=\"_blank\" title=\"collapsed.png\"><img src=\"/user_uploads/4715/xNASdDFJosO9A1qRF8JKELtS/collapsed.png\"></a></div><p>Expanded:</p>\n<p><a href=\"/user_uploads/4715/gGCcJ2U2Mu8C11DwOPlBBGfF/expanded.png\" target=\"_blank\" title=\"expanded.png\">expanded.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/gGCcJ2U2Mu8C11DwOPlBBGfF/expanded.png\" target=\"_blank\" title=\"expanded.png\"><img src=\"/user_uploads/4715/gGCcJ2U2Mu8C11DwOPlBBGfF/expanded.png\"></a></div>",
        "id": 163115835,
        "sender_full_name": "gnzlbg",
        "timestamp": 1555000414
    }
]