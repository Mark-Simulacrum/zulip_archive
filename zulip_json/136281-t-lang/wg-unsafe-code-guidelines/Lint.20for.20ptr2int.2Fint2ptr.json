[
    {
        "content": "<p>Is there a clippy lint for ptr2int or int2ptr casts?</p>",
        "id": 277529991,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1648906466
    },
    {
        "content": "<p>not sure...</p>",
        "id": 277530137,
        "sender_full_name": "RalfJ",
        "timestamp": 1648906671
    },
    {
        "content": "<p>relatedly, is there a lint against <code>&amp;T</code> to <code>usize</code> transmutes? I thought clippy does lint against transmutes that could be casts, but when I just tried this transmute was not flagged</p>",
        "id": 277530193,
        "sender_full_name": "RalfJ",
        "timestamp": 1648906704
    },
    {
        "content": "<p>oh lol it does lint against raw ptr to usize transmute by default, but not reference to usize transmute</p>",
        "id": 277530215,
        "sender_full_name": "RalfJ",
        "timestamp": 1648906739
    },
    {
        "content": "<p>I've been wanting to fix the bytes crate's ptr2int2ptr casts for a long time, and just looked into it, but having a tool that lists them would be very useful.</p>",
        "id": 277530330,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1648906888
    },
    {
        "content": "<p>You can list all casts, but that includes a lot of ptr2ptr casts.</p>",
        "id": 277530373,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1648906927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Lint.20for.20ptr2int.2Fint2ptr/near/277530215\">said</a>:</p>\n<blockquote>\n<p>oh lol it does lint against raw ptr to usize transmute by default, but not reference to usize transmute</p>\n</blockquote>\n<p>reported that: <a href=\"https://github.com/rust-lang/rust-clippy/issues/8622\">https://github.com/rust-lang/rust-clippy/issues/8622</a><br>\nshould be an easy fix I think, if someone wants to pick it up :D</p>",
        "id": 277530400,
        "sender_full_name": "RalfJ",
        "timestamp": 1648906981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"218683\">Alice Ryhl</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Lint.20for.20ptr2int.2Fint2ptr/near/277530330\">said</a>:</p>\n<blockquote>\n<p>I've been wanting to fix the bytes crate's ptr2int2ptr casts for a long time, and just looked into it, but having a tool that lists them would be very useful.</p>\n</blockquote>\n<p>yes, fully agreed -- an earlier version of <span class=\"user-mention\" data-user-id=\"137587\">@Gankra</span>'s PR contained such a lint as part of rustc itself, but it would probably be better suited for clippy for now</p>",
        "id": 277530423,
        "sender_full_name": "RalfJ",
        "timestamp": 1648907018
    },
    {
        "content": "<p>Note that if anyone wants to uplift a \"don't use <code>as</code> for ptr-to-int\" lint to rustc, both T-lang and T-libs-api have wanted such a thing for months now (see the conversation in <a href=\"#narrow/stream/219381-t-libs/topic/Adding.20methods.20as.20more.20specific.20versions.20of.20.60as.60/near/238391074\">https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/Adding.20methods.20as.20more.20specific.20versions.20of.20.60as.60/near/238391074</a> )</p>\n<p>It of course can't be on-by-default in stable until <code>addr</code> is stable, but we could at least deny it in <code>core</code> and such, and people could use it on nightly.</p>",
        "id": 277542707,
        "sender_full_name": "scottmcm",
        "timestamp": 1648922330
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> we could also land lints for non-<code>usize</code> casts, that should not have been present in 1.0 in the first place</p>",
        "id": 277568168,
        "sender_full_name": "eddyb",
        "timestamp": 1648957586
    },
    {
        "content": "<p>like <code>main as u8</code> is absurdist humor, not something that we want to meaningfully support</p>",
        "id": 277568178,
        "sender_full_name": "eddyb",
        "timestamp": 1648957610
    },
    {
        "content": "<p>(unless your function pointers <em>are</em> byte-sized but it should still be something else)</p>",
        "id": 277568190,
        "sender_full_name": "eddyb",
        "timestamp": 1648957649
    },
    {
        "content": "<p>Yeah.  The place the functions become essential is things like <code>isize::max as usize</code>, which <em>could</em> be what you want, it's just super-unlikely.</p>",
        "id": 277570415,
        "sender_full_name": "scottmcm",
        "timestamp": 1648959873
    },
    {
        "content": "<p>^ this is <a href=\"https://github.com/rust-lang/rust/issues/81686\">https://github.com/rust-lang/rust/issues/81686</a></p>",
        "id": 277730902,
        "sender_full_name": "bstrie",
        "timestamp": 1649079061
    }
]