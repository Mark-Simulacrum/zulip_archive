[
    {
        "content": "<p>I wouldn't use transmute directly for pointers, though.</p>",
        "id": 253029830,
        "sender_full_name": "Connor Horman",
        "timestamp": 1631500789
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138909\">matt1992</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/.60std.3A.3Amem.3A.3Atransmute.60.20from.20.60*const.20Dst.60.20to.20.60*const.20Wrappe.2E.2E.2E/near/253028519\">said</a>:</p>\n<blockquote>\n<p>Is transmuting from <code>*const Dst</code> to <code>*const Wrapper&lt;Dst&gt;</code> sound?</p>\n</blockquote>\n<p>Yes. They would have the same metadata. See <a href=\"https://doc.rust-lang.org/std/ptr/trait.Pointee.html\">https://doc.rust-lang.org/std/ptr/trait.Pointee.html</a>:</p>\n<blockquote>\n<p>For structs whose last field is a DST, metadata is the metadata for the last field</p>\n</blockquote>\n<p>Although ptr_metadata is not yet stable, I doubt this rule will change.</p>",
        "id": 253035585,
        "sender_full_name": "Gary Guo",
        "timestamp": 1631506621
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303710\">Gary Guo</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/.60std.3A.3Amem.3A.3Atransmute.60.20from.20.60*const.20Dst.60.20to.20.60*const.20Wrappe.2E.2E.2E/near/253035585\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"138909\">matt1992</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/.60std.3A.3Amem.3A.3Atransmute.60.20from.20.60*const.20Dst.60.20to.20.60*const.20Wrappe.2E.2E.2E/near/253028519\">said</a>:</p>\n<blockquote>\n<p>Is transmuting from <code>*const Dst</code> to <code>*const Wrapper&lt;Dst&gt;</code> sound?</p>\n</blockquote>\n<p>Yes. They would have the same metadata. See <a href=\"https://doc.rust-lang.org/std/ptr/trait.Pointee.html\">https://doc.rust-lang.org/std/ptr/trait.Pointee.html</a>:</p>\n<blockquote>\n<p>For structs whose last field is a DST, metadata is the metadata for the last field</p>\n</blockquote>\n<p>Although ptr_metadata is not yet stable, I doubt this rule will change.</p>\n</blockquote>\n<p>The is the metadata being the same, it doesn't guarantee that the metadata and the data pointer are laid out the same in the fat pointer though.</p>\n<p><code>*const Wrapper&lt;str&gt;</code>: <code>#[repr(C)] struct{data: *const (), metadata: usize}</code><br>\n<code>*const str</code>: <code>#[repr(C)] struct{metadata: usize, data: *const ()}</code></p>",
        "id": 253038222,
        "sender_full_name": "matt1992",
        "timestamp": 1631509329
    }
]