[
    {
        "content": "<p>I found that two kinds of Stacked Borrows errors are particularly common: creating <code>&amp;mut</code> that accidentally \"kill\" other pointers (might also happen with <code>&amp;</code> but seems to be less of an issue there), and casting a reference to a raw pointer that laters gets used to access things \"next to\" that reference (most common: using <code>&amp;slice[0] as *const _</code> instead of <code>slice.as_ptr()</code>). I collected those <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/133\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/133\">here</a> and <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/134\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/134\">here</a>. If you know other cases of these, please let me know!</p>\n<p>In particular I feel I have seen more of these \"slice\" issues... was that in questions by you <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> ?</p>",
        "id": 166705270,
        "sender_full_name": "RalfJ",
        "timestamp": 1559041917
    },
    {
        "content": "<p>I don't recall there being multiple. Just <a href=\"#narrow/stream/122651-general/topic/Miri.3A.20no.20item.20to.20reborrow.20for.20Unique\" title=\"#narrow/stream/122651-general/topic/Miri.3A.20no.20item.20to.20reborrow.20for.20Unique\">this most recent one</a></p>",
        "id": 166712541,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559047871
    },
    {
        "content": "<p>that would be the \"too much asserting of uniqueness\" thing then, not \"too weak raw ptrs\"</p>",
        "id": 166712840,
        "sender_full_name": "RalfJ",
        "timestamp": 1559048062
    },
    {
        "content": "<p>I thought I had more cases of <code>as_ptr</code> elsewhere... maybe I misremember.</p>",
        "id": 166712856,
        "sender_full_name": "RalfJ",
        "timestamp": 1559048080
    }
]