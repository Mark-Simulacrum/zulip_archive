[
    {
        "content": "<p>So in an effort to support the FFI pattern of structs that have variable sized arrays in them (also known as flexible array members to some people), I have created a <code>VariableSizedBox</code> type. I would greatly appreciate a thorough analysis to ensure it is sound according to stacked borrows.</p>\n<p><a href=\"https://github.com/retep998/wio-rs/blob/master/src/vsb.rs\">https://github.com/retep998/wio-rs/blob/master/src/vsb.rs</a></p>",
        "id": 207593211,
        "sender_full_name": "Peter Rabbit",
        "timestamp": 1597973424
    },
    {
        "content": "<p>Off hand, zeroed should be unsafe, in case it creates an invalid struct. (Like if T is NonZeroU8)</p>",
        "id": 207615409,
        "sender_full_name": "David Cook",
        "timestamp": 1598002835
    },
    {
        "content": "<p>The validity of the data is asserted on access, not creation, so zeroed does not need to be unsafe.</p>",
        "id": 207663907,
        "sender_full_name": "Peter Rabbit",
        "timestamp": 1598032547
    },
    {
        "content": "<p>I thought it's UB to have the invalid data even if it's never accessed?</p>",
        "id": 207664296,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598032730
    },
    {
        "content": "<p>Only if there's an actual <code>T</code> instance</p>",
        "id": 207664724,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598032942
    },
    {
        "content": "<p>The code just allocates memory for a <code>T</code></p>",
        "id": 207664745,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598032957
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 207665015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598033091
    },
    {
        "content": "<p>yes, and to add a little more, any raw pointer to a T doesn't need to be aligned, or point to a valid address, or have valid bits at that address, until you <em>actually access</em> the pointer</p>",
        "id": 207668354,
        "sender_full_name": "Lokathor",
        "timestamp": 1598034801
    },
    {
        "content": "<p>I haven't checked the entire API surface in detail, but generally this looks fine, yes. You can probably even make that raw ptr a <code>NonNull</code> if you want this box to have a niche.</p>",
        "id": 207721489,
        "sender_full_name": "RalfJ",
        "timestamp": 1598097970
    },
    {
        "content": "<p>I updated it to use <code>NonNull</code>.</p>",
        "id": 207824498,
        "sender_full_name": "Peter Rabbit",
        "timestamp": 1598262222
    }
]