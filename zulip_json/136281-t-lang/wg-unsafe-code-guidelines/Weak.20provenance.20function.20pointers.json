[
    {
        "content": "<p>On non-CHERI architectures, does function pointer provenance mean anything to the optimizer/is it used for optimizations? It seems like it should be really easy to spec out something for them, as you don't have to deal with one-past-the-end or Stacked Borrows.</p>",
        "id": 278230988,
        "sender_full_name": "Quy Nguyen",
        "timestamp": 1649368205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303115\">@Quy Nguyen</span> See the \"associated with\" rules in <a href=\"https://llvm.org/docs/LangRef.html#pointer-aliasing-rules\">https://llvm.org/docs/LangRef.html#pointer-aliasing-rules</a>, which LLVM uses for optimizations.</p>",
        "id": 278233336,
        "sender_full_name": "scottmcm",
        "timestamp": 1649369569
    },
    {
        "content": "<p>I think the answer is no, optimizers dont do anything with fn ptr provenance. but I am not sure, LLVM does lots of things...</p>",
        "id": 278355229,
        "sender_full_name": "RalfJ",
        "timestamp": 1649448062
    },
    {
        "content": "<p>also at least in Miri we treat fn ptrs as ptrs to zero-sized allocations so they are <em>always</em> one-past-the-end ;)</p>",
        "id": 278355260,
        "sender_full_name": "RalfJ",
        "timestamp": 1649448078
    }
]