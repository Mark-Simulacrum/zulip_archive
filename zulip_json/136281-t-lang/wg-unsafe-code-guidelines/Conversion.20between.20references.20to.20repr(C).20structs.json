[
    {
        "content": "<p>If I have two <code>#[repr(C)]</code> (and <code>Copy</code>) structs <code>Vec4 { x: f32, y: f32, z: f32, w: f32 }</code> and <code>Vec3 { x: f32, y: f32, z: f32 }</code>, is it legal for a <code>&amp;Vec3</code> to alias a <code>&amp;Vec4</code>? e.g. if i transmute <code>&amp;Vec4</code> to <code>&amp;Vec3</code> is that allowed? (I want to know if some of my older code is unsound, or just... dodgy)</p>",
        "id": 172638423,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565134936
    },
    {
        "content": "<p>Dodgy, definitely, not sure if unsound or not. Whether that will work depends entirely on layout compatibility, which is not necessarily compatible for these two structures.</p>",
        "id": 172638734,
        "sender_full_name": "nagisa",
        "timestamp": 1565135384
    },
    {
        "content": "<p>the complete declaration is</p>\n<div class=\"codehilite\"><pre><span></span>#[derive(Copy, Clone, Debug, Default, PartialEq)]\n#[repr(C)]\npub struct V3 { pub x: f32, pub y: f32, pub z: f32, }\n\n#[derive(Copy, Clone, Debug, Default, PartialEq)]\n#[repr(C)]\npub struct V4 { pub x: f32, pub y: f32, pub z: f32, pub w: f32 }\n</pre></div>\n\n\n<p>(with some whitespace removed for brevity) is that enough to determine layout compatibility? or is this something that's still unspecified</p>",
        "id": 172639046,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565135724
    },
    {
        "content": "<p>e.g. there are no other repr's involved, if that's what you meant</p>",
        "id": 172639123,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565135798
    },
    {
        "content": "<p>it also does stuff like convert &amp;[V4] to &amp;[f32] (via from_raw_parts and some pointer casting).  avoiding that would be... harder, unfortunately. this feels less dodgy to me though, but I can't really place why (it might just be that I... want it to be fine <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 172639302,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565136053
    },
    {
        "content": "<p>reinterpretation to a slice would be not fine on any target where f32 was aligned to 64 bits, for example.</p>",
        "id": 172640032,
        "sender_full_name": "nagisa",
        "timestamp": 1565136983
    },
    {
        "content": "<p>not that any real target like that comes to mind.</p>",
        "id": 172640035,
        "sender_full_name": "nagisa",
        "timestamp": 1565136994
    },
    {
        "content": "<p>Oh wait, never mind, Iâ€™m stupid. Repeated note to self: do not think about complicated things when its 3am.</p>",
        "id": 172640070,
        "sender_full_name": "nagisa",
        "timestamp": 1565137052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> wouldn't V4 have to be have the same alignment?</p>",
        "id": 172640071,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565137055
    },
    {
        "content": "<p>ah, i'm the same way. sleep is... hard.</p>",
        "id": 172640083,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1565137077
    },
    {
        "content": "<blockquote>\n<p>If I have two #[repr(C)] (and Copy) structs Vec4 { x: f32, y: f32, z: f32, w: f32 } and Vec3 { x: f32, y: f32, z: f32 }, is it legal for a &amp;Vec3 to alias a &amp;Vec4? e.g. if i transmute &amp;Vec4 to &amp;Vec3 is that allowed?</p>\n</blockquote>\n<p>I think this is always legal, because the alignment requirement of Vec4 is always equal to or larger than that of Vec3  for all targets we can ever support.</p>",
        "id": 172680247,
        "sender_full_name": "gnzlbg",
        "timestamp": 1565186417
    },
    {
        "content": "<p>Even if this were not the case, you could still do this if you check before that for the particular allocation that you want to alias, that the allocation lives at a multiple of <code>Vec3</code> alignment.</p>",
        "id": 172680459,
        "sender_full_name": "gnzlbg",
        "timestamp": 1565186552
    },
    {
        "content": "<blockquote>\n<p>reinterpretation to a slice would be not fine on any target where f32 was aligned to 64 bits, for example.</p>\n</blockquote>\n<p>I'm not sure if that's what you meant afterwards, but if f32 was aligned to 64-bit, Vec4 would be aligned to a multiple of that, so I think this should always work.</p>",
        "id": 172680549,
        "sender_full_name": "gnzlbg",
        "timestamp": 1565186627
    }
]