[
    {
        "content": "<p>So I'm hoping it's possible to fully tame <code>unsafe</code> hiding behind attributes: <a href=\"https://github.com/rust-lang/rust/issues/82499\">https://github.com/rust-lang/rust/issues/82499</a></p>",
        "id": 227687028,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614206337
    },
    {
        "content": "<p>As the <code>#[link]</code> attribute is considered unsafe, should the <code>-l</code> flag be covered too?</p>\n<div class=\"codehilite\"><pre><span></span><code>    -l [KIND=]NAME      Link the generated crate(s) to the specified native\n                        library NAME. The optional KIND can be one of\n                        static, framework, or dylib (the default).\n</code></pre></div>",
        "id": 227745036,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614248099
    },
    {
        "content": "<p>(It's not an attribute though.)</p>",
        "id": 227745443,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614248330
    },
    {
        "content": "<p>code can't block the command line arguments passed to compile it.</p>\n<p>also link can only link to unsafe functions so it's \"no worse than already having a bunch of unsafe functions\", which is a common phrase that i definitely didn't just make up.</p>",
        "id": 227800761,
        "sender_full_name": "Lokathor",
        "timestamp": 1614272561
    },
    {
        "content": "<blockquote>\n<p>code can't block the command line arguments passed to compile it.</p>\n</blockquote>\n<p>Do you mean the compiler can't fire the lint for the <code>-l</code> flag? If so, why?</p>",
        "id": 227803590,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614273635
    },
    {
        "content": "<blockquote>\n<p>also link can only link to unsafe functions so it's \"no worse than already having a bunch of unsafe functions\", which is a common phrase that i definitely didn't just make up.</p>\n</blockquote>\n<p>It was mentioned on the thread, but it may link to a library that has an init or fini table, or that otherwise has startup or finalization behaviour.</p>",
        "id": 227804283,
        "sender_full_name": "Connor Horman",
        "timestamp": 1614273918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374396\">@hyd-dev</span> I suppose I should say that code is not currently capable of doing that. It's not unthinkable that things could be changed.</p>",
        "id": 227807459,
        "sender_full_name": "Lokathor",
        "timestamp": 1614275068
    },
    {
        "content": "<p>I guess... the linker is already something you have to completely trust. Like if your linker is hostile to you, you're sunk.</p>",
        "id": 227807534,
        "sender_full_name": "Lokathor",
        "timestamp": 1614275102
    },
    {
        "content": "<p>i don't think trying to regulate that is helpful</p>",
        "id": 227807582,
        "sender_full_name": "Lokathor",
        "timestamp": 1614275117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Add.20allow-by-default.20lints.20for.20all.20attributes.20with.20unsafe.20be/near/227807534\">said</a>:</p>\n<blockquote>\n<p>I guess... the linker is already something you have to completely trust. Like if your linker is hostile to you, you're sunk.</p>\n</blockquote>\n<p>Yes... Linkers are out of control.</p>\n<p>That reminds me about <a href=\"https://github.com/rust-lang/rust/issues/29596\"><code>#[link_args]</code></a>. Should that (and maybe also <code>-C link-arg(s)</code>) be added to the list?</p>",
        "id": 227809805,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614276049
    },
    {
        "content": "<p>linking to libraries or controlling the linker behaviour through attributes is pretty weird though. Even if I suspected linker shenanigans, I would probably look there last. OTOH, <code>#[link]</code> is pretty much compulsory if you want to refer to library symbols via <code>extern {}</code> <a href=\"https://github.com/rust-lang/rust/issues/65610\">*correctly*</a>.</p>",
        "id": 227810790,
        "sender_full_name": "nagisa",
        "timestamp": 1614276474
    },
    {
        "content": "<blockquote>\n<p>linking to libraries or controlling the linker behaviour through attributes is pretty weird though.</p>\n</blockquote>\n<p>Personally I think <code>#[link]</code> is convenience, especially when you don't want to write/<a href=\"https://github.com/rust-lang/rust/pull/78924\">have</a> a (large) build script.</p>",
        "id": 227813569,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614277658
    },
    {
        "content": "<p>Anyway I am able to achieve the result of <code>#[link]</code> via <code>#[link_args]</code>: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9f7415ccaefc15c7d471067bed0ce881\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9f7415ccaefc15c7d471067bed0ce881</a><br>\nSo <span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span>, could you add that to the list? It's an <em>unstable</em> attribute though.</p>",
        "id": 227814909,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614278190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374396\">@hyd-dev</span> done</p>",
        "id": 227834391,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614285359
    },
    {
        "content": "<p>So if I understand correctly, this is not adding new allow-by-default lints but it is extending the existing allow-by-default <code>unsafe_code</code> lint? The PR does the latter (I think) but the issue (and Zulip topic title) describes the former so I am a bit confused.^^</p>",
        "id": 228056650,
        "sender_full_name": "RalfJ",
        "timestamp": 1614430351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132721\">Tony Arcieri</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Add.20allow-by-default.20lints.20for.20all.20attributes.20with.20unsafe.20be/near/227687028\">said</a>:</p>\n<blockquote>\n<p>So I'm hoping it's possible to fully tame <code>unsafe</code> hiding behind attributes</p>\n</blockquote>\n<p>I love the progress, but I think to \"fully tame\" it, an allow-by-default lint is not enough... after all we also don't make <code>unsafe</code> fn calls in safe code an allow-by-default lint. Do you have any ideas/plans for how to move forward beyond allow-by-default?</p>",
        "id": 228056688,
        "sender_full_name": "RalfJ",
        "timestamp": 1614430431
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374396\">hyd-dev</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Add.20allow-by-default.20lints.20for.20all.20attributes.20with.20unsafe.20be/near/227814909\">said</a>:</p>\n<blockquote>\n<p>Anyway I am able to achieve the result of <code>#[link]</code> via <code>#[link_args]</code>: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9f7415ccaefc15c7d471067bed0ce881\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9f7415ccaefc15c7d471067bed0ce881</a><br>\nSo <span class=\"user-mention silent\" data-user-id=\"132721\">Tony Arcieri</span>, could you add that to the list? It's an <em>unstable</em> attribute though.</p>\n</blockquote>\n<p>Actually <code>#[link_args]</code> has been removed now (<a href=\"https://github.com/rust-lang/rust/issues/83820\">#83820</a>)...<br>\nSomeone who has editing permission may want to remove it from the list.</p>",
        "id": 234275572,
        "sender_full_name": "hyd-dev",
        "timestamp": 1618295975
    }
]