[
    {
        "content": "<p>Hello UCG, I was wondering what are the group's thoughts on tools that just highlight unsafe code in a codebase? I was thinking of writing something simple along these lines however I'm slightly hesitant over how people would use it as people sometimes see unsafe in your code as indicator for \"bad\" which I don't agree with, and I wouldn't want to spread that perception.</p>",
        "id": 203655357,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594579076
    },
    {
        "content": "<p>What kind of \"highlight\"? The emacs rust-mode already changes the color of the keyword <code>unsafe</code> to red, for example.</p>",
        "id": 203655469,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1594579239
    },
    {
        "content": "<p>Well let’s say it was number of unsafe lines.</p>",
        "id": 203655486,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594579289
    },
    {
        "content": "<p>That's roughly what cargo-geiger does, but on an item/expression level <a href=\"https://github.com/rust-secure-code/cargo-geiger\">https://github.com/rust-secure-code/cargo-geiger</a></p>",
        "id": 203655553,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594579381
    },
    {
        "content": "<p>rust-analyzer can highlight individual unsafe operations inside unsafe blocks too (but that's probably more useful for authoring unsafe code)</p>",
        "id": 203655565,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594579423
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> came up with a better way to do what cargo-geiger approximates by using rustc directly</p>",
        "id": 203655617,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594579490
    },
    {
        "content": "<p>Sure, I know there are tools that can do this, I am more interested in people’s opinions on whether it’s something that <em>should</em> be done, or if it’s unhelpful?</p>",
        "id": 203655632,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594579542
    },
    {
        "content": "<p>Ah yeah that's all explained here <a href=\"https://github.com/rust-secure-code/cargo-geiger/issues/102\">https://github.com/rust-secure-code/cargo-geiger/issues/102</a></p>",
        "id": 203655633,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594579544
    },
    {
        "content": "<p>I guess that depends on what the goal is</p>",
        "id": 203655679,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594579580
    },
    {
        "content": "<p>Well that’s what I mean. These tools indicate presence, but don’t really indicate anything about the code beyond that. So it’s left up to you the user to figure out what to do with that information.</p>",
        "id": 203655813,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594579855
    },
    {
        "content": "<p>Like I think the worse case I’m thinking about is having people use it, see that someone else’s code has unsafe code, and uses it to be rude to them. Which I’ve seen a couple of times.</p>",
        "id": 203656091,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594580316
    },
    {
        "content": "<p>Oh yeah definitely</p>",
        "id": 203656110,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594580361
    },
    {
        "content": "<p>I think that pretty much any tool that's similar to cargo-geiger will run into that problem</p>",
        "id": 203656219,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1594580503
    },
    {
        "content": "<p>Often posts (I am thinking about reddit) heavily discourage from unsafe without providing the other side. The docs are much more neutral on this, maybe something could be done to communicate more about them ?</p>",
        "id": 203656436,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1594580795
    },
    {
        "content": "<p>The nomicon is very good for this IMO, explaining about real world usages of unsafe</p>",
        "id": 203656456,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1594580844
    },
    {
        "content": "<p>Between <code>cargo-geiger</code> and <code>cargo-crev</code> it's kinda up to the user to determine if they trust the <code>unsafe</code> in question.</p>",
        "id": 203666648,
        "sender_full_name": "Lokathor",
        "timestamp": 1594597135
    },
    {
        "content": "<p>The <code>safe_arch</code> crate uses <code>unsafe</code> 862 times, but I don't think that says anything at all about the quality or not of the crate.</p>",
        "id": 203666721,
        "sender_full_name": "Lokathor",
        "timestamp": 1594597218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"219696\">XAMPPRocky</span> <a href=\"#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Highlighting.20unsafe.20code/near/203655357\">said</a>:</p>\n<blockquote>\n<p>Hello UCG, I was wondering what are the group's thoughts on tools that just highlight unsafe code in a codebase? I was thinking of writing something simple along these lines however I'm slightly hesitant over how people would use it as people sometimes see unsafe in your code as indicator for \"bad\" which I don't agree with, and I wouldn't want to spread that perception.</p>\n</blockquote>\n<p>I am not sure the group has thoughts on that. Our mandate is mostly to figure out what may and may not be done by unsafe code. (I realize \"guidelines\" is a somewhat misleading name then and maybe I am misrepresenting <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>' intentions.)</p>",
        "id": 203684546,
        "sender_full_name": "RalfJ",
        "timestamp": 1594624959
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"146229\" href=\"/#narrow/stream/146229-wg-secure-code\">#wg-secure-code</a> sounds like more the kind of place where people have thoughts on cargo-geiger, cargo-audit, cargo-crev etc?</p>",
        "id": 203684572,
        "sender_full_name": "RalfJ",
        "timestamp": 1594624994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> Well I’m not looking for the team to make a guideline or anything, I was more just interested in opinions.</p>",
        "id": 203687588,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594627593
    },
    {
        "content": "<p>Sorry if that was not clear.</p>",
        "id": 203687607,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594627621
    },
    {
        "content": "<p>fair :)</p>",
        "id": 203688115,
        "sender_full_name": "RalfJ",
        "timestamp": 1594628004
    },
    {
        "content": "<p>I dont think sheer number of unsafe lines is very useful. but what I think would be useful would be some way to ensure that crates follow some \"best practices\" regarding their unsafe blocks. like, are there <code>SAFETY</code> comments? maybe we can even standardize some scheme where <code>unsafe fn</code> <em>name</em> the preconditions they expect (<code>ptr_not_dangling</code>, <code>idx_in_bounds</code>) and then the <code>SAFETY</code> comments need to explicitly discharge (or forward to the caller) each of these preconditions.</p>",
        "id": 203688338,
        "sender_full_name": "RalfJ",
        "timestamp": 1594628166
    },
    {
        "content": "<p>Something like that is proposed regularly, sometimes as a language extension, but I think it can start as an external tool</p>",
        "id": 203688363,
        "sender_full_name": "RalfJ",
        "timestamp": 1594628190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> I was thinking about only counting unsafe blocks as opposed to unsafe fns, both because it's easier and more inline with people's current opinions on <code>unsafe fn</code> being signifier for being unsafe to call rather than implying <code>unsafe</code> in the body.</p>",
        "id": 203733264,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594655829
    }
]