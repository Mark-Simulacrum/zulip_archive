[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankra</span><br>\n<a href=\"https://github.com/rust-lang/rust/issues/94231\">https://github.com/rust-lang/rust/issues/94231</a></p>",
        "id": 277046461,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1648578275
    },
    {
        "content": "<p>I don't know if I already pinged you about this, sorry if I did</p>",
        "id": 277046529,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1648578317
    },
    {
        "content": "<p>Y I K E S</p>",
        "id": 277046896,
        "sender_full_name": "Gankra",
        "timestamp": 1648578498
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/94231#issuecomment-1048044145\">this comment</a> is particularly amusing (for large values of 'amusing') :D</p>",
        "id": 277050812,
        "sender_full_name": "RalfJ",
        "timestamp": 1648580515
    },
    {
        "content": "<p>Wow, almost all of those are issues with the combination of _iterator_get_unchecked and zip. wild.</p>",
        "id": 277051197,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1648580673
    },
    {
        "content": "<p>In light of this it would be cool to have some sort of uncovered unsafe code assessment. The standard library is tested under Miri, which trivially detects the problem. So I'm pretty sure this is unsafe code in the standard library which isn't tested. Ouch.</p>",
        "id": 277052801,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1648581455
    },
    {
        "content": "<p>well for aliasing issues code also sometimes needs to be invoked in a certain way (like actually using certain references) to cause UB</p>",
        "id": 277068208,
        "sender_full_name": "RalfJ",
        "timestamp": 1648590073
    },
    {
        "content": "<p>and this will get worse when we 'improve' SB to fix things like <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/133\">https://github.com/rust-lang/unsafe-code-guidelines/issues/133</a></p>",
        "id": 277068237,
        "sender_full_name": "RalfJ",
        "timestamp": 1648590103
    },
    {
        "content": "<p>but yeah specialization is super tricky to test exhaustively</p>",
        "id": 277068294,
        "sender_full_name": "RalfJ",
        "timestamp": 1648590123
    },
    {
        "content": "<p>might there be tests in run-pass? (which Miri does no run)</p>",
        "id": 277068324,
        "sender_full_name": "RalfJ",
        "timestamp": 1648590134
    },
    {
        "content": "<p>Do we have any data on how many aliasing issues are discovered by invoking code in a specific way? I definitely agree that invalidate-on-write would move toward that direction, but I've just seen quite a few pieces of code which are UB due to aliasing <em>by design</em>, not because of any odd use or input. Such as the code in question, or <code>rust-argon2</code>, or <code>owning_ref</code>/<code>lru</code>/<code>string_cache</code>, or <code>color-eyre</code>.</p>\n<p>Maybe this is a personal bias, but I'm just not bothered by aliasing issues due to uncommon code paths or usages such as what might be hit by a sophistocated fuzzer, because of how much trivially invalid code we already have.</p>",
        "id": 277084535,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1648603922
    },
    {
        "content": "<p>I am pretty sure I found at least one bug with <a href=\"https://github.com/rust-lang/miri/blob/master/tests/run-pass/vec.rs#L4\">https://github.com/rust-lang/miri/blob/master/tests/run-pass/vec.rs#L4</a></p>",
        "id": 277298504,
        "sender_full_name": "RalfJ",
        "timestamp": 1648740452
    },
    {
        "content": "<p>but I dont remember any details...</p>",
        "id": 277298512,
        "sender_full_name": "RalfJ",
        "timestamp": 1648740457
    },
    {
        "content": "<p>ah here you go: <a href=\"https://github.com/rust-lang/rust/issues/74029\">https://github.com/rust-lang/rust/issues/74029</a> (it wasn't me but it found a bug)</p>",
        "id": 277298656,
        "sender_full_name": "RalfJ",
        "timestamp": 1648740506
    }
]