[
    {
        "content": "<p>Does anyone know an example demonstrating that reasoning based on the hardware concurrency memory model when writing Rust does not work? Basically something like <a href=\"https://github.com/rust-lang/rust/issues/32976#issuecomment-446775360\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/32976#issuecomment-446775360\">this</a> but for concurrency and in Rust. ;)<br>\nI've been thinking maybe one could use <code>Relaxed</code> where one should use <code>Release</code>/<code>Acquire</code> -- on x86 that compiles the same, so \"what the hardware does\" would work, but if we can get LLVM to reorder an access across the <code>Relaxed</code> that it would not be allowed to reorder across the <code>Release</code>/<code>Acquire</code>, that would demonstrate that \"what the hardware does\" just does not matter.</p>",
        "id": 169291060,
        "sender_full_name": "RalfJ",
        "timestamp": 1561802678
    },
    {
        "content": "<p>Here's a program exhibitng UB this way, but I dont know how to make LLVM optimize it the bad way: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=11a26c7f5ba7c7777501f3b8040776f6\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=11a26c7f5ba7c7777501f3b8040776f6\">https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=11a26c7f5ba7c7777501f3b8040776f6</a></p>",
        "id": 169291162,
        "sender_full_name": "RalfJ",
        "timestamp": 1561802913
    }
]