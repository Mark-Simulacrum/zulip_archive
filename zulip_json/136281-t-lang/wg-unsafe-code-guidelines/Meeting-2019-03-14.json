[
    {
        "content": "<p>Happy Thursday!</p>",
        "id": 160790237,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552576588
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 160790262,
        "sender_full_name": "Alan Jeffrey",
        "timestamp": 1552576606
    },
    {
        "content": "<p>(* waves *)</p>",
        "id": 160790264,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1552576607
    },
    {
        "content": "<p>cc <span class=\"user-group-mention\" data-user-group-id=\"810\">@WG-unsafe-code-guidelines</span></p>",
        "id": 160790315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576640
    },
    {
        "content": "<p>hi</p>",
        "id": 160790322,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552576651
    },
    {
        "content": "<p>Everyone ready for a meeting?</p>",
        "id": 160790324,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552576653
    },
    {
        "content": "<p>in one hour or now ?</p>",
        "id": 160790335,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552576668
    },
    {
        "content": "<p>(In calendar, the meeting is pegged to US time, so now.)</p>",
        "id": 160790428,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> in portland</p>",
        "id": 160790449,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552576725
    },
    {
        "content": "<p>so i'm ready I think I was notified that the meeting changed time but didn't register it mentally :D</p>",
        "id": 160790491,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552576752
    },
    {
        "content": "<p><strong>Reminder:</strong> I just wanted to mention the <a href=\"https://internals.rust-lang.org/t/lang-team-working-group-sync-meetings/9573/2?u=nikomatsakis\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/lang-team-working-group-sync-meetings/9573/2?u=nikomatsakis\">lang team sync meeting</a> which takes place in 3.5 hours. <a href=\"https://github.com/rust-lang/lang-team/blob/master/working-groups/unsafe-code-guidelines/notes/2019-03-14.md\" target=\"_blank\" title=\"https://github.com/rust-lang/lang-team/blob/master/working-groups/unsafe-code-guidelines/notes/2019-03-14.md\">The write-up of current status is here</a>, if you have any comments, changes, or additions they would be welcome (or thoughts on specific questions you'd like to add).</p>",
        "id": 160790625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576811
    },
    {
        "content": "<p>Ok so, how is validity going?</p>",
        "id": 160791004,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577041
    },
    {
        "content": "<p>have we had enough discussions to do some writeups</p>",
        "id": 160791070,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577060
    },
    {
        "content": "<p>From the meeting notes:</p>\n<ul>\n<li>For the \"boring stuff\" (enums, structs, arrays), there is relatively<br>\n  little controversy.  These invariants are largely created by<br>\n  combinined other invariants, and gnzlbg plans to do a write-up on<br>\n  these topics soon.</li>\n<li>For integers, references, and unions, there are a wide variety of<br>\n  opinions on the table:<ul>\n<li>On the one hand, stronger invariants enable more layout optimizations,<br>\n  as well as affecting things like [exhaustive matching][np].</li>\n<li>On the other, we want to enable common unsafe code patterns.</li>\n<li>Finally, we want to ensure that we have a feasible implementation<br>\n  in miri that can do dynamic checking and detect UB.</li>\n</ul>\n</li>\n</ul>\n<p>[np]: <a href=\"http://smallcultfollowing.com/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/\" target=\"_blank\" title=\"http://smallcultfollowing.com/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/\">http://smallcultfollowing.com/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/</a></p>",
        "id": 160791097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577080
    },
    {
        "content": "<p>but that's all I know ;)</p>",
        "id": 160791112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577097
    },
    {
        "content": "<p>we had talked about trying to do some sort of summary</p>",
        "id": 160791146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577118
    },
    {
        "content": "<p>to help \"collect\" the discussions on ints/references</p>",
        "id": 160791152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577127
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/lang-team/blob/master/working-groups/unsafe-code-guidelines/notes/2019-03-14.md#places-we-could-use-help\" target=\"_blank\" title=\"https://github.com/rust-lang/lang-team/blob/master/working-groups/unsafe-code-guidelines/notes/2019-03-14.md#places-we-could-use-help\">as described here</a></p>",
        "id": 160791190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577160
    },
    {
        "content": "<p>but we don't really have a plan for who will do that afaik</p>",
        "id": 160791234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577168
    },
    {
        "content": "<p>hmm...i want to volunteer but i've been pretty swamped. i could create a db paper and share the link so that if i start and then get swamped, it doesn't get lost?</p>",
        "id": 160791333,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577253
    },
    {
        "content": "<p>one point about validity that i always mention is teachability, how easy / hard will it be to explain to somebody what must always hold, validity wise.</p>",
        "id": 160791375,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577276
    },
    {
        "content": "<p>ok...so it does seem like we're ready to do writeups for validity</p>",
        "id": 160791490,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577336
    },
    {
        "content": "<blockquote>\n<p>hmm...i want to volunteer but i've been pretty swamped. i could create a db paper and share the link so that if i start and then get swamped, it doesn't get lost?</p>\n</blockquote>\n<p>seems like a good start =)</p>",
        "id": 160791493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577338
    },
    {
        "content": "<p>which is good to hear</p>",
        "id": 160791495,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577340
    },
    {
        "content": "<blockquote>\n<p>one point about validity that i always mention is teachability, how easy / hard will it be to explain to somebody what must always hold, validity wise.</p>\n</blockquote>\n<p>one question I have</p>",
        "id": 160791520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577351
    },
    {
        "content": "<p>hi all! sorry, I missed that mtg is 1h earlier today</p>",
        "id": 160791531,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>'s original wrote-up talked some about what it means for something to \"always\" hold</p>",
        "id": 160791540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577365
    },
    {
        "content": "<p>have we discussed that very much?</p>",
        "id": 160791547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577371
    },
    {
        "content": "<p>i don't think we have</p>",
        "id": 160791589,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577394
    },
    {
        "content": "<p>do we mean that for any execution of a program it will hold?</p>",
        "id": 160791662,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577411
    },
    {
        "content": "<p>(is there controversy?)</p>",
        "id": 160791666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577414
    },
    {
        "content": "<p>i think we kind of just accepted it, as in, if some invariant does not always need to hold, then it is not a validity invariant</p>",
        "id": 160791674,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577416
    },
    {
        "content": "<p>I find it kind of unclear in my head, somehow. but I guess it means, roughly, \"on every access\"</p>",
        "id": 160791727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577453
    },
    {
        "content": "<p>wdym \"any execution\"?</p>",
        "id": 160791732,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577458
    },
    {
        "content": "<p>i understood that they must hold even if there is no access</p>",
        "id": 160791798,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577482
    },
    {
        "content": "<p>if the program is non-deterministic, validity is like OOB or other kinds of UB... if there is a a way to make it happen, then it happens</p>",
        "id": 160791818,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577495
    },
    {
        "content": "<blockquote>\n<p>i understood that they hold even if there is no access</p>\n</blockquote>\n<p>the problem is defining what that means</p>",
        "id": 160791832,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577506
    },
    {
        "content": "<p>memory is not typed</p>",
        "id": 160791834,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577509
    },
    {
        "content": "<p>so only at an access do we have a type and a location and can verify that the memory at that location matches the type</p>",
        "id": 160791903,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577529
    },
    {
        "content": "<p>let b: bool = transmute(3); // === unreachable</p>",
        "id": 160791909,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577533
    },
    {
        "content": "<p>we have an issue about that...</p>",
        "id": 160791910,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577534
    },
    {
        "content": "<p>here: <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\">https://github.com/rust-lang/unsafe-code-guidelines/issues/84</a></p>",
        "id": 160791930,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> there is a bad access there: when the 3 gets written to <code>b</code> as type <code>bool</code></p>",
        "id": 160791962,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577568
    },
    {
        "content": "<p>so that one is UB even with an \"only at accesses\" model</p>",
        "id": 160791969,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577573
    },
    {
        "content": "<p>so are there different models of 'always'?</p>",
        "id": 160792008,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577597
    },
    {
        "content": "<p>(<code>=</code> is a typed operation, and it acts at type <code>bool</code> here)</p>",
        "id": 160792010,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> well look at <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\">https://github.com/rust-lang/unsafe-code-guidelines/issues/84</a></p>",
        "id": 160792020,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577612
    },
    {
        "content": "<p>I guess a \"tricky\" case might be if you had a <code>*mut T</code> pointing at some memory and you modified it (via some alias) to not be a  valid T, but you never use the reference again, right?</p>",
        "id": 160792026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577616
    },
    {
        "content": "<p>there are examples there of things that are not UB according to Miri or any model I have designed or seen so far</p>",
        "id": 160792054,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577630
    },
    {
        "content": "<p>anyway, I'll read ucg#84</p>",
        "id": 160792057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577631
    },
    {
        "content": "<p>but would be UB under some informal idea of \"always\"</p>",
        "id": 160792065,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577637
    },
    {
        "content": "<blockquote>\n<p>I guess a \"tricky\" case might be if you had a <code>*mut T</code> pointing at some memory and you modified it (via some alias) to not be a  valid T, but you never use the reference again, right?</p>\n</blockquote>\n<p>yeah that's exactly what the issue is about</p>",
        "id": 160792137,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577663
    },
    {
        "content": "<p>ah I remember <a href=\"https://github.com/rust-lang/rust/issues/84\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/84\">#84</a></p>",
        "id": 160792144,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577668
    },
    {
        "content": "<p>/me feels an existential crisis coming on</p>",
        "id": 160792148,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577669
    },
    {
        "content": "<p>why that?^^</p>",
        "id": 160792159,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577681
    },
    {
        "content": "<p>ps <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/84\">ucg#84</a> should work now as a shorthand</p>",
        "id": 160792163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577682
    },
    {
        "content": "<p>so this is tricky</p>",
        "id": 160792222,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577730
    },
    {
        "content": "<p>anyway we don't have to work out the details, I mostly wanted to ensure this question was not overlooked:)</p>",
        "id": 160792239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577743
    },
    {
        "content": "<p>(though we can also discuss, if there aren't other things)</p>",
        "id": 160792254,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577756
    },
    {
        "content": "<p>i would say the other thing would be (since we seem to be ready for writeups) WHAT'S NEXT</p>",
        "id": 160792345,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577784
    },
    {
        "content": "<p>PRs ?</p>",
        "id": 160792370,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577799
    },
    {
        "content": "<p>also this reminds me I still have to set up a sandbox for Zoom... or is there an opensource client?</p>",
        "id": 160792380,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"125253\">@Nicole Mazzuca</span> wanted to read the layout of array and we wanted to merge it afterwards if there weren't any issues</p>",
        "id": 160792431,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577834
    },
    {
        "content": "<blockquote>\n<p>i would say the other thing would be (since we seem to be ready for writeups) WHAT'S NEXT</p>\n</blockquote>\n<p>you mean after validity?</p>",
        "id": 160792434,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577838
    },
    {
        "content": "<p>yeah</p>",
        "id": 160792453,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577848
    },
    {
        "content": "<p>there's a lot of writeup still needing to be done, not sure if I am ready to look that far ahead^^</p>",
        "id": 160792465,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577855
    },
    {
        "content": "<p>ah, sorry, I did that and it read well</p>",
        "id": 160792471,
        "sender_full_name": "Nicole Mazzuca",
        "timestamp": 1552577858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> to be clear i'm not saying we're moving on yet, but we should start thinking about what the next topic should be</p>",
        "id": 160792528,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577882
    },
    {
        "content": "<p>also--who will be at rustconf?</p>",
        "id": 160792567,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552577893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126854\">@avadacatavra</span> once validity and layout are ironed out, we should probably have a sprint to polish the book, ideally in such a form that can be RFC'ed</p>",
        "id": 160792609,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577917
    },
    {
        "content": "<p>but I don't think we are there yet</p>",
        "id": 160792625,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552577927
    },
    {
        "content": "<p>yeah</p>",
        "id": 160792632,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577931
    },
    {
        "content": "<p>/me checks when RustConf is</p>",
        "id": 160792646,
        "sender_full_name": "RalfJ",
        "timestamp": 1552577941
    },
    {
        "content": "<p>One thing that comes to mind is that</p>",
        "id": 160792730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552577994
    },
    {
        "content": "<p>there may be value in pursuing stacked borrows more, not 100% sure what that means</p>",
        "id": 160792750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578002
    },
    {
        "content": "<p>so, i won't be at rustconf (my best friend is getting married). but if there's enough interest, i'll facilitate some wg face to face meetings</p>",
        "id": 160792804,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552578009
    },
    {
        "content": "<p>uh, RustConf overlaps witrh ICFP</p>",
        "id": 160792820,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578022
    },
    {
        "content": "<p>e.g., I was thinking about the controversy around NLL and two-phase borrows, which relates to stacked borrows</p>",
        "id": 160792821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578022
    },
    {
        "content": "<p>and with ICFP being in Berlin, I should really go there</p>",
        "id": 160792828,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578027
    },
    {
        "content": "<p>so I won't be at RustConf, I'm afraid</p>",
        "id": 160792836,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578032
    },
    {
        "content": "<p>does it make sense to tackle stacked borrows when we dont even have a memory model or a MIR model?</p>",
        "id": 160792910,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> pursuing stacked borrows more before the first RFC?</p>",
        "id": 160792919,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578088
    },
    {
        "content": "<p>also we have a couple open questions in the ucg repo</p>",
        "id": 160792999,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578125
    },
    {
        "content": "<p>and some more in the old repo (that we should migrate)</p>",
        "id": 160793012,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578131
    },
    {
        "content": "<p>i think it definetely makes sense to continue to pursue stacked borrows in miri, but I recall I had some questions about it that weren't easy to answer without a MIR model</p>",
        "id": 160793267,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578254
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> pursuing stacked borrows more before the first RFC?</p>\n</blockquote>\n<p>not as a blocker for first RFC</p>",
        "id": 160793283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578265
    },
    {
        "content": "<p>more as a \"next area to focus on\" <em>after</em> RFC</p>",
        "id": 160793295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578276
    },
    {
        "content": "<p>I'm not sure if that is the right thing though</p>",
        "id": 160793305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578281
    },
    {
        "content": "<p>re: ref/int; if we can disentangle them then maybe doing it the usual GH style is not actually so bad. but it might anyway be worth experimenting with dropbox paper</p>",
        "id": 160793471,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578374
    },
    {
        "content": "<p>I think that's the long term goal, so it makes sense to work out the steps required to get there</p>",
        "id": 160793477,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578378
    },
    {
        "content": "<p>like, if <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> did the struct/enum stuff there, that'd make it much easier for me to to drive-by fixes</p>",
        "id": 160793496,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578391
    },
    {
        "content": "<p>and paper has a \"comment\" thing, right?</p>",
        "id": 160793506,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578395
    },
    {
        "content": "<p>we should just try not to have technical discussions there</p>",
        "id": 160793561,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578425
    },
    {
        "content": "<p>they should be moved back to the existing or a new GH issue</p>",
        "id": 160793570,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578432
    },
    {
        "content": "<p>ok, so:<br>\n- meeting with lang team later today<br>\n- gnzlbg doing some writeups (enum, struct, array)<br>\n- i'll start the other one (int, refs, etc) and share a link<br>\n- stacked borrows next?<br>\n- work on RFC (what will this cover--draft in paper?)</p>",
        "id": 160793588,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552578442
    },
    {
        "content": "<p>and we often end up discussing technical stuff in the GH PR... hm</p>",
        "id": 160793591,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578445
    },
    {
        "content": "<p>that feels unavoidable, when there is a prototype of the spec new issues always show up</p>",
        "id": 160793812,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578552
    },
    {
        "content": "<blockquote>\n<p>i'll start the other one (int, refs, etc) and share a link</p>\n</blockquote>\n<p>cool! I figured I'd have to do that.^^</p>",
        "id": 160793868,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578597
    },
    {
        "content": "<blockquote>\n<p>that feels unavoidable, when there is a prototype of the spec new issues always show up</p>\n</blockquote>\n<p>yeah. and paper isn't very good for that.</p>",
        "id": 160793945,
        "sender_full_name": "RalfJ",
        "timestamp": 1552578612
    },
    {
        "content": "<p>so anything else ?</p>",
        "id": 160794006,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578643
    },
    {
        "content": "<p>/me needs more tea now</p>",
        "id": 160794028,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552578661
    },
    {
        "content": "<p>I just checked and travis-ci is disabled for the repo in the rust-lang/ org</p>",
        "id": 160794036,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578665
    },
    {
        "content": "<p>I can fix that, probably</p>",
        "id": 160794051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578676
    },
    {
        "content": "<blockquote>\n<p>and paper has a \"comment\" thing, right?</p>\n</blockquote>\n<p>I'm a big fan of paper's comment thing</p>",
        "id": 160794061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578682
    },
    {
        "content": "<blockquote>\n<p>we should just try not to have technical discussions there</p>\n</blockquote>\n<p>but yes this</p>",
        "id": 160794066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578687
    },
    {
        "content": "<p>i do all of my blog post drafting in paper now</p>",
        "id": 160794090,
        "sender_full_name": "avadacatavra",
        "timestamp": 1552578702
    },
    {
        "content": "<blockquote>\n<p>I just checked and travis-ci is disabled for the repo in the rust-lang/ org</p>\n</blockquote>\n<p>fixed</p>",
        "id": 160794325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578840
    },
    {
        "content": "<p>thanks</p>",
        "id": 160794370,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578845
    },
    {
        "content": "<p>although I probably have to edit the travis config</p>",
        "id": 160794379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578851
    },
    {
        "content": "<p>to add back the encrypted token thing</p>",
        "id": 160794388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552578857
    },
    {
        "content": "<p>yes :/</p>",
        "id": 160794402,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578872
    },
    {
        "content": "<p>i'd like to propose something for the next meeting: triaging all still open repr-issues. It seems to me that some of them are already fixed, some need fixing before an RFC, and some would require RFCs of their own.</p>",
        "id": 160794500,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552578949
    },
    {
        "content": "<p>I dont understand the distinction between the last two</p>",
        "id": 160794756,
        "sender_full_name": "RalfJ",
        "timestamp": 1552579078
    },
    {
        "content": "<blockquote>\n<p>i'd like to propose something for the next meeting: triaging all still open repr-issues. It seems to me that some of them are already fixed, some need fixing before an RFC, and some would require RFCs of their own.</p>\n</blockquote>\n<p>I like the idea of going over them, regardless.</p>",
        "id": 160794824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552579099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> for example we might want to guarantee further enum optimizations, but those don't need to be part of the first UCG RFC</p>",
        "id": 160794870,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552579141
    },
    {
        "content": "<p>as in the first UCG RFC documents what we already guarantee, but proposing new guaranteed enum layout optimizations might be better done on its own RFC</p>",
        "id": 160794926,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552579187
    },
    {
        "content": "<p>I see. so those would be issue we'd leave open for now, not blocking The RFC.</p>",
        "id": 160795195,
        "sender_full_name": "RalfJ",
        "timestamp": 1552579307
    },
    {
        "content": "<p>yes</p>",
        "id": 160795284,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552579334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so travis works again, is the GITHUB_TOKEN set up?</p>",
        "id": 160797007,
        "sender_full_name": "gnzlbg",
        "timestamp": 1552580424
    }
]