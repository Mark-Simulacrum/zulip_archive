[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I figured out why so many people think <code>stage0</code> means beta:</p>\n<p><a href=\"https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html?highlight=config.toml#bootstrapping\">https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html?highlight=config.toml#bootstrapping</a></p>\n<blockquote>\n<p>Stage 0: the stage0 compiler is usually (you can configure x.py to use something else) the current beta rustc compiler</p>\n</blockquote>",
        "id": 204603480,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595365960
    },
    {
        "content": "<p>I'll make a PR fixing it</p>",
        "id": 204603519,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595365994
    },
    {
        "content": "<p>I mean our terminology has been loose for ages</p>",
        "id": 204603537,
        "sender_full_name": "eddyb",
        "timestamp": 1595366006
    },
    {
        "content": "<p>\"the stage0 compiler\" is technically ambiguous and could be used to mean \"the compiler that compiles all of stage0\"</p>",
        "id": 204603649,
        "sender_full_name": "eddyb",
        "timestamp": 1595366051
    },
    {
        "content": "<p>rather than anything built at stage0</p>",
        "id": 204603683,
        "sender_full_name": "eddyb",
        "timestamp": 1595366059
    },
    {
        "content": "<p>so it's not \"simply wrong\", it's misleadingly ambiguous :P</p>",
        "id": 204603762,
        "sender_full_name": "eddyb",
        "timestamp": 1595366089
    },
    {
        "content": "<p>I mean, I would prefer it mean 'the thing I get when I run <code>x.py build --stage 0 src/rustc</code></p>",
        "id": 204603788,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366105
    },
    {
        "content": "<p>if you go looking you'll probably find stuff like that everywhere</p>",
        "id": 204603794,
        "sender_full_name": "eddyb",
        "timestamp": 1595366107
    },
    {
        "content": "<p>sure but that's not inherent in \"stage N compiler\"</p>",
        "id": 204603821,
        "sender_full_name": "eddyb",
        "timestamp": 1595366128
    },
    {
        "content": "<p>you have to be more specific either way IMO</p>",
        "id": 204603837,
        "sender_full_name": "eddyb",
        "timestamp": 1595366138
    },
    {
        "content": "<p>that's how people think of it though</p>",
        "id": 204603847,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366145
    },
    {
        "content": "<p>\"the compiler produced at/by X\" vs \"the compiler that compiles X\"</p>",
        "id": 204603905,
        "sender_full_name": "eddyb",
        "timestamp": 1595366166
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> it's not guaranteed which means we shouldn't use that phrasing IMO</p>",
        "id": 204603929,
        "sender_full_name": "eddyb",
        "timestamp": 1595366186
    },
    {
        "content": "<p>at least not in documentation</p>",
        "id": 204603940,
        "sender_full_name": "eddyb",
        "timestamp": 1595366196
    },
    {
        "content": "<p>some formulations just don't distinguish input from output clearly. and that's a \"feature\" of natural languages</p>",
        "id": 204603985,
        "sender_full_name": "eddyb",
        "timestamp": 1595366241
    },
    {
        "content": "<p>I think we should clarify we mean 'the compiler used to build stage0' then</p>",
        "id": 204604063,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366289
    },
    {
        "content": "<p>although I believe it's rather common for \"the X Yer\" to mean \"the Y who Ys X\" so the situation may be more ambiguous than you think</p>",
        "id": 204604068,
        "sender_full_name": "eddyb",
        "timestamp": 1595366291
    },
    {
        "content": "<p>leaving it ambiguous almost seems malicious :P</p>",
        "id": 204604076,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366297
    },
    {
        "content": "<p>I'd argue against even keeping the ambiguous phrasing unless it comes as a note that this may be how it's sometimes referred and a warning that it's ambiguous</p>",
        "id": 204604132,
        "sender_full_name": "eddyb",
        "timestamp": 1595366343
    },
    {
        "content": "<p>an example for what I was saying above: \"the truck driver\" means \"the driver who drives the truck\"</p>",
        "id": 204604182,
        "sender_full_name": "eddyb",
        "timestamp": 1595366387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> specifically what I think would be ideal is that the main language we use is unambiguous and anything else is an \"aside\" rather than go \"ambiguous thing (i.e. unambiguous explanation)\"</p>",
        "id": 204604301,
        "sender_full_name": "eddyb",
        "timestamp": 1595366459
    },
    {
        "content": "<p>well the docs certainly aren't using it in that sense</p>",
        "id": 204604316,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366471
    },
    {
        "content": "<p>because they mention 'stage3'</p>",
        "id": 204604324,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366475
    },
    {
        "content": "<blockquote>\n<p>(Optional) Stage 3: to sanity check our new compiler, we can build the libraries with the stage2 compiler. The result ought to be identical to before, unless something has broken.</p>\n</blockquote>",
        "id": 204604330,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595366482
    },
    {
        "content": "<p>so they're using it in both senses :)</p>",
        "id": 204604347,
        "sender_full_name": "eddyb",
        "timestamp": 1595366495
    },
    {
        "content": "<p>or are confused. or both!</p>",
        "id": 204604367,
        "sender_full_name": "eddyb",
        "timestamp": 1595366511
    },
    {
        "content": "<p>Could someone move this topic to wg-rustc-dev-guide? Maybe <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ?</p>",
        "id": 204617005,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595375907
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/The.20stages.20in.20rustc-dev-guide.20are.20wrong\">#t-compiler/major changes &gt; The stages in rustc-dev-guide are wrong</a> by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span></p>",
        "id": 204617022,
        "sender_full_name": "Notification Bot",
        "timestamp": 1595375928
    },
    {
        "content": "<p>actually it looks like the info is correct in <code># Stages of Bootstrap</code></p>",
        "id": 204617231,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595376116
    },
    {
        "content": "<p>in the wall of text nobody reads :P</p>",
        "id": 204617252,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595376123
    },
    {
        "content": "<p>what do people think about removing the mention of stages in 'how to build in run' almost entirely, linking instead to # Stages of Bootstrap, and then rewriting the wall of text?</p>",
        "id": 204617414,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595376255
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 204617815,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1595376684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> it gets worse, what does <code>// ignore-stage1</code> mean? according to the current guide it means \"don't build with the stage1 compiler\", but the guide actually referring to the stage0 compiler here. Is the syntax wrong, should it be <code>// ignore-stage0</code>? Or is it referring to the compiler it's <em>linked</em> to?</p>",
        "id": 204618760,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595377639
    },
    {
        "content": "<p>ok yes, <code>Config</code> in <code>compiletest::common</code> says it's the stage <em>being built</em></p>",
        "id": 204618883,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595377802
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> well, at least this one is easy: a <code>// ignore-stage1</code> test doesn't get tested when  you do <code>./x.py test --stage 1</code></p>",
        "id": 204619316,
        "sender_full_name": "eddyb",
        "timestamp": 1595378310
    },
    {
        "content": "<p>does <code>test --stage 1</code> run using <code>stage1</code> rustc?</p>",
        "id": 204619342,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378360
    },
    {
        "content": "<p>err sorry - does it run using the second rustc you build (<code>stage1</code>) or the first (<code>stage0</code>)?</p>",
        "id": 204619358,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378391
    },
    {
        "content": "<p>according to <code>--dry-run -v</code> it uses stage1</p>",
        "id": 204619426,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> it's what you're supposed to use for dev. it only depends on building rustc once</p>",
        "id": 204619442,
        "sender_full_name": "eddyb",
        "timestamp": 1595378463
    },
    {
        "content": "<p>it's the counterpart to <code>./x.py build --stage 1 src/libstd</code></p>",
        "id": 204619457,
        "sender_full_name": "eddyb",
        "timestamp": 1595378481
    },
    {
        "content": "<p>oh that's confusing <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 204619460,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378493
    },
    {
        "content": "<p>although it probably only works for some test suites</p>",
        "id": 204619469,
        "sender_full_name": "eddyb",
        "timestamp": 1595378501
    },
    {
        "content": "<p>so it does <em>less</em> work than <code>build --stage 1</code>?</p>",
        "id": 204619470,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378501
    },
    {
        "content": "<p>well, depends whether you let it run \"fulldeps\" stuff or not I guess</p>",
        "id": 204619494,
        "sender_full_name": "eddyb",
        "timestamp": 1595378522
    },
    {
        "content": "<p>so I should've been more precise</p>",
        "id": 204619526,
        "sender_full_name": "eddyb",
        "timestamp": 1595378532
    },
    {
        "content": "<p>what are fulldeps?</p>",
        "id": 204619536,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378553
    },
    {
        "content": "<p><code>./x.py test --stage 1 src/test/ui</code> only depends on <code>./x.py build --stage 1 src/libstd</code></p>",
        "id": 204619542,
        "sender_full_name": "eddyb",
        "timestamp": 1595378560
    },
    {
        "content": "<p>(I'd say <code>src/libtest</code> for accuraccy but that's kinda folded into <code>src/libstd</code> nowadays :P)</p>",
        "id": 204619552,
        "sender_full_name": "eddyb",
        "timestamp": 1595378580
    },
    {
        "content": "<p>fulldeps is mostly \"this needs to use <code>librustc_*</code> or some compiler dependency\"</p>",
        "id": 204619571,
        "sender_full_name": "eddyb",
        "timestamp": 1595378607
    },
    {
        "content": "<p>got it, they need to be linked to the compiler</p>",
        "id": 204619578,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378618
    },
    {
        "content": "<p>are those <em>built with</em> stage1 or only <em>linked to</em> it?</p>",
        "id": 204619588,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378630
    },
    {
        "content": "<p>to be clear, <code>test --stage N</code> will never look at <code>stageN+1</code> anything</p>",
        "id": 204619635,
        "sender_full_name": "eddyb",
        "timestamp": 1595378651
    },
    {
        "content": "<p>right, but <code>stage1</code> is the second compiler built <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 204619653,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378672
    },
    {
        "content": "<p>\"built with stage1\" is IMO ambiguous. there's building <em>at</em> or <em>during</em> a stage</p>",
        "id": 204619660,
        "sender_full_name": "eddyb",
        "timestamp": 1595378681
    },
    {
        "content": "<p>when I say 'built with stage1' assume I mean 'stage1 rustc'</p>",
        "id": 204619672,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378695
    },
    {
        "content": "<p>\"stage1 rustc\" is ambiguous</p>",
        "id": 204619684,
        "sender_full_name": "eddyb",
        "timestamp": 1595378704
    },
    {
        "content": "<p>in that it's not clear you mean input or output</p>",
        "id": 204619689,
        "sender_full_name": "eddyb",
        "timestamp": 1595378710
    },
    {
        "content": "<p>ugh not this again <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 204619690,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378711
    },
    {
        "content": "<p>I'm very serious</p>",
        "id": 204619695,
        "sender_full_name": "eddyb",
        "timestamp": 1595378716
    },
    {
        "content": "<p>I mean the thing made by <code>build --stage 1 src/rustc</code></p>",
        "id": 204619700,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378721
    },
    {
        "content": "<p>yes I know</p>",
        "id": 204619702,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378722
    },
    {
        "content": "<p>that's how we got into this mess in the first place</p>",
        "id": 204619704,
        "sender_full_name": "eddyb",
        "timestamp": 1595378723
    },
    {
        "content": "<p>okay so that's output. the libraries it's made up of are used only by fulldeps tests</p>",
        "id": 204619726,
        "sender_full_name": "eddyb",
        "timestamp": 1595378747
    },
    {
        "content": "<p>the actual <em>executable</em> is never used</p>",
        "id": 204619732,
        "sender_full_name": "eddyb",
        "timestamp": 1595378756
    },
    {
        "content": "<p>got it, so stage0 compiles the fulldeps tests and links them to stage1 (numbering by outputs)</p>",
        "id": 204619788,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378780
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 204619795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378784
    },
    {
        "content": "<p>i.e. the executable that ends up in <code>stage2/bin/rustc</code> will never be executed by pretty much any commands that contain <code>--stage 1</code></p>",
        "id": 204619803,
        "sender_full_name": "eddyb",
        "timestamp": 1595378801
    },
    {
        "content": "<p>at most it will be linked together</p>",
        "id": 204619812,
        "sender_full_name": "eddyb",
        "timestamp": 1595378812
    },
    {
        "content": "<p>btw if you want to be precise you can just say <code>stage1-rustc</code></p>",
        "id": 204619833,
        "sender_full_name": "eddyb",
        "timestamp": 1595378828
    },
    {
        "content": "<p>because I know exactly what that means</p>",
        "id": 204619842,
        "sender_full_name": "eddyb",
        "timestamp": 1595378836
    },
    {
        "content": "<p>in prose it would need a few more words than that though :P</p>",
        "id": 204619850,
        "sender_full_name": "eddyb",
        "timestamp": 1595378846
    },
    {
        "content": "<p>ah nice, that's helpful</p>",
        "id": 204619912,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378885
    },
    {
        "content": "<p>anyway yeah most test suites only depend on <code>stageN-std</code> (for <code>x.py test --stage N</code>), and I wish we pushed towards making <code>x.py test</code> do what I do with a very long command</p>",
        "id": 204619914,
        "sender_full_name": "eddyb",
        "timestamp": 1595378891
    },
    {
        "content": "<p>you mean have <code>src/test/ui</code> be the default filter?</p>",
        "id": 204619924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378915
    },
    {
        "content": "<p>I wish =))</p>",
        "id": 204619930,
        "sender_full_name": "eddyb",
        "timestamp": 1595378926
    },
    {
        "content": "<p><code>./x.py test --no-fail-fast --stage 1 src/test/{rustdoc,rustdoc-ui,mir-opt,codegen,codegen-units,incremental,pretty,debuginfo,compile-fail,run-make,ui}</code></p>",
        "id": 204619940,
        "sender_full_name": "eddyb",
        "timestamp": 1595378950
    },
    {
        "content": "<p>and that's missing tidy I guess</p>",
        "id": 204619946,
        "sender_full_name": "eddyb",
        "timestamp": 1595378956
    },
    {
        "content": "<p><em>oof</em></p>",
        "id": 204619959,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378964
    },
    {
        "content": "<p><code>--no-fail-fast</code> means one test suite having an error won't stop the whole thing (I basically want to treat it like a monolith)</p>",
        "id": 204619969,
        "sender_full_name": "eddyb",
        "timestamp": 1595378975
    },
    {
        "content": "<p>I don't know that that should be the default</p>",
        "id": 204619976,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378988
    },
    {
        "content": "<p>(and anyway we're getting off-topic, we should move back to the MCP)</p>",
        "id": 204619992,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595378997
    },
    {
        "content": "<p>anyway my point is, the \"correct\" maximal filter that doesn't need to start building <code>stage1-rustc</code>, is long</p>",
        "id": 204620100,
        "sender_full_name": "eddyb",
        "timestamp": 1595379073
    },
    {
        "content": "<p>and I wish fulldeps tests were \"optional\"</p>",
        "id": 204620112,
        "sender_full_name": "eddyb",
        "timestamp": 1595379085
    },
    {
        "content": "<p>also I'm not running any libstd tests as you can see</p>",
        "id": 204620117,
        "sender_full_name": "eddyb",
        "timestamp": 1595379092
    },
    {
        "content": "<p>(and I probably should)</p>",
        "id": 204620131,
        "sender_full_name": "eddyb",
        "timestamp": 1595379110
    },
    {
        "content": "<p>I think there's very few people running the full (-fulldeps -std) test suite though</p>",
        "id": 204620137,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379116
    },
    {
        "content": "<p>that takes like 15 minutes on my machine</p>",
        "id": 204620181,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379123
    },
    {
        "content": "<p>yeah but we don't want people to run <em>just</em> UI</p>",
        "id": 204620188,
        "sender_full_name": "eddyb",
        "timestamp": 1595379134
    },
    {
        "content": "<p>because there's a lot of important stuff that's relatively tiny compared to <code>src/test/ui</code></p>",
        "id": 204620192,
        "sender_full_name": "eddyb",
        "timestamp": 1595379151
    },
    {
        "content": "<p>why not? CI will catch the rest</p>",
        "id": 204620196,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379156
    },
    {
        "content": "<p>I mean, CI catches it, but it can be a waste of time</p>",
        "id": 204620198,
        "sender_full_name": "eddyb",
        "timestamp": 1595379161
    },
    {
        "content": "<p>it just sucks that people have to either waste a lot of time or do the silly thing I did</p>",
        "id": 204620237,
        "sender_full_name": "eddyb",
        "timestamp": 1595379200
    },
    {
        "content": "<p>also, like, that's my build command. I almost never run any command other than that</p>",
        "id": 204620254,
        "sender_full_name": "eddyb",
        "timestamp": 1595379218
    },
    {
        "content": "<p>I feel like it's pretty uncommon to have your change cause <em>unrelated</em> failures <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 204620257,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379225
    },
    {
        "content": "<p>ugh even the wall of text is wrong lol</p>",
        "id": 204620374,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379348
    },
    {
        "content": "<p>but that's why we have tests :P</p>",
        "id": 204620375,
        "sender_full_name": "eddyb",
        "timestamp": 1595379348
    },
    {
        "content": "<blockquote>\n<p>Note that the convention x.py uses is that:</p>\n</blockquote>\n<ul>\n<li>A \"stage N artifact\" is an artifact that is produced by the stage N compiler.</li>\n<li>The \"stage (N+1) compiler\" is assembled from \"stage N artifacts\".</li>\n<li>A --stage N flag means build with stage N.</li>\n</ul>",
        "id": 204620431,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379366
    },
    {
        "content": "<p>only the third point is arguably wrong</p>",
        "id": 204620447,
        "sender_full_name": "eddyb",
        "timestamp": 1595379387
    },
    {
        "content": "<p>like it's using \"stage N compiler\" to mean \"the compiler that compiles stage N\"</p>",
        "id": 204620464,
        "sender_full_name": "eddyb",
        "timestamp": 1595379408
    },
    {
        "content": "<p>that's a really confusing way to word it though :/</p>",
        "id": 204620488,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379431
    },
    {
        "content": "<p>and I think the third point shows that's not the intended use in the first two points</p>",
        "id": 204620500,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379453
    },
    {
        "content": "<p>\"build with stage N\" OTOH doesn't feel like it can be wrangled into meaning anything without conflating \"stage N\" with \"stage N compiler\"</p>",
        "id": 204620502,
        "sender_full_name": "eddyb",
        "timestamp": 1595379456
    },
    {
        "content": "<p>errr</p>",
        "id": 204620513,
        "sender_full_name": "eddyb",
        "timestamp": 1595379478
    },
    {
        "content": "<p>sorry, half of that sentence lost its meaning</p>",
        "id": 204620552,
        "sender_full_name": "eddyb",
        "timestamp": 1595379485
    },
    {
        "content": "<p>the convention I'm going to use is 'stageN rustc' belongs to stageN</p>",
        "id": 204620593,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379541
    },
    {
        "content": "<p>does that sound reasonable and accurate?</p>",
        "id": 204620598,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> basically I doubt anything is referring to <code>stageN-rustc</code> by \"stage N compiler\"</p>",
        "id": 204620604,
        "sender_full_name": "eddyb",
        "timestamp": 1595379557
    },
    {
        "content": "<p>maybe \"stage N rustc\" but not \"compiler\"</p>",
        "id": 204620613,
        "sender_full_name": "eddyb",
        "timestamp": 1595379572
    },
    {
        "content": "<p>the distinction matters even if it's technically ambiguous and I think it should be replaced</p>",
        "id": 204620624,
        "sender_full_name": "eddyb",
        "timestamp": 1595379590
    },
    {
        "content": "<p>well I'm replacing it now :P</p>",
        "id": 204620633,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379601
    },
    {
        "content": "<p>(it matters to picking what to replace it with without tearing everything down and rebuilding from scratch)</p>",
        "id": 204620677,
        "sender_full_name": "eddyb",
        "timestamp": 1595379603
    },
    {
        "content": "<p>basically just mass-replace \"stage N compiler\" with \"the compiler used to compile stage N\" and then rephrase where possible</p>",
        "id": 204620697,
        "sender_full_name": "eddyb",
        "timestamp": 1595379631
    },
    {
        "content": "<p>we can keep all the same behavior and numbering while changing the terminology in the guide, and I think we should</p>",
        "id": 204620701,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379637
    },
    {
        "content": "<p>don't just shift numbers around or change \"N\" to \"N-1\" because that doesn't remove the ambiguity</p>",
        "id": 204620717,
        "sender_full_name": "eddyb",
        "timestamp": 1595379658
    },
    {
        "content": "<p>here I'll make a WIP PR so you can see the changes</p>",
        "id": 204620737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379677
    },
    {
        "content": "<p>(it's not just N -&gt; N-1)</p>",
        "id": 204620742,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379681
    },
    {
        "content": "<p>I would also not use \"stageN rustc\" to refer to <code>stageN-rustc</code></p>",
        "id": 204620753,
        "sender_full_name": "eddyb",
        "timestamp": 1595379689
    },
    {
        "content": "<p>like I would use more words just so it's not misunderstandable as <code>stageN/bin/rustc</code></p>",
        "id": 204620769,
        "sender_full_name": "eddyb",
        "timestamp": 1595379708
    },
    {
        "content": "<p>sure, I'm doing that</p>",
        "id": 204620828,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595379740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/807\">https://github.com/rust-lang/rustc-dev-guide/pull/807</a></p>",
        "id": 204621098,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595380048
    },
    {
        "content": "<p>I guess the problem with my wording is there's not a simple word for 'the compiler used to compile stage N'</p>",
        "id": 204622332,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595381449
    },
    {
        "content": "<p>but I still think that's better than having any two of 'stage0 compiler', 'stage0 rustc', or <code>stage0-rustc</code> be different</p>",
        "id": 204622351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595381484
    },
    {
        "content": "<p>you don't need to use single words</p>",
        "id": 204622706,
        "sender_full_name": "eddyb",
        "timestamp": 1595382016
    },
    {
        "content": "<p>this is documentation, it can be long-winded</p>",
        "id": 204622711,
        "sender_full_name": "eddyb",
        "timestamp": 1595382024
    },
    {
        "content": "<p>anyway I left my own wall of text</p>",
        "id": 204622713,
        "sender_full_name": "eddyb",
        "timestamp": 1595382034
    },
    {
        "content": "<p>I really need to not get too distracted by this though :(</p>",
        "id": 204622718,
        "sender_full_name": "eddyb",
        "timestamp": 1595382049
    },
    {
        "content": "<p>I could spend weeks on this stuff</p>",
        "id": 204622721,
        "sender_full_name": "eddyb",
        "timestamp": 1595382055
    },
    {
        "content": "<p>just workshopping phrasings and things</p>",
        "id": 204622724,
        "sender_full_name": "eddyb",
        "timestamp": 1595382062
    },
    {
        "content": "<p>I don't want to say 'the compiler that's part of stageN' every  time I currently use 'stage N compiler' though :/</p>",
        "id": 204623131,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382675
    },
    {
        "content": "<p>like that's fine the first time but after the 5th time your eyes just glaze over</p>",
        "id": 204623135,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382688
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has ideas since he works a lot on bootstrap</p>",
        "id": 204623141,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382712
    },
    {
        "content": "<p>/me has never had much success with explaining stages</p>",
        "id": 204623197,
        "sender_full_name": "simulacrum",
        "timestamp": 1595382762
    },
    {
        "content": "<p>well, if you could glance over <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/807\">https://github.com/rust-lang/rustc-dev-guide/pull/807</a> anyway I'd appreciate it :)</p>",
        "id": 204623220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382831
    },
    {
        "content": "<p>really what I want to do is make <code>stage0-rustc</code>, 'stage0 rustc' and 'stage0 compiler' mean the same thing</p>",
        "id": 204623272,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382859
    },
    {
        "content": "<p>anything else is just too confusing</p>",
        "id": 204623275,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595382865
    },
    {
        "content": "<p>or I guess the other alternative is to rename <code>build/stageN</code> to <code>build/stageN-compiler</code>, so that you can see visually 'rustc' and 'compiler' means different things</p>",
        "id": 204623377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595383008
    },
    {
        "content": "<p>but that still seems confusing to me</p>",
        "id": 204623380,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595383013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> you can't <em>make</em> \"stage N compiler\" mean something</p>",
        "id": 204624136,
        "sender_full_name": "eddyb",
        "timestamp": 1595384012
    },
    {
        "content": "<p>it's going to confuse <em>someone</em> as long as we use fundamentally ambiguous language</p>",
        "id": 204624182,
        "sender_full_name": "eddyb",
        "timestamp": 1595384056
    },
    {
        "content": "<p>you can only assume it means something and hope the reader picks up on it or has it memorized</p>",
        "id": 204624189,
        "sender_full_name": "eddyb",
        "timestamp": 1595384081
    },
    {
        "content": "<blockquote>\n<p>it's going to confuse <em>someone</em> as long as we use fundamentally ambiguous language</p>\n</blockquote>\n<p>But people really want to say 'stageN compiler', whether they mean it as the input or output :/</p>\n<p>Maybe we can instead disambiguate what <code>--stage</code> means? <code>--stage-artifact</code> implies that you're building the artifacts <em>from</em> <code>build/stageN</code></p>",
        "id": 204625020,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> people saying it in informal conversation doesn't mean we have to use it in the docs</p>",
        "id": 204625163,
        "sender_full_name": "eddyb",
        "timestamp": 1595385681
    },
    {
        "content": "<p>Ok, how about this: we decide against ascribing meaning to 'stage' at all and only describe things in terms of the build directories <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 204625243,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385800
    },
    {
        "content": "<p>that could work</p>",
        "id": 204625247,
        "sender_full_name": "eddyb",
        "timestamp": 1595385813
    },
    {
        "content": "<p>(only half kidding)</p>",
        "id": 204625248,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385817
    },
    {
        "content": "<p>although it might be useful to rename <code>stageN</code> dirs to <code>stageN-sysroot</code></p>",
        "id": 204625252,
        "sender_full_name": "eddyb",
        "timestamp": 1595385827
    },
    {
        "content": "<p>or my favorite, <code>stage(N-1)toN</code></p>",
        "id": 204625260,
        "sender_full_name": "eddyb",
        "timestamp": 1595385837
    },
    {
        "content": "<p>Sure, if 'stage' doesn't have a meaning it makes sense not to have a directory with that name either</p>",
        "id": 204625307,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385859
    },
    {
        "content": "<p><code>rustc0/release/rustc</code> getting linked into <code>sysroot1/bin/rustc</code>,</p>",
        "id": 204625401,
        "sender_full_name": "eddyb",
        "timestamp": 1595385923
    },
    {
        "content": "<p>actually this might be closer to what GCC builds do lol</p>",
        "id": 204625408,
        "sender_full_name": "eddyb",
        "timestamp": 1595385939
    },
    {
        "content": "<p>So <code>build --stage N</code> means 'use <code>build/stageN</code> to create <code>build/stageN-component</code>'</p>",
        "id": 204625415,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385959
    },
    {
        "content": "<p>(in terms of just adding numbers or letters to things instead of something more verbose)</p>",
        "id": 204625453,
        "sender_full_name": "eddyb",
        "timestamp": 1595385964
    },
    {
        "content": "<p>This doesn't sound <em>too</em> bad</p>",
        "id": 204625462,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595385993
    },
    {
        "content": "<p>we could also use \"toolchain\" instead of \"sysroot\"</p>",
        "id": 204625470,
        "sender_full_name": "eddyb",
        "timestamp": 1595386012
    },
    {
        "content": "<p>Yeah I like toolchain</p>",
        "id": 204625473,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386020
    },
    {
        "content": "<p>For analogy with <code>rustup toolchain link</code></p>",
        "id": 204625481,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386036
    },
    {
        "content": "<p>right</p>",
        "id": 204625485,
        "sender_full_name": "eddyb",
        "timestamp": 1595386040
    },
    {
        "content": "<p>But now <code>build --stage N</code> means use <code>stageN-toolchain</code> to build stageN-component which is confusing again :/</p>",
        "id": 204625578,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386194
    },
    {
        "content": "<p>It seems like you should have the component already</p>",
        "id": 204625623,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386204
    },
    {
        "content": "<p>Oh wait I confused myself - stage1 libstd <em>is</em> part of the toolchain for stage1-toolchain</p>",
        "id": 204625648,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386248
    },
    {
        "content": "<p>Otherwise the stage1 rustc can't build programs that use std</p>",
        "id": 204625665,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386274
    },
    {
        "content": "<p>And now the only thing confusing is <code>build --stage N src/rustc</code></p>",
        "id": 204625679,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386301
    },
    {
        "content": "<p>Well, I guess it's an improvement</p>",
        "id": 204625683,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595386309
    },
    {
        "content": "<p>described this in more detail here: <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/807#issuecomment-662216183\">https://github.com/rust-lang/rustc-dev-guide/pull/807#issuecomment-662216183</a></p>",
        "id": 204626467,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595387502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I have a PR for you that doesn't require thinking about stages :P <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/808\">https://github.com/rust-lang/rustc-dev-guide/pull/808</a></p>",
        "id": 204626724,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595387840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/The.20stages.20in.20rustc-dev-guide.20are.20wrong/near/204625648\">said</a>:</p>\n<blockquote>\n<p>Oh wait I confused myself - stage1 libstd <em>is</em> part of the toolchain for stage1-toolchain</p>\n</blockquote>\n<p>eh I think more like it's made available through the sysroot, just to simplify the build process. we could probably do something else instead</p>",
        "id": 204639837,
        "sender_full_name": "eddyb",
        "timestamp": 1595405530
    },
    {
        "content": "<p>I'm just trying to document what we currently have :/</p>",
        "id": 204664534,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595424469
    },
    {
        "content": "<p>do you have a suggestion that's less confusing?</p>",
        "id": 204664549,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595424479
    }
]