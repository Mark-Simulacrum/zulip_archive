[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> so our toolstate seems to be in a constant state of breakage these days. The original intent of adding rustc-dev-guide to toolstate was to get more advanced warning that links are going to break soon and to have a way to track them back to the PRs that broke them</p>",
        "id": 193816855,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809424
    },
    {
        "content": "<p>However, we are seeing a lot of 429 errors from github and between that and caching and the fact that updating the submodule takes a long time sometimes, it's not clear that it's actually serving its purpose</p>",
        "id": 193816965,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809481
    },
    {
        "content": "<p>So the question now is: should we remove/disable it?</p>",
        "id": 193816987,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809497
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> and <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> too (who have been involved in the past)</p>",
        "id": 193817051,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809529
    },
    {
        "content": "<p>we are checking the same in our ci, right?</p>",
        "id": 193817524,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1586809802
    },
    {
        "content": "<p>sort of</p>",
        "id": 193817596,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809821
    },
    {
        "content": "<p>We run the same linkchecker in our CI</p>",
        "id": 193817611,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809832
    },
    {
        "content": "<p>maybe we should just update the submodule more frequently or at least close to the release and remove rustc-dev-guide from toolstate then?</p>",
        "id": 193817614,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1586809834
    },
    {
        "content": "<p>But when we run in our CI it is because the book changed; when we run in toolstate it is because something else changed</p>",
        "id": 193817655,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809865
    },
    {
        "content": "<p>We do run a cron job every day on travis</p>",
        "id": 193817698,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809896
    },
    {
        "content": "<p>We could try making the linkcheck cache expire more quickly so that we hopefully catch links sooner</p>",
        "id": 193817882,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586809972
    },
    {
        "content": "<p>Btw, if we don't run toolstate, is there any good reason to have a submodule at all?</p>",
        "id": 193817934,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586810013
    },
    {
        "content": "<p>Spurious and frequent toolstate change may also be noisy on other PRs :/ If we couldn't harden that, I'd +1 for removing/disabling.</p>",
        "id": 193833352,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1586819498
    },
    {
        "content": "<p>hmm, do you have examples of such failures?</p>",
        "id": 193863310,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1586852177
    },
    {
        "content": "<p>429 is github rate limiting us, we could implement a specialized version of linkchecker for github links that use the API to verify their existence (and with graphql that gives us basically infinite queries)</p>",
        "id": 193863399,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1586852242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> this one: <a href=\"https://github.com/rust-lang/rust/pull/70873\" title=\"https://github.com/rust-lang/rust/pull/70873\">https://github.com/rust-lang/rust/pull/70873</a></p>",
        "id": 193901228,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1586872902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/toolstate/near/193863399\" title=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/toolstate/near/193863399\">said</a>:</p>\n<blockquote>\n<p>429 is github rate limiting us, we could implement a specialized version of linkchecker for github links that use the API to verify their existence (and with graphql that gives us basically infinite queries)</p>\n</blockquote>\n<p>works for me</p>",
        "id": 193901526,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1586873015
    },
    {
        "content": "<p>hmm, we have a lot of kinds of links though</p>",
        "id": 193901750,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1586873082
    },
    {
        "content": "<p>i.e. they're not all \"PR 12345\"</p>",
        "id": 193901760,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1586873087
    },
    {
        "content": "<p>if y'all are already running linkcheck on the rustc dev guide repository I don't see much point in running it for every rustc PR tbh</p>",
        "id": 193902585,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1586873408
    },
    {
        "content": "<p>yeah, I feel it's an easier way to enhance rustc-dev-guide CI</p>",
        "id": 193905204,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1586874351
    },
    {
        "content": "<p>I think almost all of the links are to various things on github, but they are all to github pages iiuc (mainly to the rustdocs for the compiler)</p>",
        "id": 193933231,
        "sender_full_name": "mark-i-m",
        "timestamp": 1586886359
    },
    {
        "content": "<p>gh pages hosts compiler docs?</p>",
        "id": 193980881,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1586920419
    },
    {
        "content": "<p>I think quite a few are links to the code itself on gh. That was my experience when reviewing the waterfall of 429's when running locally.</p>",
        "id": 194298805,
        "sender_full_name": "Paul Faria",
        "timestamp": 1587041779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119529\">Tshepang Lekhonkhobe</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/toolstate/near/193980881\" title=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/toolstate/near/193980881\">said</a>:</p>\n<blockquote>\n<p>gh pages hosts compiler docs?</p>\n</blockquote>\n<p>I believe so, but I might be mixing things up... I think it goes through some weird mechanism to end up on docs.rlo, but I might be completely wrong... I would be pleasantly surprised if it was not so</p>",
        "id": 194316680,
        "sender_full_name": "mark-i-m",
        "timestamp": 1587048977
    },
    {
        "content": "<p>This is still a major annoyance...</p>",
        "id": 195786414,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588205917
    },
    {
        "content": "<p>There is a spurious failure every day</p>",
        "id": 195786451,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588205974
    },
    {
        "content": "<p>can't we disable from our current infraestructure and maybe have a more lightweight way of checking if links are working</p>",
        "id": 195894115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588277153
    },
    {
        "content": "<p>even maybe having a bot posting a message whenever there's something failing or something like that</p>",
        "id": 195895220,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588277647
    },
    {
        "content": "<p>Umm... isn't that what toolstate is?</p>",
        "id": 195898352,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588279278
    },
    {
        "content": "<p>I am starting to be strongly in favor of disabling toolstate, though</p>",
        "id": 195898407,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588279308
    },
    {
        "content": "<p>but I don't know what would be a better replacement</p>",
        "id": 195898424,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588279321
    },
    {
        "content": "<p>yes but github pings really bother imo</p>",
        "id": 195905716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282986
    },
    {
        "content": "<p>and you end being subscribed to issues</p>",
        "id": 195905750,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283004
    },
    {
        "content": "<p>opening a zulip topic without a ping or anything like that would bother less</p>",
        "id": 195905767,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283016
    },
    {
        "content": "<p>anyway +1 on disabling it</p>",
        "id": 195905773,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283022
    },
    {
        "content": "<p>I meant, whatever is ok in my opinion</p>",
        "id": 195905789,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283033
    },
    {
        "content": "<p>I'd prefer to avoid these github pings</p>",
        "id": 195905854,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283049
    },
    {
        "content": "<p>I personally prefer gh, but I think I'm very much in the minority in this...</p>",
        "id": 195918875,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588292602
    },
    {
        "content": "<p>ok, i will try to get around to making a PR to disable it at some point...</p>",
        "id": 195918889,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588292630
    },
    {
        "content": "<p>(unless someone else wants to)</p>",
        "id": 195918915,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588292642
    },
    {
        "content": "<p>do we want to replace it with something else? and should we keep the submodule around?</p>",
        "id": 195918967,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588292672
    },
    {
        "content": "<p>Michael prepared a workaround on the mdbook-linkcheck to avoid 429 errors: <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/721#issuecomment-634642834\">https://github.com/rust-lang/rustc-dev-guide/pull/721#issuecomment-634642834</a></p>",
        "id": 198904715,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1590591741
    },
    {
        "content": "<p>This seems like a worthwhile thing to try...</p>",
        "id": 198946686,
        "sender_full_name": "mark-i-m",
        "timestamp": 1590610483
    },
    {
        "content": "<p>Indeed, it would be interesting if some sort of retry-with-backoff mechanism could be built in to linkcheck, but I guess that would be future work</p>",
        "id": 198946750,
        "sender_full_name": "mark-i-m",
        "timestamp": 1590610521
    },
    {
        "content": "<p>Is anyone up to make a PR for this?</p>",
        "id": 198946886,
        "sender_full_name": "mark-i-m",
        "timestamp": 1590610577
    },
    {
        "content": "<p>problems are due to github rate limit?</p>",
        "id": 198950717,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590612283
    },
    {
        "content": "<p>have been playing with that and have code that reads the failures, sleep and retry</p>",
        "id": 198950821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590612346
    },
    {
        "content": "<p>but I'm not sure if that's what Michael has also done</p>",
        "id": 198950838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590612359
    },
    {
        "content": "<p>in any case, if someone is up to work on a PR for this let me know and I can share some code</p>",
        "id": 198950910,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590612377
    },
    {
        "content": "<p>The way linkcheck schedules the checking of web links is currently quite naive. It takes a stream of links and tries to resolve N links at a time. If it returns a non-successful status code (e.g. 4xx) then we'll assume it's broken and keep going (<a href=\"https://github.com/Michael-F-Bryan/linkcheck/blob/2f353b90e286cf6d881e42a5eb63e35c9ae096b2/src/validation/mod.rs#L62\">https://github.com/Michael-F-Bryan/linkcheck/blob/2f353b90e286cf6d881e42a5eb63e35c9ae096b2/src/validation/mod.rs#L62</a>)</p>",
        "id": 198981545,
        "sender_full_name": "Michael Bryan",
        "timestamp": 1590639854
    },
    {
        "content": "<p>I'd like to look into a smarter mechanism with things like retries or some sort of leaky bucket rate limiting mechanism which makes sure we don't hammer a single domain to rapidly</p>",
        "id": 198981632,
        "sender_full_name": "Michael Bryan",
        "timestamp": 1590639969
    },
    {
        "content": "<p>Mdbook-linkcheck also lets you attach headers to requests sent to certain domains, and the header itself can use environment variables... The thinking being you'd generate an API token for the CI server and that'd let you send more requests to the GitHub public site</p>",
        "id": 198981695,
        "sender_full_name": "Michael Bryan",
        "timestamp": 1590640152
    }
]