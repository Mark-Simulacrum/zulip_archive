[
    {
        "content": "<p>I am working on new <code>graphviz</code> diagrams for the Rustc Overview and pulled together a hackmd document for discussion about other areas of the Guide where we might support the text with additional visuals: <a href=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww\" target=\"_blank\" title=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww\">https://hackmd.io/24S8FCKTS2mp8zVOdrDjww</a> </p>\n<p>The graphviz sources and local build instructions are included.   You can also render / explore in real time right in hackmd or on <a href=\"https://sketchviz.com\" target=\"_blank\" title=\"https://sketchviz.com\">https://sketchviz.com</a>. </p>\n<p>Please don't hesitate to edit the current examples, add new proposals, or recommend additions that might be helpful in this thread.</p>",
        "id": 189448735,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583098462
    },
    {
        "content": "<p>I have recently tried to modify the method resolution part of the compiler, and was really confused, because I had no overall idea of how the system works, especially for diagnostics. So I think it deserves a schema</p>",
        "id": 189448976,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583098924
    },
    {
        "content": "<p>agreed on everything :)</p>",
        "id": 189515697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583170903
    },
    {
        "content": "<p>the diagrams look great</p>",
        "id": 189515764,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583170929
    },
    {
        "content": "<p>and yeah as <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> says this deserves a schema</p>",
        "id": 189515782,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583170946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> How do you suggest that we approach the work?  Edit in that document, reach consensus on how the diagram / visual should appear, then someone submit PR with it on the rustc-guide repo at which point we mark it as done in the hackmd document?</p>",
        "id": 189515934,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583171060
    },
    {
        "content": "<p>yeah I would totally do that</p>",
        "id": 189516206,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583171257
    },
    {
        "content": "<p>first reach consensus, edit the document and send a PR for wider reviews :)</p>",
        "id": 189516233,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583171280
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> Want to add the schema that you recommended yesterday?</p>",
        "id": 189516697,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583171559
    },
    {
        "content": "<p>I don't think I have enough knowledge on the topic for that</p>",
        "id": 189516743,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583171590
    },
    {
        "content": "<p>But I wouldn't mind diving deeper into the code to finally find out</p>",
        "id": 189516890,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583171655
    },
    {
        "content": "<p>Btw <span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> How did you plan to integrate the schemas to the book when they are ready? You will convert them to the SVG format, is this right? If so I think we should keep the source Graphviz graph somewhere on the repo to be able to easily edit them</p>",
        "id": 189517124,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583171784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189517124\" title=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189517124\">said</a>:</p>\n<blockquote>\n<p>Btw <span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> How did you plan to integrate the schemas to the book when they are ready? You will convert them to the SVG format, is this right? If so I think we should keep the source graph somewhere on the repo to be able to easily edit them</p>\n</blockquote>\n<p>Haven't planned that far ahead <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>  But yes, that will be straightforward if <code>.DOT</code> sources are acceptable in repo.  The sources are currently linked in github gists on the hackmd document.  </p>\n<p>Is there time to discuss this briefly as part of the WG-Learning meeting agenda this week <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> ?   If this seems like a good objective for one of our initial sprints, perhaps <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> (if interested) and I can work out details and pitch them to you</p>",
        "id": 189517803,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583172097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> </p>\n<blockquote>\n<p>You will convert them to the SVG format, is this right?</p>\n</blockquote>\n<p>graphviz supports many formats (png, jpg, svg, pdf).  This is something that we should definitely discuss before the first PR on the repository.  I haven't looked through other image types to see what is currently used, file size impact / image quality, raster vs. vector...</p>",
        "id": 189518338,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583172405
    },
    {
        "content": "<p>I see no reason to not accept <code>.dot</code> files in the repo. Those are text files, which do not carry much information (in the sense that it is Graphviz which converts them to an image), so they are very lightweight. <br>\nFor example, the <a href=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww?both#Fig-212-NEW-DIAGRAM-Stages-of-the-Compile-Process\" target=\"_blank\" title=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww?both#Fig-212-NEW-DIAGRAM-Stages-of-the-Compile-Process\">Stages of the Compile Process diagram</a> is only 913 chars long, which is more then 7 times lighter than the <code>SUMMARY.md</code>.</p>",
        "id": 189532158,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583180495
    },
    {
        "content": "<p>In fact, I think the question that stands now is, how do we convert the <code>.dot</code>s to exploitable images. Can we do it when building the book, for example? Would it be OK to add that dependency? etc...</p>",
        "id": 189532285,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583180565
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189532285\" title=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189532285\">said</a>:</p>\n<blockquote>\n<p>I see no reason to not accept .dot files in the repo. Those are text files, which do not carry much information (in the sense that it is Graphviz which converts them to an image), so they are very lightweight. <br>\nFor example, the Stages of the Compile Process diagram is only 913 chars long, which is more then 7 times lighter than the SUMMARY.md.</p>\n<p>In fact, I think the question that stands now is, how do we convert the <code>.dot</code>s to exploitable images. Can we do it when building the book, for example? Would it be OK to add that dependency? etc...</p>\n</blockquote>\n<p>agree with all of these comments.</p>",
        "id": 189534461,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583181988
    },
    {
        "content": "<p>we need to know who approves this</p>",
        "id": 189534888,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583182229
    },
    {
        "content": "<p>I'll dive into some CI research and file size investigations</p>",
        "id": 189535032,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583182323
    },
    {
        "content": "<p><del>I think that the rustc-guide is being manually built and pushed now?</del></p>",
        "id": 189535128,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583182382
    },
    {
        "content": "<p>I haven't ever dived into those details actually <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 189535178,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583182419
    },
    {
        "content": "<p>But as this is hosted on GitHub pages I think there is an automated process...?</p>",
        "id": 189535269,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583182449
    },
    {
        "content": "<p>It looks like there is a Github Action <a href=\"https://github.com/rust-lang/rustc-guide/deployments\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-guide/deployments\">https://github.com/rust-lang/rustc-guide/deployments</a></p>",
        "id": 189535286,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583182465
    },
    {
        "content": "<p>Mhh, this is what I thought</p>",
        "id": 189535407,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583182532
    },
    {
        "content": "<p>I don't see any static site build scripting though.  There is a CI dir with a shell script for line length linting in MD files</p>",
        "id": 189536234,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583182972
    },
    {
        "content": "<p>The MD files are transformed into HTML/CSS by <code>mdbook</code></p>",
        "id": 189536300,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183019
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/mdBook\" target=\"_blank\" title=\"https://github.com/rust-lang/mdBook\">https://github.com/rust-lang/mdBook</a>)</p>",
        "id": 189536521,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183154
    },
    {
        "content": "<p>I wonder where the <code>mdbook</code> build workflow lives</p>",
        "id": 189536636,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583183211
    },
    {
        "content": "<p>You could probably find an answer <a href=\"https://rust-lang.github.io/mdBook/\" target=\"_blank\" title=\"https://rust-lang.github.io/mdBook/\">here</a></p>",
        "id": 189536711,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183268
    },
    {
        "content": "<p><em>I'm actually peeling the docs too</em> <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 189536773,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183285
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>The build command is used to render your book:\n\nmdbook build\n\nIt will try to parse your SUMMARY.md file to understand the structure of your book and fetch the corresponding files.\n\nThe rendered output will maintain the same directory structure as the source for convenience. Large books will therefore remain structured when rendered.\n</pre></div>",
        "id": 189536817,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183310
    },
    {
        "content": "<p>Here are the docs on the <code>book.toml</code> config file: <a href=\"https://rust-lang.github.io/mdBook/format/config.html\" target=\"_blank\" title=\"https://rust-lang.github.io/mdBook/format/config.html\">https://rust-lang.github.io/mdBook/format/config.html</a></p>",
        "id": 189536864,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583183341
    },
    {
        "content": "<p>Idk if you can launch external processes though</p>",
        "id": 189536922,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183378
    },
    {
        "content": "<p>But I think that the image builds will live outside of the MD -&gt; html builds.  We would just need to point to the proper image file paths in the MD sources</p>",
        "id": 189536955,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583183400
    },
    {
        "content": "<p>I think that's correct</p>",
        "id": 189537028,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183425
    },
    {
        "content": "<p>I'll do some local tests</p>",
        "id": 189537103,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183474
    },
    {
        "content": "<p>I think I have a plan in mind</p>",
        "id": 189537700,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183727
    },
    {
        "content": "<p>We already have <code>src/img</code></p>",
        "id": 189537716,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183743
    },
    {
        "content": "<p>So we basically have two options:<br>\n1) We \"compile\" the <code>.dot</code>s manually on every change and store them here<br>\nor<br>\n2) We \"compile\" the <code>.dot</code>s on the CI build before running <code>mdbook</code> so we don't need to actually store them in the repo</p>",
        "id": 189537888,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Thoughts?</p>",
        "id": 189537908,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583183875
    },
    {
        "content": "<p>Does rebuilding image files that don't need to be rebuilt because there were no changes in the images interfere with browser image caching?</p>",
        "id": 189538316,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583184127
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> or <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> may know better here</p>",
        "id": 189538638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1583184318
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span>  I don't think <code>mdbook</code> ever deals with the server, thus the cache. It probably is the GitHub server realm, which I think should be OK with proper caching</p>",
        "id": 189538720,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583184365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> Heh... <a href=\"https://crates.io/crates/mdbook-graphviz\" target=\"_blank\" title=\"https://crates.io/crates/mdbook-graphviz\">https://crates.io/crates/mdbook-graphviz</a></p>",
        "id": 189538995,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583184546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> Ah! Very nice.  So we wouldn't need a separate build process for images.  We can just use the code in the hackmd Markdown source.  That would be ideal.  I believe that the only non-graphviz default is the typeface that is used for the nodes at the moment.  We would just need to choose one that is supported in the env where the build occurs.</p>",
        "id": 189539283,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583184718
    },
    {
        "content": "<p>I would not worry about browser image caches</p>",
        "id": 189539353,
        "sender_full_name": "simulacrum",
        "timestamp": 1583184739
    },
    {
        "content": "<p>(though I have no idea if our caching headers are good enough in practice)</p>",
        "id": 189539389,
        "sender_full_name": "simulacrum",
        "timestamp": 1583184770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Thoughts about an automated build approach for new diagram img files in the Rustc Guide?  We are pulling together graphviz .dot source files to support it in <a href=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww\" target=\"_blank\" title=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww\">https://hackmd.io/24S8FCKTS2mp8zVOdrDjww</a>.  <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> and I are interested in whether it would be appropriate to commit these img sources to the repository and create an automated img build approach with them as part of the existing GH Action static site build pipeline</p>",
        "id": 189539561,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583184887
    },
    {
        "content": "<p>I would prefer the raw sources, though we should avoid if possible a mandatory dependency on non-rust tools (e.g. graphviz) to avoid making contribution on (especially) non Linux platforms harder</p>",
        "id": 189539789,
        "sender_full_name": "simulacrum",
        "timestamp": 1583185057
    },
    {
        "content": "<p>Requiring graphviz or whatever to edit the raw sources is fine though - we may want to commit both the inputs and outputs if that's the case</p>",
        "id": 189539887,
        "sender_full_name": "simulacrum",
        "timestamp": 1583185114
    },
    {
        "content": "<p>That seems to argue for support via CI/CD?  Contributors could just edit the graphviz source files and push for updates?</p>",
        "id": 189539926,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583185150
    },
    {
        "content": "<p>So committing both the raw <code>.dot</code> and the output <code>.svg</code> or <code>.jpg</code> or whatever</p>",
        "id": 189539936,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583185156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189539926\" title=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189539926\">said</a>:</p>\n<blockquote>\n<p>That seems to argue for support via CI/CD?  Contributors could just edit the graphviz source files and push for updates?</p>\n</blockquote>\n<p>You mean, automatically added in a PR?</p>",
        "id": 189539954,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583185180
    },
    {
        "content": "<p>Platforms without graphviz availability might have more difficulty generating <em>new</em> images  or editing existing ones if they are reasonably detailed and require img views before a commit (though there are tools like <a href=\"https://sketchviz.com/\" target=\"_blank\" title=\"https://sketchviz.com/\">https://sketchviz.com/</a> and hackmd available as web apps to support views of graphviz sources). The build happens in the CD pipeline and is not tied to a local graphviz dependency.</p>",
        "id": 189540154,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583185321
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> Maybe add those concerns to the proposal HackMD?</p>",
        "id": 189543559,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1583187337
    },
    {
        "content": "<p>I'm a bit torn. I don't like committing artifacts, but I agree that we should not make graphviz mandatory to contribute...</p>",
        "id": 189548732,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583191745
    },
    {
        "content": "<p>Regarding the technical aspects, the .travis.yml can be used to invoke a post-test-success script before Travis pushes artifacts to gh pages</p>",
        "id": 189548753,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583191786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> <a href=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189543559\" title=\"#narrow/stream/196385-t-compiler.2Fwg-learning/topic/Proposal.3A.20New.20Rustc.20Guide.20Diagrams/near/189543559\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"262810\">Chris Simpkins</span> Maybe add those concerns to the proposal HackMD?</p>\n</blockquote>\n<p>Added to this section <a href=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww?both#Potential-Issues-with-this-Approach\" target=\"_blank\" title=\"https://hackmd.io/24S8FCKTS2mp8zVOdrDjww?both#Potential-Issues-with-this-Approach\">https://hackmd.io/24S8FCKTS2mp8zVOdrDjww?both#Potential-Issues-with-this-Approach</a></p>",
        "id": 189563433,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1583211061
    }
]