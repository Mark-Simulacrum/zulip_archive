[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/PgfxdZIrTEOQ5Mw_ZEEesA?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>: anything to share?</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> : anything to report?</li>\n</ul>",
        "id": 246084064,
        "sender_full_name": "apiraino",
        "timestamp": 1626350596
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; lets get the meeting started. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here.</p>",
        "id": 246097729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357630
    },
    {
        "content": "<p>We’ll start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 246097849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357674
    },
    {
        "content": "<p>Hmm. The compiler team calendar doesn’t reflect it (Yet!), but</p>",
        "id": 246098067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357739
    },
    {
        "content": "<p>tomorrow we do have a steering meeting, to discuss extensions to the review policy for Rust Compiler Pull Requests.</p>",
        "id": 246098130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357765
    },
    {
        "content": "<p>somehow I consistently fail to take care of doing both 1. updating calendar and 2. writing the Inside Rust blog post. :(</p>",
        "id": 246098181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357791
    },
    {
        "content": "<p>We're starting to design the Rust Annual Survey for 2021. We'd love to know what types of things that the compiler team is interested in finding out. I've created a document <a href=\"https://hackmd.io/@ryanlevick/rJFqnDV6O\">here</a> to capture ideas. This document is about capturing high-level questions we want to answer, not the specific questions that will be included in the survey itself. If you're interested in helping more with the survey visit us over in <a class=\"stream\" data-stream-id=\"294169\" href=\"/#narrow/stream/294169-t-community.2Frust-survey-2021\">#t-community/rust-survey-2021</a></p>",
        "id": 246098205,
        "sender_full_name": "rylev",
        "timestamp": 1626357803
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> !</p>",
        "id": 246098253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357829
    },
    {
        "content": "<p>also, tomorrows steering meeting on review policy is <a href=\"https://github.com/rust-lang/compiler-team/issues/444\">compiler-team#444</a></p>",
        "id": 246098321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> had the great idea of asking more about the privacy policy around the compiler gathering metrics (like ICEs). We'll definitely want to consider that</p>",
        "id": 246098328,
        "sender_full_name": "rylev",
        "timestamp": 1626357849
    },
    {
        "content": "<p>I'd like to also give a shoutout to <span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> who landed a PR in the last week to make <code>r? @rust-lang/compiler</code> reroll for a new random reviewer. </p>\n<p><a href=\"https://github.com/rust-lang/highfive/pull/249\">https://github.com/rust-lang/highfive/pull/249</a></p>",
        "id": 246098358,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626357861
    },
    {
        "content": "<p>I’m going to go ahead and start in on MCPS/FCPs, but I welcome people to continue chiming in with more announcements</p>",
        "id": 246098422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357900
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246098431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357905
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a> (last comment: 6 months ago)</li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comment: 5 months ago)</li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a> (last comment: about 34 days ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comment: about 13 days ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comment: about 13 days ago)</li>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">compiler-team#443</a> (last comment: about 13 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 246098488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357925
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a> </li>\n<li>\"Preserve, clarify, and extend debug information\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246098514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357937
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 246098548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357949
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking issue for <code>#![feature(maybe_uninit_extra,const_maybe_uninit_write)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/63567\">rust#63567</a> </li>\n<li>\"Tracking Issue for <code>array_map</code>\" <a href=\"https://github.com/rust-lang/rust/issues/75243\">rust#75243</a> </li>\n<li>\"Stabilize <code>impl From&lt;[(K, V); N]&gt; for HashMap</code> (and friends)\" <a href=\"https://github.com/rust-lang/rust/pull/84111\">rust#84111</a> </li>\n<li>\"Stabilize bindings_after_at\" <a href=\"https://github.com/rust-lang/rust/pull/85305\">rust#85305</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246098575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626357959
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246098328\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> had the great idea of asking more about the privacy policy around the compiler gathering metrics (like ICEs). We'll definitely want to consider that</p>\n</blockquote>\n<p>Cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ^</p>",
        "id": 246098728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358009
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 246098779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> / <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> : anything to report from <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> ?</p>",
        "id": 246098822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358047
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> </p>\n<blockquote>\n<p>We recently (last week) had an organizational meeting and reviewed various initiatives/projects that WG-traits is working on. These include: GATs, TAIT, rustc_type_ir, trait upcasting, salsa, Chalk, and fixing trait-related incremental bugs.<br>\nWe decided to no longer have a single weekly meeting, in favor of more targeted \"1:1\" meetings (as needed for each initiative). We will still be having a steering/organizational meeting once a month. We haven't decided if that'll take the same timeslot as the weekly meeting or change.<br>\nUpdates of individual initiatives:<br>\n<strong>GATs</strong><br>\nWe realized that in [#85499] (normalization under binders), we run into problems when we want to project but can't yet (i.e. <code>&lt;T as Trait&gt;::Foo&lt;'a&gt;</code>) and the associated type will <em>eventually</em> contain a bound var. So, for now, the plan is to fall back to no normalization when we don't have enough information to project. This still fixes the ICEs in [#62529], but results in some errors where we want to pass. Also split out [#86993] as a more minimal GATs-only change (which can be landed before, or skipped).<br>\n<strong>TAIT</strong><br>\nWe had a meeting and found that the implementation is still a bit wrong. There's a bit more work to do before stabilization of <code>min_type_alias_impl_trait</code>, including fixing a number of issues.<br>\n<strong>rustc_type_ir</strong><br>\nThere is an open PR [#86435] to begin moving major types (like <code>TyKind</code>) into <code>rustc_type_ir</code> and out of <code>rustc_middle</code>. Blocked on some lifetime variance (probably) issues that need to be looked into.<br>\n<strong>trait upcasting</strong><br>\nThere is an open PR [#86461] to refactor the vtable format and a bigger PR [#86264] that is being split out into smaller PRs.<br>\n<strong>salsa, Chalk</strong><br>\n[chalk#708] got merged, which reworks the recursive solver to be prepare to use salsa for fixed-point iteration.<br>\n<strong>incremental ICEs trait work</strong><br>\nThere are <a href=\"#narrow/stream/144729-wg-traits/topic/subobligations.20and.20ICEs.20.2385868/near/245066992\">3 approaches</a> open to solve the <code>evaluate_obligation</code> incremental issue, but each have a moderate perf impact. They need to be reviewed to pick the best solution.</p>\n</blockquote>\n<p>[#62529]: <a href=\"https://github.com/rust-lang/rust/issues/62529\">https://github.com/rust-lang/rust/issues/62529</a><br>\n[#85499]: <a href=\"https://github.com/rust-lang/rust/pull/85499\">https://github.com/rust-lang/rust/pull/85499</a><br>\n[#86264]: <a href=\"https://github.com/rust-lang/rust/pull/86264\">https://github.com/rust-lang/rust/pull/86264</a><br>\n[#86435]: <a href=\"https://github.com/rust-lang/rust/pull/86435\">https://github.com/rust-lang/rust/pull/86435</a><br>\n[#86461]: <a href=\"https://github.com/rust-lang/rust/pull/86461\">https://github.com/rust-lang/rust/pull/86461</a><br>\n[#86993]: <a href=\"https://github.com/rust-lang/rust/pull/86993\">https://github.com/rust-lang/rust/pull/86993</a><br>\n[chalk#708]: <a href=\"https://github.com/rust-lang/chalk/pull/708\">https://github.com/rust-lang/chalk/pull/708</a></p>",
        "id": 246098882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358073
    },
    {
        "content": "<p>(hmm, sorry y’all, that wasn’t formatted in a way zulip handles well)</p>",
        "id": 246098993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358107
    },
    {
        "content": "<p>Sorry everyone, long checkin</p>",
        "id": 246098994,
        "sender_full_name": "Jack Huey",
        "timestamp": 1626358107
    },
    {
        "content": "<p>oops</p>",
        "id": 246099033,
        "sender_full_name": "Jack Huey",
        "timestamp": 1626358124
    },
    {
        "content": "<p>(no worries, it looks great in the agenda)</p>",
        "id": 246099110,
        "sender_full_name": "apiraino",
        "timestamp": 1626358159
    },
    {
        "content": "<p>Normally I’d edit it to fix, but I think I’m better off just moving along with the mtg. (And to my knowledge no one else has edit permissions on my msg)</p>",
        "id": 246099117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358162
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 246099165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358183
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Don't use gc-sections with profile-generate.\" <a href=\"https://github.com/rust-lang/rust/pull/87004\">rust#87004</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"309977\">@Jamie Cunliffe</span> </li>\n<li>nomination proposed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> as this should fix <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a>, preferably to be shipped in 1.54 a <code>P-critical</code> regression on AArch64 target</li>\n<li>Some PGO tests are failing on Windows (see <a href=\"https://github.com/rust-lang/rust/pull/87004#issuecomment-879157185\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 246099199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358195
    },
    {
        "content": "<p>this might be a bit premature, in terms of consideration, but could use more insight potentially</p>",
        "id": 246099278,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358212
    },
    {
        "content": "<p>(the implementation is not yet really working, AFAICT)</p>",
        "id": 246099309,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358226
    },
    {
        "content": "<p>but as it's fixing a p-critical issue, may be worth some attention regardless; not sure how much it makes sense to discuss in-meeting though.</p>",
        "id": 246099377,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358254
    },
    {
        "content": "<p>Its good to draw attention to the PR</p>",
        "id": 246099401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358265
    },
    {
        "content": "<p>but yeah, it does not make sense to discuss backport nomination at this point</p>",
        "id": 246099436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358278
    },
    {
        "content": "<p>I'll be looking into PGO related stuff next week, maybe I can help</p>",
        "id": 246099464,
        "sender_full_name": "mw",
        "timestamp": 1626358290
    },
    {
        "content": "<p>release is in two weeks</p>",
        "id": 246099470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358294
    },
    {
        "content": "<p>so if we’re going to back port this, we’ll want to do it next week</p>",
        "id": 246099509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358311
    },
    {
        "content": "<p>Is this really P-critical?</p>",
        "id": 246099603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358336
    },
    {
        "content": "<p>nature of failure is pretty bad</p>",
        "id": 246099626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358345
    },
    {
        "content": "<p>we didn't reach a conclusion last week</p>",
        "id": 246099635,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246099626\">said</a>:</p>\n<blockquote>\n<p>nature of failure is pretty bad</p>\n</blockquote>\n<p>or … is it? can’t easily tell.</p>",
        "id": 246099693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358370
    },
    {
        "content": "<p>I think per policy if it isn't we should be adding a note to the tier/platform support page in rustc book with a \"tier 1 except for PGO\" or something.</p>",
        "id": 246099750,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358393
    },
    {
        "content": "<p>Yeah I agree, we need consistency on this point</p>",
        "id": 246099785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358411
    },
    {
        "content": "<p>but the bar for P-critical-ness is “should it block release” (or its supposed to be that, at least)</p>",
        "id": 246099807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358421
    },
    {
        "content": "<p>I’m having a hard time stomaching blocking release on this</p>",
        "id": 246099850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358436
    },
    {
        "content": "<p>It looks to me like the PGO data just doesn't get attached to the LLVM IR. Given that this isn't a correctness issue, \"just\" a performance one, this doesn't seem P-critical to me either.</p>",
        "id": 246099934,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626358457
    },
    {
        "content": "<p>I think it's pretty clear we're not delaying a release because of this. I don't know what would have to happen for an individual bug to be worth blocking a release over (but not, e.g., nightlies, etc.)</p>",
        "id": 246099949,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358463
    },
    {
        "content": "<p>so I'm not sure \"release blocker\" is <em>quite</em> right</p>",
        "id": 246099983,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358481
    },
    {
        "content": "<p>but in any case, I have no particularly strong opinion</p>",
        "id": 246100006,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you mean in terms of how we define “P-critical” ? I can see what you mean, in that its not clear what bugs we’ve had that would block a release</p>",
        "id": 246100043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358507
    },
    {
        "content": "<p>in practice</p>",
        "id": 246100046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358510
    },
    {
        "content": "<p>yeah</p>",
        "id": 246100058,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358514
    },
    {
        "content": "<p>I would vote for P-high as it does seem important to some of our users and there has been movement on resolving it.</p>",
        "id": 246100063,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626358516
    },
    {
        "content": "<p>P-high sgtm</p>",
        "id": 246100090,
        "sender_full_name": "mw",
        "timestamp": 1626358528
    },
    {
        "content": "<p>but I think that’s in part because the bugs that are truly release-blockers actually get fixed. :)</p>",
        "id": 246100096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358530
    },
    {
        "content": "<p>To confirm, there is no crash or anything with this bug present, right?</p>",
        "id": 246100150,
        "sender_full_name": "mw",
        "timestamp": 1626358555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246099750\">said</a>:</p>\n<blockquote>\n<p>I think per policy if it isn't we should be adding a note to the tier/platform support page in rustc book with a \"tier 1 except for PGO\" or something.</p>\n</blockquote>\n<p>If we do downgrade to P-high, then we should still take action on this point that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> made here.</p>",
        "id": 246100222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358570
    },
    {
        "content": "<p>it's just that PGO will have less data available for optimizations?</p>",
        "id": 246100234,
        "sender_full_name": "mw",
        "timestamp": 1626358575
    },
    {
        "content": "<p>it's my impression that's the case, yes, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 246100327,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> that is my current understanding, but that is also based solely on cursory examination of the issue text and comment thread.</p>",
        "id": 246100328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358621
    },
    {
        "content": "<p>linker is likely stripping some PGO symbols</p>",
        "id": 246100353,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358631
    },
    {
        "content": "<p>Okay, so, action items: <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you think you’ll have time to help with this next week?</p>",
        "id": 246100397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358649
    },
    {
        "content": "<p>the PR attempting to fix it uncovered a crash with -Clink-dead-code on stable, but that's a separate problem -- we don't have an issue yet</p>",
        "id": 246100413,
        "sender_full_name": "simulacrum",
        "timestamp": 1626358656
    },
    {
        "content": "<p>Yes, I think so</p>",
        "id": 246100418,
        "sender_full_name": "mw",
        "timestamp": 1626358658
    },
    {
        "content": "<p>I can own downgrade to P-high and updates to tier/platform support page.</p>",
        "id": 246100467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358677
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 246100608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358735
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 246100619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358743
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 246100639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358751
    },
    {
        "content": "<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/rust/pull/84373\">rust#84373</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> </li>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> called on team review as it may be interesting to be merged to move forward <a href=\"https://github.com/rust-lang/rust/issues/35148#issuecomment-879839839\">rust#35148</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246100658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358761
    },
    {
        "content": "<p>wg-incr-comp has been pretty dormant but it seems like they are best owners of this</p>",
        "id": 246100782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358809
    },
    {
        "content": "<p>relevant MCP is <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">compiler-team#443</a></p>",
        "id": 246100855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358848
    },
    {
        "content": "<p>I don’t think team as whole needs to worry though</p>",
        "id": 246100904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , lets maybe you and I plan to talk  about how to get wg-incr-comp moving again. I bet <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> will want to help with that too, if they have time.</p>",
        "id": 246100983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358906
    },
    {
        "content": "<p>(I’ll follow up with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> outside of meeting for that.)</p>",
        "id": 246101037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246100983\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> , lets maybe you and I plan to talk  about how to get wg-incr-comp moving again. I bet <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> will want to help with that too, if they have time.</p>\n</blockquote>\n<p>(I'd love to learn more here too)</p>",
        "id": 246101084,
        "sender_full_name": "rylev",
        "timestamp": 1626358926
    },
    {
        "content": "<p>I am also available to help.</p>",
        "id": 246101133,
        "sender_full_name": "cjgillot",
        "timestamp": 1626358948
    },
    {
        "content": "<p>:)</p>",
        "id": 246101191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358974
    },
    {
        "content": "<p>Always happy when PR authors are available to help</p>",
        "id": 246101212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626358988
    },
    {
        "content": "<p>we should aim to merge this after the beta cutoff (if we decide to merge it)</p>",
        "id": 246101222,
        "sender_full_name": "mw",
        "timestamp": 1626358992
    },
    {
        "content": "<p>(though it is under -Z flag, so risk is somewhat reduced there, no? Assuming -Z guards are correct, mainly.)</p>",
        "id": 246101275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246101212\">said</a>:</p>\n<blockquote>\n<p>Always happy when PR authors are available to help</p>\n</blockquote>\n<p>I mean with the wg more generally :)</p>",
        "id": 246101296,
        "sender_full_name": "cjgillot",
        "timestamp": 1626359027
    },
    {
        "content": "<p>Though I guess maybe performance is a concern that -Z won’t help with</p>",
        "id": 246101300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359028
    },
    {
        "content": "<p>next PR S-waiting-on-team</p>",
        "id": 246101380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359050
    },
    {
        "content": "<ul>\n<li>\"Wrap libraries in linker groups, allowing backwards/circular references\" <a href=\"https://github.com/rust-lang/rust/pull/85805\">rust#85805</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> </li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> </li>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> self-assigned for review, expressed idea to reconsider this PR <a href=\"https://github.com/rust-lang/rust/pull/85805#issuecomment-868825690\">in 6-12 months</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246101383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359051
    },
    {
        "content": "<p>whoa</p>",
        "id": 246101406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359062
    },
    {
        "content": "<p>does this need an MCP ?</p>",
        "id": 246101458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359087
    },
    {
        "content": "<p>Anyway it seems like it is getting active discussion</p>",
        "id": 246101563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359149
    },
    {
        "content": "<p>or at least, bjorn3 looked at it a week ago</p>",
        "id": 246101604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359164
    },
    {
        "content": "<p>My gut instinct is that this is enough of a change that it should get visibility via an MCP</p>",
        "id": 246101706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359201
    },
    {
        "content": "<p>I invite counter-argument, but I want to move along in meeting. So just speak up if you want to revisit this at end of meeting.</p>",
        "id": 246101806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359237
    },
    {
        "content": "<p>This seems potentially troublesome in that it disallows _certain_ use-cases.</p>",
        "id": 246101814,
        "sender_full_name": "nagisa",
        "timestamp": 1626359240
    },
    {
        "content": "<p>yeah, lets move on ^^</p>",
        "id": 246101829,
        "sender_full_name": "nagisa",
        "timestamp": 1626359246
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">3 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">80 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">54 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 3 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 45 P-high, 83 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 246101849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359252
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 246101867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359258
    },
    {
        "content": "<ul>\n<li>\"run-make-fulldeps/pgo-branch-weights fails on AArch64 Linux\" <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a> <ul>\n<li>only fails on aarch64 arm</li>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-08.20.2354818/near/245320262\">last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/78226#issuecomment-866299280\">comments</a> that tests for this are disabled but a fix for 1.54 would be good</li>\n<li>being investigated by <span class=\"user-mention\" data-user-id=\"309977\">@Jamie Cunliffe</span> <a href=\"https://github.com/rust-lang/rust/issues/78226#issuecomment-868570487\">see comment</a> </li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>has beta-nominated <a href=\"https://github.com/rust-lang/rust/pull/87004\">rust#87004</a> to fix this</li>\n</ul>\n</li>\n</ul>",
        "id": 246101893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359269
    },
    {
        "content": "<p>we discussed this above and assigned action items</p>",
        "id": 246101915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359278
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-08.20.2354818/near/245321885\">last week</a></li>\n<li>general feeling is to re-enable incr-comp again in 1.54</li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is working on some performance improvements to handling of projection predicates</li>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> reported that errors are looking useful enough</li>\n</ul>\n</li>\n</ul>",
        "id": 246101973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359287
    },
    {
        "content": "<p>What's the state of this?</p>",
        "id": 246102027,
        "sender_full_name": "mw",
        "timestamp": 1626359307
    },
    {
        "content": "<p>I’m skimming the summary table now</p>",
        "id": 246102040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359314
    },
    {
        "content": "<p>we are getting pretty close to release, right? the summary table doesn't look that good, actually. Is it up to date?</p>",
        "id": 246102096,
        "sender_full_name": "mw",
        "timestamp": 1626359334
    },
    {
        "content": "<p>well, summary table doesn’t include actual impact of each issue</p>",
        "id": 246102140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359351
    },
    {
        "content": "<p>because … we don’t know it</p>",
        "id": 246102158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359358
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/pull/86946\">https://github.com/rust-lang/rust/pull/86946</a> is still waiting on review, but it doesn't appear to help much (or at all) with the perf regressions from the evaluate_obligation fix</p>",
        "id": 246102164,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359363
    },
    {
        "content": "<p>the evaluate_obligation fix already landed, right?</p>",
        "id": 246102340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359421
    },
    {
        "content": "<p>The <code>native_libraries</code> problem is fixed, right? (in <a href=\"https://github.com/rust-lang/rust/issues/85702\">#85702</a>?)</p>",
        "id": 246102347,
        "sender_full_name": "mw",
        "timestamp": 1626359423
    },
    {
        "content": "<p>Yes</p>",
        "id": 246102437,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359452
    },
    {
        "content": "<p>okay so there’s some metadata to update perhaps</p>",
        "id": 246102464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359463
    },
    {
        "content": "<p>Or at least, no one has come across it since the fix I landed</p>",
        "id": 246102478,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359467
    },
    {
        "content": "<p>I was never able to reproduce the original issue</p>",
        "id": 246102504,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359477
    },
    {
        "content": "<p>But investigating it led me to find and fix a couple bugs</p>",
        "id": 246102536,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359487
    },
    {
        "content": "<p>Does <a href=\"https://github.com/rust-lang/rust/issues/85702\">#85702</a> need a backport?</p>",
        "id": 246102545,
        "sender_full_name": "mw",
        "timestamp": 1626359490
    },
    {
        "content": "<p>Which were most likely the cause</p>",
        "id": 246102556,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359493
    },
    {
        "content": "<p>Github claims PR <a href=\"https://github.com/rust-lang/rust/issues/85702\">#85702</a> is milestoned for 1.54</p>",
        "id": 246102582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359504
    },
    {
        "content": "<p>Looks like  <a href=\"https://github.com/rust-lang/rust/issues/85702\">#85702</a> is in 1.54 which is the next version to ship on stable.</p>",
        "id": 246102602,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626359513
    },
    {
        "content": "<p>Man, I don't understand this milestone stuff :)</p>",
        "id": 246102678,
        "sender_full_name": "mw",
        "timestamp": 1626359533
    },
    {
        "content": "<p>Thanks for asking though since it is important we don't make that mistake again! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 246102706,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626359545
    },
    {
        "content": "<p>I’m personally willing to move forward with reenabling incr-comp</p>",
        "id": 246102740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359557
    },
    {
        "content": "<p>Do we have fixes for <a href=\"https://github.com/rust-lang/rust/issues/84963\">#84963</a> that haven't landed yet?</p>",
        "id": 246102804,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626359586
    },
    {
        "content": "<p>I don't see any PRs linked from that issue.</p>",
        "id": 246102849,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626359606
    },
    {
        "content": "<p>No</p>",
        "id": 246102871,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359613
    },
    {
        "content": "<p>I've been meaning to work on it</p>",
        "id": 246102883,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359620
    },
    {
        "content": "<p>Incr comp was always on in nightly, right?</p>",
        "id": 246102912,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626359634
    },
    {
        "content": "<p>However, it can be trivially solved by bumping the recursion limit</p>",
        "id": 246102976,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> yeah, nightly and beta both</p>",
        "id": 246102983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359651
    },
    {
        "content": "<p>Only stable had it turned off</p>",
        "id": 246102992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359657
    },
    {
        "content": "<p>So I think the other evaluate_obligation issue is much more important</p>",
        "id": 246103014,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> Does your recent PR around global limits fix this?</p>",
        "id": 246103043,
        "sender_full_name": "mw",
        "timestamp": 1626359677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246103014\">said</a>:</p>\n<blockquote>\n<p>So I think the other evaluate_obligation issue is much more important</p>\n</blockquote>\n<p>by this, do you mean <a href=\"https://github.com/rust-lang/rust/issues/85360\">#85360</a> ?</p>",
        "id": 246103072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I'll check, but I don't think so</p>",
        "id": 246103128,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359715
    },
    {
        "content": "<p>This issue occurs when you keep the limit the same</p>",
        "id": 246103150,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359726
    },
    {
        "content": "<p>OK</p>",
        "id": 246103171,
        "sender_full_name": "mw",
        "timestamp": 1626359739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think I'll end up moving the linker group PR to draft for now. Will that take it off your radar, or does it need a label change as well?</p>",
        "id": 246103174,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1626359742
    },
    {
        "content": "<p>because caching can allow things to succeed that would otherwise overflow</p>",
        "id": 246103186,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246103174\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> I think I'll end up moving the linker group PR to draft for now. Will that take it off your radar, or does it need a label change as well?</p>\n</blockquote>\n<p>probably label change is necessary too. But also: we may want it on our radar, just in a different form (i.e. an MCP) ?</p>",
        "id": 246103287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359785
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246103014\">said</a>:</p>\n<blockquote>\n<p>So I think the other evaluate_obligation issue is much more important</p>\n</blockquote>\n<p>Do you consider this a potential blocker for re-enabling?</p>",
        "id": 246103371,
        "sender_full_name": "mw",
        "timestamp": 1626359821
    },
    {
        "content": "<p>(which one is it exactly?)</p>",
        "id": 246103409,
        "sender_full_name": "mw",
        "timestamp": 1626359833
    },
    {
        "content": "<p>It's more that given the (slight) performance tradeoff, I don't feel like I have the bandwidth to make the case for it right now.</p>",
        "id": 246103417,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1626359836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> gotcha.</p>",
        "id": 246103434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359843
    },
    {
        "content": "<p>If we <em>do</em> disable incr-comp for 1.54</p>",
        "id": 246103468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I think it should hopefully be rare enough in practice to not cause issues</p>",
        "id": 246103481,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359867
    },
    {
        "content": "<p>But I'm not certain</p>",
        "id": 246103493,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626359872
    },
    {
        "content": "<p>I think we need to start talking about whether it should be turned off for beta too</p>",
        "id": 246103501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359876
    },
    {
        "content": "<p>(and nightly?)</p>",
        "id": 246103509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359881
    },
    {
        "content": "<p>i.e. I’m certain the release team is unhappy about any last minute patches after doing the beta to stable promotion</p>",
        "id": 246103590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359910
    },
    {
        "content": "<p>and in general, its just not great form to have a beta with a user experience that significantly differs from stable</p>",
        "id": 246103643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359937
    },
    {
        "content": "<p>I think it's a bad idea, we'd be cutting ourselves from the only signal of wether our fixes are actually having an impact for real users</p>",
        "id": 246103660,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626359947
    },
    {
        "content": "<p>I'm confused :) What are we talking about?</p>",
        "id": 246103706,
        "sender_full_name": "mw",
        "timestamp": 1626359962
    },
    {
        "content": "<p>Okay, there’s a couple different threads here</p>",
        "id": 246103752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> said another evaluate_obligation bug is more important</p>",
        "id": 246103780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626359996
    },
    {
        "content": "<p>we’re still looking for confirmation that Aaron was referring to <a href=\"https://github.com/rust-lang/rust/issues/85360\">#85360</a></p>",
        "id": 246103856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360013
    },
    {
        "content": "<p>this raised the question of whether that shuold motivate disable incr-comp in 1.54</p>",
        "id": 246103912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360040
    },
    {
        "content": "<p>and, essentially in parallel, I asked whether disabling in 1.54 should mean we disable more broadly, while Aaron also responded that they don’t think “the bug” should motivate disabled in 1.54</p>",
        "id": 246103997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360085
    },
    {
        "content": "<p>Is that something that <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> could help with quickly enough?</p>",
        "id": 246104027,
        "sender_full_name": "mw",
        "timestamp": 1626360095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Yes, that's the issue I meant</p>",
        "id": 246104081,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360117
    },
    {
        "content": "<p>I think leaving incr. comp. enabled on nightly and beta has worked rather well so far</p>",
        "id": 246104142,
        "sender_full_name": "mw",
        "timestamp": 1626360128
    },
    {
        "content": "<p>(At this point, I’m happy to table the question of whether we should consider disabling more broadly. It is a tricky subject, as <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> points out.)</p>",
        "id": 246104146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360130
    },
    {
        "content": "<p>One hacky approach would be to apply my projection-caching fix only in incr comp mode</p>",
        "id": 246104165,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360144
    },
    {
        "content": "<p>That would mitigate the worst performance regression (21 percent)</p>",
        "id": 246104194,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360161
    },
    {
        "content": "<p>This is PR <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a></p>",
        "id": 246104242,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360186
    },
    {
        "content": "<p>Oh, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></p>",
        "id": 246104292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360209
    },
    {
        "content": "<p>I created this calendly thing to let people book time to go through PRs and things: <a href=\"https://calendly.com/nikomatsakis/office-hours\">https://calendly.com/nikomatsakis/office-hours</a></p>",
        "id": 246104339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360231
    },
    {
        "content": "<p>(I'm catching up)</p>",
        "id": 246104363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360240
    },
    {
        "content": "<p>That said, I think we may just have to accept the regression on this particular one</p>",
        "id": 246104413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360246
    },
    {
        "content": "<p>Yeah, that's what it seems like :/</p>",
        "id": 246104446,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360262
    },
    {
        "content": "<p>That case it regressed so much on</p>",
        "id": 246104448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360264
    },
    {
        "content": "<p>its not representative of real code, right? Its a microbenchmark,</p>",
        "id": 246104473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360276
    },
    {
        "content": "<p>I rebases that PR on top of my performance improvement PR, but it didn't help</p>",
        "id": 246104492,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360285
    },
    {
        "content": "<p>I think that's correct</p>",
        "id": 246104498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360286
    },
    {
        "content": "<p>Yeah, the regression seems very localized</p>",
        "id": 246104510,
        "sender_full_name": "mw",
        "timestamp": 1626360289
    },
    {
        "content": "<p>(i.e., its meant to be exposing bad behavior by exploding a paticular pattern)</p>",
        "id": 246104526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360296
    },
    {
        "content": "<p>I think that could be realistic, unfortunately</p>",
        "id": 246104551,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360305
    },
    {
        "content": "<p>hmm.</p>",
        "id": 246104558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360311
    },
    {
        "content": "<p>okay</p>",
        "id": 246104562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360313
    },
    {
        "content": "<p>If people are using long chains of iterator methods</p>",
        "id": 246104569,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360315
    },
    {
        "content": "<p>20% regression isn't  good but it's not the end of the world</p>",
        "id": 246104621,
        "sender_full_name": "mw",
        "timestamp": 1626360340
    },
    {
        "content": "<p>I think it's worth pointing out most of the real world crates do not show a massive change one way or the other.</p>",
        "id": 246104629,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626360347
    },
    {
        "content": "<p>the point is not that the pattern is not realistic</p>",
        "id": 246104639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360350
    },
    {
        "content": "<p>(we should have more hyperlinks. Too many clicks to get to the benchmark)</p>",
        "id": 246104650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360354
    },
    {
        "content": "<p>it's just that in the grand scheme of compilation</p>",
        "id": 246104657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360359
    },
    {
        "content": "<p>the 20% hit may be much smaller</p>",
        "id": 246104712,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360367
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246104629\">said</a>:</p>\n<blockquote>\n<p>I think it's worth pointing out most of the real world crates do not show a massive change one way or the other.</p>\n</blockquote>\n<p>i.e., this</p>",
        "id": 246104720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360370
    },
    {
        "content": "<p>Uh the 20% regression is a regression of milliseconds of time.</p>",
        "id": 246104760,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626360396
    },
    {
        "content": "<p>we probably could revise the rust-timer feedback to categorize this</p>",
        "id": 246104763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360399
    },
    {
        "content": "<p>compared to the 200-600% regression you get from disabling incr. comp., it seems fine :)</p>",
        "id": 246104771,
        "sender_full_name": "mw",
        "timestamp": 1626360405
    },
    {
        "content": "<p>I don't think this is worth blocking the fix on.</p>",
        "id": 246104773,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626360405
    },
    {
        "content": "<p>(I agree with <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> that the pattern is realistic)</p>",
        "id": 246104775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360408
    },
    {
        "content": "<p>i.e. the max change for the microbenchmarks vs the max change for the “real world” benchmark</p>",
        "id": 246104780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246104775\">said</a>:</p>\n<blockquote>\n<p>(I agree with <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> that the pattern is realistic)</p>\n</blockquote>\n<p>Okay, I can believe I misrepresented the <em>kind</em> of micro-benchmark this is</p>",
        "id": 246104813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360429
    },
    {
        "content": "<p>but I think its still fair to classify it as a microbenchmark</p>",
        "id": 246104853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360453
    },
    {
        "content": "<p>Ie <code>deeply-nested-check</code> takes <code>0.030</code> seconds instead of <code>0.023</code> seconds.</p>",
        "id": 246104877,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626360466
    },
    {
        "content": "<p>At this point</p>",
        "id": 246104885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360470
    },
    {
        "content": "<p>we should move along, I thinmk</p>",
        "id": 246104893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360477
    },
    {
        "content": "<p>unless someone wants to argue strongly for disabling incr-comp in 1.54</p>",
        "id": 246104953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360486
    },
    {
        "content": "<p>(in which case, that someone should interrupt the meeting)</p>",
        "id": 246104967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360492
    },
    {
        "content": "<p>it seems like we all agree that we should land it</p>",
        "id": 246104977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360497
    },
    {
        "content": "<p>and accept the perf hit</p>",
        "id": 246104984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360499
    },
    {
        "content": "<p>correctness &gt;&gt; perf. I think that is generally true across the entirety of SWE discipline.</p>",
        "id": 246105009,
        "sender_full_name": "nagisa",
        "timestamp": 1626360514
    },
    {
        "content": "<p>I'll remove the perf-improvement commit from that PR</p>",
        "id": 246105028,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626360523
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 246105040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360532
    },
    {
        "content": "<p>I can do a quick review, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>, if you ping me</p>",
        "id": 246105048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360535
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 246105052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360539
    },
    {
        "content": "<p>since we walked through the code already</p>",
        "id": 246105061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626360543
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-07-13.md\">triage logs for 2021-07-13</a></p>\n</blockquote>\n<p>Mostly quiet week; improvements outweighed regressions.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=9a27044f42ace9eb652781b53f598e25d4e7e918&amp;end=5aff6dd07a562a2cba3c57fc3460a72acb6bef46&amp;absolute=false&amp;stat=instructions%3Au\">9a27044f42ace9eb652781b53f598e25d4e7e918..5aff6dd07a562a2cba3c57fc3460a72acb6bef46</a></p>\n<p>1 Regressions, 4 Improvements, 0 Mixed; 0 of them in rollups</p>",
        "id": 246105071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360548
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Support forwarding caller location through trait object method call <a href=\"https://github.com/rust-lang/rust/issues/81360\">#81360</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a84d1b21aea9863f0fc5f436b4982d145dade646&amp;end=3982eb35cabe3a99194d768d34a92347967c3fa2&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>incr-full</code> builds of <code>unused-warnings-check</code>)</li>\n<li>Largely due to increased number of calls to the newly-made query<br>\n  should_inherit_track_caller. Mostly higher regressions on smaller benchmarks.</li>\n</ul>",
        "id": 246105091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360561
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Reland \"Merge CrateDisambiguator into StableCrateId\" <a href=\"https://github.com/rust-lang/rust/issues/86143\">#86143</a></li>\n<li>Stop generating <code>alloca</code>s &amp; <code>memcmp</code> for simple short array equality <a href=\"https://github.com/rust-lang/rust/issues/85828\">#85828</a></li>\n<li>Add support for raw-dylib with stdcall, fastcall functions <a href=\"https://github.com/rust-lang/rust/issues/86419\">#86419</a></li>\n<li>Use clang 12.0.1 on dist-x86_64/i686-linux <a href=\"https://github.com/rust-lang/rust/issues/87019\">#87019</a></li>\n</ul>",
        "id": 246105104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360569
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>There are a number of <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged\">untriaged regressions</a>; as of this writing:<ul>\n<li>Include terminators in instance size estimate <a href=\"https://github.com/rust-lang/rust/issues/86777\">#86777</a></li>\n<li>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/86588\">#86588</a></li>\n<li>Change entry point to <span aria-label=\"shield\" class=\"emoji emoji-1f6e1\" role=\"img\" title=\"shield\">:shield:</span>️ against <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span> <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span>-payloads <a href=\"https://github.com/rust-lang/rust/issues/86034\">#86034</a></li>\n<li>Inline Iterator as IntoIterator. <a href=\"https://github.com/rust-lang/rust/issues/84560\">#84560</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246105119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360577
    },
    {
        "content": "<p>do we have owners for all those nags?</p>",
        "id": 246105157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360597
    },
    {
        "content": "<p>(I should note that we're really trying to improve perf.rlo and hopefully you should be seeing some improvements soon. If you're patient about perf, come talk with us over in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> )</p>",
        "id": 246105185,
        "sender_full_name": "rylev",
        "timestamp": 1626360604
    },
    {
        "content": "<p>I don't see how</p>\n<blockquote>\n<p>Change entry point to <span aria-label=\"shield\" class=\"emoji emoji-1f6e1\" role=\"img\" title=\"shield\">:shield:</span>️ against <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span> <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span>-payloads <a href=\"https://github.com/rust-lang/rust/issues/86034\">#86034</a></p>\n</blockquote>\n<p>could be addressed.</p>",
        "id": 246105264,
        "sender_full_name": "nagisa",
        "timestamp": 1626360634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246105157\">said</a>:</p>\n<blockquote>\n<p>do we have owners for all those nags?</p>\n</blockquote>\n<p>We do not - we're currently unsure of exactly what the process should be. Those nags all have comments on them indicating them as regressions (including the <code>perf-regression</code> label)</p>",
        "id": 246105309,
        "sender_full_name": "rylev",
        "timestamp": 1626360661
    },
    {
        "content": "<p>I'm not sure what our goal should be wrt to that regression.</p>",
        "id": 246105318,
        "sender_full_name": "nagisa",
        "timestamp": 1626360665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> would it be plausible to validate your hypothesis that its from codegen unit redistribution?</p>",
        "id": 246105357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360685
    },
    {
        "content": "<p>Oh right, I mentioned we could build with -Ccodegen-units=1.</p>",
        "id": 246105489,
        "sender_full_name": "nagisa",
        "timestamp": 1626360729
    },
    {
        "content": "<p>yeah, we could.</p>",
        "id": 246105495,
        "sender_full_name": "nagisa",
        "timestamp": 1626360731
    },
    {
        "content": "<p>at the very least, isn’t there a flag to avoid breaking into codegen units at all? Hypothe</p>",
        "id": 246105501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360733
    },
    {
        "content": "<p>okay that’s what I was thinking of</p>",
        "id": 246105517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246105318\">said</a>:</p>\n<blockquote>\n<p>I'm not sure what our goal should be wrt to that regression.</p>\n</blockquote>\n<p>I'd also like to note that it's a reasonable argument to make that if the cost/benefit analysis of investigating a regression leads to the conclusion that the regression is acceptable is a completely fine outcome.</p>",
        "id": 246105518,
        "sender_full_name": "rylev",
        "timestamp": 1626360740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> makes a solid point as well. :)</p>",
        "id": 246105538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360752
    },
    {
        "content": "<p>I'll make a note for myself to try at least that thing this weekend.</p>",
        "id": 246105570,
        "sender_full_name": "nagisa",
        "timestamp": 1626360765
    },
    {
        "content": "<p>though it was a very broad set of seemingly significant regressions</p>",
        "id": 246105593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360776
    },
    {
        "content": "<p>though again, maybe only on microbenchmarks?</p>",
        "id": 246105636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360797
    },
    {
        "content": "<p>well, I guess html5ever and cranelift-codegen are “real world\"</p>",
        "id": 246105666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360814
    },
    {
        "content": "<p>Okay, nominations</p>",
        "id": 246105691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246105357\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> would it be plausible to validate your hypothesis that its from codegen unit redistribution?</p>\n</blockquote>\n<p>Looking at the perf results from <a href=\"https://github.com/rust-lang/rust/pull/86034#issuecomment-871488586\">this comment</a>, the self-profile data shows additional codegen units being compiled.</p>",
        "id": 246105692,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626360825
    },
    {
        "content": "<p>Where is that linked on the site?</p>",
        "id": 246105803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360879
    },
    {
        "content": "<p>Should we discuss this now?</p>",
        "id": 246105839,
        "sender_full_name": "mw",
        "timestamp": 1626360895
    },
    {
        "content": "<p>We have 5 minutes left</p>",
        "id": 246105879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360910
    },
    {
        "content": "<p>I guess it might be nice to talk about one or two nominated issues</p>",
        "id": 246105904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360920
    },
    {
        "content": "<p>for once. :)</p>",
        "id": 246105908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360922
    },
    {
        "content": "<h2>Nominated Issues</h2>",
        "id": 246105931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360933
    },
    {
        "content": "<p>T-rustdoc</p>\n<ul>\n<li>Generate links to definition in rustdoc source code pages <a href=\"https://github.com/rust-lang/rust/pull/84176\">#84176</a><ul>\n<li>Authored by <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span></li>\n<li>approved by T-rustdoc, reviewed by <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> </li>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-08.20.2354818/near/245326203\">mentioned last week</a></li>\n<li>needs a final look by T-compiler for merge (<span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> can't merge own PR)</li>\n</ul>\n</li>\n</ul>",
        "id": 246105946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360939
    },
    {
        "content": "<p>oh but there’s been activity here</p>",
        "id": 246106028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360965
    },
    {
        "content": "<p>So lets leave it aside, hopefully rustdoc team is working it out</p>",
        "id": 246106063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626360986
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"<code>match</code> an <code>std::cmp::Ordering</code> generates less optimized code in nightly\" <a href=\"https://github.com/rust-lang/rust/issues/86511\">rust#86511</a><ul>\n<li>comment mentions these issues <a href=\"https://github.com/rust-lang/rust/issues/86391\">#86391</a> and <a href=\"https://github.com/rust-lang/rust/issues/86354\">#86354</a></li>\n<li>issue nominated for help in finding someone giving some context for an accurate priority to track the issue</li>\n</ul>\n</li>\n</ul>",
        "id": 246106090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361000
    },
    {
        "content": "<p>okay, so after feedback from last week</p>",
        "id": 246106158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361038
    },
    {
        "content": "<p>the issue author made progress in tracking down a more specific commit</p>",
        "id": 246106172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361048
    },
    {
        "content": "<p>where now claim is that injection was from PR <a href=\"https://github.com/rust-lang/rust/issues/84993\">#84993</a></p>",
        "id": 246106205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361070
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> + <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 246106219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361076
    },
    {
        "content": "<p>hmm. So change in order of basic blocks is causing worse match code to be emitted?</p>",
        "id": 246106285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361094
    },
    {
        "content": "<p>I guess I can believe that happened</p>",
        "id": 246106292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361100
    },
    {
        "content": "<p>I don’t know what we should plan to do about it.</p>",
        "id": 246106307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361112
    },
    {
        "content": "<p>the “order” here is creation ordewr</p>",
        "id": 246106372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361144
    },
    {
        "content": "<p>not controw-flow order, If I understand correctly</p>",
        "id": 246106415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361166
    },
    {
        "content": "<p>And that’s our hour, folks!</p>",
        "id": 246106600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361215
    },
    {
        "content": "<p>It is plausible. I strongly suspect that its some peephole instcombine that was firing successfully before and not anymore.</p>",
        "id": 246106619,
        "sender_full_name": "nagisa",
        "timestamp": 1626361217
    },
    {
        "content": "<p>yeah. nearly impossible for us to control for that</p>",
        "id": 246106724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361236
    },
    {
        "content": "<p>though maybe we could identify an LLVM bug to file?</p>",
        "id": 246106774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361245
    },
    {
        "content": "<p>in terms of optimization opportunity?</p>",
        "id": 246106813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361253
    },
    {
        "content": "<p>yeah, probably.</p>",
        "id": 246106909,
        "sender_full_name": "nagisa",
        "timestamp": 1626361270
    },
    {
        "content": "<p>seems like the only action item I can identify here: make a small LLVM IR test case and file it with LLVM devs</p>",
        "id": 246106919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361273
    },
    {
        "content": "<p>easier to work in a forward direction than the backward here.</p>",
        "id": 246106977,
        "sender_full_name": "nagisa",
        "timestamp": 1626361289
    },
    {
        "content": "<p>Okay that’s our hour. Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! And don’t forget: Steering meeting tomorrow about Review Policy!</p>",
        "id": 246106984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626361291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246105803\">said</a>:</p>\n<blockquote>\n<p>Where is that linked on the site?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  Open the <a href=\"https://perf.rust-lang.org/compare.html?start=29cd70d40722930e66a8b726fe58a7bd1d64a22b&amp;end=6b354a13820a444f834a33365ae4a8d97d7d27ce&amp;stat=max-rss\">perf results</a>, expand a test, \"token-stream-stress-debug\" for example, click on the diff value for a test like <a href=\"https://perf.rust-lang.org/detailed-query.html?commit=6b354a13820a444f834a33365ae4a8d97d7d27ce&amp;base_commit=29cd70d40722930e66a8b726fe58a7bd1d64a22b&amp;benchmark=token-stream-stress-debug&amp;run_name=full\"><code>9.8%??</code></a> then look for the \"codegen_module\" row and see that it has 2 more executions in this run (the far right column for that row).</p>",
        "id": 246107147,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626361325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I pinged you on the PR, and removed the other commit</p>",
        "id": 246107242,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626361370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I see! I’m not sure I’ve ever attempted to understand the “Executions” column before!</p>",
        "id": 246111649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626363231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> To be clear: your point here is that we believe this is a change in codegen units because it is <em>this specific</em> query, named “codegen_module”, that has had a change in number of executions</p>",
        "id": 246111889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626363317
    },
    {
        "content": "<p>(i.e. interpreting the reason for (and effect of) changes to number of executions is very context depedent on which query we’re talking about.)</p>",
        "id": 246111988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626363360
    },
    {
        "content": "<p>Yeah exactly.</p>",
        "id": 246112263,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626363480
    },
    {
        "content": "<p>I know that we invoke the <code>codegen_modules</code> query once for each cgu we create so the data here means that we're creating two more cgus than before.</p>",
        "id": 246112354,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626363506
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/euBza5vIQHOTs2elsYN2bg?view\">https://hackmd.io/euBza5vIQHOTs2elsYN2bg?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span></li>\n</ul>",
        "id": 246195458,
        "sender_full_name": "apiraino",
        "timestamp": 1626422757
    }
]