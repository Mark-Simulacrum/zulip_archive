[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at 2pm UTC</p>",
        "id": 204688656,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595434964
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization\">#t-compiler/wg-prioritization</a></p>",
        "id": 204688670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595434976
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/jK5Cm8QJSGG7ukq7lVilLg?view\">meeting agenda</a></p>",
        "id": 204688696,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595434993
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> and <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span></p>",
        "id": 204688816,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595435044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span>?</p>",
        "id": 204688868,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595435074
    },
    {
        "content": "<p>it could also be me :), but I'm not sure what the current state of the working group actually is</p>",
        "id": 204688911,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595435098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>?</p>",
        "id": 204688954,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595435121
    },
    {
        "content": "<p>feel free to paste whatever you have directly in the agenda <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 204688969,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595435135
    },
    {
        "content": "<p>I don't have edit permissions for the agenda</p>",
        "id": 204771094,
        "sender_full_name": "oli",
        "timestamp": 1595492389
    },
    {
        "content": "<p>Wanna send the summary to me and I put it into the agenda until you get permissions?</p>",
        "id": 204771229,
        "sender_full_name": "lcnr",
        "timestamp": 1595492517
    },
    {
        "content": "<p>first gotta write it up <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 204771431,
        "sender_full_name": "oli",
        "timestamp": 1595492660
    },
    {
        "content": "<p>I was going to write it up in the hackmd</p>",
        "id": 204771435,
        "sender_full_name": "oli",
        "timestamp": 1595492665
    },
    {
        "content": "<p>I should start tagging PRs instead of having to find them manually again every time...</p>",
        "id": 204790743,
        "sender_full_name": "oli",
        "timestamp": 1595507982
    },
    {
        "content": "<p><a href=\"https://gist.github.com/oli-obk/1b3b3e2d851a43696927ac2b469d9eef\">https://gist.github.com/oli-obk/1b3b3e2d851a43696927ac2b469d9eef</a> is the summary for today</p>",
        "id": 204790749,
        "sender_full_name": "oli",
        "timestamp": 1595507989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> and others that want write access to all the compiler HackMD documents, all I need is your HackMD usernames :)</p>",
        "id": 204794717,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595509927
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in 45 minutes</p>",
        "id": 204795123,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595510138
    },
    {
        "content": "<p><a href=\"https://hackmd.io/jK5Cm8QJSGG7ukq7lVilLg?view\">Check out the meeting agenda</a></p>",
        "id": 204795156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595510156
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 204800919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595512993
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 204800953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513010
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new MCPs at this time.</li>\n</ul>\n</li>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"MCP: Reorganize the rust-lang/rust repo directory structure\" <a href=\"https://github.com/rust-lang/compiler-team/issues/316\">compiler-team#316</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204801003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513031
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Stabilizable subset of const generics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/332\">compiler-team#332</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204801108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513057
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/310\">compiler-team#310</a></li>\n<li>\"Add future-incompat entries to json diagnostic output\" <a href=\"https://github.com/rust-lang/compiler-team/issues/315\">compiler-team#315</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204801125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513070
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Change <code>ty::Const</code> to a \"value tree\" representation\" <a href=\"https://github.com/rust-lang/compiler-team/issues/323\">compiler-team#323</a></li>\n<li>\"Improve defaults in x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/326\">compiler-team#326</a></li>\n<li>\"Rework rustc_serialize\" <a href=\"https://github.com/rust-lang/compiler-team/issues/329\">compiler-team#329</a></li>\n<li>\"Use <code>tracing</code> instead of <code>log</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/331\">compiler-team#331</a></li>\n</ul>\n</li>\n<li>Finalized FCPs<ul>\n<li>No finalized FCPs this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 204801158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513088
    },
    {
        "content": "<ul>\n<li>Release team is planning a 1.45.1 release next Thursday (y'all have some stable noms to approve as a result).</li>\n</ul>",
        "id": 204801191,
        "sender_full_name": "simulacrum",
        "timestamp": 1595513104
    },
    {
        "content": "<ul>\n<li>My internet is <strong>absurdly</strong> slow today so I may be more read-only than anything during this meeting</li>\n</ul>",
        "id": 204801237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595513132
    },
    {
        "content": "<p>Heh, I was going to note that we need a <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> checkin-text from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 204801547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513271
    },
    {
        "content": "<p>but based on the previous note, we might not be getting that today</p>",
        "id": 204801563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513281
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 204801647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513306
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>:</p>\n<blockquote>\n<ul>\n<li><code>-Zmir-opt-level</code>'s meaning gets refactored to stop including buggy opts (<a href=\"https://github.com/rust-lang/compiler-team/issues/319\">https://github.com/rust-lang/compiler-team/issues/319</a>)</li>\n<li>harden const propagator against regressions and bugs (<a href=\"https://github.com/rust-lang/rust/pull/73693\">https://github.com/rust-lang/rust/pull/73693</a>, <a href=\"https://github.com/rust-lang/rust/pull/73613\">https://github.com/rust-lang/rust/pull/73613</a>)</li>\n<li>MIR overflow messages now contain the binop arguments that caused the overflow (<a href=\"https://github.com/rust-lang/rust/pull/73513\">https://github.com/rust-lang/rust/pull/73513</a>)<ul>\n<li>only used in the const evaluator and const propagator, but we can make runtime asserts also do this (similar to how index out of bounds displays length and index)</li>\n</ul>\n</li>\n<li>MIR printing can now print variant-less enums (<a href=\"https://github.com/rust-lang/rust/pull/73442\">https://github.com/rust-lang/rust/pull/73442</a>)</li>\n<li>MIR is now checked to make sure its invariants are upheld (<a href=\"https://github.com/rust-lang/rust/pull/72796\">https://github.com/rust-lang/rust/pull/72796</a>, <a href=\"https://github.com/rust-lang/rust/pull/72093\">https://github.com/rust-lang/rust/pull/72093</a>)</li>\n</ul>\n<p>Not sure if we already had this last time, but even if, this is worth repeating: <a href=\"https://github.com/rust-lang/rust/pull/72205\">we have a totally awesome NRVO pass!</a></p>\n</blockquote>",
        "id": 204801669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513313
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> feel free, if you can, to add the checkin notes for <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> to the <a href=\"https://hackmd.io/jK5Cm8QJSGG7ukq7lVilLg?both\">agenda hackmd</a>, and I'll try to post them at the end of the meeting if there is time</p>",
        "id": 204801888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513411
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 204801909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513420
    },
    {
        "content": "<ul>\n<li>\"Don't panic if the lhs of a div by zero is not statically known\" <a href=\"https://github.com/rust-lang/rust/pull/74221\">rust#74221</a><br>\n    - PR by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, approved by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span><br>\n    - Fixes <a href=\"https://github.com/rust-lang/rust/issues/73993\">a P-high nightly regression</a></li>\n</ul>",
        "id": 204801939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513436
    },
    {
        "content": "<p>(I assume the \"P-high nightly regression\" is in fact now a stable-to-beta regression...)</p>",
        "id": 204802098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513518
    },
    {
        "content": "<p>Yes</p>",
        "id": 204802243,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595513566
    },
    {
        "content": "<p>right :)</p>",
        "id": 204802261,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595513576
    },
    {
        "content": "<p>yeah; beta-accepted</p>",
        "id": 204802282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513584
    },
    {
        "content": "<p>This PR missed the beta cutoff by a few hours</p>",
        "id": 204802290,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595513586
    },
    {
        "content": "<ul>\n<li>\"improper_ctypes_definitions: allow <code>Box</code>\" <a href=\"https://github.com/rust-lang/rust/pull/74448\">rust#74448</a><br>\n    - PR by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, approved by <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <br>\n    - stops <a href=\"https://github.com/rust-lang/rust/pull/72700#issuecomment-659449386\">linting against Box in extern \"C\" functions for the improper_ctypes_definitions lint</a> - boxes are documented to be FFI-safe.</li>\n</ul>",
        "id": 204802478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513662
    },
    {
        "content": "<p>Okay beta-accepted</p>",
        "id": 204802687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513759
    },
    {
        "content": "<ul>\n<li>\"Use <code>ReEmpty(U0)</code> as the implicit region bound in typeck\" <a href=\"https://github.com/rust-lang/rust/pull/74509\">rust#74509</a><ul>\n<li>PR by <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span>, not merged yet</li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/74429\">a <code>P-critical</code> stable regression</a> that rejects previously accepted code</li>\n<li>Very small patch, one line changed</li>\n<li>This one is also stable nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 204802756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513776
    },
    {
        "content": "<p>Oh, I guess we were <em>never</em> setting the pre-existing <code>implicit_region_bound</code> to anything but <code>None</code>?</p>",
        "id": 204802902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513868
    },
    {
        "content": "<p>Probably a historical artifact</p>",
        "id": 204802907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513874
    },
    {
        "content": "<p>beta-accepted</p>",
        "id": 204802990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513899
    },
    {
        "content": "<ul>\n<li>\"Fix an ICE on an invalid <code>binding @ ...</code> in a tuple struct pattern\" <a href=\"https://github.com/rust-lang/rust/pull/74557\">rust#74557</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"228863\">@jakubadamw</span>, approved by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n<li>Fixes: <a href=\"https://github.com/rust-lang/rust/issues/74539\">a stable to stable regression (ICE)</a>. Where a better displayed error was previously produced.</li>\n<li>This one is also stable nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 204803012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-23.20.2354818/near/204802756\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Use <code>ReEmpty(U0)</code> as the implicit region bound in typeck\" <a href=\"https://github.com/rust-lang/rust/pull/74509\">rust#74509</a><ul>\n<li>PR by <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span>, not merged yet</li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/74429\">a <code>P-critical</code> stable regression</a> that rejects previously accepted code</li>\n<li>Very small patch, one line changed</li>\n<li>This one is also stable nominated</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>note that is not yet merged</p>",
        "id": 204803038,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595513927
    },
    {
        "content": "<p>(it's being retried)</p>",
        "id": 204803116,
        "sender_full_name": "DPC",
        "timestamp": 1595513962
    },
    {
        "content": "<p>yeah I'll probably want to bring up that detail more when we get to the stable-nom</p>",
        "id": 204803117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595513963
    },
    {
        "content": "<p>okay <a href=\"https://github.com/rust-lang/rust/issues/74557\">#74557</a> is beta-accepted</p>",
        "id": 204803340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514054
    },
    {
        "content": "<ul>\n<li>\"Correctly parse <code>{} &amp;&amp; false</code> in tail expression\" <a href=\"https://github.com/rust-lang/rust/pull/74650\">rust#74650</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, not merged yet</li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/74233\">#74233</a> a <code>P-high</code> regression and <a href=\"https://github.com/rust-lang/rust/issues/54186\">#54186</a></li>\n<li>This one is also stable nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 204803375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514069
    },
    {
        "content": "<p>Do we have higher confidence in this patch than before?</p>",
        "id": 204803448,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514101
    },
    {
        "content": "<p>A similar patch was already reverted once</p>",
        "id": 204803455,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> sorry which PR is your comment in reference to? <a href=\"https://github.com/rust-lang/rust/issues/74557\">#74557</a>, or <a href=\"https://github.com/rust-lang/rust/issues/74650\">#74650</a> ?</p>",
        "id": 204803532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514130
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74650\">rust#74650</a></p>",
        "id": 204803543,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514138
    },
    {
        "content": "<p>(not yet merged)</p>",
        "id": 204803572,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514145
    },
    {
        "content": "<p>I believe it addresses the problems brought up</p>",
        "id": 204803604,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514164
    },
    {
        "content": "<p>Oh, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , I was reading the title as literally just talking about empty blocks on the LHS of <code>&amp;&amp;</code></p>",
        "id": 204803621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514175
    },
    {
        "content": "<p>Because it was only with &amp;&amp; being both and and ref</p>",
        "id": 204803640,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514187
    },
    {
        "content": "<p>but this is the more general <code>&lt;block&gt; &amp;&amp; &lt;bool&gt;</code>, right?</p>",
        "id": 204803644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514191
    },
    {
        "content": "<p>Not just empty blocks but any kind of block</p>",
        "id": 204803660,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514199
    },
    {
        "content": "<p>Yes</p>",
        "id": 204803662,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514200
    },
    {
        "content": "<p>And not just book, really (although bool is the case that is a regression)</p>",
        "id": 204803703,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514226
    },
    {
        "content": "<p>if we have more confidence then I'm fine with it, just wanted to raise that this area does seem bug-prone</p>",
        "id": 204803716,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514235
    },
    {
        "content": "<p>For backport we could just bring in a single line removal that makes everything work with worse diagnostics, most of the code in the PR is to regain the diagnostics we had before.</p>",
        "id": 204803828,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514286
    },
    {
        "content": "<p>the regression itself is a stable-to-stable one, introduced in 1.36, right? that's how I read the text of <a href=\"https://github.com/rust-lang/rust/issues/74233\">#74233</a></p>",
        "id": 204803837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514290
    },
    {
        "content": "<p>Correct</p>",
        "id": 204803848,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514296
    },
    {
        "content": "<p>It's an old regression (introduced by me)</p>",
        "id": 204803881,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595514310
    },
    {
        "content": "<p>(that's part of why maybe not rushing with this is fine -- it's been a while since we introduced the bug)</p>",
        "id": 204803886,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514312
    },
    {
        "content": "<p>lets maybe let this ride the trains</p>",
        "id": 204803916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514328
    },
    {
        "content": "<p>okay then, declining to beta-backport.</p>",
        "id": 204803946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514348
    },
    {
        "content": "<p>(and likewise I'll treat that as a declining to stable-backport as well)</p>",
        "id": 204804018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514368
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>",
        "id": 204804051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514387
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 204804073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514397
    },
    {
        "content": "<ul>\n<li>\"Use <code>ReEmpty(U0)</code> as the implicit region bound in typeck\" <a href=\"https://github.com/rust-lang/rust/pull/74509\">rust#74509</a><ul>\n<li>This was also beta nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 204804101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514408
    },
    {
        "content": "<p>This is the one that hasn't merged yet</p>",
        "id": 204804224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514456
    },
    {
        "content": "<p>so we hit a question of: How confident <em>are</em> we in this. :)</p>",
        "id": 204804246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514468
    },
    {
        "content": "<p>I will note that release is on Thursday next week and we can always delay it if something comes up. So we could provisionally approve and if regressions are noted not release with it (either delaying or just removing this PR from the release).</p>",
        "id": 204804409,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> will there be a crater run with this PR in it (on either stable or beta branch) before the stable release takes place?</p>",
        "id": 204804440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514551
    },
    {
        "content": "<p>No</p>",
        "id": 204804444,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514554
    },
    {
        "content": "<p>(Or at least none was planned)</p>",
        "id": 204804464,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514564
    },
    {
        "content": "<p>I guess if we p=1 a cargo check run it'd finish in time</p>",
        "id": 204804477,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514572
    },
    {
        "content": "<p>I'll admit that it may be a relative waste of resources</p>",
        "id": 204804497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514584
    },
    {
        "content": "<p>My reading of the situation is that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> are confident that this doesn't introduce any soundness bug</p>",
        "id": 204804627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514633
    },
    {
        "content": "<p>(\"this\" meaning \"this PR\")</p>",
        "id": 204804647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514639
    },
    {
        "content": "<p>I guess we can stable-approve it. I don't have any well-motivated objection apart from general distrust of landing something on stable that hasn't seen testing on the nightly channel</p>",
        "id": 204804873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514725
    },
    {
        "content": "<p>Yeah, my point was that we should have a week or so of testing</p>",
        "id": 204804898,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514739
    },
    {
        "content": "<p>okay</p>",
        "id": 204804908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514744
    },
    {
        "content": "<p>Stable-accepted then</p>",
        "id": 204804921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514749
    },
    {
        "content": "<p>and we'll all just try to keep our eye out for problems that could be related to this...</p>",
        "id": 204804958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-23.20.2354818/near/204804409\">said</a>:</p>\n<blockquote>\n<p>I will note that release is on Thursday next week and we can always delay it if something comes up. So we could provisionally approve and if regressions are noted not release with it (either delaying or just removing this PR from the release).</p>\n</blockquote>\n<p>Uh wait. What release?</p>",
        "id": 204804978,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595514783
    },
    {
        "content": "<p>a point release</p>",
        "id": 204804997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514792
    },
    {
        "content": "<p>1.45.1 is being released next thursday by current planning</p>",
        "id": 204805009,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514798
    },
    {
        "content": "<p>Ah, got it</p>",
        "id": 204805010,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595514799
    },
    {
        "content": "<p>this was part of annoucements, let me see</p>",
        "id": 204805011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514799
    },
    {
        "content": "<p>yeah that</p>",
        "id": 204805014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514802
    },
    {
        "content": "<p>Sorry</p>",
        "id": 204805017,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595514803
    },
    {
        "content": "<p>okay moving on to rest of stable noms</p>",
        "id": 204805146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514850
    },
    {
        "content": "<ul>\n<li>\"Fix an ICE on an invalid <code>binding @ ...</code> in a tuple struct pattern\" <a href=\"https://github.com/rust-lang/rust/pull/74557\">rust#74557</a><ul>\n<li>This was also beta nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 204805162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595514858
    },
    {
        "content": "<p>I will say that the ICE here doesn't look terrible (the error is still emitted)</p>",
        "id": 204805350,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514956
    },
    {
        "content": "<p>so maybe worth being conservative and not backporting</p>",
        "id": 204805419,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514970
    },
    {
        "content": "<p>But I'm fine either way</p>",
        "id": 204805464,
        "sender_full_name": "simulacrum",
        "timestamp": 1595514989
    },
    {
        "content": "<p>the injection is only in the <em>most</em> recent release</p>",
        "id": 204805598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515050
    },
    {
        "content": "<p>(ok, I rebooted and did some other things, and I think my internet is working a bit better--- regarding <a href=\"https://github.com/rust-lang/rust/issues/74590\">rust#74590</a>, I am fairly confident it's fine, but not like 99.999%, it's a subtle area of the code)</p>",
        "id": 204805720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1595515086
    },
    {
        "content": "<p>so I guess I'm inclined to go ahead and stable-approve</p>",
        "id": 204805739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515093
    },
    {
        "content": "<p>seems good, yeah, since it's just in 1.45</p>",
        "id": 204805785,
        "sender_full_name": "simulacrum",
        "timestamp": 1595515107
    },
    {
        "content": "<p>I did have a thought</p>",
        "id": 204805875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515139
    },
    {
        "content": "<p>the PR <a href=\"https://github.com/rust-lang/rust/issues/74557\">#74557</a> has a comment, in the code where it adds the <code>if</code> guard on the match arm, where it says \"... It will be handled as an error by the AST lowering\"</p>",
        "id": 204805941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515172
    },
    {
        "content": "<p>I'm trying to remember if <code>delay_span_bug</code> would handle a case like this well or not</p>",
        "id": 204805981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515192
    },
    {
        "content": "<p>in terms of issuing an ICE if we <em>don't</em> issue an error?</p>",
        "id": 204806002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515201
    },
    {
        "content": "<p>Am I misremembering? Does <code>delay_span_bug</code> not do that for this case?</p>",
        "id": 204806109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515234
    },
    {
        "content": "<p>(Something like that would increase confidence that we're not introducing a soundness bug at least)</p>",
        "id": 204806116,
        "sender_full_name": "simulacrum",
        "timestamp": 1595515238
    },
    {
        "content": "<p>resolve is a weird place to fix this, AST lowering would indeed look better</p>",
        "id": 204806158,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595515255
    },
    {
        "content": "<p>Also invalid <code>binding @ ..</code>s can occur in various other non-tuplestruct contexts.</p>",
        "id": 204806288,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595515314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I believe you're correct</p>",
        "id": 204806346,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595515324
    },
    {
        "content": "<p>I guess my question is: Does <code>delay_span_bug</code> do what I describe (issue an ICE if we get through static analysis without emitting an error diagnostic)? And if it doesn't, do we have something that does?</p>",
        "id": 204806376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515336
    },
    {
        "content": "<p>the more I think about it the more I think <code>delay_span_bug</code> is for <em>precisely</em> this scenario, right? :)</p>",
        "id": 204806434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515373
    },
    {
        "content": "<p>I'd be curious to know if we can add that to this PR in some fashion before we backport</p>",
        "id": 204806504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515408
    },
    {
        "content": "<p>I _think_ it isn't checked/emitted on every pass but only at the end, right?</p>",
        "id": 204806523,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595515419
    },
    {
        "content": "<p>Otherwise we have a couple of bugs in some places <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 204806553,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595515434
    },
    {
        "content": "<p>yes I think so.</p>",
        "id": 204806557,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515436
    },
    {
        "content": "<p>which is the right thing for this case, right?</p>",
        "id": 204806566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515442
    },
    {
        "content": "<p>I.e. I mainly want to ensure that we don't end up having the compiler produce object code</p>",
        "id": 204806625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515457
    },
    {
        "content": "<p>If that matches is all needed to identify the case, yes</p>",
        "id": 204806651,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1595515473
    },
    {
        "content": "<p>well there is that <code>sub.as_ref().filter(|p| p.is_rest()).is_some())</code> business too ...</p>",
        "id": 204806728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515517
    },
    {
        "content": "<p>anyway</p>",
        "id": 204806735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515520
    },
    {
        "content": "<p>I'm not saying I'd <em>require</em> the addition of a <code>delay_span_bug</code></p>",
        "id": 204806764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515539
    },
    {
        "content": "<p>I'm happy to insert it if someone wants to either provide a patch or tell me where to put it</p>",
        "id": 204806886,
        "sender_full_name": "simulacrum",
        "timestamp": 1595515576
    },
    {
        "content": "<p>so I'll just say \"stable-approved, but if the person doing the backport, preferably the PR author, has the chance to make a variant with <code>delay_span_bug</code> added on, I'd prefer to see that in the backport.</p>",
        "id": 204806902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515585
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> . Let's follow-up on this after the meeting.</p>",
        "id": 204806938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515607
    },
    {
        "content": "<p>finally, we already established that we're declining to backport \"Correctly parse <code>{} &amp;&amp; false</code> in tail expression\" <a href=\"https://github.com/rust-lang/rust/pull/74650\">rust#74650</a></p>",
        "id": 204806983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515627
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>",
        "id": 204807018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515647
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on T-compiler this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on libs-impl this time</li>\n</ul>",
        "id": 204807043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515664
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">50 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">27 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 1 P-high, 3 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 15 P-high, 47 P-medium, 4 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 204807074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515681
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 204807148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515706
    },
    {
        "content": "<ul>\n<li>\"Borrowck deduces empty lifetime\" <a href=\"https://github.com/rust-lang/rust/issues/74429\">rust#74429</a><ul>\n<li>Unassigned</li>\n<li>There is <a href=\"https://github.com/rust-lang/rust/issues/74429#issuecomment-660400487\">a single crate repro</a> but an MCVE is still lacking</li>\n<li>Regressed in <a href=\"https://github.com/rust-lang/rust/pull/72362\">#72362</a> by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74509\">It has an opened PR</a>, already approved but tests are failing</li>\n</ul>\n</li>\n</ul>",
        "id": 204807165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515716
    },
    {
        "content": "<p>(this is the one we were discussing up above. I'm going to assign it to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> )</p>",
        "id": 204807217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515742
    },
    {
        "content": "<ul>\n<li>\"LTO triggers apparent miscompilation on Windows 10 x64\" <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a><ul>\n<li>Unassigned</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74498#issuecomment-661950983\">LLVM issue reproduced on LLVM master</a></li>\n<li>Regression from stable to stable, started failing when we updated to LLVM 9.0</li>\n</ul>\n</li>\n</ul>",
        "id": 204807327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515791
    },
    {
        "content": "<p>do we know if <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a> continues to reproduce when one uses a rust with LLVM 11?</p>",
        "id": 204807446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515820
    },
    {
        "content": "<p>oh never mind</p>",
        "id": 204807458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515828
    },
    {
        "content": "<p>(it reproduces on LLVM master)</p>",
        "id": 204807468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515834
    },
    {
        "content": "<p>has a bug been filed against LLVM itself then?</p>",
        "id": 204807509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515860
    },
    {
        "content": "<p>I'm assuming not</p>",
        "id": 204807692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515931
    },
    {
        "content": "<p>I'll self-assign and try to make sure that a bug against LLVM master either exists or gets filed</p>",
        "id": 204807738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515954
    },
    {
        "content": "<p>I'm not sure neither, maybe we should ask in the issue?</p>",
        "id": 204807743,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595515955
    },
    {
        "content": "<p>the other question is whether this can/should remain P-critical</p>",
        "id": 204807783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515981
    },
    {
        "content": "<p>miscompilation is pretty nasty</p>",
        "id": 204807800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595515990
    },
    {
        "content": "<p>I'm willing to keep it at P-critical for now</p>",
        "id": 204807834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516008
    },
    {
        "content": "<p>we'll see if we get annoyed with it being there over next few weeks</p>",
        "id": 204807846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516017
    },
    {
        "content": "<p>ideal thing would be to push for a fix in LLVM in time for the LLVM 11 release</p>",
        "id": 204807870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516033
    },
    {
        "content": "<p>so that we'd pull it in \"naturally\"</p>",
        "id": 204807883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516040
    },
    {
        "content": "<p>We could presumably fix it on our end by passing that LLVM arg someone posted?</p>",
        "id": 204807884,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516040
    },
    {
        "content": "<p>(perhaps only on MSVC)</p>",
        "id": 204807931,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-23.20.2354818/near/204807931\">said</a>:</p>\n<blockquote>\n<p>(perhaps only on MSVC)</p>\n</blockquote>\n<p>it is MSVC only?</p>",
        "id": 204807954,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595516063
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 204807959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516066
    },
    {
        "content": "<p>the known rust repro is MSVC only</p>",
        "id": 204807986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516081
    },
    {
        "content": "<p>but there is evidence that it may occur on other targets</p>",
        "id": 204808005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516089
    },
    {
        "content": "<p>doesn't on mingw, at least</p>",
        "id": 204808020,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516097
    },
    {
        "content": "<p>it depends on whether anyone might generate LLVM IR that was posted</p>",
        "id": 204808027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516099
    },
    {
        "content": "<p>right</p>",
        "id": 204808053,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595516109
    },
    {
        "content": "<p>that's why I had doubts about being MSVC only</p>",
        "id": 204808078,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595516119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> there was a follow-up comment from AlyoshaVasilieva that says that the LLVM flag didn't fix it for them</p>",
        "id": 204808101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516126
    },
    {
        "content": "<p>ah, okay</p>",
        "id": 204808114,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516130
    },
    {
        "content": "<p>anyway I will follow up on this</p>",
        "id": 204808150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516150
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No P-critical issues for libs-impl this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No P-critical issues for T-rustdoc this time.</li>\n</ul>",
        "id": 204808202,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516162
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>\n<ul>\n<li>No unassigned P-high beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>",
        "id": 204808224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516173
    },
    {
        "content": "<ul>\n<li>\"Type mismatch in function arguments E0631, E0271 are falsely recognized as E0308 mismatched types\" <a href=\"https://github.com/rust-lang/rust/issues/74400\">rust#74400</a><ul>\n<li>Unassigned</li>\n<li>Nightly to stable regression</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73643\">#73643</a> which is a rollup, likely to be <a href=\"https://github.com/rust-lang/rust/pull/72493\">#72493</a> or maybe <a href=\"https://github.com/rust-lang/rust/issues/74400#issuecomment-661450558\">these others</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204808257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this is apparently due to removal of leak-check?</p>",
        "id": 204808400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516256
    },
    {
        "content": "<p>can I assign this to you, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , for further investigation?</p>",
        "id": 204808447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516275
    },
    {
        "content": "<p>(removal of leak check was PR <a href=\"https://github.com/rust-lang/rust/issues/73643\">#73643</a>)</p>",
        "id": 204808550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516308
    },
    {
        "content": "<p>I'm going to go ahead and assign to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , I think they are best person to take point on regressions here, at least for now. They can delegate if necessary.</p>",
        "id": 204808635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516345
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a></p>\n<p>This week was a disaster, perf-wise. 28 revisions checked. 7 regressions, several of them ranging from large to huge, many in rollups. Some additional regressions may have occurred in rollups that were masked by other regressions/improvements. 3 improvements, one of which was a reversion of a regression. Thanks for Mark-Simulacrum and eddyb for follow-up measurements and adding new tooling to help investigate regressions in rollups. A follow-up thread on Zulip is <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Follow-up.20to.20the.20bad.20perf.20triage.20of.202020-07-21\">here</a></p>\n<p>In better news, rustdoc performance is now being benchmarked, thanks to the<br>\nefforts of <a href=\"https://github.com/rust-lang/rustc-perf/pull/675\">Joshua Nelson</a>.</p>\n<p>Triage done by njn. Revision range: <a href=\"https://perf.rust-lang.org/?start=9d09331e00b02f81c714b0c41ce3a38380dd36a2&amp;end=71384101ea3b030b80f7def80a37f67e148518b0&amp;absolute=false&amp;stat=instructions%3Au\">9d09331e00b02f81c714b0c41ce3a38380dd36a2..71384101ea3b030b80f7def80a37f67e148518b0</a>.</p>\n<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74461#issuecomment-660492867\">Rollup of 18 pull requests #74461</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=39d5a61f2e4e237123837f5162cc275c2fd7e625&amp;end=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 73.0% losses on many benchmarks.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416#issuecomment-660545238\">#74416</a><br>\n  is at fault; it was reverted in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, see below.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73441#issuecomment-660881380\">std: Switch from libbacktrace to gimli #73441</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=instructions:u\">instructions</a>,<br>\n<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=max-rss\">max-rss</a>):<br>\n  Up to 44.8% instruction increases on many benchmarks, and 5-10% max-rss increases on many benchmarks. Being reverted in <a href=\"https://github.com/rust-lang/rust/pull/74613\">#74613</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74468#issuecomment-661371815\">Rollup of 11 pull requests #74468</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;end=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 10.2% losses on many benchmarks. <a href=\"https://github.com/rust-lang/rust/pull/74069\">#74069</a> <a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;end=cfade73820883adf654fe34fd6b0b03a99458a51\">responsible</a>, revert <a href=\"https://github.com/rust-lang/rust/pull/74611\">posted</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74113#issuecomment-661470398\">Support const args in type dependent paths (Take 2) #74113</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;end=7e11379f3b4c376fbb9a6c4d44f3286ccc28d149&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.5% losses on numerous benchmarks, which was expected.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74202#issuecomment-661475728\">Reduce the amount of interning and <code>layout_of</code> calls in const eval. #74202</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=4cd0ee9343da86d9770bf0a514a682d240e0dce8&amp;end=125c58caebc67c32ec45ac6c0581b596fd532082&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2% losses on one benchmark.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74543#issuecomment-661507295\">Rollup of 9 pull requests #74543</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=2c21a6f3a8b1c75c444b87fde5116853383b3fbd&amp;end=891e6fee572009ff2be4d4057fb33483610c36a7&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 12% losses on rustdoc for many benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74518#issuecomment-661498214\">Rollup of 4 pull requests #74518</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=48036804d2bc461b243c5d291b850e44bcca68ef&amp;end=d7f94516345a36ddfcd68cbdf1df835d356795c3&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 6.4% losses on rustdoc for two benchmarks.</p>\n</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">Rollup of 7 pull requests #74493</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;end=0701419e96d94e5493c7ebfcecb66511ab0aa778&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 33.5% improvements, at least partly due to the backout of<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416\">#74416</a> in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, but it's also<br>\n  possible that another PR in that rollup <a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">caused a regression that was masked\n  by the improvement from the backout</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74214#issuecomment-661459141\">Change <code>SymbolName::name</code> to a <code>&amp;str</code>. #74214</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=c714eae0e3b4ba263c193d54f6e46bb9a1feb2cc&amp;end=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2.5% wins on numerous benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73566#issuecomment-661484787\">Don't run <code>everybody_loops</code> for rustdoc; instead ignore resolution errors #73566</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=6ee1b62c811a6eb68d6db6dfb91f66a49956749b&amp;end=5c9e5df3a097e094641f16dab501ab1c4da10e9f&amp;stat=instructions:u\">instructions</a>):<br>\n  Wins of up to 62.6% and losses of up to 8.5%, all on rustdoc builds. Overall,<br>\n  the improvements greatly outweigh the losses. (Landed in rollup<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74408\">#74408</a>.)</p>\n</li>\n</ul>",
        "id": 204808693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516374
    },
    {
        "content": "<p>hmm</p>",
        "id": 204808711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516379
    },
    {
        "content": "<p>I was worried about that</p>",
        "id": 204808727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516386
    },
    {
        "content": "<p>(the Performance Log info is so long that it was condensed by Zulip into one message that is cut off with a <code>[More ...]</code>)</p>",
        "id": 204808820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516415
    },
    {
        "content": "<p>let me try again</p>",
        "id": 204808839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516426
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a></p>\n<p>This week was a disaster, perf-wise. 28 revisions checked. 7 regressions, several of them ranging from large to huge, many in rollups. Some additional regressions may have occurred in rollups that were masked by other regressions/improvements. 3 improvements, one of which was a reversion of a regression. Thanks for Mark-Simulacrum and eddyb for follow-up measurements and adding new tooling to help investigate regressions in rollups. A follow-up thread on Zulip is <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Follow-up.20to.20the.20bad.20perf.20triage.20of.202020-07-21\">here</a></p>\n<p>In better news, rustdoc performance is now being benchmarked, thanks to the<br>\nefforts of <a href=\"https://github.com/rust-lang/rustc-perf/pull/675\">Joshua Nelson</a>.</p>",
        "id": 204808863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516440
    },
    {
        "content": "<p>Triage done by njn. Revision range: <a href=\"https://perf.rust-lang.org/?start=9d09331e00b02f81c714b0c41ce3a38380dd36a2&amp;end=71384101ea3b030b80f7def80a37f67e148518b0&amp;absolute=false&amp;stat=instructions%3Au\">9d09331e00b02f81c714b0c41ce3a38380dd36a2..71384101ea3b030b80f7def80a37f67e148518b0</a>.</p>",
        "id": 204808886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516448
    },
    {
        "content": "<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74461#issuecomment-660492867\">Rollup of 18 pull requests #74461</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=39d5a61f2e4e237123837f5162cc275c2fd7e625&amp;end=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 73.0% losses on many benchmarks.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416#issuecomment-660545238\">#74416</a><br>\n  is at fault; it was reverted in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, see below.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73441#issuecomment-660881380\">std: Switch from libbacktrace to gimli #73441</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=instructions:u\">instructions</a>,<br>\n<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=max-rss\">max-rss</a>):<br>\n  Up to 44.8% instruction increases on many benchmarks, and 5-10% max-rss increases on many benchmarks. Being reverted in <a href=\"https://github.com/rust-lang/rust/pull/74613\">#74613</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74468#issuecomment-661371815\">Rollup of 11 pull requests #74468</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;end=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 10.2% losses on many benchmarks. <a href=\"https://github.com/rust-lang/rust/pull/74069\">#74069</a> <a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02&amp;end=cfade73820883adf654fe34fd6b0b03a99458a51\">responsible</a>, revert <a href=\"https://github.com/rust-lang/rust/pull/74611\">posted</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74113#issuecomment-661470398\">Support const args in type dependent paths (Take 2) #74113</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;end=7e11379f3b4c376fbb9a6c4d44f3286ccc28d149&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.5% losses on numerous benchmarks, which was expected.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74202#issuecomment-661475728\">Reduce the amount of interning and <code>layout_of</code> calls in const eval. #74202</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=4cd0ee9343da86d9770bf0a514a682d240e0dce8&amp;end=125c58caebc67c32ec45ac6c0581b596fd532082&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2% losses on one benchmark.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74543#issuecomment-661507295\">Rollup of 9 pull requests #74543</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=2c21a6f3a8b1c75c444b87fde5116853383b3fbd&amp;end=891e6fee572009ff2be4d4057fb33483610c36a7&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 12% losses on rustdoc for many benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74518#issuecomment-661498214\">Rollup of 4 pull requests #74518</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=48036804d2bc461b243c5d291b850e44bcca68ef&amp;end=d7f94516345a36ddfcd68cbdf1df835d356795c3&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 6.4% losses on rustdoc for two benchmarks.</p>\n</li>\n</ul>",
        "id": 204808916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516461
    },
    {
        "content": "<p>Improvements</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">Rollup of 7 pull requests #74493</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;end=0701419e96d94e5493c7ebfcecb66511ab0aa778&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 33.5% improvements, at least partly due to the backout of<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416\">#74416</a> in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, but it's also<br>\n  possible that another PR in that rollup <a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">caused a regression that was masked\n  by the improvement from the backout</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74214#issuecomment-661459141\">Change <code>SymbolName::name</code> to a <code>&amp;str</code>. #74214</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=c714eae0e3b4ba263c193d54f6e46bb9a1feb2cc&amp;end=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2.5% wins on numerous benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73566#issuecomment-661484787\">Don't run <code>everybody_loops</code> for rustdoc; instead ignore resolution errors #73566</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=6ee1b62c811a6eb68d6db6dfb91f66a49956749b&amp;end=5c9e5df3a097e094641f16dab501ab1c4da10e9f&amp;stat=instructions:u\">instructions</a>):<br>\n  Wins of up to 62.6% and losses of up to 8.5%, all on rustdoc builds. Overall,<br>\n  the improvements greatly outweigh the losses. (Landed in rollup<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74408\">#74408</a>.)</p>\n</li>\n</ul>",
        "id": 204808946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516476
    },
    {
        "content": "<p>so rollup <a href=\"https://github.com/rust-lang/rust/issues/74461\">#74461</a> caused big time losses (up to 73.0%), and PR <a href=\"https://github.com/rust-lang/rust/issues/74416\">#74416</a> was identified as culprit, but the reversion of <a href=\"https://github.com/rust-lang/rust/issues/74416\">#74416</a> in <a href=\"https://github.com/rust-lang/rust/issues/74478\">#74478</a> was in <em>another</em> rollup that then \"only\" provided 33.5% improvements</p>",
        "id": 204809157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516561
    },
    {
        "content": "<p>we're trying to track that down still</p>",
        "id": 204809189,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516579
    },
    {
        "content": "<p>/me remembers/realizes that they prefer scaling ratios over percentages to ease comparsions like this</p>",
        "id": 204809194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516584
    },
    {
        "content": "<p>(see <a href=\"https://github.com/rust-lang/rust/pull/74678\">https://github.com/rust-lang/rust/pull/74678</a>)</p>",
        "id": 204809199,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516587
    },
    {
        "content": "<p>i.e. saying 0.25x slower can be better than 75% slower because then the inverse is clearly 4x faster</p>",
        "id": 204809298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516635
    },
    {
        "content": "<p>vs ... 300% faster, right? depends on what you choose for denominator when computing %</p>",
        "id": 204809435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516690
    },
    {
        "content": "<p>anyway</p>",
        "id": 204809437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516692
    },
    {
        "content": "<p>this is sort of terrible because this was  super important thing to look into but we are out of time</p>",
        "id": 204809520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516729
    },
    {
        "content": "<p>but I take it that people are actively looking into it</p>",
        "id": 204809563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516745
    },
    {
        "content": "<p>I think we reverted everything that was a regression at this point</p>",
        "id": 204809579,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516751
    },
    {
        "content": "<p>(except for the uncertainty around  rollup <a href=\"https://github.com/rust-lang/rust/issues/74461\">#74461</a>)</p>",
        "id": 204809646,
        "sender_full_name": "simulacrum",
        "timestamp": 1595516771
    },
    {
        "content": "<p>just to wrap up meeting, there were two nominated issues, but they can wait until next week. I'll cut and paste them here but like I said&lt; i think they can wait</p>",
        "id": 204809681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516788
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Compiler doesn't terminate with --release\" <a href=\"https://github.com/rust-lang/rust/issues/74384\">rust#74384</a><ul>\n<li>Compiler doesn't \"terminate\" when nesting 3 arrays.</li>\n<li>\"It seems like this is an LLVM bug.\"</li>\n<li>Nominated to assign it</li>\n<li>On our last meeting we briefly mention it but wasn't picked up yet</li>\n</ul>\n</li>\n<li>\"error: could not compile <code>gkrust</code> since Rust 1.43 on SPARC Solaris\" <a href=\"https://github.com/rust-lang/rust/issues/74551\">rust#74551</a><ul>\n<li>Unassigned <code>I-unsound</code> stable to stable regression</li>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span>, <a href=\"https://github.com/rust-lang/rust/issues/74551#issuecomment-662273391\">they think this is concerning and may affect tier 1 platforms</a></li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for libs-impl this time.</li>\n</ul>",
        "id": 204809697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-23.20.2354818/near/204809520\">said</a>:</p>\n<blockquote>\n<p>this is sort of terrible because this was  super important thing to look into but we are out of time</p>\n</blockquote>\n<p>yeah it was important to discuss, maybe we should keep around a reference to this info for next meeting?</p>",
        "id": 204809701,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1595516796
    },
    {
        "content": "<p>right, there are two things</p>",
        "id": 204809737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516810
    },
    {
        "content": "<ol>\n<li>lets make sure we discuss this weeks performance issues in next week's meeting</li>\n</ol>",
        "id": 204809753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516820
    },
    {
        "content": "<p>my hope is that we will see amazing performance wins over this week</p>",
        "id": 204809775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516830
    },
    {
        "content": "<p>and I will just say \"well lets not pat ourselves on back too easily\"</p>",
        "id": 204809800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516842
    },
    {
        "content": "<p>but also</p>",
        "id": 204809809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516853
    },
    {
        "content": "<ol start=\"2\">\n<li>When performance triage results are this troubling, probably would be good to at least include a one or two line summary in the announcements</li>\n</ol>",
        "id": 204809839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516872
    },
    {
        "content": "<p>to ensure that we won't let it get missed if we happen to get bogged down in nominations</p>",
        "id": 204809892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516890
    },
    {
        "content": "<p>okay that's all folks!</p>",
        "id": 204809900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516895
    },
    {
        "content": "<p>thanks for attending, everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Stay safe, stay distant, but don't be a stranger! <span aria-label=\"mask\" class=\"emoji emoji-1f637\" role=\"img\" title=\"mask\">:mask:</span></p>",
        "id": 204809942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516918
    },
    {
        "content": "<p><span aria-label=\"dancer\" class=\"emoji emoji-1f483\" role=\"img\" title=\"dancer\">:dancer:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"ruler\" class=\"emoji emoji-1f4cf\" role=\"img\" title=\"ruler\">:ruler:</span> <span aria-label=\"dancing\" class=\"emoji emoji-1f57a\" role=\"img\" title=\"dancing\">:dancing:</span></p>",
        "id": 204809996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595516946
    },
    {
        "content": "<p>(1 _inch_<em>foot</em>)30cm rulers? so a total of ~1.5 meters <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> nice</p>",
        "id": 204810097,
        "sender_full_name": "lcnr",
        "timestamp": 1595516995
    }
]