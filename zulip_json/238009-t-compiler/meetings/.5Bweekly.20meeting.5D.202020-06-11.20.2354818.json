[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in ~ 17 hours 20 minutes</p>",
        "id": 200473447,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821638
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization\">#t-compiler/wg-prioritization</a></p>",
        "id": 200473679,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821766
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/lrfTIEYmQZ-3UAQiHm3xOQ?view\">meeting agenda</a></p>",
        "id": 200473717,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821787
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1117\">@WG-parallel-rustc</span> and <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span></p>",
        "id": 200473759,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821822
    },
    {
        "content": "<p>about <span class=\"user-group-mention\" data-user-group-id=\"1117\">@WG-parallel-rustc</span> do we want to mark it as inactive on compiler-team cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 200473884,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821889
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> ?</p>",
        "id": 200473926,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591821919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> no there's not much to report this time (I didn't even realize that much time had passed since the last check-in :)</p>",
        "id": 200474285,
        "sender_full_name": "lqd",
        "timestamp": 1591822113
    },
    {
        "content": "<p>yeah we should mark parallel as inactive</p>",
        "id": 200475431,
        "sender_full_name": "simulacrum",
        "timestamp": 1591822631
    },
    {
        "content": "<p>given that parallel is inactive, next in list if Polymorphization, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> do you have something you want to share about it?</p>",
        "id": 200503009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591846469
    },
    {
        "content": "<p>btw <a href=\"https://github.com/rust-lang/compiler-team/issues/308\">compiler-team#308</a>, inactivated parallel and reactivated rfc 2229</p>",
        "id": 200503093,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591846625
    },
    {
        "content": "<p>I don’t have much to say - I’ve been rebasing the pull request for polymorphisation but have yet to spend more time on it than that. I’ll do some digging to better understand the impact that CGU partitioning is having on the performance and anything else I can think of.</p>",
        "id": 200511280,
        "sender_full_name": "davidtwco",
        "timestamp": 1591859182
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 31 minutes</p>",
        "id": 200543597,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591882113
    },
    {
        "content": "<p><a href=\"https://hackmd.io/lrfTIEYmQZ-3UAQiHm3xOQ?view\">Check out the meeting agenda</a></p>",
        "id": 200543632,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591882135
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 200547938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884094
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 200547978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884112
    },
    {
        "content": "<ul>\n<li>Major Changes Proposals:<ul>\n<li>New accepted proposals<ul>\n<li>\"<code>mv src/lib{std,core,alloc,test,etc} std/lib{std,core,alloc,test,etc}</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/298\">#298</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 200548061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884138
    },
    {
        "content": "<p>Note that I think there's an open question there about whether to add a <code>src/</code>  directory in each of those newly moved crates</p>",
        "id": 200548207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884204
    },
    {
        "content": "<p>(the motivation being to have them match the \"standard\" crate layout. The main objection that I'm aware of is that doing so introduces an extra click on interfaces like github, which can be a real drag.)</p>",
        "id": 200548331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884253
    },
    {
        "content": "<ul>\n<li>Seconded proposals (in FCP)<ul>\n<li>\"illumos toolchain builds\" <a href=\"https://github.com/rust-lang/compiler-team/issues/279\">#279</a></li>\n<li>\"Make <code>CONTRIBUTING.md</code> into a series of tutorials\" <a href=\"https://github.com/rust-lang/compiler-team/issues/296\">#296</a></li>\n<li>\"Preserve <code>PlaceContext</code> through projections\" <a href=\"https://github.com/rust-lang/compiler-team/issues/300\">#300</a></li>\n<li>\"Make lang-items private\" <a href=\"https://github.com/rust-lang/compiler-team/issues/301\">#301</a> (NEW)</li>\n<li>\"<code>#[deny(unsafe_op_in_unsafe_fn)]</code> in liballoc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/306\">#306</a> (NEW)</li>\n</ul>\n</li>\n</ul>",
        "id": 200548382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884279
    },
    {
        "content": "<ul>\n<li>New proposals (not seconded)<ul>\n<li>\"--extern-location to specify where an --extern dependency is defined\" <a href=\"https://github.com/rust-lang/compiler-team/issues/303\">#303</a></li>\n<li>\"Support const parameters in type dependent paths\" <a href=\"https://github.com/rust-lang/compiler-team/issues/304\">#304</a></li>\n</ul>\n</li>\n</ul>",
        "id": 200548434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884303
    },
    {
        "content": "<ul>\n<li>Old proposals (not seconded)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">#277</a></li>\n</ul>\n</li>\n</ul>",
        "id": 200548468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884320
    },
    {
        "content": "<p>/me squints at <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a>. I really need to look at that one.</p>",
        "id": 200548497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884334
    },
    {
        "content": "<ul>\n<li>This week, and for future Thursday meetings, we will start presenting the WG checkins at the <em>start</em> of the meeting. Starting now. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></li>\n</ul>",
        "id": 200548677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884417
    },
    {
        "content": "<h3>WG checkins</h3>\n<blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1117\">@WG-parallel-rustc</span> is inactive.</p>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> has nothing to share this time.</p>\n</blockquote>",
        "id": 200548691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884425
    },
    {
        "content": "<p>Ah, I hadn't noticed <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a>, I need to look at that too</p>",
        "id": 200548729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591884442
    },
    {
        "content": "<p>(sorry <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span>!)</p>",
        "id": 200548747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591884456
    },
    {
        "content": "<p>IIRC it should be more salsa-like ;)</p>",
        "id": 200548765,
        "sender_full_name": "eddyb",
        "timestamp": 1591884464
    },
    {
        "content": "<p>yeah, i'm in favor of moving in that general direction</p>",
        "id": 200548846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591884489
    },
    {
        "content": "<p>Great, let's talk about that over here: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Decentralize.20queries.20compiler-team.23277/near/194545129\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Decentralize.20queries.20compiler-team.23277/near/194545129</a></p>",
        "id": 200548873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884503
    },
    {
        "content": "<p>but first ... beta-noms!</p>",
        "id": 200548963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884543
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\"><code>T-compiler</code></a></p>",
        "id": 200548981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884550
    },
    {
        "content": "<p>(why ... is there a box around that ...)</p>",
        "id": 200549018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884565
    },
    {
        "content": "<p><a href=\"http://not%20a%20link\">link</a></p>",
        "id": 200549056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884580
    },
    {
        "content": "<p>hmm</p>",
        "id": 200549062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884582
    },
    {
        "content": "<p>I'll have to puzzle that out another time</p>",
        "id": 200549078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884589
    },
    {
        "content": "<p>beta-nom 1/4: \"normalize adt fields during structural match checking\" <a href=\"https://github.com/rust-lang/rust/pull/72897\">#72897</a> </p>\n<p>- Beta fix for <a href=\"https://github.com/rust-lang/rust/issues/72896\">this P-critical issue</a></p>",
        "id": 200549162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884614
    },
    {
        "content": "<p><a href=\"http://ddg.gg\"><code>a monospace link</code></a></p>",
        "id": 200549178,
        "sender_full_name": "nagisa",
        "timestamp": 1591884621
    },
    {
        "content": "<p>(that's very interesting. Is that standard UI elsewhere?)</p>",
        "id": 200549261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884661
    },
    {
        "content": "<p>okay lets backport <a href=\"https://github.com/rust-lang/rust/issues/72897\">#72897</a></p>",
        "id": 200549362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884717
    },
    {
        "content": "<p>beta-nom 2/4: \"Revert pr 71840\" <a href=\"https://github.com/rust-lang/rust/pull/72989\">#72989</a></p>\n<p>- Beta fix for <a href=\"https://github.com/rust-lang/rust/issues/72470\">this P-critical issue</a> by reverting <a href=\"https://github.com/rust-lang/rust/pull/71840\">this PR</a></p>",
        "id": 200549448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884740
    },
    {
        "content": "<p><a href=\"http://rust-lang.org\">*presumably* **anything** __works__</a> (<strong>EDIT</strong>: nevermind...)</p>",
        "id": 200549485,
        "sender_full_name": "eddyb",
        "timestamp": 1591884759
    },
    {
        "content": "<p>okay, <a href=\"https://github.com/rust-lang/rust/issues/72989\">#72989</a> is beta-approved</p>",
        "id": 200549744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884849
    },
    {
        "content": "<p>beta-nom 3/4: - \"Fix link error with #[thread_local] introduced by <a href=\"https://github.com/rust-lang/rust/issues/71192\">#71192</a>\" <a href=\"https://github.com/rust-lang/rust/pull/73065\">#73065</a></p>\n<p>- This PR is nominated but is not merged yet</p>",
        "id": 200549782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I've added this one but I don't think we should vote ?</p>",
        "id": 200549804,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591884888
    },
    {
        "content": "<p>is not merged yet</p>",
        "id": 200549811,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591884892
    },
    {
        "content": "<p>I'm trying to remember the precedent here</p>",
        "id": 200549846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884912
    },
    {
        "content": "<p>Seems safe enough to me, modulo the fact that it's not merged yet</p>",
        "id": 200549859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591884918
    },
    {
        "content": "<p>I guess when its this early in the release cycle</p>",
        "id": 200549868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884921
    },
    {
        "content": "<p>I think we often wait to vote until it gets merged</p>",
        "id": 200549875,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591884925
    },
    {
        "content": "<p>we can leave it nominated for next week</p>",
        "id": 200549881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884927
    },
    {
        "content": "<p>yeah, its only when we're getting close to a release that we'll \"vote early\"</p>",
        "id": 200549903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884938
    },
    {
        "content": "<p>okay moving on then</p>",
        "id": 200549917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200549875\">said</a>:</p>\n<blockquote>\n<p>I think we often wait to vote until it gets merged</p>\n</blockquote>\n<p>I'd say given that we are early we should wait, just in case the code in the PR changes or something happens :)</p>",
        "id": 200549940,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591884957
    },
    {
        "content": "<p>beta-nom 4/4: \"Revert <a href=\"https://github.com/rust-lang/rust/issues/71956\">#71956</a>\" <a href=\"https://github.com/rust-lang/rust/pull/73153\">#73153</a></p>\n<p>- This fixes on beta <a href=\"https://github.com/rust-lang/rust/issues/73137\">this P-critical issue</a> by reverting <a href=\"https://github.com/rust-lang/rust/pull/71956\">this PR</a></p>",
        "id": 200550006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591884973
    },
    {
        "content": "<p>gotta love those double drops</p>",
        "id": 200550073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885010
    },
    {
        "content": "<p><span aria-label=\"drop\" class=\"emoji emoji-1f4a7\" role=\"img\" title=\"drop\">:drop:</span> <span aria-label=\"drop\" class=\"emoji emoji-1f4a7\" role=\"img\" title=\"drop\">:drop:</span></p>",
        "id": 200550090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885017
    },
    {
        "content": "<p>okay beta-approved then.</p>",
        "id": 200550121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885032
    },
    {
        "content": "<p>No beta nominations this time for <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3Alibs-impl\"><code>libs-impl</code></a> and <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-rustdoc\"><code>T-rustdoc</code></a>.</p>",
        "id": 200550176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885058
    },
    {
        "content": "<p>(oh yeah, did I already mention that we're going to be in charge of beta-approvals for T-rustdoc? I don't remember if that was discussed/announced more broadly than amongst <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span>  ...)</p>",
        "id": 200550285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885100
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p>No stable nominations this time for <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Astable-nominated+label%3AT-compiler\"><code>T-compiler</code></a>, <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Astable-nominated+label%3Alibs-impl\"><code>libs-impl</code></a> and <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Astable-nominated+label%3AT-rustdoc\"><code>T-rustdoc</code></a>.</p>",
        "id": 200550310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885116
    },
    {
        "content": "<p>yeah, we've discussed that and that's why we're adding those</p>",
        "id": 200550333,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591885126
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/73238\">https://github.com/rust-lang/rust/pull/73238</a></li>\n<li>simulacrum is thinking to unilaterally accept these changes for stable backport (but if people object, we can discuss).</li>\n</ul>",
        "id": 200550356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885139
    },
    {
        "content": "<p>there's also the cargo PR (linked from that one)</p>",
        "id": 200550393,
        "sender_full_name": "simulacrum",
        "timestamp": 1591885159
    },
    {
        "content": "<p>none of these are really T-compiler (backtrace is sort of T-libs-impl)</p>",
        "id": 200550414,
        "sender_full_name": "simulacrum",
        "timestamp": 1591885175
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/73238\">#73238</a> is a collection of version bumps of crates (rustfmt and backtrace-sys) as well as a cargo PR</p>",
        "id": 200550432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885183
    },
    {
        "content": "<p>so yeah, that's more a general awareness thing</p>",
        "id": 200550448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885191
    },
    {
        "content": "<p>next up</p>",
        "id": 200550472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885200
    },
    {
        "content": "<h2>PR's S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler S-waiting-on-team</a></p>",
        "id": 200550536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885210
    },
    {
        "content": "<ul>\n<li>\"Implement <code>--extern-location</code>\" <a href=\"https://github.com/rust-lang/rust/pull/72603\">#72603</a><ul>\n<li>This was already discussed last week</li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/303\">an MCP was filled</a> for this one</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></li>\n</ul>\n</li>\n</ul>",
        "id": 200550594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885230
    },
    {
        "content": "<p>it seemed like there was some significant questions raised here</p>",
        "id": 200550654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885254
    },
    {
        "content": "<p>here is associated zulip thread: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/--extern-location.20to.20specify.20where.20an.20--ex.20compiler-team.23303/near/200014262\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/--extern-location.20to.20specify.20where.20an.20--ex.20compiler-team.23303/near/200014262</a></p>",
        "id": 200550734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> what is best entity to talk to about automatically adding such links to the MCP issues? <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> ?</p>",
        "id": 200550839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885324
    },
    {
        "content": "<p>in any case, there's nothing to actually <em>do</em> here right now, besides seeing if anyone wants to second the proposal (which was filed 4 days ago, so its still relatively young)</p>",
        "id": 200550998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885401
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> said that it was hard to get the link for some reason</p>",
        "id": 200551064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885441
    },
    {
        "content": "<p>okay. Maybe I'll try to look more into this later</p>",
        "id": 200551124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885454
    },
    {
        "content": "<p>yeah I've been unable to track down a way to get zulip to give it to us</p>",
        "id": 200551126,
        "sender_full_name": "simulacrum",
        "timestamp": 1591885455
    },
    {
        "content": "<p>(I should probably bug zulip devs)</p>",
        "id": 200551138,
        "sender_full_name": "simulacrum",
        "timestamp": 1591885464
    },
    {
        "content": "<p>I would have thought if there exist zulip bots, then one of those could do it</p>",
        "id": 200551156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885474
    },
    {
        "content": "<p>but then again, I also discovered this morning that the Zulip app provides no way to get a URL for a topic or message in a topic</p>",
        "id": 200551187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885494
    },
    {
        "content": "<p>the mobile app, that is, on IOS at least</p>",
        "id": 200551223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885512
    },
    {
        "content": "<p>(speaking of things to bug Zulip devs about...)</p>",
        "id": 200551247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885529
    },
    {
        "content": "<p>anyway, next PR S-waiting-on-team ...</p>",
        "id": 200551265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885544
    },
    {
        "content": "<ul>\n<li>\"<code>#[deny(unsafe_op_in_unsafe_fn)]</code> in liballoc\" <a href=\"https://github.com/rust-lang/rust/pull/72709\">#72709</a><ul>\n<li>Feels like a policy question</li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/306\">An MCP was filed</a> for this one.</li>\n<li><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is in favor of landing it</li>\n</ul>\n</li>\n</ul>",
        "id": 200551281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885552
    },
    {
        "content": "<p>that can probably be un-nominated</p>",
        "id": 200551335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885565
    },
    {
        "content": "<p>we could talk after the meeting, maybe we can do something manually</p>",
        "id": 200551338,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591885567
    },
    {
        "content": "<p>the MCP is seconded'd</p>",
        "id": 200551346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885569
    },
    {
        "content": "<p>yeah its been seconded</p>",
        "id": 200551354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885572
    },
    {
        "content": "<p>though its still technically waiting-on-team, no?</p>",
        "id": 200551412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885592
    },
    {
        "content": "<p>oh but yes, the I-nominated can be removed I think</p>",
        "id": 200551425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885599
    },
    {
        "content": "<p>Should it be waiting-on-fcp instead?</p>",
        "id": 200551447,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1591885613
    },
    {
        "content": "<p>I think it can be left as waiting-on-team until the MCP is done?</p>",
        "id": 200551470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885630
    },
    {
        "content": "<p>I guess it depends on what waiting-on-fcp is meant to denote</p>",
        "id": 200551494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885645
    },
    {
        "content": "<p>I would have interpreted waiting-on-fcp as being about an fcp <em>on the PR or issue</em> <strong>itself</strong></p>",
        "id": 200551524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885665
    },
    {
        "content": "<p>and so I'd worry about it being confusing for on-lookers</p>",
        "id": 200551606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885688
    },
    {
        "content": "<p>in any case, I think we can move along here</p>",
        "id": 200551644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885709
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\">3 P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">39 P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">17 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 5 P-medium regression-from-stable-to-beta</a><ul>\n<li>There is only 1 P-critical and 1 P-medium assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 4 P-medium, 1 P-low regression-from-stable-to-nightly</a><ul>\n<li>Only the P-critical is assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">70 regression-from-stable-to-stable</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\">14 of those are not prioritized</a>.</li>\n</ul>\n</li>\n</ul>\n<p>There is 1 less <code>P-critical</code> issues and 2 more <code>P-high</code> issue in comparison with last week.</p>",
        "id": 200551659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885721
    },
    {
        "content": "<p>I think one of the two <code>P-high</code> issues is actually a downgrade of the <code>P-critical</code> issue to <code>P-high</code>; does that sound accurate <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ?</p>",
        "id": 200551706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885758
    },
    {
        "content": "<p>(is it useful to keep track of that separately? Or is it just noise?)</p>",
        "id": 200551730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200551706\">said</a>:</p>\n<blockquote>\n<p>I think one of the two <code>P-high</code> issues is actually a downgrade of the <code>P-critical</code> issue to <code>P-high</code>; does that sound accurate <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> ?</p>\n</blockquote>\n<p>yes</p>",
        "id": 200551758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591885790
    },
    {
        "content": "<p>The P-criticial issue:</p>\n<blockquote>\n<p>Double Drop on Rust beta <a href=\"https://github.com/rust-lang/rust/issues/73137\">#73137</a></p>\n</blockquote>",
        "id": 200551775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885801
    },
    {
        "content": "<h3>P-critical</h3>",
        "id": 200551829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200551730\">said</a>:</p>\n<blockquote>\n<p>(is it useful to keep track of that separately? Or is it just noise?)</p>\n</blockquote>\n<p>unsure ...</p>",
        "id": 200551838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591885807
    },
    {
        "content": "<p>sounds vaguely like the thing that <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> fixed via revert?</p>",
        "id": 200551857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885819
    },
    {
        "content": "<p>(oh, I see in the comments that indeed that is correct)</p>",
        "id": 200551898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591885842
    },
    {
        "content": "<p>yes, I think it specifically is discussed in the following items in the agenda</p>",
        "id": 200551904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885844
    },
    {
        "content": "<p>the P-critical issue that was downgraded to P-high is different, its the one that I made a revert PR for</p>",
        "id": 200551935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885864
    },
    {
        "content": "<p>we'll see them both right now. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 200551962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885878
    },
    {
        "content": "<ul>\n<li>\"LLVM error: \"Instruction does not dominate all uses!\" on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/72470\">#72470</a><ul>\n<li>This has been fixed by this <a href=\"https://github.com/rust-lang/rust/pull/72989\">PR</a></li>\n<li>This <a href=\"https://github.com/rust-lang/rust/issues/72470#issuecomment-642271780\">should probably not be <code>P-critical</code> anymore</a></li>\n</ul>\n</li>\n<li>\"Double Drop on Rust beta\" <a href=\"https://github.com/rust-lang/rust/issues/73137\">#73137</a><ul>\n<li>This has been fixed by this <a href=\"https://github.com/rust-lang/rust/pull/73153\">PR</a></li>\n<li>This <a href=\"https://github.com/rust-lang/rust/issues/73137#issuecomment-642279433\">should probably not be <code>P-critical</code> anymore</a></li>\n</ul>\n</li>\n</ul>",
        "id": 200551980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885891
    },
    {
        "content": "<p>hmm, so if both of those are still marked as P-critical, maybe <em>my</em> understanding above was incorrect</p>",
        "id": 200552098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885930
    },
    {
        "content": "<p>I guess we should just change them to <code>P-high</code> and continue but if we want to keep track of those maybe we need some way to do that?</p>",
        "id": 200552126,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591885947
    },
    {
        "content": "<p>well</p>",
        "id": 200552172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885977
    },
    {
        "content": "<p>there's one reason to leave them at P-critical</p>",
        "id": 200552185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885982
    },
    {
        "content": "<p>if the revert PR's haven't been backported yet</p>",
        "id": 200552215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591885994
    },
    {
        "content": "<p>and they are stable-to-beta regressions at this point</p>",
        "id": 200552235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886003
    },
    {
        "content": "<p>(which I think they both are, even though <a href=\"https://github.com/rust-lang/rust/issues/72470\">#72470</a> is not marked as such)</p>",
        "id": 200552255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886015
    },
    {
        "content": "<p>well yeah, but those should be beta/stable nominated so they are tracked</p>",
        "id": 200552266,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591886022
    },
    {
        "content": "<p>I guess its open-to-debate about whether its worth leaving such things at P-critical</p>",
        "id": 200552370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886062
    },
    {
        "content": "<p>IMO we should aggressively de-P-critical</p>",
        "id": 200552424,
        "sender_full_name": "simulacrum",
        "timestamp": 1591886090
    },
    {
        "content": "<p>(I think it makes sense, in terms of ensuring we pay attention to potential release blockers.)</p>",
        "id": 200552445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886102
    },
    {
        "content": "<p>I would certainly de-P-critical after the beta-backports land</p>",
        "id": 200552482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886121
    },
    {
        "content": "<p>for cases like <a href=\"https://github.com/rust-lang/rust/issues/72470\">#72470</a> which might remain open but demoted in priority, at least</p>",
        "id": 200552520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886140
    },
    {
        "content": "<p>shouldn't we mark the PRs then as beta/stable-nominated and mark those as P-critical ?</p>",
        "id": 200552540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591886150
    },
    {
        "content": "<p>I guess that would be easier to understand</p>",
        "id": 200552617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591886167
    },
    {
        "content": "<p>hmm</p>",
        "id": 200552631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886172
    },
    {
        "content": "<p>beta backports... don't really make sense as being prioritized</p>",
        "id": 200552635,
        "sender_full_name": "simulacrum",
        "timestamp": 1591886174
    },
    {
        "content": "<p>like, they'll happen eventually but they do so in a rollup generally which includes everything accepted at that time</p>",
        "id": 200552691,
        "sender_full_name": "simulacrum",
        "timestamp": 1591886198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you mean because we generalize don't prioritize any PR's formally?</p>",
        "id": 200552714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886208
    },
    {
        "content": "<p>well, sure, but in this case even more so</p>",
        "id": 200552734,
        "sender_full_name": "simulacrum",
        "timestamp": 1591886216
    },
    {
        "content": "<p>oh you just mean in terms of workflow, there's no need?</p>",
        "id": 200552741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886219
    },
    {
        "content": "<p>since there's not even \"review\" that needs to happen</p>",
        "id": 200552743,
        "sender_full_name": "simulacrum",
        "timestamp": 1591886221
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200552691\">said</a>:</p>\n<blockquote>\n<p>like, they'll happen eventually but they do so in a rollup generally which includes everything accepted at that time</p>\n</blockquote>\n<p>yep, that's also why I would just change the priority, because we will get to those anyway</p>",
        "id": 200552765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591886231
    },
    {
        "content": "<p>As long as the bugs get fixed in time, I don't care</p>",
        "id": 200552784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886241
    },
    {
        "content": "<p>agreed <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, I'm also fine with whatever :)</p>",
        "id": 200552812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1591886259
    },
    {
        "content": "<p>I can definitely understand a concern that we might let the set of P-critical bugs blow up</p>",
        "id": 200552824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886263
    },
    {
        "content": "<p>and then we end up in the same situation we were in with P-high</p>",
        "id": 200552835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886271
    },
    {
        "content": "<p>so sure, these P-critical things are well-in-hand</p>",
        "id": 200552850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886280
    },
    {
        "content": "<p>and therefore probably can be safely deprioritized at this point</p>",
        "id": 200552910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886292
    },
    {
        "content": "<p>in any csae</p>",
        "id": 200552947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886317
    },
    {
        "content": "<p>there's one last P-critical bug to discuss</p>",
        "id": 200552965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886324
    },
    {
        "content": "<ul>\n<li>\"Slice index becomes wrong (beta regression)\" <a href=\"https://github.com/rust-lang/rust/issues/73223\">#73223</a><ul>\n<li>This is a regression from stable to beta</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/73223#issuecomment-642530618\">It's also a fairly easy to trigger miscompilation</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/69756\">Regressed PR was identified</a></li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> who is already on it</li>\n</ul>\n</li>\n</ul>",
        "id": 200552979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886333
    },
    {
        "content": "<p>hmm. Do we not run <code>miri</code> on the output of mir-optimized form?</p>",
        "id": 200553070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886384
    },
    {
        "content": "<p>just curious, if this bug was injected by a MIR optimization, why it didn't replicate under miri</p>",
        "id": 200553135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886404
    },
    {
        "content": "<p>This is caused by a MIR-opt we switched on in the last dev-cycle that just hit beta. I'm planning to submit a beta-backport PR that switches this off again within the next 24hours while also pursuing the real fix on nightly.</p>",
        "id": 200553149,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591886410
    },
    {
        "content": "<p>(is it a deliberate design choice that miri is meant to run on the initially generated MIR, not optimized MIR?)</p>",
        "id": 200553228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886452
    },
    {
        "content": "<p>It's a mis-optimization of the MIR and miri consumes optimized MIR so it doesn't catch it I guess?</p>",
        "id": 200553237,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591886458
    },
    {
        "content": "<p>also, should I subscribe <span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> to this stream? :)</p>",
        "id": 200553263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886475
    },
    {
        "content": "<p>Doesn't miri run on unoptimized mir to detect undefined behavior</p>",
        "id": 200553294,
        "sender_full_name": "lcnr",
        "timestamp": 1591886491
    },
    {
        "content": "<p>which might get removed by mir optimizations?</p>",
        "id": 200553318,
        "sender_full_name": "lcnr",
        "timestamp": 1591886501
    },
    {
        "content": "<p>Oh sorry</p>",
        "id": 200553321,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591886502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200553237\">said</a>:</p>\n<blockquote>\n<p>It's a mis-optimization of the MIR and miri consumes optimized MIR so it doesn't catch it I guess?</p>\n</blockquote>\n<p>but that's my point: if its a result of a mir-optimization being incorrect, then I would have thought miri would catch it?</p>",
        "id": 200553341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886515
    },
    {
        "content": "<p>Yeah, not sure</p>",
        "id": 200553402,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591886529
    },
    {
        "content": "<p>UI</p>",
        "id": 200553409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886534
    },
    {
        "content": "<p>I like <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> 's explanation</p>",
        "id": 200553427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886542
    },
    {
        "content": "<p>anyway thanks <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> for looking into this!</p>",
        "id": 200553455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886563
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p>No unassigned P-high regressions this time.</p>",
        "id": 200553566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886615
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a></p>\n<p>Regressions:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73072#issuecomment-640225441\">Update LLVM submodule to include lld NOLOAD fix</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=450abe80f193ccefbfcd48214d70520f2d507f0e&amp;end=a2fc33e0c87a258542cd12d6ffae52c43aa3785a&amp;stat=instructions:u\">instructions</a>):<br>\n  A small regression in debug builds due to LLVM. Pulling in <a href=\"https://reviews.llvm.org/D80964\">this LLVM\n  change</a> may fix it.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73081#issuecomment-640951745\">Rollup of 5 pull requests</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=9c1857fad849ad56d38327b9bc11377a0bdbb4cf&amp;end=450abe80f193ccefbfcd48214d70520f2d507f0e&amp;stat=instructions:u\">instructions</a>)</p>\n</li>\n</ul>\n<p>Improvements:</p>\n<ul>\n<li>None.</li>\n</ul>",
        "id": 200553587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886625
    },
    {
        "content": "<p>hmm</p>",
        "id": 200553714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886679
    },
    {
        "content": "<p>how much was the perf regr from the rollup?</p>",
        "id": 200553755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886703
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=9c1857fad849ad56d38327b9bc11377a0bdbb4cf&amp;end=450abe80f193ccefbfcd48214d70520f2d507f0e&amp;stat=instructions:u\">found the link</a></p>",
        "id": 200553790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886721
    },
    {
        "content": "<p>(It's the <code>(instructions)</code> link above <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> )</p>",
        "id": 200553830,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591886742
    },
    {
        "content": "<p>ah :)</p>",
        "id": 200553842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886749
    },
    {
        "content": "<p>I interpreted that as \"here are some instructions for how to reproduce\" or something</p>",
        "id": 200553856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886757
    },
    {
        "content": "<p>cranelift-codegen-opt observed -4.7%</p>",
        "id": 200553911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886768
    },
    {
        "content": "<p>based on working hypothesis, it could be because of my revert PR <a href=\"https://github.com/rust-lang/rust/issues/72989\">#72989</a></p>",
        "id": 200553987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886810
    },
    {
        "content": "<p>since the PR it reverts, (PR <a href=\"https://github.com/rust-lang/rust/issues/71840\">#71840</a>), had some small-sounding optimizations in it</p>",
        "id": 200554033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886837
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/71840\">#71840</a> itself did have a perf run associated with it</p>",
        "id": 200554139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886881
    },
    {
        "content": "<p>let me see if that had a similar <em>gain</em> on cranelift-codegen-opt</p>",
        "id": 200554192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886892
    },
    {
        "content": "<p>it did not</p>",
        "id": 200554229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886917
    },
    {
        "content": "<p>hmm</p>",
        "id": 200554232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886919
    },
    {
        "content": "<p>well</p>",
        "id": 200554298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886967
    },
    {
        "content": "<p>I don't think we should revert the revert</p>",
        "id": 200554311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886977
    },
    {
        "content": "<p>Yeah</p>",
        "id": 200554328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886990
    },
    {
        "content": "<p>this performance hit doesn't justify reinjecting the bug</p>",
        "id": 200554329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591886990
    },
    {
        "content": "<p>We don't <em>know</em> that's the cause, also?</p>",
        "id": 200554342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591886994
    },
    {
        "content": "<p>but it may motivate investigating: 1. Is this the cause, and 2. if so, is there a way to fix PR <a href=\"https://github.com/rust-lang/rust/issues/71840\">#71840</a>  to be non-buggy and re-land it...</p>",
        "id": 200554444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887028
    },
    {
        "content": "<p>but also, the perf hit here... doesn't seem that bad?</p>",
        "id": 200554470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span> themself said that script-servo-opt should be ignored as too noisy in its runs. So cranelift-codegen-opt seems like the main crate that was hit</p>",
        "id": 200554545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887079
    },
    {
        "content": "<p>it's not that bad</p>",
        "id": 200554593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887111
    },
    {
        "content": "<p>I think we should let this be for now</p>",
        "id": 200554594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887111
    },
    {
        "content": "<p>next up</p>",
        "id": 200554612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887119
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler I-nominated</a></p>",
        "id": 200554657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887124
    },
    {
        "content": "<p>nom 1/3: \"Backtraces don't work during ICE\" <a href=\"https://github.com/rust-lang/rust/issues/71060\">#71060</a></p>\n<ul>\n<li>Nominated because: \"Rustc ICE backtraces are totally broken on windows-gnu (Tier 1) platform.\"</li>\n<li>Assigned: No one</li>\n<li><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> has a partial fix downstream. He says <a href=\"https://github.com/rust-lang/rust/issues/71060#issuecomment-642203477\">there are three potential ways to fix this for rustc</a>.</li>\n</ul>",
        "id": 200554689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887140
    },
    {
        "content": "<p>From alex's comment: </p>\n<blockquote>\n<p>Ok I've whipped up <a href=\"https://github.com/rust-lang/backtrace-rs/pull/345\">https://github.com/rust-lang/backtrace-rs/pull/345</a> which I believe works at least for the <code>gimli-symbolize</code> feature. This does not affect libstd and transitively means it, with no other changes, will continue to not help the compiler itself (e.g. ICEs). Fixing ICEs can be done a few different ways:</p>\n<ul>\n<li>Write the same code for libbacktrace itself, and update that in the backtrace-sys crate.</li>\n<li>Update the compiler to use the <code>backtrace</code> crate instead of the standard library for ICE backtraces</li>\n<li>Push on <a href=\"https://github.com/rust-lang/backtrace-rs/issues/328\">https://github.com/rust-lang/backtrace-rs/issues/328</a> to get libstd to use gimli, likely as <a href=\"https://github.com/rust-lang/backtrace-rs/issues/328#issuecomment-628264608\">outlined here</a></li>\n</ul>\n</blockquote>",
        "id": 200554839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887216
    },
    {
        "content": "<p>should we consider making compiler use backtrace crate itself?</p>",
        "id": 200554867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887232
    },
    {
        "content": "<p>or should we make the stdlib backtrace functionality more robust?</p>",
        "id": 200554931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887249
    },
    {
        "content": "<p>back when we weren't libs-impl, I would have said \"obviously we should do the option of making the compiler use backtrace crate\"</p>",
        "id": 200554988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887276
    },
    {
        "content": "<p>but now I guess the decision is more nuanced.</p>",
        "id": 200555004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887286
    },
    {
        "content": "<p>hm do we care that much about specifically ICE backtraces working on windows-gnu? Is that a common platform to have \"unique\" ICEs on?</p>",
        "id": 200555009,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887288
    },
    {
        "content": "<p>but IIRC the std-using-backtrace is somewhat hard, so I wouldn't block on that personally</p>",
        "id": 200555038,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887307
    },
    {
        "content": "<p>I would guess that given the platforms uncommonness, its all the more important to have working backtraces, because that helps us (maybe?) diagnose bugs without replicating them locally?</p>",
        "id": 200555197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887369
    },
    {
        "content": "<p>hm perhaps</p>",
        "id": 200555226,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887378
    },
    {
        "content": "<p>there seems to be a fair amount of conversation on <a href=\"https://github.com/rust-lang/backtrace-rs/issues/328\">rust-lang/backtrace-rs#328</a></p>",
        "id": 200555247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887386
    },
    {
        "content": "<p>What do other people think about that assertion, from the viewpoint of maintaining the compiler itself?</p>",
        "id": 200555248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887387
    },
    {
        "content": "<p>seems like using backtrace in the compiler with gimli should be pretty easy</p>",
        "id": 200555255,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887390
    },
    {
        "content": "<p>what is gimli ?</p>",
        "id": 200555303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887411
    },
    {
        "content": "<p>I don't really have a strong opinion about this, but I think that having the compiler use backtrace, if it's easy, seems ok as a crutch.</p>",
        "id": 200555316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887418
    },
    {
        "content": "<p>oh, it's the rust replacement for libbacktrace</p>",
        "id": 200555346,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887428
    },
    {
        "content": "<p>The person who asked for the nomination had this to say: </p>\n<blockquote>\n<p>Reason for nomination:<br>\nRustc ICE backtraces are totally broken on windows-gnu (Tier 1) platform.<br>\nThis not only makes life harder for people developing Rust using windows-gnu toolchain but also makes backtraces provided by the users completely useless (example here <a href=\"https://github.com/rust-lang/rust/issues/73114\">#73114</a>).<br>\nIs there anybody who knows enough about Windows unwinding enough to assist here? Or in the other case could you announce something like \"call for help\"?</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/71060#issuecomment-641489851\">https://github.com/rust-lang/rust/issues/71060#issuecomment-641489851</a></li>\n</ul>",
        "id": 200555399,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591887453
    },
    {
        "content": "<p>is this something that our new windows WG can help with?</p>",
        "id": 200555443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887478
    },
    {
        "content": "<p>or is it too in the weeds for them?</p>",
        "id": 200555503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887487
    },
    {
        "content": "<p>oh I want to make sure we hit the other nominated issues before time is up</p>",
        "id": 200555538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887509
    },
    {
        "content": "<p>It couldn't hurt to ping them</p>",
        "id": 200555560,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591887521
    },
    {
        "content": "<ul>\n<li>nom 2/3: \"<code>#[deny(unsafe_op_in_unsafe_fn)]</code> in liballoc\" <a href=\"https://github.com/rust-lang/rust/pull/72709\">#72709</a><br>\n    - Nominated for discussion by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>: Do we want to make use of the new <code>unsafe_op_in_unsafe_fn</code> lint? <br>\n    - Assigned: @<strong>Mark-Simulacrum</strong><br>\n    - Some reviews have already been done. It seems like we just want to see if anyone disagrees with landing this.</li>\n</ul>",
        "id": 200555578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887529
    },
    {
        "content": "<p>They were already pinged :)</p>",
        "id": 200555582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887530
    },
    {
        "content": "<p>ah thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 200555591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887537
    },
    {
        "content": "<p>there was already an MCP for <a href=\"https://github.com/rust-lang/rust/issues/72709\">#72709</a></p>",
        "id": 200555632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887554
    },
    {
        "content": "<p>oh yeah we in fact said \"lets remove the nominated label\", didn't we?</p>",
        "id": 200555678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887567
    },
    {
        "content": "<p>heh</p>",
        "id": 200555688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887570
    },
    {
        "content": "<p>okay</p>",
        "id": 200555690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887571
    },
    {
        "content": "<p>yeah we should probably just land this</p>",
        "id": 200555712,
        "sender_full_name": "simulacrum",
        "timestamp": 1591887580
    },
    {
        "content": "<p>last up</p>",
        "id": 200555722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887582
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl I-nominated</a></p>",
        "id": 200555730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887586
    },
    {
        "content": "<ul>\n<li>nom 3/3: \"<code>nth_back()</code> for <code>Zip</code> returns wrong values\" <a href=\"https://github.com/rust-lang/rust/issues/68536\">#68536</a><ul>\n<li>Nominated to determine how can we fix this problem and to raise awareness of it.</li>\n</ul>\n</li>\n</ul>",
        "id": 200555757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887596
    },
    {
        "content": "<p>seems serious :)</p>",
        "id": 200555846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887611
    },
    {
        "content": "<p>it also seems like <a href=\"https://github.com/rust-lang/rust/issues/68536#issuecomment-583799025\">this comment</a> kind of nails down the problem, which is some kind of interaction having to do w/ a specialized impl</p>",
        "id": 200555926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887646
    },
    {
        "content": "<p>There's discussion on issue <a href=\"https://github.com/rust-lang/rust/issues/68536\">#68536</a> on ways to fix it</p>",
        "id": 200555953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887654
    },
    {
        "content": "<p>seems like its \"just a bug\", which we should indeed try to fix</p>",
        "id": 200556061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887690
    },
    {
        "content": "<p>I suspect the hardest thing is to properly evaluate chance of regressions</p>",
        "id": 200556103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887709
    },
    {
        "content": "<p>okay so now that's we've touched on those</p>",
        "id": 200556127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887720
    },
    {
        "content": "<p>back to <a href=\"https://github.com/rust-lang/rust/issues/71060\">#71060</a> for a sec</p>",
        "id": 200556193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887733
    },
    {
        "content": "<p>Does anyone want to take point on this?</p>",
        "id": 200556219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887740
    },
    {
        "content": "<p>/me just got Windows dual-booting going yesterday; I might be willing to poke at it</p>",
        "id": 200556297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887770
    },
    {
        "content": "<p>but I'm definitely <em>not</em> an expert</p>",
        "id": 200556317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-06-11.20.2354818/near/200555316\">said</a>:</p>\n<blockquote>\n<p>I don't really have a strong opinion about this, but I think that having the compiler use backtrace, if it's easy, seems ok as a crutch.</p>\n</blockquote>\n<p>Right now I think I'd opt to do this.</p>",
        "id": 200556494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887842
    },
    {
        "content": "<p>if for no other reason than \"it seems the simplest thing to do, to make our own lives easier, in the short term.\"</p>",
        "id": 200556572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887870
    },
    {
        "content": "<p>agreed</p>",
        "id": 200556619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591887892
    },
    {
        "content": "<p>is this decision worthy of an MCP ?</p>",
        "id": 200556631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887898
    },
    {
        "content": "<p>anyway our time is up</p>",
        "id": 200556660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887910
    },
    {
        "content": "<p>thank you to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! This was great!</p>",
        "id": 200556690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887920
    },
    {
        "content": "<p>stay safe, stay well! <span aria-label=\"mask\" class=\"emoji emoji-1f637\" role=\"img\" title=\"mask\">:mask:</span></p>",
        "id": 200556711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1591887927
    }
]