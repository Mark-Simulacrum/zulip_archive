[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/hvTe3AtoR72qQN_9YVy9fQ?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span>  checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>: anything to share?</li>\n<li>@_wg-polymorphization_ checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (checkin in the agenda)</li>\n</ul>",
        "id": 259377608,
        "sender_full_name": "apiraino",
        "timestamp": 1635422743
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! We’re starting the weekly triage meeting now; leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 259392289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429654
    },
    {
        "content": "<p>Heads up: next week timezones between EU and US are having fun again. So all meetings are one hour earlier in EU timezones</p>",
        "id": 259392551,
        "sender_full_name": "oli",
        "timestamp": 1635429743
    },
    {
        "content": "<p>We’ll start off with usual ~6 minutes for announcements</p>",
        "id": 259392556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429745
    },
    {
        "content": "<p>I wanted to point people at this topic over in <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a>:</p>\n<p><a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/rustc.20code.20reading.20club\">#t-compiler &gt; rustc code reading club</a></p>",
        "id": 259392607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635429774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has the EU done away with daylight savings yet?</p>",
        "id": 259392608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429774
    },
    {
        "content": "<p>nope</p>",
        "id": 259392617,
        "sender_full_name": "oli",
        "timestamp": 1635429778
    },
    {
        "content": "<p>isn’t that supposed to happen sometime in next two or three years?</p>",
        "id": 259392643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429791
    },
    {
        "content": "<p>maybe I misremember what I heard when I was living there</p>",
        "id": 259392672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429806
    },
    {
        "content": "<p>From the topic:</p>\n<blockquote>\n<p>Hey <span class=\"user-group-mention silent\" data-user-group-id=\"492\">T-compiler</span>! <span class=\"user-mention silent\" data-user-id=\"394977\">Doc Jones</span> and I had this idea for a rustc code reading club. I'm hoping that many of you would like to join for the <a href=\"https://rust-code-reading-club.github.io/rustc/meetings/2021-11-04.html\">first meeting</a>! We had made a <a href=\"https://rust-code-reading-club.github.io/rustc/\">little website here</a>.</p>\n</blockquote>",
        "id": 259392683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635429811
    },
    {
        "content": "<p>well... I'm not on top of things, but something is supposed to happen, and no one is sure what exactly</p>",
        "id": 259392696,
        "sender_full_name": "oli",
        "timestamp": 1635429816
    },
    {
        "content": "<p>But also note the question of how people feel about moving that repo into rust-lang :)</p>",
        "id": 259392702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635429823
    },
    {
        "content": "<ul>\n<li>If you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message Felix or Wesley so we can pass it along). \"If you see something, say something\"</li>\n</ul>",
        "id": 259392788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429851
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 259392835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429872
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip about 10 days ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: GH none, Zulip 1 month ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: GH none, Zulip about 1 month ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 259392857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429883
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for <code>#![feature(const_precise_live_drops)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/73255\">rust#73255</a></li>\n<li>\"Stabilize -Z strip as -C strip\" <a href=\"https://github.com/rust-lang/rust/pull/90058\">rust#90058</a></li>\n<li>\"Stabilize -Z symbol-mangling-version as -C symbol-mangling-version\" <a href=\"https://github.com/rust-lang/rust/pull/90128\">rust#90128</a></li>\n</ul>\n</li>\n</ul>",
        "id": 259392881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429895
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 259392906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429905
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a></li>\n</ul>\n</li>\n</ul>",
        "id": 259392925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429913
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>No new finished FCP (disposition merge) this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 259392940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429920
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 259393074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429963
    },
    {
        "content": "<ul>\n<li>\n<p>@_WG-mir-opt_ checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (<a href=\"https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg#WG-checkins\">previous checkin</a>):</p>\n<blockquote>\n<p>We have moved to a \"merge fast\" policy for new mir opts. This means we add them behind mir-opt-level=4 (very unstable, probably unsound) without necessarily reviewing them with the detail required for anything we expose to users. This allows us to quickly move ahead with new opts without burdening the author with too much rebasing due to mir tests changing under them.</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/90016\">#90016</a> is an optimization currently WIP that uses dataflow to figure out when a match arm is unreachable. This is a very simple form of VRA (value range analysis) that only works for matches on integers, bools and chars, but it is expected to become more powerful and be able to handle enums and comparisons, too.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 259393087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429970
    },
    {
        "content": "<ul>\n<li>@_wg-polymorphization_ checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg#WG-checkins\">previous checkin</a>):<blockquote>\n<p>There's a polymorphization update! Surprise!</p>\n<ul>\n<li>@\\__davidtwco_ submitted <a href=\"https://github.com/rust-lang/rust/issues/89426\">#89426</a> which makes polymorphization pass tests on master, removes some special-case predicate logic that isn't necessary now (after earlier work on the v0 mangling scheme that landed many months ago), and makes the <code>unused_generic_params</code> query work on instances rather than just functions (so that shims can be polymorphized). Approved and merged by @\\_lcnr.</li>\n<li>@_lcnr_ is working on a fix for <a href=\"https://github.com/rust-lang/rust/issues/75325\">#75325</a>, this is the primary blocker for polymorphization, and the fix should enable greater polymorphization in the long run. Work-in-progress PR at <a href=\"https://github.com/rust-lang/rust/issues/90057\">#90057</a>, and some rough sketches of the design <a href=\"https://hackmd.io/CJ2zzXm0RtGORidx83RtBg\">in a HackMD document</a>.</li>\n</ul>\n</blockquote>\n</li>\n</ul>",
        "id": 259393108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635429981
    },
    {
        "content": "<p>I'm really happy to see polymorphization moving forward again. Great job <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> and <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 259393280,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430053
    },
    {
        "content": "<p>ooh, very cool yes!</p>",
        "id": 259393302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635430062
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 259393662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430198
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix ICE when forgetting to <code>Box</code> a parameter to a <code>Self::func</code> call\" <a href=\"https://github.com/rust-lang/rust/pull/90221\">rust#90221</a><ul>\n<li>Closes a <code>P-high</code> issue <a href=\"https://github.com/rust-lang/rust/issues/90213\">rust#90213</a></li>\n<li>(Unilaterally approved by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, no discussion required.)</li>\n</ul>\n</li>\n</ul>",
        "id": 259393711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430205
    },
    {
        "content": "<p>I already approved this one, so that’s more of an announcement</p>",
        "id": 259393754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430216
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 259393759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430221
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259392702\">said</a>:</p>\n<blockquote>\n<p>But also note the question of how people feel about moving that repo into rust-lang :)</p>\n</blockquote>\n<p>Is this like \"speak now or forever hold your peace?\"    <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 259393765,
        "sender_full_name": "Doc Jones",
        "timestamp": 1635430223
    },
    {
        "content": "<p>well, its not an irreverisble change</p>",
        "id": 259393815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430243
    },
    {
        "content": "<p>But I interpreted Niko’s note more like “hey, we would like to see enthusaism for this step before we take it.\"</p>",
        "id": 259393874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430276
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 259393896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430291
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix documentation header sizes\" <a href=\"https://github.com/rust-lang/rust/pull/90186\">rust#90186</a><ul>\n<li>no concerns from <code>T-rustdoc</code>, can be safely beta-backported</li>\n</ul>\n</li>\n</ul>",
        "id": 259393903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430297
    },
    {
        "content": "<p>seems fine to me.</p>",
        "id": 259394079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430355
    },
    {
        "content": "<p>backport approved, unless someone points something out that I’m missing.</p>",
        "id": 259394099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430366
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 259394124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430379
    },
    {
        "content": "<ul>\n<li>\"Change default panic strategy to abort for wasm32-unknown-emscripten\" <a href=\"https://github.com/rust-lang/rust/pull/89762\">rust#89762</a><ul>\n<li>also nominated by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> (<a href=\"https://github.com/rust-lang/rust/pull/89762#issuecomment-952012634\">see comment</a>) to discuss the strategy to adopt</li>\n<li>Fixes a P-high issue <a href=\"https://github.com/rust-lang/rust/issues/85821\">rust#85821</a>, emscripten target compiling on trivial code</li>\n</ul>\n</li>\n</ul>",
        "id": 259394157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430392
    },
    {
        "content": "<p>This is changing a default; one can still opt into the old panic-unwind setting if one wants to observe its behavior, right?</p>",
        "id": 259394321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430460
    },
    {
        "content": "<p>Also, do people think a change like this needs an MCP? I’m trying to weigh the “overhead” of the MCP process against the claim that the current setting was broken anyway</p>",
        "id": 259394460,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430523
    },
    {
        "content": "<p>also: Do we have any idea who the stakeholders are for the emscripten backend?</p>",
        "id": 259394546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430556
    },
    {
        "content": "<p>/me goes to find out what tier it is</p>",
        "id": 259394649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430581
    },
    {
        "content": "<p>tier 2</p>",
        "id": 259394657,
        "sender_full_name": "mw",
        "timestamp": 1635430586
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/rustc/platform-support.html\">https://doc.rust-lang.org/nightly/rustc/platform-support.html</a></p>",
        "id": 259394670,
        "sender_full_name": "mw",
        "timestamp": 1635430595
    },
    {
        "content": "<p>I think I’m comfortable making this change on a Tier 2 target without an MCP</p>",
        "id": 259394818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430659
    },
    {
        "content": "<p>Tier 1 might be a different story</p>",
        "id": 259394842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430668
    },
    {
        "content": "<p>No other comments? I guess I’ll take that as people going along with making this change, or abstaining from the decision process.</p>",
        "id": 259395041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430728
    },
    {
        "content": "<p>What does \"Tier 2 targets can be thought of as \"guaranteed to build\".\" mean in the context of Tier 2 support?</p>",
        "id": 259395055,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430733
    },
    {
        "content": "<p>The bug report says hello world fails to build.</p>",
        "id": 259395087,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430746
    },
    {
        "content": "<p>Are we not testing the target in CI or something?</p>",
        "id": 259395122,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430757
    },
    {
        "content": "<p>I thought it means “our tools will build\"</p>",
        "id": 259395134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430762
    },
    {
        "content": "<p>but we don’t necessarily test the tools</p>",
        "id": 259395143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430767
    },
    {
        "content": "<p>I think we should be OK making this change, but we should also consider whether it makes sense to solicit target maintainers (or start dropping the tier of the target as 'probably unused'</p>",
        "id": 259395154,
        "sender_full_name": "simulacrum",
        "timestamp": 1635430772
    },
    {
        "content": "<p>Ah ok. The toolchain is guaranteed to build not your program itself.</p>",
        "id": 259395221,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430796
    },
    {
        "content": "<p>and that its up to the user to inspect the behavior of the tools to 1. ensure they meet their needs, and 2. if possible, provide patches upstream when their needs aren’t being met.</p>",
        "id": 259395287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430807
    },
    {
        "content": "<p>It might be worth spelling this out more explicitly in those docs though.</p>",
        "id": 259395331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430824
    },
    {
        "content": "<p>“guaranteed to build” is ambiguous when the tool is itself something that builds other stuff.</p>",
        "id": 259395384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430848
    },
    {
        "content": "<p>well, a patch is being proposed, but now we can't review it for lack of expertise :)</p>",
        "id": 259395392,
        "sender_full_name": "mw",
        "timestamp": 1635430850
    },
    {
        "content": "<p>Right, I was speaking in generalities</p>",
        "id": 259395438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430865
    },
    {
        "content": "<p>If \"hello world\" hasn't built in 5 months then yeah it seems likely this target is not widely used <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259395445,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430869
    },
    {
        "content": "<p>we certainly can review that this thing does what it says it does</p>",
        "id": 259395455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430875
    },
    {
        "content": "<p>it was more a question of “are we comfortable doing this.” And, yes, I think we are. :)</p>",
        "id": 259395508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259395154\">said</a>:</p>\n<blockquote>\n<p>I think we should be OK making this change, but we should also consider whether it makes sense to solicit target maintainers (or start dropping the tier of the target as 'probably unused'</p>\n</blockquote>\n<p>this is a good point</p>",
        "id": 259395553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430909
    },
    {
        "content": "<p>the Target Tier RFC I hope spells out process for demoting targets</p>",
        "id": 259395658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430932
    },
    {
        "content": "<p>I believe it does, yes.</p>",
        "id": 259395697,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635430947
    },
    {
        "content": "<p>anyway I think we’re agreed we’ll approve this change</p>",
        "id": 259395704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430950
    },
    {
        "content": "<p>lets move along then</p>",
        "id": 259395727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430960
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 259395756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430968
    },
    {
        "content": "<ul>\n<li>\"Fixes incorrect handling of ADT's drop requirements\" <a href=\"https://github.com/rust-lang/rust/issues/90218\">rust#90218</a><ul>\n<li>fixes a <code>P-high</code> occurring when trying to migrate code to 2021 edition</li>\n</ul>\n</li>\n</ul>",
        "id": 259395771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430975
    },
    {
        "content": "<p>wait, a 5 day old PR is on this list?</p>",
        "id": 259395802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635430990
    },
    {
        "content": "<p>surely we have older pull requests that need addressing?</p>",
        "id": 259395843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431006
    },
    {
        "content": "<p>The list after that first PR looks correct.</p>",
        "id": 259396019,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431068
    },
    {
        "content": "<p>Maybe just a copy-paste error <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259396036,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431074
    },
    {
        "content": "<p>okay, lets move to that one then</p>",
        "id": 259396083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431088
    },
    {
        "content": "<p>I know. I just felt that a cargo edition 2021 fix was kind of a priority</p>",
        "id": 259396092,
        "sender_full_name": "apiraino",
        "timestamp": 1635431092
    },
    {
        "content": "<p>Oh. Okay, but I wouldn’t put that on this list then</p>",
        "id": 259396170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> should it be beta-nominated?</p>",
        "id": 259396244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431147
    },
    {
        "content": "<p>I cant say. Uh , maybe yes?</p>",
        "id": 259396381,
        "sender_full_name": "apiraino",
        "timestamp": 1635431187
    },
    {
        "content": "<p>or is it too risky to beta-nominate?</p>",
        "id": 259396385,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431189
    },
    {
        "content": "<p>Anyway, it being only five days old, I’m willing to trust that its assignee will get to it.</p>",
        "id": 259396429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431211
    },
    {
        "content": "<p>and if a cargo edition 2021 fix is so high priority, then maybe that issue should be tagged as P-critical. But I don’t think it is P-critical, because it isn’t a release blocker. RIght?</p>",
        "id": 259396526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431251
    },
    {
        "content": "<p>Anyway, lets move to the next item in list</p>",
        "id": 259396551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431262
    },
    {
        "content": "<p>and I’ll tag this as I-nominated to make sure it we come back to it, if not this week then next week</p>",
        "id": 259396588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431281
    },
    {
        "content": "<ul>\n<li>\"Support #[global_allocator] without the allocator shim\" <a href=\"https://github.com/rust-lang/rust/pull/86844\">rust#86844</a> (last review activity: 2 months ago)<ul>\n<li>seems to need a reviewer assigned</li>\n<li>review from <code>T-lang</code> or <code>T-compiler</code>?</li>\n</ul>\n</li>\n</ul>",
        "id": 259396742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431331
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> is on break</p>",
        "id": 259396842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431370
    },
    {
        "content": "<p>Since <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> is on break, and the PR author is concerned that this has both T-compiler and T-lang concerns, I’ll assign it to myself for review.</p>",
        "id": 259396997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431425
    },
    {
        "content": "<ul>\n<li>\"Turn TrapUnreachable off by default\" <a href=\"https://github.com/rust-lang/rust/pull/88826\">rust#88826</a><ul>\n<li>seems to need a reviewer assigned</li>\n</ul>\n</li>\n</ul>",
        "id": 259397033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431448
    },
    {
        "content": "<p>We discussed this, either in this team or T-lang, and I thought we had generally agreed that we should adopt the more conservative step suggested by <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> <a href=\"https://github.com/rust-lang/rust/pull/88826#issuecomment-917240648\">here</a></p>",
        "id": 259397158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431513
    },
    {
        "content": "<p>It seems like nikic proposed a different path but there has not been a response from the author - I'm not clear this is blocked on review.</p>",
        "id": 259397175,
        "sender_full_name": "simulacrum",
        "timestamp": 1635431519
    },
    {
        "content": "<p>I’m going to write that and change this to S-waiting-on-author</p>",
        "id": 259397199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431523
    },
    {
        "content": "<ul>\n<li>\"Allow use of AddressSanitizer on Windows by linking to existing libraries\" <a href=\"https://github.com/rust-lang/rust/pull/89369\">rust#89369</a></li>\n</ul>",
        "id": 259397383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431590
    },
    {
        "content": "<p>I think this needs windows expertise</p>",
        "id": 259397469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431625
    },
    {
        "content": "<p>i.e. I would not leave it assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 259397507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431640
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> can you take it and either review it or find a Windows expert to review it?</p>",
        "id": 259397581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431654
    },
    {
        "content": "<p>Heh so uh this PR was from one of our Windows experts <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259397632,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431673
    },
    {
        "content": "<p>:)</p>",
        "id": 259397644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431680
    },
    {
        "content": "<p>Oh</p>",
        "id": 259397664,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1635431686
    },
    {
        "content": "<p>I think the part that actually needs discussion is how we're getting the asan library on Windows.</p>",
        "id": 259397743,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431716
    },
    {
        "content": "<p>IIRC this PR uses the asan library bundled with recent MSVCs instead of trying to use one that we've built from our copy of LLVM.</p>",
        "id": 259397790,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431737
    },
    {
        "content": "<p>what are the possible failure conditions there?</p>",
        "id": 259397894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431764
    },
    {
        "content": "<p>The main one I believe is that the version bundled with MSVC drifts too far from whatever version of LLVM we're using.</p>",
        "id": 259397986,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431809
    },
    {
        "content": "<p>Main ones I can imagine are: 1. subtle differnences in ASAN behavior between MSVC vs LLVM, and 2. the MSVC ASAN library somehow being absent</p>",
        "id": 259398007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431816
    },
    {
        "content": "<p>The reasons we chose to take this approach were 1) currently upstream ASAN is broken on Windows (we have patches waiting to be merged upstream that will fix this though) and 2) any mixed C/C++/Rust applications will likely already be using MSVC's ASAN library for the C or C++ part.</p>",
        "id": 259398111,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431862
    },
    {
        "content": "<p>mmm</p>",
        "id": 259398213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431892
    },
    {
        "content": "<p>can someone override this choice?</p>",
        "id": 259398240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431906
    },
    {
        "content": "<p>So I think this is looking for less of a Windows expert and more of someone familiar with ASAN or at least the parts of rustc that make it work for us.</p>",
        "id": 259398284,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431923
    },
    {
        "content": "<p>I don't think so but I'm unsure.</p>",
        "id": 259398300,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635431931
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259398240\">said</a>:</p>\n<blockquote>\n<p>can someone override this choice?</p>\n</blockquote>\n<p>from skimming the part of teh code in the PR, it seems like the answer to this is “no\"</p>",
        "id": 259398335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635431943
    },
    {
        "content": "<p>If we feel like we should open a MCP or something for this, that's also helpful on our end.</p>",
        "id": 259398535,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635432004
    },
    {
        "content": "<p>For the long term, I think it might be good to provide people with some way to override the choice of asan library. But no matter what, I also want the default to tend to be “the right thing\"</p>",
        "id": 259398555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432009
    },
    {
        "content": "<p>The broader issue of ASAN needing an owner seems like a good one to address</p>",
        "id": 259398635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432037
    },
    {
        "content": "<p>Hm, I am personally inclined to trust the windows target maintainers and go ahead with this particular patch if it seems like the right thing. It only affects an unstable feature, so I would expect a writeup of this tradeoff in the tracking issue (so we can discuss as part of stabilization eventually)</p>",
        "id": 259398638,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432038
    },
    {
        "content": "<p>to be clear, I think I agree with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and that we can go ahead with the plan in this PR</p>",
        "id": 259398681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432062
    },
    {
        "content": "<p>Yeah, part of the complexity here IMO is that our existing sanitizers were never RFC/MCP'd so it's difficult to determine what the \"correct\" behavior should be beyond \"it works\" in some situation.</p>",
        "id": 259398683,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635432062
    },
    {
        "content": "<p>By that time we may have more flexibility (e.g., upstream LLVM fixes)</p>",
        "id": 259398691,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432064
    },
    {
        "content": "<p>the bigger question is: Who <em>should</em> review it?</p>",
        "id": 259398709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432074
    },
    {
        "content": "<p>I personally think its okay for Microsoft employees to review each other’s PRs</p>",
        "id": 259398765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432099
    },
    {
        "content": "<p>Skimming the PR it looks reasonable enough to me to r+, modulo \"it actually works\", which I'm inclined to just trust the author on in this case.</p>",
        "id": 259398801,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432118
    },
    {
        "content": "<p>I don't mind taking this but I will say that Daniel and I have talked about this quite a bit so in some sense I've already had a hand in making the PR.</p>",
        "id": 259398858,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635432128
    },
    {
        "content": "<p>(Just for transparency's sake <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 259398876,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635432137
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you think <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span> could have any interest?</p>",
        "id": 259398897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432147
    },
    {
        "content": "<p>as an extra set of eyes, that is</p>",
        "id": 259398962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432177
    },
    {
        "content": "<p>I don't think he would mind but I'm not sure he's very familiar with ASAN or this part of the compiler.</p>",
        "id": 259398965,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635432178
    },
    {
        "content": "<p>fair enough</p>",
        "id": 259398980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432183
    },
    {
        "content": "<p>Okay well I think I’m okay with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> being the reviewer</p>",
        "id": 259399035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432209
    },
    {
        "content": "<p>or <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if thye want</p>",
        "id": 259399055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432216
    },
    {
        "content": "<ul>\n<li>\"debuginfo: Add script for Rust support in lldb-mi\" <a href=\"https://github.com/rust-lang/rust/pull/89163\">rust#89163</a> (last review activity: 19 days ago)</li>\n</ul>",
        "id": 259399084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432231
    },
    {
        "content": "<p>I cannot exactly tell what the outcome is here</p>",
        "id": 259399219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432278
    },
    {
        "content": "<p>the PR author said they would be willing to do a PR to the lldb-mi repo</p>",
        "id": 259399245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432290
    },
    {
        "content": "<p>I think the general direction right now is to close this PR, personally.</p>",
        "id": 259399306,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432317
    },
    {
        "content": "<p>I don’t want to add random scripts that none of us know the purpose of</p>",
        "id": 259399312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432321
    },
    {
        "content": "<p>Yeah, lets close the PR, okay.</p>",
        "id": 259399339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432332
    },
    {
        "content": "<p>Let me take care of that</p>",
        "id": 259399381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432357
    },
    {
        "content": "<p>I want to try to handle the communication here, I think its nuanced</p>",
        "id": 259399438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432365
    },
    {
        "content": "<p>(i..e it is possible that we do want something like this, but we need more investment in our debuginfo expertise first…)</p>",
        "id": 259399494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432394
    },
    {
        "content": "<ul>\n<li>\"Implement concat_bytes!\" <a href=\"https://github.com/rust-lang/rust/pull/87599\">rust#87599</a> (last review activity: 3 months ago)</li>\n</ul>",
        "id": 259399565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432418
    },
    {
        "content": "<p>hmm. T-compiler or T-libs?</p>",
        "id": 259399706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432470
    },
    {
        "content": "<p>I’m going to stop this section here. I want us to move on to other htings</p>",
        "id": 259399864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432514
    },
    {
        "content": "<p>This was already RFC'd, so just needs impl review.</p>",
        "id": 259399866,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432516
    },
    {
        "content": "<p>I can take it if <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is busy.</p>",
        "id": 259399887,
        "sender_full_name": "simulacrum",
        "timestamp": 1635432522
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">75 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 0 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 47 P-high, 84 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 259399899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432525
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"cargo fails to build on Windows with nightly\" <a href=\"https://github.com/rust-lang/rust/issues/90019\">rust#90019</a><ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, re-opened to track beta-backport (beta-accepted)</li>\n</ul>\n</li>\n</ul>",
        "id": 259399926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432538
    },
    {
        "content": "<p>fix was merged in PR <a href=\"https://github.com/rust-lang/rust/issues/90151\">#90151</a>, yes?</p>",
        "id": 259400089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432601
    },
    {
        "content": "<p>closing with comment</p>",
        "id": 259400215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432635
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 259400234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432642
    },
    {
        "content": "<p>yes</p>",
        "id": 259400236,
        "sender_full_name": "mw",
        "timestamp": 1635432642
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 259400261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432649
    },
    {
        "content": "<ul>\n<li>\"Incremental compilation fails in all cases on SystemZ (s390x)\" <a href=\"https://github.com/rust-lang/rust/issues/90123\">rust#90123</a><ul>\n<li>incremental compile ICE on Tier 2 platform</li>\n<li>There seems to be a patch on the way to fix (<a href=\"https://github.com/rust-lang/rust/issues/90123#issuecomment-950825250\">see comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 259400275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432656
    },
    {
        "content": "<p>I'm looking into it</p>",
        "id": 259400311,
        "sender_full_name": "mw",
        "timestamp": 1635432672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you mean for <a href=\"https://github.com/rust-lang/rust/issues/90123\">#90123</a>?</p>",
        "id": 259400357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432690
    },
    {
        "content": "<p>yes</p>",
        "id": 259400370,
        "sender_full_name": "mw",
        "timestamp": 1635432695
    },
    {
        "content": "<p>I guess so</p>",
        "id": 259400371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432695
    },
    {
        "content": "<p>what’s up with the odht fix?</p>",
        "id": 259400400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432708
    },
    {
        "content": "<p>It's merged - we just need a new release of odht</p>",
        "id": 259400479,
        "sender_full_name": "mw",
        "timestamp": 1635432727
    },
    {
        "content": "<p>Okay. and with that, this is fixed? Sounds like this is totally under control then.</p>",
        "id": 259400546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432755
    },
    {
        "content": "<p>next</p>",
        "id": 259400603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432771
    },
    {
        "content": "<ul>\n<li>\"regression: rustc suggests <code>.as_ref()</code> at incorrect location and other spans have regressed\" <a href=\"https://github.com/rust-lang/rust/issues/90286\">rust#90286</a><ul>\n<li>assigned P-high as it could be confusing for beginners</li>\n</ul>\n</li>\n</ul>",
        "id": 259400607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432772
    },
    {
        "content": "<p>I see at least some debate in comments about the “regression\"</p>",
        "id": 259400690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432806
    },
    {
        "content": "<p>incorrect suggestion is bad though</p>",
        "id": 259400740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432827
    },
    {
        "content": "<p>anyway it looks like <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is looking at it</p>",
        "id": 259400762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432840
    },
    {
        "content": "<ul>\n<li>\"DWARF info for <code>static</code> vars in lib crates has stopped being produced reliably in LTO builds\" <a href=\"https://github.com/rust-lang/rust/issues/90357\">rust#90357</a><ul>\n<li>needs an assignee</li>\n<li>bisection seems to point to PR <a href=\"https://github.com/rust-lang/rust/pull/89041\">rust#89041</a> (cc: <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>)</li>\n</ul>\n</li>\n</ul>",
        "id": 259400826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432852
    },
    {
        "content": "<p>Hmm. I’ll take this.</p>",
        "id": 259400911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432891
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 259400957,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432912
    },
    {
        "content": "<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code> when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span></li>\n<li>issue seems to receive mentions from other issues</li>\n<li><span class=\"user-mention\" data-user-id=\"407656\">@Hans Kratz</span> <a href=\"https://github.com/rust-lang/rust/issues/89626#issuecomment-945711248\">comments</a> probably related to PR <a href=\"https://github.com/rust-lang/rust/pull/83655\">rust#83655</a></li>\n</ul>\n</li>\n</ul>",
        "id": 259400983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635432920
    },
    {
        "content": "<p>Okay, honesty time: I personally don’t know what linker groups are</p>",
        "id": 259401233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433008
    },
    {
        "content": "<p>I see issue <a href=\"https://github.com/rust-lang/rust/issues/76992\">#76992</a> and PR <a href=\"https://github.com/rust-lang/rust/issues/85805\">#85805</a></p>",
        "id": 259401259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433024
    },
    {
        "content": "<p>and I get the impression that this may be something important</p>",
        "id": 259401284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433036
    },
    {
        "content": "<p>and one part of me thinks “okay, felix, time to invest in figuring out why that’s important.\"</p>",
        "id": 259401352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433065
    },
    {
        "content": "<p>but maybe the right answer is to have <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> host a design meeting explaining it?</p>",
        "id": 259401398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433082
    },
    {
        "content": "<p>Of course I only think of this a week <em>after</em> our planning meeting for this cycle. :)</p>",
        "id": 259401561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433131
    },
    {
        "content": "<p>Lets keep moving</p>",
        "id": 259401599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433146
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-10-26.md\">triage logs for 2021-10-26</a></p>\n</blockquote>\n<p>Multiple regressions this week, several of which were in rollups, without much to balance them out on the improvements front.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=d45ed7502ad225739270a368528725930f54b7b6&amp;end=3c8f001d454b1b495f7472d8430ef8fdf10aac11&amp;absolute=false&amp;stat=instructions%3Au\">d45ed7502ad225739270a368528725930f54b7b6..3c8f001d454b1b495f7472d8430ef8fdf10aac11</a></p>\n<p>5 Regressions, 4 Improvements, 3 Mixed; 3 of them in rollups; 35 comparisons made in total</p>",
        "id": 259401632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433159
    },
    {
        "content": "<p>We have no design meetings scheduled so I think an ad-hoc design meeting on that topic would be fair game <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259401702,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1635433180
    },
    {
        "content": "<p>I’m going to list the regressions individuallyt his week</p>",
        "id": 259401717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433186
    },
    {
        "content": "<h4>Regressions</h4>",
        "id": 259401729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433191
    },
    {
        "content": "<p>resolve: Use <code>NameBinding</code> for local variables and generic parameters <a href=\"https://github.com/rust-lang/rust/issues/89100\">#89100</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=42983a28ab3c70728da7a9b932b667c978dd898d&amp;end=6162529a01473bbb2427fa27354cbafc3c514eee&amp;stat=instructions:u\">instruction counts</a> (up to 99.5% on <code>incr-unchanged</code> builds of <code>style-servo</code>)</li>\n<li>Reverted in <a href=\"https://github.com/rust-lang/rust/issues/90130\">#90130</a>.</li>\n</ul>",
        "id": 259401741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433196
    },
    {
        "content": "<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90235\">#90235</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ed08a67566d7d1d9dd2ad928ff21c23e841a4345&amp;end=00d5e42e776da900049fe19087bc9b0057ec70cd&amp;stat=instructions:u\">instruction counts</a> (up to 9.8% on <code>incr-full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Probably caused by new compiler-internal lint<br>\n  (<a href=\"https://github.com/rust-lang/rust/pull/89558\">#89558</a>), which appears to be<br>\n  run on end-user code (despite being allow-by-default). Suggested a few<br>\n  possible fixes or a revert if we can't do so quickly.</li>\n</ul>",
        "id": 259401782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433203
    },
    {
        "content": "<p>Inline CStr::from_ptr <a href=\"https://github.com/rust-lang/rust/issues/90007\">#90007</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=01198792a608b05e624b0127e76dd0753057016c&amp;end=514b3877956dc594823106b66c164f8cdbc8b3da&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Regression limited to stress tests and fairly minor. Seems likely to be a<br>\n  litle extra work in codegen, as the regressions are all in -opt builds. This<br>\n  change is done to permit better optimization, skipping a call to strlen in<br>\n  some cases, so seems worthwhile.</li>\n</ul>",
        "id": 259401842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433212
    },
    {
        "content": "<p>Implement coherence checks for negative trait impls <a href=\"https://github.com/rust-lang/rust/issues/90104\">#90104</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=55ccbd090d96ec3bb28dbcb383e65bbfa3c293ff&amp;end=aa5740c715001f981515ed46faaddebf67cb9539&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>diesel</code>)</li>\n<li>Looks like a real regression, but the feature is important and the regression<br>\n  is relatively small.</li>\n</ul>",
        "id": 259401881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433220
    },
    {
        "content": "<p>Rollup of 5 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90203\">#90203</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=aa5740c715001f981515ed46faaddebf67cb9539&amp;end=91b931926fd49fc97d1e39f2b8206abf1d77ce7d&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>externs</code>)</li>\n<li>Regression limited to rustdoc, likely due to the addition of code-scraping<br>\n  from the examples directory. Does not seem major enough to warrant deep<br>\n  investigation, but have left a comment on the likely PR.</li>\n</ul>",
        "id": 259401907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433227
    },
    {
        "content": "<p>Okay. Of those listed, two are big, and one has already been reverted</p>",
        "id": 259401980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433256
    },
    {
        "content": "<p>and the other should be fixed or reverted</p>",
        "id": 259402003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433269
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Adopt let_else across the compiler <a href=\"https://github.com/rust-lang/rust/issues/89933\">#89933</a></li>\n<li>Revert \"resolve: Use NameBinding for local variables and generic parameters\" <a href=\"https://github.com/rust-lang/rust/issues/90130\">#90130</a></li>\n<li>Specialize HashStable for [u8] slices <a href=\"https://github.com/rust-lang/rust/issues/90208\">#90208</a></li>\n<li>Build the query vtable directly. <a href=\"https://github.com/rust-lang/rust/issues/90210\">#90210</a></li>\n</ul>",
        "id": 259402032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433284
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90067\">#90067</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1af55d19c7a9189374d89472f97dc119659bb67e&amp;end=42983a28ab3c70728da7a9b932b667c978dd898d&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>incr-patched: println</code> builds of <code>coercions</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1af55d19c7a9189374d89472f97dc119659bb67e&amp;end=42983a28ab3c70728da7a9b932b667c978dd898d&amp;stat=instructions:u\">instruction counts</a> (up to 1.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo</code>)</li>\n<li>Left a comment with a few suggestions, but the regression and improvements<br>\n  seem both major and without obvious cause.</li>\n</ul>\n<p>Merge the two depkind vtables <a href=\"https://github.com/rust-lang/rust/issues/89978\">#89978</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3d71e749a244890cd370d49963e747cf92f4a037&amp;end=efd0483949496b067cd5f7569d1b28cd3d5d3c72&amp;stat=instructions:u\">instruction counts</a> (up to -2.0% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3d71e749a244890cd370d49963e747cf92f4a037&amp;end=efd0483949496b067cd5f7569d1b28cd3d5d3c72&amp;stat=instructions:u\">instruction counts</a> (up to 0.9% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>Improvements mostly outweigh the regressions</li>\n</ul>\n<p>Make new symbol mangling scheme default for compiler itself. <a href=\"https://github.com/rust-lang/rust/issues/90054\">#90054</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=514b3877956dc594823106b66c164f8cdbc8b3da&amp;end=a3f7c4db0373aa077f86cdd1bf11122845d3b65a&amp;stat=instructions:u\">instruction counts</a> (up to -0.8% on <code>incr-unchanged</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=514b3877956dc594823106b66c164f8cdbc8b3da&amp;end=a3f7c4db0373aa077f86cdd1bf11122845d3b65a&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n<li>Mostly improvements, and digging in is hard since tools like rustfilt have<br>\n  slightly different output across the symbol mangling boundary. Regressions<br>\n  seem limited to a just a few benchmarks and are small enough that this seems<br>\n  acceptable.</li>\n</ul>",
        "id": 259402071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433298
    },
    {
        "content": "<p>Of the items in Mixed, rollup <a href=\"https://github.com/rust-lang/rust/issues/90067\">#90067</a> is the only one of potential concern, it sounds like</p>",
        "id": 259402184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433333
    },
    {
        "content": "<p>We’ll have to skip the nominated issues htis week. Sorry, we’re out of time</p>",
        "id": 259402226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433359
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 259402249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635433370
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/N_WW5tZqTLWouaed6cCjxg?view\">https://hackmd.io/N_WW5tZqTLWouaed6cCjxg?view</a></p>\n<p>Scheduled checkins from:<br>\n<span class=\"user-group-mention silent\" data-user-group-id=\"1175\">WG-rfc-2229</span> checkin from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> <br>\n<span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> checkin from <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 259404896,
        "sender_full_name": "apiraino",
        "timestamp": 1635434510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I would be happy to talk about linker groups at some point. It's not a long explanation, though, and almost certainly doesn't need any substantive fraction of a design meeting.</p>",
        "id": 259409774,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635436471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> mm. well, maybe you and I can have a private chat and I can try to write something up. Its possible that what I really want is a broader document.</p>",
        "id": 259411212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1635437037
    }
]