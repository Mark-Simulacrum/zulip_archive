[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/kDUJQbY8SGqPMTTecCl9hg?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span> by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> (already in agenda <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> ) </li>\n<li>@_<em>wg-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> : anything to share?</li>\n</ul>",
        "id": 264297696,
        "sender_full_name": "apiraino",
        "timestamp": 1639055287
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , the weekly triage meeting starts now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 264313228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062104
    },
    {
        "content": "<p>We’re start off with a few minutes for </p>\n<h2>Announcements</h2>",
        "id": 264313343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062142
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 264313374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062152
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 264313684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062293
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a></li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a></li>\n</ul>\n</li>\n</ul>",
        "id": 264313707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062305
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: 3 months ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 5 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 2 months ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 264313738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062319
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for RFC 2115: In-band lifetime bindings\" <a href=\"https://github.com/rust-lang/rust/issues/44524\">rust#44524</a></li>\n</ul>\n</li>\n</ul>",
        "id": 264313750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062328
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 264313767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062339
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Unstable lints should be considered unknown\" <a href=\"https://github.com/rust-lang/compiler-team/issues/469\">compiler-team#469</a></li>\n</ul>\n</li>\n</ul>",
        "id": 264313776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062349
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for cargo report future-incompat\" <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a></li>\n<li>\"Tracking Issue for inline assembly (<code>asm!</code>)\" <a href=\"https://github.com/rust-lang/rust/issues/72016\">rust#72016</a></li>\n</ul>\n</li>\n</ul>",
        "id": 264313885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062377
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 264313953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062409
    },
    {
        "content": "<p>@_WG-mir-optimization_ checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (<a href=\"https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg#WG-checkins\">previous checkin</a>)</p>\n<blockquote>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> is working on the MIR pass manager <a href=\"https://github.com/rust-lang/rust/issues/91386\">#91386</a></li>\n<li>there is a lot of unclarity around what dialects of MIR we have and what rules exist<ul>\n<li>Not really a new thing, but it caused a bug (<a href=\"https://github.com/rust-lang/rust/issues/90762\">#90762</a>) and almost caused a much bigger bug (in <a href=\"https://github.com/rust-lang/rust/issues/73255\">#73255</a>), though we that caught that in time</li>\n<li>See <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/SimplifyComparisonIntegral.20Assign.20lookup.20is.20overzealous/near/263280258\">this discussion</a> for some examples of the problems</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 264313973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062422
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> has WG-polymorphization been disbanded?</p>",
        "id": 264314046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062463
    },
    {
        "content": "<p>not really</p>",
        "id": 264314074,
        "sender_full_name": "lcnr",
        "timestamp": 1639062477
    },
    {
        "content": "<p>though we also haven't been active</p>",
        "id": 264314118,
        "sender_full_name": "lcnr",
        "timestamp": 1639062485
    },
    {
        "content": "<p>No, we're making slow progress, <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> is working on a patch that removes our main blocker, there's not much else to do with polymorphization until that's complete. (But we've both got other areas we're focusing on too.)</p>",
        "id": 264314172,
        "sender_full_name": "davidtwco",
        "timestamp": 1639062504
    },
    {
        "content": "<p>Okay. I was making guesses based on there not seeming to be a <code>@WG-polymorphization</code></p>",
        "id": 264314174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062507
    },
    {
        "content": "<p>Okay, thanks for that clarification!</p>",
        "id": 264314201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062527
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 264314243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062555
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Sync portable-simd to remove autosplats\" <a href=\"https://github.com/rust-lang/rust/pull/91484\">rust#91484</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggests two strategies for backport: either backported in full or a targeted backport that excludes the submodule with a config setting (see <a href=\"https://github.com/rust-lang/rust/pull/91484#issuecomment-987523206\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 264314270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062571
    },
    {
        "content": "<p>hmm <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> is getting some errors with this PR</p>",
        "id": 264314477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1639062646
    },
    {
        "content": "<p>oh <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> commented about an error after this PR<br>\n<a href=\"https://github.com/rust-lang/rust/pull/91484#issuecomment-989933534\">https://github.com/rust-lang/rust/pull/91484#issuecomment-989933534</a></p>",
        "id": 264314480,
        "sender_full_name": "apiraino",
        "timestamp": 1639062649
    },
    {
        "content": "<p>heh</p>",
        "id": 264314504,
        "sender_full_name": "apiraino",
        "timestamp": 1639062660
    },
    {
        "content": "<p>so, to be clear: This backport nomination is to address <a href=\"https://github.com/rust-lang/rust/issues/90904\">#90904</a></p>",
        "id": 264314592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062714
    },
    {
        "content": "<p>(right?)</p>",
        "id": 264314603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062718
    },
    {
        "content": "<p>yes</p>",
        "id": 264314658,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062732
    },
    {
        "content": "<p>I'm not sure petrochenkov's errors are due to this or, at least, suspect they don't affect downstream (particularly with the cfg backport strategy)</p>",
        "id": 264314701,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062756
    },
    {
        "content": "<p>Is this a backport we should consult with the libs team on?</p>",
        "id": 264314711,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639062759
    },
    {
        "content": "<p>On that issue, <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> wrote this:</p>\n<blockquote>\n<p>, the backport should be deferred (not very long!) until after the next scheduled beta crater run (which is very soon to come, within a week)</p>\n</blockquote>",
        "id": 264314720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062764
    },
    {
        "content": "<p>that crater run is done, right?</p>",
        "id": 264314738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062773
    },
    {
        "content": "<p>no, but it doesn't really matter</p>",
        "id": 264314762,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062784
    },
    {
        "content": "<p>we already had artifacts even before that</p>",
        "id": 264314802,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062802
    },
    {
        "content": "<p>I guess the point is just that it needed to be <em>started</em>, which happened on <a href=\"https://github.com/rust-lang/rust/issues/91454\">#91454</a></p>",
        "id": 264314806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264314802\">said</a>:</p>\n<blockquote>\n<p>we already had artifacts even before that</p>\n</blockquote>\n<p>okay so your point is that there was no need to wait; the backport timing is orthogonal to the crater timing.</p>",
        "id": 264314938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062848
    },
    {
        "content": "<p>yes</p>",
        "id": 264314993,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062873
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264314711\">said</a>:</p>\n<blockquote>\n<p>Is this a backport we should consult with the libs team on?</p>\n</blockquote>\n<p>my reading of <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> ’s comment <a href=\"https://github.com/rust-lang/rust/issues/90904#issuecomment-984048967\">here</a> is that T-libs-impl is in favor of some kind of backport</p>",
        "id": 264315034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062893
    },
    {
        "content": "<p>I think this is a fairly obvious backport, though I'm leaning towards the cfg strategy mostly</p>",
        "id": 264315067,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062910
    },
    {
        "content": "<p>anyway it sounds like we need to figure out what’s up with <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> ’s comment</p>",
        "id": 264315093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062921
    },
    {
        "content": "<p>I suggest based on the comments I’m reading that we defer this decision to next week</p>",
        "id": 264315113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062934
    },
    {
        "content": "<p>so that people have time to determine 1. what’s up with the thing <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> noted, and 2. which strategy to actually deploy for the backport</p>",
        "id": 264315195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639062963
    },
    {
        "content": "<p>seems ok</p>",
        "id": 264315252,
        "sender_full_name": "simulacrum",
        "timestamp": 1639062977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you expect <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> to actually investigate the cfg strategy, or does someone else need to own that?</p>",
        "id": 264315309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063003
    },
    {
        "content": "<p>not sure there's anything to investigate</p>",
        "id": 264315351,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063019
    },
    {
        "content": "<p>it's pretty straightforward</p>",
        "id": 264315404,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063036
    },
    {
        "content": "<p>The only thing I see from <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> that sounds related is <a href=\"https://github.com/rust-lang/rust/pull/91484#issuecomment-988498684\">this</a>:</p>\n<blockquote>\n<p>Huh, I thought Miri had been cfg'd out appropriately already.</p>\n</blockquote>",
        "id": 264315604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063124
    },
    {
        "content": "<p>Anyway, lets come back to this next week</p>",
        "id": 264315675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264315604\">said</a>:</p>\n<blockquote>\n<p>The only thing I see from <span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> that sounds related is <a href=\"https://github.com/rust-lang/rust/pull/91484#issuecomment-988498684\">this</a>:</p>\n<blockquote>\n<p>Huh, I thought Miri had been cfg'd out appropriately already.</p>\n</blockquote>\n</blockquote>\n<p>(In other words, I worry that there’s either miscommunication going on, or that it isn’t as straight-forward as you think.)</p>",
        "id": 264315763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063203
    },
    {
        "content": "<p>(because even if <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> is mistaken about whether the appropriate submodule is already cfg’d out, the fact that they thought it <em>was</em> to me implies that they don’t see cfg’ing out Miri as a solution to the problem…)</p>",
        "id": 264315991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063298
    },
    {
        "content": "<p>Anyway I’m wasting time trying to understand these comments when I should just move along and trust you all to figure it out.</p>",
        "id": 264316070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063325
    },
    {
        "content": "<p>I don't understand what relation miri has</p>",
        "id": 264316152,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063361
    },
    {
        "content": "<p>but yeah, seems like an offline problem</p>",
        "id": 264316169,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063367
    },
    {
        "content": "<p>right, I don’t either</p>",
        "id": 264316170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063368
    },
    {
        "content": "<p>which is why the answer here is probably “miscommunication\"</p>",
        "id": 264316195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063380
    },
    {
        "content": "<p>I meant removing portable-simd entirely</p>",
        "id": 264316230,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063392
    },
    {
        "content": "<p>lets move along</p>",
        "id": 264316298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063432
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 264316307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063437
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 264316319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063442
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Make rustdoc headings black, and markdown blue\" <a href=\"https://github.com/rust-lang/rust/pull/91534\">rust#91534</a><ul>\n<li>seems <a href=\"https://github.com/rust-lang/rust/pull/91534#issuecomment-986098864\">all fine</a> to backport this small UI fix</li>\n</ul>\n</li>\n</ul>",
        "id": 264316369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063450
    },
    {
        "content": "<p>to be clear, this is addressing <a href=\"https://github.com/rust-lang/rust/issues/91304\">#91304</a></p>",
        "id": 264316485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063506
    },
    {
        "content": "<p>It seems fine. backport approved.</p>",
        "id": 264316672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063565
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 264316702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063577
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 264316720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063583
    },
    {
        "content": "<ul>\n<li>\"Make specifying repr optional for fieldless enums\" <a href=\"https://github.com/rust-lang/rust/pull/88203\">rust#88203</a></li>\n</ul>",
        "id": 264316728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063589
    },
    {
        "content": "<p>this is waiting on lang team, i think</p>",
        "id": 264316840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063636
    },
    {
        "content": "<p>oh that's still t-lang-nominated</p>",
        "id": 264316849,
        "sender_full_name": "apiraino",
        "timestamp": 1639063641
    },
    {
        "content": "<p>or maybe on answers to both of the questins that were listed</p>",
        "id": 264316856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063645
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/88203#issuecomment-970574178\">questions</a>, namely:</p>\n<blockquote>\n<p>The main open question was if this change affects Stable or not. Currently, having a discriminant on a non-unit enum variant requires the <code>arbitrary_enum_discriminant</code> feature. This change should likely be \"no more stable\" than that feature, and it's unclear.</p>\n</blockquote>",
        "id": 264316894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063664
    },
    {
        "content": "<p>but yeah, I don’t think this is ready for us</p>",
        "id": 264316931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063680
    },
    {
        "content": "<p>(I’m hoping to work with <span class=\"user-mention\" data-user-id=\"219211\">@Jack Wrenn</span> to address this with the lang team soon)</p>",
        "id": 264317020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063702
    },
    {
        "content": "<p>next</p>",
        "id": 264317023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063704
    },
    {
        "content": "<ul>\n<li>\"Make feature key optional for rustc_stable, rustc_const_stable attributes\" <a href=\"https://github.com/rust-lang/rust/pull/88588\">rust#88588</a></li>\n</ul>",
        "id": 264317028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063705
    },
    {
        "content": "<p>waiting on <code>t-libs</code></p>",
        "id": 264317124,
        "sender_full_name": "apiraino",
        "timestamp": 1639063747
    },
    {
        "content": "<p>sorry didnt check carefully these 3 items</p>",
        "id": 264317137,
        "sender_full_name": "apiraino",
        "timestamp": 1639063759
    },
    {
        "content": "<p>okay</p>",
        "id": 264317144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063762
    },
    {
        "content": "<p>next</p>",
        "id": 264317148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063764
    },
    {
        "content": "<p>that’s okay <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> . I’m thinking I need to start allocating a little time before the weekly meeting to double-check the agenda for stuff like this.</p>",
        "id": 264317315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063835
    },
    {
        "content": "<p>(in other words, you should not feel at fault here.)</p>",
        "id": 264317350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063856
    },
    {
        "content": "<p>next</p>",
        "id": 264317373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063865
    },
    {
        "content": "<p>okay the last one is also waiting on T-lang, I see</p>",
        "id": 264317394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063882
    },
    {
        "content": "<ul>\n<li>\"remove pref_align_of intrinsic\" <a href=\"https://github.com/rust-lang/rust/pull/90877\">rust#90877</a><br>\n    - Waiting on <code>T-lang</code></li>\n</ul>",
        "id": 264317410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063888
    },
    {
        "content": "<p>(for completenss)</p>",
        "id": 264317412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063890
    },
    {
        "content": "<p>but lets move on</p>",
        "id": 264317419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063893
    },
    {
        "content": "<p>ing for review</p>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 264317428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063899
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89455\">Introduce linter for diagnostic messages</a> (last activity: about 30 days ago)<ul>\n<li>previously reviewed by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>(tests are failing after upstream changes)</li>\n</ul>\n</li>\n</ul>",
        "id": 264317442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063906
    },
    {
        "content": "<p>I think this may benefit from some team discussion</p>",
        "id": 264317559,
        "sender_full_name": "simulacrum",
        "timestamp": 1639063949
    },
    {
        "content": "<p>I like the idea, I'm lukewarm on the execution.</p>",
        "id": 264317565,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1639063957
    },
    {
        "content": "<p>maybe we can have a steering meeting about this?</p>",
        "id": 264317586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063970
    },
    {
        "content": "<p>it seems like something that needs more than just a brief visit during triage</p>",
        "id": 264317612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639063986
    },
    {
        "content": "<p>yeah</p>",
        "id": 264317661,
        "sender_full_name": "simulacrum",
        "timestamp": 1639064006
    },
    {
        "content": "<p>I don't have the bandwidth to push that</p>",
        "id": 264317679,
        "sender_full_name": "simulacrum",
        "timestamp": 1639064015
    },
    {
        "content": "<p>I totally understand that</p>",
        "id": 264317695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064025
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you think  hkmatsumoto would be willing to draft an MCP and/or meeting proposal for this?</p>",
        "id": 264317831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064063
    },
    {
        "content": "<p>that’s I think where I would look next, at least</p>",
        "id": 264317890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064092
    },
    {
        "content": "<p>Having said that, lets move along</p>",
        "id": 264317906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064099
    },
    {
        "content": "<p>I think so, they were very interested in getting this in, but.might not.have time due to the holidays</p>",
        "id": 264317919,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1639064103
    },
    {
        "content": "<p>I'll get in touch</p>",
        "id": 264317963,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1639064121
    },
    {
        "content": "<p>well, it sounds like it won’t land as-is in any case</p>",
        "id": 264317972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064126
    },
    {
        "content": "<p>based on the objections I saw from <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> on the thread</p>",
        "id": 264318004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064136
    },
    {
        "content": "<p>so I think the better thing to focus on is “what <em>is</em> the right way to execute this?\"</p>",
        "id": 264318061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064152
    },
    {
        "content": "<p>next</p>",
        "id": 264318089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064160
    },
    {
        "content": "<ul>\n<li>\"Abort in panic_abort eh_personality\" <a href=\"https://github.com/rust-lang/rust/pull/86801\">rust#86801</a> (last review activity: 4 months ago)<ul>\n<li>mentioned in T-compiler meeting about some time ago, no new activity</li>\n<li>no reviewer assigned: who could own this PR?</li>\n</ul>\n</li>\n</ul>",
        "id": 264318144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064167
    },
    {
        "content": "<p>there was a ton of activitiy in discussion in october</p>",
        "id": 264318547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064340
    },
    {
        "content": "<p>but its not clear to me what the outcome was. Some ideas were passed around between <span class=\"user-mention\" data-user-id=\"274417\">@Daniel Frampton</span> , <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> , and <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span></p>",
        "id": 264318592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064358
    },
    {
        "content": "<p>yes, thats why I thought about an assignee to pull the strings of the discussion (sort of)</p>",
        "id": 264318654,
        "sender_full_name": "apiraino",
        "timestamp": 1639064387
    },
    {
        "content": "<p>I currently don't have time to work on it, but if I recall correctly there was a possible implementation for windows suggested.</p>",
        "id": 264318670,
        "sender_full_name": "bjorn3",
        "timestamp": 1639064392
    },
    {
        "content": "<p>I think there is an interesting policy question being posed</p>",
        "id": 264318736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064406
    },
    {
        "content": "<p>namely, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> noted “The motivation for this is to unblock stabilizing C-unwind, but Windows is still not working, so C-unwind would still be unable to be stabilized\"</p>",
        "id": 264318815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064442
    },
    {
        "content": "<p>So yeah, it seems like the issue is: Do you push forward on one platform-dependent solution, with the <em>expectation</em> that the remaining platform that has issues will get those issues resolved</p>",
        "id": 264318897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064489
    },
    {
        "content": "<p>Or do you <strong>wait</strong> until all platforms have a plausible solution prototyped.</p>",
        "id": 264318926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064502
    },
    {
        "content": "<p>I want to try implementing it for windows once I have time.</p>",
        "id": 264319028,
        "sender_full_name": "bjorn3",
        "timestamp": 1639064529
    },
    {
        "content": "<p>Personally, I think if something is generally going on a path aligned with what we’ve approved (via RFC’s and/or MCP’s), then I’m fine with landing a platform-dependent solution</p>",
        "id": 264319065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064544
    },
    {
        "content": "<p>That is, I think it would be a bad idea to say to one contributor (like <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>  in this case) that we won’t land your PR until you figure out the Windows support.</p>",
        "id": 264319120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064572
    },
    {
        "content": "<p>(We won’t <em>stabilize</em> the feature, sure, that’s entirely fine.)</p>",
        "id": 264319158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064588
    },
    {
        "content": "<p>I don't see an issue with landing the PR with only some platforms supported. That seems quite normal to me.</p>",
        "id": 264319231,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639064629
    },
    {
        "content": "<p>But it seems like a policy that deserves codification in some form. I.e. I think <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> was falling on the other side of the debate here.</p>",
        "id": 264319240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064631
    },
    {
        "content": "<p>But I don't think we should move to stabilize until we have support for all the appropriate platforms. (It sounds like that isn't under contention here)</p>",
        "id": 264319352,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639064665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264319231\">said</a>:</p>\n<blockquote>\n<p>I don't see an issue with landing the PR with only some platforms supported. That seems quite normal to me.</p>\n</blockquote>\n<p>Right. The only issue I can imagine is if the claim is that it is <em>impossible</em> to support platform X.</p>",
        "id": 264319356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064668
    },
    {
        "content": "<p>if one can show that support is <em>impossible</em> for a given platform, then it brings the whole feature into question, to some degreee.</p>",
        "id": 264319414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064691
    },
    {
        "content": "<p>anyway</p>",
        "id": 264319440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064705
    },
    {
        "content": "<p>I guess it kind of depends <em>what</em> the feature is...</p>",
        "id": 264319462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639064713
    },
    {
        "content": "<p>(that’s true too. Some features will just say “we don’t support platform X, sorry”)</p>",
        "id": 264319507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064729
    },
    {
        "content": "<p>A security hardening feature like ASLR not being supported might not be a big deal at all.</p>",
        "id": 264319517,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639064734
    },
    {
        "content": "<p>stdlib feature X not working on some Tier 1 platform is probably a different matter entirely.</p>",
        "id": 264319558,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639064752
    },
    {
        "content": "<p>in this specific case, it seems like this PR might benefit from some amount of summarization of the discussion and the current status</p>",
        "id": 264319624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064766
    },
    {
        "content": "<p>having said that, unless someone here is excited about owning that task</p>",
        "id": 264319700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064803
    },
    {
        "content": "<p>I don’t see a need for us to try to push to get someone here to do that work</p>",
        "id": 264319722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064814
    },
    {
        "content": "<p>I’m going to skip the rest of the old PRs. We don’t have time to get into this amount of detail on this many PR’s each week.</p>",
        "id": 264319816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064857
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">77 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 3 P-high, 1 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 49 P-high, 81 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 264319838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064869
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 264319855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064875
    },
    {
        "content": "<ul>\n<li>\"Miscompilation where binding only some fields leaks the others\" <a href=\"https://github.com/rust-lang/rust/issues/90752\">rust#90752</a><ul>\n<li>Fixed in <a href=\"https://github.com/rust-lang/rust/pull/90788\">rust#90788</a> (stable 1.58)</li>\n</ul>\n</li>\n</ul>",
        "id": 264319871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064882
    },
    {
        "content": "<ul>\n<li>\"Huge compile-time regression in beta/nightly\" <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a><ul>\n<li>issue author mentions that disabling the new LLVM pass manager makes the regression disappear</li>\n<li>some public code to reproduce is <a href=\"https://github.com/rust-lang/rust/issues/91128#issuecomment-977154873\">at this comment</a></li>\n<li>@<strong>nikic</strong> followed up with some <a href=\"https://github.com/rust-lang/rust/issues/91128#issuecomment-988968103\">great insights</a></li>\n<li>discussed last week, linked to PR <a href=\"https://github.com/rust-lang/rust/pull/91190\">#91190</a>, due to be evaluated again next week</li>\n</ul>\n</li>\n</ul>",
        "id": 264319937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064895
    },
    {
        "content": "<p>what is “BFI information” ?</p>",
        "id": 264320046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064942
    },
    {
        "content": "<p>\"branch frequency i~~~~\" ?</p>",
        "id": 264320082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639064962
    },
    {
        "content": "<p>in any case, it seems like there is amazing progress being made on <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a>. Thank you so much <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> !!!</p>",
        "id": 264320366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065061
    },
    {
        "content": "<ul>\n<li>\n<p>\"Compile-time regression between 1.56.1 and 1.57.0 for deeply nested decorator types\" <a href=\"https://github.com/rust-lang/rust/issues/91598\">rust#91598</a></p>\n<ul>\n<li>this affects production code on different scenarios</li>\n<li>time needed for compilation seems to have abnormally regressed</li>\n</ul>\n</li>\n</ul>",
        "id": 264320396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065073
    },
    {
        "content": "<p>I believe this is the projection caching issue</p>",
        "id": 264320454,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639065109
    },
    {
        "content": "<p>oh wait, one more thing: <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a> and <a href=\"https://github.com/rust-lang/rust/issues/91598\">rust#91598</a> do not have assigned owners</p>",
        "id": 264320464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264320046\">said</a>:</p>\n<blockquote>\n<p>what is “BFI information” ?</p>\n</blockquote>\n<p>Block Frequency Information information, I think. It's like an ATM machine.</p>",
        "id": 264320473,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639065119
    },
    {
        "content": "<p>I made a zulip thread to discuss moving forward with projection caching</p>",
        "id": 264320561,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639065138
    },
    {
        "content": "<p>link: <a href=\"#narrow/stream/131828-t-compiler/topic/Projection.20caching.2Fdeduplication\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Projection.20caching.2Fdeduplication</a></p>",
        "id": 264320621,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639065168
    },
    {
        "content": "<p>I’m guessing we should assign <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a> to <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> and … <a href=\"https://github.com/rust-lang/rust/issues/91598\">rust#91598</a> to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ?</p>",
        "id": 264320677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065196
    },
    {
        "content": "<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 264320873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065272
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-libs-api+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 264320902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065282
    },
    {
        "content": "<ul>\n<li>\"Where bounds with associated types equality cause overflow.\" <a href=\"https://github.com/rust-lang/rust/issues/89503\">rust#89503</a></li>\n</ul>",
        "id": 264320918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065289
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/89503\">rust#89503</a> is now a stable-to-stable regression, right?</p>",
        "id": 264321067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065361
    },
    {
        "content": "<p>I think it is.</p>",
        "id": 264321203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065406
    },
    {
        "content": "<p>moving on</p>",
        "id": 264321209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065408
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-libs-api+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core+\">Unassigned P-high nightly regressions</a></p>",
        "id": 264321237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065419
    },
    {
        "content": "<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code> when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a></li>\n</ul>",
        "id": 264321261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065427
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> said that this was fixed for them now</p>",
        "id": 264321415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065489
    },
    {
        "content": "<p>there is some <em>other</em> issue that another participant on the thread was noting</p>",
        "id": 264321475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065517
    },
    {
        "content": "<p>but I think <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a> itself can be closed.</p>",
        "id": 264321515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065537
    },
    {
        "content": "<p>ok, will comment there and close it</p>",
        "id": 264321623,
        "sender_full_name": "apiraino",
        "timestamp": 1639065574
    },
    {
        "content": "<p>jsut did</p>",
        "id": 264321645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065585
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-12-07.md\">triage logs for 2021-12-07</a></p>\n</blockquote>\n<p>A week of mostly rather small changes with many regressions being hard to diagnose. The largest regression comes from the introduction of a new future (desugaring <code>.await</code> into a call to <code>IntoFuture::into_future</code>). This was deemed acceptable as it only seems to have a negative impact in stress test situations where async/await is used more than one would normally expect. Unfortunately this does mean regressions beat out improvements this week.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=1c0287830e0fb3c4007afea2819ba03766da6e9c&amp;end=ecb65b0e170fc5275870c9d0fba7267a57cf35e5&amp;absolute=false&amp;stat=instructions%3Au\">1c0287830e0fb3c4007afea2819ba03766da6e9c..ecb65b0e170fc5275870c9d0fba7267a57cf35e5</a></p>\n<p>3 Regressions, 5 Improvements, 5 Mixed; 3 of them in rollups, 29 Untriaged Pull Requests<br>\n31 comparisons made in total</p>",
        "id": 264321672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065597
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Implement version of normalize_erasing_regions that allows for normalization failure <a href=\"https://github.com/rust-lang/rust/issues/91255\">#91255</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=26b45573be204da2cc0db12828b7a03c41c73793&amp;end=f04a2f4b8e89eac1119061ea2055d33c97e618b4&amp;stat=instructions:u\">instruction counts</a> (up to 0.9% on <code>incr-full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Nothing immediately jumps out as an issue, so a run of cachegrind might be necessary.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/91255#issuecomment-988266695\">comment</a> as such.</li>\n</ul>\n<p>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91486\">#91486</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=190367ba2ef1d279004b8372cf022b5fc96145dd&amp;end=3e21768a0a3fc84befd1cbe825ae6849e9941b73&amp;stat=instructions:u\">instruction counts</a> (up to 1.1% on <code>full</code> builds of <code>match-stress-enum</code>)</li>\n<li>Seems to be impacting compilation of match expressions, but none of the sub PRs seem to be a likely culprit.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/91486#issuecomment-988271162\">comment</a> as such.</li>\n</ul>\n<p>Reintroduce <code>into_future</code> in <code>.await</code> desugaring <a href=\"https://github.com/rust-lang/rust/issues/90737\">#90737</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ff2439b7b9bafcfdff86b7847128014699df8442&amp;end=532d2b14c05f9bc20b2d27cbb5f4550d28343a36&amp;stat=instructions:u\">instruction counts</a> (up to 9.3% on <code>incr-full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>The regression was very much expected but only really appears in extremely <code>await</code>-heavy code. We'll have to wait to see how this impacts real world users, and see if we can work on performance of trait obligation resolution to improve the performance lost.</li>\n<li>A more detailed justification for taking the performance hit can be found <a href=\"https://github.com/rust-lang/rust/pull/90737#issuecomment-985924986\">here</a>.</li>\n</ul>",
        "id": 264321761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065615
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Lint elided lifetimes in path during lifetime resolution. <a href=\"https://github.com/rust-lang/rust/issues/90446\">#90446</a></li>\n<li>Optimize <code>rustc_lexer</code> <a href=\"https://github.com/rust-lang/rust/issues/91393\">#91393</a></li>\n<li>Revert \"Auto merge of <a href=\"https://github.com/rust-lang/rust/issues/91354\">#91354</a> - fee1-dead:const_env, r=spastorino\" <a href=\"https://github.com/rust-lang/rust/issues/91491\">#91491</a></li>\n<li>Add a MIR pass manager (Taylor's Version) <a href=\"https://github.com/rust-lang/rust/issues/91475\">#91475</a></li>\n</ul>",
        "id": 264321801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065621
    },
    {
        "content": "<blockquote>\n<p>the introduction of a new future</p>\n</blockquote>\n<p>typo? clever pun? freudian slip?</p>",
        "id": 264321893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065658
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Introduce <code>RawVec::reserve_for_push</code>. <a href=\"https://github.com/rust-lang/rust/issues/91352\">#91352</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1c0287830e0fb3c4007afea2819ba03766da6e9c&amp;end=207c80f105282245d93024c95ac408c622f70114&amp;stat=instructions:u\">instruction counts</a> (up to -3.0% on <code>incr-patched: println</code> builds of <code>webrender-wrench</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1c0287830e0fb3c4007afea2819ba03766da6e9c&amp;end=207c80f105282245d93024c95ac408c622f70114&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-patched: println</code> builds of <code>style-servo</code>)</li>\n<li>The improvements outweigh the regressions and are mostly found in real-world crates.</li>\n<li>Justification for the regressions can be found <a href=\"https://github.com/rust-lang/rust/pull/91352#issuecomment-982986307\">here</a>.</li>\n</ul>\n<p>Rollup of 4 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91406\">#91406</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=207c80f105282245d93024c95ac408c622f70114&amp;end=d384ff79308c4eb0a3679817cd0def0147ad8612&amp;stat=instructions:u\">instruction counts</a> (up to -2.7% on <code>incr-unchanged</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=207c80f105282245d93024c95ac408c622f70114&amp;end=d384ff79308c4eb0a3679817cd0def0147ad8612&amp;stat=instructions:u\">instruction counts</a> (up to 7.1% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>A case where it's hard to tell where the regression is coming from, but it is a quite a large regression in a real-world crate (albeit one that is a tiny bit noisy).</li>\n<li>Both <a href=\"https://github.com/rust-lang/rust/pull/91366\">https://github.com/rust-lang/rust/pull/91366</a> and <a href=\"https://github.com/rust-lang/rust/pull/91397\">https://github.com/rust-lang/rust/pull/91397</a> only really touch rustdoc so that's unlikely the culprit.</li>\n<li>Left a comment for <a href=\"https://github.com/rust-lang/rust/pull/91406#issuecomment-988258182\">follow up</a></li>\n</ul>\n<p>Cleanup: Eliminate ConstnessAnd <a href=\"https://github.com/rust-lang/rust/issues/91354\">#91354</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=d9baa361902b172be716f96619b909f340802dea&amp;end=18bb8c61a975fff6424cda831ace5b0404277145&amp;stat=instructions:u\">instruction counts</a> (up to -0.6% on <code>full</code> builds of <code>deeply-nested</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d9baa361902b172be716f96619b909f340802dea&amp;end=18bb8c61a975fff6424cda831ace5b0404277145&amp;stat=instructions:u\">instruction counts</a> (up to 1.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo</code>)</li>\n<li>Reverted by <a href=\"https://github.com/rust-lang/rust/issues/91491\">#91491</a> which recovered the regression.</li>\n</ul>\n<p>Rollup of 4 iffy pull requests <a href=\"https://github.com/rust-lang/rust/issues/91455\">#91455</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=18bb8c61a975fff6424cda831ace5b0404277145&amp;end=e5038e20999eef35260b070189883edc2a8a34b2&amp;stat=instructions:u\">instruction counts</a> (up to -6.7% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=18bb8c61a975fff6424cda831ace5b0404277145&amp;end=e5038e20999eef35260b070189883edc2a8a34b2&amp;stat=instructions:u\">instruction counts</a> (up to 3.4% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>The improvements outweigh the regressions with the largest regression in a non-noisy benchmark being only 0.8%.</li>\n<li>Given the difficult nature of figuring out what caused regressions in a rollup of 4 iffy pull requests, we'll let this one slide.</li>\n</ul>\n<p>Reduce boilerplate around infallible folders <a href=\"https://github.com/rust-lang/rust/issues/91318\">#91318</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e5038e20999eef35260b070189883edc2a8a34b2&amp;end=acbe4443cc4c9695c0b74a7b64b60333c990a400&amp;stat=instructions:u\">instruction counts</a> (up to -0.8% on <code>incr-unchanged</code> builds of <code>externs</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e5038e20999eef35260b070189883edc2a8a34b2&amp;end=acbe4443cc4c9695c0b74a7b64b60333c990a400&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>deeply-nested</code>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/91318#issuecomment-985506557\">cachegrind</a> was already run, but there are no clear explanations for the regressions.</li>\n</ul>",
        "id": 264321993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065688
    },
    {
        "content": "<p>(holy cow there were a lot of entries in the <strong>Mixed</strong> bucket…)</p>",
        "id": 264322042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065706
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/labels/I-compiler-nominated\">T-compiler</a></p>\n<ul>\n<li>No <code>I-compiler-nominated</code> issues t this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 264322062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065715
    },
    {
        "content": "<p>we missed the second  nightly regression, did we?</p>",
        "id": 264322139,
        "sender_full_name": "apiraino",
        "timestamp": 1639065735
    },
    {
        "content": "<ul>\n<li>\"nightly-2021-12-02 to nightly-2021-12-03 regression (PR <a href=\"https://github.com/rust-lang/rust/issues/91354\">#91354</a>): auto-deref on <code>Cow</code> does not seem to work anymore in all circumstances\" <a href=\"https://github.com/rust-lang/rust/issues/91489\">rust#91489</a></li>\n</ul>",
        "id": 264322145,
        "sender_full_name": "apiraino",
        "timestamp": 1639065738
    },
    {
        "content": "<p>oh you’re right</p>",
        "id": 264322176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065748
    },
    {
        "content": "<p>it looks like <span class=\"user-mention\" data-user-id=\"361356\">@fee1-dead</span> has a fix?</p>",
        "id": 264322303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065792
    },
    {
        "content": "<p>in PR <a href=\"https://github.com/rust-lang/rust/issues/91549\">#91549</a></p>",
        "id": 264322372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065814
    },
    {
        "content": "<p>assigning to <span class=\"user-mention\" data-user-id=\"361356\">@fee1-dead</span></p>",
        "id": 264322400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065825
    },
    {
        "content": "<p>(ah right, it's in the PR comment)</p>",
        "id": 264322486,
        "sender_full_name": "apiraino",
        "timestamp": 1639065847
    },
    {
        "content": "<p>anyway we are over time!</p>",
        "id": 264322505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065856
    },
    {
        "content": "<p>Thank to to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Stay safe you all!</p>",
        "id": 264322538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065868
    },
    {
        "content": "<p>The annual Rust survey has launched. Please consider filling it out! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\n<a href=\"https://blog.rust-lang.org/2021/12/08/survey-launch.html\">https://blog.rust-lang.org/2021/12/08/survey-launch.html</a></p>",
        "id": 264322576,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639065881
    },
    {
        "content": "<p>and share it on your social media! We want both Rust <em>and</em> non-Rust users to fill it out!!!</p>",
        "id": 264322710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639065933
    },
    {
        "content": "<p>(already +3K replies! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> )</p>",
        "id": 264322743,
        "sender_full_name": "apiraino",
        "timestamp": 1639065947
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/0456JfXnQVeaKhiCxXNo2w?view\">https://hackmd.io/0456JfXnQVeaKhiCxXNo2w?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1175\">WG-rfc-2229</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span> by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 264323961,
        "sender_full_name": "apiraino",
        "timestamp": 1639066348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-09.20.2354818/near/264319816\">said</a>:</p>\n<blockquote>\n<p>I’m going to skip the rest of the old PRs. We don’t have time to get into this amount of detail on this many PR’s each week.</p>\n</blockquote>\n<p>about this: <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we don't _need_ to review them all everytime, I don't want to pressure the team to do so. I just fill up the buffer to be sure we don't deplete them in case reviews go faster than expected  :-) but we can cut through the list anytime</p>",
        "id": 264328390,
        "sender_full_name": "apiraino",
        "timestamp": 1639068006
    },
    {
        "content": "<p>Should we move them to the end of the meeting?</p>",
        "id": 264329306,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639068395
    },
    {
        "content": "<p>probably a bit of shuffling of the agenda like we do is ok. I notice that things at the end of the agenda are more likely to be skipped due to meeting's end</p>",
        "id": 264331606,
        "sender_full_name": "apiraino",
        "timestamp": 1639069298
    },
    {
        "content": "<p>Makes sense. I just see e.g. \"Nominated issues\" as the last thing and wonder if really should ever prioritize looking at old PRs vs that</p>",
        "id": 264333611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1639070045
    },
    {
        "content": "<p>hi I was very asleep.</p>",
        "id": 264335629,
        "sender_full_name": "Jubilee",
        "timestamp": 1639070849
    },
    {
        "content": "<p>The comment re: miri and cfg was for unrelated reasons that had nothing to do with cfg or indeed anything in std this time, I just was confused because I didn't anticipate that Miri already had tests depending on the removed part of the API.</p>",
        "id": 264335966,
        "sender_full_name": "Jubilee",
        "timestamp": 1639070990
    }
]