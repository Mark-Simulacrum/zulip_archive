[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will start in 1h and 42 minutes</p>",
        "id": 219469974,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606302
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 219469984,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606309
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/ORPTSEiZRPy39FqmHemEVg?view\">meeting agenda</a></p>",
        "id": 219470009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606323
    },
    {
        "content": "<p>We will have checkins from <em>WG-rustc-dev-guide</em> and <em>wg-incr-comp</em></p>",
        "id": 219470053,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606355
    },
    {
        "content": "<p>I'm going to provide <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin</p>",
        "id": 219470088,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span>?</p>",
        "id": 219470199,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607606424
    },
    {
        "content": "<p>(I've added a short check-in for incr-comp, <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> and <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> should feel free to add to it or replace it)</p>",
        "id": 219472086,
        "sender_full_name": "davidtwco",
        "timestamp": 1607607471
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 219483229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612439
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 219483274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612461
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 219483315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612480
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Move query implementation outside rustc_middle\" <a href=\"https://github.com/rust-lang/compiler-team/issues/388\">compiler-team#388</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219483349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612497
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></li>\n<li>\"rustc: Stabilize <code>-Zrun-dsymutil</code> as <code>-Csplit-debuginfo</code>\" <a href=\"https://github.com/rust-lang/rust/pull/79570\">rust#79570</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219483381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612510
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 219483454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612528
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"remove this weird special case from promotion\" <a href=\"https://github.com/rust-lang/rust/pull/78363\">rust#78363</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219483469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612537
    },
    {
        "content": "<ul>\n<li>tomorrow is compiler team regression day, same time as today</li>\n</ul>",
        "id": 219483526,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607612562
    },
    {
        "content": "<ul>\n<li>Mark is hopeful to get crater report triaged by then, but it's been hard to find time -- if folks would like to assist, please PM me</li>\n</ul>",
        "id": 219483622,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612602
    },
    {
        "content": "<p>(If no one does I'll allocate time but would rather not)</p>",
        "id": 219483674,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612621
    },
    {
        "content": "<p>where is issue for current crater results?</p>",
        "id": 219483690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612628
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79501\">https://github.com/rust-lang/rust/issues/79501</a></p>",
        "id": 219483764,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612651
    },
    {
        "content": "<p>how much time does it typically take you to do the triaging when you do it on your own?</p>",
        "id": 219483858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612691
    },
    {
        "content": "<p>(I'm trying to set some expectations for potential helpers, and/or figure out how many helpers you actually need)</p>",
        "id": 219483911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612716
    },
    {
        "content": "<p>I assume the amount of time depends on the number of regressions in the report</p>",
        "id": 219483959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612737
    },
    {
        "content": "<p>I think for this amount of regressions, at roughly 30 seconds on average per regression, probably 1.5 hours</p>",
        "id": 219483963,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612740
    },
    {
        "content": "<p>and it can't be trivially parallelized, because part of the point is to collect the results into buckets, right?</p>",
        "id": 219484056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612772
    },
    {
        "content": "<p>yeah, I usually file 4 or so issues (from 300+ regressed crates)</p>",
        "id": 219484094,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612790
    },
    {
        "content": "<p>yep. Okay.</p>",
        "id": 219484105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612795
    },
    {
        "content": "<p>can be split up though</p>",
        "id": 219484142,
        "sender_full_name": "simulacrum",
        "timestamp": 1607612810
    },
    {
        "content": "<p>right, we could split the effort and collect results at end.</p>",
        "id": 219484162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612820
    },
    {
        "content": "<p>(I may be able to help, not sure yet)</p>",
        "id": 219484181,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1607612827
    },
    {
        "content": "<p>there's some amount of coordination effort implied there</p>",
        "id": 219484194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612831
    },
    {
        "content": "<p>it might be nice to try to figure out if there's any tooling we could make to help with this</p>",
        "id": 219484273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612867
    },
    {
        "content": "<p>i.e. pattern matching the errors</p>",
        "id": 219484302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612878
    },
    {
        "content": "<p>anyway in the meantime, if anyone has time to assist <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , PM them</p>",
        "id": 219484383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612901
    },
    {
        "content": "<p>okay lets move along then</p>",
        "id": 219484518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612964
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 219484600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607612999
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>:</p>\n<blockquote>\n<h4>Changes</h4>\n<ul>\n<li>Adds a dev guide section on Rust Coverage <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/985\">#985</a></li>\n<li>Add notes about running the UI test suite <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/977\">#977</a></li>\n<li>Document what 'sysroot' means <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/976\">#976</a></li>\n<li>Add information about common git issues <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/974\">#974</a></li>\n<li>Improve contributor experience for the dev-guide itself <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/973\">#973</a></li>\n<li>Update bootstrap documentation with the new envvars for RUSTFLAGS <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/970\">#970</a></li>\n<li>Document how to modify feature gates <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/968\">#968</a></li>\n<li>Document when errors should have an associated error code <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/967\">#967</a></li>\n<li>add mir-opt section for optimization fuel <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/963\">#963</a></li>\n<li>Document the SessionDiagnostic derive macro. <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/961\">#961</a></li>\n<li>Add some more examples of using the compiler <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/952\">#952</a></li>\n<li>Add a section on identifiers in the MIR <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/951\">#951</a></li>\n<li>Add a section on data-flow convergence <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/950\">#950</a></li>\n<li>Document <code>src/tools/x</code>, an <code>x.py</code> wrapper <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/945\">#945</a></li>\n</ul>\n<h4>Changes in progress</h4>\n<ul>\n<li>Document lang items <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/978\">#978</a></li>\n</ul>\n</blockquote>",
        "id": 219484661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613010
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> checkin by <del>@<strong>Wesley Wiser</strong></del> <del>and</del> <del>@<strong>pnkfelix</strong></del> <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> :</p>\n<blockquote>\n<p><em>wg-incr-comp</em> has been meeting every two weeks and discussing any open PRs and doing some issue triage. All of the members are busy so not a lot is going on, but here's some of what was discussed in recent meetings:</p>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> and <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> have been working on changes to whether  or not we make copies of inline functions in debug mode (<a href=\"https://github.com/rust-lang/rust/issues/76896\">#76896</a>). Waiting on review from <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span>.</li>\n<li><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> implemented lazy decoding of <code>DefPathTable</code> from crate metadata (<a href=\"https://github.com/rust-lang/rust/issues/74967\">#74967</a>). This had some great performance wins in incremental mode and has been merged after approval by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span>.</li>\n<li><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> started including the estimated size of codegen units in self-profile data (<a href=\"https://github.com/rust-lang/rust/issues/78702\">#78702</a>). This was merged after approval by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span>.</li>\n<li><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> has been working on implementing Split DWARF support (<a href=\"https://github.com/rust-lang/rust/issues/77117\">#77117</a>). It's currently completely functioning and passing our existing debuginfo tests. PR has been approved by <span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> but is blocked on <a href=\"https://github.com/rust-lang/rust/issues/79536\">#79536</a>.</li>\n</ul>\n<p>Issue triage has revealed some recurring themes in the bugs we've looked at:</p>\n<ol>\n<li>Incremental bugs tend to be very hard to reproduce because they depend not only on the current state of the code being compiled, but on previous compilations as well. There's been some discussion of building better tools to help diagnose and report issues in a way that makes it easier for us to fix.</li>\n<li>We've seen a number of issues related to the filesystem. The incremental cache uses some features like linking which are just not supported on certain platforms (Android for example). In other cases, using filesystem features reveals poor performance in the underlying filesystem.</li>\n</ol>\n<p>We don't currently have anything to announce but we're beginning to think about forming project groups to tackle these problems.</p>\n</blockquote>",
        "id": 219484728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613042
    },
    {
        "content": "<p>given our planned focus on rustc build performance in 2021</p>",
        "id": 219484913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613120
    },
    {
        "content": "<p>I see investment in better bug identification as part of that umbrella</p>",
        "id": 219485004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613141
    },
    {
        "content": "<p>(and the filesystem thing too. that has performance hits that a lot of us are unaware of)</p>",
        "id": 219485085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613175
    },
    {
        "content": "<p>so: These are things for all of us to think about in the near term, not just wg-incr-comp.</p>",
        "id": 219485159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613205
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p>Friendly reminder: add <code>T-compiler</code> label when nominating issues. We usually catch them up anyway, but some of them were missing due to some github searches misbehaving.</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 219485216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613227
    },
    {
        "content": "<p>Has there been discussion of reducing the size of serialized metadata? That would help with filesystem issues I think</p>",
        "id": 219485250,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607613240
    },
    {
        "content": "<ul>\n<li>\"Fix exhaustiveness in case a byte string literal is used at slice type\" <a href=\"https://github.com/rust-lang/rust/pull/79072\">rust#79072</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>reviewed and r+'d by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> </li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/79048\">rust#79048</a>, an incorrect \"unreachable pattern\" warning on nightly</li>\n</ul>\n</li>\n</ul>",
        "id": 219485251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613240
    },
    {
        "content": "<ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/79048\">rust#79048</a>, <del>an incorrect \"unreachable pattern\" warning on nightly</del> unsound code</li>\n</ul>",
        "id": 219485344,
        "sender_full_name": "lcnr",
        "timestamp": 1607613271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-10.20.2354818/near/219485250\">said</a>:</p>\n<blockquote>\n<p>Has there been discussion of reducing the size of serialized metadata? That would help with filesystem issues I think</p>\n</blockquote>\n<p>I don't think it has been discussed too much. We were more thinking of trying to avoid \"hard linking\" (which degrades to copying when unsupported) entirely</p>",
        "id": 219485430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613318
    },
    {
        "content": "<p>/me goes to look at <a href=\"https://github.com/rust-lang/rust/issues/79048\">#79048</a></p>",
        "id": 219485504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613352
    },
    {
        "content": "<p>OMG</p>",
        "id": 219485601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613376
    },
    {
        "content": "<p>uh</p>",
        "id": 219485694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613424
    },
    {
        "content": "<p>anyway</p>",
        "id": 219485764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613459
    },
    {
        "content": "<p>this was missed!</p>",
        "id": 219485771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is that meant as a permenent fix, or a quick hack?</p>",
        "id": 219485805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613475
    },
    {
        "content": "<p>I guess you can tell which one I am hoping you will say :P</p>",
        "id": 219485866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613486
    },
    {
        "content": "<p>sorry my \"OMG\" was in reference to the <a href=\"https://github.com/rust-lang/rust/issues/79048#issuecomment-727233819\">unsound code example</a></p>",
        "id": 219485877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613490
    },
    {
        "content": "<p>oh, I figured that</p>",
        "id": 219485894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613500
    },
    {
        "content": "<p>the diff isn't <em>that</em> bad :P</p>",
        "id": 219485914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613509
    },
    {
        "content": "<p>(it's maybe actually fine, I didn't look that closely at it, it just seemed a bit surprising)</p>",
        "id": 219485944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607613526
    },
    {
        "content": "<p>On the one hand, it seems pretty hacky. On the other hand, without deeper reading of the code, I don't know what alternative to suggest</p>",
        "id": 219486362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613695
    },
    {
        "content": "<p>in any case, backporting this seems fine to me</p>",
        "id": 219486378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613702
    },
    {
        "content": "<p>its just a question of whether we should attempt to replace it with something else</p>",
        "id": 219486399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613715
    },
    {
        "content": "<p>and that's not a discussion we need to have right now</p>",
        "id": 219486469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613733
    },
    {
        "content": "<p>so, okay. backport approved.</p>",
        "id": 219486501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613748
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>",
        "id": 219486530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613762
    },
    {
        "content": "<p>should this also be stable nominated?</p>",
        "id": 219486540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613764
    },
    {
        "content": "<p>I'm just loudly thinking ...</p>",
        "id": 219486553,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> has the bug reached stable?</p>",
        "id": 219486570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613777
    },
    {
        "content": "<p>yeah I'm just thinking and trying to figure out</p>",
        "id": 219486611,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613795
    },
    {
        "content": "<p>it did not</p>",
        "id": 219486630,
        "sender_full_name": "lcnr",
        "timestamp": 1607613801
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ee79b97c4a37dd71e30694ecf26bbe94\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ee79b97c4a37dd71e30694ecf26bbe94</a></p>",
        "id": 219486647,
        "sender_full_name": "lcnr",
        "timestamp": 1607613807
    },
    {
        "content": "<p>github filters started to fail and this was missed</p>",
        "id": 219486651,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-10.20.2354818/near/219486630\">said</a>:</p>\n<blockquote>\n<p>it did not</p>\n</blockquote>\n<p>phew, great then</p>",
        "id": 219486674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613816
    },
    {
        "content": "<p>prioritization-wg has tighten the checks we do for this, but still always remembering to add <code>T-compiler</code> helps</p>",
        "id": 219486698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607613827
    },
    {
        "content": "<p>it would be interesting to see if some bot in github</p>",
        "id": 219486734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613842
    },
    {
        "content": "<p>could automatically run code examples against nightly+beta+stable</p>",
        "id": 219486787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613851
    },
    {
        "content": "<p>and tag the code example accordingly</p>",
        "id": 219486801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613856
    },
    {
        "content": "<p>you wouldn't want to do this for every code block in every comment</p>",
        "id": 219486860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613880
    },
    {
        "content": "<p>but maybe just the ones in the description? Or ones with some special tag marking it for such updates?</p>",
        "id": 219486902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613894
    },
    {
        "content": "<p>it just seems silly to make humans do these runs</p>",
        "id": 219486959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613919
    },
    {
        "content": "<p>(and the corresponding freak-outs from me when we realize we overlooked something like this leaking to stable)</p>",
        "id": 219487046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613955
    },
    {
        "content": "<p>I guess some projects automatically make test cases in the repo</p>",
        "id": 219487141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613982
    },
    {
        "content": "<p>when bugs are filed</p>",
        "id": 219487148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613985
    },
    {
        "content": "<p>and then mark them as \"ignorable\"</p>",
        "id": 219487161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607613992
    },
    {
        "content": "<p>on the nightlies, but don't ignore them when it comes to testing the next stage</p>",
        "id": 219487213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614018
    },
    {
        "content": "<p>I have long wished for some easier way to check whether a given PR reached stable etc</p>",
        "id": 219487215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614019
    },
    {
        "content": "<p>you could imagine a zulip bot for this</p>",
        "id": 219487232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614026
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-10.20.2354818/near/219487215\">said</a>:</p>\n<blockquote>\n<p>I have long wished for some easier way to check whether a given PR reached stable etc</p>\n</blockquote>\n<p>we do sort of have <em>this</em> though, rightQ?</p>",
        "id": 219487259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614037
    },
    {
        "content": "<p>most PRs are milestoned correctly these days</p>",
        "id": 219487263,
        "sender_full_name": "simulacrum",
        "timestamp": 1607614038
    },
    {
        "content": "<p>ok</p>",
        "id": 219487276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614043
    },
    {
        "content": "<p>right, the milestones</p>",
        "id": 219487281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614044
    },
    {
        "content": "<p>maybe I'm out of date :)</p>",
        "id": 219487289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614047
    },
    {
        "content": "<p>backports can mess with that (though I try to update milestones) - I need to work on the triagebot code to be better about it</p>",
        "id": 219487342,
        "sender_full_name": "simulacrum",
        "timestamp": 1607614067
    },
    {
        "content": "<p>okay where was I</p>",
        "id": 219487345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614069
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>",
        "id": 219487368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614081
    },
    {
        "content": "<ul>\n<li>\"fix soundness issue in <code>make_contiguous</code>\" <a href=\"https://github.com/rust-lang/rust/pull/79814\">rust#79814</a><ul>\n<li>opened by  <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> and  <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </li>\n<li>not yet r+'d</li>\n<li>fixes unsoundness in VecDeque::make_contiguous, issue <a href=\"https://github.com/rust-lang/rust/issues/79808\">rust#79808</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219487424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614088
    },
    {
        "content": "<p>the prioritization wg had issues understanding milestones, but we can discuss on <a class=\"stream\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization\">#t-compiler/wg-prioritization</a></p>",
        "id": 219487450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607614093
    },
    {
        "content": "<p>ping me :)</p>",
        "id": 219487799,
        "sender_full_name": "simulacrum",
        "timestamp": 1607614218
    },
    {
        "content": "<p><em>it would be great to have someone who's working on <code>VecDeque</code>, bugs like this and <a href=\"https://github.com/rust-lang/rust/issues/78532\">#78532</a> shouldn't get to stable but we don't really have an expert there afaik</em></p>",
        "id": 219487914,
        "sender_full_name": "lcnr",
        "timestamp": 1607614260
    },
    {
        "content": "<p>\"working on\" here would mean: Making a more complete test suite?</p>",
        "id": 219488011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614297
    },
    {
        "content": "<p>or trying to verify correctness of the code?</p>",
        "id": 219488047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614313
    },
    {
        "content": "<p>yeah, or just in general being really familiar with how this works</p>",
        "id": 219488062,
        "sender_full_name": "lcnr",
        "timestamp": 1607614316
    },
    {
        "content": "<p>I ask because it sounds like this wasn't a recent injection</p>",
        "id": 219488136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614327
    },
    {
        "content": "<p>it's not, it was introduced half a year ago</p>",
        "id": 219488199,
        "sender_full_name": "lcnr",
        "timestamp": 1607614346
    },
    {
        "content": "<p>and noone touched that method after i added it</p>",
        "id": 219488266,
        "sender_full_name": "lcnr",
        "timestamp": 1607614364
    },
    {
        "content": "<p>okay well that's more recent than I was expecting</p>",
        "id": 219488271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614365
    },
    {
        "content": "<p>in general we need to ramp up our expertise on libstd</p>",
        "id": 219488531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614445
    },
    {
        "content": "<p>if we are taking on that maintenance permanently, I guess that's something we have to think about how to do in a more organized way</p>",
        "id": 219488593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614469
    },
    {
        "content": "<p>my impression is that we have indeed taken on that maintenance permanently</p>",
        "id": 219488727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614526
    },
    {
        "content": "<p>me too :)</p>",
        "id": 219488735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614531
    },
    {
        "content": "<p>but now I cannot remember what the original terms were</p>",
        "id": 219488745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614534
    },
    {
        "content": "<p>I just don't think we've really organized around it</p>",
        "id": 219488749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614536
    },
    {
        "content": "<p>we probably ought to rename the team too but...</p>",
        "id": 219488769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614549
    },
    {
        "content": "<p>anyway</p>",
        "id": 219488785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614556
    },
    {
        "content": "<p>In this particular case, it might be interesting to see if we could do more exhaustive testing</p>",
        "id": 219488930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614615
    },
    {
        "content": "<p>e.g. starting with small capacity means you can hit interesting corner cases with a relatively small exploration of the (enormous) search space of sequences of operations.</p>",
        "id": 219489059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614672
    },
    {
        "content": "<p>but again we digress</p>",
        "id": 219489121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614683
    },
    {
        "content": "<p>I'm willing to trust <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> on this being a good thing to backport</p>",
        "id": 219489175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614705
    },
    {
        "content": "<p>backport approved</p>",
        "id": 219489224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614732
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 219489246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614746
    },
    {
        "content": "<ul>\n<li>\"Transform post order walk to an iterative approach\" <a href=\"https://github.com/rust-lang/rust/pull/78607\">rust#78607</a><ul>\n<li>opened by <a href=\"https://github.com/HeroicKatora\">HeroicKatora</a></li>\n<li>reviewed and approved by <strong>@davidtwco</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 219489268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614762
    },
    {
        "content": "<p>hmm.</p>",
        "id": 219489317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614785
    },
    {
        "content": "<p>i'm... i'm not sure about the risk/benefit here</p>",
        "id": 219489407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614814
    },
    {
        "content": "<p>of a stable backport</p>",
        "id": 219489415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607614818
    },
    {
        "content": "<p>I nominated this because of <a href=\"https://github.com/rust-lang/rust/issues/79438\">https://github.com/rust-lang/rust/issues/79438</a></p>",
        "id": 219489435,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607614829
    },
    {
        "content": "<p>which is real <code>tinyvec</code> code, not generated</p>",
        "id": 219489459,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607614840
    },
    {
        "content": "<p>this has been on master for a month already, so i think that the risk is fairly small</p>",
        "id": 219489494,
        "sender_full_name": "lcnr",
        "timestamp": 1607614860
    },
    {
        "content": "<p>although I think it may be related to the RAM available</p>",
        "id": 219489504,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607614865
    },
    {
        "content": "<p>I was just going to say, the risk seems fairly minimal</p>",
        "id": 219489519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614869
    },
    {
        "content": "<p>the benefit perhaps as well though</p>",
        "id": 219489527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607614874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-10.20.2354818/near/219489415\">said</a>:</p>\n<blockquote>\n<p>of a stable backport</p>\n</blockquote>\n<p>right - I don't think it should <em>cause</em> a point release, but it should be in any point release that happens</p>",
        "id": 219489561,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607614887
    },
    {
        "content": "<p>I guess I'm a <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> on a stable backport here</p>",
        "id": 219490000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615083
    },
    {
        "content": "<p>the risk does seem pretty minimal</p>",
        "id": 219490050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615104
    },
    {
        "content": "<p>and if real users are hitting it, then I should accept that</p>",
        "id": 219490084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615119
    },
    {
        "content": "<p>okay. stable backport approved, I guess.</p>",
        "id": 219490204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615166
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>",
        "id": 219490313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615219
    },
    {
        "content": "<ul>\n<li>\"fix soundness issue in <code>make_contiguous</code>\" <a href=\"https://github.com/rust-lang/rust/pull/79814\">rust#79814</a><ul>\n<li>opened by  <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> </li>\n<li>not yet r+'ed</li>\n<li>fixes unsoundness in VecDeque::make_contiguous, issue <a href=\"https://github.com/rust-lang/rust/issues/79808\">rust#79808</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219490333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> how do you feel about stable backport here?</p>",
        "id": 219490423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615267
    },
    {
        "content": "<p>it <del>most definitely</del> hopefully ( <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> ) won't make anything worse</p>",
        "id": 219490512,
        "sender_full_name": "lcnr",
        "timestamp": 1607615288
    },
    {
        "content": "<p>that's the kind of confidence I like to hear</p>",
        "id": 219490546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615304
    },
    {
        "content": "<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 219490558,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607615310
    },
    {
        "content": "<p><span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 219490561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615311
    },
    {
        "content": "<p>I guess we can stable-backport approve. If a stable point release happens then this will be included.</p>",
        "id": 219490831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615409
    },
    {
        "content": "<p>but neither of these seems like it would <em>force</em> a point release</p>",
        "id": 219490876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615427
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 219490929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615442
    },
    {
        "content": "<p>(we are disasterously late into the meeting, btw)</p>",
        "id": 219490955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615453
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 219490968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615461
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">53 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">36 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 3 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 8 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 28 P-high, 69 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 219490981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615468
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 219491012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615479
    },
    {
        "content": "<ul>\n<li>\"Switching to opt-level=z on i686-windows-msvc triggers STATUS_ACCESS_VIOLATION\" <a href=\"https://github.com/rust-lang/rust/issues/67497\">rust#67497</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"238306\">@dignifiedquire</span> </li>\n<li>Not yet assigned</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/67497#issuecomment-733699197\">Rust 1.36.0 through 1.48.0</a> all have broken builds on Windows i686-windows-msvc</li>\n</ul>\n</li>\n</ul>",
        "id": 219491032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615487
    },
    {
        "content": "<p>(it would be really good to get this assigned.)</p>",
        "id": 219491063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615500
    },
    {
        "content": "<ul>\n<li>\"Upgrade to LLVM11 caused a codegen regression on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/78283\">rust#78283</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482008\">Previously discussed</a></li>\n<li>opened by <span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span></li>\n<li>assigned to  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> </li>\n<li>Firefox code that used to work on Rust 1.46 started to fail after upgrading to LLVM 11</li>\n<li>Affects only MSVC</li>\n<li><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> suggests could be related to <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a></li>\n<li><span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span> suggests to be related to LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a>, provides a <a href=\"https://github.com/rust-lang/rust/issues/78283#issuecomment-720156273\">minimal repro</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has patch in progress for LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219491095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615517
    },
    {
        "content": "<p>(I got recent feedback from I think <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> on my patch; I'm hoping to resume work on that today or tomorrow.)</p>",
        "id": 219491189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615539
    },
    {
        "content": "<ul>\n<li>\"No error reported when a generic parameter doesn't meet the requirement of an associated type\" <a href=\"https://github.com/rust-lang/rust/issues/78893\">rust#78893</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482210\">Previously discussed</a>, and <a href=\"#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type\">a topic was created to discuss it on Zulip</a></li>\n<li>Nightly regression</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> provides a fix in PR <a href=\"https://github.com/rust-lang/rust/pull/79543\">rust#79543</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219491221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615556
    },
    {
        "content": "<p>so...</p>",
        "id": 219491242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> had some concerns about that fix and we haven't really had time to sync up on it</p>",
        "id": 219491264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615576
    },
    {
        "content": "<p>in particular I think it was preventing bootstrap :)</p>",
        "id": 219491284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615584
    },
    {
        "content": "<p>though I think I maybe had a suggestion for what could help with that, I forget</p>",
        "id": 219491304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615594
    },
    {
        "content": "<p>yeah we should probably include that in the notes about the PR</p>",
        "id": 219491334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615604
    },
    {
        "content": "<p><del>what's the timing on this, is it on stable?</del></p>",
        "id": 219491373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615621
    },
    {
        "content": "<p>it says nightly regrsssion</p>",
        "id": 219491384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615624
    },
    {
        "content": "<p>(I'll leave a comment on the PR so that future priorization visits include it in the summary)</p>",
        "id": 219491425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615638
    },
    {
        "content": "<blockquote>\n<p>December 31st 2020 UTC</p>\n</blockquote>",
        "id": 219491504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615650
    },
    {
        "content": "<p>is the next beta release...</p>",
        "id": 219491519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615656
    },
    {
        "content": "<p>ok</p>",
        "id": 219491522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615657
    },
    {
        "content": "<p>I will try to circle up with <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> before next meeting</p>",
        "id": 219491577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615680
    },
    {
        "content": "<ul>\n<li>\"Miscompilation of AVX2 code under --release\" <a href=\"https://github.com/rust-lang/rust/issues/79865\">rust#79865</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> </li>\n<li>not yet assigned (opened yesterday)</li>\n<li>unsoundness that impacts cryptographic code</li>\n<li>no mcve yet, but various bits may help build the case (example: <a href=\"https://github.com/rust-lang/rust/issues/79865#issuecomment-742039745\">refactoring some code from a lambda into a function</a> makes the issue disappear, adding <code>dbg!()</code> statements, etc.)</li>\n</ul>\n</li>\n</ul>",
        "id": 219491630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615700
    },
    {
        "content": "<p>looks like the issue (<a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a>) is in the current beta <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2311c273659fd7de22b110b6ecacd275\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2311c273659fd7de22b110b6ecacd275</a></p>",
        "id": 219491635,
        "sender_full_name": "lcnr",
        "timestamp": 1607615702
    },
    {
        "content": "<p>d'oh</p>",
        "id": 219491669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615713
    },
    {
        "content": "<p>I was afraid of that :)</p>",
        "id": 219491673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615715
    },
    {
        "content": "<p>the next beta is 1.50 which will be released on the 21.2.2021</p>",
        "id": 219491705,
        "sender_full_name": "lcnr",
        "timestamp": 1607615730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> worst case scenario is that we do nothing about <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> and just \"accept\" the change to the static semantics?</p>",
        "id": 219491855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615782
    },
    {
        "content": "<p>right</p>",
        "id": 219491867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615789
    },
    {
        "content": "<p>which I actually kind of think <em>may</em> be the semantics we want</p>",
        "id": 219491883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615796
    },
    {
        "content": "<p>but I should probably raise it in a t-lang meeting</p>",
        "id": 219491889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615801
    },
    {
        "content": "<p>and spend an hour trying to make my case in written form</p>",
        "id": 219491904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1607615809
    },
    {
        "content": "<p>okay</p>",
        "id": 219491944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615828
    },
    {
        "content": "<p>gotta keep moving</p>",
        "id": 219491947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615831
    },
    {
        "content": "<p>we don't have anyone assigned on <a href=\"https://github.com/rust-lang/rust/issues/79865\">#79865</a></p>",
        "id": 219491981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615846
    },
    {
        "content": "<p>it sounds like it might be \"fun\" to try to generate an MCVE for it</p>",
        "id": 219492003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615857
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>\"VecDeque: length 0 underflow and bogus values from pop_front(), triggered by a certain sequence of reserve(), push_back(), make_contiguous(), pop_front()\" <a href=\"https://github.com/rust-lang/rust/issues/79808\">rust#79808</a><ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span></li>\n<li>fixes unsoundness in VecDeque::make_contiguous, issue <a href=\"https://github.com/rust-lang/rust/issues/79808\">rust#79808</a></li>\n<li>beta and stable nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 219492022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615866
    },
    {
        "content": "<p>(we discussed this already)</p>",
        "id": 219492030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615871
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 219492037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615877
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 219492094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615888
    },
    {
        "content": "<ul>\n<li>\"1.48 beta broken on mips due to copy_file_range EOVERFLOW\" <a href=\"https://github.com/rust-lang/rust/issues/78979\">rust#78979</a><ul>\n<li>Reviewed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>This is already fixed on stable and nightly and a beta backport is approved and waiting to be done.</li>\n</ul>\n</li>\n</ul>",
        "id": 219492114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615896
    },
    {
        "content": "<p>okay that's under control</p>",
        "id": 219492124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615904
    },
    {
        "content": "<ul>\n<li>\"rustc nightly hangs and leaks memory\" <a href=\"https://github.com/rust-lang/rust/issues/79714\">rust#79714</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"360888\">@Isaac Leonard</span> </li>\n<li>not yet assigned</li>\n<li><a href=\"https://github.com/JohnTitor\">JohnTitor</a> mentions likely culprit PR <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219492133,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615910
    },
    {
        "content": "<p>hmm</p>",
        "id": 219492178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615940
    },
    {
        "content": "<p>wow PR <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a> really did cause a host of issues, eh?</p>",
        "id": 219492234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615976
    },
    {
        "content": "<p>(but its also something that a lot of follow-on work depended on)</p>",
        "id": 219492257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607615990
    },
    {
        "content": "<p>I do wonder what real-world code is hitting <a href=\"https://github.com/rust-lang/rust/issues/79714\">#79714</a></p>",
        "id": 219492360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616031
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>\"Failed to recover key for type_of with hash\" <a href=\"https://github.com/rust-lang/rust/issues/79890\">rust#79890</a><ul>\n<li>ICE when running <code>cargo test</code> over code that pulls an external crate</li>\n<li>Reporter also <a href=\"https://github.com/rust-lang/rust/issues/79890#issuecomment-742380554\">bisected the issue</a></li>\n</ul>\n</li>\n</ul>",
        "id": 219492435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616061
    },
    {
        "content": "<p>sigh that's the hour</p>",
        "id": 219492525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616091
    },
    {
        "content": "<p>and we once again haven't had time for the performance report. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 219492559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616104
    },
    {
        "content": "<p>oh well at least I should transcribe this from perf report:</p>",
        "id": 219492667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616135
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li>\n<p>stdarch expansion causing a 40% libcore compile time regression is still not<br>\n  resolved, and resolution is unclear. It seems likely that this could be one of<br>\n  our key elements for improving std compile times at least, though.</p>\n</li>\n<li>\n<p>No new nags.</p>\n</li>\n</ul>",
        "id": 219492670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616136
    },
    {
        "content": "<p>anyway thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 219492806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607616192
    },
    {
        "content": "<p>next week's agenda is already created <a href=\"https://hackmd.io/bm8_ygc8SFi64MWKZowhWw?both\">https://hackmd.io/bm8_ygc8SFi64MWKZowhWw?both</a> and is going to be filled during the week</p>",
        "id": 219493237,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607616352
    },
    {
        "content": "<p>we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> and <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span>, cc (<span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>) so we have time to fill checkins with plenty of time :)</p>",
        "id": 219493329,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607616376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-10.20.2354818/near/219492003\">said</a>:</p>\n<blockquote>\n<p>it sounds like it might be \"fun\" to try to generate an MCVE for it</p>\n</blockquote>\n<p>how minimal are we talking for  <a href=\"https://github.com/rust-lang/rust/issues/79865\">#79865</a> ? as this is a mathematical avx2 algorithm with a few dependencies, and which needs to run to reproduce the miscompilation, it may be quite big. I can try to reduce it so that it at least builds on the playground (I don't know if it will reproduce there since it needs avx2) if that helps ? and after that I assume the llvm cleanup group will be able to more easily bugpoint it</p>",
        "id": 219527136,
        "sender_full_name": "lqd",
        "timestamp": 1607630984
    },
    {
        "content": "<p>if you can get it to something that builds on the playground, that sounds like a big step to me.</p>",
        "id": 219529417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1607632072
    },
    {
        "content": "<p>ok I'll try, it requires typenum which has a <a href=\"http://build.rs\">build.rs</a>, so yeah as you said this will be \"fun\" - heavy code generation + minimizing <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 219529530,
        "sender_full_name": "lqd",
        "timestamp": 1607632122
    },
    {
        "content": "<p>I just reduced without thinking much about the bug (but thinking about it makes it seems like some unactivated target feature) but there you go <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=9235420e8d6a2f066d3636f0ecf9f9b3\">https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=9235420e8d6a2f066d3636f0ecf9f9b3</a> -- it's probably too reduced as it triggers the bug but not the inverse <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> (it's not that easy to have it build with and without +avx2)</p>",
        "id": 219544259,
        "sender_full_name": "lqd",
        "timestamp": 1607640048
    }
]