[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/YIIP5vCnSjOYogzRSlJ9MQ?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:<br>\n<span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <br>\n<span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> (<a href=\"https://hackmd.io/w9tJSQkHTZWYet3BUijtTA#WG-checkins\">last update</a>)</p>",
        "id": 243008503,
        "sender_full_name": "apiraino",
        "timestamp": 1623932225
    },
    {
        "content": "<p>Don't think there's much to say on the LLVM side. Might be worth mentioning:</p>\n<ol>\n<li>Work on opaque pointer types has recently picked up. Don't think it will be ready for next release, but maybe the one after. We should probably get rid of our reliance on pointer element types in codegen_llvm at some point.</li>\n<li>A lot of mailing list discussion on pointer provenance wrt pointer&lt;-&gt;int conversions (including implicit casts through memory) recently. It doesn't look like there's any consensus yet, but at least there is some movement.</li>\n</ol>",
        "id": 243009509,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1623932775
    },
    {
        "content": "<ol start=\"3\">\n<li>A support for demangling symbols that use new Rust mangling scheme.</li>\n</ol>",
        "id": 243012522,
        "sender_full_name": "tm",
        "timestamp": 1623934565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> Do you have a link to that?</p>",
        "id": 243015729,
        "sender_full_name": "mw",
        "timestamp": 1623936008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <a href=\"https://github.com/llvm/llvm-project/blob/main/llvm/lib/Demangle/RustDemangle.cpp\">https://github.com/llvm/llvm-project/blob/main/llvm/lib/Demangle/RustDemangle.cpp</a></p>",
        "id": 243015912,
        "sender_full_name": "tm",
        "timestamp": 1623936096
    },
    {
        "content": "<p>Nice <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 243016030,
        "sender_full_name": "mw",
        "timestamp": 1623936133
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> .</p>",
        "id": 243021821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938538
    },
    {
        "content": "<p>Lets start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 243021927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938581
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> today release of Rust stable 1.53 <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 243021960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938595
    },
    {
        "content": "<ul>\n<li>I need to reschedule the 1.52 Fingerprint retrospective <a href=\"https://github.com/rust-lang/compiler-team/issues/435\">compiler-team#435</a> (which we had scheduled for tomorrow)</li>\n</ul>",
        "id": 243022114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938653
    },
    {
        "content": "<p>the good news is that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> pointed out to me that I failed to add it to the calendar in the first place.</p>",
        "id": 243022152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938672
    },
    {
        "content": "<p>a blessing in disguise :)</p>",
        "id": 243022256,
        "sender_full_name": "mw",
        "timestamp": 1623938720
    },
    {
        "content": "<p>any objections to <time datetime=\"2021-06-25T14:00:00Z\">2021-06-25T10:00:00-04:00</time>  ? <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you think you'll be available then?</p>",
        "id": 243022356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938761
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 243022421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938774
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 243022434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938780
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243022471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938792
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 243022496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938802
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Allow changing the bug report url for the ice hook\" <a href=\"https://github.com/rust-lang/compiler-team/issues/436\">compiler-team#436</a></li>\n<li>\"Transfer on-disk hash table implementation (odht crate) to rust-lang org\" <a href=\"https://github.com/rust-lang/compiler-team/issues/438\">compiler-team#438</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243022512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938808
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 243022529,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938818
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for const <code>core::str::from_utf8_unchecked</code>\" <a href=\"https://github.com/rust-lang/rust/issues/75196\">rust#75196</a></li>\n<li>\"Re-add support for parsing (and pretty-printing) inner-attributes in match body\" <a href=\"https://github.com/rust-lang/rust/pull/85193\">rust#85193</a></li>\n<li>\"Stabilize <code>ops::ControlFlow</code> (just the type)\" <a href=\"https://github.com/rust-lang/rust/pull/85608\">rust#85608</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243022546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938825
    },
    {
        "content": "<p>Also: The second \"Cross Team Collaboration Fun Times\" (CTCFT) meeting will be this coming Monday, <time datetime=\"2021-06-22T01:00:00Z\">2021-06-21T21:00:00-04:00</time></p>",
        "id": 243022879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938965
    },
    {
        "content": "<p>(see <a href=\"https://rust-ctcft.github.io/ctcft/meetings.html\">ctcft website</a> )</p>",
        "id": 243022916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623938985
    },
    {
        "content": "<p>also, I happened to notice some chatter in <a class=\"stream-topic\" data-stream-id=\"241545\" href=\"/#narrow/stream/241545-t-release/topic/1.2E53.20release\">#t-release &gt; 1.53 release</a></p>",
        "id": 243023021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939024
    },
    {
        "content": "<p>about clippy ICEs and a rustfmt regression</p>",
        "id": 243023123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939074
    },
    {
        "content": "<p>I mostly just want to broaden awareness</p>",
        "id": 243023149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939091
    },
    {
        "content": "<p>Okay lets move along in agenda</p>",
        "id": 243023189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939111
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 243023247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939123
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:</p>\n<blockquote>\n<p>While there has been activity recently around the ICEs in incremental compilation in 1.52 and 1.53, the group itself has not been very active.</p>\n</blockquote>",
        "id": 243023262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939130
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> (<a href=\"https://hackmd.io/w9tJSQkHTZWYet3BUijtTA#WG-checkins\">last update</a>):</p>\n<blockquote>\n<ul>\n<li>Work on opaque pointer types has recently picked up. Don't think it will be ready for next release, but maybe the one after. We should probably get rid of our reliance on pointer element types in codegen_llvm at some point.</li>\n<li>A lot of mailing list discussion on pointer provenance wrt pointer&lt;-&gt;int conversions (including implicit casts through memory) recently. It doesn't look like there's any consensus yet, but at least there is some movement.</li>\n<li>A support for demangling symbols that use new Rust mangling scheme.</li>\n</ul>\n</blockquote>",
        "id": 243023274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939137
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 243023294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939145
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Re-add support for parsing (and pretty-printing) inner-attributes in match body\" <a href=\"https://github.com/rust-lang/rust/pull/85193\">rust#85193</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>, PR didn't make it to the merge window</li>\n</ul>\n</li>\n</ul>",
        "id": 243023320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939154
    },
    {
        "content": "<p>The main reason I'm not unilaterally approving this is that its my own PR. :)</p>",
        "id": 243023422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939205
    },
    {
        "content": "<p>We didn't file an actual bug for the breakage injected by PR <a href=\"https://github.com/rust-lang/rust/issues/83312\">#83312</a>, did we?</p>",
        "id": 243023520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939248
    },
    {
        "content": "<p>well maybe <a href=\"https://github.com/rust-lang/rust/issues/84879\">#84879</a> covers it</p>",
        "id": 243023581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939282
    },
    {
        "content": "<p>yes I think <a href=\"https://github.com/rust-lang/rust/issues/84879\">#84879</a> covers it.</p>",
        "id": 243023603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939298
    },
    {
        "content": "<p>The regression only affects the beta for 1.54, right?</p>",
        "id": 243023637,
        "sender_full_name": "mw",
        "timestamp": 1623939315
    },
    {
        "content": "<p>I believe so</p>",
        "id": 243023660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939324
    },
    {
        "content": "<p>I guess it would be good to confirm that, given what we went through with 1.52</p>",
        "id": 243023751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939348
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83312\">#83312</a> landed in 1.54</p>",
        "id": 243023882,
        "sender_full_name": "simulacrum",
        "timestamp": 1623939406
    },
    {
        "content": "<p>yeah I just double checked on playground too</p>",
        "id": 243024025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939464
    },
    {
        "content": "<p>okay beta backport approved for PR <a href=\"https://github.com/rust-lang/rust/issues/85193\">#85193</a></p>",
        "id": 243024219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939539
    },
    {
        "content": "<p>uh, well, playground won't have a new 1.54 beta just yet -- we haven't actually pushed it out</p>",
        "id": 243024233,
        "sender_full_name": "simulacrum",
        "timestamp": 1623939544
    },
    {
        "content": "<p>right, what I mean is I checked against 1.53</p>",
        "id": 243024271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939557
    },
    {
        "content": "<p>on playground, which calls 1.53-beta</p>",
        "id": 243024292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939565
    },
    {
        "content": "<p>(its not quite as good as checking against an actual download of 1.53-stable release itself, I admit)</p>",
        "id": 243024351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939595
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Revert \"Allow specifying alignment for functions\"\" <a href=\"https://github.com/rust-lang/rust/pull/86300\">rust#86300</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> </li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/86300#issuecomment-861065417\">comments</a> this PR is still a good candidate for backport since PR <a href=\"https://github.com/rust-lang/rust/pull/85976\">#85976</a> will land in 1.55 (at the earliest)</li>\n</ul>\n</li>\n</ul>",
        "id": 243024413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939605
    },
    {
        "content": "<p>yeah backport approved here too</p>",
        "id": 243024512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939654
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 243024530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939662
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-libs-impl</code> this time.</li>\n<li>No stable nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 243024543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939667
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 243024555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939672
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 243024573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939679
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">80 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 1 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 3 P-high, 3 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 48 P-high, 86 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 243024587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939686
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 243024601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939697
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>milestone has been moved to 1.54</li>\n<li>reprio to <code>P-high</code>?</li>\n</ul>\n</li>\n</ul>",
        "id": 243024615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939704
    },
    {
        "content": "<p>(I <em>think</em> want to leave this P-critical)</p>",
        "id": 243024703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939725
    },
    {
        "content": "<p>For what decision?</p>",
        "id": 243024765,
        "sender_full_name": "simulacrum",
        "timestamp": 1623939760
    },
    {
        "content": "<p>Was <a href=\"https://github.com/rust-lang/rust/issues/86004\">https://github.com/rust-lang/rust/issues/86004</a> taken care of?</p>",
        "id": 243024779,
        "sender_full_name": "mw",
        "timestamp": 1623939765
    },
    {
        "content": "<p>how are we doing with the table on the top</p>",
        "id": 243024792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939771
    },
    {
        "content": "<p>(just checking)</p>",
        "id": 243024801,
        "sender_full_name": "mw",
        "timestamp": 1623939773
    },
    {
        "content": "<p>yes, we put FORCE_INCREMENTAL into the stable release as part of <a href=\"https://github.com/rust-lang/rust/pull/86317\">https://github.com/rust-lang/rust/pull/86317</a></p>",
        "id": 243024847,
        "sender_full_name": "simulacrum",
        "timestamp": 1623939793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243024779\">said</a>:</p>\n<blockquote>\n<p>Was <a href=\"https://github.com/rust-lang/rust/issues/86004\">https://github.com/rust-lang/rust/issues/86004</a> taken care of?</p>\n</blockquote>\n<p>I believe <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> handled it</p>",
        "id": 243024850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939796
    },
    {
        "content": "<p>(just closed it)</p>",
        "id": 243024867,
        "sender_full_name": "simulacrum",
        "timestamp": 1623939802
    },
    {
        "content": "<p>We still need to address the sub-obligation caching issue, and the overflow issue</p>",
        "id": 243024871,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623939803
    },
    {
        "content": "<p>Other than that, I think all of the known issues are fixed</p>",
        "id": 243024896,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623939817
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> overflow is <a href=\"https://github.com/rust-lang/rust/issues/84963\">#84963</a>? And which one is the sub-obligation caching issue?</p>",
        "id": 243024943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939836
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/85360\">https://github.com/rust-lang/rust/issues/85360</a></p>",
        "id": 243025150,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623939904
    },
    {
        "content": "<p>okay, that is not referenced on <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> AFAICT</p>",
        "id": 243025206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939923
    },
    {
        "content": "<p>and yes, that's the overflow issue</p>",
        "id": 243025210,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623939927
    },
    {
        "content": "<p>I'll add it to table later</p>",
        "id": 243025260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and I'll try to follow-up with you later, maybe figure out if we can spread some of the work around better.</p>",
        "id": 243025356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623939975
    },
    {
        "content": "<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>previously discussed</li>\n<li><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> comments this issue will be discussed <a href=\"https://github.com/rust-lang/rust/issues/85863#issuecomment-856958496\">in a follow-up T-lang meeting</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243025408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940000
    },
    {
        "content": "<p>we addressed this by removing many of the relevant impls</p>",
        "id": 243025447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940019
    },
    {
        "content": "<p>right?</p>",
        "id": 243025454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940020
    },
    {
        "content": "<p>or maybe that was just for Zip</p>",
        "id": 243025566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940059
    },
    {
        "content": "<p>I can take time starting tomorrow to look at this, maybe over the weekend. <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> feel free to ping me and dump tasks on me if you have alternative approaches in mind so we can parallelize</p>",
        "id": 243025573,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1623940061
    },
    {
        "content": "<p>I think we addressed all the issues introduced in 1.53 but there are older issues that we decided to wait on addressing.</p>",
        "id": 243025672,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1623940086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> The projection sub-obligation issue?</p>",
        "id": 243025693,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1623940093
    },
    {
        "content": "<p>(Yes, don't want to spam this convo)</p>",
        "id": 243025759,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1623940115
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243025447\">said</a>:</p>\n<blockquote>\n<p>we addressed this by removing many of the relevant impls</p>\n</blockquote>\n<p>hmm PR <a href=\"https://github.com/rust-lang/rust/issues/85874\">#85874</a> hasn't landed</p>",
        "id": 243025787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940125
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/86222\">https://github.com/rust-lang/rust/pull/86222</a> was merged into 1.53 (to be stable today)</p>",
        "id": 243025877,
        "sender_full_name": "simulacrum",
        "timestamp": 1623940165
    },
    {
        "content": "<p>but okay, <a href=\"https://github.com/rust-lang/rust/issues/86222\">#86222</a> was reflected into PR <a href=\"https://github.com/rust-lang/rust/issues/86225\">#86225</a> ? Is that right, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ?</p>",
        "id": 243025881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940169
    },
    {
        "content": "<p>okay that's a yes</p>",
        "id": 243025914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940183
    },
    {
        "content": "<p>So I'll admit I'm having a lot of trouble following the status of this issue (and the Zip one that follows)</p>",
        "id": 243025995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940205
    },
    {
        "content": "<p>we should not spend the synchronous meeting time untangling it</p>",
        "id": 243026018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940216
    },
    {
        "content": "<p>I'll make an action item for myself to try to put some summary status lines into the descriptions for each</p>",
        "id": 243026096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940249
    },
    {
        "content": "<p>(the zip one that follows is ...)</p>",
        "id": 243026158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940277
    },
    {
        "content": "<ul>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>issue will be discussed <a href=\"https://github.com/rust-lang/rust/issues/85863#issuecomment-856958496\">in a follow-up T-lang meeting</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243026161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940278
    },
    {
        "content": "<p>( ... ^ that ^ )</p>",
        "id": 243026177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940284
    },
    {
        "content": "<p>so we can move along, I think. The matter is addressed for 1.53, but there's at least some cleanup to do to understand the state of things on each of the release channels</p>",
        "id": 243026298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940324
    },
    {
        "content": "<ul>\n<li>\"For 1.53, must fwd-port RUSTC_FORCE_INCREMENTAL from 1.52.1\" <a href=\"https://github.com/rust-lang/rust/issues/86004\">rust#86004</a><ul>\n<li>Part of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> (Unstable fingerprints)</li>\n<li>Tracking issue for the forward-port to 1.53</li>\n</ul>\n</li>\n</ul>",
        "id": 243026317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940334
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> just said they closed this just now. :)</p>",
        "id": 243026340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940343
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 243026364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940351
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 243026390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940362
    },
    {
        "content": "<ul>\n<li>\"rustdoc: Regression in display of <code>macro_rules!</code> matchers\" <a href=\"https://github.com/rust-lang/rust/issues/86208\">rust#86208</a><ul>\n<li>looks under control from T-rustdoc (cc: <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> )</li>\n</ul>\n</li>\n</ul>",
        "id": 243026405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940366
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 243026420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940373
    },
    {
        "content": "<ul>\n<li>\"Apple platforms: Disabled frame pointer elimination causes perf issues and is not in line with what clang does\" <a href=\"https://github.com/rust-lang/rust/issues/86196\">rust#86196</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"407656\">@Hans Kratz</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86196#issuecomment-860443448\">mild perf regression</a> on target Apple with disabled frame pointer elimination (clang default on macOS: <code>frame-pointer=\"no-leaf\"\"</code>, in Rust nightly became <code>frame-pointer=\"all\"</code>) along with an increase in binary size</li>\n<li>(assigned <code>P-high</code> but - if appropriate for a Tier 1 platform - maybe reprio to <code>P-critical</code></li>\n</ul>\n</li>\n</ul>",
        "id": 243026442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940383
    },
    {
        "content": "<p>that's interesting; I was just talking with someone recently about whether  frame-pointer elimination is currently paying for itself</p>",
        "id": 243026558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940428
    },
    {
        "content": "<p>it certainly makes profiling harder</p>",
        "id": 243026674,
        "sender_full_name": "mw",
        "timestamp": 1623940461
    },
    {
        "content": "<p>unfortunately I doubt I have time to investigate in depth in the short term</p>",
        "id": 243026678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940463
    },
    {
        "content": "<p>Did we perhaps misunderstand what clang is doing for apple and overgeneralize to removing all frame-pointer elimination?</p>",
        "id": 243026830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940525
    },
    {
        "content": "<p>It seems that clang does some frame pointer elimination, yes</p>",
        "id": 243026955,
        "sender_full_name": "mw",
        "timestamp": 1623940565
    },
    {
        "content": "<p>The issue author wrote <a href=\"https://github.com/rust-lang/rust/issues/86196#issuecomment-860443448\">3 days ago</a>: </p>\n<blockquote>\n<p>So all in all while I still think that using \"frame-pointer\"=\"non-leaf\" on Macos is generally a good idea since it has the potential to affect performance in rare cases it is not as urgent as I thought. Mea culpa.</p>\n</blockquote>",
        "id": 243026965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940570
    },
    {
        "content": "<p>I think that implies we can leave this at P-high</p>",
        "id": 243027003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940587
    },
    {
        "content": "<h3>P-high stable regression (which we don't usually discuss)</h3>",
        "id": 243027044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940605
    },
    {
        "content": "<ul>\n<li>Compile error: static lifetime not satisfied but it is <a href=\"https://github.com/rust-lang/rust/issues/86172\">#86172</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"249002\">@Jack Rickard</span> </li>\n<li>compact <a href=\"https://github.com/rust-lang/rust/issues/86172#issuecomment-860236692\">mcve</a></li>\n<li>looks like fallout from an old merge <a href=\"https://github.com/rust-lang/rust/pull/73905\">#73905</a></li>\n<li>assigned <code>P-high</code> to get visibility, does <code>P-medium</code> is a better fit (or maybe nominate?)</li>\n</ul>\n</li>\n</ul>",
        "id": 243027068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940613
    },
    {
        "content": "<p>hmm has <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> been generally in charge of follow-up to PR <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a> ?</p>",
        "id": 243027210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^ ?</p>",
        "id": 243027296,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940691
    },
    {
        "content": "<p>well we shouldn't spend too much time on this here</p>",
        "id": 243027425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940751
    },
    {
        "content": "<p>its good to give it visibility</p>",
        "id": 243027441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940756
    },
    {
        "content": "<p>but I dont think we can do much more than that</p>",
        "id": 243027460,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940764
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-06-16.md\">triage logs for 2021-06-16</a></p>\n<p>The highlight of this week was a huge performance gains in some async focused benchmarks from only pretty-printing generator witness in verbose mode. This improved async heavy benchmarks by as much as 75%.</p>\n<p>Triage done by <strong>@rylev</strong>.</p>\n<p>1 Regressions, 2 Improvements, 0 Mixed<br>\n0 of them in rollups</p>",
        "id": 243027538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243027296\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> ^ ?</p>\n</blockquote>\n<p>sorry, just saw that</p>",
        "id": 243027565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623940795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> its okay, its probably best to follow-up async</p>",
        "id": 243027630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940809
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Make copy/copy_nonoverlapping fn's again <a href=\"https://github.com/rust-lang/rust/issues/86003\">#86003</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=47d38752c65359e1f4558d7a06935982fb8b486f&amp;end=eab201df7028ebb6812c0b1a01702ac6ecfcceed&amp;stat=instructions:u\">instruction counts</a> (up to 2.3% on <code>incr-patched: u8 3072</code> builds of <code>issue-46449-debug</code>)</li>\n<li>Regressions happening mostly in LLVM codegen which makes sense given that this moves from intrinsics to function calls which should produce more LLVM IR. </li>\n<li>Follow up conversation starts <a href=\"https://github.com/rust-lang/rust/pull/86003#issuecomment-862210554\">here</a>.</li>\n</ul>",
        "id": 243027644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940815
    },
    {
        "content": "<p>yes, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has been doing most follow-up, but if they can't...</p>",
        "id": 243027654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623940819
    },
    {
        "content": "<p>re <a href=\"https://github.com/rust-lang/rust/issues/86003\">#86003</a>: The plan <em>is</em>, if I remember correctly, to make copy/copy_nonoverlapping instrinstics again in the future</p>",
        "id": 243027813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940866
    },
    {
        "content": "<p>once we resolve how to handle reification</p>",
        "id": 243027830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940875
    },
    {
        "content": "<p>so I'm not worried about the regression introduced by <a href=\"https://github.com/rust-lang/rust/issues/86003\">#86003</a>. It will be dealt with eventually</p>",
        "id": 243027892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940899
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Update cargo <a href=\"https://github.com/rust-lang/rust/issues/86207\">#86207</a></li>\n<li>Pretty print generator witness only in <code>-Zverbose</code> mode <a href=\"https://github.com/rust-lang/rust/issues/86240\">#86240</a></li>\n</ul>",
        "id": 243027921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940912
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>Follow up from last week on regression in <a href=\"https://github.com/rust-lang/rust/pull/85343#issuecomment-856819536\">#85343</a></li>\n<li>Follow up to regression in <a href=\"https://github.com/rust-lang/rust/pull/86003#issuecomment-862210554\">#86003</a>.</li>\n</ul>",
        "id": 243027942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940918
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 243028005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940931
    },
    {
        "content": "<ul>\n<li>\"Generate links to definition in rustdoc source code pages\" <a href=\"https://github.com/rust-lang/rust/pull/84176\">rust#84176</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span>, adds hyperlinks to navigate code in rustdoc</li>\n<li>feature is <a href=\"https://github.com/rust-lang/rust/pull/84176#issuecomment-821026882\">nightly-only and disabled by default</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243028017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940940
    },
    {
        "content": "<p>I chatted with Guillaume a bit about this last week</p>",
        "id": 243028059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940962
    },
    {
        "content": "<p>it sounds like the biggest issue is a lack of review capacity on the rustdoc team</p>",
        "id": 243028106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623940989
    },
    {
        "content": "<p>(adding the third bullet point)</p>\n<ul>\n<li>Last T-compiler discussion was oriented to OK’ing the merge after the 1.53 release so we have more time to test/revert/etc.</li>\n</ul>",
        "id": 243028181,
        "sender_full_name": "apiraino",
        "timestamp": 1623941021
    },
    {
        "content": "<p>yes, maximizing bake time is good</p>",
        "id": 243028297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941061
    },
    {
        "content": "<p>I'm available if you have extra questions</p>",
        "id": 243028300,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941064
    },
    {
        "content": "<p>four bullet point: waiting after the next release to merge it</p>",
        "id": 243028333,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941079
    },
    {
        "content": "<p>the only other question is whether we <em>need</em> buy-in from other members of T-rustdoc</p>",
        "id": 243028346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941084
    },
    {
        "content": "<p>or if a cursory review (e.g. to confirm everything is disabled by default) would suffice for experimental stuff like this</p>",
        "id": 243028402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941111
    },
    {
        "content": "<p>The tests confirm that it's disabled by default</p>",
        "id": 243028482,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941154
    },
    {
        "content": "<p>I'm now rethinking the words \"disabled by default\"</p>",
        "id": 243028547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941166
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> how does the user opt-into making this change take effect? Is it a command-line switch to <code>rustdoc</code> ?</p>",
        "id": 243028686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941218
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/84176/files#diff-7c2e0d8b21c4344b9ac5725e439e6d87c8d2cd201165ab972dca52fc840f2049R1\">https://github.com/rust-lang/rust/pull/84176/files#diff-7c2e0d8b21c4344b9ac5725e439e6d87c8d2cd201165ab972dca52fc840f2049R1</a></p>",
        "id": 243028717,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941233
    },
    {
        "content": "<p>thanks</p>",
        "id": 243028744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941245
    },
    {
        "content": "<p>you need <code>-Zunstable-options --generate-link-to-definition</code></p>",
        "id": 243028761,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941251
    },
    {
        "content": "<p>so its guarded by <code>-Zunstable-options</code> too, thats good</p>",
        "id": 243028769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941257
    },
    {
        "content": "<p>yes, nightly only</p>",
        "id": 243028788,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941265
    },
    {
        "content": "<p>for the stabilization, we want to go through RFC or something along the line</p>",
        "id": 243028823,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941278
    },
    {
        "content": "<p>okay</p>",
        "id": 243028836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941282
    },
    {
        "content": "<p>the goal here is to get feedback from user</p>",
        "id": 243028977,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941314
    },
    {
        "content": "<p>I think our problem remains a lack of review capacity</p>",
        "id": 243029014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> if it doesn't get r+'ed by next week, ping me and maybe I'll take it on personally at that point</p>",
        "id": 243029071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941356
    },
    {
        "content": "<p>I just cannot commit to taking it on this week</p>",
        "id": 243029082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941362
    },
    {
        "content": "<p>okay?</p>",
        "id": 243029090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941365
    },
    {
        "content": "<ul>\n<li>\"Re-add support for parsing (and pretty-printing) inner-attributes in match body\" <a href=\"https://github.com/rust-lang/rust/pull/85193\">rust#85193</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85193#issuecomment-852333730\">discussed by T-lang</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> re-added <a href=\"https://github.com/rust-lang/rust/pull/85193#issuecomment-858457241\">nomination for T-compiler</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243029198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941402
    },
    {
        "content": "<p>Sounds good to me!</p>",
        "id": 243029205,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623941403
    },
    {
        "content": "<p>We already discussed <a href=\"https://github.com/rust-lang/rust/issues/85193\">#85193</a>, so no need to discuss again I think</p>",
        "id": 243029227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941413
    },
    {
        "content": "<p>(the T-compiler nomination, to be clear, was from when I was trying to get it landed in time for it to be part of the 1.54-beta cut)</p>",
        "id": 243029303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941447
    },
    {
        "content": "<p>which obviously did not happen, and that was for the best</p>",
        "id": 243029367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941476
    },
    {
        "content": "<ul>\n<li>\"Emscripten wasm32 compilation broken\" <a href=\"https://github.com/rust-lang/rust/issues/85821\">rust#85821</a><ul>\n<li>Compiling an Hello world with the new emscripten SDK version 2.0.10 trips into a removed stubbed function (<code>__gxx_personality_v0</code>) and dies.</li>\n<li>With emscripten SDK version 2.0.9 still works because the stub is there</li>\n<li>Nominated to find an owner: who has recently their hands in the wasm target (@__<strong>Alex Crichton</strong> ? maybe a WG?)</li>\n</ul>\n</li>\n</ul>",
        "id": 243029394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941488
    },
    {
        "content": "<p>there's an O-wasm label; is there a WASM notification group?</p>",
        "id": 243029684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941586
    },
    {
        "content": "<p>There's a label, yes</p>",
        "id": 243029761,
        "sender_full_name": "mw",
        "timestamp": 1623941621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> Oh, does the existence of a label imply a notification group?</p>",
        "id": 243029833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941642
    },
    {
        "content": "<p>that cannot be, there are far too many O-labels</p>",
        "id": 243029927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941667
    },
    {
        "content": "<p>yeah</p>",
        "id": 243029951,
        "sender_full_name": "mw",
        "timestamp": 1623941674
    },
    {
        "content": "<p>also, is there some WASM work here on Zulip? So I could ping the right ppl</p>",
        "id": 243029966,
        "sender_full_name": "apiraino",
        "timestamp": 1623941678
    },
    {
        "content": "<p>no wasm stream on zulip to my knowledge</p>",
        "id": 243030035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941701
    },
    {
        "content": "<p>There's a WASM wg in the teams repo but it seems like the most active users have already been pinged.</p>",
        "id": 243030038,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1623941702
    },
    {
        "content": "<p>we should find out where the wasm kids are playing</p>",
        "id": 243030084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941719
    },
    {
        "content": "<p>Just to clarify my undersanding of <a href=\"https://github.com/rust-lang/rust/issues/85821\">#85821</a>, the regression here is injected ... by the upgrade to the newer emscripten SDK (2.0.10), but <em>not</em> by a change to rust, right?</p>",
        "id": 243030152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941752
    },
    {
        "content": "<p>Yes, it sounds like the SDK made a breaking change</p>",
        "id": 243030266,
        "sender_full_name": "mw",
        "timestamp": 1623941778
    },
    {
        "content": "<p>right. So this isn't a regression, per se</p>",
        "id": 243030293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941791
    },
    {
        "content": "<p>I'm trying to figure out if it should be P-critical or not</p>",
        "id": 243030317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941800
    },
    {
        "content": "<p>I dont think we can block a release on it</p>",
        "id": 243030360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941825
    },
    {
        "content": "<p>so P-high sounds right</p>",
        "id": 243030371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941829
    },
    {
        "content": "<p>anyway it needs an owner</p>",
        "id": 243030418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941845
    },
    {
        "content": "<p>but, as <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> said, all the right people have already been pinged</p>",
        "id": 243030472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941864
    },
    {
        "content": "<p>last nominated issue</p>",
        "id": 243030514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941881
    },
    {
        "content": "<ul>\n<li>\"SPARC - passing argument from C++ to Rust issue\" <a href=\"https://github.com/rust-lang/rust/issues/86163\">rust#86163</a><ul>\n<li>opened by @psumbera</li>\n<li>unsoundness on Tier 2 target <code>sparcv9-sun-solaris</code></li>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> comments this seems to be a <a href=\"https://github.com/rust-lang/rust/issues/86163#issuecomment-857584194\">SPARCv9 64-bit ABI definition issue</a></li>\n<li>We have <a href=\"https://github.com/rust-lang/rust/issues/86163#issuecomment-859089923\">an MCVE</a></li>\n<li>Should we prioritize this as a <code>P-high</code> (or higher?) and try to follow-up accordingly? Who can own this?</li>\n</ul>\n</li>\n</ul>",
        "id": 243030519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941882
    },
    {
        "content": "<p>sort of similar thing: Who can own this</p>",
        "id": 243030575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941895
    },
    {
        "content": "<p>It does seem like there's useful dialogue in the issue</p>",
        "id": 243030725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623941954
    },
    {
        "content": "<p>well that's all the meeting time</p>",
        "id": 243030930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623942016
    },
    {
        "content": "<p>I'm inclined to leave the last two issues as nominated</p>",
        "id": 243030945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623942023
    },
    {
        "content": "<p>we'll circle back to them next week</p>",
        "id": 243030959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623942030
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! And, as a reminder: The Friday meeting tomorrow is cancelled; it is rescheduled to <time datetime=\"2021-06-25T14:00:00Z\">2021-06-25T10:00:00-04:00</time></p>",
        "id": 243031067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623942069
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/vQr9mk6zSdib5vg9OlHuOQ?view\">https://hackmd.io/vQr9mk6zSdib5vg9OlHuOQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@<em>WG-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>   by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n</ul>",
        "id": 243032381,
        "sender_full_name": "apiraino",
        "timestamp": 1623942525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243030575\">said</a>:</p>\n<blockquote>\n<p>sort of similar thing: Who can own this</p>\n</blockquote>\n<p>The sparc target maintainer would be ideal – to bad sparc targets predate the target RFC.</p>",
        "id": 243044840,
        "sender_full_name": "nagisa",
        "timestamp": 1623947234
    },
    {
        "content": "<p>I may hack on this if I have time, but I imagine it'd land quite low prio on my todo list.</p>",
        "id": 243044904,
        "sender_full_name": "nagisa",
        "timestamp": 1623947267
    },
    {
        "content": "<p>It's great that you <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> can help, thanks for your efforts. We are in zone Tier 2 so I think it's fine, users know what to expect</p>",
        "id": 243050541,
        "sender_full_name": "apiraino",
        "timestamp": 1623949462
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243028402\">said</a>:</p>\n<blockquote>\n<p>or if a cursory review (e.g. to confirm everything is disabled by default) would suffice for experimental stuff like this</p>\n</blockquote>\n<p>I don't think that is accurate, no. <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> and I are both worried that this is a major expansion of scope and will be a burden to maintain; doubly so given that I have less time to review lately. There's some discussion in <a href=\"https://github.com/rust-lang/rust/pull/84176#issuecomment-831422873\">https://github.com/rust-lang/rust/pull/84176#issuecomment-831422873</a>.</p>",
        "id": 243093117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623968725
    },
    {
        "content": "<p>in particular <a href=\"https://github.com/rust-lang/rust/pull/84176#issuecomment-831446224\">this comment</a>:</p>\n<blockquote>\n<p>My concern is entirely unrelated to the difficulty of the initial review. That's a one time cost that I would gladly pay. My concern is the difficulty of working with this code for future changes to rustdoc -- this is something people need to understand and care about when writing code and when reviewing code, and that can be a problem if it's hard.</p>\n</blockquote>",
        "id": 243093258,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623968804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I would be significantly more comfortable merging this if <a href=\"https://github.com/rust-lang/rust/issues/83761\">https://github.com/rust-lang/rust/issues/83761</a> were fixed. Right now rustdoc is in a situation where bugs sometimes <em>cannot</em> be fixed even when we know the proper fix because it causes an ICE in the resolver; that's what led to the giant mess in <a href=\"https://github.com/rust-lang/rust/pull/84867\">https://github.com/rust-lang/rust/pull/84867</a>.</p>",
        "id": 243093741,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623969090
    },
    {
        "content": "<p>I also have qualms about how this interacts with the other hacks to make <a href=\"https://doc.rust-lang.org/nightly/rustdoc/advanced-features.html#interactions-between-platform-specific-docs\"><code>cfg(doc)</code></a> work that I don't think have been addressed, although maybe I lost it in the discussion somewhere - did you ever find a fix for this bit?</p>\n<blockquote>\n<p>There is just one FIXME to be fixed in here before even thinking about merging this PR: when using typeck_body, it displays errors (which don't stop rustdoc but that's still an issue!). Mostly on items that are behind cfg because we try to get the link to the method definition.</p>\n</blockquote>",
        "id": 243094031,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623969244
    },
    {
        "content": "<p>In general I feel like rustdoc tends to have more and more features piled on top; I know this feature is uncharacteristically popular and I _do_ want to make it work, but like I said in <a href=\"https://github.com/rust-lang/rust/pull/84176#issuecomment-831435598\">https://github.com/rust-lang/rust/pull/84176#issuecomment-831435598</a> I am just not comfortable reviewing rustdoc PRs because of the complexity and I feel like adding more features makes it worse.</p>",
        "id": 243094250,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623969414
    },
    {
        "content": "<p>If we were talking about something not disabled by default and/or about to be stabilized, I would agree with you, but here it's not the case at all. You're also mentionning the burden of maintenance but I still don't understand why though. I've been active on rustdoc for years and will very likely be for years. I can take the burden of maintenance/fix if that's why you're worried about.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243094031\">said</a>:</p>\n<blockquote>\n<p>I also have qualms about how this interacts with the other hacks to make <a href=\"https://doc.rust-lang.org/nightly/rustdoc/advanced-features.html#interactions-between-platform-specific-docs\"><code>cfg(doc)</code></a> work that I don't think have been addressed, although maybe I lost it in the discussion somewhere - did you ever find a fix for this bit?</p>\n</blockquote>\n<p>I have few in mind, the simplest one being to simply not run on code which is opted-out by the <code>cfg</code>. Another one is to add a parameter to ask the <code>typeck_body</code> to not display error messages.</p>\n<p>The first one isn't ideal because most code can actually be still generated. The second one doesn't make sense without this PR merged.</p>",
        "id": 243129571,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1624004443
    },
    {
        "content": "<p>Most of the changes were made in the highlighter to allow to generate links. There is the add of the span_map generation through the visitor (here: <a href=\"https://github.com/rust-lang/rust/pull/84176/files#diff-00b3b34ce2eb95c63cc6b1a4648ab3939af4b083e2fb0e8d199535fe239b576f\">https://github.com/rust-lang/rust/pull/84176/files#diff-00b3b34ce2eb95c63cc6b1a4648ab3939af4b083e2fb0e8d199535fe239b576f</a>, most of it is documentation) which isn't big and there are the tests.</p>",
        "id": 243133874,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1624006780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243093117\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243028402\">said</a>:</p>\n<blockquote>\n<p>or if a cursory review (e.g. to confirm everything is disabled by default) would suffice for experimental stuff like this</p>\n</blockquote>\n<p>I don't think that is accurate, no. <span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> and I are both worried that this is a major expansion of scope and will be a burden to maintain; doubly so given that I have less time to review lately. There's some discussion in <a href=\"https://github.com/rust-lang/rust/pull/84176#issuecomment-831422873\">https://github.com/rust-lang/rust/pull/84176#issuecomment-831422873</a>.</p>\n</blockquote>\n<p>Okay. Obviously the rustdoc team owns the scope of the tool, so thank you for clarifying this.</p>",
        "id": 243393280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624286841
    }
]