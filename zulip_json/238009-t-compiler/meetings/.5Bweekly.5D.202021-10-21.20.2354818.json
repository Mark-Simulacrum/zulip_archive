[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/t04YVEwTRJWwTej-kLvDsw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_wg-incr-comp_ by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li>@_WG-llvm_ by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>",
        "id": 258532665,
        "sender_full_name": "apiraino",
        "timestamp": 1634818005
    },
    {
        "content": "<p>I don't have much time to write up an update, but two short points: there's a PR that's about to land (if it hasn't yet) to drop LLVM 10 support (last time I wrote an update we only \"considered\" it^^) and NewPM did land. NewPM has led to some problems with build times and memory use due to different (and worse?) inlining and unrolling heuristics in some samples of code, but on average the build times did decrease significantly.</p>",
        "id": 258536244,
        "sender_full_name": "nagisa",
        "timestamp": 1634819533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> , wait did I read that last sentence right? It flows like “Things are bad, but on average, things are very bad”, which does not match how I would usually use “but” in a sentence</p>",
        "id": 258550352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634824908
    },
    {
        "content": "<p>Oh, and on that note: Hi to <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Triage meeting starting now! Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 258550456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634824936
    },
    {
        "content": "<p>build times did <em>decrease</em> significantly sounds 'good' to me :)</p>",
        "id": 258550555,
        "sender_full_name": "simulacrum",
        "timestamp": 1634824969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258550352\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> , wait did I read that last sentence right? It flows like “Things are bad, but on average, things are very bad”, which does not match how I would usually use “but” in a sentence</p>\n</blockquote>\n<p>didn't they say \"but did decrease\"?</p>",
        "id": 258550558,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1634824970
    },
    {
        "content": "<p>(was that fixed by edit :P?)</p>",
        "id": 258550603,
        "sender_full_name": "eddyb",
        "timestamp": 1634824989
    },
    {
        "content": "<p>Oh, oh, yes, <em>build time</em> decreased, i.e. improved</p>",
        "id": 258550633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634824999
    },
    {
        "content": "<p>sorry, I fell into the “your test results came back negative” trap.</p>",
        "id": 258550714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825031
    },
    {
        "content": "<p>need more sleep</p>",
        "id": 258550815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825057
    },
    {
        "content": "<p>Okay, well, lets start off with ~6 minutes or less for </p>\n<h2>Announcements</h2>",
        "id": 258550848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825069
    },
    {
        "content": "<ul>\n<li><span aria-label=\"confetti\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"confetti\">:confetti:</span> Today Thursday Oct, 21st release Rust stable 1.56 <span aria-label=\"confetti\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"confetti\">:confetti:</span></li>\n</ul>",
        "id": 258550890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825085
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2021-10-15T14:00:00Z\">2021-10-15T10:00:00-04:00</time> monthly <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Compiler team meeting</a> for planning the coming cycle. (And, given how recent planning meetings have gone, possibly also to churn through MCP list)</li>\n</ul>",
        "id": 258550908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825091
    },
    {
        "content": "<ul>\n<li>Any legal questions about compiler copyright support? If so, reach out to <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> (at least for now; maybe they have an email or other channel that such queries will switch to)</li>\n</ul>",
        "id": 258551021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825124
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 258551250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825193
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 258551257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825198
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip +3 months ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip about 1 week ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 3 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: GH none, Zulip about 1 month ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 258551280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825209
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n<li>\"Tracking issue for <code>#![feature(const_precise_live_drops)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/73255\">rust#73255</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258551305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825220
    },
    {
        "content": "<p>(I’d like to just quickly note that lang team has posted a concern re docs, or lack thereof, for <a href=\"https://github.com/rust-lang/rust/issues/73255\">rust#73255</a>)</p>",
        "id": 258551468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825271
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258551534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825284
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"lint internal hashmap iteration\" <a href=\"https://github.com/rust-lang/compiler-team/issues/465\">compiler-team#465</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258551555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825293
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Make all proc-macro back-compat lints deny-by-default\" <a href=\"https://github.com/rust-lang/rust/pull/88041\">rust#88041</a></li>\n<li>\"Stabilize <code>unreachable_unchecked</code> as <code>const fn</code>\" <a href=\"https://github.com/rust-lang/rust/pull/89509\">rust#89509</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258551570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825298
    },
    {
        "content": "<h3>WG checkins</h3>\n<p>@_wg-incr-comp_ by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> (<a href=\"https://hackmd.io/c-I7gxx4SK2eudQgwruuJw#WG-checkins\">previous checkin</a>):</p>\n<blockquote>\n<p>pnkfelix thinks there is nothing to report since the last checkin</p>\n</blockquote>\n<p>@_WG-llvm_ by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> (<a href=\"https://hackmd.io/c-I7gxx4SK2eudQgwruuJw#WG-checkins\">previous checkin</a>):</p>\n<blockquote>\n<p>A PR that's about to land (if it hasn't yet) to drop LLVM 10 support (last time I wrote an update we only \"considered\" it^^)<br>\nNewPM did land. NewPM has led to some problems with build times and memory use due to different (and worse?) inlining and unrolling heuristics in some samples of code, but on average the build times did decrease significantly.</p>\n</blockquote>",
        "id": 258551619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258550352\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> , wait did I read that last sentence right? It flows like “Things are bad, but on average, things are very bad”, which does not match how I would usually use “but” in a sentence (except in a comedic stand-up routine)</p>\n</blockquote>\n<p>Things are bad sometimes, but on average good.</p>",
        "id": 258551656,
        "sender_full_name": "nagisa",
        "timestamp": 1634825342
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258551021\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Any legal questions about compiler copyright support? If so, reach out to <span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> (at least for now; maybe they have an email or other channel that such queries will switch to)</li>\n</ul>\n</blockquote>\n<p>Just wanted to point out the more general message here is that if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message Felix or myself so we can pass it along). \"If you see something, say something\" and all that.</p>",
        "id": 258551693,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634825357
    },
    {
        "content": "<p>okay. If anyone has other things to announce, privmsg me and I’ll allocate time at end of mtg for it</p>",
        "id": 258551878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825421
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 258551894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825428
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Revert <a href=\"https://github.com/rust-lang/rust/issues/86011\">#86011</a> to fix an incorrect bound check\" <a href=\"https://github.com/rust-lang/rust/pull/90025\">rust#90025</a><ul>\n<li>fixes stable-to-nightly P-critical <a href=\"https://github.com/rust-lang/rust/issues/89935\">rust#89935</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258551912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825435
    },
    {
        "content": "<p>we really do need to get version numbers into these nomination labels</p>",
        "id": 258552011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825472
    },
    {
        "content": "<p>(or something)</p>",
        "id": 258552032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825479
    },
    {
        "content": "<p>It's worrying to me that that PR was able to cause breakage</p>",
        "id": 258552109,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1634825507
    },
    {
        "content": "<p>Has there been an investigation into why the predicate order matters?</p>",
        "id": 258552191,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1634825527
    },
    {
        "content": "<p>I don’t know. I think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> is unavailable to answer Q’s to day</p>",
        "id": 258552322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825585
    },
    {
        "content": "<p>anyway I say beta approved</p>",
        "id": 258552365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825604
    },
    {
        "content": "<p>with follow-up item to investigate what <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> said</p>",
        "id": 258552402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825620
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Erase late-bound regions before computing vtable debuginfo name.\" <a href=\"https://github.com/rust-lang/rust/pull/90050\">rust#90050</a><ul>\n<li>fixes stable-to-beta P-critical <a href=\"https://github.com/rust-lang/rust/issues/90019\">rust#90019</a></li>\n<li>nominated by @mw as it fixes a stable-to-beta regression</li>\n</ul>\n</li>\n</ul>",
        "id": 258552421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825630
    },
    {
        "content": "<p>should I be concerned that this wasn’t caught by our CI test suite?</p>",
        "id": 258552700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825732
    },
    {
        "content": "<p>(backport approved, in any case.)</p>",
        "id": 258552721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825741
    },
    {
        "content": "<p>Our debuginfo test suite could certainly use some more work <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 258552767,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634825759
    },
    {
        "content": "<p>this isn’t even a test of the debuginfo itself</p>",
        "id": 258552872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825786
    },
    {
        "content": "<p>right? Its an ICE that occurs when you just try to generate debuginfo?</p>",
        "id": 258552903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825796
    },
    {
        "content": "<p>yeah, in this case it was just an ICE while generating debuginfo</p>",
        "id": 258552939,
        "sender_full_name": "mw",
        "timestamp": 1634825813
    },
    {
        "content": "<p>Correct</p>",
        "id": 258552953,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634825816
    },
    {
        "content": "<p>I mean, I understand we cannot run our current test suite with all combinations of flags</p>",
        "id": 258553003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825832
    },
    {
        "content": "<p>It also wasn't caught during bors because we don't build dist artifacts with debug symbols.</p>",
        "id": 258553056,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634825851
    },
    {
        "content": "<p>I started writing some debuginfo tests as codegen tests, where applicable</p>",
        "id": 258553070,
        "sender_full_name": "mw",
        "timestamp": 1634825857
    },
    {
        "content": "<p>I’m mostly wondering if we should be just trying the full suite with/without <code>-g</code> , with/without <code>-O</code>. I don’t want to explore the combinatorial space, but the individual flags, would <em>that</em> be reasonable? Or is even that too much overhead? (Especially since this bug may have been windows specific, so just doing that on one Linux builder would not suffice to catch this…)</p>",
        "id": 258553317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634825938
    },
    {
        "content": "<p>anyway we can keep going. I just am sitting here seeing these bugs and saying “should we be catching this sooner” ? Or maybe this is fine, maybe 15 days after landing is soon enough...</p>",
        "id": 258553532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826004
    },
    {
        "content": "<p>Some tests require a specific setting for -O and -g</p>",
        "id": 258553537,
        "sender_full_name": "mw",
        "timestamp": 1634826005
    },
    {
        "content": "<p>Seems like an infra question to me but I agree, running with/without debuginfo and with/without optimizations <em>in some way</em> during bors would be very helpful.</p>",
        "id": 258553560,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634826015
    },
    {
        "content": "<p>that would have to be handled somehow</p>",
        "id": 258553572,
        "sender_full_name": "mw",
        "timestamp": 1634826019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258553537\">said</a>:</p>\n<blockquote>\n<p>Some tests require a specific setting for -O and -g</p>\n</blockquote>\n<p>right, we’d have to do the right thing for those.</p>",
        "id": 258553583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826025
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258553070\">said</a>:</p>\n<blockquote>\n<p>I started writing some debuginfo tests as codegen tests, where applicable</p>\n</blockquote>\n<p>IME this works for simple things, but things like variable / type metadata are really hard to express in those tests, fwiw</p>",
        "id": 258553654,
        "sender_full_name": "tmandry",
        "timestamp": 1634826055
    },
    {
        "content": "<p>it doesn’t even have to be on every bors build. just testing each nightly, once a day, seems like a reasonable middle ground.</p>",
        "id": 258553656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> agreed</p>",
        "id": 258553684,
        "sender_full_name": "mw",
        "timestamp": 1634826068
    },
    {
        "content": "<p>anyway lets keep moving. backport approved.</p>",
        "id": 258553718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826080
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Don't emit a warning for empty rmeta files.\" <a href=\"https://github.com/rust-lang/rust/pull/90072\">rust#90072</a><ul>\n<li>closes <a href=\"https://github.com/rust-lang/rust/issues/89795\">rust#89795</a></li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <a href=\"https://github.com/rust-lang/rust/pull/90072#issuecomment-947195572\">to remove this warning when running x.py</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258553765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826098
    },
    {
        "content": "<p>Does this just affect x.py?</p>",
        "id": 258553991,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1634826166
    },
    {
        "content": "<p>I think it's likely more widespread, but I don't actually know. Even x.py is \"bad enough\" for compiler devs :)</p>",
        "id": 258554041,
        "sender_full_name": "simulacrum",
        "timestamp": 1634826190
    },
    {
        "content": "<p>heh, that warning (\"WARN rustc_metadata::locator no metadata found: failed to mmap rmeta metadata: ‘&lt;path&gt;’”) is a lot scarier than it probably needs to be for this case</p>",
        "id": 258554055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826195
    },
    {
        "content": "<p>I think I agree that the <code>x.py</code> hit is bad enough to justify a backport here.</p>",
        "id": 258554122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826215
    },
    {
        "content": "<p>heh maybe <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <a href=\"https://github.com/rust-lang/rust/issues/89795#issuecomment-940798190\">agrees</a> with my earlier note about scariness?</p>",
        "id": 258554274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826257
    },
    {
        "content": "<p>backport approved</p>",
        "id": 258554400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826295
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 258554463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826312
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 258554484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826317
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 258554494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826323
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 258554523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826329
    },
    {
        "content": "<ul>\n<li>\"Direct users towards using Rust feature names in CLI\" <a href=\"https://github.com/rust-lang/rust/pull/87402\">rust#87402</a> (last review activity: 23 days ago)</li>\n</ul>",
        "id": 258554538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826335
    },
    {
        "content": "<p>ROFL \"Very large regression in instruction counts (up to 4651.6% on incr-unchanged builds of webrender)\"</p>",
        "id": 258554749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826390
    },
    {
        "content": "<p>(that’s been fixed, IIUC)</p>",
        "id": 258554808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826410
    },
    {
        "content": "<p>So I think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> has approved this (twice now)?</p>",
        "id": 258554890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826441
    },
    {
        "content": "<p>the tag needs to be changed to waiting on author</p>",
        "id": 258554952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826461
    },
    {
        "content": "<p>I need to rebase this, yeah. That said I said a couple times throughout the PR that I want to make some followup changes as well, but I don't know how soon those followups will materialize given that I'm gonna be changing employers next month.</p>",
        "id": 258555111,
        "sender_full_name": "nagisa",
        "timestamp": 1634826506
    },
    {
        "content": "<p>next</p>",
        "id": 258555116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I assume it can land without the followups though?</p>",
        "id": 258555221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826537
    },
    {
        "content": "<ul>\n<li>\"Fix ICE with inferred type in const or static item\" <a href=\"https://github.com/rust-lang/rust/pull/89161\">rust#89161</a> (last review activity: about 2 weeks ago)</li>\n</ul>",
        "id": 258555255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826546
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258555221\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> I assume it can land without the followups though?</p>\n</blockquote>\n<p>Yeah.</p>",
        "id": 258555329,
        "sender_full_name": "nagisa",
        "timestamp": 1634826569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258555255\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Fix ICE with inferred type in const or static item\" <a href=\"https://github.com/rust-lang/rust/pull/89161\">rust#89161</a> (last review activity: about 2 weeks ago)</li>\n</ul>\n</blockquote>\n<p>looks like there’s been dialogue. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you want this reassigned?</p>",
        "id": 258555412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826589
    },
    {
        "content": "<p>next</p>",
        "id": 258555426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826593
    },
    {
        "content": "<ul>\n<li>\"Type inference for inline consts\" <a href=\"https://github.com/rust-lang/rust#/pull/89561\">rust#89561</a> (last review activity: 15 days ago)</li>\n</ul>",
        "id": 258555455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826601
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/89561\">https://github.com/rust-lang/rust/pull/89561</a></p>\n<p>(sorry wrong link pasted)</p>",
        "id": 258555590,
        "sender_full_name": "apiraino",
        "timestamp": 1634826627
    },
    {
        "content": "<p>(yeah just fixed that in hackmd)</p>",
        "id": 258555623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826636
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/89561\">#89561</a> has gotten positive vibes from <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> , and a “very cool” from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 258555732,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826675
    },
    {
        "content": "<p>I guess same thing goes here: <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , do you want this reassigned?</p>",
        "id": 258555781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826689
    },
    {
        "content": "<p>next</p>",
        "id": 258555846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826710
    },
    {
        "content": "<ul>\n<li>\"Fix suggestion of additional <code>pub</code> when using <code>pub pub fn ...</code>\" <a href=\"https://github.com/rust-lang/rust/pull/87901\">rust#87901</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 258555877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826717
    },
    {
        "content": "<p>So, there’s a merge conflict here that the author will need to address. But that need not hold up a review</p>",
        "id": 258556031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258555732\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/89561\">#89561</a> has gotten positive vibes from <span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> , and a “very cool” from <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span></p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, can take a look too</p>",
        "id": 258556059,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1634826764
    },
    {
        "content": "<p>itss assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>. I think we should reassign it</p>",
        "id": 258556060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  isn’t here to take it. I’ll take it for now.</p>",
        "id": 258556155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826795
    },
    {
        "content": "<p>Next</p>",
        "id": 258556308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826841
    },
    {
        "content": "<p>“Allow simd_bitmask to return byte arrays” <a href=\"https://github.com/rust-lang/rust/issues/88868\">rust#88868</a> (last review activity: 15 days ago)</p>",
        "id": 258556319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826842
    },
    {
        "content": "<p>So it looks like <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> was actively engaged with this up until 17 days ago</p>",
        "id": 258556478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826885
    },
    {
        "content": "<p>I’m inclined to leave this assigned to <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span></p>",
        "id": 258556606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826925
    },
    {
        "content": "<p>(let me or <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>  know if you want it reassigned)</p>",
        "id": 258556659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826945
    },
    {
        "content": "<ul>\n<li>\"Turn TrapUnreachable off by default\" <a href=\"https://github.com/rust-lang/rust/pull/88826\">rust#88826</a> (last review activity: 5 weeks ago)</li>\n</ul>",
        "id": 258556685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826954
    },
    {
        "content": "<p>oh wow</p>",
        "id": 258556771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634826975
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> had <a href=\"https://github.com/rust-lang/rust/pull/88826#issuecomment-917240648\">interesting feedback</a> with a more conservative option</p>",
        "id": 258556928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827024
    },
    {
        "content": "<blockquote>\n<p>I think a more conservative step we can take is [… NoTrapAfterNoreturn …], where it has little practical benefit.</p>\n</blockquote>",
        "id": 258557137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827088
    },
    {
        "content": "<p>Am I reading that right?</p>",
        "id": 258557160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827094
    },
    {
        "content": "<p>Or am I having a repeat occurrence of the “Your test result is negative” error from the outset of mtg?</p>",
        "id": 258557228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827116
    },
    {
        "content": "<p>I think that's right and I would also prefer that</p>",
        "id": 258557274,
        "sender_full_name": "eddyb",
        "timestamp": 1634827131
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> isn’t necessarily <em>endorsing</em> the alternative; just pointing it out?</p>",
        "id": 258557284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827133
    },
    {
        "content": "<p>I think the part you elided is the important part.</p>",
        "id": 258557314,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827141
    },
    {
        "content": "<blockquote>\n<p>which probably is the form in which the vast majority of unreachable appears in rust code (basically after every panic), and also the one where it has little practical benefit.</p>\n</blockquote>",
        "id": 258557320,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827142
    },
    {
        "content": "<p>but I’m trying to understand the note about “it has little practical benefit\"</p>",
        "id": 258557392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827166
    },
    {
        "content": "<p>IE, the vast majority of places we insert an <code>unreachable</code> has little practical benefit</p>",
        "id": 258557393,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827166
    },
    {
        "content": "<p>and enabling <code>NoTrapAfterNoreturn</code> would remove those while being a more conservative option than what's in the PR currently.</p>",
        "id": 258557487,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827196
    },
    {
        "content": "<p>Oh, i.e., the NoTrap itself has little practical benefit in those places would otherwise be injected</p>",
        "id": 258557492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827197
    },
    {
        "content": "<p>that note isn’t saying that the alternative conservative approach <em>itself</em> would have little practical benefit</p>",
        "id": 258557602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827217
    },
    {
        "content": "<p>Right</p>",
        "id": 258557615,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827223
    },
    {
        "content": "<p>okay okay</p>",
        "id": 258557637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827230
    },
    {
        "content": "<p>i.e. LLVM requires <code>unreachable</code> because <code>noreturn</code> calls/invokes are not valid block terminators, but the only risk there is that function returning, which if it's correctly decorated with <code>noreturn</code>, it cannot possibly codegen a <code>ret</code> anyway</p>",
        "id": 258557651,
        "sender_full_name": "eddyb",
        "timestamp": 1634827234
    },
    {
        "content": "<p>So that all sounds good</p>",
        "id": 258557668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827240
    },
    {
        "content": "<p>I believe it's saying the current situation has little practical benefit.</p>",
        "id": 258557673,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634827242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> what do you think, will you have time to explore that more conservative alternative? I think it will be easier for us to swallow in the near term.</p>",
        "id": 258557751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827272
    },
    {
        "content": "<p>I’m skipping the rest of the old PRs.</p>",
        "id": 258557790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827288
    },
    {
        "content": "<p>I want us to make progress through other agenda items in mtg</p>",
        "id": 258557815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827295
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">74 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">3 P-critical, 0 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 3 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 46 P-high, 85 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 258557859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827309
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 258557897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827320
    },
    {
        "content": "<ul>\n<li>\"cargo fails to build on Windows with nightly\" <a href=\"https://github.com/rust-lang/rust/issues/90019\">rust#90019</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li>fixed by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, tracking beta-backport approval of <a href=\"https://github.com/rust-lang/rust/pull/90050\">rust#90050</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258557969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827333
    },
    {
        "content": "<p>we already discussed this, seems under control, apart from the fact that we didn’t catch it ourselves sooner.</p>",
        "id": 258558038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827359
    },
    {
        "content": "<ul>\n<li>\"Miscompilation when awaiting generator containing an enum with niche at least [0, 1]\" <a href=\"https://github.com/rust-lang/rust/issues/90038\">rust#90038</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n<li>stable-to-beta P-critical regression</li>\n<li>needs beta backport of <a href=\"https://github.com/rust-lang/rust/pull/90040\">rust#90040</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258558063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827367
    },
    {
        "content": "<p>okay, we didn’t talk about this in today's meeting because <a href=\"https://github.com/rust-lang/rust/issues/90040\">rust#90040</a> is already backport approved.</p>",
        "id": 258558189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827408
    },
    {
        "content": "<p>but it also seems under control</p>",
        "id": 258558344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827447
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 258558367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827453
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 258558388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827461
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 258558408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827467
    },
    {
        "content": "<ul>\n<li>\"CI: dist-s390x-linux build went from 40min. to 160min with new LLVM pass manager\" <a href=\"https://github.com/rust-lang/rust/issues/89609\">rust#89609</a></li>\n</ul>",
        "id": 258558423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827473
    },
    {
        "content": "<p>this sounds like an instance of what <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> was speaking about above?</p>",
        "id": 258558454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827488
    },
    {
        "content": "<p>upstream bug: <a href=\"https://bugs.llvm.org/show_bug.cgi?id=52146\">https://bugs.llvm.org/show_bug.cgi?id=52146</a></p>",
        "id": 258558626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827548
    },
    {
        "content": "<p>So: What should we do in short term?</p>",
        "id": 258558705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827564
    },
    {
        "content": "<p>Some comments on issue thread suggest we <em>could</em> add a flag to disable new pass manager. But LLVM is likely going to remove support for the old pass manager in the next release or two of LLVM, IIUC.</p>",
        "id": 258558857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827615
    },
    {
        "content": "<p>maybe we can locally fast track <a href=\"https://reviews.llvm.org/D98481\">https://reviews.llvm.org/D98481</a></p>",
        "id": 258558915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827637
    },
    {
        "content": "<p>in our branch of LLVM</p>",
        "id": 258558932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827642
    },
    {
        "content": "<p>?</p>",
        "id": 258558937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827644
    },
    {
        "content": "<p>if it's platform specific we could turn the new PM off for that platform, for now</p>",
        "id": 258558946,
        "sender_full_name": "tmandry",
        "timestamp": 1634827645
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258558915\">said</a>:</p>\n<blockquote>\n<p>maybe we can locally fast track <a href=\"https://reviews.llvm.org/D98481\">https://reviews.llvm.org/D98481</a></p>\n</blockquote>\n<p>hmm, skimming review comments on that review,  I am thinking grabbing it as-is would be a mistake</p>",
        "id": 258559093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827686
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258558946\">said</a>:</p>\n<blockquote>\n<p>if it's platform specific we could turn the new PM off for that platform, for now</p>\n</blockquote>\n<p>yeah lets maybe just do this.</p>",
        "id": 258559135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827703
    },
    {
        "content": "<p>Any objections to that?</p>",
        "id": 258559151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827708
    },
    {
        "content": "<p>(And also add a Z flag to offer local control, to make it easy to test toggling it off elsewhere, or back on on S390?)</p>",
        "id": 258559255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827749
    },
    {
        "content": "<p>I’m happy with that plan. Any volunteers to do it?</p>",
        "id": 258559305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827769
    },
    {
        "content": "<p>the PR turning newpm on mentioned <code>-Z new-llvm-pass-manager=no</code> (<a href=\"https://github.com/rust-lang/rust/issues/88243\">#88243</a>)</p>",
        "id": 258559306,
        "sender_full_name": "lqd",
        "timestamp": 1634827770
    },
    {
        "content": "<p>oh okay</p>",
        "id": 258559323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827777
    },
    {
        "content": "<p>okay</p>",
        "id": 258559357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827793
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> , could you take ownership of the temporary revert to Old PM on S390 ?</p>",
        "id": 258559471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827822
    },
    {
        "content": "<p>moving on for now</p>",
        "id": 258559520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827846
    },
    {
        "content": "<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code> when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a><ul>\n<li><code>E-needs-bisection</code></li>\n<li>relevant PR <a href=\"https://github.com/rust-lang/rust/pull/90044\">https://github.com/rust-lang/rust/pull/90044</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258559549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827855
    },
    {
        "content": "<p>That's fine, I can own that</p>",
        "id": 258559603,
        "sender_full_name": "cuviper",
        "timestamp": 1634827877
    },
    {
        "content": "<p>We already did turn off newpm for s390x, but we still need to track that, as it's a short term solution</p>",
        "id": 258559854,
        "sender_full_name": "cuviper",
        "timestamp": 1634827956
    },
    {
        "content": "<p>oh okay</p>",
        "id": 258559875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258559549\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code> when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a><ul>\n<li><code>E-needs-bisection</code></li>\n<li>relevant PR <a href=\"https://github.com/rust-lang/rust/pull/90044\">https://github.com/rust-lang/rust/pull/90044</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>as for this: It seems like <a href=\"https://github.com/rust-lang/rust/issues/90044\">#90044</a> is a short term workaround. And it suggests PR <a href=\"https://github.com/rust-lang/rust/issues/85805\">#85805</a> is a long-term fix</p>",
        "id": 258559937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634827987
    },
    {
        "content": "<p>I think I need to take a deeper look at <a href=\"https://github.com/rust-lang/rust/issues/85805\">#85805</a></p>",
        "id": 258560029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828021
    },
    {
        "content": "<p>I’ll plan to do that. (Not self-assigning; just putting on private todo list.)</p>",
        "id": 258560063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828035
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-10-19.md\">triage logs for 2021-10-19</a></p>\n</blockquote>\n<p>A week where improvements outweigh regressions. The highlight of the week is the change to split out LLVM profile guided optimization (PGO) and using clang 13 to compile LLVM which led to improvements in many real world crates (e.g., cargo) in the range of 10%. Most regressions were limited and at most in the less than 1% range. We are seeing more performance changes in rollups which are supposed to be performance neutral. We'll have to decide how to best address this.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=9475e609b8458fff9e444934a6017d2e590642cf&amp;end=d45ed7502ad225739270a368528725930f54b7b6&amp;absolute=false&amp;stat=instructions%3Au\">9475e609b8458fff9e444934a6017d2e590642cf..d45ed7502ad225739270a368528725930f54b7b6</a></p>\n<p>3 Regressions, 4 Improvements, 2 Mixed; 2 of them in rollups<br>\n34 comparisons made in total</p>",
        "id": 258560387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828135
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89858\">#89858</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=dfc5add915e8bf4accbb7cf4de00351a7c6126a1&amp;end=8c852bc15a058022c9d4175e8ed60da628960800&amp;stat=instructions:u\">instruction counts</a> (up to 0.7% on <code>incr-unchanged</code> builds of <code>cranelift-codegen</code>)</li>\n<li>This rollup is the kind that is very hard to diagnose because none of the individual PRs seem to be risky.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/89858#issuecomment-947476063\">comment</a> about possible causes and a call out for more investigation.</li>\n</ul>\n<p>add <code>slice::swap_unchecked</code> <a href=\"https://github.com/rust-lang/rust/issues/88540\">#88540</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=72d66064e77281536588189a916af28a1819b313&amp;end=1dafe6d1c328d2f0580763e8438a227e490deb10&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>full</code> builds of <code>piston-image</code>)</li>\n<li>Seems like we're doing more bounds checking than is necessary when using <code>slice::swap</code> though this should only happen when debug assertions are on which is not the case in the compiler.</li>\n<li>It is interesting that this has predominately impacted full build scenarios, but it's not clear why this would be the case.</li>\n<li>It's already been suggested to revert this, and I've left a <a href=\"https://github.com/rust-lang/rust/pull/88540#issuecomment-946736079\">comment</a> as such in the PR.</li>\n</ul>\n<p>Associated consts sidebar <a href=\"https://github.com/rust-lang/rust/issues/89815\">#89815</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=8c852bc15a058022c9d4175e8ed60da628960800&amp;end=7807a694c2f079fd3f395821bcc357eee8650071&amp;stat=instructions:u\">instruction counts</a> (up to 0.9% on <code>full</code> builds of <code>many-assoc-items</code>)</li>\n<li>Expected since we're doing more work and the benchmark in question is explicitly meant to test the worst case in this scenario.</li>\n</ul>",
        "id": 258560451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828157
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>\n<p>Remove textual span from diagnostic string <a href=\"https://github.com/rust-lang/rust/issues/89555\">#89555</a><br>\n  polymorphization: shims and predicates <a href=\"https://github.com/rust-lang/rust/issues/89514\">#89514</a></p>\n</li>\n<li>\n<p>Split out LLVM PGO step and use clang 13 to compile LLVM <a href=\"https://github.com/rust-lang/rust/issues/89499\">#89499</a></p>\n</li>\n<li>Revert \"Auto merge of <a href=\"https://github.com/rust-lang/rust/issues/89709\">#89709</a> - clemenswasser:apply_clippy_suggestions… <a href=\"https://github.com/rust-lang/rust/issues/89905\">#89905</a></li>\n</ul>",
        "id": 258560512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828165
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89939\">#89939</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=6cc0a764e082d9c0abcf37a768d5889247ba13e2&amp;end=7fbd4ce2768744b3bd2ddf8453b73f4f18dbe5bc&amp;stat=instructions:u\">instruction counts</a> (up to -1.7% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=6cc0a764e082d9c0abcf37a768d5889247ba13e2&amp;end=7fbd4ce2768744b3bd2ddf8453b73f4f18dbe5bc&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>full</code> builds of <code>diesel</code>)</li>\n<li>No obvious place where the regressions or improvements are coming from.</li>\n<li>Most likely culprit is <a href=\"https://github.com/rust-lang/rust/pull/89915\">#89915</a> as most other PRs in the rollup seem to be pretty low risk.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/89939#issuecomment-946747553\">comment</a> saying as much.</li>\n</ul>\n<p>Index and hash HIR as part of lowering <a href=\"https://github.com/rust-lang/rust/issues/89124\">#89124</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5dab47dcd8267b8769421b46532414ec36d625e3&amp;end=bd41e09da334697c0f993b36685cb599061d9faa&amp;stat=instructions:u\">instruction counts</a> (up to -5.4% on <code>full</code> builds of <code>cranelift-codegen</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5dab47dcd8267b8769421b46532414ec36d625e3&amp;end=bd41e09da334697c0f993b36685cb599061d9faa&amp;stat=instructions:u\">instruction counts</a> (up to 5.3% on <code>full</code> builds of <code>unused-warnings</code>)</li>\n<li>Definitely looks related to the change in question (<code>unused-warnings</code> shows larges increases in HIR lowering).</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/89124#issuecomment-947444364\">comment</a> asking for clarification of next steps.</li>\n</ul>",
        "id": 258560536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828172
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89939\">#89939 Rollup of 10 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89858\">#89858 Rollup of 6 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89695\">#89695 Move top part of print_item to Tera templates</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89608\">#89608 Rollup of 12 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89534\">#89534 Introduce <code>tcx.get_diagnostic_name</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89495\">#89495 Add two inline annotations for hot functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89435\">#89435 Rollup of 6 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89405\">#89405 Fix clippy lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89263\">#89263 Suggest both of immutable and mutable trait implementations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89165\">#89165 Fix read_to_end to not grow an exact size buffer</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89125\">#89125 Don't use projection cache or candidate cache in intercrate mode</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89124\">#89124 Index and hash HIR as part of lowering</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89103\">#89103 Migrate in-tree crates to 2021</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89047\">#89047 Rollup of 10 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89030\">#89030 Introduce <code>Rvalue::ShallowInitBox</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88945\">#88945 Remove concept of 'completion' from the projection cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88880\">#88880 Rework HIR API to make invocations of the hir_crate query harder.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88824\">#88824 Rollup of 15 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88804\">#88804 Revise never type fallback algorithm</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88719\">#88719 Point at argument instead of call for their obligations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88703\">#88703 Gather module items after lowering.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88627\">#88627 Do not preallocate HirIds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88575\">#88575 Querify <code>FnAbi::of_{fn_ptr,instance}</code> as <code>fn_abi_of_{fn_ptr,instance}</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88540\">#88540 add <code>slice::swap_unchecked</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88308\">#88308 Morph <code>layout_raw</code> query into <code>layout_of</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87064\">#87064 Support <code>#[track_caller]</code> on closures and generators</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n</ul>",
        "id": 258560580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828186
    },
    {
        "content": "<p>(Incidentally, I’m not sure if putting the full “Untriaged Pull Requests” list into the agenda is providing value. Or maybe I should just not copy it into the meeting discussin itself, maybe? I dunno, it seems like the team at best wants to know if the list is growing or shrinking…?)</p>",
        "id": 258560731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828241
    },
    {
        "content": "<p>The big item to discuss as a team there is the issue about rollups injecting performance changes.</p>",
        "id": 258560798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828262
    },
    {
        "content": "<p>I think a number is indeed perhaps more valuable, perhaps a week/week delta</p>",
        "id": 258560800,
        "sender_full_name": "simulacrum",
        "timestamp": 1634828263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258560798\">said</a>:</p>\n<blockquote>\n<p>The big item to discuss as a team there is the issue about rollups injecting performance changes.</p>\n</blockquote>\n<p>Speaking of which, I had not seen this before last night: <a href=\"https://rust-lang.github.io/rustc-pr-tracking/\">https://rust-lang.github.io/rustc-pr-tracking/</a></p>",
        "id": 258560895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828284
    },
    {
        "content": "<p>(namely, scroll to bottom, and see the graph over time of rollup vs non-rollup PRs)</p>",
        "id": 258561000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828315
    },
    {
        "content": "<p>more precisely PRs merged as part of rollups and the raw number of bors merges (which is \"1 per rollup PR\" + non-rollup PRs)</p>",
        "id": 258561120,
        "sender_full_name": "simulacrum",
        "timestamp": 1634828358
    },
    {
        "content": "<p>Oh thank you for that clarification</p>",
        "id": 258561153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828373
    },
    {
        "content": "<p>I was just going to say “number of rollups is not actually the stat we probably want\"</p>",
        "id": 258561190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828385
    },
    {
        "content": "<p>at least, not on its own.</p>",
        "id": 258561213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828392
    },
    {
        "content": "<p>Anyway, its something we, as a team, need to talk about</p>",
        "id": 258561350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828417
    },
    {
        "content": "<p>with the current CI turnaround time, its not like we can get rid of rollups.</p>",
        "id": 258561471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828448
    },
    {
        "content": "<p>so it seems like only option in short term is to either: 1. be better about which PR’s we put into rollups, <em>or</em> 2. make it easy to debug performance changes injected by rollups?</p>",
        "id": 258561573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828489
    },
    {
        "content": "<p>okay, last part of meeting</p>",
        "id": 258561648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828514
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 258561666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828520
    },
    {
        "content": "<ul>\n<li>\"Add new tier 3 target: <code>x86_64-unknown-none</code>\" <a href=\"https://github.com/rust-lang/rust/pull/89062\">rust#89062</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257547308\">discussed last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> nominated for T-compiler discussion</li>\n<li>does <code>T-compiler</code> need to follow up on the discussion? <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257550014\">Josh's comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 258561748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828528
    },
    {
        "content": "<ul>\n<li>\"LTO toolchain compatability docs could use an update in case anything has changed in the last year\" <a href=\"https://github.com/rust-lang/rust/issues/89654\">rust#89654</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> nominated for T-compiler discussion</li>\n</ul>\n</li>\n</ul>",
        "id": 258561854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828559
    },
    {
        "content": "<p>Note: <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> nominated that one, I just migrated from I-nominated to I-compiler-nominated.</p>",
        "id": 258561953,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634828593
    },
    {
        "content": "<p>I have to jet to another meeting! Thank you all in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  so much for attending and for all your hard work!</p>",
        "id": 258561971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634828600
    },
    {
        "content": "<p>We discussed that last week</p>",
        "id": 258562088,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634828641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> was it intentional to keep both I-nominated and I-compiler-nominated?</p>",
        "id": 258562589,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634828785
    },
    {
        "content": "<p>The idea is moving from the generic <code>I-nominated</code> to <code>I-&lt;team&gt;-nominated</code> kind of labels<br>\n<a href=\"#narrow/stream/131828-t-compiler/topic/.22I-compiler-nominated.22.20label.3F/near/258527097\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/.22I-compiler-nominated.22.20label.3F/near/258527097</a></p>",
        "id": 258562735,
        "sender_full_name": "apiraino",
        "timestamp": 1634828832
    },
    {
        "content": "<p>(TIL)</p>",
        "id": 258562771,
        "sender_full_name": "apiraino",
        "timestamp": 1634828844
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/hvTe3AtoR72qQN_9YVy9fQ?view\">https://hackmd.io/hvTe3AtoR72qQN_9YVy9fQ?view</a></p>\n<p>Scheduled checkins from:<br>\n<span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span>  checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <br>\n@_<em>wg-polymorphization</em> checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></p>",
        "id": 258565467,
        "sender_full_name": "apiraino",
        "timestamp": 1634829730
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258552011\">said</a>:</p>\n<blockquote>\n<p>we really do need to get version numbers into these nomination labels</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can you detail a bit more (when you have time) what do you mean? Maybe I can add some useful info to the nomination entry in the agenda: maybe the rust channel release version beta/stable refer to i.e. <code>beta 1.57</code> or <code>stable 1.56</code>?</p>",
        "id": 258566999,
        "sender_full_name": "apiraino",
        "timestamp": 1634830285
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-21.20.2354818/near/258566999\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> can you detail a bit more (when you have time) what do you mean? Maybe I can add some useful info to the nomination entry in the agenda: maybe the rust channel release version beta/stable refer to i.e. <code>beta 1.57</code> or <code>stable 1.56</code>?</p>\n</blockquote>\n<p>It was essentially the same as the topic of <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a>. See also <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Embed.20version.20numbers.20in.20GH.20labels.20compiler-team.23393\">#t-compiler/major changes &gt; Embed version numbers in GH labels compiler-team#393</a></p>",
        "id": 258582257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634835965
    },
    {
        "content": "<p>Honestly I should re-read the conversation on that zulip thread and maybe come up with a fresh proposal. I’ve forgotten a lot of the insights that were garnered from that thread.</p>",
        "id": 258582462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634836067
    },
    {
        "content": "<p>ok, got it. thanks</p>",
        "id": 258592559,
        "sender_full_name": "apiraino",
        "timestamp": 1634839971
    }
]