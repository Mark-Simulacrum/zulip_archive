[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/RZWtfiBBQo2dG525CgZ2mQ\">meeting agenda</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span>  (generic work of the WG) by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"3282\">wg-incr-comp</span>  by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 277262715,
        "sender_full_name": "apiraino",
        "timestamp": 1648724190
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for our weekly triage meeting! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you are here!</p>",
        "id": 277285870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735288
    },
    {
        "content": "<p>(I continue to marvel at all the accumulated minutes (hours?) I must have spent fussing with the mouse before I learned about the <code>:</code> keyboard shortcut in Zulip!)</p>",
        "id": 277286008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735330
    },
    {
        "content": "<p>thank you to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for preparing the agenda!</p>",
        "id": 277286038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735350
    },
    {
        "content": "<p>we'll start off with ~five minutes for </p>\n<h2>Announcements</h2>",
        "id": 277286067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735360
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-04-01T16:00:00Z\">2022-04-01T12:00:00-04:00</time> (<em>non-standard time</em>) meeting robust incr-comp <a href=\"https://calendar.google.com/calendar/event?eid=NDdvYzM1aGlwMDh0azJkMjJmNjE1djkyOGggNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;ctz=GMT+01:00\">calendar link</a><ul>\n<li><a href=\"https://www.google.com/url?q=https%3A%2F%2Fgithub.com%2Frust-lang%2Fcompiler-team%2Fissues%2F490&amp;sa=D&amp;ust=1648138437659000&amp;usg=AOvVaw2CMvohRMydwg3ZcX_Fscxb\">compiler-team#490</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735401
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-04-01T13:00:00Z\">2022-04-01T09:00:00-04:00</time> Types Team: Planning/Deep-Dive meeting <a href=\"https://calendar.google.com/calendar/event?eid=M3JsYmdkN2F0cjdtYXE0Z2ljYzM4Nm42NTRfMjAyMjA0MDFUMTMwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;ctz=GMT+02:00\">calendar link</a></li>\n</ul>",
        "id": 277286304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735453
    },
    {
        "content": "<p>(mm. Seeing that \"Types Team\" note makes me wonder: Should we be announcing <em>other</em> meetings on here?)</p>",
        "id": 277286380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735489
    },
    {
        "content": "<ul>\n<li><span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> Next Thursday, April 7th, New Rust Release: 1.60 stable is out <span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> (<a href=\"https://github.com/rust-lang/blog.rust-lang.org/blob/5f778be1d744787933faa9bf44d9d97d06b78c04/posts/2022-04-07-Rust-1.60.0.md\">blog post</a>)</li>\n</ul>",
        "id": 277286411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735505
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 277286464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735532
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add <code>yeet</code> experimentally\" <a href=\"https://github.com/rust-lang/compiler-team/issues/501\">compiler-team#501</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735638
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 9 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 6 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: 3 months ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: 3 months ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: 3 months ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: 2 months ago)</li>\n<li>\"Removing codegen logic for <code>nvptx-nvidia-cuda</code> (32-bit target)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/496\">compiler-team#496</a> (last review activity: about 13 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 277286760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735652
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for Consistent no-prelude attribute (RFC 501)\" <a href=\"https://github.com/rust-lang/rust/issues/20561\">rust#20561</a> </li>\n<li>\"Increase the minimum linux-gnu versions\" <a href=\"https://github.com/rust-lang/rust/pull/95026\">rust#95026</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735661
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Promote <code>x86_64-unknown-none</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/499\">compiler-team#499</a> </li>\n<li>\"Add support for MIR opt unit tests via a new <code>-Z</code> flag\" <a href=\"https://github.com/rust-lang/compiler-team/issues/502\">compiler-team#502</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735670
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Implement <code>Clone</code> for generators\" <a href=\"https://github.com/rust-lang/compiler-team/issues/494\">compiler-team#494</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735679
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a> </li>\n<li>\"Lazy type-alias-impl-trait take two\" <a href=\"https://github.com/rust-lang/rust/pull/94081\">rust#94081</a></li>\n</ul>\n</li>\n</ul>",
        "id": 277286878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735693
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 277286909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735711
    },
    {
        "content": "<p>For <span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> , I'll just say: We've got the aforementioned meeting tomorrow. Looking forward to it!</p>",
        "id": 277287007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735761
    },
    {
        "content": "<p>for <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> , I'm guessing that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> would say \"we've got a meeting too tomorrow y'all!\"</p>",
        "id": 277287051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735786
    },
    {
        "content": "<p>Oops</p>",
        "id": 277287092,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648735799
    },
    {
        "content": "<p>Yes</p>",
        "id": 277287097,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648735801
    },
    {
        "content": "<p>(see types deep-dive: planning above)</p>",
        "id": 277287145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735803
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 277287199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735823
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix ice when error reporting recursion errors\" <a href=\"https://github.com/rust-lang/rust/pull/94391\">rust#94391</a><ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/90319\">#90319</a>, <a href=\"https://github.com/rust-lang/rust/issues/92148\">#92148</a> and <a href=\"https://github.com/rust-lang/rust/issues/93955\">#93955</a></li>\n<li><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> reviewed and nominated for beta-backport (regression is affecting a couple of past stable releases)</li>\n</ul>\n</li>\n</ul>",
        "id": 277287220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735835
    },
    {
        "content": "<p>so, for context: IIUC, this is fixing a regression that was injected by <a href=\"https://github.com/rust-lang/rust/issues/89576\">#89576</a></p>",
        "id": 277287391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648735913
    },
    {
        "content": "<p>To clarify: we are talking about backporting things that would become stable next week?</p>",
        "id": 277287619,
        "sender_full_name": "mw",
        "timestamp": 1648736001
    },
    {
        "content": "<p>I think that is indeed what we are talking about</p>",
        "id": 277287641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736016
    },
    {
        "content": "<p>I would have preferred if this were a little more targetted</p>",
        "id": 277287679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736029
    },
    {
        "content": "<p>So if we don't backport, this would be in the beta that is being cut any time now, right?</p>",
        "id": 277287694,
        "sender_full_name": "mw",
        "timestamp": 1648736038
    },
    {
        "content": "<p>at least, it <em>looks</em> like this could have been a one-line \"replace a <code>bug!</code> with a <code>delay_span_bug!</code>, if I understand correctly.</p>",
        "id": 277287782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277287694\">said</a>:</p>\n<blockquote>\n<p>So if we don't backport, this would be in the beta that is being cut any time now, right?</p>\n</blockquote>\n<p>yes I believe so.</p>",
        "id": 277287792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277287051\">said</a>:</p>\n<blockquote>\n<p>for <span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span> , I'm guessing that <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> and <span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> would say \"we've got a meeting too tomorrow y'all!\"</p>\n</blockquote>\n<p>also, just remembered: see the draft of the types team RFC: <a href=\"https://hackmd.io/kREtk8pdTfC5lz97jGYjFA\">https://hackmd.io/kREtk8pdTfC5lz97jGYjFA</a></p>",
        "id": 277287802,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648736071
    },
    {
        "content": "<p>if the ICE has already been around for a few stable releases, and we've only seen a few linked issues reported for the ICE ...</p>",
        "id": 277287848,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736094
    },
    {
        "content": "<p>Yeah I'm inclined to let this ride the trains, myself</p>",
        "id": 277287890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736116
    },
    {
        "content": "<p>if it were getting reported even weekly then I would say it's more urgent, but i haven't seen issues for it being filed</p>",
        "id": 277288030,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> you around? Would you like to argue for a beta (and effectively stable) backport here?</p>",
        "id": 277288065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736189
    },
    {
        "content": "<p>What is this <code>ErrorGuaranteed::unchecked_claim_error_was_emitted</code>?</p>\n<blockquote>\n<p>To be used only if you really know what you are doing… ideally, we would find a way to eliminate all calls to this method.</p>\n</blockquote>\n<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.ErrorGuaranteed.html#method.unchecked_claim_error_was_emitted\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.ErrorGuaranteed.html#method.unchecked_claim_error_was_emitted</a></p>",
        "id": 277288121,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648736218
    },
    {
        "content": "<p>Do we know if the release team will even do backports at this point?</p>",
        "id": 277288125,
        "sender_full_name": "mw",
        "timestamp": 1648736219
    },
    {
        "content": "<p>I didn't see them <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> , so I'm going to assume they're unavailable.</p>",
        "id": 277288127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> its a good question. I think they would, if it were important</p>",
        "id": 277288157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736237
    },
    {
        "content": "<p>but again, I don't think it cuts it.</p>",
        "id": 277288185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736248
    },
    {
        "content": "<p>anyway, I'm going to \"declining for beta backport.\" ; <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , if you see this later and want to push back, let me/us know!</p>",
        "id": 277288227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736275
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 277288299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736293
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 277288328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736302
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No new PRs waiting on T-compiler</li>\n</ul>",
        "id": 277288361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736312
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler+-label%3AT-lang+-label%3AT-infra+-label%3AT-release+-label%3AT-libs+-label%3AT-libs-api\">T-compiler</a></p>",
        "id": 277288372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736319
    },
    {
        "content": "<ul>\n<li>\"Support #[global_allocator] without the allocator shim\" <a href=\"https://github.com/rust-lang/rust/pull/86844\">rust#86844</a> (last review activity: 5 months ago)<ul>\n<li>cc: <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n</ul>\n</li>\n</ul>",
        "id": 277288387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736326
    },
    {
        "content": "<p>I did start to look at this. I suppose I should have at least left a comment saying that, to give the PR author some faith that the gears are moving</p>",
        "id": 277288434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736351
    },
    {
        "content": "<p>the next time I pick it up, I'll leave a comment.</p>",
        "id": 277288463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736364
    },
    {
        "content": "<ul>\n<li>\"Specialize infinite-type \"insert some indirection\" suggestion for Option\" <a href=\"https://github.com/rust-lang/rust/pull/91416\">rust#91416</a> (last review activity: about 41 days ago)<ul>\n<li>cc: <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 277288475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736370
    },
    {
        "content": "<p>oooooh: \"Suggest Option&lt;Box&lt;_&gt;&gt; instead of Box&lt;Option&lt;_&gt;&gt; for infinitely-recursive members of a struct.\"</p>",
        "id": 277288536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736398
    },
    {
        "content": "<p>i think i just need an r+</p>",
        "id": 277288619,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736420
    },
    {
        "content": "<p>maybe a rebase too</p>",
        "id": 277288643,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736431
    },
    {
        "content": "<p>okay</p>",
        "id": 277288740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736480
    },
    {
        "content": "<p>(you can ping me when it's ready, i'll r+ given that it's already approved)</p>",
        "id": 277288780,
        "sender_full_name": "DPC",
        "timestamp": 1648736498
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> 's note that \"r=me after rebasing.\" was meant to indicate that you (meaning <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span> ) can write <code>r=estebank</code></p>",
        "id": 277288825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736515
    },
    {
        "content": "<p>actually i can do that now, i'll do it later after a rebase</p>",
        "id": 277288831,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736518
    },
    {
        "content": "<p>yeah i didn't have bors power until sunday lol</p>",
        "id": 277288897,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736534
    },
    {
        "content": "<p>right right, okay</p>",
        "id": 277288907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736540
    },
    {
        "content": "<p>the best kind of race condition</p>",
        "id": 277288918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736546
    },
    {
        "content": "<ul>\n<li>\"[perf only] Test Rust with opaque pointers\" <a href=\"https://github.com/rust-lang/rust/pull/94214\">rust#94214</a> (last review activity: about 35 days ago)<ul>\n<li>cc: <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n</ul>\n</li>\n</ul>",
        "id": 277288962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736566
    },
    {
        "content": "<p>this is perf-only</p>",
        "id": 277289104,
        "sender_full_name": "nagisa",
        "timestamp": 1648736628
    },
    {
        "content": "<p>this says \"perf only\", so I assume its just an experiemnt</p>",
        "id": 277289107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736630
    },
    {
        "content": "<p>is there some other tag we should use for that?</p>",
        "id": 277289137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736641
    },
    {
        "content": "<p>I marked it as draft, I guess that might be enough?</p>",
        "id": 277289233,
        "sender_full_name": "eddyb",
        "timestamp": 1648736665
    },
    {
        "content": "<p>I have no idea</p>",
        "id": 277289256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736676
    },
    {
        "content": "<p>ok, so this kind of PRs are just personal work-in-progress, right?</p>",
        "id": 277289274,
        "sender_full_name": "apiraino",
        "timestamp": 1648736683
    },
    {
        "content": "<p>mark as draft + s-experiment is there as well iirc</p>",
        "id": 277289275,
        "sender_full_name": "DPC",
        "timestamp": 1648736684
    },
    {
        "content": "<p>S-experimental also exists</p>",
        "id": 277289281,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648736686
    },
    {
        "content": "<p>in any case, I think if its going to be tagged with anything <em>(under \"S-waiting-</em>)*, it should be S-waiting-on-author</p>",
        "id": 277289285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736687
    },
    {
        "content": "<p>as in \"We're waiting for the author to be done with the experiment and close this PR\"</p>",
        "id": 277289333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736702
    },
    {
        "content": "<p>okay, does \"S-experiment\" work to stop the state transitions between the various \"S-waiting-*\" labels?</p>",
        "id": 277289404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736731
    },
    {
        "content": "<p>normally i avoid s-waiting-on-author because it gets  triaged</p>",
        "id": 277289405,
        "sender_full_name": "DPC",
        "timestamp": 1648736732
    },
    {
        "content": "<p>would be fine with me, idek if I serve any purpose in this PR <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 277289442,
        "sender_full_name": "eddyb",
        "timestamp": 1648736746
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277289404\">said</a>:</p>\n<blockquote>\n<p>okay, does \"S-experiment\" work to stop the state transitions between the various \"S-waiting-*\" labels?</p>\n</blockquote>\n<p>yeh the state changes won't affect s-experimental</p>",
        "id": 277289537,
        "sender_full_name": "DPC",
        "timestamp": 1648736772
    },
    {
        "content": "<p>I think S-experimental is appropriate here</p>",
        "id": 277289591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648736796
    },
    {
        "content": "<p>I'm not sure what the \"it\" was in that sentence.</p>",
        "id": 277289596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736799
    },
    {
        "content": "<p>but lets go with S-experimental in any case</p>",
        "id": 277289620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736810
    },
    {
        "content": "<p>oh wait, the sidebar is misleading: I'm not <em>assigned</em> to this PR, I just show up as \"reviewer\" because I used the GH feature to comment on the diff</p>",
        "id": 277289656,
        "sender_full_name": "eddyb",
        "timestamp": 1648736828
    },
    {
        "content": "<p>if that doesn't do the trick then we'll address that presumed bug in protocol later</p>",
        "id": 277289666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736832
    },
    {
        "content": "<ul>\n<li>\"Remove all json handling from rustc_serialize\" <a href=\"https://github.com/rust-lang/rust/pull/85993\">rust#85993</a> (last review activity: about 33 days ago)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> </li>\n<li>(a few comments also from various people)</li>\n</ul>\n</li>\n</ul>",
        "id": 277289773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736877
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> should we reassign this? I think you've got a lot of on your plate?</p>",
        "id": 277289975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736952
    },
    {
        "content": "<p>I think this is waiting for an MCP to be written? <a href=\"https://github.com/rust-lang/rust/pull/85993#issuecomment-1050260795\">https://github.com/rust-lang/rust/pull/85993#issuecomment-1050260795</a></p>",
        "id": 277290038,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648736985
    },
    {
        "content": "<p>I think the <code>I-needs-decision</code> comes from this comment<br>\n<a href=\"https://github.com/rust-lang/rust/pull/85993#issuecomment-871757316\">https://github.com/rust-lang/rust/pull/85993#issuecomment-871757316</a><br>\n(not sure about the implications of that label)</p>",
        "id": 277290041,
        "sender_full_name": "apiraino",
        "timestamp": 1648736986
    },
    {
        "content": "<p>but also, the \"most recent\" comments ... yes,</p>",
        "id": 277290053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648736990
    },
    {
        "content": "<p>yes, what wesley said. looks like its waiting on an MCP to be written</p>",
        "id": 277290121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737006
    },
    {
        "content": "<p>I think there is an MCP already</p>",
        "id": 277290155,
        "sender_full_name": "mw",
        "timestamp": 1648737020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> this : <a href=\"https://github.com/rust-lang/rust/pull/85993#issuecomment-1050260795\">https://github.com/rust-lang/rust/pull/85993#issuecomment-1050260795</a></p>",
        "id": 277290187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> wrote:</p>\n<blockquote>\n<p>It doesn't look like there was any mention of <code>-Zast-json</code> in the MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/418\">https://github.com/rust-lang/compiler-team/issues/418</a>. Before we remove it, we need to determine if there's a replacement for any users (including compiler developers) who are relying on it.</p>\n</blockquote>\n<p>and <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> replied:</p>\n<blockquote>\n<p>Yeah, I still need to open an MCP for that. The replacement would be using rustc_driver directly.</p>\n</blockquote>",
        "id": 277290263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737071
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/issues/418\">https://github.com/rust-lang/compiler-team/issues/418</a></p>",
        "id": 277290308,
        "sender_full_name": "mw",
        "timestamp": 1648737093
    },
    {
        "content": "<p>Ok :)</p>",
        "id": 277290335,
        "sender_full_name": "mw",
        "timestamp": 1648737109
    },
    {
        "content": "<p>I think we should change this to <em>just</em> S-waiting-on-author. The I-needs-decision ... I don't know whether that should stay or go.</p>",
        "id": 277290341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737112
    },
    {
        "content": "<p>like, I don't think we have what we need to <em>make</em> a decision on this</p>",
        "id": 277290411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737127
    },
    {
        "content": "<p>I think the concern is specifically about removing <code>-Zast-json</code> which wasn't covered in that MCP.</p>",
        "id": 277290430,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648737134
    },
    {
        "content": "<p>Right. and I assume <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> 's MCP is going to be about propsoing removal of <code>-Zast-json</code>, but I'm not 100% sure of that</p>",
        "id": 277290522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737183
    },
    {
        "content": "<p>so: here's where I think we stand: We don't think we can land this PR until there's been confirmation that its okay to remove <code>-Z ast-json</code>. That's what its waiting on.</p>",
        "id": 277290602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277290522\">said</a>:</p>\n<blockquote>\n<p>Right. and I assume <span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> 's MCP is going to be about propsoing removal of <code>-Zast-json</code>, but I'm not 100% sure of that</p>\n</blockquote>\n<p>Exactly</p>",
        "id": 277290622,
        "sender_full_name": "bjorn3",
        "timestamp": 1648737233
    },
    {
        "content": "<p>so we either inline an FCP on this PR about removing <code>-Z ast-json</code>, or we wait for an MCP on that.</p>",
        "id": 277290717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737256
    },
    {
        "content": "<p>but I don't want to spend more of this meeting on it. :)</p>",
        "id": 277290768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737280
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I think you can decide for yourself which of the above paths to go down, okay? and we'll retag this as just S-waiting-on-author, not S-waiting-on-review</p>",
        "id": 277290838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737306
    },
    {
        "content": "<ul>\n<li>\"Add <code>special_module_name</code> lint\" <a href=\"https://github.com/rust-lang/rust/pull/94467\">rust#94467</a> (last review activity: about 29 days ago)<ul>\n<li>highfive bot assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> </li>\n<li>probably needs a reviewer</li>\n</ul>\n</li>\n</ul>",
        "id": 277290877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737324
    },
    {
        "content": "<p>oh this sounds like a nice fix</p>",
        "id": 277290930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737351
    },
    {
        "content": "<p>I'll self-assign for review.</p>",
        "id": 277290951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737360
    },
    {
        "content": "<p>unless someone else grabs it first while I'm not looking</p>",
        "id": 277291006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737373
    },
    {
        "content": "<ul>\n<li>\"Create 2024 edition\" <a href=\"https://github.com/rust-lang/rust/pull/94461\">rust#94461</a> (last review activity: about 29 days ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> :-)</li>\n</ul>\n</li>\n</ul>",
        "id": 277291028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737383
    },
    {
        "content": "<p>I'll keep this. thanks for the assignment, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 277291110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737420
    },
    {
        "content": "<ul>\n<li>\"create <code>-Z force-allocator-shim</code> codegen option\" <a href=\"https://github.com/rust-lang/rust/pull/94389\">rust#94389</a> (last review activity: about 29 days ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned to figure out to push <a href=\"https://github.com/rust-lang/rust/issues/94389\">#94389</a> or <a href=\"https://github.com/rust-lang/rust/pull/86844\">#86844</a> forward</li>\n</ul>\n</li>\n</ul>",
        "id": 277291154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737440
    },
    {
        "content": "<p>yeah, I did mention I started looking at this up above.</p>",
        "id": 277291189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737458
    },
    {
        "content": "<p>so, that goes into that bucket</p>",
        "id": 277291208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737467
    },
    {
        "content": "<ul>\n<li>\"Handle generic bounds in a uniform way in HIR\" <a href=\"https://github.com/rust-lang/rust/pull/93803\">rust#93803</a> (last review activity: about 37 days ago)<ul>\n<li>cc: <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 277291242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737481
    },
    {
        "content": "<p>I trust <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> will either take care of this or let us know if they need help</p>",
        "id": 277291330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737503
    },
    {
        "content": "<ul>\n<li>\"Also cache the stable hash of interned Predicates\" <a href=\"https://github.com/rust-lang/rust/pull/94487\">rust#94487</a> (last review activity: about 29 days ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is it waiting for review? do you need a reviewer?</li>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  added self to cc (<a href=\"https://github.com/rust-lang/rust/pull/94487#issuecomment-1058152662=\">see comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 277291343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737512
    },
    {
        "content": "<p>should we tag this as S-experimental ?</p>",
        "id": 277291453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737569
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> ^ ?</p>",
        "id": 277291507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737589
    },
    {
        "content": "<p>I'm going to move along, in any case</p>",
        "id": 277291526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737598
    },
    {
        "content": "<p>looks like</p>",
        "id": 277291530,
        "sender_full_name": "DPC",
        "timestamp": 1648737601
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">59 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">45 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 2 P-high, 1 P-medium, 2 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 38 P-high, 82 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 277291585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737610
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No new <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 277291604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737618
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 277291638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737634
    },
    {
        "content": "<ul>\n<li>\"No more auto-unrolling starting with LLVM 14\" <a href=\"https://github.com/rust-lang/rust/issues/94847\">rust#94847</a></li>\n</ul>",
        "id": 277291654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737641
    },
    {
        "content": "<p>(IIRC we went already over this)</p>",
        "id": 277291720,
        "sender_full_name": "apiraino",
        "timestamp": 1648737674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock (Saethlin)</span> says this looks like a 2x perf regression on their 3970x</p>",
        "id": 277291724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737677
    },
    {
        "content": "<p>yes we did, true</p>",
        "id": 277291735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737683
    },
    {
        "content": "<p>but did we decide anything?</p>",
        "id": 277291750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737692
    },
    {
        "content": "<p>kind of<br>\n<a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-17.20.2354818/near/275666056\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-17.20.2354818/near/275666056</a></p>",
        "id": 277291860,
        "sender_full_name": "apiraino",
        "timestamp": 1648737724
    },
    {
        "content": "<p>yes. We need to figure out if it deserves an owner</p>",
        "id": 277291925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737751
    },
    {
        "content": "<p>if it doesn't deserve an owner, then it doesn't deserve to be P-high</p>",
        "id": 277291938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737760
    },
    {
        "content": "<p>(i.e. I don't want to be talking about this being an unowned issue every week, it doesn't warrant that.)</p>",
        "id": 277291984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737782
    },
    {
        "content": "<p>((there are <em>other</em> kinds of P-high issues that, if unowned, I <strong>would</strong> want to talk about them in the meeting every week.))</p>",
        "id": 277292039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737805
    },
    {
        "content": "<p>anyway its still <em>interesting</em> to check in on</p>",
        "id": 277292093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737837
    },
    {
        "content": "<blockquote>\n<p>Also, it looks like this problem may be specific to computing the min of an array? </p>\n</blockquote>\n<p>This does not seem <code>P-high</code> to me.</p>",
        "id": 277292175,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648737853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277292175\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Also, it looks like this problem may be specific to computing the min of an array? </p>\n</blockquote>\n<p>This does not seem <code>P-high</code> to me.</p>\n</blockquote>\n<p>does it show up if you use an iterator instead?</p>",
        "id": 277292245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737887
    },
    {
        "content": "<p>I assume it does</p>",
        "id": 277292276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737903
    },
    {
        "content": "<p>If we stopped unrolling all loops, that would be certainly be <code>P-high</code> or maybe even <code>P-critical</code> but this seems like most any other <code>I-slow</code> bug to me.</p>",
        "id": 277292302,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648737914
    },
    {
        "content": "<p>I'll leave a comment, and suggest that we are likely to to downgrade to P-medium</p>",
        "id": 277292329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737928
    },
    {
        "content": "<blockquote>\n<p>The perhaps good news is that if you pass -Ctarget-cpu=native on godbolt you get the old codegen back, and on my machine I see the perf regression disappear.</p>\n</blockquote>\n<p>hmm</p>",
        "id": 277292401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648737959
    },
    {
        "content": "<p>left a comment</p>",
        "id": 277292652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738072
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 277292675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738081
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-03-30.md\">triage logs 2022-03-30</a></p>\n</blockquote>\n<p>A mixed week: some minor regressions, but things overall improved for instruction counts.</p>\n<p>Max RSS has gone up slightly over the past<br>\n<a href=\"https://perf.rust-lang.org/?start=2022-03-01&amp;end=2022-03-30&amp;kind=percentfromfirst&amp;stat=max-rss\">month</a>,<br>\non the order of 0.5% regression according to benchmark summary. pnkfelix is<br>\nfollowing up on that with rustc-perf team on<br>\n<a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/max-rss.20over.202022-03/near/277194155\">zulip</a></p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=3ea44938e21f0de8ae7d4f6399a8a30f97867c70&amp;end=3e7514670db841a7f0d7656f3b13b1c8b2c11599&amp;absolute=false&amp;stat=instructions%3Au\">3ea44938e21f0de8ae7d4f6399a8a30f97867c70..3e7514670db841a7f0d7656f3b13b1c8b2c11599</a></p>\n<p>4 Regressions, 5 Improvements, 4 Mixed; 3 of them in rollups<br>\n30 Untriaged Pull Requests<br>\n63 comparisons made in total</p>",
        "id": 277292728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738089
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 5 pull requests <a href=\"https://github.com/rust-lang/rust/pull/95250\">#95250</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 2.2%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9f4dc0b4db892271cd0dada6e072775b5b5d6b1e&amp;end=37b55c8a0cafdb60b9168da34f904acc70157df8&amp;stat=instructions:u\">instruction counts</a>: 11.1% on <code>full</code> builds of <code>cargo-0.60.0 doc</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/95250#issuecomment-1077821698\">Already triaged</a> by oli-obk.</li>\n<li>it is solely in rustdoc, and oli-obk has a plan to address it in the long term.</li>\n</ul>\n<p>Properly track <code>ImplObligations</code> <a href=\"https://github.com/rust-lang/rust/pull/91030\">#91030</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 1.9%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=600a80dedf71ce02e778e59f4884866c3030c819&amp;end=d2df372bca13bb60979c909660e69f2451630e81&amp;stat=instructions:u\">instruction counts</a>: 3.8% on <code>full</code> builds of <code>projection-caching check</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/91030#issuecomment-1083360210\">triaged</a>; this was anticipated.</li>\n<li>The only primary regression was to diesel doc, and the regressions are justified by the improvement to the diagnostics.</li>\n</ul>\n<p>Separate const prop lints from optimizations <a href=\"https://github.com/rust-lang/rust/pull/94934\">#94934</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 1.2%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=4b133a7e27c32e822e9ff774e4436f184f5a9752&amp;end=63b8f01bb5ca277e7df8d7efe094ed4244c1790c&amp;stat=instructions:u\">instruction counts</a>: 2.1% on <code>incr-full</code> builds of <code>unicode_normalization opt</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/94934#issuecomment-1078950067\">Already triaged</a> by oli-obk.</li>\n<li>In short: this was expected, becaused we are doing const-prop twice now.</li>\n<li>(The end-goal is stop optimizations from changing diagnostics. This PR is a step towards that goal.)</li>\n</ul>\n<p>Rollup of 4 pull requests <a href=\"https://github.com/rust-lang/rust/pull/95448\">#95448</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 1.5%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5e1d19d30723c287f049662474021f2b9a9894ce&amp;end=9c06e1ba47e1077725a950e0b5d1870a89c8b536&amp;stat=instructions:u\">instruction counts</a>: 2.5% on <code>incr-patched: io error 6144</code> builds of <code>issue-46449 debug</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/95448#issuecomment-1083461959\">triaged</a></li>\n<li>The only primary benchmark impacted by this was <code>unicode-normalization-0.1.19</code>, and that only saw a 0.50% regression on incr-patched: println and a 0.36% regression on full build. We can ignore that.</li>\n<li>The only secondary benchmark impacted was issue-46449, which is trying to catch regression of quadratic blowup, not minor regressions.</li>\n</ul>",
        "id": 277292757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738103
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Introduce <code>TtParser</code> <a href=\"https://github.com/rust-lang/rust/pull/95159\">#95159</a></li>\n<li>Overlap inherent impls <a href=\"https://github.com/rust-lang/rust/pull/95082\">#95082</a></li>\n<li>resolve: Do not build expensive suggestions if they are not actually used <a href=\"https://github.com/rust-lang/rust/pull/95255\">#95255</a></li>\n<li>Fix perf issue for auto trait selection <a href=\"https://github.com/rust-lang/rust/pull/95333\">#95333</a></li>\n<li>Remove header field from clean::Function <a href=\"https://github.com/rust-lang/rust/pull/95096\">#95096</a></li>\n</ul>",
        "id": 277292772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738110
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Change Thir to lazily create constants <a href=\"https://github.com/rust-lang/rust/pull/94876\">#94876</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 1.6%</li>\n<li>Arithmetic mean of relevant improvements: -1.0%</li>\n<li>Arithmetic mean of all relevant changes: -0.3%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=d2df372bca13bb60979c909660e69f2451630e81&amp;end=8d8135f003b35c3e109d013b2bed9ee9496da615&amp;stat=instructions:u\">instruction counts</a>: -2.8% on <code>full</code> builds of <code>keccak check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d2df372bca13bb60979c909660e69f2451630e81&amp;end=8d8135f003b35c3e109d013b2bed9ee9496da615&amp;stat=instructions:u\">instruction counts</a>: 3.5% on <code>full</code> builds of <code>tuple-stress check</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/94876#issuecomment-1083486520\">Triaged</a>.</li>\n<li>The changes to the primary benchmarks are almost universally green here.</li>\n<li>The secondary benchmarks are more of a mixed bag, but I think we can accept a 3.5% regression on tuple-stress given the overall benefits.</li>\n</ul>\n<p>More macro expansion optimizations <a href=\"https://github.com/rust-lang/rust/pull/95259\">#95259</a></p>\n<ul>\n<li>Arithmetic mean of relevant improvements: -1.5%</li>\n<li>Arithmetic mean of all relevant changes: -1.1%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=4ce257ff198d23bdf14e956fbf2fe0fed297201f&amp;end=8a0c55046c7092d9e019dad03729e8d32e38df72&amp;stat=instructions:u\">instruction counts</a>: -2.0% on <code>incr-unchanged</code> builds of <code>diesel check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=4ce257ff198d23bdf14e956fbf2fe0fed297201f&amp;end=8a0c55046c7092d9e019dad03729e8d32e38df72&amp;stat=instructions:u\">instruction counts</a>: 0.4% on <code>incr-full</code> builds of <code>unicode-normalization-0.1.19 opt</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/95259#issuecomment-1079476641\">Already triaged</a> by nnethercote</li>\n<li>The perf wins clearly outweigh the losses here.</li>\n</ul>\n<p>Rollup of 5 pull requests <a href=\"https://github.com/rust-lang/rust/pull/95382\">#95382</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 2.2%</li>\n<li>Arithmetic mean of relevant improvements: -0.4%</li>\n<li>Arithmetic mean of all relevant changes: 1.2%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=ab0c2e18dceb7140626a158affb983ae81039bd0&amp;end=62523045ec681ee8c2ecb8d395fbcaccf336284b&amp;stat=instructions:u\">instruction counts</a>: -0.4% on <code>incr-unchanged</code> builds of <code>deeply-nested-multi check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ab0c2e18dceb7140626a158affb983ae81039bd0&amp;end=62523045ec681ee8c2ecb8d395fbcaccf336284b&amp;stat=instructions:u\">instruction counts</a>: 3.2% on <code>full</code> builds of <code>await-call-tree check</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/95382#issuecomment-1083505358\">Left comment</a></li>\n<li>Changes to the primary benchmarks seem like a wash and probably ignorable (0.33% worse for unicode-normalization-0.1.19, 0.33% better for ripgrep-13.0.0).</li>\n<li>Re secondary benchmarks: 3% worse for await-call-tree (on six scenarios), which is more concerning. I assume PR <a href=\"https://github.com/rust-lang/rust/issues/95120\">#95120</a> is cause.</li>\n<li>Leaving as untriaged.</li>\n</ul>\n<p>Lazy type-alias-impl-trait take two <a href=\"https://github.com/rust-lang/rust/pull/94081\">#94081</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 0.5%</li>\n<li>Arithmetic mean of relevant improvements: -0.5%</li>\n<li>Arithmetic mean of all relevant changes: -0.3%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c&amp;end=f132bcf3bdf6d3ff9be7d02e8d0088b99007cd5e&amp;stat=instructions:u\">instruction counts</a>: -1.0% on <code>incr-full</code> builds of <code>wg-grammar check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c&amp;end=f132bcf3bdf6d3ff9be7d02e8d0088b99007cd5e&amp;stat=instructions:u\">instruction counts</a>: 0.8% on <code>full</code> builds of <code>projection-caching check</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/94081#issuecomment-1083519743\">triaged</a></li>\n<li>The actual performance changes indicate this ended up a win overall, based on the amount of green.</li>\n</ul>",
        "id": 277292805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738125
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 277292868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738151
    },
    {
        "content": "<p>and hey, we're through the agenda, 11 minutes early</p>",
        "id": 277292886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738162
    },
    {
        "content": "<p>Anyone have anything they want to raise? I'm personally inclined to end the meeting; i could use the time. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 277292929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738190
    },
    {
        "content": "<p>Okay lets end it there. Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! and remember: We've got the robust incr-comp meeting tomorrow, at a <strong>non-standard</strong> time, at <time datetime=\"2022-04-01T16:00:00Z\">2022-04-01T12:00:00-04:00</time></p>",
        "id": 277293107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648738257
    },
    {
        "content": "<p>Draft for next weeks' agenda available at:<br>\n<a href=\"https://hackmd.io/FdqBRFiPTmqBl3Eq8sOjOQ?view\">https://hackmd.io/FdqBRFiPTmqBl3Eq8sOjOQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"5288\">WG-polymorphization</span>  by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 277298408,
        "sender_full_name": "apiraino",
        "timestamp": 1648740414
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-31.20.2354818/near/277288125\">said</a>:</p>\n<blockquote>\n<p>Do we know if the release team will even do backports at this point?</p>\n</blockquote>\n<p>yes, we've even done \"beta\" backports within the stable promotion PR, but of course we must be mindful of the risk in that</p>",
        "id": 277298934,
        "sender_full_name": "cuviper",
        "timestamp": 1648740626
    }
]