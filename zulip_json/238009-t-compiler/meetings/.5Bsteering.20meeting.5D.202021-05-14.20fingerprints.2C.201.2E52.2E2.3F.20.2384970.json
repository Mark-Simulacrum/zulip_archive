[
    {
        "content": "<p>Making topic now</p>",
        "id": 238633299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620918103
    },
    {
        "content": "<p>(the meeting will be for an hour, starting at <time datetime=\"2021-05-14T14:00:00Z\">2021-05-14T10:00:00-04:00</time>  )</p>",
        "id": 238634080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620918389
    },
    {
        "content": "<p>is this on?</p>",
        "id": 238771597,
        "sender_full_name": "cuviper",
        "timestamp": 1621000972
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 238771948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001113
    },
    {
        "content": "<p>sorry for being late (again?)</p>",
        "id": 238771979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001128
    },
    {
        "content": "<p>the main topics I want to cover today are:</p>\n<ol>\n<li>what is the current status of the various bugs that were exposed by the fingerprint check,</li>\n<li>what else do we need to do, if anything, to improve the developer experience with the fingerprint check on beta/nightly, and</li>\n<li>should we consider a 1.52.2 release that turns incremental-compilation back <em>on</em> by default (for debug/test cargo profiles, that is)</li>\n</ol>",
        "id": 238772288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001252
    },
    {
        "content": "<p>we don’t have to cover it in that order</p>",
        "id": 238772320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001268
    },
    {
        "content": "<p>for example, I imagine members of the release team care most about 3. Its possible that information from 1 might inform our choices for 3, but its also possible we can just make a decision there quickly</p>",
        "id": 238772435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001306
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/1\">#1</a>, we're currently in a very good position</p>",
        "id": 238772437,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001307
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/85186\">https://github.com/rust-lang/rust/pull/85186</a> has just been merged</p>",
        "id": 238772452,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001312
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/rust/pull/85211\">https://github.com/rust-lang/rust/pull/85211</a> is in the bors queue</p>",
        "id": 238772479,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001327
    },
    {
        "content": "<p>with those two PRs merged, I think we've covered all of the issues that people hit in practice</p>",
        "id": 238772524,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001346
    },
    {
        "content": "<p>The two remaining issue are the <code>Err(Overflow)</code> bug (which I don't think anyone has actually hit in practice)</p>",
        "id": 238772586,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001362
    },
    {
        "content": "<p>Okay. Do all of the PRs (either merged or in the queue) have regression tests specific to the incremental failures?</p>",
        "id": 238772600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001372
    },
    {
        "content": "<p>and an unconfirmed issue <a href=\"https://github.com/rust-lang/rust/issues/83311\">https://github.com/rust-lang/rust/issues/83311</a></p>",
        "id": 238772622,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001385
    },
    {
        "content": "<p>(I know it can be a pain to reproduce them, so that’s why I ask about whether the tests exist. Its not a judgement of the PRs)</p>",
        "id": 238772654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001394
    },
    {
        "content": "<p>not yet</p>",
        "id": 238772656,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001395
    },
    {
        "content": "<p>I forgot about finishing the <code>predicates_of</code> test yesterday, sorry</p>",
        "id": 238772716,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001407
    },
    {
        "content": "<p>that’s okay</p>",
        "id": 238772721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001412
    },
    {
        "content": "<p>I'll work on it after this meeting</p>",
        "id": 238772725,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001413
    },
    {
        "content": "<p>This is really great work <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>! Thanks <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 238772727,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621001414
    },
    {
        "content": "<p>I'm not 100% certain that <a href=\"https://github.com/rust-lang/rust/issues/83311\">https://github.com/rust-lang/rust/issues/83311</a> is still a proble, since it was only ever reproduced witihn the rustc test suite</p>",
        "id": 238772782,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001439
    },
    {
        "content": "<p>Another quick note regarding item \\#3: I do <em>not</em> think it would be a good idea to backport all this new stuff to stable</p>",
        "id": 238772823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001456
    },
    {
        "content": "<p>I suspect that it may have ben an issue with a bootstrap cache not getting invalidated</p>",
        "id": 238772828,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001458
    },
    {
        "content": "<p>so when I suggest a 1.52.2 release</p>",
        "id": 238772846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001465
    },
    {
        "content": "<p>my opinion on 3 is to be conservative, just wait for 1.53, but I'm not sure where other release folks stand</p>",
        "id": 238772848,
        "sender_full_name": "cuviper",
        "timestamp": 1621001466
    },
    {
        "content": "<p>it is based on the idea of backporting commits that have already been tested on beta</p>",
        "id": 238772874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001478
    },
    {
        "content": "<p>and it is mainly based on <span class=\"user-mention\" data-user-id=\"257516\">@Carol (Nichols || Goulding)</span> ’s report that she had a completely fixed experience using the beta.</p>",
        "id": 238772946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001515
    },
    {
        "content": "<p>I think I'm inclined to be conservative for now, but there may be some good in explicitly encouraging (via a blog post) for people to use beta</p>",
        "id": 238772950,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001518
    },
    {
        "content": "<p>My view is that the only reason to backport things is if the current stable experience is borderline unusable for people</p>",
        "id": 238773012,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001533
    },
    {
        "content": "<p>I think the nicer error message and blog post may have helped</p>",
        "id": 238773041,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001545
    },
    {
        "content": "<p>Encouraging people to use the beta is not a bad middle ground at all.</p>",
        "id": 238773050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001549
    },
    {
        "content": "<p>(solely based on the decreased volume of issues)</p>",
        "id": 238773059,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001553
    },
    {
        "content": "<p>Do we have any notion of how many people consider stable unusable due to incremetal being disabled?</p>",
        "id": 238773102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001571
    },
    {
        "content": "<p>(Obviously they can opt back into it)</p>",
        "id": 238773113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001576
    },
    {
        "content": "<p>(but it doesn’t have the beta fixes then…)</p>",
        "id": 238773122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001584
    },
    {
        "content": "<p>Not sure. Certainly some expressed discontent with performance loss, but hard to say how widespread it is.</p>",
        "id": 238773176,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001611
    },
    {
        "content": "<p>I really like the idea of encouraging people to use beta and give us feedback. We're going to have to make the call in a few weeks whether to ship beta with incr enabled or disabled and we could really use the feedback to make a good decision.</p>",
        "id": 238773281,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621001652
    },
    {
        "content": "<p>Is there any reason someone would be able to upgrade to a 1.52.2 but not be able to change to beta? I cannot think of any.</p>",
        "id": 238773305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001660
    },
    {
        "content": "<p>okay</p>",
        "id": 238773333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001676
    },
    {
        "content": "<p>Policy to use only stable at work?</p>",
        "id": 238773338,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001676
    },
    {
        "content": "<p>Some kind of corporate IT policy around using \"beta\" software.</p>",
        "id": 238773342,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621001679
    },
    {
        "content": "<p>yeah I think those are the main ones I <del>can</del> failed to think of</p>",
        "id": 238773354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001687
    },
    {
        "content": "<p>Okay then. Lets nip \\#3 in the bud: We will <em>at most</em> encourage people to use the 1.53-beta</p>",
        "id": 238773467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001732
    },
    {
        "content": "<p>And <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> gave a great overview re \\#1</p>",
        "id": 238773545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001758
    },
    {
        "content": "<p>(sorry I'm late!) agree to be conservative on this, I'd really want to avoid a 1.52.3 disabling incremental compilation again</p>",
        "id": 238773602,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621001770
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238773467\">said</a>:</p>\n<blockquote>\n<p>Okay then. Lets nip \\#3 in the bud: We will <em>at most</em> encourage people to use the 1.53-beta</p>\n</blockquote>\n<p>I'm wondering... should we make a 1.52.2 with the fixes <em>but</em> still incr. comp. disabled?</p>",
        "id": 238773654,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621001800
    },
    {
        "content": "<p>Do we have a tracking issue somewhere that tracks all bugs and their status re. regression tests?</p>",
        "id": 238773660,
        "sender_full_name": "mw",
        "timestamp": 1621001803
    },
    {
        "content": "<p>On the other hand, a .3 may be better than a 1.53.1 disabling incremental again</p>",
        "id": 238773690,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001819
    },
    {
        "content": "<p>(not that we expect that)</p>",
        "id": 238773728,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238773654\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238773467\">said</a>:</p>\n<blockquote>\n<p>Okay then. Lets nip \\#3 in the bud: We will <em>at most</em> encourage people to use the 1.53-beta</p>\n</blockquote>\n<p>I'm wondering... should we make a 1.52.2 with the fixes <em>but</em> still incr. comp. disabled?</p>\n</blockquote>\n<p>which fixes? The ones that are currently in the beta?</p>",
        "id": 238773756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001848
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238773690\">said</a>:</p>\n<blockquote>\n<p>On the other hand, a .3 may be better than a 1.53.1 disabling incremental again</p>\n</blockquote>\n<p>are the two related?</p>",
        "id": 238773763,
        "sender_full_name": "mw",
        "timestamp": 1621001852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> All of the information is being centrally tracked in <a href=\"https://github.com/rust-lang/rust/issues/84970\">https://github.com/rust-lang/rust/issues/84970</a></p>",
        "id": 238773784,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001859
    },
    {
        "content": "<p>I don’t think I’d backport the stuff that landed so recently in nightly to stable.</p>",
        "id": 238773791,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001864
    },
    {
        "content": "<p>I'll add some extra information about the status of regression tests</p>",
        "id": 238773799,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238773791\">said</a>:</p>\n<blockquote>\n<p>I don’t think I’d backport the stuff that landed so recently in nightly to stable.</p>\n</blockquote>\n<p>yeah, I'm not sure about this myself either</p>",
        "id": 238773867,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621001884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you think we should put summaries in the description of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> for these status things?</p>",
        "id": 238773873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001884
    },
    {
        "content": "<p>(so that people don’t have to scroll through comments?)</p>",
        "id": 238773939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001909
    },
    {
        "content": "<p>sounds like a good idea</p>",
        "id": 238773968,
        "sender_full_name": "mw",
        "timestamp": 1621001924
    },
    {
        "content": "<p>that sounds look a good idea</p>",
        "id": 238773972,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621001925
    },
    {
        "content": "<p>okay</p>",
        "id": 238773985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001930
    },
    {
        "content": "<p>If we ship all the fixes on stable we'll almost certainly get more data as to their success than asking for beta usage. But, I do think encouraging usage of beta and pushing people and hopefully so they stick would be good, so I remain inclined to only do beta backports.</p>",
        "id": 238773987,
        "sender_full_name": "simulacrum",
        "timestamp": 1621001931
    },
    {
        "content": "<p>I think I’m in favor of focusing our energy on nightly-&gt;beta backports alone</p>",
        "id": 238774095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001975
    },
    {
        "content": "<p>w.r.t. this class of bugs, that is</p>",
        "id": 238774113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621001979
    },
    {
        "content": "<p>yeah that seems good</p>",
        "id": 238774186,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621002003
    },
    {
        "content": "<p>In terms of going so far as to make a blog post recommending use of beta: Such a post should wait until after a number of nightly-&gt;beta backports have happened, right?</p>",
        "id": 238774308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002045
    },
    {
        "content": "<p>Or is there value in recommending people shift even before backports happen?</p>",
        "id": 238774363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002066
    },
    {
        "content": "<p>until you're ready with known stuff fixed, yes</p>",
        "id": 238774365,
        "sender_full_name": "cuviper",
        "timestamp": 1621002066
    },
    {
        "content": "<p>Probably, though, I think Carol's experience suggests it may not even be necessary.</p>",
        "id": 238774400,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002078
    },
    {
        "content": "<p>yeah that’s an interesting case</p>",
        "id": 238774415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002086
    },
    {
        "content": "<p>I think we should have it drafted soon</p>",
        "id": 238774432,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002090
    },
    {
        "content": "<p>The predicates_of issue was by far the most reported issue and the fix made the beta cut already.</p>",
        "id": 238774462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621002098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238774400\">said</a>:</p>\n<blockquote>\n<p>Probably, though, I think Carol's experience suggests it may not even be necessary.</p>\n</blockquote>\n<p>what is that exactly?</p>",
        "id": 238774497,
        "sender_full_name": "mw",
        "timestamp": 1621002111
    },
    {
        "content": "<p>She switched to beta and didn't run into any further problems where as she had been hitting the ICE every time she tried to compile before that.</p>",
        "id": 238774594,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621002140
    },
    {
        "content": "<p>ah ok</p>",
        "id": 238774610,
        "sender_full_name": "mw",
        "timestamp": 1621002148
    },
    {
        "content": "<p>thanks!</p>",
        "id": 238774621,
        "sender_full_name": "mw",
        "timestamp": 1621002153
    },
    {
        "content": "<p>but we do have two good fixes just merged/in the queue</p>",
        "id": 238774709,
        "sender_full_name": "mw",
        "timestamp": 1621002198
    },
    {
        "content": "<p>link to carol’s msg: <a href=\"#narrow/stream/131828-t-compiler/topic/unstable.20fingerprints.20-.20actually.20in.201.2E52/near/238210932\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/unstable.20fingerprints.20-.20actually.20in.201.2E52/near/238210932</a></p>",
        "id": 238774721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002203
    },
    {
        "content": "<p>might be a good idea to wait for those at least</p>",
        "id": 238774740,
        "sender_full_name": "mw",
        "timestamp": 1621002210
    },
    {
        "content": "<p>so maybe we need a table at the top of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> where each row is a known issue, and the columns are: “short id name\", issue number, “fixed in nightly Y/N”, “fixed in beta Y/N”, “has regression test Y/N” ?</p>",
        "id": 238774926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002293
    },
    {
        "content": "<p>that sounds great</p>",
        "id": 238774968,
        "sender_full_name": "mw",
        "timestamp": 1621002313
    },
    {
        "content": "<p>I can work on that, unless <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ’s already finished it! :)</p>",
        "id": 238775037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> when do you think you’d want a blog post recommending beta by? (Lets assume all backports land fast)</p>",
        "id": 238775229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002410
    },
    {
        "content": "<p>Hm, basically once we have that beta - maybe Thursday next week?</p>",
        "id": 238775297,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002439
    },
    {
        "content": "<p>(I guess publishing on the Monday or Tuesday after that)</p>",
        "id": 238775379,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002473
    },
    {
        "content": "<p>Could go sooner, but I don't think it's hugely necessary</p>",
        "id": 238775449,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002488
    },
    {
        "content": "<p>okay</p>",
        "id": 238775473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002496
    },
    {
        "content": "<p>how are we on the state of the diagnostic itself?</p>",
        "id": 238775508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002508
    },
    {
        "content": "<p>we happy with what it currently prints?</p>",
        "id": 238775527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002517
    },
    {
        "content": "<p>Okay I’ll take the <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> ’s as a yes</p>",
        "id": 238775603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002554
    },
    {
        "content": "<p>that’s the heart of what I wanted to cover today, I think. This is amazing response, y’all.</p>",
        "id": 238775811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002624
    },
    {
        "content": "<p>At some point, we may want to do a more complete retrospective on the whole affair, but that’s not what I wanted to do today.</p>",
        "id": 238775878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002646
    },
    {
        "content": "<p>The only other thing I can imagine talking about is brainstorming strategies to make it easier for people to give us useful bug reports here</p>",
        "id": 238775974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002687
    },
    {
        "content": "<p>question: do we have CI builds that run with debug assertions enabled?</p>",
        "id": 238775991,
        "sender_full_name": "mw",
        "timestamp": 1621002693
    },
    {
        "content": "<p>IIRC, yes</p>",
        "id": 238776004,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002700
    },
    {
        "content": "<p>I believe so, yes</p>",
        "id": 238776007,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002702
    },
    {
        "content": "<p>I was musing earlier this week of trying to recommend people use <code>rr</code> on their <code>rustc</code> runs when this happens, and then do <code>rr pack</code> and send us the trace.</p>",
        "id": 238776036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002719
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75199\">https://github.com/rust-lang/rust/pull/75199</a></p>",
        "id": 238776046,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002722
    },
    {
        "content": "<p>Not on macOS I think? But otherwise yes, iirc</p>",
        "id": 238776097,
        "sender_full_name": "simulacrum",
        "timestamp": 1621002731
    },
    {
        "content": "<p>I think I tried using rr on rustc once before, and ran into issues</p>",
        "id": 238776119,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002737
    },
    {
        "content": "<p>I'll try again and see</p>",
        "id": 238776162,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002757
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I don’t use it all the time, but I do try it out when I’m exploring things or have a really nasty bug</p>",
        "id": 238776214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002775
    },
    {
        "content": "<p>I'd like to get things tested more and it would be great to have ways of doing more expensive testing too (like running -Zverify-ich unconditionally)</p>",
        "id": 238776298,
        "sender_full_name": "mw",
        "timestamp": 1621002792
    },
    {
        "content": "<p>However, I'm not sure how helpful rr will be for these kinds of incremental issues</p>",
        "id": 238776316,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002796
    },
    {
        "content": "<p>from what I can recall, any issues I had were more general problems with our debuginfo in general; i.e. the <code>rr</code> problems are really <code>gdb</code>/dwarf problems.</p>",
        "id": 238776333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002803
    },
    {
        "content": "<p>Often, the problem is figuring out what the <em>other</em> possible state is</p>",
        "id": 238776335,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002805
    },
    {
        "content": "<p>e.g. what the original value of the query was before the fingerprint changed</p>",
        "id": 238776355,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238776298\">said</a>:</p>\n<blockquote>\n<p>I'd like to get things tested more and it would be great to have ways of doing more expensive testing too (like running -Zverify-ich unconditionally)</p>\n</blockquote>\n<p>I thought we <em>were</em> running <code>-Zverify-ich</code> ?</p>",
        "id": 238776381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002830
    },
    {
        "content": "<p>I.e. I thought that was what caused this whole thing?</p>",
        "id": 238776396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002839
    },
    {
        "content": "<p>only for things that are being recomputed</p>",
        "id": 238776455,
        "sender_full_name": "mw",
        "timestamp": 1621002845
    },
    {
        "content": "<p>oh oh</p>",
        "id": 238776465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002850
    },
    {
        "content": "<p>i see</p>",
        "id": 238776471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002851
    },
    {
        "content": "<p>that should be the dangerous case</p>",
        "id": 238776503,
        "sender_full_name": "mw",
        "timestamp": 1621002862
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/pull/84227\">https://github.com/rust-lang/rust/pull/84227</a> for an attempt at enabling it always</p>",
        "id": 238776516,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002866
    },
    {
        "content": "<p>I'm going to try running the worst benchmarks under <code>perf</code>, and see if there's anything we can do to speed them up</p>",
        "id": 238776599,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238776119\">said</a>:</p>\n<blockquote>\n<p>I think I tried using rr on rustc once before, and ran into issues</p>\n</blockquote>\n<p>(reach out to me if you get a chance to try it again and run into issues again.)</p>",
        "id": 238776615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002905
    },
    {
        "content": "<p>maybe there are some frequently-hashed values that we could try caching</p>",
        "id": 238776630,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> will do, thanks :)</p>",
        "id": 238776648,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002915
    },
    {
        "content": "<p>is there a useful way to throw crater at that PR?</p>",
        "id": 238776712,
        "sender_full_name": "cuviper",
        "timestamp": 1621002939
    },
    {
        "content": "<p>unfortunately, no</p>",
        "id": 238776800,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002968
    },
    {
        "content": "<p>Can someone talk me out of having <code>cargo build</code> take snapshots of the crate’s source code, for purposes of reproducing incr-comp bugs?</p>",
        "id": 238776813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621002973
    },
    {
        "content": "<p>since it requires a minimum of two runs</p>",
        "id": 238776824,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621002977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> what we would want is some way of integrating <a href=\"https://github.com/nikomatsakis/cargo-incremental\">https://github.com/nikomatsakis/cargo-incremental</a> into crater</p>",
        "id": 238776874,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003005
    },
    {
        "content": "<p>or a way of running it automatically on a large number of crates</p>",
        "id": 238776888,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238776813\">said</a>:</p>\n<blockquote>\n<p>Can someone talk me out of having <code>cargo build</code> take snapshots of the crate’s source code, for purposes of reproducing incr-comp bugs?</p>\n</blockquote>\n<p>I've you can make that work without freaking folks out about privacy</p>",
        "id": 238776911,
        "sender_full_name": "mw",
        "timestamp": 1621003027
    },
    {
        "content": "<p>I wouldn’t have it ship it to us</p>",
        "id": 238776940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003044
    },
    {
        "content": "<p>but even just copying it into <code>target/</code> is problematic, you think?</p>",
        "id": 238776982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003063
    },
    {
        "content": "<p>I'm not sure -- copying source code might be sensitive</p>",
        "id": 238777100,
        "sender_full_name": "mw",
        "timestamp": 1621003095
    },
    {
        "content": "<p>Even without a network connection it will rustle feathers</p>",
        "id": 238777171,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003121
    },
    {
        "content": "<p>I picked the wrong business. :)</p>",
        "id": 238777207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003136
    },
    {
        "content": "<p>But having an optin flag in cargo.toml that we mention in the error could work</p>",
        "id": 238777235,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003147
    },
    {
        "content": "<p>but I don't want to discourage such a thing. just saying that is something to look out for</p>",
        "id": 238777236,
        "sender_full_name": "mw",
        "timestamp": 1621003148
    },
    {
        "content": "<p>And an unconditional warning when it is detected as on</p>",
        "id": 238777272,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003161
    },
    {
        "content": "<p>yeah okay, an opt-in could be better way to go, sure.</p>",
        "id": 238777286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003168
    },
    {
        "content": "<p>if it is more like a bug-reporting tool that one uses when running into an error, the perception would be rather different, I think</p>",
        "id": 238777400,
        "sender_full_name": "mw",
        "timestamp": 1621003209
    },
    {
        "content": "<p>Don't want to sour the mood before we <em>actually</em> start collecting real metrics <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 238777414,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003214
    },
    {
        "content": "<p>Yes which is why it should be a \"this is not expected to be on all the time\" kind of thing</p>",
        "id": 238777494,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003247
    },
    {
        "content": "<p>I think an unconditional warning feels like overkill myself</p>",
        "id": 238777529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003263
    },
    {
        "content": "<p>(i'm skimming the thread)</p>",
        "id": 238777536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777400\">said</a>:</p>\n<blockquote>\n<p>if it is more like a bug-reporting tool that one uses when running into an error, the perception would be rather different, I think</p>\n</blockquote>\n<p>right. WHa tI had in mind is: 1. snapshot source code. 2. have cargo detect certain ICE’s; 3. upon seeing the ICE’s, tar up the source for the last successful compile, and print the diff from that source.</p>",
        "id": 238777551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003271
    },
    {
        "content": "<p>but I would probably say that an RFC would be the place to start</p>",
        "id": 238777557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003275
    },
    {
        "content": "<p>People might have very sensitive stuff in their codebases that they expect to be deleted and would not be</p>",
        "id": 238777572,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003283
    },
    {
        "content": "<p>or at least post a plan on Inside Rust</p>",
        "id": 238777582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003290
    },
    {
        "content": "<p>(opt-in is good)</p>",
        "id": 238777607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003304
    },
    {
        "content": "<p>I would suggest that it involves running a command that one normally does not run</p>",
        "id": 238777632,
        "sender_full_name": "mw",
        "timestamp": 1621003319
    },
    {
        "content": "<p>i.e. just a helper for producing a bug report</p>",
        "id": 238777683,
        "sender_full_name": "mw",
        "timestamp": 1621003330
    },
    {
        "content": "<p>right</p>",
        "id": 238777692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003334
    },
    {
        "content": "<p>the problem is</p>",
        "id": 238777706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003339
    },
    {
        "content": "<p>(one option may be to snapshot it in git state, so that there's not an \"extra\" copy perse)</p>",
        "id": 238777711,
        "sender_full_name": "simulacrum",
        "timestamp": 1621003343
    },
    {
        "content": "<p>you want people to be using it all the time</p>",
        "id": 238777713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003343
    },
    {
        "content": "<p>in particular, I think people usually can't reproduce the problems easily, right?</p>",
        "id": 238777755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003360
    },
    {
        "content": "<p>you want them to be able to opt-in, do their normal thing, and then when they hit the bug, be able to package it up</p>",
        "id": 238777782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003371
    },
    {
        "content": "<p>I have the feeling they usually can</p>",
        "id": 238777795,
        "sender_full_name": "mw",
        "timestamp": 1621003376
    },
    {
        "content": "<p>a warning would be ok to start I suppose</p>",
        "id": 238777796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003376
    },
    {
        "content": "<p>I could be totally wrong, but don't we actually need the state of the incremental cache in addition to the source code? I'm not sure the state of the cache can be derived from just the source code of the prior state.</p>",
        "id": 238777836,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621003390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I've seen a lot of issues where people can't reproduce it</p>",
        "id": 238777837,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003392
    },
    {
        "content": "<p>Yeah, but I think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ’s take of “First time you see the error, you turn the flag on, and then you leave it on for all future dev” makes some sense</p>",
        "id": 238777861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> hm, ok</p>",
        "id": 238777872,
        "sender_full_name": "mw",
        "timestamp": 1621003412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777796\">said</a>:</p>\n<blockquote>\n<p>a warning would be ok to start I suppose</p>\n</blockquote>\n<p>I was initially thinking it would be bad, but i guess I was over-rotating. as long as it's unobtrusive.</p>",
        "id": 238777879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777861\">said</a>:</p>\n<blockquote>\n<p>Yeah, but I think <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> ’s take of “First time you see the error, you turn the flag on, and then you leave it on for all future dev” makes some sense</p>\n</blockquote>\n<p>are you suggesting this as a problem?</p>",
        "id": 238777910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003431
    },
    {
        "content": "<p>maybe we can have the flag hvae 3 states</p>",
        "id": 238777930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003438
    },
    {
        "content": "<p>\"on / warn / off\"</p>",
        "id": 238777958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003444
    },
    {
        "content": "<p>I for example just want it to be on :)</p>",
        "id": 238777986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003447
    },
    {
        "content": "<p>and i dont' want to get a warning</p>",
        "id": 238777998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777836\">said</a>:</p>\n<blockquote>\n<p>I could be totally wrong, but don't we actually need the state of the incremental cache in addition to the source code? I'm not sure the state of the cache can be derived from just the source code of the prior state.</p>\n</blockquote>\n<p>I had thought we were trying to ensure the incremental cache was based solely on the prior run. Or at least couldn’t accumulate state from all prior compiles.</p>",
        "id": 238778004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003452
    },
    {
        "content": "<p>I guess I'm questioning if that's currently the case.</p>",
        "id": 238778051,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621003471
    },
    {
        "content": "<p>that's the goal at least</p>",
        "id": 238778054,
        "sender_full_name": "mw",
        "timestamp": 1621003472
    },
    {
        "content": "<p>If there are bugs, that might not be the case</p>",
        "id": 238778068,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777910\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777861\">said</a>:</p>\n<blockquote>\n<p>Yeah, but I think <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> ’s take of “First time you see the error, you turn the flag on, and then you leave it on for all future dev” makes some sense</p>\n</blockquote>\n<p>are you suggesting this as a problem?</p>\n</blockquote>\n<p>No, I meant that was the expected usage pattern.</p>",
        "id": 238778075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003483
    },
    {
        "content": "<p>for example, if we decode something from the incremental cache in a weird way</p>",
        "id": 238778099,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003490
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777930\">said</a>:</p>\n<blockquote>\n<p>maybe we can have the flag hvae 3 states</p>\n</blockquote>\n<p>(I want to make sure folks see this; I think it's a good sol'n)</p>",
        "id": 238778124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003504
    },
    {
        "content": "<p>which is of course the exact kind of case we're worried about <span aria-label=\"weary\" class=\"emoji emoji-1f629\" role=\"img\" title=\"weary\">:weary:</span></p>",
        "id": 238778131,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003508
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238778054\">said</a>:</p>\n<blockquote>\n<p>that's the goal at least</p>\n</blockquote>\n<p>Right. I at least know that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> (rightly) forced me to revise a PR of mine that broke that invariant</p>",
        "id": 238778161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238778124\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238777930\">said</a>:</p>\n<blockquote>\n<p>maybe we can have the flag hvae 3 states</p>\n</blockquote>\n<p>(I want to make sure folks see this; I think it's a good sol'n)</p>\n</blockquote>\n<p>sure, and the default would be “off”, yeah?</p>",
        "id": 238778219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003548
    },
    {
        "content": "<p>We need to be very careful not to get ourselves in the same situation audacity did recently by accident. A lot of people will be fine with it either way and trust us to be good actors, but those that don't <em>really don't</em> and would be a PR niggtmare.</p>",
        "id": 238778275,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003563
    },
    {
        "content": "<p>This seems like the kind of thing that it would be amazing to have a tool that could test it. cp the current incr cache somewhere, run cargo build, assert the new and old caches are equivalent.</p>",
        "id": 238778324,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621003581
    },
    {
        "content": "<p>Okay. It sounds like something we’d want community feedback on</p>",
        "id": 238778334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003585
    },
    {
        "content": "<p>so probably worthy of an RFC, as <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> suggested.</p>",
        "id": 238778364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238778324\">said</a>:</p>\n<blockquote>\n<p>This seems like the kind of thing that it would be amazing to have a tool that could test it. cp the current incr cache somewhere, run cargo build, assert the new and old caches are equivalent.</p>\n</blockquote>\n<p>mw built tooling like this fyi</p>",
        "id": 238778368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003600
    },
    {
        "content": "<p>Can this be done purely as a cargo plugin?</p>",
        "id": 238778385,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003610
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 238778423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003627
    },
    {
        "content": "<p>that tooling is rather outdated but something like it would be great</p>",
        "id": 238778438,
        "sender_full_name": "mw",
        "timestamp": 1621003632
    },
    {
        "content": "<p>but we could prototype it</p>",
        "id": 238778440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003634
    },
    {
        "content": "<p><code>cargo install ice-report</code></p>",
        "id": 238778456,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621003642
    },
    {
        "content": "<p>i.e., it'd be better to have <code>cargo log-build</code> than nothing</p>",
        "id": 238778461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003644
    },
    {
        "content": "<p>maybe that's even good enough I guess</p>",
        "id": 238778477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003651
    },
    {
        "content": "<p>I would prefer it's just \"always on' for anything i work on</p>",
        "id": 238778504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003662
    },
    {
        "content": "<p>but I could probably teach myself to use some alias</p>",
        "id": 238778521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003668
    },
    {
        "content": "<p>(lets go all the way to full telemetry!)</p>",
        "id": 238778524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003670
    },
    {
        "content": "<p>/me shuts self up</p>",
        "id": 238778533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003677
    },
    {
        "content": "<p>well in all seriousness</p>",
        "id": 238778622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003687
    },
    {
        "content": "<p>We really could have used telemetry here</p>",
        "id": 238778636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003695
    },
    {
        "content": "<p>opt-in like that would let us build the infra and figure out what we want</p>",
        "id": 238778638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003695
    },
    {
        "content": "<p>without the privacy concerns and controversy</p>",
        "id": 238778671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003710
    },
    {
        "content": "<p>it could have informed our decisions all along this path <em>a lot</em></p>",
        "id": 238778672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003712
    },
    {
        "content": "<p>or at least strongly mitigating them</p>",
        "id": 238778678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003714
    },
    {
        "content": "<p>and that would make it easier to take future stps</p>",
        "id": 238778698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003724
    },
    {
        "content": "<p>I think I've changed my mind :)</p>",
        "id": 238778709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003729
    },
    {
        "content": "<p>Wait, where did you change your mind?</p>",
        "id": 238778731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003743
    },
    {
        "content": "<p>I think I changed from 'let's make a cargo flag that one can turn on' to 'let's see if we can do this externally with a cargo command like log-build'</p>",
        "id": 238778785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003767
    },
    {
        "content": "<p>Ah okay</p>",
        "id": 238778797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003773
    },
    {
        "content": "<p>an RFC would come later</p>",
        "id": 238778831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003792
    },
    {
        "content": "<p>Okay so there’s some good ideas in all that then.</p>",
        "id": 238778846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003795
    },
    {
        "content": "<p>it starts as an experiment</p>",
        "id": 238778849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003796
    },
    {
        "content": "<p>sounds good to me</p>",
        "id": 238778928,
        "sender_full_name": "mw",
        "timestamp": 1621003815
    },
    {
        "content": "<p>(good policy in general...)</p>",
        "id": 238778969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003835
    },
    {
        "content": "<p>Are there any immediate action items? I said I would work on making a table at top of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a>. And I can work on blog post advocating people to use the beta release. Does anyone want to help co-author the blog post?</p>",
        "id": 238778984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003845
    },
    {
        "content": "<p>I couldn't tell from the scrollback: do we still think there are unfixed errors involving traits or other areas I \"own\"? :)</p>",
        "id": 238779044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003872
    },
    {
        "content": "<p>We have a slew of beta-backport decisions to make.</p>",
        "id": 238779052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003876
    },
    {
        "content": "<p>Should we set a deadline for that?</p>",
        "id": 238779067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238778984\">said</a>:</p>\n<blockquote>\n<p>Are there any immediate action items? I said I would work on making a table at top of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a>. And I can work on blog post advocating people to use the beta release. Does anyone want to help co-author the blog post?</p>\n</blockquote>\n<p>I would be happy to help!</p>",
        "id": 238779095,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1621003901
    },
    {
        "content": "<p>next triage meeting?</p>",
        "id": 238779097,
        "sender_full_name": "mw",
        "timestamp": 1621003901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238779044\">said</a>:</p>\n<blockquote>\n<p>I couldn't tell from the scrollback: do we still think there are unfixed errors involving traits or other areas I \"own\"? :)</p>\n</blockquote>\n<p>Based on <a href=\"https://github.com/rust-lang/rust/issues/84970#issuecomment-836916981\">wesley’s comment</a>, there are still unchecked boxes related to <code>evaluate_obligation</code> ?</p>",
        "id": 238779170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003926
    },
    {
        "content": "<p>Some of them just haven't been updated yet</p>",
        "id": 238779209,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-05-14.20fingerprints.2C.201.2E52.2E2.3F.20.2384970/near/238779097\">said</a>:</p>\n<blockquote>\n<p>next triage meeting?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you said you wanted blog post by Thursday. Next triage meeting is too late to make beta-backport decisions and make that deadline for blog post.</p>",
        "id": 238779241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003955
    },
    {
        "content": "<p>Hmmm not sure I follow</p>",
        "id": 238779292,
        "sender_full_name": "simulacrum",
        "timestamp": 1621003977
    },
    {
        "content": "<p>Oh sorry</p>",
        "id": 238779308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> There's <a href=\"https://github.com/rust-lang/rust/issues/84963\">https://github.com/rust-lang/rust/issues/84963</a></p>",
        "id": 238779314,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003985
    },
    {
        "content": "<p>I targeted Monday/Tuesday next week for publication</p>",
        "id": 238779336,
        "sender_full_name": "simulacrum",
        "timestamp": 1621003991
    },
    {
        "content": "<p>that's the only trait-related ICE I'm aware of</p>",
        "id": 238779342,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621003993
    },
    {
        "content": "<p>I assume dependencies here are</p>",
        "id": 238779343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621003993
    },
    {
        "content": "<p>Er, next next week</p>",
        "id": 238779354,
        "sender_full_name": "simulacrum",
        "timestamp": 1621003999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ok, i will dig into it</p>",
        "id": 238779355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621003999
    },
    {
        "content": "<p>beta-backports should happen <em>before</em> blog post</p>",
        "id": 238779362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004004
    },
    {
        "content": "<p>oh oh oh</p>",
        "id": 238779369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004006
    },
    {
        "content": "<p><strong>next next</strong> week is crucial</p>",
        "id": 238779383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004013
    },
    {
        "content": "<p>I just want the blog post in hand</p>",
        "id": 238779395,
        "sender_full_name": "simulacrum",
        "timestamp": 1621004018
    },
    {
        "content": "<p>fortunately, the root cause is much simpler than the other one. I'm not sure what the best fix is, though</p>",
        "id": 238779408,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621004023
    },
    {
        "content": "<p>so we’d be planning to put out blog post on Monday May 24 or Tuesday May 25th, right?</p>",
        "id": 238779490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004046
    },
    {
        "content": "<p>In that case, next week’s triage meeting is a fine place to decide about the beta backports, I think.</p>",
        "id": 238779525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004061
    },
    {
        "content": "<p>Yes, that sounds good</p>",
        "id": 238779545,
        "sender_full_name": "simulacrum",
        "timestamp": 1621004074
    },
    {
        "content": "<p>awesome</p>",
        "id": 238779552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004079
    },
    {
        "content": "<p>If we have a lot, it may be useful to spend some time on criteria for this set - maybe we can batch approve</p>",
        "id": 238779593,
        "sender_full_name": "simulacrum",
        "timestamp": 1621004101
    },
    {
        "content": "<p>one thought I just had</p>",
        "id": 238779622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004114
    },
    {
        "content": "<p>(or if we want data of some kind, questions answered)</p>",
        "id": 238779634,
        "sender_full_name": "simulacrum",
        "timestamp": 1621004117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> had mused about backporting fixes to stable</p>",
        "id": 238779660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004128
    },
    {
        "content": "<p>no actually never mind</p>",
        "id": 238779668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004134
    },
    {
        "content": "<p>(I was going to make some argument based on hypothetical person bisecting over stable release history)</p>",
        "id": 238779692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004148
    },
    {
        "content": "<p>I still think that if we do that it would be at least two weeks from now, and by then it makes sense to wait</p>",
        "id": 238779718,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1621004162
    },
    {
        "content": "<p>(but then realized such a person is going to hit the incr-comp being disabled regardless)</p>",
        "id": 238779768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004168
    },
    {
        "content": "<p>yeah okay</p>",
        "id": 238779818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004197
    },
    {
        "content": "<p>awesome</p>",
        "id": 238779828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004200
    },
    {
        "content": "<p>anything else, from anyone? Any announcements?</p>",
        "id": 238779858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004210
    },
    {
        "content": "<p>I do want to thank the members of <span class=\"user-group-mention\" data-user-group-id=\"2907\">@T-release</span> who came</p>",
        "id": 238779886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004229
    },
    {
        "content": "<p>and thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for joining! BIg bug events like this are not fun, but lets try to leverage the current energy and make something even better out of it. Thanks y’all!</p>",
        "id": 238780049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1621004305
    },
    {
        "content": "<p>I've added a table to <a href=\"https://github.com/rust-lang/rust/issues/84970#issue-877005793\">https://github.com/rust-lang/rust/issues/84970#issue-877005793</a></p>",
        "id": 238782253,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621005203
    }
]