[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at 2pm UTC</p>",
        "id": 203975307,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594828923
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization\">#t-compiler/wg-prioritization</a></p>",
        "id": 203975356,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594828932
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/VvJtaPR3TtS0sKBqcCVgeg?view\">meeting agenda</a></p>",
        "id": 203975419,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594828961
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> and <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span></p>",
        "id": 203975514,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594829016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> do you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span>? otherwise I can, I think our check-ins document is more or less up to date :)</p>",
        "id": 203975653,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594829075
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>?</p>",
        "id": 203975713,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594829102
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> the agenda looks very light right now, we will be trying to populate it a bit more but please consider nominating issues that you find important or things that you want to raise awareness or move forward</p>",
        "id": 203976839,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594829596
    },
    {
        "content": "<p>One small thing that might be worth discussing is <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/discord.20channel\">#t-compiler &gt; discord channel</a></p>",
        "id": 203982332,
        "sender_full_name": "davidtwco",
        "timestamp": 1594832219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/203975713\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>?</p>\n</blockquote>\n<p>I have a couple of talking points that are relevant to WG, though not necessarily a part of the WG work.</p>",
        "id": 203985180,
        "sender_full_name": "nagisa",
        "timestamp": 1594833634
    },
    {
        "content": "<p>We should probably discuss the LLVM 11 upgrade in <a href=\"https://github.com/rust-lang/rust/pull/73526\">https://github.com/rust-lang/rust/pull/73526</a>.</p>",
        "id": 203997444,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594839341
    },
    {
        "content": "<p>I might not be able to participate in today’s meeting so here’re some updates:</p>\n<ul>\n<li>As mentioned above, there’s LLVM11 upgrade on the horizon. The usual caveats etc apply. Potential regressions, improvements in compiler code output etc.</li>\n<li>In similar spirit been seeing an increased flow of issue reports about sub-optimal code generation, thuogh that's a very subjective evaluation;</li>\n<li>There's an ongoing effort by a community member to enable building targeting apple silicon with \"fat\" libraries. There are some complication in enabling this:<br>\n    * Upstream LLVM support for this is _dubious_ both now and possibly LLVM 11.<br>\n    * What kind of tier are we hoping to have for this target at launch time? I’d say just let it go through the usual process, but I can see logic in idea of having T2/T1 support at launch time.</li>\n</ul>",
        "id": 204073257,
        "sender_full_name": "nagisa",
        "timestamp": 1594900652
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 1 hour</p>",
        "id": 204079248,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594904473
    },
    {
        "content": "<p><a href=\"https://hackmd.io/VvJtaPR3TtS0sKBqcCVgeg?view\">Check out the meeting agenda</a></p>",
        "id": 204079308,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594904504
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 204087409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908156
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 204087451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908173
    },
    {
        "content": "<ul>\n<li>Rust 1.45 is being released today! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 204087484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908188
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/310\">compiler-team#310</a></li>\n<li>\"Add future-incompat entries to json diagnostic output\" <a href=\"https://github.com/rust-lang/compiler-team/issues/315\">compiler-team#315</a></li>\n<li>\"MCP: Reorganize the rust-lang/rust repo directory structure\" <a href=\"https://github.com/rust-lang/compiler-team/issues/316\">compiler-team#316</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204087592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908244
    },
    {
        "content": "<ul>\n<li><code>RichKadel</code> has been making progress on the LLVM code-coverage feature and we've got very basic support landing soon-ish. <a href=\"https://github.com/rust-lang/rust/pull/74091\">https://github.com/rust-lang/rust/pull/74091</a></li>\n</ul>",
        "id": 204087617,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594908260
    },
    {
        "content": "<p>(Rust 1.45 <em>is</em> released <a href=\"https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html\">https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html</a>)</p>",
        "id": 204087649,
        "sender_full_name": "simulacrum",
        "timestamp": 1594908280
    },
    {
        "content": "<p>By the way, I will say that I have a personal interest in the MCP for \"Add future-incompat entries to json diagnostic output\" <a href=\"https://github.com/rust-lang/compiler-team/issues/315\">compiler-team#315</a></p>",
        "id": 204087699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908307
    },
    {
        "content": "<p>Maybe its an abuse of \"power\", but I'm going to go ahead and try to solicit seconds from you all right now. :)</p>",
        "id": 204087768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908341
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Change <code>ty::Const</code> to an integer tree representation\" <a href=\"https://github.com/rust-lang/compiler-team/issues/323\">compiler-team#323</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Improve defaults in x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/326\">compiler-team#326</a></li>\n<li>\"Rework rustc_serialize\" <a href=\"https://github.com/rust-lang/compiler-team/issues/329\">compiler-team#329</a></li>\n<li>\"Use <code>tracing</code> instead of <code>log</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/331\">compiler-team#331</a></li>\n<li>\"Stabilize control-flow-guard codegen option\" <a href=\"https://github.com/rust-lang/rust/pull/73893\">rust#73893</a></li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>\"--extern-location to specify where an --extern dependency is defined\" <a href=\"https://github.com/rust-lang/compiler-team/issues/303\">compiler-team#303</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204087882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908386
    },
    {
        "content": "<ul>\n<li>Finalized FCPs<ul>\n<li>\"Stabilize const_type_id feature\" <a href=\"https://github.com/rust-lang/rust/pull/72488\">rust#72488</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204087967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908437
    },
    {
        "content": "<ul>\n<li>Should we close #compiler channel on Discord?<ul>\n<li>This was briefly discussed on <a href=\"#narrow/stream/131828-t-compiler/topic/discord.20channel\">Zulip</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204087988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908449
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> made a direct petition against use of discord for OSS projects</p>",
        "id": 204088138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908515
    },
    {
        "content": "<p>(at this point it's largely just a sinkhole catching unsuspecting question-askers)</p>",
        "id": 204088230,
        "sender_full_name": "eddyb",
        "timestamp": 1594908568
    },
    {
        "content": "<p>(who may not be aware that almost everything moved to Zulip)</p>",
        "id": 204088274,
        "sender_full_name": "eddyb",
        "timestamp": 1594908591
    },
    {
        "content": "<p>So, does anyone here object to closing the <code>#compiler</code> channel on Discord? The only reason I can imagine to keep it open at this point is the same reason that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> says they remain there: To try to catch questions from people who are unaware of Zulip</p>",
        "id": 204088275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908591
    },
    {
        "content": "<p>locking the channel with a message is far more useful for that</p>",
        "id": 204088341,
        "sender_full_name": "eddyb",
        "timestamp": 1594908613
    },
    {
        "content": "<p>which is what we already did to a handful of other channels anyway</p>",
        "id": 204088361,
        "sender_full_name": "eddyb",
        "timestamp": 1594908626
    },
    {
        "content": "<p>it's nothing new</p>",
        "id": 204088383,
        "sender_full_name": "eddyb",
        "timestamp": 1594908634
    },
    {
        "content": "<p>Okay. I don't think this requires any further approval? I assume that <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> was accurate when they said that they and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> were the main holdouts</p>",
        "id": 204088494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908680
    },
    {
        "content": "<p>I don't think it requires further approval.</p>",
        "id": 204088542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594908705
    },
    {
        "content": "<p>I think the most recent one was <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> locking #wg-compiler-performance</p>",
        "id": 204088617,
        "sender_full_name": "eddyb",
        "timestamp": 1594908728
    },
    {
        "content": "<p>I occasionally pop into #compiler on Discord but I'm strongly in favor of locking it and redirecting people here.</p>",
        "id": 204088644,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594908741
    },
    {
        "content": "<p>okay. Lets lock channel with a message. I'll look into making sure that happens after the meeting (or if someone with authority can do it before then, thats fine with me.)</p>",
        "id": 204088646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908742
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 204088668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908757
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin by <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pulls?page=1&amp;q=closed%3A%3E%3D2020-05-28\">68 merged PRs!</a> In fact, there was so much stuff, that we ran out of time to curate it... here is a prefix of the list of PRs (heavily biased towards earlier PRs); there are so many people that deserve credit:<br>\n- Aaron Hill<br>\n- Andy Russell<br>\n- Bastian Kauschke<br>\n- Drew Youngwerth<br>\n- Eric Huss<br>\n- Florian Gilcher<br>\n- Ivan Veselov<br>\n- Joshua Nelson<br>\n- mark-i-m<br>\n- Matt Kraai<br>\n- Nadrieril<br>\n- Niko Matsakis<br>\n- pierwill<br>\n- Ralf Jung<br>\n- Santiago Pastorino<br>\n- Takayuki Nakata<br>\n- ThePuzzlemaker<br>\n- Tomasz Miąsko<br>\n- Tom Eccles<br>\n- Yuki Okushi<br>\n</p>\n</blockquote>",
        "id": 204088696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908776
    },
    {
        "content": "<p>/me takes a breath</p>",
        "id": 204088715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908788
    },
    {
        "content": "<blockquote>\n<p>Accomplished:</p>\n<ul>\n<li>Tons of new content:<ul>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/731\">Getting Started Guide</a> + many improvements</li>\n<li>Type-system <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/697\">rustc-dev-guide#697</a></li>\n<li>Diagnostics <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/716\">rustc-dev-guide#716</a></li>\n<li>Building and testing <code>rustc</code> <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/723\">rustc-dev-guide#723</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/727\">rustc-dev-guide#727</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/728\">rustc-dev-guide#728</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/729\">rustc-dev-guide#729</a>, and many more</li>\n<li>Writing tests <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/724\">rustc-dev-guide#724</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/725\">rustc-dev-guide#725</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/749\">rustc-dev-guide#749</a> </li>\n</ul>\n</li>\n<li>Updates to various current content:<ul>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/713\">Lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/715\"><code>TyKind::Error</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/735\">Coding Conventions</a></li>\n<li>Notification Groups <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/739\">rustc-dev-guide#739</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/740\">rustc-dev-guide#740</a>, and more </li>\n</ul>\n</li>\n<li>Some reorganization:<ul>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/753\">rustc-dev-guide#753</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/752\">rustc-dev-guide#752</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/763\">rustc-dev-guide#763</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/764\">rustc-dev-guide#764</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/767\">rustc-dev-guide#767</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/768\">rustc-dev-guide#768</a>, <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/773\">rustc-dev-guide#773</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 204088744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908801
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> checkin by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>:</p>\n<blockquote>\n<ul>\n<li>As mentioned above, there’s LLVM11 upgrade on the horizon. The usual caveats etc apply. Potential regressions, improvements in compiler code output etc.</li>\n<li>In similar spirit been seeing an increased flow of issue reports about sub-optimal code generation, thuogh that's a very subjective evaluation;</li>\n<li>There's an ongoing effort by a community member to enable building targeting apple silicon with \"fat\" libraries. There are some complication in enabling this:<blockquote>\n<p>* Upstream LLVM support for this is _dubious_ both now and possibly LLVM 11.<br>\n   * What kind of tier are we hoping to have for this target at launch time? I’d say just let it go through the usual process, but I can see logic in idea of having T2/T1 support at launch time.</p>\n</blockquote>\n</li>\n</ul>\n</blockquote>",
        "id": 204088785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908826
    },
    {
        "content": "<p>Wow, that's awesome</p>",
        "id": 204088786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594908826
    },
    {
        "content": "<p>Regarding support for Apple silicon, <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> has been tracking that (they're not on this stream), and we created a tracking issue, but I would say that we're planning to walk that support through our usual processes. I've been reaching out to some folks at Apple as well to see if we can get some support from that angle, though nothing to announce there yet.</p>",
        "id": 204088958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594908905
    },
    {
        "content": "<p>Its really hard for me to predict where (the) Apple will fall on this</p>",
        "id": 204089073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594908956
    },
    {
        "content": "<p>there's <a class=\"stream\" data-stream-id=\"242906\" href=\"/#narrow/stream/242906-t-compiler.2Farm\">#t-compiler/arm</a> btw for related discussion</p>",
        "id": 204089126,
        "sender_full_name": "eddyb",
        "timestamp": 1594908966
    },
    {
        "content": "<p>(by the way, it appears that <code>:point_of_information:</code> has been replaced with <code>:wait_one_second:</code>, and so I've started using <code>:point_up:</code> ( <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> )  instead)</p>",
        "id": 204089220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909018
    },
    {
        "content": "<p>I found it hard to distinguish those in any case..</p>",
        "id": 204089288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909052
    },
    {
        "content": "<p>(like, visually)</p>",
        "id": 204089294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909056
    },
    {
        "content": "<p>okay so now I think people have had enough fun with sign language</p>",
        "id": 204089507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909142
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>lint: use <code>transparent_newtype_field</code> to avoid ICE <a href=\"https://github.com/rust-lang/rust/pull/74340\">rust#74340</a><ul>\n<li>fix for Nightly ICEs trying to normalize during a cast <a href=\"https://github.com/rust-lang/rust/issues/73747\">rust#73747</a></li>\n<li>authored by @davidtwco and r+'ed by @pnkfelix</li>\n<li>(just barely missed the promotion from master to beta)</li>\n<li>pnkfelix would be fine with letting this simmer until next week.</li>\n</ul>\n</li>\n</ul>",
        "id": 204089513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909144
    },
    {
        "content": "<p>I beta-nominated this, but like I said, I'm fine with waiting until next week to decide about it</p>",
        "id": 204089607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909198
    },
    {
        "content": "<p>but I'm also fine with just diving in. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 204089792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909265
    },
    {
        "content": "<p>Anyway I'll take the approvals so far as a sign that we can beta-accept it.</p>",
        "id": 204089874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909302
    },
    {
        "content": "<p>(worst case scenario, with something backport this early, is that we'll eventually have to revert it in the next six weeks for some reason. I can live with that.)</p>",
        "id": 204089969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909325
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74340\">#74340</a>: beta-accepted</p>",
        "id": 204090001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909342
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>",
        "id": 204090013,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909350
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>",
        "id": 204090028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909359
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on T-compiler this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on libs-impl this time.</li>\n</ul>",
        "id": 204090044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909369
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">49 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">27 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 3 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 14 P-high, 46 P-medium, 4 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 204090060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909378
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No P-critical issues for T-compiler this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No P-critical issues for libs-impl this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No P-critical issues for T-rustdoc this time.</li>\n</ul>",
        "id": 204090084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909393
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>\n<ul>\n<li>No unassigned P-high beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>\n<ul>\n<li>No unassigned P-high nightly regressions this time.</li>\n</ul>",
        "id": 204090108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909402
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=0c03aee8b81185d65b5821518661c30ecdb42de5&amp;end=9d09331e00b02f81c714b0c41ce3a38380dd36a2&amp;absolute=false&amp;stat=instructions%3Au\">0c03aee8b81185d65b5821518661c30ecdb42de5..9d09331e00b02f81c714b0c41ce3a38380dd36a2</a>.</p>\n<p>12 revisions checked. Zero regressions, one improvement.</p>\n<p>Regressions</p>\n<ul>\n<li>None!</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/73978#issuecomment-657877594\">Shrink ParamEnv to 16 bytes #73978</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=0c03aee8b81185d65b5821518661c30ecdb42de5&amp;end=8981dbbc36f1575b0a417b6849767bde29e7c6b4&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.8% wins on a few benchmarks.</li>\n</ul>",
        "id": 204090147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909422
    },
    {
        "content": "<p>I have to say</p>",
        "id": 204090435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909543
    },
    {
        "content": "<p>I really like the pattern</p>",
        "id": 204090442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909546
    },
    {
        "content": "<p>of packing the state into some usize or whatever, and then adding a bunch of <code>PhantomData</code> fields</p>",
        "id": 204090536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909568
    },
    {
        "content": "<p>Let's make it a safe abstraction <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 204090593,
        "sender_full_name": "lcnr",
        "timestamp": 1594909593
    },
    {
        "content": "<p>it just tickles me for some reason. Anyway, very cool stuff, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 204090601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909598
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 204090709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909650
    },
    {
        "content": "<ul>\n<li>\"Polymorphization\" <a href=\"https://github.com/rust-lang/rust/pull/69749\">rust#69749</a><ul>\n<li>This was nominated for discussion about what the next steps are.</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/69749#issuecomment-658871287\">See @wesleywiser's comment</a> for a summary of the current state and questions.</li>\n</ul>\n</li>\n</ul>",
        "id": 204090734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909663
    },
    {
        "content": "<p>Let me transcribe that comment here:</p>",
        "id": 204090891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> wrote: </p>\n<blockquote>\n<p>I would like to nominate this PR for discussion at the compiler team triage meeting.</p>\n<p>As I understand it, the current state of this PR is that:</p>\n<p>* <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/201955780\">There are no known ICEs or functional regressions caused by this PR</a> and a full bootstrap succeeds as evidenced by the CI status of this PR. tada</p>\n<p>* <a href=\"https://github.com/rust-lang/rust/pull/69749#issuecomment-605641794\">The most recent perf.rlo run shows mixed results.</a></p>\n<p>* @davidtwco performed a <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/201883919\">more detailed analysis here</a> which suggests the regressions are possibly related to the known CGU partitioning issue and not actual regressions introduced by this PR.</p>\n<p>* Another round of reviews <a href=\"https://github.com/rust-lang/rust/pull/69749#event-3506971776\">has been requested</a> of @eddyb and @nikomatsakis.</p>\n<p>It seems to me that a bit of direction from the compiler team would be helpful at this time. I would like to discuss:</p>\n<p>* Assuming those final reviews are completed and feedback addressed, is this ready to merge?</p>\n<p>* If not, what else needs to be done before this PR can be merged?</p>\n<p>* Should we merge this enabled by default or disabled by default?</p>\n</blockquote>",
        "id": 204090915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909738
    },
    {
        "content": "<p>/me grumbles about Zulip's markdown parser not matching github markdown closely enough</p>",
        "id": 204090949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909760
    },
    {
        "content": "<p>I think we should land it</p>",
        "id": 204091000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909788
    },
    {
        "content": "<p>I think it's important infrastructure that we know from first principles will be useful</p>",
        "id": 204091027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909798
    },
    {
        "content": "<p>I just realized my \"more detailed analysis link\" should actually link to <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/201883919\">this zulip thread</a>.</p>",
        "id": 204091108,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594909814
    },
    {
        "content": "<p>Moreover, while the perf is somewhat disappointing, there are some real wins</p>",
        "id": 204091109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909814
    },
    {
        "content": "<p>e.g.</p>",
        "id": 204091116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909815
    },
    {
        "content": "<p>(We should probably report that as a bug in Zulip. Its not too soon for them to change to have better compatibilty, I would think...)</p>",
        "id": 204091127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594909819
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/hj7y7NrXea5vVEhL6qIZJvpp/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/hj7y7NrXea5vVEhL6qIZJvpp/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/hj7y7NrXea5vVEhL6qIZJvpp/image.png\"></a></div>",
        "id": 204091160,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909833
    },
    {
        "content": "<p>('m always super annoyed by _italics_ not working)</p>",
        "id": 204091165,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594909835
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 204091175,
        "sender_full_name": "davidtwco",
        "timestamp": 1594909838
    },
    {
        "content": "<p>5% on script-servo-debug is not to sneeze at</p>",
        "id": 204091188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909845
    },
    {
        "content": "<p>it's true though that the 11% hit on the println case for script-serve-opt is sad, but then we think it's CGU related?</p>",
        "id": 204091230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> did you see my closure PRs btw? it might make the polymorphization PR  slightly simpler/easier to land. but if you don't want to wait I can try to review polymorphization today or something (just remind me after meeting)</p>",
        "id": 204091265,
        "sender_full_name": "eddyb",
        "timestamp": 1594909877
    },
    {
        "content": "<p>I'm still catching up from vacation, I've not seen that PR</p>",
        "id": 204091300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909890
    },
    {
        "content": "<p>The metric wg-mir-opt uses to switch optimizations on by default is currently just \"there are no known issues and we have at least some covering tests\". We're also quick to switch stuff back off if the beta crater shows issues.</p>",
        "id": 204091331,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594909903
    },
    {
        "content": "<p>I don't have a strong opinion about order in which things land :)</p>",
        "id": 204091332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909903
    },
    {
        "content": "<p>I think the polymorphization PR has waited long enough tbh</p>",
        "id": 204091373,
        "sender_full_name": "eddyb",
        "timestamp": 1594909919
    },
    {
        "content": "<p>The Polymorphization PR fits those requirements</p>",
        "id": 204091412,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594909922
    },
    {
        "content": "<p>(there <em>are</em> a lot of 1%, 2% hits on incremental cases)</p>",
        "id": 204091423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594909927
    },
    {
        "content": "<p>I think we should bias towards improvements on non-incremental</p>",
        "id": 204091618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910005
    },
    {
        "content": "<p>i.e. if something is a 5% win on non-incremental but causes a 5% regression on incremental</p>",
        "id": 204091655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910025
    },
    {
        "content": "<p>I'd opt to still land it</p>",
        "id": 204091668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910032
    },
    {
        "content": "<p>IMO we should land it and have it enabled by default. I would ask that we leave the <code>-Zpolymorphization</code> flag around so if have to to switch it off, it's a one line change.</p>",
        "id": 204091703,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910041
    },
    {
        "content": "<p>Yeah, I agree with that too, as a \"rule of thumb\" anyway</p>",
        "id": 204091742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910045
    },
    {
        "content": "<p>particularly for these sorts of PRs, where it doesn't really make any sense for incremental to get slower?</p>",
        "id": 204091802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910078
    },
    {
        "content": "<p>yeah, its too noisy for us to block stuff on it</p>",
        "id": 204091829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910092
    },
    {
        "content": "<p>the incremental effects suggest our CGU partitioning may be slightly to wildly suboptimal, so turning polymorphization on and off could be a good way to gain more insight into that</p>",
        "id": 204091865,
        "sender_full_name": "eddyb",
        "timestamp": 1594910109
    },
    {
        "content": "<p>I remember <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> trying to gather data on that, but I think more work is needed</p>",
        "id": 204091959,
        "sender_full_name": "eddyb",
        "timestamp": 1594910144
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 204091963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910145
    },
    {
        "content": "<p>when you commented <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/201885795\">here</a>, you had promoted the idea of setting <code>-Zpolymorphize</code> to off by default</p>",
        "id": 204092054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910171
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th><code>-Ztime-passes</code> (total)</th>\n<th><code>-Zpolymorphize=on</code></th>\n<th><code>-Z polymorphize=off</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-Z codegen-units=1</code></td>\n<td>633.040 (<a href=\"/user_uploads/4715/385eNQkUHCHaNFfovTGqdJZC/Ztp-polymorphization-20200624-cgu1-script-servo-Opt-Full\">data</a>)</td>\n<td>729.907 ( <a href=\"/user_uploads/4715/QNTjRhyDfqnqFgUp0G-EBiDM/Ztp-polymorphization-20200624-cgu1-off-script-servo-Opt-Full\">data</a> )</td>\n</tr>\n<tr>\n<td>(no other flags)</td>\n<td>232.379 (<a href=\"/user_uploads/4715/TZdx596d-kyf811qengwoEUC/Ztp-polymorphization-20200624-script-servo-Opt-Full\">data</a>)</td>\n<td>232.557 (<a href=\"/user_uploads/4715/VQ7EtDl6Y8gx7-KHqrKTNu-L/Ztp-polymorphization-20200624-off-script-servo-Opt-Full\">data</a>)</td>\n</tr>\n</tbody>\n</table>\n<p>This is my most recent data regarding partitioning + polymorphisation.</p>",
        "id": 204092069,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910181
    },
    {
        "content": "<p>(from running perf on my own machine, so all the caveats that entails)</p>",
        "id": 204092097,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910194
    },
    {
        "content": "<p>It seems like you changed your mind since then, based on your (<span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> 's) comment above.</p>",
        "id": 204092101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910196
    },
    {
        "content": "<p>Is that because you think it will be more useful to get this running on more systems (in order to iron out bugs and get feedback on perf)?</p>",
        "id": 204092147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204092054\">said</a>:</p>\n<blockquote>\n<p>when you commented <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/201885795\">here</a>, you had promoted the idea of setting <code>-Zpolymorphize</code> to off by default</p>\n</blockquote>\n<p>I was under the impression at that point there were still some ICEs that needed to be tracked down. At the current time, we don't know any ICEs or other regressions (other than incr performance).</p>",
        "id": 204092161,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910226
    },
    {
        "content": "<p>Ah I see</p>",
        "id": 204092171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910231
    },
    {
        "content": "<p>The only case w/ an ICE that I'm aware of is when the new symbol mangling is enabled.</p>",
        "id": 204092187,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910242
    },
    {
        "content": "<p>we also don't keep around the unoptimized LLVM IR to do proper reuse of that , right? I wonder how much we could win with a hacked together version of that where we just take out the changed functions and add in the new copies</p>",
        "id": 204092198,
        "sender_full_name": "eddyb",
        "timestamp": 1594910251
    },
    {
        "content": "<p>I wanted to keep the PR from bitrotting but obviously we can't land stuff that introduces known regressions like that.</p>",
        "id": 204092206,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204092187\">said</a>:</p>\n<blockquote>\n<p>The only case that I'm aware of is when the new symbol mangling is enabled.</p>\n</blockquote>\n<p>But that's not the default and might not be a hard bug - I've not looked into it much.</p>",
        "id": 204092213,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910259
    },
    {
        "content": "<p>since the incremental penalty for polymorphization might just be invalidating a large CGU and having to redo MIR -&gt; LLVM IR</p>",
        "id": 204092293,
        "sender_full_name": "eddyb",
        "timestamp": 1594910289
    },
    {
        "content": "<p>although LLVM optimizations on the CGU are likely costlier so nvm</p>",
        "id": 204092313,
        "sender_full_name": "eddyb",
        "timestamp": 1594910301
    },
    {
        "content": "<p>okay. So It seems like everyone whose spoken up thinks that the performance issues here are something that we can investigate independently, after this lands (potentially on by default)? Does that sound right?</p>",
        "id": 204092337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910313
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I can try to help track down the mangling bug</p>",
        "id": 204092341,
        "sender_full_name": "eddyb",
        "timestamp": 1594910315
    },
    {
        "content": "<p>I think we have general approval for landing this.</p>",
        "id": 204092514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910393
    },
    {
        "content": "<p>should be even easier once it's landed because I can just play around with local builds without a copy of the PR etc.</p>",
        "id": 204092527,
        "sender_full_name": "eddyb",
        "timestamp": 1594910398
    },
    {
        "content": "<p>In theory there should be an associated MCP for something like this</p>",
        "id": 204092591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910413
    },
    {
        "content": "<p>but I think its development predates the MCP process</p>",
        "id": 204092615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910423
    },
    {
        "content": "<p>yeah, it does</p>",
        "id": 204092636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910431
    },
    {
        "content": "<p>Not sure <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> if you ever wrote up any rustc-dev-guide docs on the design btw?</p>",
        "id": 204092659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910444
    },
    {
        "content": "<p>It'd be helpful for reviewing</p>",
        "id": 204092673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910449
    },
    {
        "content": "<p>and we're okay with making exceptions for \"well known\" public efforts like this, I think</p>",
        "id": 204092680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910451
    },
    {
        "content": "<p>I think it's fine, I mean all the relevant folks are here</p>",
        "id": 204092705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910462
    },
    {
        "content": "<p>and we would second it :)</p>",
        "id": 204092718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204092659\">said</a>:</p>\n<blockquote>\n<p>Not sure <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> if you ever wrote up any rustc-dev-guide docs on the design btw?</p>\n</blockquote>\n<p>I have a to-do list item to do this - but was waiting to see if it would land and what other changes might be necessary.</p>",
        "id": 204092721,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910466
    },
    {
        "content": "<p>There's a mention of it in the dev-guide already AFAIK.</p>",
        "id": 204092754,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910478
    },
    {
        "content": "<p>We can trade writing the MCP for writing some docs <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 204092761,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910482
    },
    {
        "content": "<p>I was just going to write that :)</p>",
        "id": 204092770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910488
    },
    {
        "content": "<p>just open the MCP and insert the thesis as the contents</p>",
        "id": 204092773,
        "sender_full_name": "eddyb",
        "timestamp": 1594910489
    },
    {
        "content": "<p>okay so lets move along then</p>",
        "id": 204092779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910492
    },
    {
        "content": "<p>that's the main thing I would want out of the MCP...</p>",
        "id": 204092783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910493
    },
    {
        "content": "<p>heh</p>",
        "id": 204092792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910499
    },
    {
        "content": "<p>I forgot about the thesis, right...</p>",
        "id": 204092795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910504
    },
    {
        "content": "<ul>\n<li>\"mv std libs to std/\" <a href=\"https://github.com/rust-lang/rust/pull/73265\">rust#73265</a><ul>\n<li>This was nominated again for discussion about what the next steps are.</li>\n<li>\"I propose to wait one week and nominate the issue one (hopefully) last time\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/73265#issuecomment-657075856\">See @mark-i-m's comment</a> for a summary of the current proposal.</li>\n</ul>\n</li>\n</ul>",
        "id": 204092815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204092773\">said</a>:</p>\n<blockquote>\n<p>just open the MCP and insert the thesis as the contents</p>\n</blockquote>\n<p>(that's <a href=\"https://davidtw.co/media/masters_dissertation.pdf\">here</a> if people care, the evaluation is so-so, but the rest might be helpful)</p>",
        "id": 204092896,
        "sender_full_name": "davidtwco",
        "timestamp": 1594910537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204092795\">said</a>:</p>\n<blockquote>\n<p>I forgot about the thesis, right...</p>\n</blockquote>\n<p>miri's README still links to <span class=\"user-mention\" data-user-id=\"130499\">@Scott Olson</span>'s report on it, so there's definitely precedent</p>",
        "id": 204092929,
        "sender_full_name": "eddyb",
        "timestamp": 1594910555
    },
    {
        "content": "<p>Regarding <a href=\"https://github.com/rust-lang/rust/issues/73265\">#73265</a>, it seems like the discussion has reached a good point</p>",
        "id": 204093146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910647
    },
    {
        "content": "<p>do we need to issue some \"formal approval\"?</p>",
        "id": 204093162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910653
    },
    {
        "content": "<p>by the way, I hadn't be follwing discussion</p>",
        "id": 204093215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910678
    },
    {
        "content": "<p>but it sounds like the title no longer accurately describes the action</p>",
        "id": 204093237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910686
    },
    {
        "content": "<p>heh, it does not</p>",
        "id": 204093250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910695
    },
    {
        "content": "<p>namely, they're now going to move standard libs into <code>&lt;root&gt;/library/&lt;crate&gt;/src/*.rs</code>, along side <code>&lt;root&gt;/src/&lt;all the rest&gt; // unchanged</code></p>",
        "id": 204093323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910728
    },
    {
        "content": "<p>I don't know how/why \"library\" was chosen over \"std\" or \"stdlib\", I forget. Have to skim the thread. I guess because std is but one library and there are more crates?</p>",
        "id": 204093329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910729
    },
    {
        "content": "<p><code>std/libstd</code> seems a little awkward. It seems reasonable to me but perhaps it's a bit too jargon-y for new contributors? </p>\n<p>I do like the idea of <code>library/...</code> and <code>compiler/...</code> though</p>",
        "id": 204093534,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910815
    },
    {
        "content": "<p>oh, it appears that <code>library</code> was chosen in anticipation of eventually migrating the <code>rustc</code> crates to <code>compiler/</code></p>",
        "id": 204093546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910820
    },
    {
        "content": "<p>if I'm reading this right</p>",
        "id": 204093549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910823
    },
    {
        "content": "<p>To be clear, I'm good with library</p>",
        "id": 204093562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910831
    },
    {
        "content": "<p>Okay that's all fine</p>",
        "id": 204093570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910835
    },
    {
        "content": "<p>I just remember it was discussed and settled upon somehow, and my main point is that I'd prefer not to revisit that settled point...</p>",
        "id": 204093615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910856
    },
    {
        "content": "<p>Is this on our docket because we took over standard library internals?</p>",
        "id": 204093643,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910869
    },
    {
        "content": "<p>More or less, yes.</p>",
        "id": 204093718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910889
    },
    {
        "content": "<p>Or is this just a general FYI?</p>",
        "id": 204093719,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594910889
    },
    {
        "content": "<p>I suspect so, yeah</p>",
        "id": 204093743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910899
    },
    {
        "content": "<p>It does seem pretty squarely to be our decision at this point</p>",
        "id": 204093757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910908
    },
    {
        "content": "<p>Not sure what could be a <em>more</em> implementation focused decision</p>",
        "id": 204093771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594910915
    },
    {
        "content": "<p>I'll make a note and link to our discussion here</p>",
        "id": 204093836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910946
    },
    {
        "content": "<ul>\n<li>\"[WIP] Upgrade to LLVM 11\" <a href=\"https://github.com/rust-lang/rust/pull/73526\">rust#73526</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/73526#issuecomment-658943064\">Nominated</a> to double check whether we're okay with landing this prior to the final LLVM 11 release.</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/73526#issuecomment-658943064\">See @nikic's comment</a> ...</li>\n<li>\"The last perf run had large compile-time improvements for opt builds and some minor regressions for debug builds.\"</li>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=7e11379f3b4c376fbb9a6c4d44f3286ccc28d149&amp;end=adff1be71c9e1b3abb95b761d9caa41e4e1b9096\">Perf shows some nice improvements</a></li>\n</ul>\n</li>\n</ul>",
        "id": 204093867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594910960
    },
    {
        "content": "<p>regarding \"perf shows some nice improvements;\" weren't there regressions we had to swallow with the upgrade to LLVM 10? Does anyone know if the improvements here bring us back in line with LLVM 9 in those cases?</p>",
        "id": 204094017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911004
    },
    {
        "content": "<p>there certainly were</p>",
        "id": 204094116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911043
    },
    {
        "content": "<p>The perf numbers from the LLVM 10 upgrade were: <a href=\"https://perf.rust-lang.org/compare.html?start=0aa6751c19d3ba80df5b0b02c00bf44e13c97e80&amp;end=82911b3bba76e73afe2881b732fe6b0edb35d5d3&amp;stat=instructions%3Au\">https://perf.rust-lang.org/compare.html?start=0aa6751c19d3ba80df5b0b02c00bf44e13c97e80&amp;end=82911b3bba76e73afe2881b732fe6b0edb35d5d3&amp;stat=instructions%3Au</a> So I think LLVM 11 recovers most but not all of it.</p>",
        "id": 204094192,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911074
    },
    {
        "content": "<p>also, regarding <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> 's comment linked above: the final LLVM release is at end of August</p>",
        "id": 204094210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911084
    },
    {
        "content": "<p>so if we land this now</p>",
        "id": 204094230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911091
    },
    {
        "content": "<p>would we do another round of upgrades to the final LLVM 11 release after end of August?</p>",
        "id": 204094259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911103
    },
    {
        "content": "<p>or would we just use what we landed (and cherry-pick when necessary) until LLVM 12?</p>",
        "id": 204094334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911121
    },
    {
        "content": "<p>There are usually some upgrades lateron to match the release branch (especially as there are point releases as well).</p>",
        "id": 204094432,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911151
    },
    {
        "content": "<p>okay</p>",
        "id": 204094442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911157
    },
    {
        "content": "<p>Can anyone summarize arguments why we wouldn't land this?</p>",
        "id": 204094524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911196
    },
    {
        "content": "<p>(that is, why we wouldn't land this now and instead wait for the aforementioned final release at end of August)?</p>",
        "id": 204094575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911218
    },
    {
        "content": "<p>There was some discussion about not using an unreleased LLVM due to Firefox?</p>",
        "id": 204094610,
        "sender_full_name": "simulacrum",
        "timestamp": 1594911232
    },
    {
        "content": "<p>I forget the details -- something about cross-language LTO and clang?</p>",
        "id": 204094663,
        "sender_full_name": "simulacrum",
        "timestamp": 1594911242
    },
    {
        "content": "<ol>\n<li>This makes us early adopters, so there's a larger chance that we hit regressions first.</li>\n<li>Cross-language LTO requires the other party to use LLVM 11 as well.</li>\n</ol>",
        "id": 204094754,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911278
    },
    {
        "content": "<p>hmm</p>",
        "id": 204094771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911290
    },
    {
        "content": "<p>in terms of release cycle timing</p>",
        "id": 204094840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911313
    },
    {
        "content": "<p>I'm not sure of the current status for FF, I think this was already a problem when we upgraded to LLVM 10, but I do think that given the limitations on cross-language LTO there is some logic to sticking to LLVM releases</p>",
        "id": 204094885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911331
    },
    {
        "content": "<p>/me goes to look at forge</p>",
        "id": 204094886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911332
    },
    {
        "content": "<p>I saw a bug report from Firefox trying to use Clang 11, so possibly they're already on this. Because I think they skipped Clang 10 due to the large regressions. But this is just hearsay, does anyone know something more certain there?</p>",
        "id": 204094899,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911340
    },
    {
        "content": "<p>(so that people can more easily match us)</p>",
        "id": 204094905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911343
    },
    {
        "content": "<p>If we land it in nightly it will ship on Oct 8th.</p>",
        "id": 204094995,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594911365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> will not be around at this time but they may have feedback on the FF point</p>",
        "id": 204095022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911374
    },
    {
        "content": "<p>thank you <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 204095023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911374
    },
    {
        "content": "<p>I guess -- do we expect llvm 11/clang 11 ship by oct 8th?</p>",
        "id": 204095067,
        "sender_full_name": "simulacrum",
        "timestamp": 1594911396
    },
    {
        "content": "<p>I remember hearing firefox is still using rustc with llvm9</p>",
        "id": 204095081,
        "sender_full_name": "nagisa",
        "timestamp": 1594911404
    },
    {
        "content": "<p>maybe the old rustc?</p>",
        "id": 204095093,
        "sender_full_name": "nagisa",
        "timestamp": 1594911410
    },
    {
        "content": "<p>LLVM 11 is supposed to release at the end of August.</p>",
        "id": 204095138,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594911435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> The release is planned for August 26, but it does tend to slip a bit.</p>",
        "id": 204095157,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911444
    },
    {
        "content": "<p>okay, so then it seems reasonable to land in our nightly, by the time it hits stable we'll have a released llvm that's probably \"close enough\" right?</p>",
        "id": 204095208,
        "sender_full_name": "simulacrum",
        "timestamp": 1594911471
    },
    {
        "content": "<p>I expect so, yes.</p>",
        "id": 204095361,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1594911521
    },
    {
        "content": "<p>if we actually waited until LLVM 11 were released to put it into our nightlies, then chances are it would be part of the 1.49 release, and would probably come out in late December, right?</p>",
        "id": 204095461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911573
    },
    {
        "content": "<p>it seems bad to wait another 2ish months for these performance wins without excellent reason, so I'm personally in favor of landing now. I think I've convinced myself that matching LLVM releases is fine to do \"in stable\" but not really as needed in nightly.</p>",
        "id": 204095648,
        "sender_full_name": "simulacrum",
        "timestamp": 1594911629
    },
    {
        "content": "<p>that seems like  quite a difference in time; long time to make people wait, especially if its <em>recovering</em> performance we had lost with LLVM 10 upgrade</p>",
        "id": 204095657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911634
    },
    {
        "content": "<p>Seems like maybe the right thing to do is land it on nightly and potentially take a beta-backport later to update to the release version of LLVM 11?</p>",
        "id": 204095683,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594911646
    },
    {
        "content": "<p>if necessary, yeah</p>",
        "id": 204095712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911660
    },
    {
        "content": "<p>That sounds reasonable</p>",
        "id": 204095745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911674
    },
    {
        "content": "<p>I'm mildly uncomfortable with this being \"close enough\" to the final release</p>",
        "id": 204095769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911687
    },
    {
        "content": "<p>So yeah, it seems like everyone here is generally in favor of moving forward with LLVM 11 upgrade <em>now</em></p>",
        "id": 204095770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911688
    },
    {
        "content": "<p>but a beta backport fixes that</p>",
        "id": 204095780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911690
    },
    {
        "content": "<p>(and I suppose \"close enough\" might indeed be true)</p>",
        "id": 204095804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911700
    },
    {
        "content": "<p>Does anyone have a link to the discussions about the Firefox issues regarding their version of clang and/or cross-lang LTO ?</p>",
        "id": 204095921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911745
    },
    {
        "content": "<p>(I found some bugzilla tickets regarding rustc forcing them to upgrade to LLVM 9)</p>",
        "id": 204095944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911760
    },
    {
        "content": "<p>oh no we're over time!</p>",
        "id": 204095996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911785
    },
    {
        "content": "<p>there was just one last nominated issue, and its, I think, just a bug that wants some attention</p>",
        "id": 204096053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911811
    },
    {
        "content": "<ul>\n<li>\"Compiler doesn't terminate with --release\" <a href=\"https://github.com/rust-lang/rust/issues/74384\">rust#74384</a><ul>\n<li>Compiler doesn't \"terminate\" when nesting 3 arrays.</li>\n<li>\"It seems like this is an LLVM bug.\"</li>\n</ul>\n</li>\n</ul>",
        "id": 204096066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911819
    },
    {
        "content": "<p>so, yeah, someone look into that. :)</p>",
        "id": 204096078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911828
    },
    {
        "content": "<p>(hey, maybe its fixed with LLVM 11. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> )</p>",
        "id": 204096097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911840
    },
    {
        "content": "<p>Fun.</p>",
        "id": 204096197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594911869
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! This was a great meeting, I really love coming away from these things excited about everything that's going on</p>",
        "id": 204096218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594911877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204091265\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> did you see my closure PRs btw? it might make the polymorphization PR  slightly simpler/easier to land. but if you don't want to wait I can try to review polymorphization today or something (just remind me after meeting)</p>\n</blockquote>\n<p>this is the reminder after the meeting <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 204096453,
        "sender_full_name": "davidtwco",
        "timestamp": 1594911967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 204096462,
        "sender_full_name": "davidtwco",
        "timestamp": 1594911972
    },
    {
        "content": "<p>you could at least link to the PR :P</p>",
        "id": 204096476,
        "sender_full_name": "eddyb",
        "timestamp": 1594911981
    },
    {
        "content": "<p>don't make me type URLs in the middle of a heatwave</p>",
        "id": 204096489,
        "sender_full_name": "eddyb",
        "timestamp": 1594911989
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/69749\">#69749</a></p>",
        "id": 204096496,
        "sender_full_name": "davidtwco",
        "timestamp": 1594911990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> were you just ... criticizing... yourself ...?</p>",
        "id": 204096600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594912046
    },
    {
        "content": "<p>no? just barely functioning during the day (it's 6pm here)</p>",
        "id": 204096744,
        "sender_full_name": "eddyb",
        "timestamp": 1594912103
    },
    {
        "content": "<p>I cannot tell if the comment about \"linking to the PR\" was regarding the polymorphization PR (<a href=\"https://github.com/rust-lang/rust/issues/69749\">#69749</a>) or the closures PRs (<a href=\"https://github.com/rust-lang/rust/issues/74341\">#74341</a>, <a href=\"https://github.com/rust-lang/rust/issues/74314\">#74314</a> ...?)</p>",
        "id": 204096780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594912116
    },
    {
        "content": "<p>the one I have to review :P</p>",
        "id": 204096812,
        "sender_full_name": "eddyb",
        "timestamp": 1594912127
    },
    {
        "content": "<p>oh oh oh</p>",
        "id": 204096833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594912131
    },
    {
        "content": "<p>but you do see the irony, no?</p>",
        "id": 204096879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594912154
    },
    {
        "content": "<p>/me wonders, for the thousandth time, whether he understands the definition of \"irony.\" Thanks @Alanis Morrisette</p>",
        "id": 204097024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594912212
    },
    {
        "content": "<p>well I link niko PRs all the time, just in PM :P</p>",
        "id": 204097089,
        "sender_full_name": "eddyb",
        "timestamp": 1594912240
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-16.20.2354818/near/204088696\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin by <span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> and <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pulls?page=1&amp;q=closed%3A%3E%3D2020-05-28\">68 merged PRs!</a> In fact, there was so much stuff, that we ran out of time to curate it... here is a prefix of the list of PRs (heavily biased towards earlier PRs); there are so many people that deserve credit:<br>\n- Aaron Hill<br>\n- Andy Russell<br>\n- Bastian Kauschke<br>\n- Drew Youngwerth<br>\n- Eric Huss<br>\n- Florian Gilcher<br>\n- Ivan Veselov<br>\n- Joshua Nelson<br>\n- mark-i-m<br>\n- Matt Kraai<br>\n- Nadrieril<br>\n- Niko Matsakis<br>\n- pierwill<br>\n- Ralf Jung<br>\n- Santiago Pastorino<br>\n- Takayuki Nakata<br>\n- ThePuzzlemaker<br>\n- Tomasz Miąsko<br>\n- Tom Eccles<br>\n- Yuki Okushi<br>\n</p>\n</blockquote>\n</blockquote>\n<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> It seems that somehow <span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span>, <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span>, and  <span class=\"user-mention\" data-user-id=\"119529\">@Tshepang Lekhonkhobe</span> got left off the list when I crawled the git log :'( They also deserve lots of credit. Sorry about that!</p>",
        "id": 204100947,
        "sender_full_name": "mark-i-m",
        "timestamp": 1594913772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> done</p>",
        "id": 204109699,
        "sender_full_name": "eddyb",
        "timestamp": 1594917570
    },
    {
        "content": "<p>thanks, addressing now</p>",
        "id": 204109710,
        "sender_full_name": "davidtwco",
        "timestamp": 1594917581
    },
    {
        "content": "<p>(btw, having a separate stream for meeting topics is amazing for finding them)</p>",
        "id": 204109725,
        "sender_full_name": "eddyb",
        "timestamp": 1594917588
    },
    {
        "content": "<p>(let's move to <a class=\"stream\" data-stream-id=\"216091\" href=\"/#narrow/stream/216091-t-compiler.2Fwg-polymorphization\">#t-compiler/wg-polymorphization</a>)</p>",
        "id": 204109807,
        "sender_full_name": "eddyb",
        "timestamp": 1594917616
    },
    {
        "content": "<p>On the Firefox front:</p>",
        "id": 204147752,
        "sender_full_name": "njn",
        "timestamp": 1594936166
    },
    {
        "content": "<ul>\n<li>Firefox is sticking with 1.43 for now, which keeps us on LLVM 9. But this is mostly due to a bug in later versions that causes miscompilations on Mac: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1644624#c1\">https://bugzilla.mozilla.org/show_bug.cgi?id=1644624#c1</a>. (This bug has apparently been fixed since.) The plan is to skip straight to LLVM 11.</li>\n</ul>",
        "id": 204147913,
        "sender_full_name": "njn",
        "timestamp": 1594936246
    },
    {
        "content": "<ul>\n<li>Although LLVM 10 caused some slowdowns, I think 1.44 was still faster than 1.43 overall due to other speed improvements</li>\n</ul>",
        "id": 204147958,
        "sender_full_name": "njn",
        "timestamp": 1594936282
    },
    {
        "content": "<ul>\n<li>For upcoming releases, it's \"always better\" if a released rustc uses an official LLVM release. Presumably because we need our clang versions to be in sync for xLTO, and that way we can use a normal clang release rather than a non-release version. So backporting on beta to get an official release would be best.</li>\n</ul>",
        "id": 204148077,
        "sender_full_name": "njn",
        "timestamp": 1594936339
    }
]