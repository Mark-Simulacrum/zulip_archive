[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for this week's steering meeting, which will be a \"compiler feature backlog bonanza\" ! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here.</p>",
        "id": 275806376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612108
    },
    {
        "content": "<p>I didn't make quite as much progress as I had hoped in my prepass. <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> was <em>far</em> more efficient than I, I think. :)</p>",
        "id": 275806550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612182
    },
    {
        "content": "<p>I'm gonna be juggling two meetings for a bit :)</p>",
        "id": 275806566,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647612187
    },
    {
        "content": "<p>but the doc we'll be working from is here: <a href=\"https://hackmd.io/h_tyzNEKS_Kc2OY_rSm28g\">https://hackmd.io/h_tyzNEKS_Kc2OY_rSm28g</a></p>",
        "id": 275806580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612199
    },
    {
        "content": "<p>I think I went through maybe a dozen issues</p>",
        "id": 275806591,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647612202
    },
    {
        "content": "<p>Most were just removing non T-compiler ones</p>",
        "id": 275806620,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647612221
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> and I both took some notes in <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/backlog.20bonanza.20prep\">#t-compiler/meetings &gt; backlog bonanza prep</a></p>",
        "id": 275806632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612227
    },
    {
        "content": "<p>but nothing that you should need to read for this meeting</p>",
        "id": 275806644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612236
    },
    {
        "content": "<p>first off, I preprocessed this:</p>",
        "id": 275806787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612294
    },
    {
        "content": "<h3>\"Tracking issue for the \"ptx-kernel\" ABI\" <a href=\"https://github.com/rust-lang/rust/issues/38788\">rust#38788</a></h3>",
        "id": 275806797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612300
    },
    {
        "content": "<ul>\n<li>pnkfelix left <a href=\"https://github.com/rust-lang/rust/issues/38788#issuecomment-1071212275\">comment</a>. Marked S-tracking-design-concerns and S-tracking-needs-summary</li>\n</ul>",
        "id": 275806810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612306
    },
    {
        "content": "<p>and that leads us directly to the first issue on our queue</p>",
        "id": 275806862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612337
    },
    {
        "content": "<h3>\"Tracking issue for MIR-only RLIBs\" <a href=\"https://github.com/rust-lang/rust/issues/38913\">rust#38913</a></h3>",
        "id": 275806877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612347
    },
    {
        "content": "<ul>\n<li>Does this really classify as a tracking issue? Should probably track implementation, but needs a direction, I think. - Jack</li>\n<li>pnkfelix is leaving this on our queue to get visibility; eddyb had very <a href=\"https://github.com/rust-lang/rust/issues/38913#issuecomment-419562320\">interesting thoughts</a> on doing this just for libcore through libstd to improve rustc development cycle time.</li>\n</ul>",
        "id": 275806911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612363
    },
    {
        "content": "<p>Not nvptx metabug?</p>",
        "id": 275806951,
        "sender_full_name": "simulacrum",
        "timestamp": 1647612370
    },
    {
        "content": "<p>waut</p>",
        "id": 275806954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612372
    },
    {
        "content": "<p>dammit</p>",
        "id": 275806958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612374
    },
    {
        "content": "<p>cut-and-paste mistake, repeatedly</p>",
        "id": 275806978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612383
    },
    {
        "content": "<p>we'llc ome back to <a href=\"https://github.com/rust-lang/rust/issues/38913\">rust#38913</a></p>",
        "id": 275806988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612389
    },
    {
        "content": "<p><em>this</em> is what I intended to link:</p>",
        "id": 275807003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612405
    },
    {
        "content": "<h3>\"NVPTX backend metabug\" <a href=\"https://github.com/rust-lang/rust/issues/38789\">rust#38789</a></h3>",
        "id": 275807011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612409
    },
    {
        "content": "<p>I went through this comment thread a couple of times</p>",
        "id": 275807058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612438
    },
    {
        "content": "<p>in particular, it seemed like there was some pretty strong differences in <del>opinion</del> interpretation of the situation, between hanna-kruppe and gnzlbg on that thread</p>",
        "id": 275807105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612461
    },
    {
        "content": "<p>the recent activity on <a href=\"https://github.com/rust-lang/rust/issues/38788\">rust#38788</a> leads me to think that there <em>is</em> interest here, and a non-trivial amount of investment in the current tech stack for NVPTX (which, for context, is the virtual machine defined by NVidia for their GPU's that you normally interface via CUDA)</p>",
        "id": 275807321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612572
    },
    {
        "content": "<p>but the main question I have is whether this is in a state where we have design concerns, or if the overall design is okay, and its a matter of driving implementation forward (and fixing bugs)</p>",
        "id": 275807425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612619
    },
    {
        "content": "<p>is there anyone here who either is personally working on this type of thing, or is connected with others who are?</p>",
        "id": 275807538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612663
    },
    {
        "content": "<p>I'm not sure I even have enough context right now to be able to answer that question (for myself) in this meeting tbh.</p>",
        "id": 275807552,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647612671
    },
    {
        "content": "<p>needs-summary, at minimum, I feel like, particularly around the conversation you cite as 'pretty strong differences'</p>",
        "id": 275807559,
        "sender_full_name": "simulacrum",
        "timestamp": 1647612675
    },
    {
        "content": "<p>yeah, I had similarly tagged <a href=\"https://github.com/rust-lang/rust/issues/38788\">rust#38788</a> with multiple status flags</p>",
        "id": 275807653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612712
    },
    {
        "content": "<p>so I guess we could just do S-tracking-needs-summary and leave it at that.</p>",
        "id": 275807740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612738
    },
    {
        "content": "<p>next</p>",
        "id": 275807962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612848
    },
    {
        "content": "<h3>\"Tracking issue for MIR-only RLIBs\" <a href=\"https://github.com/rust-lang/rust/issues/38913\">rust#38913</a></h3>\n<ul>\n<li>Does this really classify as a tracking issue? Should probably track implementation, but needs a direction, I think. - Jack</li>\n<li>pnkfelix is leaving this on our queue to get visibility; eddyb had very <a href=\"https://github.com/rust-lang/rust/issues/38913#issuecomment-419562320\">interesting thoughts</a> on doing this just for libcore through libstd to improve rustc development cycle time.</li>\n</ul>",
        "id": 275807998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612871
    },
    {
        "content": "<p>So yeah, like I said, I <em>think</em> this is S-tracking-unimplemented</p>",
        "id": 275808040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612893
    },
    {
        "content": "<p>there was that prototype in the comment thread</p>",
        "id": 275808073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612909
    },
    {
        "content": "<p>but I don't think that's enough to count as S-tracking-impl-incomplete; code needs to land in tree for us to move off of S-tracking-unimplemented</p>",
        "id": 275808116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612931
    },
    {
        "content": "<p>there's a broader question of whether we <em>want</em> to do this at all, given that the initial experiments indicate that you get burned badly during the final code generation step because our compiler is <del>non sufficiently</del> not parallel</p>",
        "id": 275808227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647612981
    },
    {
        "content": "<p>Yeah, I think this is not a tracking issue but a proposal to do MIR-only rlibs with supporting discussion.</p>",
        "id": 275808302,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613029
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> are you around? for some reason I recall you mentioning MIR-only rlibs like a day or two ago?</p>",
        "id": 275808311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613033
    },
    {
        "content": "<p>hm, I would just expect that to be a fundamental limitation of moving ~all codegen to the leaf crates, no? </p>\n<p>I think impl-incomplete and maybe design-concerns on whether it's worthwhile at all is the right state.</p>",
        "id": 275808344,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you think we should close and ask for an MCP ?</p>",
        "id": 275808355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613054
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202022-03-18.20compiler-team.23484/near/275808344\">said</a>:</p>\n<blockquote>\n<p>hm, I would just expect that to be a fundamental limitation of moving ~all codegen to the leaf crates, no? </p>\n</blockquote>\n<p>yes, it is fundamental.</p>",
        "id": 275808395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613078
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> here</p>",
        "id": 275808445,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613086
    },
    {
        "content": "<p>I think perhaps we should just remove <code>C-tracking-issue</code>. We have a lot of older issues like this which could be MCPs.</p>",
        "id": 275808476,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613101
    },
    {
        "content": "<p>If we wanted to keep this open, I think there needs to be clear plans</p>",
        "id": 275808485,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613107
    },
    {
        "content": "<p>okay. Lets close it and say that if there's interest, it should be reopened as an MCP</p>",
        "id": 275808505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613120
    },
    {
        "content": "<p>(I think that should be a \"requirement\" for tracking issues - clear plans/goals to follow)</p>",
        "id": 275808550,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613146
    },
    {
        "content": "<p>that sounds like a good idea</p>",
        "id": 275808721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613208
    },
    {
        "content": "<h3>\"Tracking issue for <code>resolve_trait_on_defaulted_unit</code> compatibility lint\" <a href=\"https://github.com/rust-lang/rust/issues/39216\">rust#39216</a></h3>",
        "id": 275808736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613214
    },
    {
        "content": "<p><em>this</em> one was a little disheartening when I discovered it</p>",
        "id": 275808768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613236
    },
    {
        "content": "<p>because I subsequently found this old issue:  \"Defaulted unit types no longer error out (regression?)\" <a href=\"https://github.com/rust-lang/rust/issues/51125\">#51125</a></p>",
        "id": 275808831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613269
    },
    {
        "content": "<p>I think we should probably keep this open but I agree it's unfortunate, I'll note it down as relevant for the never type work</p>",
        "id": 275808874,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613295
    },
    {
        "content": "<p>I'm guessing that its S-tracking-impl-incomplete. That is, I <em>do</em> think we still intend to move forward on this</p>",
        "id": 275809004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613343
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202022-03-18.20compiler-team.23484/near/275808550\">said</a>:</p>\n<blockquote>\n<p>(I think that should be a \"requirement\" for tracking issues - clear plans/goals to follow)</p>\n</blockquote>\n<p>To be a tracking issue the team is triaging, I think there should also have been some kind of consensus from the team on the idea. (Not talking about <a href=\"https://github.com/rust-lang/rust/issues/38913\">#38913</a> specifically but I have seen issues get opened that are \"tracking\" random things OP wants done but there was no discussion with the compiler team AFICT.)</p>",
        "id": 275809082,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613374
    },
    {
        "content": "<p>Good point</p>",
        "id": 275809182,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613434
    },
    {
        "content": "<p>sometimes it may be something that the OP thinks is \"obviously good\", but yeah, I agree there should be some amount of consensus from the team.</p>",
        "id": 275809200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613440
    },
    {
        "content": "<p>even if we just acquire that consensus via this meeting</p>",
        "id": 275809249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613453
    },
    {
        "content": "<p>i.e. I don't think we need to blanket close everything and <em>require</em> an MCP ?</p>",
        "id": 275809275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613464
    },
    {
        "content": "<p>No, I'm not suggesting we do that especially considering many of these issues were opened years before MCPs were a thing. Just my personal opinion going forward.</p>",
        "id": 275809342,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613505
    },
    {
        "content": "<p>(though one might argue that doing that would grant them more visibility, and force a current owner to come forward.)</p>",
        "id": 275809345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613507
    },
    {
        "content": "<p>anyway, I tagged <a href=\"https://github.com/rust-lang/rust/issues/39216\">#39216</a> as S-tracking-impl-incomplete, and noted the blocking bug</p>",
        "id": 275809383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613530
    },
    {
        "content": "<p>next up</p>",
        "id": 275809387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613533
    },
    {
        "content": "<h3>\"Tracking issue for sanitizer support\" <a href=\"https://github.com/rust-lang/rust/issues/39699\">rust#39699</a></h3>",
        "id": 275809401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613539
    },
    {
        "content": "<p>I am around-ish</p>",
        "id": 275809409,
        "sender_full_name": "oli",
        "timestamp": 1647613544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> okay. I was just tryign to remember why we were talking about MIR-only rlibs.</p>",
        "id": 275809441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613563
    },
    {
        "content": "<p>you and I can follow up about it async, it doesn't need to be a group discussion here</p>",
        "id": 275809502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613575
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/39699\">rust#39699</a> seems like its in S-tracking-needs-summary ?</p>",
        "id": 275809536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613602
    },
    {
        "content": "<p>That sounds right</p>",
        "id": 275809563,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613615
    },
    {
        "content": "<p>I feel like there are some open design questions here</p>",
        "id": 275809566,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613616
    },
    {
        "content": "<p>but that's perhaps too in the weeds for this meeting.</p>",
        "id": 275809584,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613627
    },
    {
        "content": "<p>if you have concerns there, we can add that tag too</p>",
        "id": 275809608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613637
    },
    {
        "content": "<p>I'd maybe say we don't dig into it in this meeting, but you post a comment with your concerns and add that tag as well?</p>",
        "id": 275809637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613653
    },
    {
        "content": "<p>I'll leave a comment after the meeting with some questions.</p>",
        "id": 275809661,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613664
    },
    {
        "content": "<h3>\"Tracking issue for 1.0.0 tracking issues\" <a href=\"https://github.com/rust-lang/rust/issues/39954\">rust#39954</a></h3>\n<ul>\n<li>Are these \"meta\" tracking issues helpful? I ticked off the checkboxes where the linked issue is closed. - Jack</li>\n</ul>",
        "id": 275809818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613729
    },
    {
        "content": "<p>IMO this should be closed, I don't think it is useful to specifically track 1.0 era tracking issues (particularly given the long time period since then).</p>",
        "id": 275809873,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613756
    },
    {
        "content": "<p>I think I agree, all of the items here <em>are</em> tracking issues themselves</p>",
        "id": 275809911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613778
    },
    {
        "content": "<p>Yeah, everything there has a linked issue. I think we can close.</p>",
        "id": 275809997,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613811
    },
    {
        "content": "<p>There's also a few other \"meta tracking issues\" that I think we can close similiarly</p>",
        "id": 275810031,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647613831
    },
    {
        "content": "<p>The only potential question is: There's a reason that simonsapin went through this exercise</p>",
        "id": 275810062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613849
    },
    {
        "content": "<blockquote>\n<p>As to whether it’s useful, that’s a different question. When the stability mechanism was introduced some months before 1.0.0 we started out with everything in the standard library and a lot of language features being unstable \"by default\", then worked on stabilizing (or removing) them one by one. I think it’s mildly interesting to track the progress of that, and in particular to see what’s left and consider why each of those is still blocked.</p>\n</blockquote>",
        "id": 275810080,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613859
    },
    {
        "content": "<p>(From <a href=\"https://github.com/rust-lang/rust/issues/39954#issuecomment-468897444\">https://github.com/rust-lang/rust/issues/39954#issuecomment-468897444</a>)</p>",
        "id": 275810093,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613866
    },
    {
        "content": "<p>But I'm not moved by that motivation personally, at least not given the presence of backlog bonanza in lang and compiler, and to some extent libs.</p>",
        "id": 275810136,
        "sender_full_name": "simulacrum",
        "timestamp": 1647613894
    },
    {
        "content": "<p>I think this was more useful back in 2017 than it is today.</p>",
        "id": 275810153,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647613905
    },
    {
        "content": "<p>yes, I dont think at this point we need to give special attention to the circa 1.0.0 feature set</p>",
        "id": 275810167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613914
    },
    {
        "content": "<p>I think we're all in agreement, though I do like <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> 's point that part of the reason that we can get away with closing this is that the lang and compiler teams <em>are</em> now working on tracking issue backlog</p>",
        "id": 275810260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647613944
    },
    {
        "content": "<p>next</p>",
        "id": 275810484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614062
    },
    {
        "content": "<h3>\"Metaissue for Visual Studio debugging Rust\" <a href=\"https://github.com/rust-lang/rust/issues/40460\">rust#40460</a></h3>\n<ul>\n<li>Maybe reclassify as T-devtools? Or just close this in favor of specific issues. - Jack</li>\n</ul>",
        "id": 275810493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614070
    },
    {
        "content": "<p>TBH, I think we can just close this.</p>",
        "id": 275810532,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614091
    },
    {
        "content": "<p>really? You don't think it represents a useful set of goals for wg-debugging to evaluate status on ?</p>",
        "id": 275810584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614119
    },
    {
        "content": "<p>That's what I thought. But I was trying not to just recommend closing everything...</p>",
        "id": 275810590,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647614121
    },
    {
        "content": "<p>I believe all of the checkboxed items are done.</p>",
        "id": 275810600,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614128
    },
    {
        "content": "<p>I think it's maybe a bit too...arbitrary?</p>",
        "id": 275810643,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647614150
    },
    {
        "content": "<p>And there's kind of an infinite set of features that could be described as \"Metaissue for VS debugging Rust\"</p>",
        "id": 275810662,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614159
    },
    {
        "content": "<p>yes, if it grows over time with new features, then it will never be finished</p>",
        "id": 275810667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614161
    },
    {
        "content": "<p>We should open fresh issues for new goals</p>",
        "id": 275810753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614181
    },
    {
        "content": "<p>Okay then. How sure are we that the original set of checkboxes are done?</p>",
        "id": 275810783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614202
    },
    {
        "content": "<p>I know points 1, 2 and 3 are done.</p>",
        "id": 275810812,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614220
    },
    {
        "content": "<p>I believe point 4 is as well but I think it requires VS 2022.</p>",
        "id": 275810841,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614243
    },
    {
        "content": "<p>ah. and \"watches for shadowed variables confuse VS\" may be not specific enough to evaluate</p>",
        "id": 275810842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614245
    },
    {
        "content": "<p>hmm okay</p>",
        "id": 275810853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614250
    },
    {
        "content": "<p>There are also a lot of other VS/Windows debugging issues that are open and not mentioned here.</p>",
        "id": 275811007,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614312
    },
    {
        "content": "<p>Personally, I'd rather just look at <code>A-debuginfo</code> and <code>O-windows</code> issues than try to keep an up-to-date list here.</p>",
        "id": 275811067,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614340
    },
    {
        "content": "<p>If there's a specific goal we're pushing towards, then a tracking issue makes sense. But as it is, this metaissue doesn't provide a lot of value IMO.</p>",
        "id": 275811133,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614374
    },
    {
        "content": "<p>okay. left a comment and closed.</p>",
        "id": 275811283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614434
    },
    {
        "content": "<h3>\"Tracking issue for the <code>thiscall</code> calling convention\" <a href=\"https://github.com/rust-lang/rust/issues/42202\">rust#42202</a></h3>\n<ul>\n<li>There is a <a href=\"https://github.com/rust-lang/rust/issues/42202#issuecomment-922652127\">comment</a> for stabilization, but also a <a href=\"https://github.com/rust-lang/rust/issues/42202#issuecomment-1006213947\">question</a> of duplication of a everything but the abi for a function.</li>\n</ul>",
        "id": 275811339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614457
    },
    {
        "content": "<p>ooh our first stabilization report</p>",
        "id": 275811428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614510
    },
    {
        "content": "<p>This needs more tests lol</p>",
        "id": 275811537,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614551
    },
    {
        "content": "<p>I fixed the broken mangling for thiscall functions in LLVM like 6 months ago and there were no tests that needed updating.</p>",
        "id": 275811632,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614585
    },
    {
        "content": "<p>I have to admit, I'm confused by this tickt</p>",
        "id": 275811662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614598
    },
    {
        "content": "<p>so the \"thiscall\" calling convention is not support on x86_64, only on i686 ?</p>",
        "id": 275811715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614622
    },
    {
        "content": "<p>Uh essentially</p>",
        "id": 275811730,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614632
    },
    {
        "content": "<p>There are only 2 ABIs on x86_64 Windows: the standard x86_64 one and vectorcall. (IIRC)</p>",
        "id": 275811806,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614650
    },
    {
        "content": "<p>huh</p>",
        "id": 275811820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614658
    },
    {
        "content": "<p>i686 has a bunch</p>",
        "id": 275811836,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614665
    },
    {
        "content": "<p>and what about the argument about \"why is this a hard error while fastcall et al are only warnings\" ?</p>",
        "id": 275811927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614704
    },
    {
        "content": "<p>overall I do have sympathy for the idea that we need a way to choose different ABIs based on cfg flags</p>",
        "id": 275812016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614746
    },
    {
        "content": "<p>I don't have all the design constraints for that lint paged in right now. It's possible we should error if the user asks for thiscall when it does nothing.</p>",
        "id": 275812163,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614804
    },
    {
        "content": "<p><code>extern cfg_match!(target_arch, \"x86\" =&gt; \"thiscall\", \"x86_64\" =&gt; \"fastcall\") fn foo() {}</code></p>",
        "id": 275812175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614814
    },
    {
        "content": "<p>It's also possible maybe we should just warn in the case of macro generated code or something.</p>",
        "id": 275812180,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614817
    },
    {
        "content": "<p>Or if you want your declaration to be as x-plat as possible.</p>",
        "id": 275812202,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647614833
    },
    {
        "content": "<p>Okay. I'm thinking S-tracking-needs-summary and S-tracking-design-concerns ?</p>",
        "id": 275812247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647614864
    },
    {
        "content": "<p>okay. left longish comment with labels</p>",
        "id": 275812806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615115
    },
    {
        "content": "<p>is there anyone interested in writing up an MCP for \"macro expansion in (extern) ABI position\"?</p>",
        "id": 275812893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615147
    },
    {
        "content": "<p>because while it was fun sketching out my <code>cfg_match</code> macro, the <em>real</em> work is in that MCP.</p>",
        "id": 275812937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615172
    },
    {
        "content": "<p>anyway, next up</p>",
        "id": 275812960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615184
    },
    {
        "content": "<h3>\"<code>underscore_literal_suffix</code> future-compatibility warnings\" <a href=\"https://github.com/rust-lang/rust/issues/42326\">rust#42326</a></h3>\n<ul>\n<li>Underscores after float literals have been an error since May 2017; underscore after string literal has been warn since then. Can probably change underscore after string literal to deny-by-default.</li>\n</ul>",
        "id": 275812979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615194
    },
    {
        "content": "<p>I'm going to add the future-incompat label to this</p>",
        "id": 275813047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615233
    },
    {
        "content": "<blockquote>\n<p>At the beginning of each 6-week release cycle, the Rust compiler team<br>\nwill review the set of outstanding future compatibility warnings and<br>\nnominate some of them for Final Comment Period. </p>\n</blockquote>\n<p>Lol</p>",
        "id": 275813120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615259
    },
    {
        "content": "<p>promises promises</p>",
        "id": 275813148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615279
    },
    {
        "content": "<p>Seems like we could run crater on moving it to a hard error as a next step, probably?</p>",
        "id": 275813214,
        "sender_full_name": "simulacrum",
        "timestamp": 1647615314
    },
    {
        "content": "<p>I guess we may want to proposal a steering meeting dedicated to <em>that</em> set of issues</p>",
        "id": 275813222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202022-03-18.20compiler-team.23484/near/275813214\">said</a>:</p>\n<blockquote>\n<p>Seems like we could run crater on moving it to a hard error as a next step, probably?</p>\n</blockquote>\n<p>we could. Is it part of the things flagged by <code>cargo report future-incompat</code> yet?</p>",
        "id": 275813273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615346
    },
    {
        "content": "<p>that is where I would start, I think.</p>",
        "id": 275813352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615364
    },
    {
        "content": "<p>the lint it self <em>is</em> done</p>",
        "id": 275813434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615405
    },
    {
        "content": "<p>(right?)</p>",
        "id": 275813458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615415
    },
    {
        "content": "<p>/me goes to check</p>",
        "id": 275813461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615417
    },
    {
        "content": "<p>heh, <code>1._</code> is a hard error anyway, which this already says</p>",
        "id": 275813590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615474
    },
    {
        "content": "<p>(but <code>1.0_</code> is allowed, and that seems correct to me.)</p>",
        "id": 275813666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615503
    },
    {
        "content": "<p>anyway the point is that we current warn on <code>\"Foo\"_</code>, as it says</p>",
        "id": 275813708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615524
    },
    {
        "content": "<p>Right</p>",
        "id": 275813924,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647615606
    },
    {
        "content": "<p>I think the \"remaining steps\" here are: make <code>\"Foo\"_</code> a deny-by-default lint, then eventually make it an error</p>",
        "id": 275814047,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647615639
    },
    {
        "content": "<p>(then close)</p>",
        "id": 275814054,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647615643
    },
    {
        "content": "<p>I am a little worried that I'm not sure its a proper lint today</p>",
        "id": 275814093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615656
    },
    {
        "content": "<p>of course, with proper crater runs etc. along the way</p>",
        "id": 275814104,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647615659
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">warning</span>: <span class=\"nc\">underscore</span><span class=\"w\"> </span><span class=\"n\">literal</span><span class=\"w\"> </span><span class=\"n\">suffix</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">allowed</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"s\">\"Foo\"</span><span class=\"n\">_</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">          </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">warning</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">previously</span><span class=\"w\"> </span><span class=\"n\">accepted</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">phased</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"kr\">become</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">hard</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">see</span><span class=\"w\"> </span><span class=\"n\">issue</span><span class=\"w\"> </span>#<span class=\"mi\">42326</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/rust-lang/rust/issues/42326&gt; for more information</span>\n</code></pre></div>",
        "id": 275814151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615675
    },
    {
        "content": "<p>it didn't include a \"here's the lint name you use to allow this, via <code>#![allow(underscore_literal_suffix)]</code></p>",
        "id": 275814214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615701
    },
    {
        "content": "<p>so I'd want to check on that too</p>",
        "id": 275814235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615710
    },
    {
        "content": "<p>yeah, looks like it's just a span_warn or similar</p>",
        "id": 275814241,
        "sender_full_name": "simulacrum",
        "timestamp": 1647615714
    },
    {
        "content": "<p>do we want to say that's part of the necessary implementation?</p>",
        "id": 275814393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615764
    },
    {
        "content": "<p>seems like potentially unnecessary work</p>",
        "id": 275814411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615771
    },
    {
        "content": "<p>if fallout from crater is low...</p>",
        "id": 275814421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615776
    },
    {
        "content": "<p>I would not bother changing it, seems not necessary</p>",
        "id": 275814437,
        "sender_full_name": "simulacrum",
        "timestamp": 1647615784
    },
    {
        "content": "<p>(particularly if we can in fact just land a hard error with little breakage)</p>",
        "id": 275814468,
        "sender_full_name": "simulacrum",
        "timestamp": 1647615798
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/285fa7ecd05dcbfdaf2faaf20400f5f92b39b3c6/compiler/rustc_parse/src/lexer/mod.rs#L250\">https://github.com/rust-lang/rust/blob/285fa7ecd05dcbfdaf2faaf20400f5f92b39b3c6/compiler/rustc_parse/src/lexer/mod.rs#L250</a></p>",
        "id": 275814542,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647615827
    },
    {
        "content": "<p>Yeah, it's just a <code>struct_span_warn</code></p>",
        "id": 275814561,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647615834
    },
    {
        "content": "<p>I don't know if its <em>that</em> hard to change to a proper lint, personally</p>",
        "id": 275814631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615853
    },
    {
        "content": "<p>Honestly the fact that <code>\"Foo\"_</code> is \"allowed\" surprised me</p>",
        "id": 275814649,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647615863
    },
    {
        "content": "<p>I wrote a comment with this steps outlined:</p>\n<p>Next steps are</p>\n<ol>\n<li>Run crater on experiementally moving it to hard error, to evaluate fallout.</li>\n<li>If fallout is non-trivial, then it needs to be moved to a proper lint based implementation</li>\n<li>Likewise, if fallout is non-trival, then ensure that it <em>is</em> included in the <code>cargo report future-incompat</code> output, when relevant.</li>\n</ol>",
        "id": 275814728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615901
    },
    {
        "content": "<p>I'm thinking S-tracking-needs-to-bake is the right tag for a \"needs crater run, at least\"; sound good?</p>",
        "id": 275814787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615927
    },
    {
        "content": "<p>Oh goodness we are over time</p>",
        "id": 275814949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615986
    },
    {
        "content": "<p>Hey how many issues did we get through?</p>",
        "id": 275814969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647615997
    },
    {
        "content": "<p>eight! oh dear</p>",
        "id": 275815007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616012
    },
    {
        "content": "<p>that's worse than last time</p>",
        "id": 275815021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616017
    },
    {
        "content": "<p>but then again, last time was filled with more noise, perhaps, with trivial stuff?</p>",
        "id": 275815054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616028
    },
    {
        "content": "<p>I thought all of these were at least <em>interesting</em> to talk about!</p>",
        "id": 275815102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616046
    },
    {
        "content": "<p>Anyway, thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Have a great weekend, y'all!</p>",
        "id": 275815143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616059
    },
    {
        "content": "<p>Is there also a broad sentiment that \"meta tracking issues\" aren't super helpful and can probably be closed?</p>",
        "id": 275815414,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616168
    },
    {
        "content": "<p>(or at least not C-tracking-issue)</p>",
        "id": 275815434,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616178
    },
    {
        "content": "<p>If there's a WG or something that is actively using the \"meta tracking issue\", then I'm inclined to leave it and allow them to use whatever processes work for them. But for \"meta tracking issues\" that are just sitting there, I would be in favor of closing them.</p>",
        "id": 275815965,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647616390
    },
    {
        "content": "<p>I could also totally see someone just gathering up all the meta tracking issues, making a new issue, FCPing T-compiler and saying \"these are going to be closed; speak now if they're being used\"</p>",
        "id": 275816377,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616550
    },
    {
        "content": "<p>though, that might be more work than needed</p>",
        "id": 275816487,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616590
    },
    {
        "content": "<p>I was just now reflecting on how we ended up with some of these patterns</p>",
        "id": 275816612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616660
    },
    {
        "content": "<p>e.g. the Visual Studio debugging Rust issue, <a href=\"https://github.com/rust-lang/rust/issues/40460\">rust#40460</a>: On the one hand, I totally agree with the reasoning we stated in this meeting (the set of items will keep growing without bound and the issue will never get closed)</p>",
        "id": 275816747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616701
    },
    {
        "content": "<p>and in practice, if someone <em>wants</em> a central point for an ever growing list of issues, then they should make a wiki page or something</p>",
        "id": 275816802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616731
    },
    {
        "content": "<p>Or a project on github</p>",
        "id": 275816841,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616750
    },
    {
        "content": "<p>right, maybe that</p>",
        "id": 275816867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616760
    },
    {
        "content": "<p>That's more or less literally the design for them</p>",
        "id": 275816915,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616777
    },
    {
        "content": "<p>but the realization i had at some point is that one reason someone might <em>want</em> an issue is for <strong>ease of reference</strong>, as in hyperlinking</p>",
        "id": 275816927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616781
    },
    {
        "content": "<p>like, that's how I've justified keeping the <a href=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a> issue (which is the issue number for the compiler team meetings)</p>",
        "id": 275816978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616800
    },
    {
        "content": "<p>because every other option involves a link that is going to be (significantly?) longer than that issue number</p>",
        "id": 275817079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616839
    },
    {
        "content": "<p>I think for something like <a href=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a>, we could actually just close it. The link is still valid and you can still edit the issue even when closed.</p>",
        "id": 275817187,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647616892
    },
    {
        "content": "<p>having said that, I don't even use the process outlined on <a href=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a> anymore, not directly. I just follow the prepared agenda (thanks again to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> )</p>",
        "id": 275817189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616895
    },
    {
        "content": "<p>yes, you're right. Its already closed for comments. I think I <em>will</em> close it, right now.</p>",
        "id": 275817223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616910
    },
    {
        "content": "<p>Could <a href=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a> get moved to rust-lang/compiler-team?</p>",
        "id": 275817231,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616914
    },
    {
        "content": "<p>that would lengthen it as a hyperlink</p>",
        "id": 275817293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616925
    },
    {
        "content": "<p>(or just closed)</p>",
        "id": 275817335,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616941
    },
    {
        "content": "<p>I am indeed going to close it right now</p>",
        "id": 275817359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647616952
    },
    {
        "content": "<p>that seems better as a page somewhere than an issue :)</p>",
        "id": 275817386,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647616963
    },
    {
        "content": "<p>It is truly out of date; it reflects a time when we hadn't committed to <a href=\"http://hackmd.io\">hackmd.io</a> as our post etherpad solution.</p>",
        "id": 275817547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617036
    },
    {
        "content": "<p>(there's <em>so</em> much out of date on it.)</p>",
        "id": 275817655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617063
    },
    {
        "content": "<p>Maybe I'm just a pragmatist, but to me a core prereq for an issue is that it can be closed under some condition</p>",
        "id": 275818073,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647617233
    },
    {
        "content": "<p>Which rules out issues like the above, or issues where there is an ever-growing list of things that could be done</p>",
        "id": 275818129,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647617260
    },
    {
        "content": "<p>yes, I think you are right. My view point on issues dates from a time when it wasn't so easy (from my POV) to add new hyperlink shorteners on the chat platforms we were using</p>",
        "id": 275819618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617835
    },
    {
        "content": "<p>or at least, that's my current story. Sleep deprivation over past 5 years has turned my brain to mush, so don't bother asking me to remember what it was like back when we used IRC</p>",
        "id": 275819685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617876
    },
    {
        "content": "<p>but nowadays we have markdown in our chat platform, so it is way more palatable to use proper websites for things</p>",
        "id": 275819792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617915
    },
    {
        "content": "<p>and therefore issues need not bear the same load that they used to</p>",
        "id": 275819847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1647617946
    }
]