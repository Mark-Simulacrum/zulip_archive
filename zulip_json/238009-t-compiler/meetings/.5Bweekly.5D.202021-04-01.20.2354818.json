[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/RA9MK7AzQnK8cMYnHttvNQ?view\">meeting agenda</a></p>\n<p>We have checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>  checkin by @_oli</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span>  checkin by @_lqd</li>\n</ul>",
        "id": 232739199,
        "sender_full_name": "apiraino",
        "timestamp": 1617275240
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the meeting starts in about a minute, add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you are here. I’ll be a minute or two late. While I’m gone, Feel free to make your own </p>\n<h2>Announcements</h2>",
        "id": 232760758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285610
    },
    {
        "content": "<ul>\n<li>No Steering Meeting tomorrow (2021-04-02), as it is holiday in many countries.</li>\n</ul>",
        "id": 232761742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285949
    },
    {
        "content": "<h3>MCPs/FCPs</h3>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Update the existing musl targets to be dynamically linked.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">compiler-team#422</a></li>\n<li>\"Rename -Cllvm-args to something backend agnostic\" <a href=\"https://github.com/rust-lang/compiler-team/issues/421\">compiler-team#421</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232761822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285965
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></li>\n<li>\"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></li>\n<li>\"Embed version numbers in backport nominations and regression labels\" <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"Eagerly construct bodies of THIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/409\">compiler-team#409</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232761839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285975
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 232761859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285982
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Lang Item for Transmutability\" <a href=\"https://github.com/rust-lang/compiler-team/issues/411\">compiler-team#411</a></li>\n<li>\"Switch JSON serialization from rustc_serialize to serde\" <a href=\"https://github.com/rust-lang/compiler-team/issues/418\">compiler-team#418</a></li>\n<li>\"Lint large assignments and locals\" <a href=\"https://github.com/rust-lang/compiler-team/issues/420\">compiler-team#420</a></li>\n<li>\"Adding diesel to the cargotest suite\" <a href=\"https://github.com/rust-lang/rust/pull/81507\">rust#81507</a></li>\n<li>\"reduce threads spawned by ui-tests\" <a href=\"https://github.com/rust-lang/rust/pull/81942\">rust#81942</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232761886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617285996
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Filter out query machinery from compiler backtraces by default\" <a href=\"https://github.com/rust-lang/compiler-team/issues/410\">compiler-team#410</a></li>\n<li>\"MCP: Embed the <code>hir_id</code> of the _awaited expression_ into <code>DesugaringKind</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/413\">compiler-team#413</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232761916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286010
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Implement indexing slices with pairs of core::ops::Bound&lt;usize&gt;\" <a href=\"https://github.com/rust-lang/rust/pull/77704\">rust#77704</a></li>\n<li>\"Stabilize or_patterns (RFC 2535, 2530, 2175)\" <a href=\"https://github.com/rust-lang/rust/pull/79278\">rust#79278</a></li>\n<li>\"Make NonNull::as_ref (and friends) return refs with unbound lifetimes\" <a href=\"https://github.com/rust-lang/rust/pull/80771\">rust#80771</a></li>\n<li>\"Stabilize <code>assoc_char_funcs</code> and <code>assoc_char_consts</code>\" <a href=\"https://github.com/rust-lang/rust/pull/82919\">rust#82919</a></li>\n<li>\"Stabilize <code>bufreader_seek_relative</code>\" <a href=\"https://github.com/rust-lang/rust/pull/82992\">rust#82992</a></li>\n<li>\"Deprecate RustcEncodable and RustcDecodable.\" <a href=\"https://github.com/rust-lang/rust/pull/83160\">rust#83160</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232761932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286019
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 232761949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286025
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>:</p>\n<blockquote>\n<ul>\n<li>Partook in the shrinkmem sprint</li>\n<li>mir-opt-level=2 is now automatically activated in release mode</li>\n<li>shaved off a few percentages of max-rss by adjusting MIR datastructures</li>\n<li>ran some experiments to pinpoint an MVP for MIR inlining</li>\n</ul>\n</blockquote>",
        "id": 232761979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286031
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> checkin by <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>\n<blockquote>\n<p>Nothing especially newsworthy since the last check-in, only a little progress has been made since then.</p>\n</blockquote>",
        "id": 232762100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286080
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 232762164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286090
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix the <code>unsafe_block_in_unsafe_fn</code>s stabilized version\" <a href=\"https://github.com/rust-lang/rust/pull/83736\">rust#83736</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span> </li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> </li>\n<li>fixes issue <a href=\"https://github.com/rust-lang/rust/issues/83735\">#83735</a>, a wrong claim about <code>unsafe_block_in_unsafe_fn</code> being stabilized in 1.51.0</li>\n</ul>\n</li>\n</ul>",
        "id": 232762190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286098
    },
    {
        "content": "<p>Hmm I'm realizing now that this warning doesn't actually show up on beta due to a bug</p>",
        "id": 232762304,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286138
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83736\">#83736</a> just changes the warning text to point to a newer release</p>",
        "id": 232762458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286193
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83715\">https://github.com/rust-lang/rust/issues/83715</a></p>",
        "id": 232762466,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286196
    },
    {
        "content": "<p>should <a href=\"https://github.com/rust-lang/rust/issues/83736\">#83736</a> be a stable-nominated too?</p>",
        "id": 232762483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286202
    },
    {
        "content": "<p>no, because 1.51 doesn't have the stable feature</p>",
        "id": 232762627,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286240
    },
    {
        "content": "<p>it was only stabilized in 1.52 (Currently on beta)</p>",
        "id": 232762663,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286250
    },
    {
        "content": "<p>Oh, right, okay.</p>",
        "id": 232762672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286253
    },
    {
        "content": "<p>Since this bug isn't actually visible on beta/stable, no backport is needed and this can ride the trains</p>",
        "id": 232762724,
        "sender_full_name": "oli",
        "timestamp": 1617286276
    },
    {
        "content": "<p>yeah I think rustdoc doesn't document language features</p>",
        "id": 232762759,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286292
    },
    {
        "content": "<p>if the warning doesn’t show up in the beta, is that itself a problem? I.e., <em>is</em> this actually going to be stable in 1.52 ?</p>",
        "id": 232762774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286296
    },
    {
        "content": "<p>or is it going to wait until 1.53?</p>",
        "id": 232762808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286307
    },
    {
        "content": "<p>no, on beta you can't use feature gates, so you don't get an error about the version</p>",
        "id": 232762841,
        "sender_full_name": "oli",
        "timestamp": 1617286322
    },
    {
        "content": "<p>okay Isee</p>",
        "id": 232762950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286350
    },
    {
        "content": "<p>I get it now</p>",
        "id": 232762958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286353
    },
    {
        "content": "<p>yeah this doesn’t seem like it needs to be backported at all then</p>",
        "id": 232762976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286359
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/83736\">#83736</a>: declining to backport to beta. Letting it ride the trains, as oli said.</p>",
        "id": 232763001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-01.20.2354818/near/232762774\">said</a>:</p>\n<blockquote>\n<p>if the warning doesn’t show up in the beta, is that itself a problem? I.e., <em>is</em> this actually going to be stable in 1.52 ?</p>\n</blockquote>\n<p>checking for feature gates is not actually related to whether the feature gate is marked as active or not <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 232763014,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286370
    },
    {
        "content": "<p>you could have an <code>if tcx.features().unsafe_op { ... }</code> block anywhere</p>",
        "id": 232763066,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286388
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 232763139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286414
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 232763154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286419
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 232763164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286425
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix Self keyword doc URL conflict on case insensitive file systems (until definitely fixed on rustdoc)\" <a href=\"https://github.com/rust-lang/rust/pull/83678\">rust#83678</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> </li>\n<li>approved by <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> </li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/80504\">#80504</a> and prevents <a href=\"https://github.com/rust-lang/rust/issues/83154\">#83154</a> and related <a href=\"https://github.com/rust-lang/rustup/issues/2694\">rust-lang/rustup#2694</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232763190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286432
    },
    {
        "content": "<p>I'm trying to check now that this actually fixes the issue</p>",
        "id": 232763260,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286452
    },
    {
        "content": "<p>can we delay this a week?</p>",
        "id": 232763278,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286455
    },
    {
        "content": "<p>its fine with me</p>",
        "id": 232763288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286460
    },
    {
        "content": "<p>we’ll go ahead and table <a href=\"https://github.com/rust-lang/rust/issues/83678\">#83678</a>, wait to decide on it next week.</p>",
        "id": 232763334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286479
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 232763351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286489
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 232763365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286496
    },
    {
        "content": "<ul>\n<li>\"add dynamically-linked musl targets\" <a href=\"https://github.com/rust-lang/rust/pull/82556\">rust#82556</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bdesign.20meeting.5D.202021-03-26.20musl.20linking.20compiler-team.23416\">actionables from the meeting</a><ul>\n<li>Written an <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">MCP</a>, verify whether we can give warnings, and have the team sign it off</li>\n<li>Finally a blog post to give a heads up and guidance <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bdesign.20meeting.5D.202021-03-26.20musl.20linking.20compiler-team.23416/near/231979422\">comment</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 232763387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286506
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , we should probably close <a href=\"https://github.com/rust-lang/rust/issues/82556\">rust#82556</a>, right? Or should that wait until MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">compiler-team#422</a> is accepted?</p>",
        "id": 232763485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286540
    },
    {
        "content": "<p>I think we should wait to close. We should communicate with the author prior to closing to make it clear what's going on.</p>",
        "id": 232763531,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617286559
    },
    {
        "content": "<p>Okay. Sounds good.</p>",
        "id": 232763609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286569
    },
    {
        "content": "<p>but we certainly don’t need to <em>do</em> anything with <a href=\"https://github.com/rust-lang/rust/issues/82556\">#82556</a> for the time being.</p>",
        "id": 232763648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286582
    },
    {
        "content": "<p>so lets move along.</p>",
        "id": 232763657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286585
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 232763686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286597
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">62 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">39 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 3 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 0 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 38 P-high, 91 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 232763699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286603
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 232763715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286609
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>\"Double free in Vec::from_iter specialization when drop panics\" <a href=\"https://github.com/rust-lang/rust/issues/83618\">rust#83618</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"329529\">@Yechan Bae</span></li>\n<li><span class=\"user-mention\" data-user-id=\"239181\">@The 8472</span> submitted PR <a href=\"https://github.com/rust-lang/rust/pull/83629\">#83629</a></li>\n<li>PR assigned for review to <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span></li>\n</ul>\n</li>\n</ul>",
        "id": 232763728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286616
    },
    {
        "content": "<p>glad to see fast turnaround here.</p>",
        "id": 232763809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286651
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 232763827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286659
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 232763849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286666
    },
    {
        "content": "<ul>\n<li>\"WASI: path_open regression in Rust 1.51 when using LTO\" <a href=\"https://github.com/rust-lang/rust/issues/82758\">rust#82758</a><ul>\n<li>fixed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> in PR <a href=\"https://github.com/rust-lang/rust/pull/82804\">#82804</a>, PR should be in 1.51 stable</li>\n<li>is there an actionable for this issue?</li>\n</ul>\n</li>\n</ul>",
        "id": 232763876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286674
    },
    {
        "content": "<p>(Mostly off topic, but I think <span class=\"user-mention silent\" data-user-id=\"329529\">Yechan Bae</span> is a researcher, it's cool to see formal methods finding unsoundness :)</p>",
        "id": 232763944,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617286690
    },
    {
        "content": "<p>so, can we close <a href=\"https://github.com/rust-lang/rust/issues/82758\">#82758</a> now? The issue reported says that <a href=\"https://github.com/rust-lang/rust/issues/82804\">#82804</a> fixed it for them, and <a href=\"https://github.com/rust-lang/rust/issues/82804\">#82804</a> is part of 1.51 ...</p>",
        "id": 232764038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^ ?</p>",
        "id": 232764110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286766
    },
    {
        "content": "<p>I think we can close <a href=\"https://github.com/rust-lang/rust/issues/82758\">#82758</a>. Doing so now.</p>",
        "id": 232764177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286796
    },
    {
        "content": "<p>yeah I think so too</p>",
        "id": 232764212,
        "sender_full_name": "simulacrum",
        "timestamp": 1617286804
    },
    {
        "content": "<ul>\n<li>\"<code>probe-stack=inline-asm</code> generates wrong DWARF information\" <a href=\"https://github.com/rust-lang/rust/issues/83139\">rust#83139</a><ul>\n<li>partially mitigated by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> in PR <a href=\"https://github.com/rust-lang/rust/pull/83412\">#82412</a>, which reverts PR <a href=\"https://github.com/rust-lang/rust/pull/77885\">#77885</a></li>\n<li>from the PR comment: after we resolve <a href=\"https://github.com/rust-lang/rust/issues/83139\">#83139</a> (potentially by backporting a fix to LLVM or by deciding that one cannot rely on the quality of our DWARF output in the manner described in <a href=\"https://github.com/rust-lang/rust/issues/83139\">#83139</a>), we can change this back</li>\n</ul>\n</li>\n</ul>",
        "id": 232764415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286872
    },
    {
        "content": "<p>yeah we need to actually follow-through on deciding what to do here.</p>",
        "id": 232764512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286907
    },
    {
        "content": "<p>the LLVM patch is <a href=\"https://reviews.llvm.org/D98789\">https://reviews.llvm.org/D98789</a></p>",
        "id": 232764588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286928
    },
    {
        "content": "<p>work is ongoing there</p>",
        "id": 232764643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286952
    },
    {
        "content": "<p>so I think we can say this is “making progress” and leave it at that for now</p>",
        "id": 232764668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286961
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 232764700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286976
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/7af0553b65a918cf4b19fa289a85bd97abf3f43b/triage/2021-04-01.md\">2021-04-01 Triage Log</a></p>\n</blockquote>\n<p>A somewhat negative weak for performance where regressions outweigh improvements. Sadly, a lot of the regressions don't seem very straight-forward to understand, and so more investigation will be necessary.</p>\n<p>Triage done by <strong>@rylev</strong>: 2 Regressions, 2 Improvements, 3 Mixed, 2 of them in rollups</p>",
        "id": 232764723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617286985
    },
    {
        "content": "<h4>Regressions</h4>\n<p>implement <code>feature(const_generics_defaults)</code> <a href=\"https://github.com/rust-lang/rust/issues/75384\">#75384</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=db492ecd5ba6bd82205612cebb9034710653f0c2&amp;end=5b33de3340c7b36646af46303a30f7066b4bd7db&amp;stat=instructions:u\">instruction counts</a> (up to 1.1% on <code>incr-unchanged</code> builds of <code>ucd-check</code>)</li>\n<li>A small regression in incremental compilation in one particular benchmark <code>ucd</code>. The query affected is <code>generate_crate_metadata</code> which tracks with the fact that incremental compilation is affected.</li>\n<li>A quick scan of the changes doesn't reveal anything suspicious as encoding of metadata has changed only a little bit and should only be impacted when encoding something with default const generics.</li>\n</ul>\n<p>Use <code>EvaluatedToOkModuloRegions</code> whenever we erase regions <a href=\"https://github.com/rust-lang/rust/issues/83220\">#83220</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=f5fe425c925ef36d5f4c18cfa44173fc42de31b8&amp;end=07e0e2ec268c140e607e1ac7f49f145612d0f597&amp;stat=instructions:u\">instruction counts</a> (up to 1.8% on <code>full</code> builds of <code>hyper-2-check</code>)</li>\n<li>A moderate regression in trait obligation evaluation which this code directly impacts. </li>\n<li>A performance run was performed, but the impact was deemed acceptable. The author and reviewer <a href=\"https://github.com/rust-lang/rust/pull/83220#issuecomment-811752366\">were pinged</a> about why the performance is acceptable.</li>\n</ul>\n<p>Refactor <code>Binder</code> to track bound vars <a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a5029ac0ab372aec515db2e718da6d7787f3d122&amp;end=4fdac23f3171e2f8864d359a21da600dd3faafc9&amp;stat=instructions:u\">instruction counts</a> (up to 3.9% on <code>incr-unchanged</code> builds of <code>externs-check</code>)</li>\n<li>Moderate regression in trait resolution queries which this code directly impacts. While a performance run was made, it was never discussed in the PR. The author and reviewer <a href=\"https://github.com/rust-lang/rust/pull/76814#issuecomment-811758311\">were pinged</a>.</li>\n</ul>",
        "id": 232764775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287002
    },
    {
        "content": "<p>so, PR <a href=\"https://github.com/rust-lang/rust/issues/83220\">#83220</a>, IIUC, is proactive defense. We don’t know of actual unsoundness, but the code <em>was</em> wrong. I’m guessing that’s why the impact was deemed acceptable.</p>",
        "id": 232765129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287137
    },
    {
        "content": "<p>for PR <a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a> … heh, maybe the “up to 3.9%” just looked so “good” compared to the earlier results that saw regressions that were on the order of 700% regression. :)</p>",
        "id": 232765317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287213
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a>, we did discuss perf results, just not on github :)</p>",
        "id": 232765556,
        "sender_full_name": "Jack Huey",
        "timestamp": 1617287310
    },
    {
        "content": "<p>(Also, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> did provide feedback on the performance regressions from <a href=\"https://github.com/rust-lang/rust/issues/76814\">#76814</a> about 2 hours ago)</p>",
        "id": 232765565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287313
    },
    {
        "content": "<p>it sounds likethere are some ideas for trying to buy back some performance again</p>",
        "id": 232765667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287350
    },
    {
        "content": "<p>anyway, lets proceed</p>",
        "id": 232765695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287361
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/83432\">#83432</a></li>\n<li>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/83580\">#83580</a></li>\n</ul>",
        "id": 232765715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287367
    },
    {
        "content": "<h4>Mixed</h4>\n<ul>\n<li>Remove assignments to ZST places instead of marking ZST return place as unused <a href=\"https://github.com/rust-lang/rust/issues/83177\">#83177</a></li>\n<li>Import small cold functions <a href=\"https://github.com/rust-lang/rust/issues/82980\">#82980</a></li>\n<li>Reduce the impact of Vec::reserve calls that do not cause any allocation <a href=\"https://github.com/rust-lang/rust/issues/83357\">#83357</a></li>\n</ul>",
        "id": 232765735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287374
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>The <a href=\"https://github.com/rust-lang/rust/pull/82964#issuecomment-800663588\">issue</a> from two weeks ago has stalled.</li>\n<li>Follow-ups from this week:<br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/83220#issuecomment-811752366\">https://github.com/rust-lang/rust/pull/83220#issuecomment-811752366</a><br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/76814#issuecomment-811758311\">https://github.com/rust-lang/rust/pull/76814#issuecomment-811758311</a><br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/82980#issuecomment-811767001\">https://github.com/rust-lang/rust/pull/82980#issuecomment-811767001</a><br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/83357#issuecomment-811770400\">https://github.com/rust-lang/rust/pull/83357#issuecomment-811770400</a></li>\n</ul>",
        "id": 232765769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287383
    },
    {
        "content": "<p>(the “issue from two weeks ago” is PR <a href=\"https://github.com/rust-lang/rust/issues/82964\">#82964</a>, “Shorten rustc_middle::ty::mod”)</p>",
        "id": 232765894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287416
    },
    {
        "content": "<p>I think the PR author needs some assistance with making progress there. I won’t be able to carve out time for that this week (stuff at home), but next week should be better, I think.</p>",
        "id": 232766012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287465
    },
    {
        "content": "<p>(The PR authors issue is “Cannot profile local rustc” (with rusts-perf) <a href=\"https://github.com/rust-lang/rustc-perf/issues/854\">https://github.com/rust-lang/rustc-perf/issues/854</a> )</p>",
        "id": 232766135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287506
    },
    {
        "content": "<p>Yeah, I've not had time to look into it unfortunately</p>",
        "id": 232766175,
        "sender_full_name": "simulacrum",
        "timestamp": 1617287518
    },
    {
        "content": "<p>FWIW this is essentially benchmark of ObligationCauseCode hashing</p>",
        "id": 232766226,
        "sender_full_name": "tm",
        "timestamp": 1617287525
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 232766315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287555
    },
    {
        "content": "<ul>\n<li>\"<code>undefined reference to</code> linker error when using dylibs\" <a href=\"https://github.com/rust-lang/rust/issues/82151\">rust#82151</a><ul>\n<li>(mentioned in <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-18.20.2354818/near/230879756\">past meeting</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 232766346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287566
    },
    {
        "content": "<p>(again, I probably won’t get to this this week.)</p>",
        "id": 232766397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287586
    },
    {
        "content": "<ul>\n<li>\"add dynamically-linked musl targets\" <a href=\"https://github.com/rust-lang/rust/pull/82556\">rust#82556</a><ul>\n<li>(see item in S-waiting-on-team)</li>\n</ul>\n</li>\n</ul>",
        "id": 232766455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287602
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 232766469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287607
    },
    {
        "content": "<p>and that’s our agenda!</p>",
        "id": 232766484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287611
    },
    {
        "content": "<p>so</p>",
        "id": 232766922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287754
    },
    {
        "content": "<p>ways to spend remaining meeting time</p>",
        "id": 232766952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287763
    },
    {
        "content": "<p>I could just say “we all get 25 more minutes”</p>",
        "id": 232767002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287771
    },
    {
        "content": "<p>but I think it would be good</p>",
        "id": 232767025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287777
    },
    {
        "content": "<p>to maybe try to look over that list of Old MCP's</p>",
        "id": 232767051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287783
    },
    {
        "content": "<p>and try to make progress there. Or at least highlight them a bit more explicitly</p>",
        "id": 232767090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287797
    },
    {
        "content": "<p>Here’s that full list again</p>",
        "id": 232767196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287833
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></li>\n<li>\"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></li>\n<li>\"Embed version numbers in backport nominations and regression labels\" <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"Eagerly construct bodies of THIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/409\">compiler-team#409</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n</ul>\n</li>\n</ul>",
        "id": 232767207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287838
    },
    {
        "content": "<p>(that’s 10 old MCPs)</p>",
        "id": 232767244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287849
    },
    {
        "content": "<p>I think we could reasonably spend 2 minutes on each</p>",
        "id": 232767267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287860
    },
    {
        "content": "<p>just to take temperatures</p>",
        "id": 232767294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287873
    },
    {
        "content": "<p>lets go lowest-numbered first</p>",
        "id": 232767367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287887
    },
    {
        "content": "<p>- \"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></p>",
        "id": 232767421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287902
    },
    {
        "content": "<p>associated zulip stream: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20More.20Cranelift-friendly.20portable.20SIM.E2.80.A6.20compiler-team.23381/near/215569238\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20More.20Cranelift-friendly.20portable.20SIM.E2.80.A6.20compiler-team.23381/near/215569238</a></p>",
        "id": 232767653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617287997
    },
    {
        "content": "<p>I want this very much</p>",
        "id": 232767872,
        "sender_full_name": "oli",
        "timestamp": 1617288063
    },
    {
        "content": "<p>so from skimming the zulip stream</p>",
        "id": 232767918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288083
    },
    {
        "content": "<p>One thing in particular I really like about this proposal is that our SIMD intrinsic are defined in pure Rust instead of by LLVM behavior.</p>",
        "id": 232767956,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617288099
    },
    {
        "content": "<p>That seems great especially since we're starting to see a lot more interest in alternative backends (not just Cranelift).</p>",
        "id": 232768087,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617288134
    },
    {
        "content": "<p>it sounds like the main ideas are to try to write reference implementations in “plain old Rust”. In some cases that might require trait bound to even express what the behavior is</p>",
        "id": 232768089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288134
    },
    {
        "content": "<p>so far all of the conversation on zulip seemed very positive</p>",
        "id": 232768186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288174
    },
    {
        "content": "<p>it all sounds plausible. I’lll go ahead and second it.</p>",
        "id": 232768252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288199
    },
    {
        "content": "<p>next</p>",
        "id": 232768339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288229
    },
    {
        "content": "<p>- \"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></p>",
        "id": 232768342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288230
    },
    {
        "content": "<p>associated zulip stream: <a href=\"#narrow/stream/233931-xxx/topic/Debuggable.20Macro.20Expansions.20compiler-team.23386\">https://rust-lang.zulipchat.com/#narrow/stream/233931-xxx/topic/Debuggable.20Macro.20Expansions.20compiler-team.23386</a></p>",
        "id": 232768473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288270
    },
    {
        "content": "<p>so this is turning on behavior that is already implemented but hidden by <code>-Zdebug-macros</code>, right?</p>",
        "id": 232768604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288327
    },
    {
        "content": "<p>and adds a way to opt-into the old behavior, with an attribute, <code>#[collapse_debuginfo]</code></p>",
        "id": 232768662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288349
    },
    {
        "content": "<p>I don’t have much experience myself using <code>-Zdebug-macros</code>.</p>",
        "id": 232768682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288357
    },
    {
        "content": "<p>but I can appreciate wanting to provide a path for exposing useful flags like that.</p>",
        "id": 232768782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288385
    },
    {
        "content": "<p>Hmm. Does <code>-Zdebug-macros</code> help with understanding code (as in stepping through code in gdb) that uses stuff like <code>#[async_trait]</code> ?</p>",
        "id": 232769044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288481
    },
    {
        "content": "<p>well anyway it seems like maybe this can wait</p>",
        "id": 232769192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288517
    },
    {
        "content": "<p>in the zulip stream, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> mentioned \"What about pretending that macro invocations are inlined function calls in the dwarf debuginfo?\"</p>",
        "id": 232769251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288540
    },
    {
        "content": "<p>so there may be design questions here</p>",
        "id": 232769278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288551
    },
    {
        "content": "<p>(Though I think dwarf may have outright <em>support</em> for macros…? I could have sworn I saw it in DWARF spec when I was skimming it recently.)</p>",
        "id": 232769371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288587
    },
    {
        "content": "<p>DWARF has support for C style macros. Not lisp/rust style ones.</p>",
        "id": 232769492,
        "sender_full_name": "bjorn3",
        "timestamp": 1617288616
    },
    {
        "content": "<p>I suppose there’s a broader question here, of how much we guarantee about the quality + stabilty of our debuginfo output</p>",
        "id": 232769495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288617
    },
    {
        "content": "<p>It's probably worth thinking more broadly than just DWARF before we commit to a strategy.</p>",
        "id": 232769505,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617288621
    },
    {
        "content": "<p><em>cough</em> Windows <em>cough</em></p>",
        "id": 232769535,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617288631
    },
    {
        "content": "<p>heh</p>",
        "id": 232769541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288635
    },
    {
        "content": "<p>lets leave this where it is for now</p>",
        "id": 232769593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288658
    },
    {
        "content": "<p>but maybe we should try to think of a design meeting topic that covers some of this ground</p>",
        "id": 232769634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288673
    },
    {
        "content": "<p>next</p>",
        "id": 232769643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288681
    },
    {
        "content": "<p>- \"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></p>",
        "id": 232769664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288689
    },
    {
        "content": "<p>\"The lint has no false positives, and so long as the orderings are specified directly in the call covers the whole set of stable[0] functions which take ordering arguments that I'm aware of.\"</p>",
        "id": 232769722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288716
    },
    {
        "content": "<p>associated zulip stream: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Uplift.20the.20.60invalid_atomic_ordering.60.20lint.20from.20clippy\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Uplift.20the.20.60invalid_atomic_ordering.60.20lint.20from.20clippy</a></p>",
        "id": 232769792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288732
    },
    {
        "content": "<p>anyway this sounds like a good thing to me</p>",
        "id": 232769889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288775
    },
    {
        "content": "<p>and the lang team has said they would be satisfied with just an FCP on the associated PR; they don’t need to be involved from the outset on “lints for things that are just wrong\"</p>",
        "id": 232769941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288799
    },
    {
        "content": "<p>or wait, that was <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> ’s opinion</p>",
        "id": 232769972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288820
    },
    {
        "content": "<p>anyway, in <em>this</em> case, all of <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> and <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> sounded okay with waiting until the PR to be involved</p>",
        "id": 232770075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288848
    },
    {
        "content": "<p>so I’ll go ahead and second this</p>",
        "id": 232770107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288856
    },
    {
        "content": "<p>next</p>",
        "id": 232770164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288882
    },
    {
        "content": "<p>- \"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></p>",
        "id": 232770169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288883
    },
    {
        "content": "<p>associated zulip stream: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Staged.20queries.20compiler-team.23391\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Staged.20queries.20compiler-team.23391</a></p>",
        "id": 232770222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288906
    },
    {
        "content": "<p>in general T-lang would like to be nominated and give our <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on the PR itself</p>",
        "id": 232770223,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617288906
    },
    {
        "content": "<p>(for lints)</p>",
        "id": 232770240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617288912
    },
    {
        "content": "<p>(I think seconding this is fine)</p>",
        "id": 232770305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617288931
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> That’s a minimum for all lints, sure. But for some lints,. lang wants to be involved at an earlier stage, right?)</p>",
        "id": 232770342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288946
    },
    {
        "content": "<p>(If this was decided in an lang meeting and I have forgotten… well, my brain is mush, what can I say.)</p>",
        "id": 232770460,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617288980
    },
    {
        "content": "<p>I'd say \"it's not required, but you may get surprised by pushback at a late stage\"</p>",
        "id": 232770505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617288998
    },
    {
        "content": "<p>i.e., if the lint is a lot of work to implement, maybe a good idea to discuss first</p>",
        "id": 232770537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617289007
    },
    {
        "content": "<p>okay</p>",
        "id": 232770572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289021
    },
    {
        "content": "<p>back to \"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></p>",
        "id": 232770591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289029
    },
    {
        "content": "<p>this architecure certainly sounds attractive, as presented in the MCP</p>",
        "id": 232770636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289044
    },
    {
        "content": "<p>the zulip stream points out some technicalities, I think</p>",
        "id": 232770686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289065
    },
    {
        "content": "<p>and there is debate as to whether a staged approach “breaks incremental\"</p>",
        "id": 232770798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289105
    },
    {
        "content": "<p>I'm a bit split on <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a>. On the one hand, lowering memory use is a worthwhile goal. On the other hand, this feels like a pretty big departure from the current query system and it feels like this could create issues down the road where we have to move queries between stages so they're available to call in certain situations (for example, diagnostics might want to run typeck queries \"early\" to provide suggestions about what things to import).</p>",
        "id": 232770856,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617289130
    },
    {
        "content": "<p>I think wg-incr-comp should discuss this</p>",
        "id": 232770871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289140
    },
    {
        "content": "<p>as in, wg-incr-comp should allocate time to discuss this in their dedicated meeting.</p>",
        "id": 232770914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289161
    },
    {
        "content": "<p>so lets leave it alone for now</p>",
        "id": 232770936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289173
    },
    {
        "content": "<p>next</p>",
        "id": 232770966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289185
    },
    {
        "content": "<p>- \"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></p>",
        "id": 232770968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289186
    },
    {
        "content": "<p>associated zulip stream: <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Do.20not.20traverse.20HIR.20to.20generate.20metadata.20compiler-team.23392\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Do.20not.20traverse.20HIR.20to.20generate.20metadata.20compiler-team.23392</a></p>",
        "id": 232771066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289205
    },
    {
        "content": "<p>hmm</p>",
        "id": 232771164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289237
    },
    {
        "content": "<p>perf says <a href=\"https://perf.rust-lang.org/compare.html?start=30a42735a0ff678172f66f63aca746096a717293&amp;end=2e325a37b8ff6a4cce0abcacff6dc1b64a3cf624\">“oh dear”</a></p>",
        "id": 232771296,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289272
    },
    {
        "content": "<p>There's a more recent run after some changes <a href=\"https://perf.rust-lang.org/compare.html?start=a8486b64b0c87dabd045453b6c81500015d122d6&amp;end=9ba2f75e36261442ace073a6eabdb12d49c2cf40\">https://perf.rust-lang.org/compare.html?start=a8486b64b0c87dabd045453b6c81500015d122d6&amp;end=9ba2f75e36261442ace073a6eabdb12d49c2cf40</a></p>\n<p>Edit: even more recent</p>",
        "id": 232771404,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617289313
    },
    {
        "content": "<p>when the proposal says this is “simpler\"</p>",
        "id": 232771588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289380
    },
    {
        "content": "<p>do they mean “simpler to understand as a human” ?</p>",
        "id": 232771615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289387
    },
    {
        "content": "<p>or “simpler for a computer to execute” ?</p>",
        "id": 232771648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289395
    },
    {
        "content": "<p>well, we are over time, and I don’t think we would second this in its current state</p>",
        "id": 232771725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289422
    },
    {
        "content": "<p>maybe I’m wrong</p>",
        "id": 232771738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289425
    },
    {
        "content": "<p>I think they mean simpler to understand. Looking at the diff, the code seems more uniform than it was previously.</p>",
        "id": 232771853,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1617289461
    },
    {
        "content": "<p>okay. lets leave it alone. We dont’ need to close it</p>",
        "id": 232772015,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289505
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Great meeting, great to have time to work through a backlog like this. Stay safe everyone!</p>",
        "id": 232772109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617289538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-01.20.2354818/near/232763334\">said</a>:</p>\n<blockquote>\n<p>we’ll go ahead and table <a href=\"https://github.com/rust-lang/rust/issues/83678\">#83678</a>, wait to decide on it next week.</p>\n</blockquote>\n<p>yes, this does fix the issue :) <a href=\"https://github.com/rust-lang/rustup/issues/2694#issuecomment-812918127\">https://github.com/rust-lang/rustup/issues/2694#issuecomment-812918127</a></p>",
        "id": 233033438,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617484255
    }
]