[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/Fv3TSalbT_CYVUEonihWzg\">meeting agenda</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"5288\">WG-polymorphization</span>  by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 278146766,
        "sender_full_name": "apiraino",
        "timestamp": 1649329589
    },
    {
        "content": "<p>In agenda, today no new <code>P-high</code> or <code>P-critical</code> to look at therefore a couple more PRs waiting on a review/reviewer. Also, one PR <code>I-compiler-nominated</code> at the end.</p>",
        "id": 278146849,
        "sender_full_name": "apiraino",
        "timestamp": 1649329644
    },
    {
        "content": "<p>(btw if it's fine, I am not bringing already discussed P-high/P-critical issues back unless I notice they don't show progress for a while)</p>",
        "id": 278146882,
        "sender_full_name": "apiraino",
        "timestamp": 1649329666
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for our weekly triage meeting. Click the <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here!</p>",
        "id": 278168117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340085
    },
    {
        "content": "<p>We'll start off with ~6 minutes for announcements</p>",
        "id": 278168160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340111
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-04-08T11:00:00Z\">2022-04-08T13:00:00+02:00</time> Types Team: Planning/Deep-Dive meeting <a href=\"https://calendar.google.com/calendar/event?eid=M3JsYmdkN2F0cjdtYXE0Z2ljYzM4Nm42NTRfMjAyMjA0MDFUMTMwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;ctz=GMT+02:00\">calendar link</a></li>\n</ul>",
        "id": 278168261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340136
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-04-08T12:00:00Z\">2022-04-08T14:00:00+02:00</time> Compiler Team Planning meeting <a href=\"https://calendar.google.com/calendar/event?eid=MDJyYnJ1cGFtdWR1c2lnNjFmcHJ2b3JlODFfMjAyMjA0MDhUMTQwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;ctz=GMT+02:00\">calendar link</a></li>\n</ul>",
        "id": 278168282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340148
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Today new Rust Release: 1.60 (<a href=\"https://github.com/rust-lang/blog.rust-lang.org/blob/5f778be1d744787933faa9bf44d9d97d06b78c04/posts/2022-04-07-Rust-1.60.0.md\">blog post</a>)</li>\n</ul>",
        "id": 278168313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340161
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 278168328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340168
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add -Zlazily-normalize-type-aliases to keep type alias information\" <a href=\"https://github.com/rust-lang/compiler-team/issues/504\">compiler-team#504</a> </li>\n<li>\"try to not rely on attributes from extern crates\" <a href=\"https://github.com/rust-lang/compiler-team/issues/505\">compiler-team#505</a></li>\n</ul>\n</li>\n</ul>",
        "id": 278168456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340212
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 9 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 6 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: 3 months ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: 3 months ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: 3 months ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: 2 months ago)</li>\n<li>\"Removing codegen logic for <code>nvptx-nvidia-cuda</code> (32-bit target)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/496\">compiler-team#496</a> (last review activity: about 19 days ago)</li>\n<li>\"Add <code>yeet</code> experimentally\" <a href=\"https://github.com/rust-lang/compiler-team/issues/501\">compiler-team#501</a> (last review activity: about 6 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 278168473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340224
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for Consistent no-prelude attribute (RFC 501)\" <a href=\"https://github.com/rust-lang/rust/pull/95026#issuecomment-1077855006\">rust#20561</a> </li>\n<li>\"Tracking Issue for <code>-Z terminal-width</code>\" <a href=\"https://github.com/rust-lang/rust/issues/84673#issuecomment-1087141663\">rust#84673</a> </li>\n<li>\"Increase the minimum linux-gnu versions\" <a href=\"https://github.com/rust-lang/rust/pull/95026#issuecomment-1077855006\">rust#95026</a></li>\n</ul>\n</li>\n</ul>",
        "id": 278168558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340249
    },
    {
        "content": "<p>There's some useful discussion in the comment thread for <a href=\"https://github.com/rust-lang/rust/issues/95026\">rust#95026</a>, by the way</p>",
        "id": 278168735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340341
    },
    {
        "content": "<p>(Its not an easy decision to make, in terms of trying to ensure new versions of Rust remain an option to people who are relying on it who may be tied to older versions of Linux.)</p>",
        "id": 278168868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340389
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Add support for MIR opt unit tests via a new <code>-Z</code> flag\" <a href=\"https://github.com/rust-lang/compiler-team/issues/502\">compiler-team#502</a> </li>\n<li>\"Remove -Zast-json\" <a href=\"https://github.com/rust-lang/compiler-team/issues/503\">compiler-team#503</a></li>\n</ul>\n</li>\n</ul>",
        "id": 278168909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340416
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Promote <code>x86_64-unknown-none</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/499\">compiler-team#499</a></li>\n</ul>\n</li>\n</ul>",
        "id": 278168942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340437
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Fix constants not getting dropped if part of a diverging expression\" <a href=\"https://github.com/rust-lang/rust/pull/94775\">rust#94775</a></li>\n</ul>\n</li>\n</ul>",
        "id": 278168950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340442
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 278168962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340448
    },
    {
        "content": "<ul>\n<li>@_<em>wg-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://hackmd.io/PPMtXP7hSqmyqD30CUw_cQ#WG-checkins\">previous checkin</a>):<blockquote>\n<p>No major updates from polymorphization this cycle - team members are prioritizing other projects. Fixing the primary bug related to <code>TypeId</code> is still the current priority, lcnr has a fix but we're working out some complications with that fix.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 278168971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340454
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span> by @<strong>veykril</strong> (<a href=\"https://hackmd.io/N_WW5tZqTLWouaed6cCjxg#WG-checkins\">previous checkin</a>):<blockquote>\n<p>We have switched from our decorator hacks to VSCode's native inlay hints in the client. Aside from that we started talking to the relevant teams to move the rust-analyzer repo into the rust-lang org and figure out what to do about the VSCode extensions.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 278168999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340461
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 278169026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340472
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Check that all hidden types are the same and then deduplicate them.\" <a href=\"https://github.com/rust-lang/rust/pull/95731\">rust#95731</a> <ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/95538\">rust#95538</a>, a regression in a recent nightly (labeled <code>P-medium</code>)</li>\n<li>patch authored and beta-backport nominated by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n</ul>\n</li>\n</ul>",
        "id": 278169055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340482
    },
    {
        "content": "<p>hmm. So, Rust 1.60 is coming out today. <a href=\"https://github.com/rust-lang/rust/issues/95538\">rust#95538</a> is affecting the 1.61-beta</p>",
        "id": 278169225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340562
    },
    {
        "content": "<p>sorry I think my brain is having an internal fence post error</p>",
        "id": 278169450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340652
    },
    {
        "content": "<p>the issue, I think, is that the nightly-to-beta promotion already happened, is that right?</p>",
        "id": 278169507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340686
    },
    {
        "content": "<p>let me just go look</p>",
        "id": 278169523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340699
    },
    {
        "content": "<p>Yeah okay</p>",
        "id": 278169641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340738
    },
    {
        "content": "<p>According to the label, this pr lands on 1.62</p>",
        "id": 278169645,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1649340740
    },
    {
        "content": "<p>Yeah, this is broken in 1.61 (now beta) and the PR landed in 1.62 (now nightly) so beta backport is being requested.</p>",
        "id": 278169672,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649340764
    },
    {
        "content": "<p>Yeah, I think I just need to revist the open action item to revise our labelling system</p>",
        "id": 278169684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340772
    },
    {
        "content": "<p>because I at least feel like I'm always nervous about the correct interpretation of the labels right around release/channel-promotion time</p>",
        "id": 278169748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340805
    },
    {
        "content": "<p>This hasn't gotten the perf results back yet</p>",
        "id": 278169882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340855
    },
    {
        "content": "<p>I think I want to see those first</p>",
        "id": 278169930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340875
    },
    {
        "content": "<p>So maybe lets wait until next week to decide here?</p>",
        "id": 278169952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340888
    },
    {
        "content": "<p>(it only landed 15 hours ago)</p>",
        "id": 278170027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340915
    },
    {
        "content": "<p>next</p>",
        "id": 278170057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340928
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 278170069,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340936
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 278170086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340941
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 278170110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340949
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler+-label%3AT-lang+-label%3AT-infra+-label%3AT-release+-label%3AT-libs+-label%3AT-libs-api\">T-compiler</a></p>",
        "id": 278170123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340956
    },
    {
        "content": "<ul>\n<li>\"rustc_apfloat: Double::mul_add_r panic with specific values\" <a href=\"https://github.com/rust-lang/rust/pull/93225\">rust#93225</a> (last review activity: about 33 days ago)<ul>\n<li>did <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> had a chance to discuss about this issue? <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274855441\">zulip comment</a> from past meeting.</li>\n</ul>\n</li>\n</ul>",
        "id": 278170180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649340969
    },
    {
        "content": "<p>the comment from last meeting indicates we were going to circle back with the author about this, no?</p>",
        "id": 278170276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341017
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274855448\">said</a>:</p>\n<blockquote>\n<p>This (<a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a>) was nominated on 1-22 and much has happened since then. I think we should consider clearing the nomination flag and asking the person who tagged if they feel there is more that needs to be discussed.</p>\n</blockquote>",
        "id": 278170308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341028
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278170276\">said</a>:</p>\n<blockquote>\n<p>the comment from last meeting indicates we were going to circle back with the author about this, no?</p>\n</blockquote>\n<p>I think so, yes, this was my understanding</p>",
        "id": 278170346,
        "sender_full_name": "apiraino",
        "timestamp": 1649341043
    },
    {
        "content": "<p>That's a different PR.</p>",
        "id": 278170350,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649341046
    },
    {
        "content": "<p>oops, you are correct, I was wrong</p>",
        "id": 278170406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341073
    },
    {
        "content": "<p>oh right, this is the licensing concerns thing</p>",
        "id": 278170493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341089
    },
    {
        "content": "<p>Felix and I did talk and IIRC the outcome is that we need to follow up with the Core team and/or the Foundation to better understand what the licensing issues are with regards to rustc_apfloat.</p>",
        "id": 278170501,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649341092
    },
    {
        "content": "<p>Wesley you and I did briefly touch on this, right</p>",
        "id": 278170510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341097
    },
    {
        "content": "<p>I'll take action item to follow up there</p>",
        "id": 278170625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341131
    },
    {
        "content": "<p>Do we want to write our own?</p>",
        "id": 278170634,
        "sender_full_name": "nagisa",
        "timestamp": 1649341138
    },
    {
        "content": "<p>Seems like an interesting challenge, that.</p>",
        "id": 278170686,
        "sender_full_name": "nagisa",
        "timestamp": 1649341158
    },
    {
        "content": "<p>We kind of did but it's a port of LLVM's and the licensing situation is very unclear.</p>",
        "id": 278170755,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649341182
    },
    {
        "content": "<p>Right, I meant write our own, not port somebody else's ^^ But yeah, sounds like figuring out the license is in order.</p>",
        "id": 278170861,
        "sender_full_name": "nagisa",
        "timestamp": 1649341221
    },
    {
        "content": "<p>Certainly our own cleanroom impl would be one way to address this, but I don't know anything about this topic</p>",
        "id": 278170871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341223
    },
    {
        "content": "<p>in terms of how hard it would be to do a cleanroom impl</p>",
        "id": 278170896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341236
    },
    {
        "content": "<p>Anyway I will follow-up and see if I can get proper resources to untangle the licensing concerns here</p>",
        "id": 278170934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341257
    },
    {
        "content": "<p>next</p>",
        "id": 278170946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341264
    },
    {
        "content": "<ul>\n<li>\"Suggest dereferencing non-lval mutable reference on assignment\" <a href=\"https://github.com/rust-lang/rust/pull/94639\">rust#94639</a> (last review activity: about 32 days ago)<ul>\n<li>PR author recently pinged for a review</li>\n<li>then rustbot assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>\n</li>\n</ul>",
        "id": 278170949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341265
    },
    {
        "content": "<p>I uh just reviewed it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 278170988,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649341288
    },
    {
        "content": "<p>Looks like <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> is following up on this as we speak. :)</p>",
        "id": 278170991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341289
    },
    {
        "content": "<ul>\n<li>\"Imrpove E0617\" <a href=\"https://github.com/rust-lang/rust/pull/94637\">rust#94637</a> (last review activity: about 32 days ago)<ul>\n<li>rustbot assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>, reroll dice?</li>\n</ul>\n</li>\n</ul>",
        "id": 278171009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341301
    },
    {
        "content": "<p>(do we need to take <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> out of the review dice roller?)</p>",
        "id": 278171037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278171037\">said</a>:</p>\n<blockquote>\n<p>(do we need to take <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> out of the review dice roller?)</p>\n</blockquote>\n<p>probably</p>",
        "id": 278171101,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1649341337
    },
    {
        "content": "<p>oh its closed anyway</p>",
        "id": 278171103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341338
    },
    {
        "content": "<p>hmm</p>",
        "id": 278171104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278171101\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278171037\">said</a>:</p>\n<blockquote>\n<p>(do we need to take <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> out of the review dice roller?)</p>\n</blockquote>\n<p>probably</p>\n</blockquote>\n<p>Okay I can follow up on that, thanks <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 278171123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278171103\">said</a>:</p>\n<blockquote>\n<p>oh its closed anyway</p>\n</blockquote>\n<p>weird</p>",
        "id": 278171203,
        "sender_full_name": "apiraino",
        "timestamp": 1649341384
    },
    {
        "content": "<ul>\n<li>\"Parse inner attributes on inline const block\" <a href=\"https://github.com/rust-lang/rust/pull/94985\">rust#94985</a> (last review activity: about 21 days ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> suggested <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> as reviewer</li>\n</ul>\n</li>\n</ul>",
        "id": 278171220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341390
    },
    {
        "content": "<p>I'll take care of this</p>",
        "id": 278171230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341396
    },
    {
        "content": "<p>sorry that I haven't been checking that queue enough on my end</p>",
        "id": 278171285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341424
    },
    {
        "content": "<ul>\n<li>\"Fix codegen bug in \"ptx-kernel\" abi related to arg passing\" <a href=\"https://github.com/rust-lang/rust/pull/94703\">rust#94703</a> (last review activity: about 19 days ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> approved the changes (<a href=\"https://github.com/rust-lang/rust/pull/94703#pullrequestreview-914020422\">comment</a>) </li>\n<li>previous review also by <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> </li>\n<li>PR needs another reviewer</li>\n</ul>\n</li>\n</ul>",
        "id": 278171372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341449
    },
    {
        "content": "<p>I wonder if we could get some support from NVidia on this kind of work...</p>",
        "id": 278171524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341519
    },
    {
        "content": "<p>though of course you cannot just plug in random engineer for review work</p>",
        "id": 278171592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341553
    },
    {
        "content": "<p>(I was thinking more in terms of people who could help the existing reviewers with any questions that come up...)</p>",
        "id": 278171668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341571
    },
    {
        "content": "<p>In any case, ptx is what, Tier 3?</p>",
        "id": 278171768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341630
    },
    {
        "content": "<p>Maybe we can post on Inside Rust with a request for contacts who might be willing to help maintain that target?</p>",
        "id": 278171853,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649341666
    },
    {
        "content": "<p>My take on targets such as these is that whoever deals with the target knows best.</p>",
        "id": 278171956,
        "sender_full_name": "nagisa",
        "timestamp": 1649341695
    },
    {
        "content": "<p>Yeah maybe</p>",
        "id": 278171958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341696
    },
    {
        "content": "<p>Getting nvidia to work on anything opensource is a stretch.</p>",
        "id": 278172004,
        "sender_full_name": "nagisa",
        "timestamp": 1649341720
    },
    {
        "content": "<p>So the question is: How much of a burden of understanding the code do we put on reviewers then?</p>",
        "id": 278172032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341734
    },
    {
        "content": "<p>The problem with this approach is that we don't have documented maintainers for various targets that were added before the target policy was introduced.</p>",
        "id": 278172085,
        "sender_full_name": "nagisa",
        "timestamp": 1649341755
    },
    {
        "content": "<p>yeah</p>",
        "id": 278172108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341771
    },
    {
        "content": "<p>oaky well, with respect to <em>this</em> PR, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> is looking for a second opinion</p>",
        "id": 278172146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341789
    },
    {
        "content": "<p>There are two ways we can approach this – either rope people who work on these targets today into it somehow; or try to find people who added the target initially.</p>",
        "id": 278172165,
        "sender_full_name": "nagisa",
        "timestamp": 1649341798
    },
    {
        "content": "<p>I can give it a look, sure.</p>",
        "id": 278172215,
        "sender_full_name": "nagisa",
        "timestamp": 1649341806
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 278172274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341837
    },
    {
        "content": "<p>and you are right, we <em>should</em> go through our backlog of targets</p>",
        "id": 278172293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341847
    },
    {
        "content": "<p>and figure out how to make them properly match the newly established policy</p>",
        "id": 278172312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341859
    },
    {
        "content": "<p>(maybe a steering meeting proposal is hidden there!)</p>",
        "id": 278172362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341883
    },
    {
        "content": "<p>(hint hint hint)</p>",
        "id": 278172374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341887
    },
    {
        "content": "<p>Not that it would be used here, but do we have a demotion policy?</p>",
        "id": 278172400,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1649341904
    },
    {
        "content": "<p>I vaguely recall there being one in the target-tier policy</p>",
        "id": 278172425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341919
    },
    {
        "content": "<p>but I'd have to go re-read that to me sure</p>",
        "id": 278172473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341924
    },
    {
        "content": "<ul>\n<li>\"Make AST-&gt;HIR lowering incremental\" <a href=\"https://github.com/rust-lang/rust/pull/88186\">rust#88186</a> (last review activity: about 16 days ago)<ul>\n<li>This depends now on <a href=\"https://github.com/rust-lang/rust/pull/95573\">rust#95573</a></li>\n<li>Author of <a href=\"https://github.com/rust-lang/rust/issues/95573\">#95573</a>, asked <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> for a review</li>\n</ul>\n</li>\n</ul>",
        "id": 278172513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649341944
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/95573\">#95573</a> will be a replacement for <a href=\"https://github.com/rust-lang/rust/issues/88186\">#88186</a>, I think. It's in my queue</p>",
        "id": 278172676,
        "sender_full_name": "mw",
        "timestamp": 1649342013
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> didn't you mentioned to me that you've been working closely with <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> in this space? Maybe <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> would be good to review this...</p>",
        "id": 278172689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342022
    },
    {
        "content": "<p>okay, sounds good <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> . maybe close <a href=\"https://github.com/rust-lang/rust/issues/88186\">#88186</a> then, or get it out of S-waiting-on-review state in any case</p>",
        "id": 278172786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342054
    },
    {
        "content": "<ul>\n<li>\"Add known-bug for <a href=\"https://github.com/rust-lang/rust/issues/95034\">#95034</a>\" <a href=\"https://github.com/rust-lang/rust/pull/95102\">rust#95102</a> (last review activity: about 13 days ago)<ul>\n<li>This just adds some tests for regression <a href=\"https://github.com/rust-lang/rust/issues/95034\">rust#95034</a></li>\n<li><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> already contributed some thoughts</li>\n<li>maybe worth an expedit review?</li>\n</ul>\n</li>\n</ul>",
        "id": 278172805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342064
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278172786\">said</a>:</p>\n<blockquote>\n<p>okay, sounds good <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> . maybe close <a href=\"https://github.com/rust-lang/rust/issues/88186\">#88186</a> then, or get it out of S-waiting-on-review state in any case</p>\n</blockquote>\n<p>yeah, we could move it to \"blocked\" for the time being</p>",
        "id": 278172862,
        "sender_full_name": "mw",
        "timestamp": 1649342095
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278172805\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Add known-bug for <a href=\"https://github.com/rust-lang/rust/issues/95034\">#95034</a>\" <a href=\"https://github.com/rust-lang/rust/pull/95102\">rust#95102</a> (last review activity: about 13 days ago)<ul>\n<li>This just adds some tests for regression <a href=\"https://github.com/rust-lang/rust/issues/95034\">rust#95034</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> already contributed some thoughts</li>\n<li>maybe worth an expedit review?</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>more than thoughts, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> outright r+'ed it</p>",
        "id": 278172904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342114
    },
    {
        "content": "<p>Yeah, should just be r+ed again</p>",
        "id": 278172943,
        "sender_full_name": "Jack Huey",
        "timestamp": 1649342133
    },
    {
        "content": "<p>so I'll just r=jhuey it</p>",
        "id": 278172944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342133
    },
    {
        "content": "<p>Thanks</p>",
        "id": 278172954,
        "sender_full_name": "Jack Huey",
        "timestamp": 1649342140
    },
    {
        "content": "<p>okay next</p>",
        "id": 278173034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342165
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">59 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">45 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 1 P-high, 0 P-medium, 2 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 38 P-high, 82 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 278173057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342174
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No new <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 278173077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342183
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 278173095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342189
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 278173106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342195
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 278173122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342200
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">triage logs</a></p>\n</blockquote>",
        "id": 278173142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342210
    },
    {
        "content": "<p>we've got time so I'll transcribe them</p>",
        "id": 278173193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342240
    },
    {
        "content": "<h1>2022-04-05 Triage Log</h1>\n<p>A somewhat quiet week with only a few improvements and regressions, but with improvements ever so slightly edging out regressions. The biggest regression was in a rollup which makes investigation difficult though it looks like its in trait resolution which impacts crates that do a lot of that such as diesel. The biggest improvement comes from work done by the performance team (more specifically @nnethercote) to improve <code>macro_rules</code> parsing which can lead to sizeable performance gains for crates using the <a href=\"https://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\">\"token munching\"</a> pattern in <code>macro_rules</code>.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=3e7514670db841a7f0d7656f3b13b1c8b2c11599&amp;end=949b98cab8a186b98bf87e64374b8d0848c55271&amp;absolute=false&amp;stat=instructions%3Au\">3e7514670db841a7f0d7656f3b13b1c8b2c11599..949b98cab8a186b98bf87e64374b8d0848c55271</a></p>\n<p>2 Regressions, 2 Improvements, 1 Mixed; 2 of them in rollups<br>\n37 comparisons made in total</p>",
        "id": 278173209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342250
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Make lowering pull-based <a href=\"https://github.com/rust-lang/rust/pull/90204\">#90204</a> <a href=\"https://perf.rust-lang.org/compare.html?start=03314912f1361af6b39383958b5aa1b4aed61c26&amp;end=bd1a8692f6260fd59dba1e0fa187092a1c354b2e&amp;stat=instructions:u\">(Comparison Link)</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">All <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">2</td>\n<td align=\"center\">33</td>\n<td align=\"center\">0</td>\n<td align=\"center\">0</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">mean</td>\n<td align=\"center\">0.3%</td>\n<td align=\"center\">0.7%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">0.3%</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td align=\"center\">0.4%</td>\n<td align=\"center\">1.7%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">0.4%</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>This is necessary for unlocking incremental lowering. <a href=\"https://github.com/rust-lang/rust/pull/90204#pullrequestreview-878629128\">It was justified as acceptable</a> since the performance will hopefully be won back (in the incremental case) when lowering is made incremental and the impact on real world crates is pretty small (only 2 regressions at an average of 0.3%).</li>\n</ul>\n<p>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/pull/95662\">#95662</a> <a href=\"https://perf.rust-lang.org/compare.html?start=60e50fc1cfe0bb693a5f4f93eb83ef70854531e3&amp;end=a22cf2af0510b3ec4cbb19c3de11d3d8291349d9&amp;stat=instructions:u\">(Comparison Link)</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">All <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">20</td>\n<td align=\"center\">13</td>\n<td align=\"center\">0</td>\n<td align=\"center\">6</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">mean</td>\n<td align=\"center\">0.8%</td>\n<td align=\"center\">0.4%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-0.4%</td>\n<td align=\"center\">0.8%</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td align=\"center\">2.0%</td>\n<td align=\"center\">0.7%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-0.5%</td>\n<td align=\"center\">2.0%</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>It's not clear what the underlying cause could be as it seems that the issues are coming in trait selection and there are several PRs that touch trait selection (albeit for diagnostics purposes). I've left <a href=\"https://github.com/rust-lang/rust/pull/95662#issuecomment-1088686029\">a comment</a> to see if we can investigate further.</li>\n</ul>",
        "id": 278173248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342261
    },
    {
        "content": "<p>AAAhhh,</p>",
        "id": 278173268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342270
    },
    {
        "content": "<p>the table format isn't compatible with <del>zoom</del> zulip!</p>",
        "id": 278173335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342283
    },
    {
        "content": "<p>okay, just needed some line breaks</p>",
        "id": 278173395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342314
    },
    {
        "content": "<h4>Improvements</h4>\n<p>Yet more <code>parse_tt</code> improvements <a href=\"https://github.com/rust-lang/rust/pull/95425\">#95425</a> <a href=\"https://perf.rust-lang.org/compare.html?start=bb5c437a2ce9ccf2204c974300c5ea9eb32d3635&amp;end=c5cf08d37b85f953b132951e868df5b924250fdc&amp;stat=instructions:u\">(Comparison Link)</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">All <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\">30</td>\n<td align=\"center\">23</td>\n<td align=\"center\">31</td>\n</tr>\n<tr>\n<td align=\"center\">mean</td>\n<td align=\"center\">0.3%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-0.9%</td>\n<td align=\"center\">-2.0%</td>\n<td align=\"center\">-0.9%</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td align=\"center\">0.3%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-2.3%</td>\n<td align=\"center\">-6.2%</td>\n<td align=\"center\">-2.3%</td>\n</tr>\n</tbody>\n</table>\n<p>Add debug assertions to some unsafe functions <a href=\"https://github.com/rust-lang/rust/pull/92686\">#92686</a> <a href=\"https://perf.rust-lang.org/compare.html?start=15a242a432c9c40a60def102209a5d40900b7b9d&amp;end=168a0209002fef203e83989ff641c1b3e1a51859&amp;stat=instructions:u\">(Comparison Link)</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">All <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\">17</td>\n<td align=\"center\">19</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td align=\"center\">mean</td>\n<td align=\"center\">0.6%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-0.5%</td>\n<td align=\"center\">-0.4%</td>\n<td align=\"center\">-0.4%</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td align=\"center\">0.6%</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">-1.4%</td>\n<td align=\"center\">-0.8%</td>\n<td align=\"center\">-1.4%</td>\n</tr>\n</tbody>\n</table>",
        "id": 278173434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342330
    },
    {
        "content": "<p>(hmm, also the table format probably isn't <em>appropriate</em> for <del>zoom</del> zulip...)</p>",
        "id": 278173583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342394
    },
    {
        "content": "<p>(or at least, we would want to focus on the columns that actually have interesting info...)</p>",
        "id": 278173703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342424
    },
    {
        "content": "<h4>Mixed</h4>\n<p>A new matcher representation for use in <code>parse_tt</code> <a href=\"https://github.com/rust-lang/rust/pull/95555\">#95555</a> <a href=\"https://perf.rust-lang.org/compare.html?start=d5139f44690e7765df801ca33a7f627d128ac9e2&amp;end=6a9080b25e73d26aae94c3f6a13b31de58e66b5a&amp;stat=instructions:u\">(Comparison Link)</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Regressions <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n<th align=\"center\">Improvements <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(secondary)</th>\n<th align=\"center\">All <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> &lt;br /&gt;(primary)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">3</td>\n<td align=\"center\">10</td>\n<td align=\"center\">18</td>\n<td align=\"center\">11</td>\n<td align=\"center\">21</td>\n</tr>\n<tr>\n<td align=\"center\">mean</td>\n<td align=\"center\">0.4%</td>\n<td align=\"center\">1.0%</td>\n<td align=\"center\">-1.0%</td>\n<td align=\"center\">-2.4%</td>\n<td align=\"center\">-0.8%</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td align=\"center\">0.4%</td>\n<td align=\"center\">2.8%</td>\n<td align=\"center\">-2.0%</td>\n<td align=\"center\">-4.6%</td>\n<td align=\"center\">-2.0%</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>This was already <a href=\"https://github.com/rust-lang/rust/pull/95555#issuecomment-1088070142\">justified</a> as being acceptable since the real world crates that suffer from regressions are exercising some of the worst case scenario execution paths. There is an attempt to address this in a follow up (<a href=\"https://github.com/rust-lang/rust/pull/95669\">#95669</a>). In any case, the improvements outweigh the regressions in both magnitude and number.</li>\n</ul>",
        "id": 278173780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342456
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 278173901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342513
    },
    {
        "content": "<ul>\n<li>\"Cache more queries on disk\" <a href=\"https://github.com/rust-lang/rust/pull/95418\">rust#95418</a><ul>\n<li>PR authored by <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> </li>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://github.com/rust-lang/rust/pull/95418#issuecomment-1085700129\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 278173925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278173583\">said</a>:</p>\n<blockquote>\n<p>(hmm, also the table format probably isn't <em>appropriate</em> for zoom...)</p>\n</blockquote>\n<p>/s/zoom/zulip ? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 278173985,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649342537
    },
    {
        "content": "<p>this is the only nominated issue, and we have 18 minutes, so we can <strong>really</strong> dive into this!</p>",
        "id": 278173986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342537
    },
    {
        "content": "<p>Okay so I see this comment </p>\n<blockquote>\n<p>For the moment, I'm trying some heuristic like \"cache everything that will be stored in metadata (roughly if is has separate_provide_extern)\". I plan to refine this from perf measurements.</p>\n</blockquote>",
        "id": 278174291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342643
    },
    {
        "content": "<p>did that refinement happen, <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> ?</p>",
        "id": 278174335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342662
    },
    {
        "content": "<blockquote>\n<p>I wonder if we should refine the disk space-run time tradeoff beforehand.</p>\n</blockquote>\n<p>For anyone unaware, clicking into the detailed comparison view on perf.rlo has impact to metadata and the query cache. For example: <a href=\"https://perf.rust-lang.org/detailed-query.html?commit=36ace5e9edc63601569a7ef878ded180015f85d3&amp;base_commit=e2301ca54320659835467072f37201591db959b5&amp;benchmark=serde-1.0.136-check&amp;scenario=incr-unchanged\">https://perf.rust-lang.org/detailed-query.html?commit=36ace5e9edc63601569a7ef878ded180015f85d3&amp;base_commit=e2301ca54320659835467072f37201591db959b5&amp;benchmark=serde-1.0.136-check&amp;scenario=incr-unchanged</a></p>",
        "id": 278174429,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649342704
    },
    {
        "content": "<p>It occurs to me that I might have misinterpreted that comment and cjgillot wasn’t looking for a broader discussion on our time/space tradeoff.</p>",
        "id": 278174475,
        "sender_full_name": "davidtwco",
        "timestamp": 1649342715
    },
    {
        "content": "<p>the comment that I quoted above gave me the impression that this is still in draft state</p>",
        "id": 278174548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342745
    },
    {
        "content": "<p>though the performance results are super promising</p>",
        "id": 278174582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342759
    },
    {
        "content": "<p>I read it initially as “maybe we should clarify as a team whether we care more about the performance or the disk space in cases like this”</p>",
        "id": 278174713,
        "sender_full_name": "davidtwco",
        "timestamp": 1649342802
    },
    {
        "content": "<p>I wonder if we could do incremental bootstrap timings in addition to our from-scratch bootstrap timings</p>",
        "id": 278174728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342812
    },
    {
        "content": "<p>because right now I think you only get to see the \"worse case scenario\" for bootstrap times, if I understand correctly</p>",
        "id": 278174761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278174429\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I wonder if we should refine the disk space-run time tradeoff beforehand.</p>\n</blockquote>\n<p>For anyone unaware, clicking into the detailed comparison view on perf.rlo has impact to metadata and the query cache. For example: <a href=\"https://perf.rust-lang.org/detailed-query.html?commit=36ace5e9edc63601569a7ef878ded180015f85d3&amp;base_commit=e2301ca54320659835467072f37201591db959b5&amp;benchmark=serde-1.0.136-check&amp;scenario=incr-unchanged\">https://perf.rust-lang.org/detailed-query.html?commit=36ace5e9edc63601569a7ef878ded180015f85d3&amp;base_commit=e2301ca54320659835467072f37201591db959b5&amp;benchmark=serde-1.0.136-check&amp;scenario=incr-unchanged</a></p>\n</blockquote>\n<p>Those \"Artifact Size\" reports should include a column with percentages, I think. Otherwise it requires a bit too much effort to quickly interpret them</p>",
        "id": 278174976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342918
    },
    {
        "content": "<p>Yes, there is at least one other case where we can improve incr. comp. performance by using more disk space.</p>",
        "id": 278174978,
        "sender_full_name": "mw",
        "timestamp": 1649342919
    },
    {
        "content": "<p>Sounds like it is a tradeoff, especially in context of slow storage (hdd)</p>",
        "id": 278175040,
        "sender_full_name": "nagisa",
        "timestamp": 1649342953
    },
    {
        "content": "<p>Frankly, I don't think we should care about HDDs too much</p>",
        "id": 278175077,
        "sender_full_name": "mw",
        "timestamp": 1649342974
    },
    {
        "content": "<p>On the one hand, I know some people complain about how much bloat there is in our build artifacts</p>",
        "id": 278175079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342974
    },
    {
        "content": "<p>but on the other hand, <em>many</em> more people are unhappy about compilation times</p>",
        "id": 278175100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342985
    },
    {
        "content": "<p>(I think)</p>",
        "id": 278175111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649342990
    },
    {
        "content": "<p>also: could this be controllable via some flag, maybe?</p>",
        "id": 278175152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343010
    },
    {
        "content": "<p>we should be careful to not generate like 300GB of incremental data, benchmark it on SSDs and then call it perfect (ignoring the fact that slow storage build times have decreased by a couple multiples)</p>",
        "id": 278175209,
        "sender_full_name": "nagisa",
        "timestamp": 1649343017
    },
    {
        "content": "<p>I.e. some way for someone with storage constraints, or slow storage, to have a leaner profile for incremental compiles?</p>",
        "id": 278175274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343047
    },
    {
        "content": "<p>Getting slow storage is not only an HDD thing. creating a VM on e.g. GCP with reasonably sized disk sizes will give you pretty slow I/O even if you pick SSD.</p>",
        "id": 278175283,
        "sender_full_name": "nagisa",
        "timestamp": 1649343051
    },
    {
        "content": "<p>or is that just way too much complexity</p>",
        "id": 278175293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343054
    },
    {
        "content": "<p>IMO compilation throughput <em>is more important than</em> memory used during compilation <em>is more important than</em> disk space used during compilation.</p>",
        "id": 278175300,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649343056
    },
    {
        "content": "<p>Didn't we ask users about this in the survey?</p>",
        "id": 278175320,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649343067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175152\">said</a>:</p>\n<blockquote>\n<p>also: could this be controllable via some flag, maybe?</p>\n</blockquote>\n<p>That's an interesting thought. But I'm a bit worried about splitting incr. comp. usage because of bugs.</p>",
        "id": 278175384,
        "sender_full_name": "mw",
        "timestamp": 1649343100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175384\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175152\">said</a>:</p>\n<blockquote>\n<p>also: could this be controllable via some flag, maybe?</p>\n</blockquote>\n<p>That's an interesting thought. But I'm a bit worried about splitting incr. comp. usage because of bugs.</p>\n</blockquote>\n<p>Yes, that was exactly what I was thinking of in the back of my head when I mentioned \"too much complexity\"</p>",
        "id": 278175485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343129
    },
    {
        "content": "<p>i.e. some bugs might only be happening in the \"lean\" profile and it would be hard to debug for us</p>",
        "id": 278175495,
        "sender_full_name": "mw",
        "timestamp": 1649343135
    },
    {
        "content": "<p>right. We should not explode the configuration space of incr-comp when we already have trouble reproducing bugs with the existing single configuration</p>",
        "id": 278175540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343161
    },
    {
        "content": "<p>so until that latter issue is addressed (which might <em>never</em> happen...), I think we should refrain from adding too many configuration knobs</p>",
        "id": 278175595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343190
    },
    {
        "content": "<p>having said that, I think we should definitely consider doing this</p>",
        "id": 278175625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343201
    },
    {
        "content": "<p>I'm wondering how effective our garbage collection is, especially when switching between rustc versions without a <code>cargo clean</code> in between</p>",
        "id": 278175639,
        "sender_full_name": "mw",
        "timestamp": 1649343208
    },
    {
        "content": "<p>that's a good question. Too bad we have no telemetry.</p>",
        "id": 278175695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175320\">said</a>:</p>\n<blockquote>\n<p>Didn't we ask users about this in the survey?</p>\n</blockquote>\n<p>Ok, so I <a href=\"https://github.com/rust-lang/surveys/issues/39#issuecomment-951966138\">provided this feedback</a> when the survey was being developed. Perhaps we can follow up with <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and <span class=\"user-mention\" data-user-id=\"256841\">@Nick Cameron</span> to see what the results were?</p>",
        "id": 278176040,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649343349
    },
    {
        "content": "<p>Yes lets do that</p>",
        "id": 278176171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343395
    },
    {
        "content": "<p>Disk space usage was mentioned somewhere in the results, but I don't remember where exactly. People were not happy about it, iirc :)</p>",
        "id": 278176186,
        "sender_full_name": "mw",
        "timestamp": 1649343403
    },
    {
        "content": "<p>I'd like to believe that we could address the disk space problems via some means</p>",
        "id": 278176254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343431
    },
    {
        "content": "<p><a href=\"https://blog.rust-lang.org/2022/02/15/Rust-Survey-2021.html#challenges-ahead\">https://blog.rust-lang.org/2022/02/15/Rust-Survey-2021.html#challenges-ahead</a></p>",
        "id": 278176263,
        "sender_full_name": "mw",
        "timestamp": 1649343433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175040\">said</a>:</p>\n<blockquote>\n<p>Sounds like it is a tradeoff, especially in context of slow storage (hdd)</p>\n</blockquote>\n<p>Caches shouldn't get  <code>fsync()</code>ed though, they just go to the page cache. So HDDs only matters if caches are cold. There even is code to avoid filesystems trying to be \"helpful\" and inserting fsyncs on rename.</p>",
        "id": 278176288,
        "sender_full_name": "The 8472",
        "timestamp": 1649343446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I think you were the main person who has noted concerns in this meeting</p>",
        "id": 278176436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343500
    },
    {
        "content": "<p>I'd like to make sure we do keep our eye on these things</p>",
        "id": 278176474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343524
    },
    {
        "content": "<p>I just want build speeds on fresh GCP instances be reasonable by default heh</p>",
        "id": 278176503,
        "sender_full_name": "nagisa",
        "timestamp": 1649343540
    },
    {
        "content": "<p>probably the best way is to revise the performance reporting to ensure that significant regressions here get caught</p>",
        "id": 278176547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343554
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176503\">said</a>:</p>\n<blockquote>\n<p>I just want build speeds on fresh GCP instances be reasonable by default heh</p>\n</blockquote>\n<p>does that involve incr. comp.?</p>",
        "id": 278176592,
        "sender_full_name": "mw",
        "timestamp": 1649343574
    },
    {
        "content": "<p>Fresh instances don't have any caches to load, so it's only a matter of write IO</p>",
        "id": 278176608,
        "sender_full_name": "The 8472",
        "timestamp": 1649343582
    },
    {
        "content": "<p>I think so, since it is enabled by default.</p>",
        "id": 278176646,
        "sender_full_name": "nagisa",
        "timestamp": 1649343590
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176254\">said</a>:</p>\n<blockquote>\n<p>I'd like to believe that we could address the disk space problems via some means</p>\n</blockquote>\n<p>Seems possible we could offer some kind of configuration to users as to how aggressively we cache incremental results. Not caching something on disk should be ok in that it's just a cache miss. Might also be an interesting way to test the robustness of the incremental system?</p>",
        "id": 278176663,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649343597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176503\">said</a>:</p>\n<blockquote>\n<p>I just want build speeds on fresh GCP instances be reasonable by default heh</p>\n</blockquote>\n<p>Heh, I wonder if we should be including that in our benchmarking</p>",
        "id": 278176667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343598
    },
    {
        "content": "<p>i.e. to my knowledge we deliberately have our perf runs taking place on a dedicated machine with fixed hardware spec</p>",
        "id": 278176798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343620
    },
    {
        "content": "<p>but maybe we should have separate runs on distinct cloud service providers...</p>",
        "id": 278176876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343635
    },
    {
        "content": "<p>I think there's some device-mapper layer that can be used to inject latency into IO.<br>\n<a href=\"https://www.kernel.org/doc/html/latest/admin-guide/device-mapper/delay.html\">https://www.kernel.org/doc/html/latest/admin-guide/device-mapper/delay.html</a></p>",
        "id": 278176904,
        "sender_full_name": "The 8472",
        "timestamp": 1649343641
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176646\">said</a>:</p>\n<blockquote>\n<p>I think so, since it is enabled by default.</p>\n</blockquote>\n<p>Not for release builds. I've been wondering if we can somehow default to not using incr. comp. in CI environments</p>",
        "id": 278176967,
        "sender_full_name": "mw",
        "timestamp": 1649343666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176663\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176254\">said</a>:</p>\n<blockquote>\n<p>I'd like to believe that we could address the disk space problems via some means</p>\n</blockquote>\n<p>Seems possible we could offer some kind of configuration to users as to how aggressively we cache incremental results. Not caching something on disk should be ok in that it's just a cache miss. Might also be an interesting way to test the robustness of the incremental system?</p>\n</blockquote>\n<p>This is kind of what <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and I were getting at up above when I was talking about \"knobs\"</p>",
        "id": 278176992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343679
    },
    {
        "content": "<p>though I like the way <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> you have reframed it</p>",
        "id": 278177025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343688
    },
    {
        "content": "<p>as an <em>opportunity</em> to catch new bugs</p>",
        "id": 278177035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343694
    },
    {
        "content": "<p>rather than a chance that we might miss them (which is how I was seeing it before)...</p>",
        "id": 278177050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343702
    },
    {
        "content": "<p>GCP is somewhat interesting to me is that they have I/O ops boost allowance of some sort, so the writes for first couple minutes operate fast. But then if GCP gets fed up with your workload, they just hang the VM until your regular IOps credits pay for the boost stuff or something. So in practice any additional writes compete with regular ones for performance quite heavily there.</p>",
        "id": 278177153,
        "sender_full_name": "nagisa",
        "timestamp": 1649343729
    },
    {
        "content": "<p>One detail regarding Io: it's not just hardware that can make disk access slow: Mac is significantly slower than similarly specd Linux cloud desktop due to throttling</p>",
        "id": 278177222,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1649343751
    },
    {
        "content": "<p>Which is similar to what Nagisa just said <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 278177289,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1649343773
    },
    {
        "content": "<p>So we are now over time. This was super cool conversation, though I admit I'm not sure what has come of it</p>",
        "id": 278177316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343786
    },
    {
        "content": "<p>might deserve a follow-up :)</p>",
        "id": 278177373,
        "sender_full_name": "mw",
        "timestamp": 1649343809
    },
    {
        "content": "<p>yeah</p>",
        "id": 278177400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343818
    },
    {
        "content": "<p>in any case I think <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> said \"I wonder if we should refine the disk space-run time tradeoff beforehand.\", and I think it would be prudent for them to at least look into removing the most trivial cases from their caching...</p>",
        "id": 278177517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343850
    },
    {
        "content": "<p>but overall, I think I'd like us to encourage more efforts on this front</p>",
        "id": 278177622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649343882
    },
    {
        "content": "<p>I haven't looked through the diff but perhaps we should put this through the MCP process? Seems like we might also want to adjust the rustc-dev-guide section on queries to mention the proposed new strategy for on-disk caching?</p>",
        "id": 278177686,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649343906
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>(as a side note, I wonder if there is an option to write out the incremental data out and indicate to the OS that it is in some shape and form is low priority, so that other artifact writes get to go first)</p>",
        "id": 278177782,
        "sender_full_name": "nagisa",
        "timestamp": 1649343937
    },
    {
        "content": "<p>Oh yeah, bye all!</p>",
        "id": 278177992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649344004
    },
    {
        "content": "<p>(thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!)</p>",
        "id": 278178023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649344019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278177686\">said</a>:</p>\n<blockquote>\n<p>I haven't looked through the diff but perhaps we should put this through the MCP process? Seems like we might also want to adjust the rustc-dev-guide section on queries to mention the proposed new strategy for on-disk caching?</p>\n</blockquote>\n<p>that's probably a good idea</p>",
        "id": 278178055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649344031
    },
    {
        "content": "<p>(another side note: if rustc could somehow indicate to the cargo that it is done with the regular work work and this process won't produce any more useful data for _this_ compilation session, would that largely negate the compile time hit from incremental? The process could stay around and continue writing out incremental stuff)</p>",
        "id": 278178114,
        "sender_full_name": "nagisa",
        "timestamp": 1649344050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278177782\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>(as a side note, I wonder if there is an option to write out the incremental data out and indicate to the OS that it is in some shape and form is low priority, so that other artifact writes get to go first)</p>\n</blockquote>\n<p>I don't think it would make a difference? If the system is IO-starved and memory is so full that writes become blocking because it has to push things out to disk then some writer thread will end up getting blocked and then the compiler stalls either way, no matter which thing it's trying to write.</p>\n<p>If there is plenty of spare memory and IO bandwidth is just eaten by background flushing then one can increase the commit/flushing intervals.</p>",
        "id": 278181409,
        "sender_full_name": "The 8472",
        "timestamp": 1649345365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278171956\">said</a>:</p>\n<blockquote>\n<p>My take on targets such as these is that whoever deals with the target knows best.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"276242\">@Riccardo D'Ambrosio</span> works on GPU things a fair bit and might be willing to take a look</p>",
        "id": 278181562,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649345408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278176040\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278175320\">said</a>:</p>\n<blockquote>\n<p>Didn't we ask users about this in the survey?</p>\n</blockquote>\n<p>Ok, so I <a href=\"https://github.com/rust-lang/surveys/issues/39#issuecomment-951966138\">provided this feedback</a> when the survey was being developed. Perhaps we can follow up with <span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> and <span class=\"user-mention silent\" data-user-id=\"256841\">Nick Cameron</span> to see what the results were?</p>\n</blockquote>\n<p>13% of respondents found disk space usage to be \"seriously lacking\" and another 32% said \"it could be better\". Only 3% said it got worse over the last year while 7% said it got better (66% said they weren't sure)</p>",
        "id": 278184430,
        "sender_full_name": "rylev",
        "timestamp": 1649346436
    },
    {
        "content": "<p>Is there any way we can derive the user rankings for how much they care about throughput, memory usage and disk usage? (Ie, users will trade disk usage for faster compiles but won't trade faster compiles for less memory). Perhaps the % who are unsure might be interesting in that regard?</p>",
        "id": 278185127,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649346699
    },
    {
        "content": "<p>No I don't think we can figure out trade offs unfortunately.</p>",
        "id": 278185807,
        "sender_full_name": "rylev",
        "timestamp": 1649346959
    },
    {
        "content": "<blockquote>\n<p>Getting nvidia to work on anything opensource is a stretch.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> issue is also that most people at nvidia don’t know that rust can target CUDA. I have actually applied for an internship on the CUDA devtools team so if i get accepted at least i may be able to bring more attention to it and perhaps also make the situation of rust support in cuda devtools better (although it already works pretty well since cuda does a good job of being lang-agnostic)</p>",
        "id": 278196008,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649351206
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Getting nvidia to work on anything opensource is a stretch.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> issue is also that most people at nvidia don’t know that rust can target CUDA.</p>\n</blockquote>\n<p>My experience is largely informed from trying to work with nvidia in other areas. I think the _only_ place where there was a remote sign of success was with tegra stuff. Would be great if the story there improved though! Good luck with the application!</p>",
        "id": 278197892,
        "sender_full_name": "nagisa",
        "timestamp": 1649352039
    },
    {
        "content": "<p>i dont blame nvidia too much because i know they legally cannot open source many things because they are tied up in patents, licenses, contracts, internal APIs, etc. However they do open source some cool things, see: cutlass, thrust, cub, etc. They also document some internal-ish things to an insane degree. PTX is very well documented down to the individual instruction despite being sort of rarely used</p>",
        "id": 278198097,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649352154
    },
    {
        "content": "<p>could always be better <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span> but yeah</p>",
        "id": 278198151,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649352191
    },
    {
        "content": "<p>i need to look back at that nvptx PR, it looked fine to me last time i checked but i haven't reviewed it in a while</p>",
        "id": 278198223,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649352230
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278177517\">said</a>:</p>\n<blockquote>\n<p>in any case I think <span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span> said \"I wonder if we should refine the disk space-run time tradeoff beforehand.\", and I think it would be prudent for them to at least look into removing the most trivial cases from their caching...</p>\n</blockquote>\n<p>I realize I did not provide sufficient context before the meeting.<br>\nThe linked PR proposes to cache results for all queries for which we encode/decode metadata.  This may sound silly to load from cache just to store to metadata, but it may actually get us optimal result reuse: results are loaded iff they are usefully reused.</p>\n<p>My question is where the tradeoff between time &amp; disk should be.  If I were to optimize this tradeoff, where should I aim?</p>",
        "id": 278217466,
        "sender_full_name": "cjgillot",
        "timestamp": 1649361126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276242\">Riccardo D'Ambrosio</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-04-07/near/278198097\">said</a>:</p>\n<blockquote>\n<p>i dont blame nvidia too much because i know they legally cannot open source many things because they are tied up in patents, licenses, contracts, internal APIs, etc.</p>\n</blockquote>\n<p>Nvidia doesn't allow using their signed firmware with the nouveau opensource driver, right? I don't see why they would be required to impose this legal restriction. Even if there is some reason, why do they have to put certain things behind signed firmware on hardware level and not allow it with the firmware nouveau generates? Like on some nvidea gpus fan control requires a signed firmware afaik. <a href=\"https://www.phoronix.com/scan.php?page=news_item&amp;px=MTc5ODA\">https://www.phoronix.com/scan.php?page=news_item&amp;px=MTc5ODA</a> To be fair they eventually did release some signed firmware to be used with nouveau: <a href=\"https://www.phoronix.com/scan.php?page=news_item&amp;px=NVIDIA-Releases-Signed-Blobs\">https://www.phoronix.com/scan.php?page=news_item&amp;px=NVIDIA-Releases-Signed-Blobs</a> Still it seems to happen with a delay of much more than a couple of weeks after release of a new gpu. Also what stops them from bringing the kernel part of nouveau into shape and then let their userspace driver use nouveau instead of their kernel module blob? I don't see why the kernel driver should contain anything they can't release. The kernel driver should only handle secure communication between the gpu and the userspace. Things like the shader compiler aren't part of the kernel driver either.</p>",
        "id": 278219630,
        "sender_full_name": "bjorn3",
        "timestamp": 1649362148
    },
    {
        "content": "<p>i don't agree with many of their decisions, but thats natural. If there is a reason and i knew it i probably could not say either. The shader compiler i suspect is a much different story too, i presume that CUDA is actually the core of nvidia GPUs, and that the CUDA driver and the graphics driver are sort of the same thing, so they could not release components tied to it such as the shader compiler (which supposedly uses libnvvm) very easily.</p>",
        "id": 278220237,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649362500
    },
    {
        "content": "<p>I don't think we need to dissect Nvidia's open-source policies in the compiler team meeting thread. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 278220528,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649362652
    },
    {
        "content": "<p>true lmao</p>",
        "id": 278220540,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649362658
    },
    {
        "content": "<p>anyways, yeah, i think its a circular issue that should get better once i find the time to try and integrate the codegen into rustc better and get it to use modern llvm</p>",
        "id": 278220637,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1649362695
    },
    {
        "content": "<p>Yeah, I have much more sympathy for keeping the userspace half closed source than for the kernel module. As per <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span>'s suggestion I will leave it at this.</p>",
        "id": 278222669,
        "sender_full_name": "bjorn3",
        "timestamp": 1649363692
    },
    {
        "content": "<p>Hello everyone, I'm new in the rust contrbution, but I would like to take part to the team and this mean also to the meeting, there is some way to know the scheduler? do you have an google calendar event?</p>",
        "id": 278304552,
        "sender_full_name": "Vincenzo Palazzo",
        "timestamp": 1649424934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492566\">@Vincenzo Palazzo</span> it's on Zulip every week on Thursday</p>",
        "id": 278305341,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649425319
    },
    {
        "content": "<p>The calendar is here and you should be able to subscribe to it <a href=\"https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com\">https://calendar.google.com/calendar/u/0/embed?src=6u5rrtce6lrtv07pfi3damgjus@group.calendar.google.com</a></p>",
        "id": 278305541,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649425416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Thanks! and sorry for the stupid questio- <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> Thanks for the link :)</p>",
        "id": 278305568,
        "sender_full_name": "Vincenzo Palazzo",
        "timestamp": 1649425436
    },
    {
        "content": "<p>Not a stupid question <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 278305733,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649425501
    },
    {
        "content": "<p>You might also be interested to look around <a href=\"https://rust-lang.github.io/compiler-team/\">https://rust-lang.github.io/compiler-team/</a> and <a href=\"https://rustc-dev-guide.rust-lang.org/\">https://rustc-dev-guide.rust-lang.org/</a></p>",
        "id": 278305851,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1649425549
    },
    {
        "content": "<p>Yep I already read the book and I only put the wrong day in the calendar :) I read the wrong day, for this reason I asked here :) my bad</p>",
        "id": 278306354,
        "sender_full_name": "Vincenzo Palazzo",
        "timestamp": 1649425730
    }
]