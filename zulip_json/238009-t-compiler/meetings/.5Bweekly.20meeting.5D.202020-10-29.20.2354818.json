[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-10-28T14:00:00Z\">2020-10-28T14:00:00+00:00</time></p>",
        "id": 214885735,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913063
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 214885751,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913072
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/DEgK3x4SRJCQlqV0McB0xw?view\">meeting agenda</a></p>",
        "id": 214885779,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913090
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span>and <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span></p>",
        "id": 214885826,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is there something we should share about <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span>?</p>",
        "id": 214886005,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>?</p>",
        "id": 214886059,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603913227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ugh I guess not though I'd like to circle up sometime soon and make some <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> plans. In particular I think we need to come back to the question of modernizing the list of working groups and kind of synchronizing our setup there.</p>",
        "id": 214905035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603923793
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 57 minutes</p>",
        "id": 214962721,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603976609
    },
    {
        "content": "<p><a href=\"https://hackmd.io/DEgK3x4SRJCQlqV0McB0xw?view\">Check out the meeting agenda</a></p>",
        "id": 214962745,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603976621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> by the way, I see that niko didn't get a chance to fill in the T-compiler/wg-meta checkin. You are a lead of wg-meta as well, right? It might make sense for you to supply the checkin text this week since I know niko is swamped.</p>",
        "id": 214968231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603979348
    },
    {
        "content": "<p>my understanding is that the wg has been kind of inactive and not much activity has happened, I was pinging <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> just in case they wanted to mention some future plans or something that I'm not aware of</p>",
        "id": 214968443,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603979457
    },
    {
        "content": "<p>gotcha, okay</p>",
        "id": 214968471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603979471
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 214969768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980018
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 214969817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980038
    },
    {
        "content": "<ul>\n<li>I can now state publicly that I'm working for Amazon. They've employed me to continue working on Rust full time.</li>\n</ul>",
        "id": 214969909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980076
    },
    {
        "content": "<p>(You'll hear more about Amazon's ongoing investment in Rust in the months to come. Stay tuned!)</p>",
        "id": 214970025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980122
    },
    {
        "content": "<p>All your (work) time are belong to rUSt</p>",
        "id": 214970077,
        "sender_full_name": "oli",
        "timestamp": 1603980133
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 214970107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980148
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214970134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980162
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214970170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980183
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"inherit stable annotations in enum variants and field items\" <a href=\"https://github.com/rust-lang/compiler-team/issues/370\">compiler-team#370</a></li>\n<li>\"TypeVisitor: use ops::ControlFlow instead of bool\" <a href=\"https://github.com/rust-lang/compiler-team/issues/374\">compiler-team#374</a></li>\n<li>\"Move graphviz code out of the compiler into external crate\" <a href=\"https://github.com/rust-lang/compiler-team/issues/380\">compiler-team#380</a></li>\n<li>\"Allow making <code>RUSTC_BOOTSTRAP</code> conditional on the crate name\" <a href=\"https://github.com/rust-lang/rust/pull/77802\">rust#77802</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214970218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980204
    },
    {
        "content": "<blockquote>\n<p>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></p>\n</blockquote>\n<p>FYI this proposal is a little out of date, <a href=\"https://github.com/rust-lang/rust/pull/77802\">https://github.com/rust-lang/rust/pull/77802</a> and <a href=\"https://github.com/rust-lang/cargo/issues/7088\">https://github.com/rust-lang/cargo/issues/7088</a> are more what I want to do with it</p>",
        "id": 214970230,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603980209
    },
    {
        "content": "<p>(also, giant +1 to the MCP process for making me think about it before actually implementing)</p>",
        "id": 214970281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603980233
    },
    {
        "content": "<p>Ah okay, thanks for clarifying <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> . That's why its good to have these ongoing reports of MCP's and their status, I guess!</p>",
        "id": 214970380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980263
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Change type folding to take self by value\" <a href=\"https://github.com/rust-lang/compiler-team/issues/371\">compiler-team#371</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214970413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980284
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"Stabilize <code>Poll::is_ready</code> and <code>is_pending</code> as const\" <a href=\"https://github.com/rust-lang/rust/pull/76227\">rust#76227</a></li>\n<li>[T-lang] \"passes: <code>check_attr</code> on more targets\" <a href=\"https://github.com/rust-lang/rust/pull/77015\">rust#77015</a></li>\n<li>[T-lang] \"stop promoting union field accesses in 'const'\" <a href=\"https://github.com/rust-lang/rust/pull/77526\">rust#77526</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214970452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980299
    },
    {
        "content": "<ul>\n<li>Heads up: pnkfelix plans to check off all the remaining T-compiler checkboxes on <a href=\"https://github.com/rust-lang/rfcs/pull/2048#issuecomment-718123002\">this fcp close for RFC 2048</a><ul>\n<li>the basic story here is that T-lang held a series of \"backlog bonanza\" meetings to deal with backlog of RFC PRs, and now we're actually getting the results of that. Many of the RFC PRs are getting recommendations to be converted to MCPs and then closed.</li>\n</ul>\n</li>\n</ul>",
        "id": 214970670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980379
    },
    {
        "content": "<p>(and specifically for RFC 2048, a whole lotta teams were tagged on that RFC, so while I want to push to close it to get it out of everyone's hair, I didn't want to check off other people's boxes without first <em>telling you all</em> of my plans to do so.)</p>",
        "id": 214970784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980434
    },
    {
        "content": "<p>((if you have concerns with this planned course of action, please feel free to speak up here, or PM myself or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> !))</p>",
        "id": 214970825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980453
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 214970869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980471
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> has been largely dormant (see conversation earlier in this topic)</p>",
        "id": 214970952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980498
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>:</p>\n<ul>\n<li>MIR Inlining tracks source scopes <a href=\"https://github.com/rust-lang/rust/pull/68965\">rust#68965</a></li>\n<li>Add dest prop pass <a href=\"https://github.com/rust-lang/rust/pull/72632\">rust#72632</a></li>\n<li>Remove the copy prop pass for good <a href=\"https://github.com/rust-lang/rust/pull/77373\">rust#77373</a></li>\n<li><code>-Zunsound-mir-opts</code> to enable experimental and broken passes <a href=\"https://github.com/rust-lang/rust/pull/77322\">rust#77322</a>, <a href=\"https://github.com/rust-lang/rust/pull/76899\">rust#76899</a></li>\n<li>Optimize away drop calls on <code>!needs_drop</code> types <a href=\"https://github.com/rust-lang/rust/pull/76673\">rust#76673</a></li>\n<li>Optimize away <code>x == bool_const</code> and <code>x != bool_const</code> <a href=\"https://github.com/rust-lang/rust/pull/76067\">rust#76067</a></li>\n<li>Lots of improvements to dataflow <a href=\"https://github.com/rust-lang/rust/pull/71006\">rust#71006</a></li>\n<li><code>mir::Body</code> now knows its source/owner <a href=\"https://github.com/rust-lang/rust/pull/77430\">rust#77430</a></li>\n<li>Make mir dumps less noisy <a href=\"https://github.com/rust-lang/rust/pull/75566\">rust#75566</a>, <a href=\"https://github.com/rust-lang/rust/pull/75670\">rust#75670</a></li>\n<li>Reminder: MIR is now validated for correctness (example: <a href=\"https://github.com/rust-lang/rust/pull/75562\">rust#75562</a>)<br>\n    * Please put all testable invariants into the MIR validator</li>\n</ul>",
        "id": 214970970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980507
    },
    {
        "content": "<p>(just as a editorial note: I think this amount of text hits a sweet spot in terms of how long the checkin text is. Thanks so much, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> !)</p>",
        "id": 214971063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214970952\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> has been largely dormant (see conversation earlier in this topic)</p>\n</blockquote>\n<p>however, I would like to try and re-invigorate it a bit</p>",
        "id": 214971077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980547
    },
    {
        "content": "<blockquote>\n<p>Reminder: MIR is now validated for correctness (example: <a href=\"https://github.com/rust-lang/rust/issues/75562\">rust#75562</a>)</p>\n</blockquote>\n<p>This is being reverted: <a href=\"https://github.com/rust-lang/rust/pull/78410\">https://github.com/rust-lang/rust/pull/78410</a></p>",
        "id": 214971085,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603980549
    },
    {
        "content": "<p>but that's for next time :)</p>",
        "id": 214971118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980564
    },
    {
        "content": "<p>err, maybe just parts of it, not the whole thing</p>",
        "id": 214971130,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603980570
    },
    {
        "content": "<p>okay maybe lets get clarity here</p>",
        "id": 214971152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214971085\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Reminder: MIR is now validated for correctness (example: <a href=\"https://github.com/rust-lang/rust/issues/75562\">rust#75562</a>)</p>\n</blockquote>\n<p>This is being reverted: <a href=\"https://github.com/rust-lang/rust/pull/78410\">https://github.com/rust-lang/rust/pull/78410</a></p>\n</blockquote>\n<p>we not reverting the mir validator, we are adjusting it to work around a different bug</p>",
        "id": 214971160,
        "sender_full_name": "lcnr",
        "timestamp": 1603980584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214971077\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214970952\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> has been largely dormant (see conversation earlier in this topic)</p>\n</blockquote>\n<p>however, I would like to try and re-invigorate it a bit</p>\n</blockquote>\n<p>that was my feeling and that's why I've been pinging you about checkins :)</p>",
        "id": 214971166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603980587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> how can we help re-invigorate? Do you think getting new members would help?</p>",
        "id": 214971262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980617
    },
    {
        "content": "<p>or maybe you just want to re-invigorate \"privately\" (or at least asynchronously)</p>",
        "id": 214971315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980647
    },
    {
        "content": "<p>asychronously I suppose but</p>",
        "id": 214971345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980663
    },
    {
        "content": "<p>I think there's various bits of \"Follow-up\" work to be done</p>",
        "id": 214971354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980669
    },
    {
        "content": "<p>e.g., we had the discussion about collaborator survey, and the MCP process</p>",
        "id": 214971363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980677
    },
    {
        "content": "<p>plus our list of working groups is kind of oudated, and we never quite finished up the \"areas\" conversation</p>",
        "id": 214971391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980692
    },
    {
        "content": "<p>and lang/libs have been adopting variants of MCP that we could maybe try to consolidate a bit</p>",
        "id": 214971414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214971160\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214971085\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Reminder: MIR is now validated for correctness (example: <a href=\"https://github.com/rust-lang/rust/issues/75562\">rust#75562</a>)</p>\n</blockquote>\n<p>This is being reverted: <a href=\"https://github.com/rust-lang/rust/pull/78410\">https://github.com/rust-lang/rust/pull/78410</a></p>\n</blockquote>\n<p>we not reverting the mir validator, we are adjusting it to work around a different bug</p>\n</blockquote>\n<p>Okay, thanks for the clarification. The reminder/warning still stands, then, right? As in, \"Please put all testable invariants into the MIR validator\" still holds,  then?</p>",
        "id": 214971427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980705
    },
    {
        "content": "<p>so those are the kinds of things that are on  my mind :) if helping push that work along appeals to you, then let's talk (in <a class=\"stream\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta\">#t-compiler/wg-meta</a>)</p>",
        "id": 214971468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980722
    },
    {
        "content": "<blockquote>\n<p>As in, \"Please put all testable invariants into the MIR validator\" still holds, then?</p>\n</blockquote>\n<p>yes</p>",
        "id": 214971557,
        "sender_full_name": "oli",
        "timestamp": 1603980745
    },
    {
        "content": "<p>Great</p>",
        "id": 214971560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980748
    },
    {
        "content": "<p>okay this has been one of the more fun announcement periods we've had in a while. (Or maybe I'm just still giddy from the new job!)</p>",
        "id": 214971608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980771
    },
    {
        "content": "<p>lets move along</p>",
        "id": 214971618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980775
    },
    {
        "content": "<p>the linked example PR was just one thing that got added to the validator, even if that one thing had bugs, we have lots that are working and have helped catch bugs</p>",
        "id": 214971648,
        "sender_full_name": "oli",
        "timestamp": 1603980785
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214971664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980794
    },
    {
        "content": "<ul>\n<li>\"Do not try to report on closures to avoid ICE\" <a href=\"https://github.com/rust-lang/rust/pull/78268\">rust#78268</a><br>\n    - opened by <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span>  and assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span><br>\n    - fixes <a href=\"https://github.com/rust-lang/rust/issues/78262\">rust#78262</a> (a P-medium panic when computing function signature of closure with trait object)</li>\n</ul>",
        "id": 214971684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980802
    },
    {
        "content": "<p>this fixes a stable to stable regression</p>",
        "id": 214971867,
        "sender_full_name": "oli",
        "timestamp": 1603980879
    },
    {
        "content": "<p>yep, and it seems pretty conservative</p>",
        "id": 214971899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980894
    },
    {
        "content": "<p>this is very low risk</p>",
        "id": 214971948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980913
    },
    {
        "content": "<p>it just rejects printing a \"nice error\" early</p>",
        "id": 214971963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980920
    },
    {
        "content": "<p>/me wonders if <code>find_param_with_region</code> should be returning an error in this case rather than ICE'ing?</p>",
        "id": 214971975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980928
    },
    {
        "content": "<p>(and hence falls back to the \"not nice\" error)</p>",
        "id": 214971985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603980932
    },
    {
        "content": "<p>(but a decision to change that behavior can be independent from this choice.)</p>",
        "id": 214972030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603980955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214971975\">said</a>:</p>\n<blockquote>\n<p>/me wonders if <code>find_param_with_region</code> should be returning an error in this case rather than ICE'ing?</p>\n</blockquote>\n<p>That is, the necessity to check the precondition here is not something I would think is an obvious prerequisite ...</p>",
        "id": 214972150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981000
    },
    {
        "content": "<p>anyway, beta backport approved.</p>",
        "id": 214972185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981017
    },
    {
        "content": "<ul>\n<li>\"Do not ICE on invalid input\" <a href=\"https://github.com/rust-lang/rust/pull/78422\">rust#78422</a><br>\n    - opened by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and assigned to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span><br>\n    - PR not yet reviewed<br>\n    - Fixes <a href=\"https://github.com/rust-lang/rust/issues/78372\">rust#78372</a> (ICE on computing layout for a type)</li>\n</ul>",
        "id": 214972216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981029
    },
    {
        "content": "<p>another pretty conservative change</p>",
        "id": 214972295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981077
    },
    {
        "content": "<p>/me will r+ it now, I think</p>",
        "id": 214972372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981102
    },
    {
        "content": "<p>any reason to not backport?</p>",
        "id": 214972464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981154
    },
    {
        "content": "<p>nah, just reviewed, lgtm on both r+ and backport</p>",
        "id": 214972507,
        "sender_full_name": "oli",
        "timestamp": 1603981176
    },
    {
        "content": "<p>the bug itself doesn't have any regression tags</p>",
        "id": 214972515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981178
    },
    {
        "content": "<p>seems harmless</p>",
        "id": 214972517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981178
    },
    {
        "content": "<p>so I'm not immediately sure whether this is stable-to-beta or stable-to-stable</p>",
        "id": 214972549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981194
    },
    {
        "content": "<p>/me says \"ooooh\" at the tool advertised in bug report, <a href=\"https://github.com/perses-project/perses\">https://github.com/perses-project/perses</a></p>",
        "id": 214972633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981217
    },
    {
        "content": "<p>oh that <em>is</em> cool</p>",
        "id": 214972689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981250
    },
    {
        "content": "<p>too bad we don't have a grammar :)</p>",
        "id": 214972696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981253
    },
    {
        "content": "<p>but they must have used something to apply it here</p>",
        "id": 214972718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981261
    },
    {
        "content": "<p>they must have hacked up their own rust grammar</p>",
        "id": 214972743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981271
    },
    {
        "content": "<p>I wonder how many of the reductions from my blog post it can emulate.</p>",
        "id": 214972772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981285
    },
    {
        "content": "<p>there are some \"pretty close\" grammars floating around</p>",
        "id": 214972774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981286
    },
    {
        "content": "<p>Maybe matklads?</p>",
        "id": 214972830,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1603981305
    },
    {
        "content": "<p>anyway, backport approved.</p>",
        "id": 214972841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981310
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214972909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981331
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214972917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981338
    },
    {
        "content": "<p>(their grammar seemed to be <a href=\"https://github.com/perses-project/perses/blob/d247da749c7fbe65de6f2d92dcae91814ec73b87/test/org/perses/grammar/rust/golden_pnf_rust.g4\">https://github.com/perses-project/perses/blob/d247da749c7fbe65de6f2d92dcae91814ec73b87/test/org/perses/grammar/rust/golden_pnf_rust.g4</a>)</p>",
        "id": 214972926,
        "sender_full_name": "lqd",
        "timestamp": 1603981340
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214972940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981349
    },
    {
        "content": "<ul>\n<li>\"Tracking issue for renaming crates inside compiler directory\" <a href=\"https://github.com/rust-lang/rust/issues/76425\">rust#76425</a><ul>\n<li>\"Discussed\" last week but we didn't find an agreement, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> suggested maybe a design meeting?</li>\n<li>References this <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">MCP</a></li>\n<li>The goal is to have all crates under <code>./compiler</code> have a consistent name</li>\n<li><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  summarized the discussion in this <a href=\"https://hackmd.io/1FgS1fZGSOyWrwhDMq98pw\">HackMD file</a></li>\n<li>cc <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n</ul>\n</li>\n</ul>",
        "id": 214972988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981370
    },
    {
        "content": "<p>In the planning meeting we talked about just making the call that we're not going to do this</p>",
        "id": 214973025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981392
    },
    {
        "content": "<p>Or at least not <em>yet</em></p>",
        "id": 214973050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I think you had said you would be okay with us just making the call? As in you didn't plan to object to such a call?</p>",
        "id": 214973091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981424
    },
    {
        "content": "<p>yes, I'd be ok with that</p>",
        "id": 214973110,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603981433
    },
    {
        "content": "<p>It's more an aesthetic objection than anything else, I don't think it impacts people in practice</p>",
        "id": 214973200,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603981450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> lets just do that then; as in, formally state \"we're not going to do this, at least not now.</p>",
        "id": 214973205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981453
    },
    {
        "content": "<p>I concur</p>",
        "id": 214973292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981488
    },
    {
        "content": "<p>I can write up a comment and close the issue after the meeting. (Or we could do fcp close, but I think in this scenario an edict \"from on high\" would not be absurd.)</p>",
        "id": 214973307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981494
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 214973334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981510
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">46 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">29 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 2 P-high, 5 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 18 P-high, 65 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 214973362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981527
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214973394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981540
    },
    {
        "content": "<ul>\n<li>\"Increasingly slow compilation as more levels of <code>async</code> are added in Rust 1.46\" <a href=\"https://github.com/rust-lang/rust/issues/75992\">rust#75992</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"263031\">@Nicholas Bishop</span></li>\n<li>Unassigned, not easy to reproduce</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-683270098\">@kellerkindt</a> and <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-683274620\">@algesten</a> did some bisecting </li>\n<li><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> suggests instead of reverting important patches a possible way forward could be implementing some caching like in <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-713100226\">PR #76928</a></li>\n<li>smallest <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-715557750\">repro so far</a> from <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-716740111\">its stacktrace</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214973411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981554
    },
    {
        "content": "<p>There's one other bit of progress here: <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> has posted a PR, and I have confirmed that PR fixed my reduction.</p>",
        "id": 214973513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981582
    },
    {
        "content": "<p>In fact I think that PR is nominated for discussion later in meeting</p>",
        "id": 214973570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981604
    },
    {
        "content": "<p>progress is a bit incorrect though as I just reverted the PR causing the regression</p>",
        "id": 214973595,
        "sender_full_name": "lcnr",
        "timestamp": 1603981616
    },
    {
        "content": "<p>but you put in a different change I had thought</p>",
        "id": 214973627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981631
    },
    {
        "content": "<p>to fix the problem in a different way ?</p>",
        "id": 214973657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981642
    },
    {
        "content": "<p>/me goes to look</p>",
        "id": 214973666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981647
    },
    {
        "content": "<p>we originally landed <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> to fix a mir validator ICE</p>",
        "id": 214973708,
        "sender_full_name": "lcnr",
        "timestamp": 1603981669
    },
    {
        "content": "<p>Right, the text says it reverts PR <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a>, \"and instead uses <a href=\"https://github.com/rust-lang/rust/issues/75419\">#75419</a> to fix <a href=\"https://github.com/rust-lang/rust/issues/75313\">#75313</a>\"</p>",
        "id": 214973772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981694
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang/rust/issues/78410\">#78410</a> both reverts <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> and changes the mir validator to work without that</p>",
        "id": 214973805,
        "sender_full_name": "lcnr",
        "timestamp": 1603981708
    },
    {
        "content": "<p>I took that to mean that this is not just a mere revert</p>",
        "id": 214973812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981710
    },
    {
        "content": "<p>right</p>",
        "id": 214973820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981714
    },
    {
        "content": "<p>I consider that to be progress</p>",
        "id": 214973838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981720
    },
    {
        "content": "<p>like a, one step back two steps forward type deal</p>",
        "id": 214973858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981727
    },
    {
        "content": "<p>do I misunderstand?</p>",
        "id": 214973909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981748
    },
    {
        "content": "<p>no, what you are saying is correct <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> it just feels like defeat to me personally</p>",
        "id": 214974016,
        "sender_full_name": "lcnr",
        "timestamp": 1603981790
    },
    {
        "content": "<p>well in any case, I do think this problem is relatively under control</p>",
        "id": 214974020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981794
    },
    {
        "content": "<p>I think probably the frustration is that <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> was doing the right thing</p>",
        "id": 214974021,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981794
    },
    {
        "content": "<p>okay <em>that</em> frustration I can understand</p>",
        "id": 214974072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981806
    },
    {
        "content": "<p>we'll come back to it at some point</p>",
        "id": 214974074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981807
    },
    {
        "content": "<p>In terms of <a href=\"https://github.com/rust-lang/rust/issues/75992\">#75992</a> itself</p>",
        "id": 214974093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981821
    },
    {
        "content": "<p>I would still like to continue trying to identify a reduction without dependencies</p>",
        "id": 214974132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981839
    },
    {
        "content": "<p>but it may be hard to justify spending time on it if the problem has been fixed. :)</p>",
        "id": 214974171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981856
    },
    {
        "content": "<p>We'll see.</p>",
        "id": 214974181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981859
    },
    {
        "content": "<p>Lets move along, I think</p>",
        "id": 214974191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981863
    },
    {
        "content": "<ul>\n<li>\"Upgrade to LLVM11 caused a codegen regression on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/78283\">rust#78283</a><br>\n    - opened by <span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span> and unassigned<br>\n    - Firefox code that used to work on Rust 1.46 started to fail after upgrading to LLVM 11<br>\n    - Affects only MSVC<br>\n    - <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> suggests could be related to <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a></li>\n</ul>",
        "id": 214974230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981884
    },
    {
        "content": "<p>oh no, I had meant to keep looking at this!</p>",
        "id": 214974293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981917
    },
    {
        "content": "<p>hmm, did this become P-critical again</p>",
        "id": 214974393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981956
    },
    {
        "content": "<p>nope, still P-high.</p>",
        "id": 214974441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603981977
    },
    {
        "content": "<p>looks like <span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span> did some amazing detective work</p>",
        "id": 214974451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603981986
    },
    {
        "content": "<p>While I clearly do not mind being reminded of it, I am curious: <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> , what led to this being put on today's agenda?</p>",
        "id": 214974483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982000
    },
    {
        "content": "<p>ooh oh oh</p>",
        "id": 214974522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982027
    },
    {
        "content": "<p>sorry I got distracted looking at the link to <a href=\"https://github.com/rust-lang/rust/issues/74498\">#74498</a></p>",
        "id": 214974535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982038
    },
    {
        "content": "<p>it's P-critical</p>",
        "id": 214974583,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603982046
    },
    {
        "content": "<p>right I got confused, sorry</p>",
        "id": 214974590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982052
    },
    {
        "content": "<p>it <em>is</em> P-critical</p>",
        "id": 214974592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982057
    },
    {
        "content": "<p>hmm</p>",
        "id": 214974604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982068
    },
    {
        "content": "<p>okay</p>",
        "id": 214974609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982071
    },
    {
        "content": "<blockquote>\n<p>It looks like rust 1.38 changes some u8 adds to add nuw and this causes causes the problem:</p>\n</blockquote>",
        "id": 214974676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603982111
    },
    {
        "content": "<p>Well maybe I can justify spending time looking at <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">https://bugs.llvm.org/show_bug.cgi?id=46943</a> again</p>",
        "id": 214974686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982118
    },
    {
        "content": "<p>or better still, maybe someone from <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> can have a go at it</p>",
        "id": 214974734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982148
    },
    {
        "content": "<p>It would be nice to know whether this, like <a href=\"https://github.com/rust-lang/rust/issues/74498\">#74498</a>, is from some library code of ours using <code>unchecked_add</code></p>",
        "id": 214974932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982251
    },
    {
        "content": "<p>or if its a different cause, in terms of where the <code>nuw</code> is being introduced</p>",
        "id": 214974964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982268
    },
    {
        "content": "<p>anyway I don't want to get bogged down in this one bug right now</p>",
        "id": 214975019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982285
    },
    {
        "content": "<p>is it a miscompile triggered by <code>nuw</code>?</p>",
        "id": 214975067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603982325
    },
    {
        "content": "<p>i.e., adding the <code>nuw</code> is correct</p>",
        "id": 214975082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603982334
    },
    {
        "content": "<p>but the result is wrong?</p>",
        "id": 214975087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603982336
    },
    {
        "content": "<p>I'll try to take a look at the LLVM issue soon.</p>",
        "id": 214975125,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603982354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214975067\">said</a>:</p>\n<blockquote>\n<p>is it a miscompile triggered by <code>nuw</code>?</p>\n</blockquote>\n<p>that was the case on <a href=\"https://github.com/rust-lang/rust/issues/74498\">#74498</a></p>",
        "id": 214975173,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982372
    },
    {
        "content": "<p>I cannot immediately tell if is also the case here, though the fact that this is a loop optimization makes me think it could be</p>",
        "id": 214975218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> thanks!</p>",
        "id": 214975372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982456
    },
    {
        "content": "<p>lets move along</p>",
        "id": 214975445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982495
    },
    {
        "content": "<ul>\n<li>\"Regression parsing closing angle brackets near function ptr return type\" <a href=\"https://github.com/rust-lang/rust/issues/78507\">rust#78507</a><br>\n    - reported by <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> <br>\n    - regression seems to be in <a href=\"https://github.com/rust-lang/rust/pull/78379\">rust#78379</a><br>\n    - assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, will work on a patch</li>\n</ul>",
        "id": 214975465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982507
    },
    {
        "content": "<p>I'll have the patch shortly, will be small</p>",
        "id": 214975548,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1603982539
    },
    {
        "content": "<p>okay great</p>",
        "id": 214975575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982549
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>\"regression: could not fully normalize type\" <a href=\"https://github.com/rust-lang/rust/issues/78139\">rust#78139</a><br>\n    - Opened and assigned to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <br>\n    - Regression seems to be in PR <a href=\"https://github.com/rust-lang/rust/pull/70793\">rust#70793</a> and related to <a href=\"https://github.com/rust-lang/rust/issues/54114\">rust#54114</a></li>\n</ul>",
        "id": 214975601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982560
    },
    {
        "content": "<p>Okay, this still needs an MCVE, as noted by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 214975700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982598
    },
    {
        "content": "<p>I still need to post the revert, it's not a clean one so will need some work. I also want to check the needs_drop thing.</p>",
        "id": 214975706,
        "sender_full_name": "simulacrum",
        "timestamp": 1603982602
    },
    {
        "content": "<p>(the PR in question changed some 1000 lines iirc)</p>",
        "id": 214975739,
        "sender_full_name": "simulacrum",
        "timestamp": 1603982615
    },
    {
        "content": "<p>it may be yet another case of a lazy normalization bug</p>",
        "id": 214975885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982656
    },
    {
        "content": "<p>(as in, another case where we need to add a \"ad hoc\" normalization step somewhere in the control flow)</p>",
        "id": 214976041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982715
    },
    {
        "content": "<p>or wait, no, maybe I misunderstand</p>",
        "id": 214976076,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982730
    },
    {
        "content": "<p>/me looks again</p>",
        "id": 214976080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982732
    },
    {
        "content": "<p>(is this a case where we <em>have</em> an attempt to normalize and its failing, and thus its evidence of a normalization call in the wrong place...)</p>",
        "id": 214976190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982769
    },
    {
        "content": "<p>((sigh...))</p>",
        "id": 214976203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982774
    },
    {
        "content": "<p>haven't looked closely but this is the sort of problem lazy norm intends to fix</p>",
        "id": 214976235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603982794
    },
    {
        "content": "<p>hmm. its unfortunate that PR <a href=\"https://github.com/rust-lang/rust/issues/70793\">#70793</a> has a bit of a messy commit history</p>",
        "id": 214976366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982867
    },
    {
        "content": "<p>indeed. I already complained on said PR :)</p>",
        "id": 214976471,
        "sender_full_name": "simulacrum",
        "timestamp": 1603982897
    },
    {
        "content": "<p>or is it just a fine-grained commit history?</p>",
        "id": 214976479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982901
    },
    {
        "content": "<p>some of the commits definitely could have been squashed together</p>",
        "id": 214976536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982931
    },
    {
        "content": "<p>maybe we should consider curating certain PR's to serve as examples to show to new contributors</p>",
        "id": 214976582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982957
    },
    {
        "content": "<p>i.e. show people examples of PR's with idealized commit histories, and also PR's with less-than-ideal ones, and finally PR's that were rejected due to commit history messiness</p>",
        "id": 214976669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603982996
    },
    {
        "content": "<p>I know I recently wanted to give feedback on how to \"properly\" factor a PR into commits</p>",
        "id": 214976738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983013
    },
    {
        "content": "<p>but I didn't take the time to write out my thoughts on the matter then</p>",
        "id": 214976761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983024
    },
    {
        "content": "<p>some discussion of this in <a href=\"#narrow/stream/131828-t-compiler/topic/Too.20many.20PRs\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Too.20many.20PRs</a></p>",
        "id": 214976767,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603983027
    },
    {
        "content": "<p>thanks for teh pointer</p>",
        "id": 214976837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983059
    },
    {
        "content": "<p>anyway</p>",
        "id": 214976847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you think you'll have time to generate an MCVE too</p>",
        "id": 214976861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983074
    },
    {
        "content": "<p>likely no</p>",
        "id": 214976873,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983080
    },
    {
        "content": "<p>(cleanup group was pinged though)</p>",
        "id": 214976905,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983093
    },
    {
        "content": "<p>if not, ping me and I can look into doing so. That's the kind of task I don't mind having as an idle background thing, at least for low priority matters.</p>",
        "id": 214976910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983095
    },
    {
        "content": "<p>okay good</p>",
        "id": 214976920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983098
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214976950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983107
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 214976966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983115
    },
    {
        "content": "<ul>\n<li>\"Build hang on Linux with nightly and beta toolchains\" <a href=\"https://github.com/rust-lang/rust/issues/76980\">rust#76980</a><ul>\n<li>Unassigned</li>\n<li>Build hangs on beta</li>\n<li><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> bisected it to <a href=\"https://github.com/rust-lang/rust/pull/73526\">rust#73526</a></li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-695805807\">is not aware of any LLVM 11 issue like that </a></li>\n<li>A <a href=\"https://github.com/rust-lang/rust/pull/77642\">possible workaround was added</a> by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> but it doesn't seem to be confirmation if works or not.</li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> believes the real issue stems in PR <a href=\"https://github.com/rust-lang/rust/pull/74163\">rustc#74163</a></li>\n<li>There's a long technical analysis in the <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-705800997\">last comment</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> asked <code>jethrogb</code> and <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> if they could open a PR about it</li>\n</ul>\n</li>\n</ul>",
        "id": 214977037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983127
    },
    {
        "content": "<p>yeah we've been discussing this for a while</p>",
        "id": 214977084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983147
    },
    {
        "content": "<p>We do have confirmation that the workaround works (at least on limited test cases)</p>",
        "id": 214977104,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983160
    },
    {
        "content": "<p>Indeed, we are also using that workaround for 1.48</p>",
        "id": 214977124,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983170
    },
    {
        "content": "<p>okay</p>",
        "id": 214977138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983174
    },
    {
        "content": "<p>but so far no one has done the analysis, e.g. to figure out what changed between LLVM 10 and LLVM 11 (and to see if there's a flag to prevent this)</p>",
        "id": 214977211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983210
    },
    {
        "content": "<p>anyone from <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> willing to look into that?</p>",
        "id": 214977233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983223
    },
    {
        "content": "<p>I think it was just that LLVM is using some new STL symbols</p>",
        "id": 214977352,
        "sender_full_name": "cuviper",
        "timestamp": 1603983259
    },
    {
        "content": "<p>hmm</p>",
        "id": 214977368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-28.20.2354818/near/214977124\">said</a>:</p>\n<blockquote>\n<p>Indeed, we are also using that workaround for 1.48</p>\n</blockquote>\n<p>The workaround you refer to here is disabling ThinLTO, right?</p>",
        "id": 214977423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983293
    },
    {
        "content": "<p>yes</p>",
        "id": 214977474,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983315
    },
    {
        "content": "<p>(really shared linking of llvm, but we do that by disabling thinlto right now)</p>",
        "id": 214977510,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983332
    },
    {
        "content": "<p>but we have not yet done it on master, right? That was the next step you had planned if this wasn't otherwise fixed, right?</p>",
        "id": 214977532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983340
    },
    {
        "content": "<p>I think that does sound like best path forward, in terms of a short-term easily-undoable decision</p>",
        "id": 214977591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983360
    },
    {
        "content": "<p>So yeah, I'd say move forward with that</p>",
        "id": 214977653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983369
    },
    {
        "content": "<p>next</p>",
        "id": 214977671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983376
    },
    {
        "content": "<p>yeah I plan to soon</p>",
        "id": 214977673,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983378
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>\"ICE:  tuple_fields called on non-tuple:  async fn with unknown macro\" <a href=\"https://github.com/rust-lang/rust/issues/77993\">rust#77993</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"294290\">@NeoRaider</span> </li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> and <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> </li>\n<li>This should fix an issue emerged in <a href=\"https://github.com/rust-lang/rust/pull/69274\">#69274</a> and <a href=\"https://github.com/rust-lang/rust/issues/70307\">#70307</a></li>\n<li>Fixed by PR <a href=\"https://github.com/rust-lang/rust/pull/78432\">rust#78432</a> already r+ed</li>\n</ul>\n</li>\n</ul>",
        "id": 214977699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983391
    },
    {
        "content": "<p>is this disabling thinlto <em>while building llvm itself</em>?</p>",
        "id": 214977700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603983392
    },
    {
        "content": "<p>or for users?</p>",
        "id": 214977707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603983395
    },
    {
        "content": "<p>this sounds under control</p>",
        "id": 214977713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983396
    },
    {
        "content": "<p>building llvm</p>",
        "id": 214977717,
        "sender_full_name": "simulacrum",
        "timestamp": 1603983398
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Triage done by <strong>@simulacrum</strong>.</p>\n<p>Relatively quiet week for performance.</p>\n<p>Revision range: <a href=\"https://perf.rust-lang.org/?start=22e6b9c68941996daa45786b4145e6196e51f0f4&amp;end=824f900a96d752da2d882863c65f9736e5f2b347&amp;absolute=false&amp;stat=instructions%3Au\">22e6b9c68941996daa45786b4145e6196e51f0f4..824f900a96d752da2d882863c65f9736e5f2b347</a></p>\n<p>0 Regressions, 2 Improvements, 3 Mixed<br>\n1 in rollups.</p>",
        "id": 214977748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983413
    },
    {
        "content": "<h3>Regressions</h3>\n<p>Some mixed results, but no PRs with solely regressions this week.</p>",
        "id": 214977769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983419
    },
    {
        "content": "<h3>Improvements</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78077\">#78077</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1d2726726f8f3128e98191e4c6cb94bd76d0ddd4&amp;end=1eaadebb3dee31669c7649b32747381d11614fae&amp;stat=instructions:u\">instruction counts</a> (up to -9.9% on <code>incr-full</code> builds of <code>deeply-nested-async-check</code>)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77476\">#77476</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3e0dd24a6c0812eedbb02182a75c352f8a7e184a&amp;end=5171cc76c264fd46f32e140c2e460c77ca87d5e5&amp;stat=instructions:u\">instruction counts</a> (up to -6.2% on <code>incr-full</code> builds of <code>clap-rs-check</code>)</li>\n<li>Interesting case where instruction counts show major improvement across the<br>\n  board, but wall times are either a slight regression or largely unchanged<br>\n  (within noise bound).</li>\n</ul>",
        "id": 214977782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983425
    },
    {
        "content": "<h3>Mixed</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78334\">#78334</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=ffa2e7ae8fbf9badc035740db949b9dae271c29f&amp;end=f58ffc93815f76576eb56df4bdeec2fe8f12b766&amp;stat=instructions:u\">instruction counts</a> (up to -1.5% on <code>full</code> builds of <code>match-stress-enum-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ffa2e7ae8fbf9badc035740db949b9dae271c29f&amp;end=f58ffc93815f76576eb56df4bdeec2fe8f12b766&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>full</code> builds of <code>unicode_normalization-check</code>)</li>\n<li>Unclear as to causes, left nag; will folow-up in a future week.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77187\">#77187</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=0da6d42f297642a60f2640ec313b879b376b9ad8&amp;end=fd542592f08ca0d1f7255600115c2eafdf6b5da7&amp;stat=instructions:u\">instruction counts</a> (up to 2.9% on <code>full</code> builds of <code>regression-31157-debug</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=0da6d42f297642a60f2640ec313b879b376b9ad8&amp;end=fd542592f08ca0d1f7255600115c2eafdf6b5da7&amp;stat=instructions:u\">instruction counts</a> (up to -1.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>Roughly neutral (or an improvement) on wall times; and a long-desired change.<br>\n  Not proposing a revert at this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77876\">#77876</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=fd542592f08ca0d1f7255600115c2eafdf6b5da7&amp;end=a4d30a7b490065f0aa56f58e508a11546445aea9&amp;stat=instructions:u\">instruction counts</a> (up to -8.1% on <code>full</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=fd542592f08ca0d1f7255600115c2eafdf6b5da7&amp;end=a4d30a7b490065f0aa56f58e508a11546445aea9&amp;stat=instructions:u\">instruction counts</a> (up to 4.4% on <code>full</code> builds of <code>cranelift-codegen-opt</code>)</li>\n<li>Regression has unclear cause; left a nag for next week.</li>\n</ul>",
        "id": 214977817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983438
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/78334\">#78334</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77876#issuecomment-717326989\">#77876</a></li>\n</ul>",
        "id": 214977857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983452
    },
    {
        "content": "<p>Performance deltas appear to be under control</p>",
        "id": 214977978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983488
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214978007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983498
    },
    {
        "content": "<ul>\n<li>Confusing type error due to strange inferred type for a closure argument <a href=\"https://github.com/rust-lang/rust/issues/41078\">rustc#41078</a><br>\n    - Longstsanding issue since 2017, has generated many duplicates since then<br>\n    - Seems to impact more from an usability/ergonomics point of view since there are workarounds, example <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-298180037\">this comment</a> and this <a href=\"https://stackoverflow.com/questions/58773989\">Stack Overflow</a> answer<br>\n    - <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-293646723\">First comment</a> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\n    - More <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-358385901\">recent comment</a> from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span><br>\n    - <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-552064766\">Another explaination</a> from <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <br>\n    - nightly from June shows a <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-649465827\">slightly different error</a></li>\n</ul>",
        "id": 214978045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983514
    },
    {
        "content": "<p>argh we really don't have much time</p>",
        "id": 214978117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983542
    },
    {
        "content": "<p>I'm wondering if we should rotate the section order each week to avoid this problem</p>",
        "id": 214978167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983561
    },
    {
        "content": "<p>obviously some things need to be covered every week, like beta nominations</p>",
        "id": 214978189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983573
    },
    {
        "content": "<p>hmm</p>",
        "id": 214978192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983574
    },
    {
        "content": "<p>not sure</p>",
        "id": 214978241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603983594
    },
    {
        "content": "<p>(the other option is for me to \"try harder\" at sticking to schedule)</p>",
        "id": 214978244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983595
    },
    {
        "content": "<p>anyway, our hour is up</p>",
        "id": 214978314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983607
    },
    {
        "content": "<p>I did want to draw attention to this:</p>",
        "id": 214978327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983612
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>\"RFC: -C export-executable-symbols\" <a href=\"https://github.com/rust-lang/rfcs/pull/2841\">rfcs#2841</a><ul>\n<li>Submitted by <code>@MaulingMonkey</code></li>\n<li>RFC proposes adding the ability to export symbols from executables, not just dylibs, via a new compiler flag <code>-C export-executable-symbols</code></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rfcs/pull/2841#issuecomment-569852146\">has some questions</a></li>\n<li>not yet reached a consensus</li>\n</ul>\n</li>\n</ul>",
        "id": 214978339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983619
    },
    {
        "content": "<p>it came up during lang team backlog bonanza</p>",
        "id": 214978408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983643
    },
    {
        "content": "<p>but its really more appropriate for T-compiler discussion</p>",
        "id": 214978430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983649
    },
    {
        "content": "<p>(and maybe it should be an MCP  instead ?)</p>",
        "id": 214978470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983659
    },
    {
        "content": "<p>I remember writing <em>some</em> docs about adding flags...</p>",
        "id": 214978536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603983679
    },
    {
        "content": "<p>anyway, just trying to draw attention to it</p>",
        "id": 214978556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983689
    },
    {
        "content": "<p>lets call the meeting though</p>",
        "id": 214978586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983697
    },
    {
        "content": "<p>/me is realizing</p>",
        "id": 214978624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983710
    },
    {
        "content": "<p>another option for our unfilled friday meeting steering slots</p>",
        "id": 214978660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983720
    },
    {
        "content": "<p>would be to handle nominated issue backlog</p>",
        "id": 214978718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983725
    },
    {
        "content": "<p>lately agendas are very packed and we never have time for nominations</p>",
        "id": 214978796,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603983751
    },
    {
        "content": "<p>i.e. we currently only <em>rarely</em> have time to process nominated issues in the Thursday meeting</p>",
        "id": 214978807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983755
    },
    {
        "content": "<p>but at the same time, our Friday meetings have been underutilized</p>",
        "id": 214978855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983772
    },
    {
        "content": "<p>so or either we fill a different space or we could re-order the agenda, depending on the content we have</p>",
        "id": 214978874,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603983777
    },
    {
        "content": "<p>what I will do is write up a steering meeting proposal now</p>",
        "id": 214978932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983793
    },
    {
        "content": "<p>for an official \"nominated issue backlog\" as a steering meeting for the next cycle</p>",
        "id": 214978981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983813
    },
    {
        "content": "<p>that way we can make a decision about it later. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 214979017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983830
    },
    {
        "content": "<p>okay great meeting everyone! Thanks to all in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 214979295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603983923
    },
    {
        "content": "<p>have just created next week's agenda <a href=\"https://hackmd.io/tRGgaOEPSCKRNTqLFPDhxQ?both\">https://hackmd.io/tRGgaOEPSCKRNTqLFPDhxQ?both</a></p>",
        "id": 214979360,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603983949
    },
    {
        "content": "<p>next check-in turns are <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> and WG-polymorphization</p>",
        "id": 214979509,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603983990
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> for you to be aware with time :)</p>",
        "id": 214979605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603984023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I can't edit the hackmd, but there's very little of interest to report anyway. We didn't have time to do another sprint since the last WG check-in. It may not be worth it to be in the check-in rotation with so little activity.</p>",
        "id": 215567930,
        "sender_full_name": "lqd",
        "timestamp": 1604488783
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-29.20.2354818/near/215567930\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> I can't edit the hackmd, but there's very little of interest to report anyway. We didn't have time to do another sprint since the last WG check-in. It may not be worth it to be in the check-in rotation with so little activity.</p>\n</blockquote>\n<p>we can then remove it from the scheduling, no problem</p>",
        "id": 215569793,
        "sender_full_name": "apiraino",
        "timestamp": 1604490095
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-29.20.2354818/near/215567930\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> I can't edit the hackmd, but there's very little of interest to report anyway. We didn't have time to do another sprint since the last WG check-in. It may not be worth it to be in the check-in rotation with so little activity.</p>\n</blockquote>\n<p>can you or someone from the working group send a PR removing Polonius from the checkin if you decide to do so?</p>",
        "id": 215570844,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1604490938
    },
    {
        "content": "<p>sure</p>",
        "id": 215578888,
        "sender_full_name": "lqd",
        "timestamp": 1604496178
    }
]