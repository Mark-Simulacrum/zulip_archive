[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/PPMtXP7hSqmyqD30CUw_cQ?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span>  by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> : anything to share?</li>\n<li>@WG-polymorphization checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  : anything to share?</li>\n</ul>",
        "id": 268688597,
        "sender_full_name": "apiraino",
        "timestamp": 1642684072
    },
    {
        "content": "<p>wg-polymorphization isn't doing too much rn, I am still - since 2 updates ago iirc - working on a change which should fix the remaining blocker to reenable it and have to fix some last remaining issues, and then do a lot of perf work. I think that <a href=\"https://github.com/rust-lang/rust/issues/89514\">#89514</a> is the last polymorphization pr that's gotten merged</p>",
        "id": 268691733,
        "sender_full_name": "lcnr",
        "timestamp": 1642685556
    },
    {
        "content": "<p>also, made a <span class=\"user-group-mention silent\" data-user-group-id=\"5288\">WG-polymorphization</span> notification group rn</p>",
        "id": 268692026,
        "sender_full_name": "lcnr",
        "timestamp": 1642685707
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; our weekly triage meeting is starting now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 268704536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642690908
    },
    {
        "content": "<p>Let’s start off with five minutes for </p>\n<h2>Announcements</h2>",
        "id": 268704658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642690944
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 268704674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642690951
    },
    {
        "content": "<ul>\n<li>New template for rustc targets (see <a href=\"https://github.com/rust-lang/rust/pull/90498\">rust#90498</a>), new targets should use this to document their requirements.</li>\n</ul>",
        "id": 268704692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642690956
    },
    {
        "content": "<p>Anouncement: <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> opened a PR for amending the symbol mangling RFC: <a href=\"https://github.com/rust-lang/rfcs/pull/3224\">https://github.com/rust-lang/rfcs/pull/3224</a></p>",
        "id": 268704881,
        "sender_full_name": "mw",
        "timestamp": 1642691027
    },
    {
        "content": "<p>( ^ this entry  from <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> )</p>",
        "id": 268704883,
        "sender_full_name": "apiraino",
        "timestamp": 1642691028
    },
    {
        "content": "<p>The PR allows for having \"vendor specific suffixes\" at the end of a symbol</p>",
        "id": 268705009,
        "sender_full_name": "mw",
        "timestamp": 1642691063
    },
    {
        "content": "<ul>\n<li>I’ve heard from various leaders, such as <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> , that there are companies who want to help Rust and need guidance; we think teams like T-compiler may benefit greatly this year in particular from publishing a roadmap that explicitly calls out areas where help is desired.</li>\n</ul>",
        "id": 268705011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691064
    },
    {
        "content": "<p>oh boy can I do that</p>",
        "id": 268705093,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642691092
    },
    {
        "content": "<p>So I’m hoping that we can collabaritively put together a roadmap in the next two to three weeks.</p>",
        "id": 268705100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691096
    },
    {
        "content": "<p>In fact, lets make a Zulip stream now dedicated to that, yeah?</p>",
        "id": 268705166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691115
    },
    {
        "content": "<p>Okay, I made <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/roadmap.20for.202022.20discussion\">#t-compiler &gt; roadmap for 2022 discussion</a> dedicated to that</p>",
        "id": 268705342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691176
    },
    {
        "content": "<p>next up</p>",
        "id": 268705425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691210
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 268705445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691214
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a></li>\n</ul>\n</li>\n</ul>",
        "id": 268705455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691220
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 6 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 3 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: about 41 days ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: about 41 days ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: about 23 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 268705477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691228
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 268705507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691239
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> </li>\n<li>\"Adding known bugs to test cases\" <a href=\"https://github.com/rust-lang/compiler-team/issues/476\">compiler-team#476</a> </li>\n<li>\"Introduce a new linter for diagnostic meesages\" <a href=\"https://github.com/rust-lang/compiler-team/issues/478\">compiler-team#478</a> </li>\n<li>\"Change location of where clause on GATs\" <a href=\"https://github.com/rust-lang/rust/pull/90076\">rust#90076</a> </li>\n<li>\"Stabilize <code>-Z instrument-coverage</code> as <code>-C instrument-coverage</code>\" <a href=\"https://github.com/rust-lang/rust/pull/90132\">rust#90132</a> </li>\n<li>\"Stabilize <code>-Z print-link-args</code> as <code>--print link-args</code>\" <a href=\"https://github.com/rust-lang/rust/pull/91606\">rust#91606</a></li>\n</ul>\n</li>\n</ul>",
        "id": 268705543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691253
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 268705573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691262
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>No new finished FCP (disposition merge) this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 268705597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691270
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 268705701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691297
    },
    {
        "content": "<p><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span> by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (<a href=\"https://hackmd.io/kDUJQbY8SGqPMTTecCl9hg#WG-checkins\">previous checkin</a>)</p>\n<ul>\n<li>We may finally have a fix for the <code>early_otherwise_branch</code> mir optimization. [rust#91840]</li>\n<li>We now have much better infrastructure for ordering and managing all our mir opts [rust#91475]</li>\n</ul>",
        "id": 268705725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691303
    },
    {
        "content": "<p>@_WG-polymorphization_ checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://hackmd.io/kDUJQbY8SGqPMTTecCl9hg#WG-checkins\">previous checkin</a>)</p>\n<blockquote>\n<p>from <span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span>: wg-polymorphization isn't doing too much rn, I am still - since 2 updates ago iirc - working on a change which should fix the remaining blocker to reenable it and have to fix some last remaining issues, and then do a lot of perf work. I think that <a href=\"https://github.com/rust-lang/rust/pull/89514\">rust#89514</a> is the last polymorphization pr that's gotten merged</p>\n</blockquote>",
        "id": 268705740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691311
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 268705767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691324
    },
    {
        "content": "<p>Seems like a few MCPs should be changed rom FCP -&gt; accepted?</p>",
        "id": 268705772,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642691326
    },
    {
        "content": "<p>(assuming it's still 10 days?)</p>",
        "id": 268705794,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642691336
    },
    {
        "content": "<p>lets see</p>",
        "id": 268705802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691339
    },
    {
        "content": "<p>439, 476</p>",
        "id": 268705836,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642691353
    },
    {
        "content": "<p>(at least)</p>",
        "id": 268705838,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642691357
    },
    {
        "content": "<p>yes <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is right</p>",
        "id": 268705853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691363
    },
    {
        "content": "<p>I will take an action item to go through the list and do that</p>",
        "id": 268705877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691372
    },
    {
        "content": "<p>ugh I just realized I don’t think I’ve looked at my action items list since … December 2021...</p>",
        "id": 268705994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691412
    },
    {
        "content": "<p>(I can close those that have passed the mark of 10 days)</p>",
        "id": 268706034,
        "sender_full_name": "apiraino",
        "timestamp": 1642691431
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> thanks</p>",
        "id": 268706058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691446
    },
    {
        "content": "<p>my bad that I missed the updates (probably)</p>",
        "id": 268706093,
        "sender_full_name": "apiraino",
        "timestamp": 1642691461
    },
    {
        "content": "<p>it arguably shouldn’t be a manual thing</p>",
        "id": 268706119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691474
    },
    {
        "content": "<p>I need to get better about pushing to automate more stuff</p>",
        "id": 268706172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691493
    },
    {
        "content": "<p>/me says this while still driving the meeting manually rather than with a meeting-bot</p>",
        "id": 268706214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691511
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Revert \"Do not hash leading zero bytes of i64 numbers in Sip128 hasher\"\" <a href=\"https://github.com/rust-lang/rust/pull/93014\">rust#93014</a> <ul>\n<li>PR reverts <a href=\"https://github.com/rust-lang/rust/pull/92103\">92103</a></li>\n<li>not yet merged</li>\n<li>reviewer <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> nominated for backport</li>\n<li>mentions that perf regressions are expected and triaged (see <a href=\"https://github.com/rust-lang/rust/pull/93014#issuecomment-1014867654\">comment</a>) and that should a fairly low impact backport</li>\n</ul>\n</li>\n</ul>",
        "id": 268706271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691523
    },
    {
        "content": "<p>I think backport definitely seems good here</p>",
        "id": 268706537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691628
    },
    {
        "content": "<p>the examples that are provided on PR <a href=\"https://github.com/rust-lang/rust/issues/92103\">#92103</a> of where the change introduces hash-collisions, can those be adapted into concrete tests of some form?</p>",
        "id": 268706663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691660
    },
    {
        "content": "<p>That sounds like an awesome idea!</p>",
        "id": 268706769,
        "sender_full_name": "mw",
        "timestamp": 1642691694
    },
    {
        "content": "<p>should be trivial to add unit tests for that</p>",
        "id": 268706807,
        "sender_full_name": "mw",
        "timestamp": 1642691707
    },
    {
        "content": "<p>Can someone own looking into that? <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> ?</p>",
        "id": 268706859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691724
    },
    {
        "content": "<p>I’ll write a comment on the ticket suggesting this</p>",
        "id": 268706917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691746
    },
    {
        "content": "<p>anyway backport approved</p>",
        "id": 268707001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691769
    },
    {
        "content": "<p>If <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> doesn't want to own it, I can</p>",
        "id": 268707053,
        "sender_full_name": "mw",
        "timestamp": 1642691790
    },
    {
        "content": "<p>okay, thanks <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 268707212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691853
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I also wrote a comment about the whole “stable hash collision” guarantee, versus pigeon-hole principle. At some point I might want to talk to you more about what “reality” is here. :)</p>",
        "id": 268707606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691981
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 268707654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642691997
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 268707720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692005
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix rust logo style\" <a href=\"https://github.com/rust-lang/rust/pull/92764\">rust#92764</a> <ul>\n<li>a nice fix for the Rust logo when setting a dark theme</li>\n</ul>\n</li>\n</ul>",
        "id": 268707747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692014
    },
    {
        "content": "<p>heh</p>",
        "id": 268707813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692034
    },
    {
        "content": "<p>that is indeed pretty broken</p>",
        "id": 268707833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692040
    },
    {
        "content": "<p>(my initial reaction was “surely this isnt worth a backport”, and then I looked at the picture.)</p>",
        "id": 268707911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692072
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"rustdoc: fix intra-link for generic trait impls\" <a href=\"https://github.com/rust-lang/rust/pull/92792\">rust#92792</a><ul>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/issues/92662\">rust#92662</a> a <code>P-high</code> regression that breaks compiling documentation</li>\n<li>no concerns, seems fine for backport</li>\n</ul>\n</li>\n</ul>",
        "id": 268708135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692144
    },
    {
        "content": "<p>oh, whoops. Backport approved, I think, for <a href=\"https://github.com/rust-lang/rust/issues/92764\">#92764</a></p>",
        "id": 268708246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692181
    },
    {
        "content": "<p>/me is thinking about the code in <a href=\"https://github.com/rust-lang/rust/issues/92792\">#92792</a></p>",
        "id": 268708602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692311
    },
    {
        "content": "<p>Anyway I guess this is fine. (I was wondering if there might be other analogous problems that would invalidate the fast path there.)</p>",
        "id": 268708842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692402
    },
    {
        "content": "<p>backport approved.</p>",
        "id": 268708866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692410
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 268708950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692448
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 268708961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692454
    },
    {
        "content": "<ul>\n<li>\"Stabilize <code>-Z print-link-args</code> as <code>--print link-args</code>\" <a href=\"https://github.com/rust-lang/rust/pull/91606\">rust#91606</a> <ul>\n<li>Entered last week in <code>final-comment-period</code></li>\n<li>Can <code>S-waiting-on-team</code> label be removed now?</li>\n</ul>\n</li>\n</ul>",
        "id": 268708980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692460
    },
    {
        "content": "<p>yes lets remove that tag</p>",
        "id": 268709080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692484
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 268709416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692590
    },
    {
        "content": "<ul>\n<li>\"Automatically implement AsRepr and allow deriving FromRepr for fieldless enums\" <a href=\"https://github.com/rust-lang/rust/pull/81642\">rust#81642</a> (last review activity: 3 months ago)<ul>\n<li>assigned to @<strong>estebank</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 268709441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692597
    },
    {
        "content": "<p>the lang team has been having discussions related to this</p>",
        "id": 268709592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692636
    },
    {
        "content": "<p>maybe change to waiting-on-team then? for t-lang? or blocked</p>",
        "id": 268709682,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642692671
    },
    {
        "content": "<p>and I’m not sure it belongs in <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ’s review queue</p>",
        "id": 268709689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692674
    },
    {
        "content": "<p>I noticed this comment was mentioning that it could be ready for review<br>\n<a href=\"https://github.com/rust-lang/rust/pull/81642#issuecomment-988178978\">https://github.com/rust-lang/rust/pull/81642#issuecomment-988178978</a></p>",
        "id": 268709750,
        "sender_full_name": "apiraino",
        "timestamp": 1642692699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> yeah but I think there’s been concurrent work since then</p>",
        "id": 268709850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692727
    },
    {
        "content": "<p>I’m not sure if it invalidates this work or not</p>",
        "id": 268709867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692735
    },
    {
        "content": "<p>I see that it was bot-assigned to <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> so maybe remove him and leave the pr unassigned ?</p>",
        "id": 268710214,
        "sender_full_name": "apiraino",
        "timestamp": 1642692873
    },
    {
        "content": "<p>just to avoid annoying <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> with pings :)</p>",
        "id": 268710258,
        "sender_full_name": "apiraino",
        "timestamp": 1642692901
    },
    {
        "content": "<p>yeah okay</p>",
        "id": 268710390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642692949
    },
    {
        "content": "<ul>\n<li>\"Support #[global_allocator] without the allocator shim\" <a href=\"https://github.com/rust-lang/rust/pull/86844\">rust#86844</a> (last review activity: 2 months ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned</li>\n</ul>\n</li>\n</ul>",
        "id": 268710568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693009
    },
    {
        "content": "<p>oy I’ve totally let ball fall on this</p>",
        "id": 268710622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693032
    },
    {
        "content": "<p>I do want to look at it though. I think it still makes sense assigned to me. I’ll throw it on my action items list that, you know, I’m going to actually look at this week.</p>",
        "id": 268710698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693069
    },
    {
        "content": "<ul>\n<li>\"make memcmp return a value of c_int_width instead of i32\" <a href=\"https://github.com/rust-lang/rust/pull/90791\">rust#90791</a> (last activity: 24 days ago)<ul>\n<li>assigned to @<strong>joshtriplett</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 268710804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693095
    },
    {
        "content": "<p>hmm. Maybe we should reassign this</p>",
        "id": 268710907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> do you want us to reassign PR <a href=\"https://github.com/rust-lang/rust/issues/90791\">#90791</a> to someone else?</p>",
        "id": 268710954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693157
    },
    {
        "content": "<p>having said that, lets keep moving</p>",
        "id": 268710966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693164
    },
    {
        "content": "<ul>\n<li>\"Fix variant index / discriminant confusion in uninhabited enum branching\" <a href=\"https://github.com/rust-lang/rust/pull/89764\">rust#89764</a> (last review activity: 2 months ago)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, also reviewed from <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span></li>\n</ul>\n</li>\n</ul>",
        "id": 268710987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693173
    },
    {
        "content": "<p>I r+'d this morning <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 268711016,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1642693185
    },
    {
        "content": "<ul>\n<li>\"remove some indirection from proc_macro_server\" <a href=\"https://github.com/rust-lang/rust/pull/90876\">rust#90876</a> (last review activity: 2 months ago)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>perf improvements are the goal for this PR, results <a href=\"https://github.com/rust-lang/rust/pull/90876#issuecomment-971479243\">are mixed</a>, is the author waiting for a feedback?</li>\n</ul>\n</li>\n</ul>",
        "id": 268711107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693211
    },
    {
        "content": "<p>for context: this was trying to fix performance regressions injected by PR <a href=\"https://github.com/rust-lang/rust/issues/87264\">#87264</a></p>",
        "id": 268711278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693286
    },
    {
        "content": "<p>namely</p>\n<blockquote>\n<p>Very large regression in instruction counts (up to 5.3% on incr-unchanged builds of inflate)</p>\n</blockquote>",
        "id": 268711287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693291
    },
    {
        "content": "<p>the most recent version of this PR doesn’t really address that regression</p>",
        "id": 268711432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693338
    },
    {
        "content": "<p>the results seem mixed at best overall</p>",
        "id": 268711565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693387
    },
    {
        "content": "<p>the changes themselves are “trivial” (two <code>#[inline]</code> annotations)</p>",
        "id": 268711696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693433
    },
    {
        "content": "<p>but I’m not sure whether I want to encourage random introduction of <code>#[inline]</code>, especially if it doesn’t yield a clear win...</p>",
        "id": 268711797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693456
    },
    {
        "content": "<p>then again, the methods that the attribute is being added to are truly trivial, so <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 268711860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693480
    },
    {
        "content": "<p>hmm... I should triage everything assigned to me I guess XD</p>",
        "id": 268711952,
        "sender_full_name": "oli",
        "timestamp": 1642693522
    },
    {
        "content": "<p>there’s no rush on this <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 268711986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693535
    },
    {
        "content": "<p>I’d say its reasonable that you let this sit on a low priority burner.</p>",
        "id": 268712039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693557
    },
    {
        "content": "<p>anyway, I don’t object to the <code>#[inline]</code> in this case, I guess. I would be curious to know whether LLVM (and/or rustc itself) are <em>allowed</em> to inline such trivial methods</p>",
        "id": 268712157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693589
    },
    {
        "content": "<p>without <code>#[inline]</code> in the first place</p>",
        "id": 268712174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693595
    },
    {
        "content": "<p>(I wouldn’t not be shocked to learn if such a transformation were <em>not</em> allowed by LLVM.)</p>",
        "id": 268712329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693658
    },
    {
        "content": "<p>tbh I would <em>hope</em> that it's allowed</p>",
        "id": 268712367,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642693676
    },
    {
        "content": "<p>Its mostly a question to me about whether one wants the default to be “each function gets its own definition, and that definition+calls to it are preserved in the absence of <code>#[inline]</code>\"</p>",
        "id": 268712475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693710
    },
    {
        "content": "<p>(in order to enable trickery like modifying the object code after compilation has finished.)</p>",
        "id": 268712523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693734
    },
    {
        "content": "<p>at the same time, I also would hope that the default for rustc itself would indeed be to <strong>allow</strong> such automatic inlining.</p>",
        "id": 268712599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693770
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">79 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">52 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 0 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">3 P-critical, 51 P-high, 81 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 268712634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693786
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Miscompilation in unoptimized builds on aarch64 with 1.57.0\" <a href=\"https://github.com/rust-lang/rust/issues/92786\">rust#92786</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock (Saethlin)</span></li>\n<li><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> filed the issue on LLVM (<a href=\"https://github.com/llvm/llvm-project/issues/53162\">https://github.com/llvm/llvm-project/issues/53162</a>)</li>\n<li>Opened PR <a href=\"https://github.com/rust-lang/rust/pull/93081\">rust#93081</a> with the LLVM patch</li>\n</ul>\n</li>\n</ul>",
        "id": 268712663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693795
    },
    {
        "content": "<p>sounds under control</p>",
        "id": 268712744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693816
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 268712755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693820
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 268712763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693826
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 268712774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693833
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-18.md\">triage logs</a></p>\n</blockquote>\n<p>Quiet week for regular rustc performance; incremental builds<br>\n(particularly ones with little recompilation to do) saw an average 1.5%<br>\nimprovement. rustdoc also saw several notable optimizations land which improve<br>\nperformance, particularly on larger benchmarks.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=72e74d7b9cf1a7901650227e74650f1fcc797600&amp;end=7bc7be860f99f4a40d45b0f74e2d01b02e072357&amp;absolute=false&amp;stat=instructions%3Au\">72e74d7b9cf1a7901650227e74650f1fcc797600..7bc7be860f99f4a40d45b0f74e2d01b02e072357</a></p>\n<p>3 Regressions, 5 Improvements, 2 Mixed; 2 of them in rollups<br>\n30 comparisons made in total</p>",
        "id": 268712789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693840
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/92844\">#92844</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=22e491ac7ed454d34669151a8b6464cb643c9b41&amp;end=f312a5e610d47601e9a3da828002f5e1ffeb272a&amp;stat=instructions:u\">instruction counts</a> (up to 8.2% on <code>full</code> builds of <code>keccak check</code>)</li>\n<li>Unknown cause, though suspected to be <a href=\"https://github.com/rust-lang/rust/pull/92006\">#92006</a>.<br>\n  This may also be due to sensitivity in keccak and similar benchmarks to<br>\n  a particularly hot loop in the compiler, which sometimes is less nicely<br>\n  compiled by LLVM. (See <a href=\"https://github.com/rust-lang/rust/pull/92816#issuecomment-1014938273\">#92816 (comment)</a><br>\n  for details).</li>\n</ul>\n<p>Add {Add,Sub,Mul,Div,Rem,BitXor,BitOr,BitAnd}{,Assign}&lt;$t&gt; to Saturat… <a href=\"https://github.com/rust-lang/rust/issues/92356\">#92356</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a0984b4e4c908d714cebd0f0786c00645ea4d79a&amp;end=26c06cf8e27e5fa06b4894f14588c187510bae47&amp;stat=instructions:u\">instruction counts</a> (up to 2.8% on <code>full</code> builds of <code>helloworld doc</code>)</li>\n<li>Expected regression in documentation builds; there's just more to document.</li>\n</ul>\n<p>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/92970\">#92970</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=48e89b00caa94829a5f07e0f1ecb33bf37431244&amp;end=bd3cb52565faab2755ff1bdb54d88bc91f47b4b9&amp;stat=instructions:u\">instruction counts</a> (up to 0.9% on <code>incr-unchanged</code> builds of <code>externs opt</code>)</li>\n<li>Unclear cause, but regression is relatively small and limited to just one<br>\n  benchmark.</li>\n</ul>",
        "id": 268712811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693851
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Migrate rustdoc from Tera to Askama <a href=\"https://github.com/rust-lang/rust/issues/92526\">#92526</a></li>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=124555a69e5f65173ec7840000eb8e953d046740&amp;end=e916815d21e37af5cd85f9eb67cda155d7129fff&amp;stat=instructions:u\">instruction counts</a> (up to -30.7% on <code>full</code> builds of <code>externs doc</code>)<ul>\n<li>Major improvement in instruction counts for rustdoc; a less significant win on wall time for most benchmarks, though particularly heavy ones (e.g., stm32f4) do see a sizeable improvement of around 10% less wall time.</li>\n</ul>\n</li>\n<li>Introduce new <code>TaskDepsRef</code> enum to track allow/ignore/forbid status <a href=\"https://github.com/rust-lang/rust/issues/92681\">#92681</a></li>\n<li>rustdoc: avoid many <code>Symbol</code> to <code>String</code> conversions. <a href=\"https://github.com/rust-lang/rust/issues/91948\">#91948</a></li>\n<li>Optimize <code>impl_read_unsigned_leb128</code> <a href=\"https://github.com/rust-lang/rust/issues/92604\">#92604</a></li>\n<li>Reduce use of LocalDefId &lt;-&gt; HirId maps <a href=\"https://github.com/rust-lang/rust/issues/90146\">#90146</a></li>\n<li>rustc_metadata: Switch all decoder methods from vectors to iterators <a href=\"https://github.com/rust-lang/rust/issues/92245\">#92245</a></li>\n</ul>",
        "id": 268712825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693859
    },
    {
        "content": "<h4>Mixed</h4>\n<p>partially revertish <code>lazily \"compute\" anon const default substs</code> <a href=\"https://github.com/rust-lang/rust/issues/92805\">#92805</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=42852d7857d2955f19ec333bec1ed107964db200&amp;end=7be8693984d32d2f65ce9ded4f65b6b7340bddce&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>full</code> builds of <code>deeply-nested-async check</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=42852d7857d2955f19ec333bec1ed107964db200&amp;end=7be8693984d32d2f65ce9ded4f65b6b7340bddce&amp;stat=instructions:u\">instruction counts</a> (up to 0.9% on <code>incr-unchanged</code> builds of <code>clap-rs check</code>)</li>\n</ul>\n<p>Remove deprecated LLVM-style inline assembly <a href=\"https://github.com/rust-lang/rust/issues/92816\">#92816</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=128417f40f80ce585414bf5a017540447e6be775&amp;end=a34c0797528172ede89480e3033f7a5e71ea4735&amp;stat=instructions:u\">instruction counts</a> (up to -7.5% on <code>full</code> builds of <code>keccak check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=128417f40f80ce585414bf5a017540447e6be775&amp;end=a34c0797528172ede89480e3033f7a5e71ea4735&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4 check</code>)</li>\n</ul>",
        "id": 268712840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693866
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 268712960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693917
    },
    {
        "content": "<p>and that’s the agenda!</p>",
        "id": 268713023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693927
    },
    {
        "content": "<p>I am once again asking everyone to contribute to the 2022 roadmap conversation, <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/roadmap.20for.202022.20discussion\">#t-compiler &gt; roadmap for 2022 discussion</a></p>",
        "id": 268713155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642693981
    },
    {
        "content": "<p>and also, I’m working on a categorization of the P-high issues, see <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/reviewing.20P-high.20issues\">#t-compiler &gt; reviewing P-high issues</a></p>",
        "id": 268713233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694021
    },
    {
        "content": "<p>but you all can take 7 minutes of your life back now! Thanks for a great meeting, y’all!</p>",
        "id": 268713272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694040
    },
    {
        "content": "<blockquote>\n<p>Very large regression in instruction counts (up to 8.2% on full builds of keccak check)</p>\n</blockquote>\n<p>I don't see it, but this regression was basically reverted in a completely unrelated PR following</p>",
        "id": 268713345,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-20.20.2354818/near/268706859\">said</a>:</p>\n<blockquote>\n<p>Can someone own looking into that? <span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> ?</p>\n</blockquote>\n<p>Ok. Shouldn't be too hard.</p>",
        "id": 268713352,
        "sender_full_name": "The 8472",
        "timestamp": 1642694063
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/92816#issuecomment-1014622801\">https://github.com/rust-lang/rust/pull/92816#issuecomment-1014622801</a></p>",
        "id": 268713499,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694133
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> , while you’re here: Is there still a wg-traits?</p>",
        "id": 268713689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694191
    },
    {
        "content": "<p>how dormant/active is it?</p>",
        "id": 268713709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694201
    },
    {
        "content": "<p>yes</p>",
        "id": 268713873,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694267
    },
    {
        "content": "<p>Not dormant</p>",
        "id": 268713915,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694283
    },
    {
        "content": "<p>Very active</p>",
        "id": 268713956,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694285
    },
    {
        "content": "<p>Just most of the things we do are split into projects</p>",
        "id": 268713988,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694296
    },
    {
        "content": "<p>Though I think both <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and I both want to do some wg planning</p>",
        "id": 268714046,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694319
    },
    {
        "content": "<p>Okay, yes, I see now that <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> is indeed very active. I should skim over those topics.</p>",
        "id": 268714160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694365
    },
    {
        "content": "<p>thanks</p>",
        "id": 268714170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642694369
    },
    {
        "content": "<p>I will admit that as a <em>whole</em>, we haven't been super organized (even though for individual things I think we've been pretty good)</p>",
        "id": 268715683,
        "sender_full_name": "Jack Huey",
        "timestamp": 1642694852
    },
    {
        "content": "<p>Draft for next weeks' agenda available at:<br>\n<a href=\"https://hackmd.io/PptGbL8US52Ct07t6vuB5A?view\">https://hackmd.io/PptGbL8US52Ct07t6vuB5A?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1123\">WG-self-profile</span>  by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 268720086,
        "sender_full_name": "apiraino",
        "timestamp": 1642696602
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I reassigned the memcmp type PR to a random compiler team member.</p>",
        "id": 268744667,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1642706850
    },
    {
        "content": "<p>okay, great. Thanks <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></p>",
        "id": 268770673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642719661
    }
]