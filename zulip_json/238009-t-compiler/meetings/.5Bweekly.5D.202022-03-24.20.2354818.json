[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 1h40<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/43XK8_4NROi5sowR1Qb35Q?view\">meeting agenda</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span> (impl trait) by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1176\">WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  and <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span></li>\n</ul>",
        "id": 276466736,
        "sender_full_name": "apiraino",
        "timestamp": 1648124374
    },
    {
        "content": "<p>Note: today the agenda is slightly lighter so I've stuffed a bit more old PRs waiting for review (but feel free to skip some :) )</p>",
        "id": 276466800,
        "sender_full_name": "apiraino",
        "timestamp": 1648124403
    },
    {
        "content": "<p>Also cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> re impl trait</p>",
        "id": 276468165,
        "sender_full_name": "Jack Huey",
        "timestamp": 1648125233
    },
    {
        "content": "<p>From the LLVM side (though possibly I'm du):</p>\n<ul>\n<li>Rust (including the beta branch) is on LLVM 14 now. I don't think we had any interesting problems with this release.</li>\n<li>The large increases in compile-time with the new pass manager due to catastrophic inlining have been fixed (part of the final LLVM 14 release).</li>\n<li>noundef metadata is now applied to loads as well (for types with invalid values -- the larger question of whether we can make everything apart from MaybeUninit undef remains open)</li>\n<li>I'm mostly doing opaque pointers work upstream, and we're close to enabling them by default. <a href=\"https://github.com/rust-lang/rust/pull/94214#issuecomment-1051946207\">https://github.com/rust-lang/rust/pull/94214#issuecomment-1051946207</a> has some promising initial numbers for rust + opaque pointers.</li>\n<li>The allocalign attribute has landed, but the allocator attribute patches are still outstanding. Once everything is in place we can switch rust allocator functions to use the new attributes and drop the LLVM patch we carry for this.</li>\n</ul>",
        "id": 276474110,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1648127987
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for the weekly triage meeting. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here!</p>",
        "id": 276479390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130542
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for preparing this week's <a href=\"https://hackmd.io/43XK8_4NROi5sowR1Qb35Q?view\">agenda</a></p>",
        "id": 276479463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130577
    },
    {
        "content": "<p>First, ~5 minutes for</p>\n<h2>Announcements</h2>",
        "id": 276479513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130606
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-03-25T14:00:00Z\">2022-03-25T10:00:00-04:00</time> Meeting formal methods + stable MIR <a href=\"https://calendar.google.com/calendar/event?eid=M2VuZDZoN3VodHFxczk2Ymt2YjM3YTdlamQgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;ctz=GMT+01:00\">meeting link</a><ul>\n<li>See issues <a href=\"https://github.com/rust-lang/compiler-team/issues/488\">compiler-team#488</a> and <a href=\"https://github.com/rust-lang/compiler-team/issues/498\">compiler-team#498</a></li>\n</ul>\n</li>\n</ul>",
        "id": 276479522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130608
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 276479541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130617
    },
    {
        "content": "<ul>\n<li>also, next week is the steering meeting on incr-comp robustness. I noticed that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> has been trying to drive forward some conversation in <a class=\"stream-topic\" data-stream-id=\"241847\" href=\"/#narrow/stream/241847-t-compiler.2Fwg-incr-comp/topic/prep.20for.20compiler-team.23490\">#t-compiler/wg-incr-comp &gt; prep for compiler-team#490</a> ; thanks for that, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></li>\n</ul>",
        "id": 276479701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130680
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 276479899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130766
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 8 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 5 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: 3 months ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: 3 months ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: 2 months ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: 2 months ago)</li>\n<li>\"Removing codegen logic for <code>nvptx-nvidia-cuda</code> (32-bit target)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/496\">compiler-team#496</a> (last review activity: about 6 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 276479914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130776
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for Consistent no-prelude attribute (RFC 501)\" <a href=\"https://github.com/rust-lang/rust/issues/20561#issuecomment-1059258740\">rust#20561</a></li>\n</ul>\n</li>\n</ul>",
        "id": 276479927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130784
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Implement <code>Clone</code> for generators\" <a href=\"https://github.com/rust-lang/compiler-team/issues/494\">compiler-team#494</a> </li>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a></li>\n</ul>\n</li>\n</ul>",
        "id": 276479942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130794
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Increase the minimum linux-gnu versions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/493\">compiler-team#493</a></li>\n</ul>\n</li>\n</ul>",
        "id": 276479950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130801
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking issue for <code>const extern fn</code> and <code>const unsafe extern fn</code>\" <a href=\"https://github.com/rust-lang/rust/issues/64926\">rust#64926</a> </li>\n<li>\"Always evaluate all cfg predicate in all() and any()\" <a href=\"https://github.com/rust-lang/rust/pull/94295\">rust#94295</a></li>\n</ul>\n</li>\n</ul>",
        "id": 276479965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130807
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 276479987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130820
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1176\">WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> (<a href=\"https://hackmd.io/MDQRCqHWSCG1HuHgHC847g#WG-checkins\">previous checkin</a>):<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"133224\">Nikita Popov</span> writes: From the LLVM side (though possibly I'm du):\n* Rust (including the beta branch) is on LLVM 14 now. I don't think we had any interesting problems with this release.\n* The large increases in compile-time with the new pass manager due to catastrophic inlining have been fixed (part of the final LLVM 14 release).\n* noundef metadata is now applied to loads as well (for types with invalid values -- the larger question of whether we can make everything apart from MaybeUninit undef remains open)\n* I'm mostly doing opaque pointers work upstream, and we're close to enabling them by default. <a href=\"https://github.com/rust-lang/rust/pull/94214#issuecomment-1051946207\">https://github.com/rust-lang/rust/pull/94214#issuecomment-1051946207</a> has some promising initial numbers for rust + opaque pointers.\n* The allocalign attribute has landed, but the allocator attribute patches are still outstanding. Once everything is in place we can switch rust allocator functions to use the new attributes and drop the LLVM patch we carry for this.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 276480024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> if you have anything to add re wg-traits, feel free to chime in now. Otherwise, you can post it at the end of the meeting.</p>",
        "id": 276480101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130873
    },
    {
        "content": "<p>I will note that the lang team had an interesting discussion about impl Trait in return position on dyn Traits</p>",
        "id": 276480203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/213817-t-lang/topic/Design.20meeting.202022-03-23.3A.20RPITIDT/near/276366921\">said</a>:</p>\n<blockquote>\n<p>Hey folks, here is the document to read:</p>\n<p><a href=\"https://hackmd.io/gWX7au8sQpG7i0kAUVDKFw?view\">https://hackmd.io/gWX7au8sQpG7i0kAUVDKFw?view</a></p>\n</blockquote>",
        "id": 276480360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648130979
    },
    {
        "content": "<p>having said that, lets move on to</p>\n<h2>Backport nominations</h2>",
        "id": 276480475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131021
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 276480481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131025
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"relax <code>suspicious_auto_trait_impls</code> lint wrt lifetimes\" <a href=\"https://github.com/rust-lang/rust/pull/94925\">rust#94925</a> <ul>\n<li>PR authored by <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span>, (pr is merged)</li>\n<li>fixes a warning caused by <a href=\"https://github.com/rust-lang/rust/issues/84857\">rust#84857</a></li>\n<li>nominated by @_lcnr to remove all warnings before <a href=\"https://github.com/rust-lang/rust/issues/93367\">rust#93367</a> lands on stable (<a href=\"https://github.com/rust-lang/rust/pull/94925#issuecomment-1066490399\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 276480502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131037
    },
    {
        "content": "<blockquote>\n<p>to remove all warnings</p>\n</blockquote>\n<p>all incorrect warnings <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 276480553,
        "sender_full_name": "lcnr",
        "timestamp": 1648131062
    },
    {
        "content": "<p>sorry! :D <br>\nthanks</p>",
        "id": 276480588,
        "sender_full_name": "apiraino",
        "timestamp": 1648131080
    },
    {
        "content": "<p>I did wonder about that. Thanks for the clarification, <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span></p>",
        "id": 276480605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131091
    },
    {
        "content": "<p>seems like an easy backport approve. Lets approve and move along.</p>",
        "id": 276480767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131147
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 276480786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131156
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 276480798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131162
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on t-compiler</li>\n</ul>",
        "id": 276480808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131167
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 276480816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131173
    },
    {
        "content": "<ul>\n<li>\"Fix stack overflows when compiling high-<code>recursion_limit</code> programs\" <a href=\"https://github.com/rust-lang/rust/pull/93056\">rust#93056</a> (last review activity: 2 months ago)<ul>\n<li>PR author has been keeping up with upstream changes</li>\n<li>Seems a reviewer is needed</li>\n</ul>\n</li>\n</ul>",
        "id": 276480828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131181
    },
    {
        "content": "<p>/me almost falls into trap of trying to review the PR during the meeting itself</p>",
        "id": 276481008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131252
    },
    {
        "content": "<p>so lets see, the first question is: Are we sure we want this? I think we probably do. Or at least, its this, or introduce limits on what values we allow for <code>recursion_limit</code></p>",
        "id": 276481087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131296
    },
    {
        "content": "<p>Assuming we want this, do we know someone who wants it enough to invest time in reviewing it?</p>",
        "id": 276481139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131322
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"429617\">@LegionMammal978</span> has asked me about this via email...</p>",
        "id": 276481142,
        "sender_full_name": "mw",
        "timestamp": 1648131322
    },
    {
        "content": "<p>I suggested moving the discussion to Zulip but then didn't hear back from them</p>",
        "id": 276481189,
        "sender_full_name": "mw",
        "timestamp": 1648131342
    },
    {
        "content": "<p>I'll reach out to them again</p>",
        "id": 276481219,
        "sender_full_name": "mw",
        "timestamp": 1648131361
    },
    {
        "content": "<p>they've clearly been active, though</p>",
        "id": 276481247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131362
    },
    {
        "content": "<p>Okay, thanks <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 276481261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131367
    },
    {
        "content": "<p>I'm guessing you don't want to end up having to review this though</p>",
        "id": 276481322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131391
    },
    {
        "content": "<p>the PR... it doesn't have any tests?</p>",
        "id": 276481451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131438
    },
    {
        "content": "<p>that seems like a red flag</p>",
        "id": 276481473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131447
    },
    {
        "content": "<p>You can assign it to me</p>",
        "id": 276481595,
        "sender_full_name": "mw",
        "timestamp": 1648131495
    },
    {
        "content": "<p>anyway, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, you reach out. I do worry about not having any reviewer assigned. Its not good for a PR to just it there, with an author actively rebasing it</p>",
        "id": 276481599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131496
    },
    {
        "content": "<p>Seems like it should at least use the program the author mentioned as a test case?</p>",
        "id": 276481633,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648131515
    },
    {
        "content": "<p>wesley is assigned though?</p>",
        "id": 276481652,
        "sender_full_name": "DPC",
        "timestamp": 1648131525
    },
    {
        "content": "<p>(by rust-highfive, though)</p>",
        "id": 276481730,
        "sender_full_name": "apiraino",
        "timestamp": 1648131556
    },
    {
        "content": "<p>I tend to assume that rust-highfive assignments are not going to get the same priority as active fires</p>",
        "id": 276481816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , you and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> work out who will review</p>",
        "id": 276481905,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131605
    },
    {
        "content": "<p>lets move along</p>",
        "id": 276481920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131609
    },
    {
        "content": "<ul>\n<li>\"Better method call error messages\" <a href=\"https://github.com/rust-lang/rust/pull/92364\">rust#92364</a> (last review activity: about 57 days ago)<ul>\n<li>PR author <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> suggests a review from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 276481947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> I'm going to assume this is in your FIFO work queue of PRs you still want to review</p>",
        "id": 276482054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131662
    },
    {
        "content": "<p>It's a big one that I keep coming back to</p>",
        "id": 276482067,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1648131666
    },
    {
        "content": "<ul>\n<li>\"Add <code>[f32]::sort_floats</code> and <code>[f64]::sort_floats</code>\" <a href=\"https://github.com/rust-lang/rust/pull/93397\">rust#93397</a> (last review activity: about 54 days ago)<ul>\n<li>left a comment for <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> to be sure PR is actually ready for review</li>\n</ul>\n</li>\n</ul>",
        "id": 276482083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-24.20.2354818/near/276482067\">said</a>:</p>\n<blockquote>\n<p>It's a big one that I keep coming back to</p>\n</blockquote>\n<p>does it need to be broken down into smaller PR's? (can it be? should it be?)</p>",
        "id": 276482117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131688
    },
    {
        "content": "<p>Last round it was in a good shape but need to do another oass</p>",
        "id": 276482130,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1648131693
    },
    {
        "content": "<p>It can't, not really</p>",
        "id": 276482143,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1648131699
    },
    {
        "content": "<p>Just need to find the time for it</p>",
        "id": 276482175,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1648131713
    },
    {
        "content": "<p>re <a href=\"https://github.com/rust-lang/rust/issues/93397\">#93397</a> ... I'm curious how much of that is T-compiler</p>",
        "id": 276482185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131716
    },
    {
        "content": "<p>I see, lang items</p>",
        "id": 276482248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131727
    },
    {
        "content": "<p>think the bulk of <a href=\"https://github.com/rust-lang/rust/issues/93397\">#93397</a> is on libs team</p>",
        "id": 276482293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131753
    },
    {
        "content": "<ul>\n<li>\"parallel_compiler: hide dependencies behind feature\" <a href=\"https://github.com/rust-lang/rust/pull/93787\">rust#93787</a> (last review activity: about 39 days ago)<ul>\n<li>bot assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> </li>\n<li>some comments left by @__<strong>cuviper</strong> and @__<strong>cjgillot</strong></li>\n<li>PR needs a rebase (maybe not blocking review)</li>\n</ul>\n</li>\n</ul>",
        "id": 276482353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131776
    },
    {
        "content": "<p>I can get to this soon</p>",
        "id": 276482390,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648131794
    },
    {
        "content": "<p>okay. I'm not sure its high priority...</p>",
        "id": 276482415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131804
    },
    {
        "content": "<p>(but if its simple enough ...)</p>",
        "id": 276482439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131813
    },
    {
        "content": "<ul>\n<li>\"Only add codegen backend to dep info if -Zbinary-dep-depinfo is used\" <a href=\"https://github.com/rust-lang/rust/pull/93969\">rust#93969</a> (last review activity: about 38 days ago)<ul>\n<li>rustbot rolled the dice a few times but PR probably needs a reviewer, maybe re-assign?</li>\n</ul>\n</li>\n</ul>",
        "id": 276482453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131820
    },
    {
        "content": "<p>I'd take <a href=\"https://github.com/rust-lang/rust/issues/93969\">#93969</a> but Im having trouble with the things that are already on my queue</p>",
        "id": 276482605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648131876
    },
    {
        "content": "<p>hmm. <a href=\"https://github.com/rust-lang/rust/issues/93969\">#93969</a> does seem trivial</p>",
        "id": 276482911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132011
    },
    {
        "content": "<p>though it adds some random logic regarding periods</p>",
        "id": 276482938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I'm guessing that this use case is so niche that its especially hard to write a test for what you're exercising there...?</p>",
        "id": 276482997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132053
    },
    {
        "content": "<p>External backends contain a period in the name. That is how rustc_interface distinguishes them.</p>",
        "id": 276483050,
        "sender_full_name": "bjorn3",
        "timestamp": 1648132079
    },
    {
        "content": "<p>I could write a test I think.</p>",
        "id": 276483107,
        "sender_full_name": "bjorn3",
        "timestamp": 1648132086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-24.20.2354818/near/276483050\">said</a>:</p>\n<blockquote>\n<p>External backends contain a period in the name. That is how rustc_interface distinguishes them.</p>\n</blockquote>\n<p>its not the most self-documenting interface in the world...</p>",
        "id": 276483304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132178
    },
    {
        "content": "<p>but okay. TIL.</p>",
        "id": 276483362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132202
    },
    {
        "content": "<p>Same, I basically just asked that question on the PR.</p>",
        "id": 276483479,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648132240
    },
    {
        "content": "<p>I'll self-assign <a href=\"https://github.com/rust-lang/rust/issues/93969\">#93969</a> for review, given its triviality. I'll probably r+ once the test is added</p>",
        "id": 276483483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132242
    },
    {
        "content": "<ul>\n<li>\"Fix incorrect suggestion for trait bounds involving binary operators\" <a href=\"https://github.com/rust-lang/rust/pull/94034\">rust#94034</a> (last review activity: about 35 days ago)<ul>\n<li>first round of review by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> and <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> </li>\n<li>PR needs a rebase (maybe not blocking review?)</li>\n</ul>\n</li>\n</ul>",
        "id": 276483592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132286
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> and <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , I'll trust that you two will figure out who will own review here.</p>",
        "id": 276483743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132340
    },
    {
        "content": "<ul>\n<li>\"Only compile #[used] as llvm.compiler.used for ELF targets\" <a href=\"https://github.com/rust-lang/rust/pull/93718\">rust#93718</a> (last review activity: about 34 days ago)<ul>\n<li>can now be reviewed from <code>T-compiler</code></li>\n</ul>\n</li>\n</ul>",
        "id": 276483766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132352
    },
    {
        "content": "<p>this was offshoot from <a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a></p>",
        "id": 276483866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132407
    },
    {
        "content": "<p>I can self-assign <a href=\"https://github.com/rust-lang/rust/issues/93718\">rust#93718</a>. It seems like  its already gotten some potentially good feedback.</p>",
        "id": 276483906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132422
    },
    {
        "content": "<ul>\n<li>\"Introduce enhanced_binary_op feature\" <a href=\"https://github.com/rust-lang/rust/pull/93049\">rust#93049</a><br>\n    - assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> (comments indicate a conversation elsewhere)<br>\n    - (author also suggests closing it)</li>\n</ul>",
        "id": 276484091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132496
    },
    {
        "content": "<p>I'm trying to quickly evaluate who cares about this</p>",
        "id": 276484303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132584
    },
    {
        "content": "<p>the best explanation for motivation I can find quickly is at <a href=\"https://github.com/rust-lang/rust/pull/88642#pullrequestreview-853617564\">https://github.com/rust-lang/rust/pull/88642#pullrequestreview-853617564</a></p>",
        "id": 276484427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132634
    },
    {
        "content": "<p>i do feel bad if <span class=\"user-mention\" data-user-id=\"211466\">@Caio</span> invested a bunch of effort in this and isn't getting much reception, especially if this <em>is</em> a feature that some people care about? I just cannot tell how much people want it</p>",
        "id": 276484701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132729
    },
    {
        "content": "<p>there were lots of happy emojis on <a href=\"https://github.com/rust-lang/rust/issues/88642\">#88642</a></p>",
        "id": 276484771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132763
    },
    {
        "content": "<p>there's a separate stabilization PR for let_chains itself up at <a href=\"https://github.com/rust-lang/rust/issues/94927\">#94927</a>. But to be clear, <a href=\"https://github.com/rust-lang/rust/issues/93049\">#93049</a> is about the generalization of let_chains to handle <code>||</code> (IIUC)</p>",
        "id": 276484997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132839
    },
    {
        "content": "<p>The PR itself is pretty small. I guess the lang team has already decided we want this feature?</p>",
        "id": 276485117,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648132895
    },
    {
        "content": "<blockquote>\n<p>The lang team discussed this in its triage meeting today -- we would like to see the MIR change you point out, @matthewjasper, factored out into a separate PR that we can FCP, though folks in the meeting were generally on board with merging such a change.</p>\n</blockquote>",
        "id": 276485174,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648132918
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/88642#issuecomment-1015731744\">https://github.com/rust-lang/rust/pull/88642#issuecomment-1015731744</a></p>",
        "id": 276485226,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648132928
    },
    {
        "content": "<p>Is the next step a Lang Team FCP?</p>",
        "id": 276485307,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648132966
    },
    {
        "content": "<p>relevant lang team meeting date: <a href=\"https://hackmd.io/736a8pNQTECc3Knbua3eCw\">https://hackmd.io/736a8pNQTECc3Knbua3eCw</a></p>",
        "id": 276485352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648132984
    },
    {
        "content": "<p>namely <a href=\"https://hackmd.io/736a8pNQTECc3Knbua3eCw#%E2%80%9CFormally-implement-let-chains%E2%80%9D-rust88642\">https://hackmd.io/736a8pNQTECc3Knbua3eCw#%E2%80%9CFormally-implement-let-chains%E2%80%9D-rust88642</a></p>",
        "id": 276485416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133004
    },
    {
        "content": "<p>lang team did generally think that this corresponded to behavior we would want eventually</p>",
        "id": 276485516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133037
    },
    {
        "content": "<p>at least for <a href=\"https://github.com/rust-lang/rust/issues/88642\">#88642</a> itself.</p>",
        "id": 276485610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133063
    },
    {
        "content": "<p>but yea, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , lets send <a href=\"https://github.com/rust-lang/rust/issues/93049\">#93049</a> back to lang team</p>",
        "id": 276485649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133077
    },
    {
        "content": "<p>I'm not comfortable just accepting it as is</p>",
        "id": 276485664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133083
    },
    {
        "content": "<p>I added I-lang-nominated tag</p>",
        "id": 276485950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133205
    },
    {
        "content": "<h1>Issues of Note</h1>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">64 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">47 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 1 P-high, 1 P-medium, 2 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 43 P-high, 82 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 276486001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133225
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No new <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 276486022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133233
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No new unassigned <code>P-high</code></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 276486042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133242
    },
    {
        "content": "<p>(this is a good place to be!)</p>",
        "id": 276486061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133248
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-03-22.md\">triage logs for 2022-03-22</a></p>\n</blockquote>\n<p>Very quiet week for performance, with just one statistically significant change<br>\nlanding in the last week. This change was a regression, though primarily in<br>\nstress tests, and was a result of a soundness fix.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=3ba1ebea122238d1a5c613deb1bf60ce24bd8fd8&amp;end=3ea44938e21f0de8ae7d4f6399a8a30f97867c70&amp;absolute=false&amp;stat=instructions%3Au\">3ba1ebea122238d1a5c613deb1bf60ce24bd8fd8..3ea44938e21f0de8ae7d4f6399a8a30f97867c70</a></p>\n<p>1 Regressions, 0 Improvements, 0 Mixed; 0 of them in rollups<br>\n37 comparisons made in total</p>",
        "id": 276486092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133258
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Disable almost certainly unsound early otherwise branch MIR opt <a href=\"https://github.com/rust-lang/rust/pull/95161\">#95161</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 3.1%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3c17c84a386e7badf6b2c6018d172496b3a28a04&amp;end=cf8531064e44a335c7da75c745279457f42660c5&amp;stat=instructions:u\">instruction counts</a>: 8.5% on <code>full</code> builds of <code>deeply-nested-multi check</code></li>\n<li>Minimal impact on primary benchmarks, and as a soundness fix naturally pretty justified.</li>\n</ul>",
        "id": 276486238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133305
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>No improvements.</li>\n</ul>\n<h4>Mixed</h4>\n<ul>\n<li>No mixed results.</li>\n</ul>",
        "id": 276486268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133318
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 276486283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133325
    },
    {
        "content": "<p>so, <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> was right to expand the set of \"Oldest PRs waiting on review\", it seems</p>",
        "id": 276486360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133358
    },
    {
        "content": "<p>:)</p>",
        "id": 276486366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133361
    },
    {
        "content": "<p>is there anything else anyone wants to discuss?</p>",
        "id": 276486528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133420
    },
    {
        "content": "<p>if not, I'm fine with ended 10 minutes early.</p>",
        "id": 276486554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133432
    },
    {
        "content": "<p>as an aside, I notice that the queue of old PRs waiting for review is getting less \"old\" than before, so this exercise during  the mtg  seems to work</p>",
        "id": 276486587,
        "sender_full_name": "apiraino",
        "timestamp": 1648133444
    },
    {
        "content": "<p>so I'm happy about that , hopeful that this is not adding to the churn of T-compiler reviewers :)</p>",
        "id": 276486648,
        "sender_full_name": "apiraino",
        "timestamp": 1648133469
    },
    {
        "content": "<p>Okay then, lets just end the meeting then! thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 276486654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648133472
    },
    {
        "content": "<p>That's a very good outcome indeed!</p>",
        "id": 276486655,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1648133473
    },
    {
        "content": "<p>Draft for next weeks' agenda available at:<br>\n<a href=\"https://hackmd.io/RZWtfiBBQo2dG525CgZ2mQ?view\">https://hackmd.io/RZWtfiBBQo2dG525CgZ2mQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span> (generic work of the WG) by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"3282\">wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> (though probably preparing for the meeting of April, 1st)</li>\n</ul>",
        "id": 276493269,
        "sender_full_name": "apiraino",
        "timestamp": 1648136143
    }
]