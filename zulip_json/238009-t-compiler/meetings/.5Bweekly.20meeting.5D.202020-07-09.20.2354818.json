[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in ~ 23 hours 44 minutes</p>",
        "id": 203272490,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217810
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in #<strong>t-compiler/wg-prioritization-alerts</strong></p>",
        "id": 203272531,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217832
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/8nGY3590Q6yvTDmX6rp5Kg?view\">meeting agenda</a></p>",
        "id": 203272563,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217851
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> and <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span></p>",
        "id": 203272657,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> || <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>?</p>",
        "id": 203272710,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217928
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span>?</p>",
        "id": 203272788,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594217971
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> the agenda is kind of short right now, consider nominating issues that you find important or things that you want to raise awareness or move forward</p>",
        "id": 203277724,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594220298
    },
    {
        "content": "<p>if there's nothing important to add, I guess it's ok to leave the agenda in the way it is, we can close the meeting earlier :) but I guessed that is also a nice opportunity to check on issues that you may want to see moving forward</p>",
        "id": 203277882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594220374
    },
    {
        "content": "<p>Feel free to you point things at me and I can nominate and add some explanations of issues to the agenda <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 203277915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594220388
    },
    {
        "content": "<p>I'm nominating PR's <a href=\"https://github.com/rust-lang/rust/issues/74127\">#74127</a> and <a href=\"https://github.com/rust-lang/rust/issues/74150\">#74150</a> , not because I want to debate their value, but rather because I want to give a general heads up that I think we should just approve them (and if that means we need to discuss our internal culture, so be it)</p>",
        "id": 203289835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594225668
    },
    {
        "content": "<p>I have a theory of why people feel extra strongly about the PR.</p>\n<p>This is just a guess, but maybe part of why some people feel strongly against it is the issue of naming (remember that saying that naming and cache invalidation are the hardest problems in computer science? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span>). </p>\n<p>What I mean by \"the issue of naming\" is that we have this idea that \"good names\" should feel a certain way: they should be precise, concise and should reflect all of the facets of the idea they represent.</p>\n<p>Since the name \"whitelist\" is old and has been used repeatedly to mean this one thing, it has slowly through the decades molded itself into a \"good name\" for this role, by that definition. And I think that many people feel strongly about losing one of those, because again, \"good names\" are hard to come by. This must feel like having a word being ripped away from the dictionary.</p>",
        "id": 203298373,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594229944
    },
    {
        "content": "<p>If you ask me my opinion, I think that's okay. The new words will mold themselves into their new roles, just like \"whitelist\" and the others did. But I speak more than one language, and I am old, so to me it doesn't hurt as much to say goodbye to one particular \"good word\" in English.</p>",
        "id": 203298603,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594230070
    },
    {
        "content": "<p>Sorry for the intromission, but I think that this idea was missing in the overall discussion. Thank you for bringing it up. <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, I think these are, at the very least, a good issue to bring forward.</p>",
        "id": 203298828,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594230194
    },
    {
        "content": "<p>Its also a sensitive topic for some because they see it as providing literal \"lip service\" that doesn't actually resolve the real problems of inequity</p>",
        "id": 203301313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594231397
    },
    {
        "content": "<p>That makes sense. But I also think that language is powerful. It shapes how we think of the world. If we can push that boat a little bit to alter its course, we might be helping a lot of people down the road.</p>",
        "id": 203302780,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594232161
    },
    {
        "content": "<p>I think we're helping the folks of the future more than ourselves. But I think that's how it is with language. It changes slowly, and it changes us slowly as well.</p>",
        "id": 203303001,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594232272
    },
    {
        "content": "<p>also, I think I have a problem with all of these words (allowlist, whitelist, denylist, blacklist) because people think they are self-documenting, but they are in fact <em>not</em>. They don't document what is being allowed/denied; you still need to determine that from context (or nearby documentation).</p>",
        "id": 203304582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594233020
    },
    {
        "content": "<p>So that's a way in which I can appreciate the idea that the naive, context-free rename (e.g. to \"allowlist\") does not provide enough value on its own</p>",
        "id": 203304616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594233048
    },
    {
        "content": "<p>compared to, as <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> pointed out, a rename to <code>AssumeUsed</code> (as suggested by <span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> and was then added to <a href=\"https://github.com/rust-lang/rust/issues/74127\">#74127</a>), where now we embed more useful info</p>",
        "id": 203304713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594233106
    },
    {
        "content": "<p>Ohh, that's a really good point!</p>",
        "id": 203305559,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1594233513
    },
    {
        "content": "<p>(to be clear, I was referring above to the use of e.g. \"denylist\" as a variable name. My comment wasn't directed at its use within a sentence in a comment, which is a place where you're likely to find the necessary extra information.)</p>",
        "id": 203308060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594234835
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 1 hour</p>",
        "id": 203381838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594299498
    },
    {
        "content": "<p><a href=\"https://hackmd.io/8nGY3590Q6yvTDmX6rp5Kg?view\">Check out the meeting agenda</a></p>",
        "id": 203381877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594299526
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 203388784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303296
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 203388820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303311
    },
    {
        "content": "<ul>\n<li>We will be releasing Rust 1.45 next thursday!</li>\n</ul>",
        "id": 203388917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303330
    },
    {
        "content": "<ul>\n<li>New MCPs<br>\n    - No new proposals this time.</li>\n</ul>",
        "id": 203388996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303357
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<br>\n    - \"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a><br>\n    - \"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a><br>\n    - \"Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/310\">compiler-team#310</a><br>\n    - \"Add future-incompat entries to json diagnostic output\" <a href=\"https://github.com/rust-lang/compiler-team/issues/315\">compiler-team#315</a><br>\n    - \"MCP: Reorganize the rust-lang/rust repo directory structure\" <a href=\"https://github.com/rust-lang/compiler-team/issues/316\">compiler-team#316</a></li>\n</ul>",
        "id": 203389026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303370
    },
    {
        "content": "<ul>\n<li>Pending FCP requests     - No pending FCP requests this time.</li>\n</ul>",
        "id": 203389151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303430
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<br>\n    - \"--extern-location to specify where an --extern dependency is defined\" <a href=\"https://github.com/rust-lang/compiler-team/issues/303\">compiler-team#303</a><br>\n    - \"Change <code>ty::Const</code> to an integer tree representation\" <a href=\"https://github.com/rust-lang/compiler-team/issues/323\">compiler-team#323</a><br>\n    - \"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a><br>\n    - \"Improve defaults in x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/326\">compiler-team#326</a><br>\n    - \"Rework rustc_serialize\" <a href=\"https://github.com/rust-lang/compiler-team/issues/329\">compiler-team#329</a><br>\n    - \"mv std libs to std/\" <a href=\"https://github.com/rust-lang/rust/pull/73265\">rust#73265</a><br>\n    - \"Stabilize control-flow-guard codegen option\" <a href=\"https://github.com/rust-lang/rust/pull/73893\">rust#73893</a></li>\n</ul>",
        "id": 203389246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303454
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<br>\n    - \"illumos toolchain builds\" <a href=\"https://github.com/rust-lang/compiler-team/issues/279\">compiler-team#279</a><br>\n    - \"RISC-V Linux Tier 2 Host support\" <a href=\"https://github.com/rust-lang/compiler-team/issues/312\">compiler-team#312</a><br>\n    - \"Switch from libbacktrace to gimli\" <a href=\"https://github.com/rust-lang/compiler-team/issues/313\">compiler-team#313</a><br>\n    - \"<code>#![deny(unsafe_op_in_unsafe_fn)]</code> in libcore and libstd\" <a href=\"https://github.com/rust-lang/compiler-team/issues/317\">compiler-team#317</a><br>\n    - \"-Zmir-opt-level Reform\" <a href=\"https://github.com/rust-lang/compiler-team/issues/319\">compiler-team#319</a><br>\n    - \"Move CONTRIBUTING.md to rustc-dev-guide and instead point to Getting Started\" <a href=\"https://github.com/rust-lang/compiler-team/issues/320\">compiler-team#320</a></li>\n</ul>",
        "id": 203389295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303477
    },
    {
        "content": "<h3>WG checkins</h3>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> checkin by <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>:</p>",
        "id": 203389344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303504
    },
    {
        "content": "<p>(I don't see any checkin report given ahead of time to put into the agena; but feel free to post one now if there's anything to report from <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> ?)</p>",
        "id": 203389429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303547
    },
    {
        "content": "<p>Well so</p>",
        "id": 203389437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303553
    },
    {
        "content": "<p>I can leave a few notes</p>",
        "id": 203389442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303556
    },
    {
        "content": "<p>first off, we're still working on polishing things, but there hasn't been as much people around lately</p>",
        "id": 203389510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303580
    },
    {
        "content": "<p>probably we could advertise a bit more :)</p>",
        "id": 203389517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303584
    },
    {
        "content": "<p>but if people are ever looking for smaller bugs to fix, we've got a queue...</p>",
        "id": 203389524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303594
    },
    {
        "content": "<p>we also have a checkin scheduled from <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  (where again there is no text in the agenda supplied ahead of time)</p>",
        "id": 203389604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303647
    },
    {
        "content": "<p>...there is also some work going on that is not really \"t-compiler\", but there are two RFCs being drafted</p>\n<ul>\n<li>add <code>Stream</code> trait to stdlib</li>\n<li>a lint similar to <code>#[must_use]</code>, but detecting values that should not be live across an <code>await</code> (<code>#[yield_safe]</code>, perhaps?)</li>\n</ul>",
        "id": 203389606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303648
    },
    {
        "content": "<p>last thing:</p>",
        "id": 203389656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303678
    },
    {
        "content": "<p>the queue of issues can be found on the <a href=\"https://github.com/orgs/rust-lang/projects/2\">project board</a>, under the \"On deck\"  card</p>",
        "id": 203389716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303690
    },
    {
        "content": "<p>those are the polish-related ones that seem most important</p>",
        "id": 203389751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303706
    },
    {
        "content": "<p>ok, thanks!</p>",
        "id": 203389754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303708
    },
    {
        "content": "<p>(I would not use \"safe\" for that, tbh)</p>",
        "id": 203389782,
        "sender_full_name": "eddyb",
        "timestamp": 1594303730
    },
    {
        "content": "<p>(that is one of the topics under discussion, actually, finding a better name:)</p>",
        "id": 203389861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303777
    },
    {
        "content": "<p>because its not necessarily a safety issue? (Or it should never be a safety issue?)</p>",
        "id": 203389864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303780
    },
    {
        "content": "<p>it should never be if it's a lint, IMO</p>",
        "id": 203389968,
        "sender_full_name": "eddyb",
        "timestamp": 1594303828
    },
    {
        "content": "<p>true</p>",
        "id": 203389978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303835
    },
    {
        "content": "<p>Draft RFC is in <a href=\"https://github.com/rust-lang/wg-async-foundations/pull/16\">rust-lang/wg-async-foundations#16</a> if you want to leave thoughts</p>",
        "id": 203389985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594303837
    },
    {
        "content": "<p>(see confusion about <code>UnwindSafe</code>)</p>",
        "id": 203390010,
        "sender_full_name": "lcnr",
        "timestamp": 1594303854
    },
    {
        "content": "<p>anyway we can move along, assuming <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> is unavailable. (<span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , if you have stuff to report and become available during the meeting, PM me and we'll allocate time at the end.)</p>",
        "id": 203390017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303859
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>",
        "id": 203390068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303891
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>\"rustdoc: Rename invalid_codeblock_attribute lint to be plural\" <a href=\"https://github.com/rust-lang/rust/pull/74131\">rust#74131</a><ul>\n<li>Renames a Lint name as <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0344-conventions-galore.md#lints\">per lint naming conventions</a></li>\n</ul>\n</li>\n</ul>",
        "id": 203390080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303904
    },
    {
        "content": "<p>an important thing I see there is ...</p>",
        "id": 203390221,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594303983
    },
    {
        "content": "<blockquote>\n<p>This will need to be backported to beta as that's the first version with this lint.</p>\n</blockquote>",
        "id": 203390223,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594303984
    },
    {
        "content": "<p>so this lint was never on stable</p>",
        "id": 203390239,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594303993
    },
    {
        "content": "<p>right, I was just going to ask about that</p>",
        "id": 203390240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594303993
    },
    {
        "content": "<p>if it had been on stable, then I would think we'd have to use a more sophisticated form of the PR that continued to support the old name</p>",
        "id": 203390277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-09.20.2354818/near/203390239\">said</a>:</p>\n<blockquote>\n<p>so this lint was never on stable</p>\n</blockquote>\n<p>at least according to the comments, I didn't check that to be honest</p>",
        "id": 203390287,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594304024
    },
    {
        "content": "<p>so okay, beta accepted then</p>",
        "id": 203390289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304027
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>",
        "id": 203390458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304110
    },
    {
        "content": "<h2>PR's S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on T-compiler this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on libs-impl this time.</li>\n</ul>",
        "id": 203390474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304118
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">47 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">26 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 4 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 1 P-high, 7 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 13 P-high, 47 P-medium, 4 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 203390488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-09.20.2354818/near/203390287\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-09.20.2354818/near/203390239\">said</a>:</p>\n<blockquote>\n<p>so this lint was never on stable</p>\n</blockquote>\n<p>at least according to the comments, I didn't check that to be honest</p>\n</blockquote>\n<p>just checked and the comment is right, is not in stable so <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 203390589,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594304165
    },
    {
        "content": "<p>since there is a release in a week, I suppose its worth noting that those 4 P-medium regression-from-stable-to-beta are going to end up in the stable channel.</p>",
        "id": 203390608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304173
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Nightly ICEs trying to normalize during a cast\" <a href=\"https://github.com/rust-lang/rust/issues/73747\">rust#73747</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>nightly regression, ICEs on previously accepted code</li>\n<li>Has MCVE</li>\n<li>Regressed somewhere in <a href=\"https://github.com/rust-lang/rust/commit/25687caa2e4e35b31c29e28998710670e9d54ee9\">this rollup</a></li>\n<li>Current repro code uses WinRT and thus is only reproducible on Windows</li>\n</ul>\n</li>\n</ul>",
        "id": 203390649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304196
    },
    {
        "content": "<p>I'll just note: I personally don't consider the example on <a href=\"https://github.com/rust-lang/rust/issues/73747\">rust#73747</a> to be a likely <em>Minimal</em> complete verifiable example</p>",
        "id": 203390741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304238
    },
    {
        "content": "<p>the code is short, but its hiding a bunch of stuff behind a WinRT specific macro</p>",
        "id": 203390786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304262
    },
    {
        "content": "<p>(I tried to reproduce atop the output of <code>--pretty expanded</code>, and unfortunately it did not reproduce with my naive attempt to do so)</p>",
        "id": 203390885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304301
    },
    {
        "content": "<p>but yeah, I'm still looking at it.</p>",
        "id": 203390937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304338
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No P-critical issues for libs-impl this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No P-critical issues for T-rustdoc this time.</li>\n</ul>",
        "id": 203391008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304374
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>\n<ul>\n<li>No unassigned P-high beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>\n<ul>\n<li>No unassigned P-high nightly regressions this time.</li>\n</ul>",
        "id": 203391030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304383
    },
    {
        "content": "<h2>Performance logs</h2>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a>.<br>\nLatest revision: <a href=\"https://github.com/rust-lang/rust/commit/0c03aee8b81185d65b5821518661c30ecdb42de5\">0c03aee8b81185d65b5821518661c30ecdb42de5</a>.<br>\nOne unimportant regression, on a rollup; six improvements, two on rollups.</p>\n<p>Regressions</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74073#issuecomment-654524169\">Rollup of 12 pull requests #74073</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=2753fab7ce3647033146b07c8b6c9f4856a910b0&amp;end=0c03aee8b81185d65b5821518661c30ecdb42de5&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.9% losses, but only on the synthetic <code>wf-projection-stress-65510</code><br>\n  benchmark, which doesn't matter that much.</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73706#issuecomment-653771986\">Serialize all foreign <code>SourceFile</code>s into proc-macro crate metadata #73706</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=16957bd4d3a5377263f76ed74c572aad8e4b7e59&amp;end=d462551a8600e57d8b6f87e71ea56868bc5da6cf&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 7.5% wins across numerous benchmarks, mostly the shorter-running ones.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73879#issuecomment-651710137\">Handle inactive enum variants in <code>MaybeUninitializedPlaces</code> #73879</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=0cd7ff7ddfb75a38dca81ad3e76b1e984129e939&amp;end=2753fab7ce3647033146b07c8b6c9f4856a910b0&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 7.1% wins across numerous benchmarks, mostly on opt builds. (Plus one<br>\n  21% improvement, but that benchmark has high variability.)</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73950#issuecomment-654520286\">Rollup of 16 pull requests #73950</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c&amp;end=b7856f695d65a8ebc846754f97d15814bcb1c244&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.9% wins across numerous benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73882#issue-441778949\">Avoid <code>unwrap_or_else</code> in <code>RawVec::allocate_in</code>. #73882</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=5f4abc16e1b2cb035eee6a5079ce45ce924c1f33&amp;end=cd1a46d644791c79433db934ad4e6131c577efcc&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.2% wins across a few benchmarks, mostly on debug builds. Maybe<br>\n<a href=\"https://github.com/rust-lang/rust/pull/73345\">#73345</a> or<br>\n<a href=\"https://github.com/rust-lang/rust/pull/73569\">#73569</a> is responsible?</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73751#issuecomment-654521841\">Remove <code>TypeckTables::empty(None)</code> and make hir_owner non-optional. #73751</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=8a6d4342be6a6acbade8e7ef65e73d27ee8c9144&amp;end=3503f565e1fb7296983757d2716346f48a4a262b&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 3.8% wins, mostly on <code>unused-warnings</code>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73924#issuecomment-654518483\">Rollup of 17 pull requests #73924</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d462551a8600e57d8b6f87e71ea56868bc5da6cf&amp;end=f781babf87dea29c44f93842b7ac9eb809549d29&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.9% wins, mostly on <code>clap-rs</code>. Unclear which PR is responsible.</p>\n</li>\n</ul>",
        "id": 203391110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304406
    },
    {
        "content": "<p>I don't think there's anything we need to discuss here; as noted, the one recorded regression does not seem important.</p>",
        "id": 203391250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304483
    },
    {
        "content": "<p>in particular, I'm guessing that if we ever work on automating this performance analysis, we'll need to put in some differing criteria for synthetic benchmarks vs real-world benchmarks in terms of how big a regression needs to be before it should signal alarm bells.</p>",
        "id": 203391410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304565
    },
    {
        "content": "<p>so lets move along</p>",
        "id": 203391425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304572
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 203391439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304582
    },
    {
        "content": "<ul>\n<li>\"Inherit <code>#[stable(..)]</code> annotations in enum variants and fields from its item\" <a href=\"https://github.com/rust-lang/rust/pull/71481\">rust#71481</a><ul>\n<li>Assigned to: <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n<li>Is a PR to allow stability attributes flow down in enums to their variants and fields</li>\n<li>Nominated because it's controversial<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/71481#issuecomment-625423500\">@**Vadim Petrochenkov** believes is not a good idea</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/71481#discussion_r436266259\">@**nagisa** believes it's dangerous and also limits our possibilities in the future</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/71481#discussion_r439594190\">@**nikomatsakis** expressed that we might accidentally stabilize struct fields without intending to</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 203391472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304595
    },
    {
        "content": "<p>so lets see, this is part of <a href=\"https://github.com/rust-lang/rust/issues/65515\">#65515</a></p>",
        "id": 203391545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304639
    },
    {
        "content": "<p>and unfortunately I do not think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> is here</p>",
        "id": 203391600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304652
    },
    {
        "content": "<p>we definitely need to move or not move on this</p>",
        "id": 203391634,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594304666
    },
    {
        "content": "<p>I don't actually have a strong opinion one way or the other</p>",
        "id": 203391658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594304677
    },
    {
        "content": "<p>I don't think we need to reduce verbosity in libstd</p>",
        "id": 203391686,
        "sender_full_name": "eddyb",
        "timestamp": 1594304693
    },
    {
        "content": "<p>given that nobody has really spoken up strongly in favor, maybe the answer is that we should not do it</p>",
        "id": 203391722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594304713
    },
    {
        "content": "<p>if this was exposed to regular user crates, I could see some points for it</p>",
        "id": 203391741,
        "sender_full_name": "eddyb",
        "timestamp": 1594304722
    },
    {
        "content": "<p>It sounds to me like the stronger motivating factor is how some error messages are being shown</p>",
        "id": 203391792,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594304752
    },
    {
        "content": "<p>but better-safe-than-sorry seems to work (and we've actually gone in the direction of being more explicit/restricted with things like const fn stabilization)</p>",
        "id": 203391793,
        "sender_full_name": "eddyb",
        "timestamp": 1594304752
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/pull/65421#issuecomment-542869234\">https://github.com/rust-lang/rust/pull/65421#issuecomment-542869234</a></p>",
        "id": 203391809,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594304760
    },
    {
        "content": "<p>oh so it <em>is</em> aesthetics</p>",
        "id": 203391897,
        "sender_full_name": "eddyb",
        "timestamp": 1594304784
    },
    {
        "content": "<p>there was this past dialog here: <a href=\"https://github.com/rust-lang/rust/issues/65515#issuecomment-548409772\">https://github.com/rust-lang/rust/issues/65515#issuecomment-548409772</a></p>",
        "id": 203391909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304789
    },
    {
        "content": "<p>maybe I could see enum variant <em>fields</em> (but keep the attribute on the variant)</p>",
        "id": 203391986,
        "sender_full_name": "eddyb",
        "timestamp": 1594304832
    },
    {
        "content": "<p>Seems like <code>T-libs</code> is generally in favor?</p>",
        "id": 203392026,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594304849
    },
    {
        "content": "<p>I had overlooked this aspect</p>",
        "id": 203392062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594304865
    },
    {
        "content": "<p>but I do think that's a strong motivation :)</p>",
        "id": 203392072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594304870
    },
    {
        "content": "<p>I'm actually surprised by how <em>small</em> the fallout on libstd is</p>",
        "id": 203392238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304937
    },
    {
        "content": "<p>the fallout is this PR : <a href=\"https://github.com/rust-lang/rust/pull/71482/files\">https://github.com/rust-lang/rust/pull/71482/files</a></p>",
        "id": 203392258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594304947
    },
    {
        "content": "<p>I can see only doing to for fields</p>",
        "id": 203392305,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594304965
    },
    {
        "content": "<p>And not varianta</p>",
        "id": 203392319,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594304969
    },
    {
        "content": "<p>that would still get the desired improvement to diagnostic output</p>",
        "id": 203392466,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305029
    },
    {
        "content": "<p>right?</p>",
        "id": 203392470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305031
    },
    {
        "content": "<p>Could <code>#[stable(..)]</code> be extended with <code>#[stable(.., include_fields)]</code>  so that it's still explicit and couldn't (as easily) lead to accidental stabilization of fields? This would still enable the stable attribute to be removed from the field itself which is the diagnostic improvement we're looking for?</p>",
        "id": 203392477,
        "sender_full_name": "davidtwco",
        "timestamp": 1594305033
    },
    {
        "content": "<p>That would cover the most egregious cases. Keep in mind that the test suite doesn't have the same frequency for errors as what user experience</p>",
        "id": 203392502,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305048
    },
    {
        "content": "<p>(because the annotation on the variant is not part of the span that is reported in the diagnostic)</p>",
        "id": 203392504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305049
    },
    {
        "content": "<p>It is in some cases, but much less frequent</p>",
        "id": 203392551,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305070
    },
    {
        "content": "<p>okay well based on the conversation thus far, it sounds to me like we should <em>not</em> just close this PR</p>",
        "id": 203392635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305110
    },
    {
        "content": "<p>but maybe <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> can refine the approach</p>",
        "id": 203392697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> is there a dedicated zulip thread for this issue and/or PR ?</p>",
        "id": 203392712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305140
    },
    {
        "content": "<p>OTOH nowadays didn’t we move the responsibility of the std implementation to T-compiler?</p>",
        "id": 203392715,
        "sender_full_name": "nagisa",
        "timestamp": 1594305142
    },
    {
        "content": "<p>that this conversation could move to?</p>",
        "id": 203392722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305146
    },
    {
        "content": "<p>I'll make obr</p>",
        "id": 203392757,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305166
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> yeah but the public API is T-libs, so I assume their opinion still is (very) relevant here?</p>",
        "id": 203392761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305168
    },
    {
        "content": "<p>One</p>",
        "id": 203392762,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305168
    },
    {
        "content": "<p>Hm, yeah, but how verbose is annotation of the implementation shouldn't affect the API much, no?</p>",
        "id": 203392814,
        "sender_full_name": "nagisa",
        "timestamp": 1594305193
    },
    {
        "content": "<p>/me shrugs.</p>",
        "id": 203392825,
        "sender_full_name": "nagisa",
        "timestamp": 1594305203
    },
    {
        "content": "<p>I think the discussion is around verbosity vs potential misuse</p>",
        "id": 203392854,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305217
    },
    {
        "content": "<p>anyway lets shift this conversation to be outside of this meeting. the people who are interested can go to whatever topic <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> creates; just post a link here when you make it, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 203392922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305245
    },
    {
        "content": "<ul>\n<li>\"A big regression in tokio-webpush-simple-opt\" <a href=\"https://github.com/rust-lang/rust/issues/58368\">rust#58368</a><ul>\n<li>Tokio webpush bench regressed 88.5% <a href=\"https://github.com/rust-lang/rust/commit/ff19a53ef07566aa30860023f6eac6e75ffaf900\">in this commit</a>.</li>\n<li>Nominated to raise awareness of such a big performance regression with no recent activity.</li>\n</ul>\n</li>\n</ul>",
        "id": 203392994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305270
    },
    {
        "content": "<p>wow 88.5% is indeed big</p>",
        "id": 203393020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305280
    },
    {
        "content": "<p>runtime perf or compiletime perf?</p>",
        "id": 203393071,
        "sender_full_name": "nagisa",
        "timestamp": 1594305304
    },
    {
        "content": "<p>its also like a year and a half old. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 203393078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305308
    },
    {
        "content": "<p>There's currently no info on this because this was so long ago we've wiped the perf server and the data is gone.</p>",
        "id": 203393091,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305312
    },
    {
        "content": "<p>Compiletime perf</p>",
        "id": 203393103,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-09.20.2354818/near/203393071\">said</a>:</p>\n<blockquote>\n<p>runtime perf or compiletime perf?</p>\n</blockquote>\n<p>I'm assuming compiletime</p>",
        "id": 203393123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305334
    },
    {
        "content": "<p>It links to perf.rlo so it's compiletime</p>",
        "id": 203393164,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305359
    },
    {
        "content": "<p>the regression is to incremental performance</p>",
        "id": 203393172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305360
    },
    {
        "content": "<p>Actually, I wonder if the infamous CGU partitioning issue is to blame?</p>",
        "id": 203393247,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305381
    },
    {
        "content": "<p>so maybe this can be a topic of investigation for the up-and-coming wg-incr-comp</p>",
        "id": 203393251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> did the blamed commit have any interaction with cgu partitioning?</p>",
        "id": 203393306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305409
    },
    {
        "content": "<p>seems plausible that we could revert the regressing commit and see if it's still a performance win to revert it</p>",
        "id": 203393342,
        "sender_full_name": "simulacrum",
        "timestamp": 1594305425
    },
    {
        "content": "<p>it looks like it mostly touches rarely-edited code</p>",
        "id": 203393372,
        "sender_full_name": "simulacrum",
        "timestamp": 1594305440
    },
    {
        "content": "<p>I'm just speculating but an 80% regression only on incremental compilation performance sounds suspiciously like that issue</p>",
        "id": 203393387,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305447
    },
    {
        "content": "<p>yeah that was exactly what we were saying in the prioritization wg meeting</p>",
        "id": 203393396,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594305450
    },
    {
        "content": "<p>just revert and check</p>",
        "id": 203393415,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594305458
    },
    {
        "content": "<p>If it changed the order MIR bodies were visited during codegen, it could potentially trigger it</p>",
        "id": 203393434,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305470
    },
    {
        "content": "<p>I see</p>",
        "id": 203393503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305485
    },
    {
        "content": "<p>we were wondering if it would be just reverting or some things would need to be tweaked but we could investigate it</p>",
        "id": 203393516,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594305490
    },
    {
        "content": "<p><del>the blamed PR, by the way, is:  Add a target option \"merge-functions\", and a corresponding -Z flag (works around <a href=\"https://github.com/rust-lang/rust/issues/57356\"><a href=\"https://github.com/rust-lang/rust/issues/57356\">#57356</a></a>) <a href=\"https://github.com/rust-lang/rust/issues/57268\"><a href=\"https://github.com/rust-lang/rust/issues/57268\">#57268</a></a></del></p>",
        "id": 203393588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305521
    },
    {
        "content": "<p>okay lets maybe let wg-incr-comp take point on this</p>",
        "id": 203393642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305555
    },
    {
        "content": "<p>I thought it got blamed to <a href=\"https://github.com/rust-lang/rust/issues/57573\">#57573</a>?</p>",
        "id": 203393649,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305561
    },
    {
        "content": "<p>oh I was only looking at the issue description</p>",
        "id": 203393692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305582
    },
    {
        "content": "<p><em>oh</em> it had <strong>all</strong> of those commits in it</p>",
        "id": 203393732,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305598
    },
    {
        "content": "<p>never mind me</p>",
        "id": 203393737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305600
    },
    {
        "content": "<blockquote>\n<p>Local testing suggests that this is due to commit ff19a53 \"Querify entry_fn\", which seems to cause inc.comp. to hand more code to LLVM. Reverting that patch brings performance back to the old level.</p>\n</blockquote>",
        "id": 203393807,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305617
    },
    {
        "content": "<p>Regardless, it seems like wg-incr-comp is probably the right team to handle this</p>",
        "id": 203393840,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305638
    },
    {
        "content": "<p>yeah sounds good to me</p>",
        "id": 203393868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305653
    },
    {
        "content": "<ul>\n<li>PR's \"Avoid \"blacklist\"\" <a href=\"https://github.com/rust-lang/rust/pull/74150\">rust#74150</a> and \"Avoid \"whitelist\"\" <a href=\"https://github.com/rust-lang/rust/pull/74127\">rust#74127</a><ul>\n<li>Felix nominated: these ended up being troll-magnets. Felix wants to establish that this kind of PR is in line with our values, for the reasons <a href=\"https://github.com/rust-lang/rust/pull/74127#pullrequestreview-444766034\">posted by niko</a>.<br>\n    - Felix asks: Would others agree with this statement, taken from <a href=\"https://www.grammarphobia.com/blog/2009/12/light-and-dark-2.html\">\"The light and dark of language\"</a>? :</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>For what it’s worth, we don’t believe that metaphors identifying lightness as positive and darkness as negative are inherently racist. They certainly didn’t begin that way, though these negative connotations have certainly fed into and reinforced racism over the centuries. </p>\n</blockquote>\n<ul>\n<li>(Also, as previously established, the Core Team has publicly noted support for BLM in the <a href=\"https://blog.rust-lang.org/2020/06/04/Rust-1.44.0.html\">1.44.0 blog post</a>)</li>\n<li><del>Assuming they both land, pnkfelix proposes we lock them both again after they land, because even now they continue to invite trolling or troll-like behavior.</del></li>\n</ul>",
        "id": 203393930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305680
    },
    {
        "content": "<p>I honestly see no reason <em>not</em> to block that thread to contribs only at the first sign of trouble, like it was done originally.</p>",
        "id": 203394097,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305753
    },
    {
        "content": "<p>The PR process did its job, the changes are good after the review.</p>",
        "id": 203394161,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305784
    },
    {
        "content": "<p>I don't know, we've had some bad experiences in the past with externally linked PR's</p>",
        "id": 203394165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305785
    },
    {
        "content": "<p>so I think it was not overzealous of the rust-mods to lock the PR</p>",
        "id": 203394195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305802
    },
    {
        "content": "<p>There were some pushback in other venues against lock, but I too think it was the right call to lock.</p>",
        "id": 203394264,
        "sender_full_name": "nagisa",
        "timestamp": 1594305826
    },
    {
        "content": "<p>I know why that makes people uneasy, but this is an internal nomenclature change that didn't affect the larger community</p>",
        "id": 203394336,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305848
    },
    {
        "content": "<p>my own thoughts on the PR itself are probably both over-complicated and ignorant.</p>",
        "id": 203394363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305859
    },
    {
        "content": "<p>I wouldn't have had an issue accepting the PR as it was originally with the allow/deny lists but I <strong>love</strong> that it was improved to the point pretty much everyone can agree the new names are universally better.</p>",
        "id": 203394403,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594305877
    },
    {
        "content": "<p>We didn't see this when we renamed <code>Place</code>, did we? <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 203394409,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305879
    },
    {
        "content": "<p>there is one topic that I want to try to touch on</p>",
        "id": 203394464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305909
    },
    {
        "content": "<p>some people, perhaps who were acting in bad faith, posted questions about whether some words are going to be explicitly disallowed from the code base</p>",
        "id": 203394518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305932
    },
    {
        "content": "<p>now, to be clear, I think we already <em>do</em> have an informal standard here. Like, we don't tend to accept code with swears in it</p>",
        "id": 203394558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594305954
    },
    {
        "content": "<p>We _can_ be more rigorous in asking people to use more descriptive names for variables and types.</p>",
        "id": 203394661,
        "sender_full_name": "nagisa",
        "timestamp": 1594305984
    },
    {
        "content": "<p>Yes. I see no need for a formal list of words that are disallowed.</p>",
        "id": 203394715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306012
    },
    {
        "content": "<p>This PR did demonstrate that white/black list as a name is usually not great for technical reasons too.</p>",
        "id": 203394722,
        "sender_full_name": "nagisa",
        "timestamp": 1594306015
    },
    {
        "content": "<p>that's right, and changing to \"allowlist\" and \"denylist\" doesn't fix that</p>",
        "id": 203394749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306035
    },
    {
        "content": "<p>to me, that's the important takeaway</p>",
        "id": 203394768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306044
    },
    {
        "content": "<p>If future PR's come up and they use the term \"whitelist\" in a comment, I don't think the reviewers need to worry about it.</p>",
        "id": 203394945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306113
    },
    {
        "content": "<p>which I admit may sound contradictory</p>",
        "id": 203394981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306130
    },
    {
        "content": "<p>(i.e. Why accept the comment changes here now if we aren't going to impose the standard on future PR's...)</p>",
        "id": 203395023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306148
    },
    {
        "content": "<p>and I think the answer is that we probably <em>wouldn't</em> accept a PR that just changed comments</p>",
        "id": 203395045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306164
    },
    {
        "content": "<p>or rather, just changed comments via a simple sed -e s/blacklist/denylist/</p>",
        "id": 203395104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306194
    },
    {
        "content": "<p>at least, I know we struggled in the past with proposed PR's that just fixed grammar</p>",
        "id": 203395178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306213
    },
    {
        "content": "<p>But in this case, the PR is making more substantial improvements, as <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> noted.</p>",
        "id": 203395216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306233
    },
    {
        "content": "<p>I think it's also entirely reasonable to ask the person submitting the code to provide a more descriptive variable name or comment than just \"whitelist\"/\"blacklist\" in the same way we would if they had variables named \"foo\". I suspect most people would simply comply without making an issue of it.</p>",
        "id": 203395271,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594306259
    },
    {
        "content": "<p>Yep, I think that's true too</p>",
        "id": 203395304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306272
    },
    {
        "content": "<p>I just wanted to make it clear that I am not planning on outlawing some set of words</p>",
        "id": 203395453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306337
    },
    {
        "content": "<p>instead, I trust reviewers to use their best judgement about 1. what kinds of names and comments are <em>intelligible</em>, and 2. what is potentially offensive.</p>",
        "id": 203395507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306368
    },
    {
        "content": "<p>finally, I don't regard this sort of PR as representing the sort of <em>significant</em> action that is actually needed to help marginalized groups, so its better if we avoid claims that it does so</p>",
        "id": 203395691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306450
    },
    {
        "content": "<p>okay then</p>",
        "id": 203395826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306501
    },
    {
        "content": "<p>Oh yeah, and as you can see, I did cross-out my suggestion that we lock the PR's after landing them</p>",
        "id": 203395887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306525
    },
    {
        "content": "<p>as <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> pointed out, its some changes to internal nomenclature.</p>",
        "id": 203396041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306579
    },
    {
        "content": "<p>if the PR's do get trolling comments in the future, we'll handle it like any other moderation activity.</p>",
        "id": 203396236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306663
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for libs-impl this time.</li>\n</ul>",
        "id": 203396263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306676
    },
    {
        "content": "<p>oh hey we have two minutes left and <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <strong>is</strong> here now</p>",
        "id": 203396320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306687
    },
    {
        "content": "<p>first here's the link to the topic they created for teh <code>#[stable]</code> annotation stuff: <a href=\"#narrow/stream/131828-t-compiler/topic/.23.5Bstable.5D.20annotations/near/203393543\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/.23.5Bstable.5D.20annotations/near/203393543</a></p>",
        "id": 203396396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306725
    },
    {
        "content": "<p>aka <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/.23.5Bstable.5D.20annotations\">#t-compiler &gt; #[stable] annotations</a></p>",
        "id": 203396422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306738
    },
    {
        "content": "<p>would be nice to add that link to the github issue too if it wasn't done already</p>",
        "id": 203396439,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1594306746
    },
    {
        "content": "<p>but also, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , do you have anything to report for <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> ?</p>",
        "id": 203396475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306763
    },
    {
        "content": "<p>In the past month I've focused on attacking default bounds, both <code>'static</code> and <code>Sized</code> and creating new targeted diagnostics when they are involved and keeping the backlog categorized (+ various random improvements).</p>",
        "id": 203396670,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594306833
    },
    {
        "content": "<p>For example</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0759]: cannot infer an appropriate lifetime\n  --&gt; $DIR/trait-object-nested-in-impl-trait.rs:41:31\n   |\nLL |     fn iter(&amp;self) -&gt; impl Iterator&lt;Item = Box&lt;dyn Foo&gt;&gt; + &#39;_ {\n   |             ----- this data with an anonymous lifetime `&#39;_`...\n...\nLL |             remaining: self.0.iter(),\n   |                        ------ ^^^^\n   |                        |\n   |                        ...is captured here...\n   |\nnote: ...and is required to live as long as `&#39;static` here\n  --&gt; $DIR/trait-object-nested-in-impl-trait.rs:38:23\n   |\nLL |     fn iter(&amp;self) -&gt; impl Iterator&lt;Item = Box&lt;dyn Foo&gt;&gt; + &#39;_ {\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: to declare that the trait object captures data from argument `self`, you can add an explicit `&#39;_` lifetime bound\n   |\nLL |     fn iter(&amp;self) -&gt; impl Iterator&lt;Item = Box&lt;dyn Foo + &#39;_&gt;&gt; + &#39;_ {\n   |\n</code></pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the size for values of type `T` cannot be known at compilation time\n  --&gt; $DIR/adt-param-with-implicit-sized-bound.rs:25:5\n   |\nLL | struct X&lt;T&gt;(T);\n   |          - required by this bound in `X`\n...\nLL | struct Struct5&lt;T: ?Sized&gt;{\n   |                - this type parameter needs to be `std::marker::Sized`\nLL |     _t: X&lt;T&gt;,\n   |     ^^^^^^^^ doesn&#39;t have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `T`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\nhelp: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&amp;T` or `Box&lt;T&gt;`\n  --&gt; $DIR/adt-param-with-implicit-sized-bound.rs:18:10\n   |\nLL | struct X&lt;T&gt;(T);\n   |          ^  - ...if indirection was used here: `Box&lt;T&gt;`\n   |          |\n   |          this could be changed to `T: ?Sized`...\n</code></pre></div>",
        "id": 203396859,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594306904
    },
    {
        "content": "<p>neat! Thanks <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 203397255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307053
    },
    {
        "content": "<p>and thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 203397265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307061
    },
    {
        "content": "<p>stay safe, stay well. <span aria-label=\"mask\" class=\"emoji emoji-1f637\" role=\"img\" title=\"mask\">:mask:</span></p>",
        "id": 203397279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307069
    },
    {
        "content": "<p>(oh yes, just as a reminder: we have canceled our steering meetings for this cycle, as discussed last week</p>",
        "id": 203397368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307106
    },
    {
        "content": "<p>so no meeting at this time tomorrow! <span aria-label=\"party ball\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"party ball\">:party_ball:</span> )</p>",
        "id": 203397408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307122
    }
]