[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , meeting time!</p>",
        "id": 244706656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234642
    },
    {
        "content": "<p>sorry for being a little late; was doing a bit of doc review for my partner. :)</p>",
        "id": 244706716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234657
    },
    {
        "content": "<p>as a reminder, we planned a week ago for this to be a follow-up to last weeks' meeting. but then yesterday I realized it was a scheduled planning meeting.</p>",
        "id": 244706806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234697
    },
    {
        "content": "<p>so maybe lets start by double checking the current list of proposals. If it has grown signficantly since yesterday, then we could devote the whole time to planning</p>",
        "id": 244706874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234729
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/issues?q=is%3Aissue+is%3Aopen+label%3Ameeting-proposal+-label%3Ameeting-scheduled\">https://github.com/rust-lang/compiler-team/issues?q=is%3Aissue+is%3Aopen+label%3Ameeting-proposal+-label%3Ameeting-scheduled</a></p>",
        "id": 244706982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234768
    },
    {
        "content": "<p>there's just one meeting proposal. Okay.</p>",
        "id": 244707002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234778
    },
    {
        "content": "<p>lets do planning first, quickly. And then we'll spend remainder of time on the fingerprint course correction doc</p>",
        "id": 244707081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234819
    },
    {
        "content": "<p>(I personally am preferring \"course correction\" over the acronym \"COE\"; I'd love to hear thoughts from you all on that.)</p>",
        "id": 244707149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234846
    },
    {
        "content": "<p>so the single proposal is this: </p>\n<ul>\n<li>Discuss extending the compiler teamâ€™s review policy <a href=\"https://github.com/rust-lang/compiler-team/issues/444\">compiler-team#444</a></li>\n</ul>",
        "id": 244707200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234866
    },
    {
        "content": "<p>what does COE stand for again?</p>",
        "id": 244707202,
        "sender_full_name": "mw",
        "timestamp": 1625234866
    },
    {
        "content": "<p>exactly!</p>",
        "id": 244707219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234877
    },
    {
        "content": "<p>:D</p>",
        "id": 244707228,
        "sender_full_name": "mw",
        "timestamp": 1625234882
    },
    {
        "content": "<p>heh. It stands for \"Correction of Error\"</p>",
        "id": 244707256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234884
    },
    {
        "content": "<p>see e.g.:<a href=\"https://medium.com/@josh_70523/postmortem-correction-of-error-coe-template-db69481da31d\">https://medium.com/@josh_70523/postmortem-correction-of-error-coe-template-db69481da31d</a></p>",
        "id": 244707323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234909
    },
    {
        "content": "<p>I get the impression that its a general ops thing. I don't know whether it originated at AWS, nor how broadly it has been adopted outside of AWS.</p>",
        "id": 244707375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234932
    },
    {
        "content": "<p>but the acronym is by no means globally unique</p>",
        "id": 244707475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234977
    },
    {
        "content": "<p>anyway, back to <a href=\"https://github.com/rust-lang/compiler-team/issues/444\">compiler-team#444</a></p>",
        "id": 244707481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625234981
    },
    {
        "content": "<p>I think this is a good idea. And I think <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> already has a document mostly prepared.</p>",
        "id": 244707534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235002
    },
    {
        "content": "<p>oh yeah, its linked from the proposal even</p>",
        "id": 244707595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235013
    },
    {
        "content": "<p>yes</p>",
        "id": 244707615,
        "sender_full_name": "mw",
        "timestamp": 1625235022
    },
    {
        "content": "<p>so, when is good date to have meeting on this topic?</p>",
        "id": 244707643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235032
    },
    {
        "content": "<p>the available dates are: 2021-07-09, 2021-07-16, 2021-07-23</p>",
        "id": 244707705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235057
    },
    {
        "content": "<p>I'm available on all of these</p>",
        "id": 244707746,
        "sender_full_name": "mw",
        "timestamp": 1625235073
    },
    {
        "content": "<p>any objections to 2021-07-09?</p>",
        "id": 244707794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235094
    },
    {
        "content": "<p>I could imagine some people who live in the USA might be taking next week off as a summer break</p>",
        "id": 244707822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235108
    },
    {
        "content": "<p>Is 2021-07-16 better in that respect?</p>",
        "id": 244707998,
        "sender_full_name": "mw",
        "timestamp": 1625235163
    },
    {
        "content": "<p>It depends on whether we actually expect more engagement if we do that date</p>",
        "id": 244708042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235187
    },
    {
        "content": "<p>the other issue is that we don't actually have too many people here right now</p>",
        "id": 244708078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235206
    },
    {
        "content": "<p>(based on the <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> 's above)</p>",
        "id": 244708089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235212
    },
    {
        "content": "<p>It seems like it might take 2 meetings for this topic, maybe?</p>",
        "id": 244708134,
        "sender_full_name": "simulacrum",
        "timestamp": 1625235231
    },
    {
        "content": "<p>but I guess there's no harm in choosing the later date</p>",
        "id": 244708141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235235
    },
    {
        "content": "<p>yeah, I think this is an issue that should be signed off on by most of the compiler team + contributors</p>",
        "id": 244708148,
        "sender_full_name": "mw",
        "timestamp": 1625235238
    },
    {
        "content": "<p>but that doesn't have to happen during that meeting</p>",
        "id": 244708203,
        "sender_full_name": "mw",
        "timestamp": 1625235252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244708134\">said</a>:</p>\n<blockquote>\n<p>It seems like it might take 2 meetings for this topic, maybe?</p>\n</blockquote>\n<p>thats possible, though I would like to believe we might get away with 1 meeting and some amount of asynchronous work</p>",
        "id": 244708211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235260
    },
    {
        "content": "<p>(OTOH, maybe we want the 9th to continue fingerprints discussion...)</p>",
        "id": 244708222,
        "sender_full_name": "simulacrum",
        "timestamp": 1625235266
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244708222\">said</a>:</p>\n<blockquote>\n<p>(OTOH, maybe we want the 9th to continue fingerprints discussion...)</p>\n</blockquote>\n<p>yeah maybe. I hope not.</p>",
        "id": 244708254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235278
    },
    {
        "content": "<p>Lets go ahead with 2021-07-16 for <a href=\"https://github.com/rust-lang/compiler-team/issues/444\">compiler-team#444</a></p>",
        "id": 244708290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235296
    },
    {
        "content": "<p>sounds good</p>",
        "id": 244708309,
        "sender_full_name": "mw",
        "timestamp": 1625235304
    },
    {
        "content": "<p>and move along to the fingerprints</p>",
        "id": 244708312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235305
    },
    {
        "content": "<p>doc: <a href=\"https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view\">https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view</a></p>",
        "id": 244708345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235324
    },
    {
        "content": "<p>it's not like that policy would be set in stone forever anyway</p>",
        "id": 244708354,
        "sender_full_name": "mw",
        "timestamp": 1625235328
    },
    {
        "content": "<p>So last time it took about 15 minutes to read the whole doc</p>",
        "id": 244708374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235338
    },
    {
        "content": "<p>there hasn't been much change to the summary+metrics/graphs+user-impact+incident-response+timeline</p>",
        "id": 244708431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235360
    },
    {
        "content": "<p>so I'm thinking: lets allocate 10 minutes to read the Five Whys and everything after it. Leave a <span aria-label=\"book\" class=\"emoji emoji-1f4d6\" role=\"img\" title=\"book\">:book:</span> here when you start, and a <span aria-label=\"checkered flag\" class=\"emoji emoji-1f3c1\" role=\"img\" title=\"checkered flag\">:checkered_flag:</span> when you finish. (keep the <span aria-label=\"book\" class=\"emoji emoji-1f4d6\" role=\"img\" title=\"book\">:book:</span>  marked so that the counts match up.)</p>",
        "id": 244708549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235401
    },
    {
        "content": "<p>(you've gotta be kidding me, why are the hyperlinks at top not workikng...)</p>",
        "id": 244708653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235444
    },
    {
        "content": "<p>oh, the quotes. Let me get rid of thoses.</p>",
        "id": 244708687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235458
    },
    {
        "content": "<p>There is one thing I <em>did</em> add that I forgot to mention above</p>",
        "id": 244709775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235925
    },
    {
        "content": "<p>This, in Incident response: <a href=\"https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view#Question-Are-we-happysatisfied-with-how-quickly-we-acted-here-Are-our-users\">https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view#Question-Are-we-happysatisfied-with-how-quickly-we-acted-here-Are-our-users</a></p>",
        "id": 244709803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235943
    },
    {
        "content": "<p>but we can talk about that directly</p>",
        "id": 244709816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235951
    },
    {
        "content": "<p>okay so that's been ten minutes. <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> do you need more time?</p>",
        "id": 244709975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625235994
    },
    {
        "content": "<p>I think we can start discussion: <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , just interrupt the conversation when you see this, and we'll make sure you have a chance to chime in on anything we covered</p>",
        "id": 244710128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236078
    },
    {
        "content": "<p>So, first of all: Anyone have questions about the content as it is currently written? Anything you didn't understand or think could be clarified in the doc?</p>",
        "id": 244710266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236127
    },
    {
        "content": "<p>I think I'd be interested in a timeline / search for closed/opened issues after the check landed but <em>before</em> 1.52.0 was released</p>",
        "id": 244710355,
        "sender_full_name": "simulacrum",
        "timestamp": 1625236159
    },
    {
        "content": "<p>I left a comment about the impact of miscompilations</p>",
        "id": 244710381,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236170
    },
    {
        "content": "<p>i.e., basically \"could we have known about this being a big deal?\"</p>",
        "id": 244710385,
        "sender_full_name": "simulacrum",
        "timestamp": 1625236172
    },
    {
        "content": "<p>imho, incremental-related miscompilations are much worse than 'normal' miscompilations</p>",
        "id": 244710399,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236180
    },
    {
        "content": "<p>because they're so hard to reproduce</p>",
        "id": 244710405,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236184
    },
    {
        "content": "<p>yes that's definitely true</p>",
        "id": 244710432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236195
    },
    {
        "content": "<p>and will essentially never be detected by a user's CI</p>",
        "id": 244710496,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236215
    },
    {
        "content": "<p>so okay, two points have been made</p>",
        "id": 244710509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236219
    },
    {
        "content": "<ol>\n<li>incr-comp miscompilations are inherently more problematic</li>\n</ol>",
        "id": 244710548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236237
    },
    {
        "content": "<p>due to difficulty in reproduction</p>",
        "id": 244710561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236243
    },
    {
        "content": "<p>could we have a process in place that would have prioritized back porting the fixes that landed in nightly that had greatly decreased the occurrence of these ICEs?</p>",
        "id": 244710610,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625236260
    },
    {
        "content": "<p>and that shifted prioritization here. That fact needs to reflected in the doc.</p>",
        "id": 244710611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710610\">said</a>:</p>\n<blockquote>\n<p>could we have a process in place that would have prioritized back porting the fixes that landed in nightly that had greatly decreased the occurrence of these ICEs?</p>\n</blockquote>\n<p>maybe, but we were pretty hestitant to backport even when we did get around to looking at them</p>",
        "id": 244710684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236287
    },
    {
        "content": "<p>but still: Going forward, maybe its something we need to be more proactive about, in general</p>",
        "id": 244710712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236301
    },
    {
        "content": "<p>(in terms of having the conversation in the first place, in a timely fashion)</p>",
        "id": 244710742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236312
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710355\">said</a>:</p>\n<blockquote>\n<p>I think I'd be interested in a timeline / search for closed/opened issues after the check landed but <em>before</em> 1.52.0 was released</p>\n</blockquote>\n<p>I don't want to forget this</p>",
        "id": 244710780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I considered trying to make such a timeline. It would have been based solely on nightly and beta issues, obviously</p>",
        "id": 244710870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236351
    },
    {
        "content": "<p>basically my gut feeling is that we didn't know this was major until it hit stable</p>",
        "id": 244711008,
        "sender_full_name": "simulacrum",
        "timestamp": 1625236404
    },
    {
        "content": "<p>but yeah, I think it would benefit the doc, at least to have it in an appendix</p>",
        "id": 244711017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236409
    },
    {
        "content": "<p>and even then we're still in the dark about just how bad</p>",
        "id": 244711020,
        "sender_full_name": "simulacrum",
        "timestamp": 1625236411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710684\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710610\">said</a>:</p>\n<blockquote>\n<p>could we have a process in place that would have prioritized back porting the fixes that landed in nightly that had greatly decreased the occurrence of these ICEs?</p>\n</blockquote>\n<p>maybe, but we were pretty hestitant to backport even when we did get around to looking at them</p>\n</blockquote>\n<p>To add some context, we've been bitten in the past by backporting non-trivial patches which then cause further issues of their own before. In general, we try to either backport a small patch to fix the issue, revert the original patch as a backport or disable the functionality (if possible) in a backport. Many of the fixes for the issues discovered were non-trivial so we were hesitant to backport them.</p>",
        "id": 244711026,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625236413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244711008\">said</a>:</p>\n<blockquote>\n<p>basically my gut feeling is that we didn't know this was major until it hit stable</p>\n</blockquote>\n<p>right. It would be really good to have the concrete evidence to support that gut feeling</p>",
        "id": 244711094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236441
    },
    {
        "content": "<p>so, okay, let me add some action items to the top of the doc</p>",
        "id": 244711151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236449
    },
    {
        "content": "<p>(action items in terms of its content, that is)</p>",
        "id": 244711186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710684\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244710610\">said</a>:</p>\n<blockquote>\n<p>could we have a process in place that would have prioritized back porting the fixes that landed in nightly that had greatly decreased the occurrence of these ICEs?</p>\n</blockquote>\n<p>maybe, but we were pretty hestitant to backport even when we did get around to looking at them</p>\n</blockquote>\n<p>does this need to be reflected more properly in the doc?</p>",
        "id": 244711470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236578
    },
    {
        "content": "<p>I'll think about it</p>",
        "id": 244711572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236622
    },
    {
        "content": "<p>Let me work my way through the remaining comments that were added to the doc. We already covered <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> 's</p>",
        "id": 244711620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236642
    },
    {
        "content": "<p>(I'm showing up late; I skimmed the doc quickly; it seems to be hitting the right notes to me)</p>",
        "id": 244711624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1625236644
    },
    {
        "content": "<p>next is <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , who says \"This question could be omitted, I think.\" for \"Why arenâ€™t all Internal Compiler Errors using the nice diagnostic machinery?\"</p>",
        "id": 244711685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236667
    },
    {
        "content": "<p>I have mixed feelings here. Basically: Was this problem more dire because ICE's are scary?</p>",
        "id": 244711754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236688
    },
    {
        "content": "<p>Yeah, I was writing that before reading the next question</p>",
        "id": 244711759,
        "sender_full_name": "mw",
        "timestamp": 1625236691
    },
    {
        "content": "<p>it might be needed for context</p>",
        "id": 244711770,
        "sender_full_name": "mw",
        "timestamp": 1625236698
    },
    {
        "content": "<p>I see. I saw it as leading from the fact that the previous <del>question</del> answer said \"ah ha, we <em>did</em> change the ICE to use a nice diagnostic that gave the user guidance as to what to do\"</p>",
        "id": 244711821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236725
    },
    {
        "content": "<p>to me, that naturally led to the \"why aren't all ICE's doing that?\"</p>",
        "id": 244711837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236734
    },
    {
        "content": "<p>yes, I'm fine with just leaving it in</p>",
        "id": 244711875,
        "sender_full_name": "mw",
        "timestamp": 1625236752
    },
    {
        "content": "<p>okay, so that's all the registered comments on the Five Whys section</p>",
        "id": 244711895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236768
    },
    {
        "content": "<p>before we move to later sections, does anyone have further comments on the Five Whys as they stand now?</p>",
        "id": 244711924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236781
    },
    {
        "content": "<p>I would like to talk a bit about \"Why was Safety First the guiding principle for handling this situation?\"</p>",
        "id": 244711972,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625236802
    },
    {
        "content": "<p>I'm curious about how I could better phrase the section \"Why did it take until Monday for you to tell your users about the problem?\"</p>",
        "id": 244711991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236804
    },
    {
        "content": "<p>okay, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , go for it</p>",
        "id": 244712022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236810
    },
    {
        "content": "<p>In particular, I'm curious what others think about how we handled this situation. I think from a \"Safety First\" POV, we absolutely did the right thing.</p>",
        "id": 244712102,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625236850
    },
    {
        "content": "<p>\"many versions of stable Rust shipped with this issue and (arguably) minimal impact to users.\" we don't know if this is true</p>",
        "id": 244712193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236885
    },
    {
        "content": "<p>But from a more pragmatic POV, given that there were numerous versions of Rust that shipped with this issue, was this actually so serious that we should disable incremental?</p>",
        "id": 244712198,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625236889
    },
    {
        "content": "<p>incr-comp only being on for non-release profiles by default</p>",
        "id": 244712210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236897
    },
    {
        "content": "<p>means that maybe some people were tearing their hair out while trying to debug something</p>",
        "id": 244712244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236911
    },
    {
        "content": "<p>while nothing in release was ever problematic</p>",
        "id": 244712271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236922
    },
    {
        "content": "<p>Given the inherent reproducibility problems with incremental compilation, I think disabling was absolutely the right option</p>",
        "id": 244712325,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236930
    },
    {
        "content": "<p>(and of course, the horror scenario is if someone did have incr-comp on for release.)</p>",
        "id": 244712334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236933
    },
    {
        "content": "<p>We have a bunch of open unsound issues</p>",
        "id": 244712363,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> so my reaction to that is: Should we have gone <strong>further</strong> ?</p>",
        "id": 244712369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236948
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712210\">said</a>:</p>\n<blockquote>\n<p>incr-comp only being on for non-release profiles by default</p>\n</blockquote>\n<p>That's basically only an undocumented convention -- maybe we should change that?</p>",
        "id": 244712382,
        "sender_full_name": "mw",
        "timestamp": 1625236953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712102\">said</a>:</p>\n<blockquote>\n<p>In particular, I'm curious what others think about how we handled this situation. I think from a \"Safety First\" POV, we absolutely did the right thing.</p>\n</blockquote>\n<p>i think that because this only showed up in incremental compilation, and it's likely that safety-conscious applications won't deploy based on incremental compilation output, that we could stand to relax a \"Safety First\" approach in this kind of context</p>",
        "id": 244712383,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625236953
    },
    {
        "content": "<p>i.e. should we have disabled incr-comp in general?</p>",
        "id": 244712393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236958
    },
    {
        "content": "<p>but they're all pretty obscure, and you can detect them by 'just' reading the code</p>",
        "id": 244712394,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236959
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712393\">said</a>:</p>\n<blockquote>\n<p>i.e. should we have disabled incr-comp in general?</p>\n</blockquote>\n<p>what do you mean?</p>",
        "id": 244712443,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625236980
    },
    {
        "content": "<p>oh sorry</p>",
        "id": 244712448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236983
    },
    {
        "content": "<p>I meant, in general, on stable+beta, as <em>soon</em> as we found out about the miscompilations</p>",
        "id": 244712485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625236998
    },
    {
        "content": "<p>rather than just adding the fingerprint check and letting it ride the trans</p>",
        "id": 244712513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237014
    },
    {
        "content": "<p>but leaving stable+beta unchanged</p>",
        "id": 244712530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237022
    },
    {
        "content": "<p>I don't think that's a safety-reated decision</p>",
        "id": 244712542,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237032
    },
    {
        "content": "<p>I think that kind of re-enforces my point. To what <span class=\"user-mention\" data-user-id=\"411291\">@Taylor Yu [they/she]</span> said, if the issues only show up during development and never in prod, that makes this seem less serious to me.</p>",
        "id": 244712565,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237041
    },
    {
        "content": "<p>since the fingerprint check catches all instances of these <em>types</em> ofbugs</p>",
        "id": 244712577,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237043
    },
    {
        "content": "<p>unless you're thinking about other bugs lurking in the incremental system</p>",
        "id": 244712631,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237059
    },
    {
        "content": "<p>basically: if this was important enough to disable incr-comp in 1.52.1 after we started seeing all the issues</p>",
        "id": 244712636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237063
    },
    {
        "content": "<p>then was there an argument for disabling incr-comp in 1.51 ?</p>",
        "id": 244712654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237075
    },
    {
        "content": "<p>and that this was a warning that the incremental system does not work as well as we think it does</p>",
        "id": 244712665,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237082
    },
    {
        "content": "<p>that argument could be made, yeah</p>",
        "id": 244712676,
        "sender_full_name": "mw",
        "timestamp": 1625237086
    },
    {
        "content": "<p>Or vice versa? If we shipped so many releases with this issue, why not disable the check in 1.52.1 and ship one more?</p>",
        "id": 244712702,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237098
    },
    {
        "content": "<p>when we did disable incr-comp, I was under the impression that it was just about user experience</p>",
        "id": 244712719,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712577\">said</a>:</p>\n<blockquote>\n<p>since the fingerprint check catches all instances of these <em>types</em> ofbugs</p>\n</blockquote>\n<p>my point is about what we should have done for the earlier releases once we realized the fingerprint check was catching this stuff</p>",
        "id": 244712764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237118
    },
    {
        "content": "<p>well, we didn't know what the impact was going to be</p>",
        "id": 244712822,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712719\">said</a>:</p>\n<blockquote>\n<p>when we did disable incr-comp, I was under the impression that it was just about user experience</p>\n</blockquote>\n<p>if it was just aboutteh user experience, we could have just disabled the  fingerprint-check</p>",
        "id": 244712836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237157
    },
    {
        "content": "<p>are you saying we should have assumed that it would be bad</p>",
        "id": 244712840,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237160
    },
    {
        "content": "<p>the fact we disabled incr-comp means that it surely <em>wasn't</em> just user experience</p>",
        "id": 244712894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237170
    },
    {
        "content": "<p>and just disabled it immeditatley, since the fingerprint impact was unknown?</p>",
        "id": 244712898,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237171
    },
    {
        "content": "<p>That's the question</p>",
        "id": 244712909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237178
    },
    {
        "content": "<p>ok</p>",
        "id": 244712919,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237184
    },
    {
        "content": "<p>hmm</p>",
        "id": 244712922,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237186
    },
    {
        "content": "<p>basically, if \"safety first\" is indeed paramount</p>",
        "id": 244712923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237186
    },
    {
        "content": "<p>then how paramount is it?</p>",
        "id": 244712927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237192
    },
    {
        "content": "<p>and I think the answer here is that you <em>do</em> need to weigh it</p>",
        "id": 244712942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237199
    },
    {
        "content": "<p>against the other factors</p>",
        "id": 244712948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237202
    },
    {
        "content": "<p>like the value provided by incr-comp</p>",
        "id": 244712952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237206
    },
    {
        "content": "<p>we could arguably have disabled incr. comp. once the miscompilation was known</p>",
        "id": 244712967,
        "sender_full_name": "mw",
        "timestamp": 1625237210
    },
    {
        "content": "<p>and the reality that we didn't know impact</p>",
        "id": 244712986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237216
    },
    {
        "content": "<p>(To be clear, I'm mostly arguing for the other POV because I think it's worth exploring why this issue was critical enough to disable the feature entirely vs other long standing unsound issues)</p>",
        "id": 244712993,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237220
    },
    {
        "content": "<p>(which many of you have already stated)</p>",
        "id": 244712997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237222
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244712993\">said</a>:</p>\n<blockquote>\n<p>(To be clear, I'm mostly arguing for the other POV because I think it's worth exploring why this issue was critical enough to disable the feature entirely vs other long standing unsound issues)</p>\n</blockquote>\n<p>yes. but I think <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> 's arugment here is pretty good</p>",
        "id": 244713045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237240
    },
    {
        "content": "<p>I think the key difference between this and otheru nsound bugs is the ability to 'defend' against it</p>",
        "id": 244713056,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237248
    },
    {
        "content": "<p>other miscompilations, we often <em>can</em> reproduce them locally, once identified</p>",
        "id": 244713060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237250
    },
    {
        "content": "<p>incr-comp is in a bad place when it comes to reproduction</p>",
        "id": 244713086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237262
    },
    {
        "content": "<p>e.g. for the various trait system bugs, you can 'just' not do weird things with lifetimes and projections</p>",
        "id": 244713087,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237263
    },
    {
        "content": "<p>and you can (in principle) look at the code to figure out if you're exploiting a soundness hole</p>",
        "id": 244713165,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237284
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713086\">said</a>:</p>\n<blockquote>\n<p>incr-comp is in a bad place when it comes to reproduction</p>\n</blockquote>\n<p>this is not a \"lesson learned\", since we already know it. But I definitely am again thinking about tactics for improving reproducibiilty</p>",
        "id": 244713182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237290
    },
    {
        "content": "<p>otoh, if we had a clear recommendation to never use incr. comp. for production code then even (infrequent) miscompilations would be kind of harmless, right?</p>",
        "id": 244713191,
        "sender_full_name": "mw",
        "timestamp": 1625237294
    },
    {
        "content": "<p>you cannot detect an incremental bug by just reading the code</p>",
        "id": 244713192,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237295
    },
    {
        "content": "<p>even in principle</p>",
        "id": 244713214,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713191\">said</a>:</p>\n<blockquote>\n<p>otoh, if we had a clear recommendation to never use incr. comp. for production code then even (infrequent) miscompilations would be kind of harmless, right?</p>\n</blockquote>\n<p>people need to be able to develop</p>",
        "id": 244713233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237313
    },
    {
        "content": "<p>you need the repository, and at least one diff being applied to it</p>",
        "id": 244713242,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237316
    },
    {
        "content": "<p>It sounds to me like another way to frame what <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is saying is that most of the other unsound issues are more easily understood to the average Rust user. \"If your code does {x}, it is unsound\" where as this bug is unreliable \"If your code does {x} and it used to do {y} in some previous version, then maybe it is unsound\"</p>",
        "id": 244713291,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713233\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713191\">said</a>:</p>\n<blockquote>\n<p>otoh, if we had a clear recommendation to never use incr. comp. for production code then even (infrequent) miscompilations would be kind of harmless, right?</p>\n</blockquote>\n<p>people need to be able to develop</p>\n</blockquote>\n<p>sure but the bug has been in there for quite a while without causing too much trouble apparently</p>",
        "id": 244713293,
        "sender_full_name": "mw",
        "timestamp": 1625237349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713242\">said</a>:</p>\n<blockquote>\n<p>you need the repository, and at least one diff being applied to it</p>\n</blockquote>\n<p>right, a snapshot of source code and a diff. But I think we could do better about making it easy to acquire that</p>",
        "id": 244713308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237356
    },
    {
        "content": "<p>AFAIK, the only way to do that would be to proactively 'snapshot' the entire repository</p>",
        "id": 244713355,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237380
    },
    {
        "content": "<p>since by the time the fingerprint error occurs, it's too late</p>",
        "id": 244713378,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713293\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713233\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713191\">said</a>:</p>\n<blockquote>\n<p>otoh, if we had a clear recommendation to never use incr. comp. for production code then even (infrequent) miscompilations would be kind of harmless, right?</p>\n</blockquote>\n<p>people need to be able to develop</p>\n</blockquote>\n<p>sure but the bug has been in there for quite a while without causing too much trouble apparently</p>\n</blockquote>\n<p>I argue that we don't know that, and if we ignored it, it could make people just stop <strong>trusting</strong> non-release mode</p>",
        "id": 244713385,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237396
    },
    {
        "content": "<p>I would argue that debug/release consistency is an important part of user experience</p>",
        "id": 244713481,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237420
    },
    {
        "content": "<p>Okay well I'd like to wrap this topic up</p>",
        "id": 244713522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237439
    },
    {
        "content": "<p>we've got a lot of other stuff I'd like to touch on</p>",
        "id": 244713539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237447
    },
    {
        "content": "<p>Thanks all, I think that was actually very helpful.</p>",
        "id": 244713553,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713385\">said</a>:<br>\nI argue that we don't know that, and if we ignored it, it could make people just stop <strong>trusting</strong> non-release mode</p>\n<p>Yes, that's fair enough. I'd rather keep incr. comp. sound too :)</p>",
        "id": 244713563,
        "sender_full_name": "mw",
        "timestamp": 1625237453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you feel like there's any takeaway</p>",
        "id": 244713568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237454
    },
    {
        "content": "<p>revision to what you wrote thatyou'd like?</p>",
        "id": 244713586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237460
    },
    {
        "content": "<p>I'll add some notes about what <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> said as I think it's pretty compelling and also potentially useful for judging these kinds of issues in the future.</p>",
        "id": 244713660,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237490
    },
    {
        "content": "<p>well how about the other bit I asked about</p>",
        "id": 244713671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237495
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244711991\">said</a>:</p>\n<blockquote>\n<p>I'm curious about how I could better phrase the section \"Why did it take until Monday for you to tell your users about the problem?\"</p>\n</blockquote>\n<p>this</p>",
        "id": 244713717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237512
    },
    {
        "content": "<p>first off, simple question: Who wants to argue against my position</p>",
        "id": 244713804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237530
    },
    {
        "content": "<p>i.e., is there anyone who wants to push the argument that it was good that we were careful in our crafting messaging and had response worked out before posting a general visible notice (outside of github issues and zulip discussin)</p>",
        "id": 244713921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237581
    },
    {
        "content": "<p>I tried to phrase that to make it <strong>sound</strong> good</p>",
        "id": 244713950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237595
    },
    {
        "content": "<p>one factor that maybe could be elaborated on in the doc is that the developer response to turning off incrementals might have been large due to perceptions of unacceptably slow compilation in their absence. and further questions (maybe to be considered elsewhere?) like what does it mean that we need to rely on a potentially buggy incremental compilation strategy to get acceptable compile performance? (at least for some developers)</p>",
        "id": 244713977,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625237607
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713977\">said</a>:</p>\n<blockquote>\n<p>one factor that maybe could be elaborated on in the doc is that the developer response to turning off incrementals might have been large due to perceptions of unacceptably slow compilation in their absence. and further questions (maybe to be considered elsewhere?) like what does it mean that we need to rely on a potentially buggy incremental compilation strategy to get acceptable compile performance? (at least for some developers)</p>\n</blockquote>\n<p>we need more data here. I had a twitter poll, and a lot of people just didn't care</p>",
        "id": 244714104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237645
    },
    {
        "content": "<p>i.e. a bunch said they don't need incr-comp</p>",
        "id": 244714116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237653
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713977\">said</a>:</p>\n<blockquote>\n<p>one factor that maybe could be elaborated on in the doc is that the developer response to turning off incrementals might have been large due to perceptions of unacceptably slow compilation in their absence. and further questions (maybe to be considered elsewhere?) like what does it mean that we need to rely on a potentially buggy incremental compilation strategy to get acceptable compile performance? (at least for some developers)</p>\n</blockquote>\n<p>I think this is largely a result of the architecture of the language - we inherently need to compile an entire crate at a time</p>",
        "id": 244714120,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237655
    },
    {
        "content": "<p>(Another related question: are we sure that users were adequately informed?)</p>",
        "id": 244714186,
        "sender_full_name": "rylev",
        "timestamp": 1625237696
    },
    {
        "content": "<p>C/C++ compile individual .c / .cpp files at a time, so they get a lot of 'incremental' support without needing to do the kinds of complex tracking that we do</p>",
        "id": 244714196,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237700
    },
    {
        "content": "<p>darn it <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , I think you are right and we need another followup meeting</p>",
        "id": 244714215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713921\">said</a>:</p>\n<blockquote>\n<p>i.e., is there anyone who wants to push the argument that it was good that we were careful in our crafting messaging and had response worked out before posting a general visible notice (outside of github issues and zulip discussin)</p>\n</blockquote>\n<p>I'm not sure I would say that generally, we should wait to take action but I think in this case Friday -&gt; Monday response time is not unreasonable.</p>",
        "id": 244714221,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237711
    },
    {
        "content": "<p>(Especially given that some users in <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s twitter poll didn't even know there was an incremental issue ...)</p>",
        "id": 244714294,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you think a @rustlang tweet Friday (or even THursday) noting the problem and the best-practice workaround would have been warranted?</p>",
        "id": 244714353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237765
    },
    {
        "content": "<p>I'm a little concerned about relying on the results of the twitter poll</p>",
        "id": 244714387,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237784
    },
    {
        "content": "<p>I'm not sure what the \"Friday -&gt; Monday\" denotes. We started discussing the problem on Thursday, I believe.</p>",
        "id": 244714401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244713921\">said</a>:</p>\n<blockquote>\n<p>i.e., is there anyone who wants to push the argument that it was good that we were careful in our crafting messaging and had response worked out before posting a general visible notice (outside of github issues and zulip discussin)</p>\n</blockquote>\n<p>i think there are tradeoffs involved. maybe we could have had a less complete announcement sooner if people were committed to making prompt updates in response to feedback over the weekend, for example</p>",
        "id": 244714407,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625237799
    },
    {
        "content": "<p>I think there could have been a large number of users who got an ICE, went to the bug tracker, and saw the pinned issue</p>",
        "id": 244714411,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714387\">said</a>:</p>\n<blockquote>\n<p>I'm a little concerned about relying on the results of the twitter poll</p>\n</blockquote>\n<p>yeah that's definitely not scientific</p>",
        "id": 244714414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237802
    },
    {
        "content": "<p>I don't think it would have been bad but I don't know that it would be particularly effective either. So sure?</p>",
        "id": 244714417,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237803
    },
    {
        "content": "<p>and then just didn't do anything else</p>",
        "id": 244714424,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625237806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714411\">said</a>:</p>\n<blockquote>\n<p>I think there could have been a large number of users who got an ICE, went to the bug tracker, and saw the pinned issue</p>\n</blockquote>\n<p><em>this</em> I'm not sure about. The timeline shows the number of incoming issues wasn't really affected by the pinned issue</p>",
        "id": 244714459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237824
    },
    {
        "content": "<p>so I'm not sure users changed their behavior all that much in response. Its not clear.</p>",
        "id": 244714484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237839
    },
    {
        "content": "<p>I think a \"(1) mitigage quickly, and then (2) fix properly within the time needed\" approach is a good idea.</p>",
        "id": 244714492,
        "sender_full_name": "mw",
        "timestamp": 1625237842
    },
    {
        "content": "<p>where (1) could have been a tweet with a workaround</p>",
        "id": 244714529,
        "sender_full_name": "mw",
        "timestamp": 1625237860
    },
    {
        "content": "<p>I want to dig more into the mitigation options</p>",
        "id": 244714568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237878
    },
    {
        "content": "<p>we <em>could</em> have spun out a release that just disabled incr-comp, full stop, with no way to opt back in</p>",
        "id": 244714675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237897
    },
    {
        "content": "<p>i got impression that people downgraded if they wanted incr-comp support,</p>",
        "id": 244714691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237907
    },
    {
        "content": "<p>rather than deal with env vars</p>",
        "id": 244714698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237912
    },
    {
        "content": "<p>(I again want to challenge that tweeting is an complete mitigation strategy)</p>",
        "id": 244714701,
        "sender_full_name": "rylev",
        "timestamp": 1625237913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714701\">said</a>:</p>\n<blockquote>\n<p>(I again want to challenge that tweeting is an complete mitigation strategy)</p>\n</blockquote>\n<p>yes, this too</p>",
        "id": 244714713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237921
    },
    {
        "content": "<p>tweeting is a tactic</p>",
        "id": 244714720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714492\">said</a>:</p>\n<blockquote>\n<p>I think a \"(1) mitigage quickly, and then (2) fix properly within the time needed\" approach is a good idea.</p>\n</blockquote>\n<p>I strongly agree with this. From the social media reactions I saw, while people didn't like that compile times were going to get longer, most people agreed that not rushing a fix was the smart move. It seems like the userbase that saw the blog post, generally agreed with our response.</p>",
        "id": 244714729,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625237931
    },
    {
        "content": "<p>but not a complete strategy</p>",
        "id": 244714735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237935
    },
    {
        "content": "<p>a point release is not a good quick mitigation option - it takes too long an is too heavy-weight</p>",
        "id": 244714758,
        "sender_full_name": "mw",
        "timestamp": 1625237949
    },
    {
        "content": "<p>I also think that a tweet is not the best option</p>",
        "id": 244714803,
        "sender_full_name": "mw",
        "timestamp": 1625237975
    },
    {
        "content": "<p>I think this is true but in this case, it <em>was</em> the effective mitigation</p>",
        "id": 244714809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237979
    },
    {
        "content": "<p>what would be better?</p>",
        "id": 244714814,
        "sender_full_name": "mw",
        "timestamp": 1625237981
    },
    {
        "content": "<p>messages via rustup?</p>",
        "id": 244714827,
        "sender_full_name": "mw",
        "timestamp": 1625237987
    },
    {
        "content": "<p>the point release <em>was</em> what migitated the issue</p>",
        "id": 244714839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237995
    },
    {
        "content": "<p>in this case</p>",
        "id": 244714841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625237998
    },
    {
        "content": "<p>right</p>",
        "id": 244714912,
        "sender_full_name": "mw",
        "timestamp": 1625238009
    },
    {
        "content": "<p>and that may be an argument that we should make it easier to spin out a point release</p>",
        "id": 244714927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238012
    },
    {
        "content": "<p>So our hour is up</p>",
        "id": 244714958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238024
    },
    {
        "content": "<p>I think we can keep talking, but I also think we shoud schedule a followup meeting</p>",
        "id": 244714983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238034
    },
    {
        "content": "<p>If we had more knobs to turn at runtime, there could have been an option to do <code>RUSTC_FEATURE_INCREMENTAL=OFF</code> or something.</p>",
        "id": 244714990,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238041
    },
    {
        "content": "<p>I think there are several levels of mitigation then :)</p>",
        "id": 244714994,
        "sender_full_name": "mw",
        "timestamp": 1625238043
    },
    {
        "content": "<p>we already allocated 07-16 for the r+-discussion propsoed by @mw, <a href=\"https://github.com/rust-lang/compiler-team/issues/444\">compiler-team#444</a></p>",
        "id": 244715063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238073
    },
    {
        "content": "<p>should we just go ahead and allocate 2021-07-09 for more discussion of the remainder of this doc?</p>",
        "id": 244715109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238097
    },
    {
        "content": "<p>is there anyone present at this meeting today who could not make it to 2021-07-09?</p>",
        "id": 244715148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238116
    },
    {
        "content": "<p><del>Is there anyone here now that can't make 07-09?</del></p>",
        "id": 244715151,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714827\">said</a>:</p>\n<blockquote>\n<p>messages via rustup?</p>\n</blockquote>\n<p>Maybe we need a communication channel that users can join for occasions such as this</p>",
        "id": 244715217,
        "sender_full_name": "rylev",
        "timestamp": 1625238129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715217\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244714827\">said</a>:</p>\n<blockquote>\n<p>messages via rustup?</p>\n</blockquote>\n<p>Maybe we need a communication channel that users can join for occasions such as this</p>\n</blockquote>\n<p>or <code>rustc</code> could phone home.</p>",
        "id": 244715245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238146
    },
    {
        "content": "<p>(which is pretty much the most extreme solution I can imagine)</p>",
        "id": 244715276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238164
    },
    {
        "content": "<p>anything that needs to be actively joined will miss much of the audience, I think</p>",
        "id": 244715299,
        "sender_full_name": "mw",
        "timestamp": 1625238173
    },
    {
        "content": "<p>rustup though, <em>that</em> sounds like a good place to phone home</p>",
        "id": 244715325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238188
    },
    {
        "content": "<p>or cargo</p>",
        "id": 244715337,
        "sender_full_name": "mw",
        "timestamp": 1625238194
    },
    {
        "content": "<p>I ... I really like that</p>",
        "id": 244715338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238195
    },
    {
        "content": "<p>actually, by rustup, I mean its wrappers</p>",
        "id": 244715356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238205
    },
    {
        "content": "<p>the rustc and cargo installed by rustup could phone home</p>",
        "id": 244715371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238214
    },
    {
        "content": "<p>what do you mean by phone home exactly?</p>",
        "id": 244715385,
        "sender_full_name": "mw",
        "timestamp": 1625238220
    },
    {
        "content": "<p>query a service that tells them to spit out a message if there's an important user impacting event</p>",
        "id": 244715424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715299\">said</a>:</p>\n<blockquote>\n<p>anything that needs to be actively joined will miss much of the audience, I think</p>\n</blockquote>\n<p>This is true, but unlike Twitter it's a channel that can be actively joined only for the purposes of learning about serious issues with the compiler</p>",
        "id": 244715430,
        "sender_full_name": "rylev",
        "timestamp": 1625238240
    },
    {
        "content": "<p>i think users implicitly consent to some network activity for <code>rustup update</code>, but not for running the wrappers</p>",
        "id": 244715492,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625238254
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715424\">said</a>:</p>\n<blockquote>\n<p>query a service that tells them to spit out a message if there's an important user impacting event</p>\n</blockquote>\n<p>that sounds reasonable</p>",
        "id": 244715497,
        "sender_full_name": "mw",
        "timestamp": 1625238258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715492\">said</a>:</p>\n<blockquote>\n<p>i think users implicitly consent to some network activity for <code>rustup update</code>, but not for running the wrappers</p>\n</blockquote>\n<p>yeah, we might need to dig into expectations here</p>",
        "id": 244715531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238272
    },
    {
        "content": "<p>cargo accesses the network all the time, right?</p>",
        "id": 244715535,
        "sender_full_name": "mw",
        "timestamp": 1625238275
    },
    {
        "content": "<p>If we had an opt-in mechanism, the wrappers could catch all panics from rustc, cargo, rustfmt, etc and dump the output into GH issues or something.</p>",
        "id": 244715547,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238282
    },
    {
        "content": "<p>its possible that I need to revise the scope of what I think is reasonable.</p>",
        "id": 244715585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238293
    },
    {
        "content": "<p>this of course all ties into the telemetry stuff</p>",
        "id": 244715612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238298
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715547\">said</a>:</p>\n<blockquote>\n<p>If we had an opt-in mechanism, the wrappers could catch all panics from rustc, cargo, rustfmt, etc and dump the output into GH issues or something.</p>\n</blockquote>\n<p>right. this could be an answer for telemetry</p>",
        "id": 244715640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238315
    },
    {
        "content": "<p>querying a network service for important public announcements seems unobjectionable to me</p>",
        "id": 244715656,
        "sender_full_name": "mw",
        "timestamp": 1625238327
    },
    {
        "content": "<p>SO okay. I'm going o call the official meeting over. We'll have a followup meeting in a week</p>",
        "id": 244715671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238335
    },
    {
        "content": "<p>An opt-in model, while casting a smaller net, also ensures that we target an audience that wants to be informed</p>",
        "id": 244715673,
        "sender_full_name": "rylev",
        "timestamp": 1625238336
    },
    {
        "content": "<p>we can keep talking  of course, but I don't want people to feel like they have to stay</p>",
        "id": 244715697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238351
    },
    {
        "content": "<p>I need to run</p>",
        "id": 244715720,
        "sender_full_name": "mw",
        "timestamp": 1625238362
    },
    {
        "content": "<p>If that was the integration point, it could be a sperate package from rustup entirely which would mitigate a lot of the expectations from users I would think: users would explicitly install a tool to do the collection and reporting. There would be nothing \"in box\" for rustup or rustc.</p>",
        "id": 244715788,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715673\">said</a>:</p>\n<blockquote>\n<p>An opt-in model, while casting a smaller net, also ensures that we target an audience that wants to be informed</p>\n</blockquote>\n<p>I think an opt-in for rustc and an opt-out for <code>rustup update</code> (and cargo in general?) could be a reasonable middle ground</p>",
        "id": 244715800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238382
    },
    {
        "content": "<p>I'm skeptical about the effectiveness of a model that relies on opt-in exclusively</p>",
        "id": 244715894,
        "sender_full_name": "mw",
        "timestamp": 1625238429
    },
    {
        "content": "<p>for <em>sending</em> telemetry, i think we need to consider privacy very carefully</p>",
        "id": 244715934,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625238443
    },
    {
        "content": "<p>yes, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> has done some initial queries on this front</p>",
        "id": 244715966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238460
    },
    {
        "content": "<p>privacy is an utmost concern. Now that I think about it, it trumps safety, in terms of our values</p>",
        "id": 244716055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238487
    },
    {
        "content": "<p>which is... interesting</p>",
        "id": 244716110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238507
    },
    {
        "content": "<p>Completely agree. But you could argue that privacy <em>is</em> safety</p>",
        "id": 244716148,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625238527
    },
    {
        "content": "<p>/me had a \"Asimov's Zeroth Law of Robotics\" moment</p>",
        "id": 244716167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238534
    },
    {
        "content": "<p>So it's not that much of a stretch</p>",
        "id": 244716176,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625238538
    },
    {
        "content": "<p>IMO we first need to decide what kind of decisions we would use this data for. If the data is going to be used to support decisions about how frequently features are used by our users or how often users do <code>x</code> or what percent of users are on a certain platform or something then the data needs to be representative and I don't see how an opt-in mechanism can be representative. </p>\n<p>Which likely means it's not appropriate for those kinds of decisions. So we should figure out what we want to do with the data and work backwards from there.</p>",
        "id": 244716244,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238580
    },
    {
        "content": "<p>One thing of note though, is that â…” of the people that interacted with me would turn it on without any second thoughts.</p>",
        "id": 244716260,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625238586
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending</p>",
        "id": 244716262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238587
    },
    {
        "content": "<p>We probably should have a dedicated topic to discussing telemetry and privacy</p>",
        "id": 244716283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238599
    },
    {
        "content": "<p>to give it more visibliity</p>",
        "id": 244716326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244715894\">said</a>:</p>\n<blockquote>\n<p>I'm skeptical about the effectiveness of a model that relies on opt-in exclusively</p>\n</blockquote>\n<p>I'm unsure as well, but my gut says the more likely an entity is to opt-in, the more likely they are to really need to know when something is wrong with the compiler (e.g., businesses, established open source projects, etc. vs. casual users)</p>",
        "id": 244716343,
        "sender_full_name": "rylev",
        "timestamp": 1625238611
    },
    {
        "content": "<p>I've been meaning to write an RFC for it</p>",
        "id": 244716371,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625238626
    },
    {
        "content": "<p>If we make it easy for whole orgs to opt-in by default</p>",
        "id": 244716378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238629
    },
    {
        "content": "<p>then that may ease things</p>",
        "id": 244716388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238635
    },
    {
        "content": "<p>in terms of making it easy to follow organizational policy</p>",
        "id": 244716407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238648
    },
    {
        "content": "<p>Also to make it easy for orgs to <strong>opt out</strong> to make them more comfortable...</p>",
        "id": 244716443,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625238667
    },
    {
        "content": "<p>Perhaps more importantly: making it easy to opt-out via organizational policy.</p>",
        "id": 244716462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban KÃ¼ber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244716371\">said</a>:</p>\n<blockquote>\n<p>I've been meaning to write an RFC for it</p>\n</blockquote>\n<p>Honestly, the kinds of issues involved here, I wonder if we need support from the foundation</p>",
        "id": 244716467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238680
    },
    {
        "content": "<p>there may be legal concerns</p>",
        "id": 244716495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238691
    },
    {
        "content": "<p>and I ain't paying lawyers out of pocket. :)</p>",
        "id": 244716546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625238710
    },
    {
        "content": "<p>Given that compiler output can contain arbitrary chunks of user code, there could be a lot of issues with blindly collecting error reports from users.</p>",
        "id": 244716677,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625238758
    },
    {
        "content": "<p>We could also consider making it very easy to file a bug report</p>",
        "id": 244716929,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625238866
    },
    {
        "content": "<p>e.g. try to give a link that prefills all of the fields (including the ICE message)</p>",
        "id": 244716957,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625238882
    },
    {
        "content": "<p>I'm not sure if that could all fit in a query query parameter, though</p>",
        "id": 244716980,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625238898
    },
    {
        "content": "<p>I don't want rustc to collect anything that users can't inspect. Local collection and active submittion is something I've been thinking of</p>",
        "id": 244717280,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625239033
    },
    {
        "content": "<p>I would love to see the whole output from rustc over time for a single person, but that's very sensitive and would never be the default</p>",
        "id": 244717324,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625239066
    },
    {
        "content": "<p>But things like ICEs don't leak the same kind of info</p>",
        "id": 244717344,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625239079
    },
    {
        "content": "<p>well, usually</p>",
        "id": 244717412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239097
    },
    {
        "content": "<p>hm</p>",
        "id": 244717413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239098
    },
    {
        "content": "<p>I mean, it would have to be a pretty messed up ICE to leak sensitive stuff</p>",
        "id": 244717438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239115
    },
    {
        "content": "<p>It's always internal state of the compiler, rarely actual code, and if submittion is user led, then they can always audit what they are sending</p>",
        "id": 244717458,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625239127
    },
    {
        "content": "<p>I'm thinking of the case where the compiler emits some errors prior to ICEing</p>",
        "id": 244717461,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625239129
    },
    {
        "content": "<p>but then again, ICE's are not crafted carefully the way diagnostics are</p>",
        "id": 244717464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239130
    },
    {
        "content": "<p>It doesn't have to be naive stderr scraping</p>",
        "id": 244717510,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1625239150
    },
    {
        "content": "<p>About telemetry, how about a link in ICEs that allows the user to submit the ICE with a single click? Most terminals (or CI automation) make hyperlinks clickable. So something that submits some condensed information could be helpful and clearly opt-in. Something like version + top N symbols from the stack in some compressed form.</p>",
        "id": 244718049,
        "sender_full_name": "The 8472",
        "timestamp": 1625239370
    },
    {
        "content": "<p>hyperlink might have to be pretty long if we aren't going to be able to use a url shortening service (since the latter would also be a privacy issue)</p>",
        "id": 244718152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239421
    },
    {
        "content": "<p>For ICE privacy - we print the query stack, which leaks function/type names</p>",
        "id": 244718328,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625239506
    },
    {
        "content": "<p>I only meant the thread stack within the compiler, not the other parts of the ICE message. It's maybe a meager signal, but it would be easy to submit.</p>",
        "id": 244718454,
        "sender_full_name": "The 8472",
        "timestamp": 1625239566
    },
    {
        "content": "<p>Or user-controlled names could be anonymized.</p>",
        "id": 244718528,
        "sender_full_name": "The 8472",
        "timestamp": 1625239615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-07-02.3A.20fingerprints.20.2B.20planning/near/244718049\">said</a>:</p>\n<blockquote>\n<p>About telemetry, how about a link in ICEs that allows the user to submit the ICE with a single click? Most terminals (or CI automation) make hyperlinks clickable. So something that submits some condensed information could be helpful and clearly opt-in. Something like version + top N symbols from the stack in some compressed form.</p>\n</blockquote>\n<p>prior art: something like Debian <code>reportbug</code> does? Or Ubuntu's bug reporting tool? Something completely actionable by the user without any opt-in prior decision?<br>\n\"Telemetry\" has unfortunately gained a bad rep due to how some companies are misusing this otherwise useful tool so I can easily see an uproar of people against it /regardless/, no matter how clearly or privacy-consciously implemented<br>\n(sorry, just following the conversation)</p>",
        "id": 244718756,
        "sender_full_name": "apiraino",
        "timestamp": 1625239725
    },
    {
        "content": "<blockquote>\n<p>I can easily see an uproar of people against it /regardless/</p>\n</blockquote>\n<p>Yep. Any action we take here has to be very careful</p>",
        "id": 244719003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239855
    },
    {
        "content": "<p>but based on this experience with the fingerprinting issue, I think we've hit a point where the Return-on-Investment looks really good</p>",
        "id": 244719059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239885
    },
    {
        "content": "<p>in other words: We've been getting by making guesses in the absence of this data, or using proxies for it</p>",
        "id": 244719101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239904
    },
    {
        "content": "<p>but its making less and less sense to continue doing so, from my Point of View</p>",
        "id": 244719137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625239922
    },
    {
        "content": "<blockquote>\n<p>KLUv/WRYI1UnAJLQNyYAreoBZlM6McFhPy7oq1rv+1m0vjQLCdTYklLC3Ird3vv/v/rDCwqAprkoCsWPsY1M/Hig8jwTc8QbT46EiSfR471OSNZdgitUuTbMLLRJRJ1n11IkDaNY7K2oLLMEEmbUWi/V36vBDGbxX3kU/AJZiwZhl+OZmOWMb1I5pZRRSunQKSPUruxCHgdCE0oYIYQNn0R7dmzY3a8jKsv1xRqubbvvACFF3B9rowfwPSfwHKr9Sw+XyiJ07Rz3iJeqR3gYuCsYhrcspPqF6N9pSaTuONIoaDTLopw2DbiU5T+BiaixqptmDFEIQhBiCDHFnNUDcngwh9EkRiEICQwRIEIEihhCBEZACCGCIYEaqoUWA2lbiYN7zZG6dKjidh37PA1PuHlXpD0hT3Mo2xVkYeiD44A1Nt0xDEHrs2DFGf4TqA4R7aDMOvHQZ/WYr/nwGcIxzXS+k2UcdftfpVx4ZOBtkuAOB1qjAlsT0hyfn/xdpAfLYUC8XZT2mLHdYyDU2XuaAkQeVesyb/EBSyZRTWyzvLsk8dC3+mjzcQOUq3ZBHRhH3u4QJ498+1ZlSL+WbEt5xnte6xdTO66mBhA/IkFxgK+lmoXWQwt4ZUCXrsNIApIv7zsGN9DBfJcGeofs8zBbhVaUBQhj8wEtezoCQiUqUzGapwyY3QcpfBDzg2P3NEDCRPpVU83KCkBcEcnVfSSGsdaso+8ahkzyBI/IIR4HC+eJtYoWAkQ5yUjNfZZaguH/zNBKy7l0g6rI0R8YxObd0g6wgNXoAv5FMKP6dvGWUP2AjawsBQUxJeLz911p0ukYFxJG+JoyzBIQsyN+parlZi2QYXxWsEWhwJGLAUsl8SoRC4n5iAZ8l3dQ5LHOjc71Ckq+5yQ9Fi6ijX+pA9U7zwbQNyZuZ03NPPdo63r4T9kSTUYsKxtwGikDgQ+cBhw+joouRtVv1kMkKEpfgkHYqRl9IdDKO7kjv6oz20tDwnvK6xx14wMnoBJQCagEVAKq/uSfR555SQD1TSog/IciuqALhCi0316ishSaaFCJHQwQLL6HnH3ogDlut5lRECGWUWTP2BUmIFd2oMl8zIMj9UDQgeMBRwIcqyaGZoVMralNidepRwJTvBmLhiHU3H0c6Jq9kQyAHUfZA9xcgZLacGft+VPmaqF8l4RGL+HnC92hfL3ntl8PJg2IVDbciOE0iJEy7gBLTMBBMwxtD+BBqZ/mRTnIF0StiWACKeatuwRn06BU/4j4BIGfPYDMXOsmxIcPEo9HUfTjj4OEYBNRb5+0dtHSx3c8CITcVneMP6t70Xkm5OMlKvUBLgJnhDTXZIZSmvGjdcI8JkR1TP4NtCxK/JDvmii/ZsmF5uC7+mCkl5636HZRrcHJBkcMzhuOUvcccsRAZvcQ5GQE/04/1y5qEftVDtKDADHu/ZXCYHeR/CzsofPoXBYK0muVTnZZWnrdqmUvCTqlrq32I80bTtAUNLISuxQCmWXM2cRrsIqdSpdr4fYi56bKBE8I1OvZ+J1nSyoiXzduUxZkoyw4cYY8DnSI4rYQlCdYchhqD0FbCqE7BfoqtHPDvCnHQRoc2NoEXCausp/i9CUB/VFFiv6FbAD6EqmnW6kEz6b8QOc4ehrFHULHOQkObDHdUwkPb5wqrOsA+iZ9HvIDSYByDVVtgQJo/hix</p>\n</blockquote>\n<p>Built a zstd dictionary of a bunch of ICEs on github, compressed a sample outside the training set, base64enc. ~1700 characters, 6  lines on my terminal.<br>\nGetting symbol addresses and doing the demangling on the server side would probably be more compact but only work for official builds.</p>",
        "id": 244724512,
        "sender_full_name": "The 8472",
        "timestamp": 1625242190
    },
    {
        "content": "<blockquote>\n<p>[â€¦] ~1700 characters, 6 lines on my terminal.</p>\n</blockquote>\n<p>(Your terminal is a lot wider than mine!)</p>",
        "id": 244742141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625251110
    },
    {
        "content": "<p>Just an extra data point... I never even new there was a problem with ices until I happened to see the point release. I was under the (possibly unfounded) impression that a large minority of users were seeing ices, so it felt a bit frustrating that incremental was disabled for everyone and remained off in 1.53. I would have expected it to remain on, while emiting a nice message to those who get the ice about how to disable incr comp.</p>",
        "id": 244810411,
        "sender_full_name": "mark-i-m",
        "timestamp": 1625324928
    },
    {
        "content": "<p>That said, I agree with pnkfelix that a key factor here was a lack of information about just how frequent the problem actually is, and telemetry would help a lot with that. I think whatever telemetry solution needs to be completely opt-in, though, and there should never be network traffic without either a prior opt in or an explicit prompt to the user. People don't expect tools like compilers to use the network, and IMHO they should not.</p>",
        "id": 244810587,
        "sender_full_name": "mark-i-m",
        "timestamp": 1625325145
    }
]