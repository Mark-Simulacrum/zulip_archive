[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h40<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/1UfGXIz4Sdy0EwNjcxarnw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>  by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> : anything to share?</li>\n<li>@<em>WG-polymorphization</em> by <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span></li>\n</ul>",
        "id": 248469239,
        "sender_full_name": "apiraino",
        "timestamp": 1628166114
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , triage meeting starting now. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 248481053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172130
    },
    {
        "content": "<p>We’ll start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 248481079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172145
    },
    {
        "content": "<ul>\n<li>we do not have any steering meeting tomorrow. (Our next scheduling steering meeting will be on <time datetime=\"2021-08-20T14:00:00Z\">2021-08-20T10:00:00-04:00</time></li>\n</ul>",
        "id": 248481227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172228
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"394977\">@Doc Jones</span> has announced preparation work for a “Glorious Rust Writing Club”, <a href=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/GloRuWriClu/near/248341566\">GloRuWriClu</a>; their first focus will be on the rustc dev guide! As part of that, we want to try to do an audit of the compiler team expert map in the short term.</li>\n</ul>",
        "id": 248481497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172345
    },
    {
        "content": "<p>I'm out on PTO from the 7th to the 15th. I'll have access to Zulip and GitHub but I probably won't be paying much attention to pings. If you need to get a hold of me during that time, please DM me. I will try to keep tabs on PRs assigned to me and re-assign as I have time.</p>",
        "id": 248481612,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628172385
    },
    {
        "content": "<ul>\n<li>we had a nice little <a href=\"https://twitter.com/CryZe107/status/1422921862561116164\">false alarm</a> where it was thought that we had a noalias bug in Rust 1.54.0.</li>\n</ul>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/CryZe107/status/1422921862561116164\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/436d3393841a2bbd0ff402b3d460bee3857183a9/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f333137373139363436342f64326563613838313837636130316362386435666165303033383265653537375f6e6f726d616c2e706e67\"></a><p>Alright, so it turns out cargo silently drops RUSTFLAGS sometimes and that basically made it such that when I pass `-Z mutable-noalias=no` that other crucial RUSTFLAGS don't get passed, and thus setting is to `no` did make the bug disappear, but for unrelated reasons.</p><span>- CryZe (@CryZe107)</span></div></div>",
        "id": 248481903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172506
    },
    {
        "content": "<h3>MCPs/FCPs</h3>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Make AST-&gt;HIR lowering incremental\" <a href=\"https://github.com/rust-lang/compiler-team/issues/452\">compiler-team#452</a></li>\n</ul>\n</li>\n</ul>",
        "id": 248481962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172544
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a> (last comments: GH 6m ago, Zulip 20d ago)</li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comments: GH 6m ago, Zulip 25d ago)</li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a> (last comments: GH 55d ago, Zulip 41d ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comments: GH 49d ago, Zulip none)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comments: GH 34d ago, Zulip 45d ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last comments: GH 28d ago, Zulip 15d ago)</li>\n<li>\"Make <code>resolve_instance</code> fallible\" <a href=\"https://github.com/rust-lang/compiler-team/issues/449\">compiler-team#449</a> (last comments: GH 10d ago, Zulip none)</li>\n<li>\"Reproducible command line + determinism\" <a href=\"https://github.com/rust-lang/compiler-team/issues/450\">compiler-team#450</a> (last comments: GH 9d ago, Zulip 6d ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 248481982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> did you gather those zulip timestamps by hand?</p>",
        "id": 248482009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172568
    },
    {
        "content": "<p>yes :)<br>\nedit: also to test the UI and see if it looks fine</p>",
        "id": 248482034,
        "sender_full_name": "apiraino",
        "timestamp": 1628172579
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a> </li>\n<li>\"Preserve, clarify, and extend debug information\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a></li>\n</ul>\n</li>\n</ul>",
        "id": 248482037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172580
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Don't abort compilation after giving a lint error\" <a href=\"https://github.com/rust-lang/compiler-team/issues/447\">compiler-team#447</a> </li>\n<li>\"Rename various internal things\" <a href=\"https://github.com/rust-lang/compiler-team/issues/451\">compiler-team#451</a> </li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">compiler-team#443</a></li>\n</ul>\n</li>\n</ul>",
        "id": 248482089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172601
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Stabilize <code>const_fn_transmute</code>, <code>const_fn_union</code>\" <a href=\"https://github.com/rust-lang/rust/pull/85769\">rust#85769</a> </li>\n<li>\"Associated functions that contain extern indicator or have <code>#[rustc_std_internal_symbol]</code> are reachable\" <a href=\"https://github.com/rust-lang/rust/pull/86492\">rust#86492</a> </li>\n<li>\"Allow reifying intrinsics to <code>fn</code> pointers.\" <a href=\"https://github.com/rust-lang/rust/pull/86699\">rust#86699</a> </li>\n<li>\"Stabilize <code>arbitrary_enum_discriminant</code>\" <a href=\"https://github.com/rust-lang/rust/pull/86860\">rust#86860</a></li>\n</ul>\n</li>\n</ul>",
        "id": 248482155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172613
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 248482266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172660
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>:</p>\n<blockquote>\n<p><a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/wg-mir-opt.20is.20out.20of.20review.20capacity\">wg-mir-opt is out of review capacity</a>. We have several open PRs but no one to review them. We could move to a more permissive model where we add new mir opts that are too large to review properly (at present) into the unsound mir opt list (or at least mir opt level 4). This way they don't bitrot and people can try them, but quality suffers.</p>\n</blockquote>",
        "id": 248482275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172665
    },
    {
        "content": "<p>(that note from oli might tie in nicely with our planned steering meeting for <time datetime=\"2021-08-20T14:00:00Z\">2021-08-20T10:00:00-04:00</time> )</p>",
        "id": 248482326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172696
    },
    {
        "content": "<p>@wg-polymorphization by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>:</p>\n<blockquote>\n<p>There's no update from the polymorphization working group. Everyone involved is working on other things. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> is starting a new job in September where he'll be working on rustc and should be able to contribute more soon!</p>\n</blockquote>",
        "id": 248482342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172702
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 248482363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172715
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Always preserve sub-obligations in the projection cache\" <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-29.20.2354818/near/247588561\">discussed last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-29.20.2354818/near/247588679\">comments</a> this should reviewed &amp; merged on nightly before we talk about beta backports</li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-29.20.2354818/near/247588695\">comments</a>: also premature to discuss beta backporting so let's keep it nominated as a reminder</li>\n</ul>\n</li>\n</ul>",
        "id": 248482431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172729
    },
    {
        "content": "<p>Whoa, congrats <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 248482442,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628172734
    },
    {
        "content": "<p>looks like we’re in the same situation as last week for <a href=\"https://github.com/rust-lang/rust/issues/85868\">rust#85868</a></p>",
        "id": 248482476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172751
    },
    {
        "content": "<p>except that I failed to follow through on finding an alternate reviewer</p>",
        "id": 248482553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172785
    },
    {
        "content": "<p>this is what happens when I have a section in my action items list that explicitly says no deadline</p>",
        "id": 248482639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172830
    },
    {
        "content": "<p>I would really like to get that merged so I'm willing to review but I'm also not an expert in that code.</p>",
        "id": 248482703,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628172848
    },
    {
        "content": "<p>We don’t need to decide now what to do with it. I will up prioirity on finding reviewer, though</p>",
        "id": 248482802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-05.20.2354818/near/248482275\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span> by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span>:</p>\n<blockquote>\n<p><a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/wg-mir-opt.20is.20out.20of.20review.20capacity\">wg-mir-opt is out of review capacity</a>. We have several open PRs but no one to review them. We could move to a more permissive model where we add new mir opts that are too large to review properly (at present) into the unsound mir opt list (or at least mir opt level 4). This way they don't bitrot and people can try them, but quality suffers.</p>\n</blockquote>\n</blockquote>\n<p>not sure if offtopic to reply but I keep thinking there are existing optimizations I need to try to review at some point, last time I peeked I saw a few patterns which seemed dangerous :/</p>",
        "id": 248482811,
        "sender_full_name": "eddyb",
        "timestamp": 1628172908
    },
    {
        "content": "<p>Re PR with perf regressions, is <em>any</em> of the regressed tests representative?</p>",
        "id": 248482928,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1628172963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> you speak of PR <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> ?</p>",
        "id": 248482979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628172980
    },
    {
        "content": "<p>The ones I've looked at where sub second</p>",
        "id": 248482989,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1628172984
    },
    {
        "content": "<p>Yes</p>",
        "id": 248482994,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1628172986
    },
    {
        "content": "<p>But didn't check all</p>",
        "id": 248483009,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1628172992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I think any and all reviews of MIR opts would be appreciated! It would probably be best to open issues for anything you find.</p>",
        "id": 248483041,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628173004
    },
    {
        "content": "<p>yeah I just wish I had time for it :P</p>",
        "id": 248483063,
        "sender_full_name": "eddyb",
        "timestamp": 1628173016
    },
    {
        "content": "<p>(between SPIR-V and MIR, I <em>really</em> wish I had more transformation-friendly IRs to work with, <em>sigh</em>)</p>",
        "id": 248483130,
        "sender_full_name": "eddyb",
        "timestamp": 1628173049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> there was some related discussion in <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Absolute.20performance.20numbers\">https://rust-lang.zulipchat.com/#narrow/stream/247081-t-compiler.2Fperformance/topic/Absolute.20performance.20numbers</a></p>",
        "id": 248483287,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628173107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  i think in the end the soundness argument is the important one to make.</p>",
        "id": 248483406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173176
    },
    {
        "content": "<p>Btw it looks like <a href=\"https://github.com/rust-lang/rust/issues/87483\">#87483</a> was missed in the agenda</p>",
        "id": 248483410,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628173179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> its marked as beta-accepted, let me see what happened</p>",
        "id": 248483523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I think <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> mentioned that in <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-29.20.2354818/near/247588881\">last week's triage meeting</a>.</p>",
        "id": 248483540,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628173220
    },
    {
        "content": "<p>Oh okay!</p>",
        "id": 248483555,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628173227
    },
    {
        "content": "<p>(I didn't see it on last weeks agenda either, and labels were applied 6 days ago, so just wanted to make sure it didn't get missed)</p>",
        "id": 248483611,
        "sender_full_name": "Jack Huey",
        "timestamp": 1628173262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> no, I definitely appreciate it. <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> did mention it, but we didn’t discuss it at that time</p>",
        "id": 248483724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173313
    },
    {
        "content": "<p>(at the very least, we need to ensure such things are on the announcements)</p>",
        "id": 248483981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173394
    },
    {
        "content": "<p>anyway, we’ll leave <a href=\"https://github.com/rust-lang/rust/issues/85868\">rust#85868</a> beta-nominated, like last week</p>",
        "id": 248484221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173497
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Update compiler_builtins to fix i128 shift/mul on thumbv6m\" <a href=\"https://github.com/rust-lang/rust/pull/87633\">rust#87633</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span></li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, patch seems harmless (see <a href=\"https://github.com/rust-lang/rust/pull/87633#issuecomment-890556479\">comment</a>)</li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/issues/86063\">rust#86063</a>, a bug in LLVM expansion of 128-bit shifts (see <a href=\"https://github.com/rust-lang/rust/issues/86063#issuecomment-886555639\">comment</a>)</li>\n<li>slipped into stable but we can still backport to beta</li>\n</ul>\n</li>\n</ul>",
        "id": 248484246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is <a href=\"https://github.com/rust-lang/rust/issues/87633\">rust#87633</a> meant to also be stable-nominated?</p>",
        "id": 248484348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173557
    },
    {
        "content": "<p>it can be, I just didn't bother</p>",
        "id": 248484480,
        "sender_full_name": "simulacrum",
        "timestamp": 1628173602
    },
    {
        "content": "<p>So I agree that this patch seems harmless</p>",
        "id": 248484528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173632
    },
    {
        "content": "<p>but it makes me wonder: do we need to worry about this more broadly?</p>",
        "id": 248484571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173649
    },
    {
        "content": "<p>I guess the whole point is that fixing this in compiler-builtins should fix it for anyone who is doing 128-bit shifts via the <code>&lt;&lt;</code> operator?</p>",
        "id": 248484629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173681
    },
    {
        "content": "<p>and also: do we have tests?</p>",
        "id": 248484756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173731
    },
    {
        "content": "<p>this PR doesn’t add any regression test AFAICT</p>",
        "id": 248484794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173753
    },
    {
        "content": "<p>It only affects thumbv6m, which is a tiny microcontroller target</p>",
        "id": 248484799,
        "sender_full_name": "Amanieu",
        "timestamp": 1628173757
    },
    {
        "content": "<p>That's the only target where LLVM actually generates a libcall for i128 shifts</p>",
        "id": 248484856,
        "sender_full_name": "Amanieu",
        "timestamp": 1628173790
    },
    {
        "content": "<p>okay, so its not realistic to regression test it in rustc itself, because we won’t test that target?</p>",
        "id": 248484876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173801
    },
    {
        "content": "<p>we can do codegen tests, but a run-pass one would suit this better.</p>",
        "id": 248484985,
        "sender_full_name": "nagisa",
        "timestamp": 1628173834
    },
    {
        "content": "<p>Codegen tests won't show any difference though, the fix is in compiler-builtins.</p>",
        "id": 248485030,
        "sender_full_name": "Amanieu",
        "timestamp": 1628173853
    },
    {
        "content": "<p>we should at least double-check that we <em>have</em> tests of 128-bit shifts</p>",
        "id": 248485059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173863
    },
    {
        "content": "<p>Even if our CI won’t cover this target</p>",
        "id": 248485085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173871
    },
    {
        "content": "<p>Pretty sure I exhaustively tested i128 ops back when they were implemented…</p>",
        "id": 248485116,
        "sender_full_name": "nagisa",
        "timestamp": 1628173886
    },
    {
        "content": "<p>having said that, I think we can beta approve this</p>",
        "id": 248485123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173890
    },
    {
        "content": "<p>how about <img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> stable-nomination for \"Update compiler_builtins to fix i128 shift/mul on thumbv6m\" <a href=\"https://github.com/rust-lang/rust/issues/87633\">rust#87633</a></p>",
        "id": 248485132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173897
    },
    {
        "content": "<p>its not a tier-1 target</p>",
        "id": 248485323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628173971
    },
    {
        "content": "<p>i128 is super rare in embedded work anyhow.</p>",
        "id": 248485365,
        "sender_full_name": "nagisa",
        "timestamp": 1628173989
    },
    {
        "content": "<p>I don't have an issue backporting but it seems unlikely we'd actually create a point release for this.</p>",
        "id": 248485376,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628173993
    },
    {
        "content": "<p>I would like us to try to be clearer about how thinking on that front. I.e.: I’m not suggesting we create a point release for this. That’s not what we decide here, from my perspective</p>",
        "id": 248485432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174025
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/numbers-arithmetic/i128.rs#L76\">https://github.com/rust-lang/rust/blob/master/src/test/ui/numbers-arithmetic/i128.rs#L76</a> we have _a_ shift in our tests.</p>",
        "id": 248485461,
        "sender_full_name": "nagisa",
        "timestamp": 1628174038
    },
    {
        "content": "<p>from my perspective, what we decide here is: If a point release <em>were to be created</em>, would we be comfortable if this patch were backported into it?</p>",
        "id": 248485518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174048
    },
    {
        "content": "<p>Yeah, that's fair.</p>",
        "id": 248485550,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1628174062
    },
    {
        "content": "<p>(to be fair, I think we as a team re-litigates that point on every stable backport nomination we have. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 248485630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174095
    },
    {
        "content": "<p>anyway its a decision that isn’t worth spending more meeting time on.</p>",
        "id": 248485811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174173
    },
    {
        "content": "<p>I'm gonna vote <span aria-label=\"stop\" class=\"emoji emoji-1f91a\" role=\"img\" title=\"stop\">:stop:</span> because I don't think this bug is high impact enough to warrant it.</p>",
        "id": 248485829,
        "sender_full_name": "nagisa",
        "timestamp": 1628174184
    },
    {
        "content": "<p>okay. that’s the kind of action I like to see. :)</p>",
        "id": 248485865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174200
    },
    {
        "content": "<p>but yeah, I’m sort of in the same boat. It just isn’t even worth the hassle of a stable backport.</p>",
        "id": 248485914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174225
    },
    {
        "content": "<p>next up</p>",
        "id": 248485950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174241
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 248485952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174242
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 248485966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174249
    },
    {
        "content": "<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/rust/pull/84373\">rust#84373</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> </li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n<li><span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> opened <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">MCP #443</a> (currently in closing FCP phase)</li>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246853451\">discussed last week</a>, <span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> could have a discussion about this after the 1.54 release and the next beta cut</li>\n</ul>\n</li>\n</ul>",
        "id": 248485992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174259
    },
    {
        "content": "<p>I’ll make an action item for myself to schedule wg-incr-comp meeting to discuss this</p>",
        "id": 248486186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174335
    },
    {
        "content": "<p>and I’ll schedule it by monday august 9</p>",
        "id": 248486207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174345
    },
    {
        "content": "<ul>\n<li>\"Wrap libraries in linker groups, allowing backwards/circular references\" <a href=\"https://github.com/rust-lang/rust/pull/85805\">rust#85805</a><ul>\n<li>discussed last week</li>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> commented it could be potentially troublesome</li>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <a href=\"https://github.com/rust-lang/rust/pull/85805#issuecomment-868825690\">mentioned to postpone for a few months</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> suggested to draft a MCP to boost signal for this PR</li>\n</ul>\n</li>\n</ul>",
        "id": 248486248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174367
    },
    {
        "content": "<p>I talked to josh triplett about this</p>",
        "id": 248486269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174380
    },
    {
        "content": "<p>Josh said \"If we're going to make progress, I think it'd take a design meeting. I'm up for that if there's a desire to move this forward, but I'd want to know that it isn't just hard-blocked on objections from team members.” Also, Josh emphasized multiple times that they don’t want to just steamroll this through. If people have problems with it, then Josh would prefer to just drop it (i.e. favor project cohesion over their particular suggestion).</p>",
        "id": 248486525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174484
    },
    {
        "content": "<p>Josh also doesn’t object to deferring this. Its somthing Josh cares about, but they don’t have a ton of spare time to drive it at the moment.</p>",
        "id": 248486718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174545
    },
    {
        "content": "<p>I probably should have asked Josh what they would think about exposing this as an opt-in feature one can request for particular libraries, rather than just switching it on blindly for everything</p>",
        "id": 248486850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174614
    },
    {
        "content": "<p>I guess in some ways <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> ’s suggestions are aligned with that idea</p>",
        "id": 248486996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174676
    },
    {
        "content": "<p>(and at the same time, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> ’s feedback about how this will make the semantics more uniform across multiple platforms is an argument for turning it on by default for everything…)</p>",
        "id": 248487084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174714
    },
    {
        "content": "<p>Anyway, what I really want is to figure out how to get this off the weekly agenda</p>",
        "id": 248487146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174733
    },
    {
        "content": "<p>I think we need infrastructure for “revisit in 12 weeks” or something</p>",
        "id": 248487256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174764
    },
    {
        "content": "<p>(where a deferred issue/PR gets auto-nominated when the alarm goes off)</p>",
        "id": 248487304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174780
    },
    {
        "content": "<p>I’m going to leave the tags as they are for now</p>",
        "id": 248487410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174829
    },
    {
        "content": "<p>(i.e. still marked block-on-team)</p>",
        "id": 248487426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174836
    },
    {
        "content": "<p>I'll remove that from the agenda and add it again in a couple of weeks (~ \"in 12 weeks\")</p>",
        "id": 248487464,
        "sender_full_name": "apiraino",
        "timestamp": 1628174851
    },
    {
        "content": "<ul>\n<li>\"Ignore comments in tidy-filelength\" <a href=\"https://github.com/rust-lang/rust/pull/87462\">rust#87462</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"363998\">@Ibraheem Ahmed</span> </li>\n<li>PR goal seems to be to avoid nagging on long files if the length is primarily due to comment lines</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/87462#issuecomment-890577887\">suggests</a> an MCP could be a better fit</li>\n</ul>\n</li>\n</ul>",
        "id": 248487496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174861
    },
    {
        "content": "<p>(re: revisit in 12 weeks, should we be having a separate standing meeting a few days after every stable release?)</p>",
        "id": 248487665,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1628174914
    },
    {
        "content": "<p>maybe</p>",
        "id": 248487686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174921
    },
    {
        "content": "<p>what do people think about an MCP for <a href=\"https://github.com/rust-lang/rust/issues/87462\">rust#87462</a> ?</p>",
        "id": 248487746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174942
    },
    {
        "content": "<p>I’m sort of inclined to just take it</p>",
        "id": 248487760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174946
    },
    {
        "content": "<p>an important point is that its not removing warnings about long <em>lines</em>. Its removing warnings, effectively, about having <em>many</em> lines</p>",
        "id": 248487820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174973
    },
    {
        "content": "<p>To some extent my perspective is that the file length check is unclear in terms of purpose; I'd be fine just dropping it.</p>",
        "id": 248487823,
        "sender_full_name": "simulacrum",
        "timestamp": 1628174974
    },
    {
        "content": "<p>that’s another way to go</p>",
        "id": 248487841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174980
    },
    {
        "content": "<p>I assume the file length check is to encourage people to break their code up into submodules</p>",
        "id": 248487903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628174998
    },
    {
        "content": "<p>but I’m not sure if tidy is the way to go to get that</p>",
        "id": 248487970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175008
    },
    {
        "content": "<p>but we can decide to remove the file length check later</p>",
        "id": 248488011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175022
    },
    {
        "content": "<p>for now, I think we can just take <a href=\"https://github.com/rust-lang/rust/issues/87462\">rust#87462</a></p>",
        "id": 248488030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175029
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I'm not opposed to just r+'ing it</p>",
        "id": 248488041,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175032
    },
    {
        "content": "<p>Yeah. We can always put it back in if someone realizes there’s a motivation</p>",
        "id": 248488089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175049
    },
    {
        "content": "<p>splitting up some of the files was pretty annoying indeed.</p>",
        "id": 248488127,
        "sender_full_name": "nagisa",
        "timestamp": 1628175063
    },
    {
        "content": "<p>Ok, will r+, and then if folks want to propose dropping the check they can do that (or readding it etc).</p>",
        "id": 248488174,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175085
    },
    {
        "content": "<p>which are usually long because they are copy paste stuff or have some sort of structure that repeats a lot anyway...</p>",
        "id": 248488178,
        "sender_full_name": "nagisa",
        "timestamp": 1628175086
    },
    {
        "content": "<p>well, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> , those are instances where I <em>would</em> want someone to think about how to abstract that repeated structure</p>",
        "id": 248488248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175114
    },
    {
        "content": "<p>I think mostly about intrinsics or lint lists or similar.</p>",
        "id": 248488360,
        "sender_full_name": "nagisa",
        "timestamp": 1628175136
    },
    {
        "content": "<p>so sure, the warning is annoying. but those sound like cases where I’d like someone to at least be forced to reconsider, and explicitly add the <code>// ignore-tidy-filelength</code> or whatever it is</p>",
        "id": 248488391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175153
    },
    {
        "content": "<p>/me thinks about <code>trait Iterator</code>, too</p>",
        "id": 248488400,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175157
    },
    {
        "content": "<p>okay moving on</p>",
        "id": 248488449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175177
    },
    {
        "content": "<p>but yeah, I think pushing for \"it's actually totally OK to add the ignore\" may be good too.</p>",
        "id": 248488459,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175180
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">81 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">54 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 1 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 44 P-high, 81 P-medium, 9 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 248488484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175191
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-29.20.2354818/near/247590391\">suggested</a> that we could downgrade after evaluating the bug reporting after the release of 1.54</li>\n</ul>\n</li>\n</ul>",
        "id": 248488507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175202
    },
    {
        "content": "<p>hey, things have been going well on this front, right?</p>",
        "id": 248488532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175212
    },
    {
        "content": "<p>I think we can downgrade now, does that sound good to you, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ?</p>",
        "id": 248488553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175222
    },
    {
        "content": "<p>Since we re-enabled and saw no(?) reports of problems so far, I definitely think it is no longer P-critical.</p>",
        "id": 248488640,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175246
    },
    {
        "content": "<p>I agree</p>",
        "id": 248488672,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1628175257
    },
    {
        "content": "<p>okay lets downgrade to P-high</p>",
        "id": 248488676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175258
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 248488715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175272
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 248488728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175277
    },
    {
        "content": "<ul>\n<li>\"<code>match</code> an <code>std::cmp::Ordering</code> generates less optimized code in nightly\" <a href=\"https://github.com/rust-lang/rust/issues/86511\">rust#86511</a> <ul>\n<li>the idea was to offer mentorship to <span class=\"user-mention\" data-user-id=\"429314\">@Simon Chan</span> to drive the issue investigation (maybe leave a message in the issue?)</li>\n</ul>\n</li>\n</ul>",
        "id": 248488757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175286
    },
    {
        "content": "<p>this is mislabeled</p>",
        "id": 248488829,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175321
    },
    {
        "content": "<p>it's in stable already</p>",
        "id": 248488835,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175324
    },
    {
        "content": "<p>okay</p>",
        "id": 248488865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175338
    },
    {
        "content": "<p>I had an action item to write mentorship comment</p>",
        "id": 248488891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175352
    },
    {
        "content": "<p>let me put a deadline on that</p>",
        "id": 248488901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175355
    },
    {
        "content": "<p>not sure it merits p-high, otherwise, though.</p>",
        "id": 248488908,
        "sender_full_name": "simulacrum",
        "timestamp": 1628175358
    },
    {
        "content": "<p>once the mentorship note is in place, we should downgrade</p>",
        "id": 248488997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175392
    },
    {
        "content": "<p>I haven't tested my suggestion but it should work from what I remember of that code<br>\n(the main difference right now is \"needed\" blocks are collected on the fly, so the order might slightly differ from RPO, but the combined set should be identical, at least for that function)</p>",
        "id": 248489026,
        "sender_full_name": "eddyb",
        "timestamp": 1628175403
    },
    {
        "content": "<ul>\n<li>\"ICE: unexpected concrete region in borrowck: ReStatic\" <a href=\"https://github.com/rust-lang/rust/issues/87455\">rust#87455</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> reopened and <a href=\"https://github.com/rust-lang/rust/issues/87455#issuecomment-889839189\">comments</a> that this needs a backport</li>\n</ul>\n</li>\n</ul>",
        "id": 248489051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175415
    },
    {
        "content": "<p>this will get addressed when the above backport happens</p>",
        "id": 248489126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175451
    },
    {
        "content": "<p>(its the unilaterally approved backport that we discussed up above)</p>",
        "id": 248489168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175468
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-08-03.md\">triage logs for 2021-08-03</a></p>\n</blockquote>\n<p>Quiet week for performance, with no large changes. Regressions are limited to<br>\njust a few benchmarks.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=998cfe5aad7c21eb19a4bca50f05a13354706970&amp;end=3354a44d2fa8d5ba6b8d6b40d2596de2c8292ec1&amp;absolute=false&amp;stat=instructions%3Au\">998cfe5aad7c21eb19a4bca50f05a13354706970..3354a44d2fa8d5ba6b8d6b40d2596de2c8292ec1</a></p>\n<p>2 Regressions, 0 Improvements, 0 Mixed; 1 of them in rollups</p>",
        "id": 248489200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175482
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/87640\">#87640</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ef9549b6c0efb7525c9b012148689c8d070f9bc0&amp;end=1f0a591b3a5963a0ab11a35dc525ad9d46f612e4&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>incr-unchanged</code> builds of <code>html5ever-check</code>)</li>\n<li>Regressions across a few benchmarks, without an obvious cause. May be due to<br>\n<a href=\"https://github.com/rust-lang/rust/pull/87385\">#87385</a>, but logs don't appear<br>\n  to show the warning in those crates at a cursory check. Tagged with<br>\n  perf-regression for further investigation.</li>\n</ul>\n<p>Implement advance_by, advance_back_by for slice::{Iter, IterMut} <a href=\"https://github.com/rust-lang/rust/issues/87387\">#87387</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b289bb7fdfcb6f54d825927ab9b5722cabc2a140&amp;end=6b0b07d41f07e1ba5808693d900903499ccf7a32&amp;stat=instructions:u\">instruction counts</a> (up to 1.6% on <code>full</code> builds of <code>regex-opt</code>)</li>\n<li>Unclear cause, likely LLVM-related.</li>\n</ul>",
        "id": 248489260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175495
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>None this week.</li>\n</ul>\n<h4>Mixed</h4>\n<ul>\n<li>None this week.</li>\n</ul>",
        "id": 248489272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175502
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87244\">#87244 Better diagnostics with mismatched types due to implicit static lifetime</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86698\">#86698 Move OnDiskCache to rustc_query_impl.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to 🛡️ against 💥 💥-payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n</ul>",
        "id": 248489289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175510
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 248489308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175522
    },
    {
        "content": "<ul>\n<li>\"Binary size is significant increased from <code>1.46.0</code> to <code>1.51.0</code>\" <a href=\"https://github.com/rust-lang/rust/issues/86610\">rust#86610</a><ul>\n<li>Added an action item on <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw\">HackMD</a></li>\n</ul>\n</li>\n</ul>",
        "id": 248489322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175528
    },
    {
        "content": "<p>The aforementioned action item, to add binary size tracking to perf.rlo, has no owner at moment</p>",
        "id": 248489385,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175561
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 248489640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175659
    },
    {
        "content": "<p>Okay that’s the whole agenda!</p>",
        "id": 248489663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175666
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 248489688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628175675
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/f45z2GqQTNW9QH0wO4lTEg?view\">https://hackmd.io/f45z2GqQTNW9QH0wO4lTEg?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 248489999,
        "sender_full_name": "apiraino",
        "timestamp": 1628175802
    },
    {
        "content": "<blockquote>\n<p>which are usually long because they are copy paste stuff or have some sort of structure that repeats a lot anyway...</p>\n</blockquote>\n<p>Often comments on methods which are minor variations of each other are basically copy-pastes with minor modifications. One I noticed recently was the feature matrix of Box try/new/uninit/zeroed/slice.</p>\n<p>There are other things like panic sections or \"this is subject to change\" disclaimers etc.</p>\n<p>Doc comments aren't DRY. Maybe rustdoc needs a transclude feature.</p>",
        "id": 248490784,
        "sender_full_name": "The 8472",
        "timestamp": 1628176098
    },
    {
        "content": "<p>Or maybe change the repetitive ones to \"This is like X, with only a minor change Y, [link to X]&lt;/comment&gt;\"</p>",
        "id": 248491174,
        "sender_full_name": "The 8472",
        "timestamp": 1628176261
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-05.20.2354818/near/248490784\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>which are usually long because they are copy paste stuff or have some sort of structure that repeats a lot anyway...</p>\n</blockquote>\n<p>Often comments on methods which are minor variations of each other are basically copy-pastes with minor modifications. One I noticed recently was the feature matrix of Box try/new/uninit/zeroed/slice.</p>\n<p>There are other things like panic sections or \"this is subject to change\" disclaimers etc.</p>\n<p>Doc comments aren't DRY. Maybe rustdoc needs a transclude feature.</p>\n</blockquote>\n<p>to be clear, I was interpreting <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> ’s comment to be about <em>non-comment</em> repetition that is flagged by the lint</p>",
        "id": 248500144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1628180311
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> you could hack something like that with a macro pretty easily, something like <code>#[doc = my_long_literal()]</code></p>",
        "id": 248505787,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628182954
    },
    {
        "content": "<p>I don't think it needs a feature specific to rustdoc</p>",
        "id": 248505823,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1628182968
    },
    {
        "content": "<p>yeah, maybe we just have to identify a bunch of common patterns that could be extracted into helpers.</p>",
        "id": 248507466,
        "sender_full_name": "The 8472",
        "timestamp": 1628183723
    }
]