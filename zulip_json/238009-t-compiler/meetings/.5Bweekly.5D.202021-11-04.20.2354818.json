[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h (sorry, new timezone!)</p>\n<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/N_WW5tZqTLWouaed6cCjxg?view\">meeting agenda</a></p>",
        "id": 260266074,
        "sender_full_name": "apiraino",
        "timestamp": 1636031045
    },
    {
        "content": "<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1175\">WG-rfc-2229</span>   checkin from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>: anything to share?</li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  checkin from <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> (or <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span>?) : anything to share?</li>\n</ul>",
        "id": 260266096,
        "sender_full_name": "apiraino",
        "timestamp": 1636031061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> would it be ok if I compress the \"untriaged PRs\" section of the perf. triage of the agenda? maybe replace with only the total # of issues? <br>\n<a href=\"https://hackmd.io/N_WW5tZqTLWouaed6cCjxg?view#Untriaged-Pull-Requests-30\">https://hackmd.io/N_WW5tZqTLWouaed6cCjxg?view#Untriaged-Pull-Requests-30</a></p>",
        "id": 260266414,
        "sender_full_name": "apiraino",
        "timestamp": 1636031193
    },
    {
        "content": "<p><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span> checkin(putting it here as I have no perms for the hackmd):</p>\n<blockquote>\n<p>Steering issue covered by this checkin, <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10370\">https://github.com/rust-analyzer/rust-analyzer/issues/10370</a>.</p>\n<p>This sprint was mainly about internal improvements, especially our macro test suite has seen some drastic changes, our AST grammar representation has seen some slight adjustments and we implemented some missing span-related proc-macro ABI functions.<br>\nWe also changed how we represent implicit delimiters resulting from macro variables for the time being due to some troubles with how rustc handles them, see <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10623\">r-a#10623</a>.<br>\nFinally attribute expansion is now usable enough that r-a expands attributes by default.</p>\n</blockquote>",
        "id": 260270649,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636033315
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , we’re starting the weekly triage meeting now. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here.</p>",
        "id": 260273127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034467
    },
    {
        "content": "<p>We’ll start off with ~8 minutes for announcements (which are open to anyone)</p>\n<h2>Announcements</h2>",
        "id": 260273191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034501
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 260273204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034508
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 260273393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034597
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 260273412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034605
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: 2 months ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 4 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: about 34 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 260273433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034616
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking Issue for cargo report future-incompat\" <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a></li>\n<li>\"Tracking issue for <code>#![feature(const_precise_live_drops)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/73255\">rust#73255</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260273456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034630
    },
    {
        "content": "<p>(ooh I’m excited to see that FCP on cargo report future-incompat.)</p>",
        "id": 260273585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034665
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Stabilize -Z strip as -C strip\" <a href=\"https://github.com/rust-lang/rust/pull/90058\">rust#90058</a></li>\n<li>\"Stabilize -Z symbol-mangling-version=v0 as -C symbol-mangling-version=v0\" <a href=\"https://github.com/rust-lang/rust/pull/90128\">rust#90128</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260273611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034679
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260273629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034691
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n<li>\"Tracking Issue for <code>destructuring_assignment</code>\" <a href=\"https://github.com/rust-lang/rust/issues/71126\">rust#71126</a></li>\n<li>\"Tracking Issue for relaxed struct unsizing rules\" <a href=\"https://github.com/rust-lang/rust/issues/81793\">rust#81793</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260273640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034699
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 260273908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> : anything to report from <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> ?</p>",
        "id": 260273941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034852
    },
    {
        "content": "<p>@_WG-rls2.0_ checkin from @@<strong>Lukas Wirth</strong>  (<a href=\"https://hackmd.io/GtwX44b4QwOSG-G5ZRMqRA?view#WG-checkins\">previous checkin</a>):</p>\n<blockquote>\n<p>Steering issue covered by this checkin, <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/10370\">https://github.com/rust-analyzer/rust-analyzer/issues/10370</a>.<br>\nThis sprint was mainly about internal improvements, especially our macro test suite has seen some drastic changes, our AST grammar representation has seen some slight adjustments and we implemented some missing span-related proc-macro ABI functions.<br>\nWe also changed how we represent implicit delimiters resulting from macro variables for the time being due to some troubles with how rustc handles them, see <a href=\"https://github.com/rust-lang/r-a/issues/10623\">r-a#10623</a>.<br>\nFinally attribute expansion is now usable enough that r-a expands attributes by default.</p>\n</blockquote>",
        "id": 260273959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034860
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260273941\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> : anything to report from <span class=\"user-group-mention silent\" data-user-group-id=\"1175\">WG-rfc-2229</span> ?</p>\n</blockquote>\n<p>there is a regression I\"ve been investigating</p>",
        "id": 260273972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636034865
    },
    {
        "content": "<p>but in general this work stabilized and is complete</p>",
        "id": 260273981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636034870
    },
    {
        "content": "<p>I think we can close down the WG probably</p>",
        "id": 260273987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636034875
    },
    {
        "content": "<p>though I should organize a retro</p>",
        "id": 260273997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636034880
    },
    {
        "content": "<p>we had some \"polish\" issues we had thought about getting back to</p>",
        "id": 260274061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636034889
    },
    {
        "content": "<p>Okay then!</p>",
        "id": 260274165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034942
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 260274184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034948
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fixes incorrect handling of ADT's drop requirements\" <a href=\"https://github.com/rust-lang/rust/pull/90218\">rust#90218</a><ul>\n<li>Felix <a href=\"https://github.com/rust-lang/rust/pull/90218/files#r741145944\">left a small comment</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/90218#issuecomment-957802382\">large perf regression</a>, opened issue <a href=\"https://github.com/rust-lang/rust/issues/90504\">rust#90504</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260274195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636034955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260273972\">said</a>:</p>\n<blockquote>\n<p>there is a regression I\"ve been investigating</p>\n</blockquote>\n<p>(the bug is pretty simple btw, just didn't whip up the fix yet)</p>",
        "id": 260274295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636035001
    },
    {
        "content": "<p>(In my comment I mistakenly implies that <a href=\"https://github.com/rust-lang/rust/issues/90218\">#90218</a> was already approved for backport. Nonetheless, I personally <em>do</em> think that we should accept it for backport to beta.)</p>",
        "id": 260274541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035113
    },
    {
        "content": "<p>I do wish someone documented where the regression was injected. AFAICT from reading the comment thread on <a href=\"https://github.com/rust-lang/rust/issues/90024\">#90024</a>, its tagged as stable-to-stable but there’s no indication of which version it regressed in. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 260274782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035229
    },
    {
        "content": "<p>but also, <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> said on the zulip thread that it <em>isn’t</em> a regression</p>",
        "id": 260274917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035281
    },
    {
        "content": "<p>zulip thread: <a class=\"stream-topic\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2390024.202021.20.02klzzwxh.3A0000.03.20ICE.3A.20type.20parameter.20out.20o.E2.80.A6\">#t-compiler/wg-prioritization/alerts &gt; #90024 2021 <code>cargo fix --edition</code> ICE: type parameter out o…</a></p>",
        "id": 260274952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035297
    },
    {
        "content": "<p>Uhh which thread, sorry? That link is broken for me on mobile</p>",
        "id": 260275025,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636035326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2390024.202021.20.60cargo.20fix.20--edition.60.20ICE.3A.20type.20parameter.20out.20o.E2.80.A6/near/258642329\">said</a>:</p>\n<blockquote>\n<p>Wait, what? This isn't even a regression, people will just have to migrate to 2021 manually. I would say <em>maybe</em> P-high but honestly P-medium seems fine too, this doesn't break any existing code</p>\n</blockquote>",
        "id": 260275061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035343
    },
    {
        "content": "<p>Ah ok, yeah I still think that's true</p>",
        "id": 260275170,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636035378
    },
    {
        "content": "<p>Anyway it seems like the “regression” categorization was debated on that thread</p>",
        "id": 260275187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035382
    },
    {
        "content": "<p>but people were okay with the prioritization of P-high</p>",
        "id": 260275219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035397
    },
    {
        "content": "<p>In that there's probably no regression date other than \"the first time someone added a suggestion for the error\"</p>",
        "id": 260275285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636035427
    },
    {
        "content": "<p>My question is this: Do we backport this, in order to make <code>cargo fix —edition</code> work more nicely in for the next release (1.57), but at the cost of the performance hit</p>",
        "id": 260275289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035429
    },
    {
        "content": "<p>Or do we not backport it, delaying the improved <code>cargo fix —edition</code>, in the hopes that the performance hit is addressed before <em>that</em> next-next release hits (1.58, January 13 2022)?</p>",
        "id": 260275351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035463
    },
    {
        "content": "<p>Do we know if anyone is looking at fixing the perf regression?</p>",
        "id": 260275502,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1636035531
    },
    {
        "content": "<p>Is this an unconditional performance hit? Or only when running fix?</p>",
        "id": 260275518,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636035538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> its unconditional, in the sense that it showed up on our benchmarks.</p>",
        "id": 260275552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035553
    },
    {
        "content": "<p>Because working + slow seems better than broken + fast 100% of the time</p>",
        "id": 260275554,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636035554
    },
    {
        "content": "<p>We did get a tide of reports about the bug, according to ehuss: <a href=\"https://github.com/rust-lang/rust/pull/90218#issuecomment-953922972\">https://github.com/rust-lang/rust/pull/90218#issuecomment-953922972</a></p>",
        "id": 260275804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035662
    },
    {
        "content": "<p>which to me implies that the backport will be beneficial</p>",
        "id": 260275821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035672
    },
    {
        "content": "<p>Lets go for it</p>",
        "id": 260275826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035675
    },
    {
        "content": "<p>backport approved</p>",
        "id": 260275862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035699
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Prevent duplicate caller bounds candidates by exposing default substs in Unevaluated\" <a href=\"https://github.com/rust-lang/rust/pull/90266\">rust#90266</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> nominated as it fixes <code>P-high</code> <a href=\"https://github.com/rust-lang/rust/issues/90195\">rust#90195</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260275897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035718
    },
    {
        "content": "<p>Sure, I think this looks low risk and high reward.</p>",
        "id": 260276100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035818
    },
    {
        "content": "<p>backport approved.</p>",
        "id": 260276107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035820
    },
    {
        "content": "<p>(might even make sense to backport this to stable as well if we end up with another point release)</p>",
        "id": 260276114,
        "sender_full_name": "lcnr",
        "timestamp": 1636035822
    },
    {
        "content": "<p>It would be nice, for bugs that fix beta regressions, for them to have tests that don’t rely on feature-gates</p>",
        "id": 260276249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260275897\">said</a>:</p>\n<blockquote>\n<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Prevent duplicate caller bounds candidates by exposing default substs in Unevaluated\" <a href=\"https://github.com/rust-lang/rust/pull/90266\">rust#90266</a><ul>\n<li><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> nominated as it fixes <code>P-high</code> <a href=\"https://github.com/rust-lang/rust/issues/90195\">rust#90195</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>sorry, I didn't properly understand this, isn't it under a feature flag?</p>",
        "id": 260276284,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636035888
    },
    {
        "content": "<p>I.e. from just skimming the unit test on that PR, I cannot immediately see why it would affect beta</p>",
        "id": 260276305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035897
    },
    {
        "content": "<p>there are the tests from <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a></p>",
        "id": 260276314,
        "sender_full_name": "lcnr",
        "timestamp": 1636035901
    },
    {
        "content": "<p>Heh okay <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> is asking the right question here.</p>",
        "id": 260276320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035905
    },
    {
        "content": "<p>and these tests are also fixed by <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> and don't need a feature gate</p>",
        "id": 260276363,
        "sender_full_name": "lcnr",
        "timestamp": 1636035922
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> then :)</p>",
        "id": 260276540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636035991
    },
    {
        "content": "<p>I don’t actually understand the response</p>",
        "id": 260276549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636035997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> are you saying there are existing tests that changed behavior with the addition of <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> ?</p>",
        "id": 260276583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036016
    },
    {
        "content": "<p>because … that isn’t reflected in the diff for PR <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a></p>",
        "id": 260276603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036024
    },
    {
        "content": "<p>/me goes to look again at <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a></p>",
        "id": 260276658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036051
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a> and <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> were opened at the same time and <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> fixes both the issues from both prs</p>",
        "id": 260276800,
        "sender_full_name": "lcnr",
        "timestamp": 1636036104
    },
    {
        "content": "<p>hmm</p>",
        "id": 260276860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036132
    },
    {
        "content": "<p>Okay, I guess</p>",
        "id": 260276876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036137
    },
    {
        "content": "<p>so the test in <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a> has now been fixed in two different ways, the change that was added in <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a> <em>and</em> the change that was added in <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> ?</p>",
        "id": 260276951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036167
    },
    {
        "content": "<p>is that what you are saying?</p>",
        "id": 260276963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036171
    },
    {
        "content": "<p>yes, both of these changes fix the tests in <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a></p>",
        "id": 260277012,
        "sender_full_name": "lcnr",
        "timestamp": 1636036197
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> is a more general fix</p>",
        "id": 260277076,
        "sender_full_name": "lcnr",
        "timestamp": 1636036209
    },
    {
        "content": "<p>okay, yes, I see this was discussed in comment thread for <a href=\"https://github.com/rust-lang/rust/issues/90375\">#90375</a></p>",
        "id": 260277081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036211
    },
    {
        "content": "<p>thanks</p>",
        "id": 260277085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036213
    },
    {
        "content": "<p>okay then <a href=\"https://github.com/rust-lang/rust/issues/90266\">#90266</a> approved for backport</p>",
        "id": 260277105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036222
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Update odht crate to 0.3.1 (big-endian bugfix)\" <a href=\"https://github.com/rust-lang/rust/pull/90403\">rust#90403</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> nominated as it fixes <code>P-high</code> <a href=\"https://github.com/rust-lang/rust/issues/90123\">rust#90123</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260277170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036255
    },
    {
        "content": "<p>The real fix is in odht here <a href=\"https://github.com/rust-lang/odht/pull/20\">https://github.com/rust-lang/odht/pull/20</a></p>",
        "id": 260277288,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1636036313
    },
    {
        "content": "<p>oh wow</p>",
        "id": 260277402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036344
    },
    {
        "content": "<p>mw also added tests in CI that uses big-endian so we can validate that this actually fixes the issue.</p>",
        "id": 260277512,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1636036397
    },
    {
        "content": "<p>okay</p>",
        "id": 260277536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036407
    },
    {
        "content": "<p>sorry for delay; I was just browsing the <code>git annotate</code> output to see when those <code>to_le()</code> were injected.</p>",
        "id": 260277606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036437
    },
    {
        "content": "<p>okay</p>",
        "id": 260277747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036492
    },
    {
        "content": "<p>backport approved</p>",
        "id": 260277752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036495
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 260277788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036507
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 260277800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036513
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Show all Deref implementations recursively\" <a href=\"https://github.com/rust-lang/rust/pull/90183\">rust#90183</a><ul>\n<li>Seems fine, <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <a href=\"https://github.com/rust-lang/rust/pull/90183#issuecomment-955834531\">left a comment about perf. regression</a>, also noted by Felix in the perf. triage report</li>\n<li><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> any insights on this?</li>\n</ul>\n</li>\n</ul>",
        "id": 260277835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036525
    },
    {
        "content": "<p>The worry here is that new ICE could appear. I'm fairly confident that there won't be but it was the main reason against the backport</p>",
        "id": 260278001,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036583
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> )</p>",
        "id": 260278010,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036589
    },
    {
        "content": "<p>from skimming comment thread: Are people also concerned about injecting a perf regression? Or is the regression alluded to by <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> the same as the ICE you mention, <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> ?</p>",
        "id": 260278207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036668
    },
    {
        "content": "<p>not exactly</p>",
        "id": 260278342,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036706
    },
    {
        "content": "<p>the original ICE was that we didn't check for infinite recursion (if a deref linked to a previous deref)</p>",
        "id": 260278410,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036725
    },
    {
        "content": "<p>I added a check for that, but I didn't look into the details why we had a perf regression</p>",
        "id": 260278458,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036745
    },
    {
        "content": "<p>however: I added recursion and new types to ensure we didn't infinitely recurse</p>",
        "id": 260278500,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036759
    },
    {
        "content": "<p>so perf regression is unavoidable</p>",
        "id": 260278525,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036772
    },
    {
        "content": "<p>we could just reduce it at this point</p>",
        "id": 260278543,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036782
    },
    {
        "content": "<p>Okay. It also seemed from the comment thread that people are still sharing ideas about new things to try</p>",
        "id": 260278552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036787
    },
    {
        "content": "<p>Yes, but it's improvements</p>",
        "id": 260278652,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036817
    },
    {
        "content": "<p>I’m not yet convinced that we should backport this</p>",
        "id": 260278658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036821
    },
    {
        "content": "<p>I'm busy on another topic for now but I'll come back to it</p>",
        "id": 260278674,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036828
    },
    {
        "content": "<p>but I don’t want to reject it for backport either</p>",
        "id": 260278681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036833
    },
    {
        "content": "<p>Would be interesting to have at least <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> opinion on this</p>",
        "id": 260278721,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036848
    },
    {
        "content": "<p>We’re 40 minutes into meeting. I’m going to leave this backport nominated. We can come back to it next week.</p>",
        "id": 260278725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036850
    },
    {
        "content": "<p>since I'm the author of the PR, my opinion can only be biased</p>",
        "id": 260278744,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036859
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"rustdoc: Go back to loading all external crates unconditionally\" <a href=\"https://github.com/rust-lang/rust/pull/90489\">rust#90489</a><ul>\n<li>workaround for <code>P-critical</code> <a href=\"https://github.com/rust-lang/rust/issues/84738\">rust#84738</a> to load all creates at once</li>\n<li>seems fine for backport</li>\n</ul>\n</li>\n</ul>",
        "id": 260278752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036863
    },
    {
        "content": "<p>Wow, it's the 3rd time we revert this feature haha</p>",
        "id": 260278852,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260278744\">said</a>:</p>\n<blockquote>\n<p>since I'm the author of the PR, my opinion can only be biased</p>\n</blockquote>\n<p>(I do think that PR authors should be able to weigh in on backport decisions. In many ways, PR authors are the ones who best understand how risky a PR is. The main issue is whether they are willing/honest-with-themselves about that risk.)</p>",
        "id": 260278887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036921
    },
    {
        "content": "<p>I'm favorable to it, just want another person to provide another point of view</p>",
        "id": 260278994,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036946
    },
    {
        "content": "<p>I take it this is essentially a revert of a previous change? Seems ok but we should actually land on nightly before backporting.</p>",
        "id": 260279023,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1636036963
    },
    {
        "content": "<p>let's say feature's author's opinion for such things is worth 0.5 instead of 1 ;)</p>",
        "id": 260279038,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636036970
    },
    {
        "content": "<p>okay yeah, lets wait for <a href=\"https://github.com/rust-lang/rust/issues/90489\">#90489</a> before we decide about backport</p>",
        "id": 260279063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036980
    },
    {
        "content": "<p>so lets move on</p>",
        "id": 260279070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636036982
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Split doc_cfg and doc_auto_cfg features\" <a href=\"https://github.com/rust-lang/rust/pull/90502\">rust#90502</a><ul>\n<li>partial work to fix <code>P-high</code> <a href=\"https://github.com/rust-lang/rust/issues/90497\">rust#90497</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260279115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037000
    },
    {
        "content": "<p>This one fixes bugs in docs</p>",
        "id": 260279148,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037019
    },
    {
        "content": "<p>some <code>cfg</code>s are appearing in the docs but shouldn't</p>",
        "id": 260279187,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037036
    },
    {
        "content": "<p>until we find a better way, simpler to display the auto-cfg for the time being</p>",
        "id": 260279250,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037049
    },
    {
        "content": "<p>are there bugs filed about this?</p>",
        "id": 260279292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037073
    },
    {
        "content": "<p>oh, <a href=\"https://github.com/rust-lang/rust/issues/90497\">#90497</a> is the bug</p>",
        "id": 260279325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037089
    },
    {
        "content": "<p>yup</p>",
        "id": 260279470,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> will <a href=\"https://github.com/rust-lang/rust/issues/90502\">#90502</a> fully address the stable-to-beta regression that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is observing?</p>",
        "id": 260279473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037142
    },
    {
        "content": "<p>yes</p>",
        "id": 260279493,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037148
    },
    {
        "content": "<p>okay</p>",
        "id": 260279498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037151
    },
    {
        "content": "<p>it'll reduce some improvements as well, but at least, no more bugs</p>",
        "id": 260279580,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1636037167
    },
    {
        "content": "<p>I guess backport approved? This machinery is a mystery to me.</p>",
        "id": 260279636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037194
    },
    {
        "content": "<p>okay moving along</p>",
        "id": 260279737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037235
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 260279762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037244
    },
    {
        "content": "<ul>\n<li>\"Make specifying repr optional for fieldless enums\" <a href=\"https://github.com/rust-lang/rust/pull/88203\">rust#88203</a> (last review activity: 2 months ago)<ul>\n<li>review seems to point out there's some more work to do, <a href=\"https://github.com/rust-lang/rust/pull/88203#issuecomment-918528891\">see comment</a></li>\n<li>PR author <span class=\"user-mention\" data-user-id=\"361356\">@fee1-dead</span> set flag to <code>S-waiting-on-team</code></li>\n</ul>\n</li>\n</ul>",
        "id": 260279780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037253
    },
    {
        "content": "<p>I’m guessing they set that flag because of this comment: \"I'm busy with other stuff. You can do it if you'd like.\"</p>",
        "id": 260279890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037287
    },
    {
        "content": "<p>(yes)</p>",
        "id": 260279948,
        "sender_full_name": "apiraino",
        "timestamp": 1636037313
    },
    {
        "content": "<p>though <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> did say \" I can maybe give it a try myself if you'd like.\"</p>",
        "id": 260279952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037313
    },
    {
        "content": "<p>(which makes that response from the PR author less curt than it might otherwise seem)</p>",
        "id": 260279988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037330
    },
    {
        "content": "<p>oh hey</p>",
        "id": 260280101,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636037379
    },
    {
        "content": "<p>There's more context in <a href=\"https://github.com/rust-lang/rust/issues/88621\">#88621</a>.</p>",
        "id": 260280115,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636037384
    },
    {
        "content": "<p>Someone just needs to make a decision on which approach to take.</p>",
        "id": 260280140,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636037394
    },
    {
        "content": "<p>The other approach has a PR up at <a href=\"https://github.com/rust-lang/rust/issues/89234\">#89234</a></p>",
        "id": 260280202,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636037403
    },
    {
        "content": "<p>Seems like there is a T-lang decision to be made here, right?</p>",
        "id": 260280338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037451
    },
    {
        "content": "<p>oh, maybe that’s what the S-waiting-on-team denotes here.</p>",
        "id": 260280389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037474
    },
    {
        "content": "<p>I’ll nominate it for T-lang</p>",
        "id": 260280417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037485
    },
    {
        "content": "<p>Yea, I think so.</p>",
        "id": 260280503,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636037519
    },
    {
        "content": "<p>okay moving on</p>",
        "id": 260280575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037537
    },
    {
        "content": "<ul>\n<li>\"Change default panic strategy to abort for wasm32-unknown-emscripten\" <a href=\"https://github.com/rust-lang/rust/pull/89762\">rust#89762</a><ul>\n<li>Tier 2 target</li>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259394157\">discussed last week</a>. This PR needs:<ul>\n<li>It's changing a default: can people opt into the old panic-unwind setting?</li>\n<li>Does a change like this needs an MCP?</li>\n<li>who are the stakeholders for the emscripten backend?</li>\n<li>consensus seems <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259395704\">to let it move forward</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 260280593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037547
    },
    {
        "content": "<p>we should let this move forward. I dont think things have changed since last week</p>",
        "id": 260280864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037631
    },
    {
        "content": "<p>I’ll take action item to document this on the PR</p>",
        "id": 260280892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037641
    },
    {
        "content": "<p>We have five minutes left in mtg</p>",
        "id": 260281057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037685
    },
    {
        "content": "<p>I’m going to skip the “OLdest PRs waiting on reveiw section\"</p>",
        "id": 260281090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037692
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">80 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">56 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 5 P-high, 4 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 48 P-high, 87 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 260281124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037702
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 260281146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037710
    },
    {
        "content": "<p>(thank goodness)</p>",
        "id": 260281153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037712
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>\"Index out of bounds when running <code>cargo doc</code> in <code>rustc_metadata/src/creader.rs</code>\" <a href=\"https://github.com/rust-lang/rust/issues/84738\">rust#84738</a><ul>\n<li>old issue reprioritized as P-critical by <code>T-rustdoc</code></li>\n<li>since 1.56 it breaks doc builds for some crates) (note: <a href=\"https://github.com/rust-lang/rust/issues/84738#issuecomment-950370740\">this comment</a>)</li>\n<li>under scrutiny by <code>T-rustdoc</code></li>\n</ul>\n</li>\n</ul>",
        "id": 260281173,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037719
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 260281191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037726
    },
    {
        "content": "<ul>\n<li>\"Incremental compilation fails in all cases on SystemZ (s390x)\" <a href=\"https://github.com/rust-lang/rust/issues/90123\">rust#90123</a><ul>\n<li>fix <a href=\"https://github.com/rust-lang/rust/pull/90403\">rust#90403</a> is merged (beta-nominated)</li>\n</ul>\n</li>\n</ul>",
        "id": 260281218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037740
    },
    {
        "content": "<ul>\n<li>\"regression: rustc suggests <code>.as_ref()</code> at incorrect location and other spans have regressed\" <a href=\"https://github.com/rust-lang/rust/issues/90286\">rust#90286</a><ul>\n<li>confusing wrong diagnostic</li>\n<li>currently unassigned</li>\n</ul>\n</li>\n</ul>",
        "id": 260281230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037747
    },
    {
        "content": "<p>It seems like <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> has been looking at this</p>",
        "id": 260281413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037805
    },
    {
        "content": "<p>assigning to <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span></p>",
        "id": 260281486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037838
    },
    {
        "content": "<ul>\n<li>\"DWARF info for <code>static</code> vars in lib crates has stopped being produced reliably in LTO builds\" <a href=\"https://github.com/rust-lang/rust/issues/90357\">rust#90357</a><ul>\n<li>Felix self-assigned</li>\n<li>bisection seems to point to PR <a href=\"https://github.com/rust-lang/rust/pull/89041\">rust#89041</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260281515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037852
    },
    {
        "content": "<p>(I have indeed been looking at this, at least starting yesterday)</p>",
        "id": 260281545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037862
    },
    {
        "content": "<p>(too early for me to tell whether I’ll have a fix in time for the release, or even if it will be a fix appropriate for beta backport… we will see. This does not seem like a release-blocking bug, given our … not-great support for debuginfo…)</p>",
        "id": 260281744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037932
    },
    {
        "content": "<ul>\n<li>\"warn(must_not_suspend) started being raised incorrectly when moving from stable to nightly\" <a href=\"https://github.com/rust-lang/rust/issues/90459\">rust#90459</a><ul>\n<li>currently unassigned</li>\n<li>should be fixed by <a href=\"https://github.com/rust-lang/rust/pull/89826\">rust#89826</a> (landed on master, not yet in beta)</li>\n</ul>\n</li>\n</ul>",
        "id": 260281762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037939
    },
    {
        "content": "<p>sounds like its under control</p>",
        "id": 260281785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037952
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 260281795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037958
    },
    {
        "content": "<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code> when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a><ul>\n<li>unassigned, but:</li>\n<li>fixed by <a href=\"https://github.com/rust-lang/libc/pull/2272\">libc#2272</a></li>\n<li>and <a href=\"https://github.com/rust-lang/rust/pull/90527\">rust#90527</a></li>\n</ul>\n</li>\n</ul>",
        "id": 260281814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037964
    },
    {
        "content": "<p>also sounds like its under control</p>",
        "id": 260281823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037968
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-11-02.md\">triage logs for 2021-11-02</a></p>\n</blockquote>\n<p>Summary: The only significant regressions were:</p>\n<ol>\n<li>two PRs that slowed down doc generation, and</li>\n<li>some slowdown from the new lints to flag occurrences of Unicode bidirectional control characters. The doc generation regression is being investigated.</li>\n</ol>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=3c8f001d454b1b495f7472d8430ef8fdf10aac11&amp;end=6384dca100f3cedfa031a9204586f94f8612eae5&amp;absolute=false&amp;stat=instructions%3Au\">3c8f001d454b1b495f7472d8430ef8fdf10aac11..6384dca100f3cedfa031a9204586f94f8612eae5</a></p>\n<p>6 Regressions, 3 Improvements, 1 Mixed; 4 of them in rollups<br>\n39 comparisons made in total.</p>\n<p>30 Untriaged Pull Requests</p>",
        "id": 260281850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037980
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Fixes incorrect handling of ADT's drop requirements <a href=\"https://github.com/rust-lang/rust/issues/90218\">#90218</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c4ff03f689c03d73d3a8af49611b1f2b54d6a300&amp;end=85c0558d032e204f4f4ed6137f3119cb92dbc684&amp;stat=instructions:u\">instruction counts</a> (up to 5.3% on <code>full</code> builds of <code>regression-31157</code>)</li>\n<li>regression-31157 check regressed by 4.7% on incr and 5.3 on full.</li>\n<li>issue-46449 check regressed by 1.89% on incr-full.</li>\n<li>wg-grammar regressed by 1.3-1.4% in a bunch of scenarios.</li>\n<li>but otherwise, this does not seem too bad. I think we should keep this PR approved for backport, while also look into fixing the regression on nightly.</li>\n<li>filed <a href=\"https://github.com/rust-lang/rust/issues/90504\">#90504</a> as followup investigation issue.</li>\n</ul>\n<p>Rollup of 3 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90387\">#90387</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c390d69a615f095208ac94841f3310268521b2ee&amp;end=df76418f1ee1a1973e862828ae8520abb6c3794a&amp;stat=instructions:u\">instruction counts</a> (up to 2.4% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>2 of the 3 pull requests appear trivial (fixing typos and removing extra lines in documentation), which leaves <a href=\"https://github.com/rust-lang/rust/pull/90376\">PR #90376</a> as the main suspect.</li>\n<li>Meanwhile, all <a href=\"https://github.com/rust-lang/rust/pull/90376\">PR #90376</a> does, according to its description, is move code around, remove dead code, and inline a singly called function.</li>\n<li>treating as alignment artifacts from code rearrangement. We tend not to micro-optimize that in the compiler.</li>\n</ul>\n<p>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90416\">#90416</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2b643e987173b36cb0279a018579372e31a35776&amp;end=9f13083542cb2b9fce83ed8a50238e4a6386820f&amp;stat=instructions:u\">instruction counts</a> (up to 2.7% on <code>full</code> builds of <code>helloworld</code>)</li>\n<li>All the significant perf regressions are due to doc generation (many regressed by 1.0-2.7%).</li>\n<li>filed <a href=\"https://github.com/rust-lang/rust/issues/90512\">#90512</a> as followup investigation issue.</li>\n</ul>\n<p>Rollup of 5 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90422\">#90422</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2609fab8e46414333aa68412134df65c7fcd1a77&amp;end=e249ce6b2345587d6e11052779c86adbad626dff&amp;stat=instructions:u\">instruction counts</a> (up to 5.8% on <code>full</code> builds of <code>tokio-webpush-simple</code>)</li>\n<li>All the significant perf regressions are due to doc generation (many regressed by 1.0-5.8%).</li>\n<li>discussion is ongoing in <a href=\"https://github.com/rust-lang/rust/pull/90183\">PR 90183</a></li>\n</ul>\n<p>impl Pattern for char array <a href=\"https://github.com/rust-lang/rust/issues/86336\">#86336</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=68b554e6af18726fe6fa8de2134c59c441e0b019&amp;end=c7e4740ec18996e082fe6e29ebf7efdc7dda418f&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>The only benchmarks that regressed did so by a small amount, percentage wise 0.2-0.6%; the benchmarks that did regress in that fashion are: <code>deeply-nested-async</code>, <code>helloworld</code>, <code>unify-linearly</code>.</li>\n<li>I don't think its worth investing effort trying to figure out the root cause of this minor regression, unless someone wants to take it on as a self-educating exercise.</li>\n</ul>\n<p>Update cargo <a href=\"https://github.com/rust-lang/rust/issues/90490\">#90490</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=6225262562f06d8a52624e7898098b58789a6ae5&amp;end=dca3f1b786efd27be3b325ed1e01e247aa589c3b&amp;stat=instructions:u\">instruction counts</a> (up to 2.0% on <code>incr-patched: println</code> builds of <code>regression-31157</code>)</li>\n<li>Only regression-31157 opt regressed, by 1.6-2.0%.</li>\n<li>It is not worth investing effort trying to figure out the root cause of this limited regression.</li>\n<li>(Note: regression <a href=\"https://github.com/rust-lang/rust/issues/31157\">#31157</a> was itself put in to catch a performance regression with respect to time and RAM, but that regression was more like 1,882% in time and 10x in space.)</li>\n</ul>",
        "id": 260281895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636037994
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 4 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90314\">#90314</a></li>\n<li>Use SortedMap in HIR. <a href=\"https://github.com/rust-lang/rust/issues/90145\">#90145</a></li>\n<li>Revert \"Add rustc lint, warning when iterating over hashmaps\" <a href=\"https://github.com/rust-lang/rust/issues/90380\">#90380</a></li>\n</ul>",
        "id": 260281909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038001
    },
    {
        "content": "<h4>Mixed</h4>\n<p>[master] Fix CVE-2021-42574 <a href=\"https://github.com/rust-lang/rust/issues/90462\">#90462</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=ff0e14829e1806ca0d4226595f7fdf3e8658758f&amp;end=db14a17e69af2a2e241ce149a501a5281811fe06&amp;stat=instructions:u\">instruction counts</a> (up to -0.5% on <code>full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ff0e14829e1806ca0d4226595f7fdf3e8658758f&amp;end=db14a17e69af2a2e241ce149a501a5281811fe06&amp;stat=instructions:u\">instruction counts</a> (up to 14.2% on <code>incr-unchanged</code> builds of <code>coercions</code>)</li>\n<li>Filed <a href=\"https://github.com/rust-lang/rust/issues/90514\">issue #90514</a> for follow up investigation of coercions regression.</li>\n</ul>",
        "id": 260281970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038008
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 260282017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038016
    },
    {
        "content": "<p>and hey, at lightning speed, got through agenda before hour was up</p>",
        "id": 260282099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038033
    },
    {
        "content": "<p>well, in part because I skipped a big section</p>",
        "id": 260282132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038045
    },
    {
        "content": "<p>anyway, thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 260282159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636038057
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260281486\">said</a>:</p>\n<blockquote>\n<p>assigning to <span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span></p>\n</blockquote>\n<p>I unfortunately don't have enough time to look into this issue given the beta release timeline. I think it'd be a fairly large change to fix this properly. My suggestion would be to revert <a href=\"https://github.com/rust-lang/rust/issues/89110\">#89110</a> for now so there's time to do a proper fix and re-land some version of it later.</p>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can open a revert PR, but otherwise I'm going to have to unassign myself for now.</p>",
        "id": 260293352,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636042136
    },
    {
        "content": "<p>okay thanks for letting us know, <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> !</p>",
        "id": 260294381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636042487
    },
    {
        "content": "<p>(I’m not yet sure whether we should revert PR <a href=\"https://github.com/rust-lang/rust/issues/89110\">#89110</a> . Or at least, I’m not yet convinced its warranted based solely on what I see in the thread from issue <a href=\"https://github.com/rust-lang/rust/issues/90286\">#90286</a>. I’ll try to look into it more.)</p>",
        "id": 260294777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636042630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260278721\">said</a>:</p>\n<blockquote>\n<p>Would be interesting to have at least <span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> opinion on this</p>\n</blockquote>\n<p>so, in retrospect my main motivation was \"I'm tired of dealing with these regressions\" and backporting seemed like a faster way to get feedback. but given that no one reported <a href=\"https://github.com/rust-lang/rust/issues/87783\">https://github.com/rust-lang/rust/issues/87783</a> until I did (like a week after the stable release), it's maybe not a giant deal to let it go through a full 6-week cycle</p>",
        "id": 260332428,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636058915
    },
    {
        "content": "<p>I do not think the perf should block backporting, it's not a particularly bad regression and no one has yet tried to figure out the cause so it could be avoidable</p>",
        "id": 260332516,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636058963
    },
    {
        "content": "<p>Letting it \"ride the trains\" seems like the best option for now, unless we start getting a bunch of bug reports. I likewise don't think perf should block backporting in this case. My hesitancy is because the PR is a non-trivial change.</p>",
        "id": 260333035,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636059211
    },
    {
        "content": "<p>Reminder for next meeting, this week.<br>\nDraft of agenda available at:<br>\n<a href=\"https://hackmd.io/enTes2SLQsObHRc1oyx7Vw?view\">https://hackmd.io/enTes2SLQsObHRc1oyx7Vw?view</a></p>\n<p>Scheduled checkin from <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> from <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 260669033,
        "sender_full_name": "apiraino",
        "timestamp": 1636383991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260273987\">said</a>:</p>\n<blockquote>\n<p>I think we can close down the WG probably</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> with regard to <span class=\"user-group-mention silent\" data-user-group-id=\"1175\">WG-rfc-2229</span> , should I remove it from <a href=\"https://rust-lang.github.io/compiler-team/about/triage-meeting/\">the monthly rotation</a> of checkins for T-compiler meetings? Maybe change <a href=\"https://rust-lang.github.io/compiler-team/working-groups/rfc-2229/\">the flag of the WG</a> to \"paused\" or \"retired\"?</p>",
        "id": 261121959,
        "sender_full_name": "apiraino",
        "timestamp": 1636630561
    }
]