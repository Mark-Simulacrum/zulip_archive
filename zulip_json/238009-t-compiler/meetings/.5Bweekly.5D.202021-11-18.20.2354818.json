[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/uQjEgFIiRpy04QXxKDnRjA?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_WG-async-foundations_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n<li>@_WG-traits_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 261923680,
        "sender_full_name": "apiraino",
        "timestamp": 1637240568
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Please leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here</p>",
        "id": 261938387,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247630
    },
    {
        "content": "<p>As always, thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> for making the agenda <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 261938485,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247673
    },
    {
        "content": "<p>Starting off with</p>",
        "id": 261938510,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247684
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 261938531,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247692
    },
    {
        "content": "<ul>\n<li>Tomorrow we have our monthly <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">planning meeting</a> at <time datetime=\"2021-11-19T15:00:00Z\">2021-11-19T15:00:00-00:00</time></li>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 261938543,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247698
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 261938565,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247709
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 261938586,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247718
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: 3 months ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 4 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: about 48 days ago)</li>\n<li>\"Unstable lints should be considered unknown\" <a href=\"https://github.com/rust-lang/compiler-team/issues/469\">compiler-team#469</a> (last review activity: about 2 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 261938652,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247733
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking Issue for cargo report future-incompat\" <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a></li>\n<li>\"Tracking Issue for inline assembly (<code>asm!</code>)\" <a href=\"https://github.com/rust-lang/rust/issues/72016\">rust#72016</a></li>\n</ul>\n</li>\n</ul>",
        "id": 261938669,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247744
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 261938680,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247752
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Create a macos notification group\" <a href=\"https://github.com/rust-lang/compiler-team/issues/470\">compiler-team#470</a></li>\n</ul>\n</li>\n</ul>",
        "id": 261938688,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247759
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for <code>destructuring_assignment</code>\" <a href=\"https://github.com/rust-lang/rust/issues/71126\">rust#71126</a></li>\n<li>\"Tracking Issue for relaxed struct unsizing rules\" <a href=\"https://github.com/rust-lang/rust/issues/81793\">rust#81793</a></li>\n<li>\"GATs: Decide whether to have defaults for <code>where Self: 'a</code>\" <a href=\"https://github.com/rust-lang/rust/issues/87479\">rust#87479</a></li>\n<li>\"Stabilize <code>const_raw_ptr_deref</code> for <code>*const T</code>\" <a href=\"https://github.com/rust-lang/rust/pull/89551\">rust#89551</a></li>\n<li>\"Stabilize -Z strip as -C strip\" <a href=\"https://github.com/rust-lang/rust/pull/90058\">rust#90058</a></li>\n<li>\"Stabilize -Z symbol-mangling-version=v0 as -C symbol-mangling-version=v0\" <a href=\"https://github.com/rust-lang/rust/pull/90128\">rust#90128</a></li>\n<li>\"stabilize format args capture\" <a href=\"https://github.com/rust-lang/rust/pull/90473\">rust#90473</a></li>\n</ul>\n</li>\n</ul>",
        "id": 261938724,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247777
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 261938765,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have anything you want to share from <strong>WG-async-foundations</strong></p>",
        "id": 261938819,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247829
    },
    {
        "content": "<ul>\n<li>@_WG-traits_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> (<a href=\"https://hackmd.io/IGePuIQTQqGzdwqVrN1IlA?view#WG-checkins\">previous checkin</a>)<blockquote>\n<p>Work continues on both GATs and TAITs. For GATs, the outlives lint landed, but needs a bit more work before stabilization. Whether or not to change the syntax of where clauses on GATs remains an open question. Some bug fixes for GATs/HRTBs have also landed, including normalizing predicates for closures. Negative impls for coherence also landed. (sorry for no links, on mobile! - Jack)</p>\n</blockquote>\n</li>\n</ul>",
        "id": 261938890,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247846
    },
    {
        "content": "<p>Thanks for the update <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>!</p>",
        "id": 261938908,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637247856
    },
    {
        "content": "<p>Sorry all for the short update, it's been a busy week.</p>",
        "id": 261938921,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637247863
    },
    {
        "content": "<p>Oh dang it</p>",
        "id": 261938945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247875
    },
    {
        "content": "<p>I was going to come and write a similarly short update so <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> didn't have to</p>",
        "id": 261938957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247882
    },
    {
        "content": "<p>but he beat me to it :)</p>",
        "id": 261938964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247885
    },
    {
        "content": "<p>I would also add that <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is working towards landing some major refactorings to how impl trait inference works</p>",
        "id": 261939022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247908
    },
    {
        "content": "<p>which I consider <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> domain</p>",
        "id": 261939042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247916
    },
    {
        "content": "<p>let me just repeat this pending FCP so that people here check their boxes: \"Tracking Issue for cargo report future-incompat\" <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a></p>",
        "id": 261939068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637247929
    },
    {
        "content": "<p>and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> is working on adding support for negative predicates to coherence</p>",
        "id": 261939069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247929
    },
    {
        "content": "<p>(its only waiting on compiler team members at this point, I think.)</p>",
        "id": 261939148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637247962
    },
    {
        "content": "<p>those things are covered at <a href=\"https://rust-lang.github.io/impl-trait-initiative/explainer/inference.html\">impl trait initiative</a> and <a href=\"https://github.com/rust-lang/negative-impls-initiative\">negative impl initiative</a> respectively, although the latter is a bit out of date</p>",
        "id": 261939204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637247973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> is also working on return position impl trait in traits, or \"RPITIT\" as I like to call it (ridiculous acronyms FTW)</p>",
        "id": 261939330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637248030
    },
    {
        "content": "<p>Excellent <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 261939437,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248079
    },
    {
        "content": "<p>I know there's been quite a bit of activity in the async wg as well. Do you want to call anything out there? We still have a few minutes for announcements.</p>",
        "id": 261939547,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248120
    },
    {
        "content": "<p>Or perhaps we can return to that at the end of the meeting</p>",
        "id": 261939776,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248226
    },
    {
        "content": "<p>There's a fairly large agenda today so let's move on to</p>",
        "id": 261939847,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248262
    },
    {
        "content": "<h2>Backport nominations</h2>",
        "id": 261939858,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248266
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 261939870,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248271
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Android is not GNU\" <a href=\"https://github.com/rust-lang/rust/pull/90834\">rust#90834</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <a href=\"https://github.com/rust-lang/rust/pull/90834#issuecomment-969664308\">to reduce the versions window</a> with this incorrect behaviour</li>\n</ul>\n</li>\n</ul>",
        "id": 261939886,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248282
    },
    {
        "content": "<p>Seems reasonable to me.</p>",
        "id": 261940124,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248393
    },
    {
        "content": "<p>and the only difference between <code>linux_gnu_base</code> and <code>linux_base</code> is the gnu target_env.</p>",
        "id": 261940180,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248429
    },
    {
        "content": "<p>Backport approved.</p>",
        "id": 261940189,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261939547\">said</a>:</p>\n<blockquote>\n<p>I know there's been quite a bit of activity in the async wg as well. Do you want to call anything out there? We still have a few minutes for announcements.</p>\n</blockquote>\n<p>(whoops, sorry, got distracted :) there's actually a lot of overlap between that work and <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a>, at least from my end. we've also been doing a lot of work on polish, <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span> might have more)</p>",
        "id": 261940200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637248436
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>!</p>",
        "id": 261940388,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248519
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"relate lifetime in <code>TypeOutlives</code> bounds on drop impls\" <a href=\"https://github.com/rust-lang/rust/pull/90840\">rust#90840</a><ul>\n<li>Fixes <code>P-critical</code> <a href=\"https://github.com/rust-lang/rust/issues/90838\">rust#90838</a></li>\n<li>also nominated for stable backport</li>\n</ul>\n</li>\n</ul>",
        "id": 261940399,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248522
    },
    {
        "content": "<p>huh</p>",
        "id": 261940650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248635
    },
    {
        "content": "<p>the old behavior should have been forcing the predicartes to be equal, right?</p>",
        "id": 261940693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248651
    },
    {
        "content": "<p>let me look at the original issue</p>",
        "id": 261940714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248663
    },
    {
        "content": "<p>oh, Oh, I misread the code that was added in <a href=\"https://github.com/rust-lang/rust/issues/87770\">#87770</a></p>",
        "id": 261940908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248737
    },
    {
        "content": "<p>Am I right that <a href=\"https://github.com/rust-lang/rust/issues/87770\">#87770</a> added those TypeOutlives arms without any coverage in the unit test it added?</p>",
        "id": 261941121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248813
    },
    {
        "content": "<p>I’m basically wondering if we should be more conservative, and remove the TypeOutlives arm entirely...</p>",
        "id": 261941273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248868
    },
    {
        "content": "<p>but for now backporting this seems like best short term option, since I’m not clear on how much stuff would break if we removed the TypeOutlives arm.</p>",
        "id": 261941398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637248917
    },
    {
        "content": "<p>Hmm, yeah, I'm not sure if the <code>TypeOutlives</code> arm is actually used</p>",
        "id": 261941531,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637248967
    },
    {
        "content": "<p>That might be an option. It was added in support of an unstable feature so temporary breakage there wouldn't be unreasonable.</p>",
        "id": 261941561,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637248979
    },
    {
        "content": "<p>at the very least, we should take a whirl at removing it outright and seeing if anything else in the test suite breaks...</p>",
        "id": 261941632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249008
    },
    {
        "content": "<p>Do you think we should attempt that prior to approving the backport?</p>",
        "id": 261941769,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249065
    },
    {
        "content": "<p>Well, the backport <em>is</em> a strict improvement over the status quo, I think….</p>",
        "id": 261941855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249107
    },
    {
        "content": "<p>but it shouldn’t take long to do the experiment I’m proposing</p>",
        "id": 261941885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249118
    },
    {
        "content": "<p>so yeah, how about if I own that task?</p>",
        "id": 261941913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249127
    },
    {
        "content": "<p>i.e. I’ll look into it, I guess today</p>",
        "id": 261941947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249144
    },
    {
        "content": "<p>Ok, let's defer the backport decision to next week then. That will be the checkpoint to make sure we don't forget about this.</p>",
        "id": 261942040,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249169
    },
    {
        "content": "<p>Okay, great.</p>",
        "id": 261942050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249174
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Update llvm submodule\" <a href=\"https://github.com/rust-lang/rust/pull/90954\">rust#90954</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/90954#issuecomment-972660123\">Nomination details</a></li>\n</ul>\n</li>\n</ul>",
        "id": 261942064,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249183
    },
    {
        "content": "<blockquote>\n<p>Due to the upgrade to LLVM 13.0, which is part of the 1.56.0 release, there has been a regression in which rustc create nondeterministic output: <a href=\"https://github.com/rust-lang/rust/issues/90301\">#90301</a> . The two commits that this PR backports fix this regression.</p>\n</blockquote>",
        "id": 261942388,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637249315
    },
    {
        "content": "<p>Oh, duh. I keep forgetting to add the emojis.</p>",
        "id": 261942405,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249325
    },
    {
        "content": "<p>yeah I gotta make a bot to do that. :)</p>",
        "id": 261942425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249336
    },
    {
        "content": "<p>(its on my task list)</p>",
        "id": 261942468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249354
    },
    {
        "content": "<p>Changes in the PR: <a href=\"https://github.com/rust-lang/llvm-project/compare/e048e97f5280e8a232a43ae134d395aeab67c2e8...f9b03d0e2d7378f8dd5697ceb72b310060f7598f\">https://github.com/rust-lang/llvm-project/compare/e048e97f5280e8a232a43ae134d395aeab67c2e8...f9b03d0e2d7378f8dd5697ceb72b310060f7598f</a></p>",
        "id": 261942497,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249363
    },
    {
        "content": "<p>Only the first commit <em>needs</em> to be backported <a href=\"https://github.com/rust-lang/llvm-project/commit/f08c12fbedcd43f3ee04b0ebbeace60f8145e9b5\">https://github.com/rust-lang/llvm-project/commit/f08c12fbedcd43f3ee04b0ebbeace60f8145e9b5</a></p>",
        "id": 261942534,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249384
    },
    {
        "content": "<p>I think that one should be <code>stable-nominated</code> also, so we can discuss a possible stable approval and then the release team can also decide if it's worth a point release or not</p>",
        "id": 261942543,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1637249391
    },
    {
        "content": "<p>we are not too far from the next release though, but that's also up to the release team</p>",
        "id": 261942667,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1637249440
    },
    {
        "content": "<p>Ok, let's consider for stable backport as well.</p>",
        "id": 261942730,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249473
    },
    {
        "content": "<p>(but we can vote on that next)</p>",
        "id": 261942737,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249476
    },
    {
        "content": "<p>My take on this is that we should either backport both or neither.</p>",
        "id": 261942771,
        "sender_full_name": "nagisa",
        "timestamp": 1637249493
    },
    {
        "content": "<p>This seems reasonable to beta-backport to me. I'm fine with backporting both commits.</p>",
        "id": 261942825,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249520
    },
    {
        "content": "<p>Beta backport approved.</p>",
        "id": 261942904,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249541
    },
    {
        "content": "<p>Let's do the same one for stable now.</p>",
        "id": 261942925,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249552
    },
    {
        "content": "<p>I'm a little concerned the debuginfo fix does not have any LLVM tests.</p>",
        "id": 261943033,
        "sender_full_name": "nagisa",
        "timestamp": 1637249616
    },
    {
        "content": "<p>I'm guessing building an isolated test is non-trivial?</p>",
        "id": 261943276,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249726
    },
    {
        "content": "<p>We had similar issues with the incremental ICEs ...</p>",
        "id": 261943305,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249739
    },
    {
        "content": "<p>Let's stable approve as well.</p>",
        "id": 261943351,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249760
    },
    {
        "content": "<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> \"Add <code>deref_into_dyn_supertrait</code> lint.\" <a href=\"https://github.com/rust-lang/rust/pull/89461\">rust#89461</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116458\">@Charles Lew</span>, fixes <code>P-high</code> <a href=\"https://github.com/rust-lang/rust/issues/89190\">rust#89190</a></li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> (it's already in beta)</li>\n</ul>\n</li>\n</ul>",
        "id": 261943396,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637249769
    },
    {
        "content": "<p>So, this seems to be a incompat lint for a regression that made it into stable.</p>",
        "id": 261943509,
        "sender_full_name": "nagisa",
        "timestamp": 1637249829
    },
    {
        "content": "<p>The change seems pretty non-trivial…</p>",
        "id": 261943575,
        "sender_full_name": "nagisa",
        "timestamp": 1637249863
    },
    {
        "content": "<p>I’m not exactly clear on what adding this lint exactly <em>resolves</em> for the issue <a href=\"https://github.com/rust-lang/rust/issues/89190\">#89190</a></p>",
        "id": 261943749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249923
    },
    {
        "content": "<p>i.e., how does a new lint cause the person’s crate to start compiling again? That was their complaint, no?</p>",
        "id": 261943802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249948
    },
    {
        "content": "<p>It just causes a more informative message, right?</p>",
        "id": 261943841,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637249963
    },
    {
        "content": "<p>also note that next release is in 2 weeks</p>",
        "id": 261943867,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1637249975
    },
    {
        "content": "<p>ah, I think I misunderstood the nature of the “fix\" when I nominated this.</p>",
        "id": 261943921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637249998
    },
    {
        "content": "<p>I think the lint precludes people from writing the problematic code in the first place</p>",
        "id": 261943980,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1637250008
    },
    {
        "content": "<p>I wouldn’t backport this in that case.</p>",
        "id": 261943988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250014
    },
    {
        "content": "<p>no, it looks like on beta at least something has fixed the feature gate to be less sensitive (downgraded to a future compat lint?)</p>",
        "id": 261943992,
        "sender_full_name": "simulacrum",
        "timestamp": 1637250015
    },
    {
        "content": "<p>It doesn't solve resolve</p>",
        "id": 261944008,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1637250019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think the <a href=\"https://github.com/rust-lang/rust/pull/89461/files#diff-d815d3e9f2b1b8fc9e4f1d3067fd7d65f8425e2e66c47c958ef12ec5504e4512R688-R691\">https://github.com/rust-lang/rust/pull/89461/files#diff-d815d3e9f2b1b8fc9e4f1d3067fd7d65f8425e2e66c47c958ef12ec5504e4512R688-R691</a> line disables the coercion unless the feature gate is specified.</p>",
        "id": 261944036,
        "sender_full_name": "nagisa",
        "timestamp": 1637250029
    },
    {
        "content": "<p>hmm. okay.</p>",
        "id": 261944099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250057
    },
    {
        "content": "<p>so the PR description/title is wrong? (it doesn't just implement a lint)</p>",
        "id": 261944131,
        "sender_full_name": "simulacrum",
        "timestamp": 1637250070
    },
    {
        "content": "<p>then again, the amount of confusion here suggests to me that people need some time to look through the code to make a truly informed decision.</p>",
        "id": 261944155,
        "sender_full_name": "nagisa",
        "timestamp": 1637250078
    },
    {
        "content": "<p>and then again, as  <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> pointed out, release is is two weeks anyway</p>",
        "id": 261944229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250112
    },
    {
        "content": "<p>The issue is tagged <code>F-trait_upcasting</code> but it doesn't actually use that feature?</p>",
        "id": 261944276,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250123
    },
    {
        "content": "<p>becasue its expecting Deref to fire intstead of trait upcasting</p>",
        "id": 261944389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250176
    },
    {
        "content": "<p>It trait upcasting stable now?</p>",
        "id": 261944426,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250190
    },
    {
        "content": "<p>no, I understand what <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> was saying now</p>",
        "id": 261944446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250200
    },
    {
        "content": "<p>The lint was firing on code <em>thinking</em> that it would be a case of trait upcasting. And maybe, with the feature gate on, it <em>does</em> cause an attempt to trait upcast</p>",
        "id": 261944528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250233
    },
    {
        "content": "<p>(I cannot tell what the reality is of what is happening in that latter scenario)</p>",
        "id": 261944607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250254
    },
    {
        "content": "<p>But trait upcasting is not stable.</p>",
        "id": 261944628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250266
    },
    {
        "content": "<p>Ah ok. Got it</p>",
        "id": 261944667,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250281
    },
    {
        "content": "<p>anyway I think we should just remove the stable-nomination here</p>",
        "id": 261944712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250298
    },
    {
        "content": "<p>I would apologize for adding it, but then again, I think we all benefited from discussing this.</p>",
        "id": 261944749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250313
    },
    {
        "content": "<p>(but then agian, we are 45 minutes into the m,eeting…..)</p>",
        "id": 261944798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250330
    },
    {
        "content": "<p>Ok, let's keep moving along then</p>",
        "id": 261944811,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250335
    },
    {
        "content": "<p>It's another reminder I think that reviewers should try to make sure PR titles/descriptions match contents, as well.</p>",
        "id": 261944820,
        "sender_full_name": "simulacrum",
        "timestamp": 1637250341
    },
    {
        "content": "<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> \"relate lifetime in <code>TypeOutlives</code> bounds on drop impls\" <a href=\"https://github.com/rust-lang/rust/pull/90840\">rust#90840</a><ul>\n<li>see beta nomination</li>\n</ul>\n</li>\n</ul>",
        "id": 261944821,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250341
    },
    {
        "content": "<p>Since the regression is <code>I-unsound</code>, I think we should stable backport.</p>",
        "id": 261944982,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250395
    },
    {
        "content": "<p>yeah we’ll revisit this though</p>",
        "id": 261944992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250398
    },
    {
        "content": "<p>right?</p>",
        "id": 261945004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250402
    },
    {
        "content": "<p>Oh, yes.</p>",
        "id": 261945015,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250408
    },
    {
        "content": "<p>Sorry</p>",
        "id": 261945019,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250410
    },
    {
        "content": "<p>We want to try removing that branch entirely before backporting.</p>",
        "id": 261945053,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250427
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 261945068,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250433
    },
    {
        "content": "<p>right. but then again</p>",
        "id": 261945070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250433
    },
    {
        "content": "<p>if we have a stable point release</p>",
        "id": 261945079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250438
    },
    {
        "content": "<p>for the LLVM thing...</p>",
        "id": 261945085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250440
    },
    {
        "content": "<p>(anyway, we’ll see what happens….)</p>",
        "id": 261945104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250447
    },
    {
        "content": "<p>I think we should break out a topic and discuss with T-release.</p>",
        "id": 261945133,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250464
    },
    {
        "content": "<p>We may want a point release even with the next stable release arriving soon.</p>",
        "id": 261945222,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250487
    },
    {
        "content": "<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> \"rustdoc: Go back to loading all external crates unconditionally\" <a href=\"https://github.com/rust-lang/rust/pull/90489\">rust#90489</a><ul>\n<li>beta-backport <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-04.20.2354818/near/260278752\">approved last week</a></li>\n<li>stable-backport deferred to this week, could probably follow the release timeline</li>\n</ul>\n</li>\n</ul>",
        "id": 261945258,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250505
    },
    {
        "content": "<p>I think this (the TypeOutlives relation one) PR is exactly what would warrant a point release. LLVM one is meh in comparison.</p>",
        "id": 261945273,
        "sender_full_name": "nagisa",
        "timestamp": 1637250512
    },
    {
        "content": "<p>This was last week's discussion <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-11.20.2354818/near/261148470\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-11.20.2354818/near/261148470</a></p>",
        "id": 261945425,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250570
    },
    {
        "content": "<p>/me is around if <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a> is on the agenda, just ping me.</p>",
        "id": 261945451,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637250581
    },
    {
        "content": "<p>Oh, thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 261945641,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250643
    },
    {
        "content": "<p>my hunch for <a href=\"https://github.com/rust-lang/rust/issues/90489\">#90489</a> is that t-rustdoc seems to agree to \"let it ride the train\"<br>\n<a href=\"#narrow/stream/266220-rustdoc/topic/stable.20backport.20of.20.2390489\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/stable.20backport.20of.20.2390489</a><br>\n(and last week comments)</p>",
        "id": 261945679,
        "sender_full_name": "apiraino",
        "timestamp": 1637250663
    },
    {
        "content": "<p>I think at this point, we should just let this ride the beta train.</p>",
        "id": 261945683,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250664
    },
    {
        "content": "<p>Any objections?</p>",
        "id": 261945844,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250729
    },
    {
        "content": "<p>Ok. Stable backport declined.</p>",
        "id": 261945875,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250747
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>",
        "id": 261945906,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250759
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 261945920,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250764
    },
    {
        "content": "<ul>\n<li>\"Make specifying repr optional for fieldless enums\" <a href=\"https://github.com/rust-lang/rust/pull/88203\">rust#88203</a><ul>\n<li>This is <code>T-lang-nominated</code>, T-lang <a href=\"https://github.com/rust-lang/rust/pull/88203#issuecomment-970574178\">discussed the matter</a></li>\n</ul>\n</li>\n</ul>",
        "id": 261945936,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250772
    },
    {
        "content": "<p>This doesn't seem to be waiting on our team.</p>",
        "id": 261946010,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250804
    },
    {
        "content": "<ul>\n<li>\"Make feature key optional for rustc_stable, rustc_const_stable attributes\" <a href=\"https://github.com/rust-lang/rust/pull/88588\">rust#88588</a><ul>\n<li>Waiting for <code>T-libs</code> feedback</li>\n</ul>\n</li>\n</ul>",
        "id": 261946023,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250810
    },
    {
        "content": "<p>I don't think we need to discuss that either?</p>",
        "id": 261946055,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250822
    },
    {
        "content": "<p>I'm going to skip the PRs waiting for reviews this week.</p>",
        "id": 261946094,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250837
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">81 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">57 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 6 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 3 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">3 P-critical, 49 P-high, 84 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 261946163,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250853
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 261946173,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250859
    },
    {
        "content": "<ul>\n<li>\"Miscompilation where binding only some fields leaks the others\" <a href=\"https://github.com/rust-lang/rust/issues/90752\">rust#90752</a></li>\n</ul>",
        "id": 261946199,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250869
    },
    {
        "content": "<p>I’ll self assign <a href=\"https://github.com/rust-lang/rust/issues/90838\">#90838</a>, since i own the task related to it</p>",
        "id": 261946255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250888
    },
    {
        "content": "<ul>\n<li>\"Unsound drop due to imperfect lifetime checks\" <a href=\"https://github.com/rust-lang/rust/issues/90838\">rust#90838</a></li>\n</ul>",
        "id": 261946319,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250909
    },
    {
        "content": "<p>I can assign 90752 since there's a PR for it waiting on me to review.</p>",
        "id": 261946358,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250922
    },
    {
        "content": "<p>My instinct to <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a> is \"yeah it bad, but does not violate the rust's spec\"</p>",
        "id": 261946421,
        "sender_full_name": "nagisa",
        "timestamp": 1637250946
    },
    {
        "content": "<p>Yeah</p>",
        "id": 261946492,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637250967
    },
    {
        "content": "<p>as in, its not critical?</p>",
        "id": 261946504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637250972
    },
    {
        "content": "<p>Given that leaking is defined as a safe behavior, it doesn't seem <code>P-critical</code> (ie release blocker) to me.</p>",
        "id": 261946585,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251006
    },
    {
        "content": "<p>Well, I would say its bad enough to warrant a backport of a fix to beta, but I would probably not vote for backporting a fix for something like this to stable.</p>",
        "id": 261946587,
        "sender_full_name": "nagisa",
        "timestamp": 1637251006
    },
    {
        "content": "<p>But, I don't think debating P-critical vs P-high is important right now :)</p>",
        "id": 261946694,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251057
    },
    {
        "content": "<p>If anyone thinks we need to discuss those more, leave a reaction and we can continue.</p>",
        "id": 261946738,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251078
    },
    {
        "content": "<p>otherwise</p>",
        "id": 261946793,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251086
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 261946801,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251088
    },
    {
        "content": "<h3>P-high regressions</h3>",
        "id": 261946819,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251096
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 261946839,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251102
    },
    {
        "content": "<p>Ok</p>",
        "id": 261946877,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> did you want to talk about <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a>?</p>",
        "id": 261946969,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251145
    },
    {
        "content": "<p>Some code relies on drop impls getting called for soundness. A lot of <code>std</code> data structures fix up pointers and other stuff in <code>Drop</code> impls to gracefully handle panics</p>",
        "id": 261947051,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251173
    },
    {
        "content": "<p>So it's not quite as simple as \"leaking is safe\"</p>",
        "id": 261947095,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251189
    },
    {
        "content": "<p>On one hand, it's pretty hard to manifest the bug, so I would be surprised if that's happening in the wild. It's probably just the odd leak.</p>",
        "id": 261947316,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251236
    },
    {
        "content": "<p>I thought that was the Leakpocalypse fallout?</p>",
        "id": 261947324,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251239
    },
    {
        "content": "<p>\"leaking\" is safe doesn't mean that dropping can be skipped in local function</p>",
        "id": 261947359,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637251248
    },
    {
        "content": "<p>On the other, there's <a href=\"https://github.com/rust-lang/rust/issues/74551\">#74551</a>, which never got diagnosed, but could plausibly be caused by this.</p>",
        "id": 261947436,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251281
    },
    {
        "content": "<p>(We had another bug on a tier 2 platform that bisected to my change, but was later found to be a platform-specific LLVM bug (thanks <span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span>!))</p>",
        "id": 261947567,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251323
    },
    {
        "content": "<p>But it's been on stable since 1.4x, so I don't know that a stable backport will do all that much. Not really sure what the criteria are.</p>",
        "id": 261947734,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251384
    },
    {
        "content": "<p>I think this issue is bad exactly because leaking doesn't directly cause unsoundness so code wouldn't crash right away. Given that the bug is reported by fuschia I suspect there are more cases in the wild just that they are hard to detect.</p>",
        "id": 261947745,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637251388
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"303710\">Gary Guo</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261947359\">said</a>:</p>\n<blockquote>\n<p>\"leaking\" is safe doesn't mean that dropping can be skipped in local function</p>\n</blockquote>\n<p>I'm not sure I follow the distinction here. If I call <code>std::mem::forget</code>, <code>Drop</code> is never called.</p>",
        "id": 261947816,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251419
    },
    {
        "content": "<p>Yes, but what if you don't call <code>forget</code>.</p>",
        "id": 261947953,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251451
    },
    {
        "content": "<p>If I am writing some unsafe code, having a forget call there will raise my alarm..</p>",
        "id": 261947974,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637251458
    },
    {
        "content": "<p>And we still never call <code>Drop</code></p>",
        "id": 261948012,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251470
    },
    {
        "content": "<p>Right but you can't rely on <code>Drop</code> being called for soundness.</p>",
        "id": 261948148,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251523
    },
    {
        "content": "<p>I think the distinction being made here is where the drop guard is made and dropped in the same scope.</p>",
        "id": 261948210,
        "sender_full_name": "nagisa",
        "timestamp": 1637251551
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/6414e0b5b308d3ae27da83c6a25098cc8aadc1a9/library/alloc/src/collections/binary_heap.rs#L1193-L1202\">https://github.com/rust-lang/rust/blob/6414e0b5b308d3ae27da83c6a25098cc8aadc1a9/library/alloc/src/collections/binary_heap.rs#L1193-L1202</a></p>",
        "id": 261948218,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251553
    },
    {
        "content": "<p>e.g. </p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    let guard = ...;\n    some_op();\n}\n</code></pre></div>",
        "id": 261948305,
        "sender_full_name": "nagisa",
        "timestamp": 1637251574
    },
    {
        "content": "<p>This is one case where we rely on it being called on for soundness. There are many others, all using the pattern that <span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> wrote.</p>",
        "id": 261948408,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637251618
    },
    {
        "content": "<p>I see.</p>",
        "id": 261948446,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251632
    },
    {
        "content": "<p>pin_mut is another example I believe</p>",
        "id": 261948451,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637251633
    },
    {
        "content": "<p>Ok</p>",
        "id": 261948453,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251634
    },
    {
        "content": "<p>We're over time so I'm going to end the meeting but happy to continue the conversation.</p>",
        "id": 261948783,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251745
    },
    {
        "content": "<p>Thanks <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending. See you tomorrow for the planning meeting! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 261948824,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251763
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/0_EhO-piRQudPkG0iTTP9A?view\">https://hackmd.io/0_EhO-piRQudPkG0iTTP9A?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_WG-diagnostics_ by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1380\">WG-rustc-dev-guide</span> by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span></li>\n</ul>",
        "id": 261949030,
        "sender_full_name": "apiraino",
        "timestamp": 1637251838
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261948408\">said</a>:</p>\n<blockquote>\n<p>This is one case where we rely on it being called on for soundness. There are many others, all using the pattern that <span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> wrote.</p>\n</blockquote>\n<p>I can certainly get on board with this being a critical issue but I think the Reference needs to spell out how crucial this behavior is if it's being relied on.</p>",
        "id": 261949130,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251883
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/reference/destructors.html#not-running-destructors\">https://doc.rust-lang.org/reference/destructors.html#not-running-destructors</a></p>\n<blockquote>\n<p>Not running destructors in Rust is safe even if it has a type that isn't 'static. std::mem::ManuallyDrop provides a wrapper to prevent a variable or field from being dropped automatically.</p>\n</blockquote>",
        "id": 261949194,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637251911
    },
    {
        "content": "<p>Lets open a parallel topic to dig into this</p>",
        "id": 261949390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637251976
    },
    {
        "content": "<p>(and, hopefully, come up with some refinement of the docs to clarify the boundaries of our guarantees)</p>",
        "id": 261949495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252017
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261941273\">said</a>:</p>\n<blockquote>\n<p>I’m basically wondering if we should be more conservative, and remove the TypeOutlives arm entirely...</p>\n</blockquote>\n<p>Removing the <code>TypeOutlives</code> arm is almost certainly also going to fix the regression, though it would break the test added in the original pr <a href=\"https://github.com/rust-lang/rust/issues/87770\">#87770</a> (but that's nightly so w/e)</p>",
        "id": 261949506,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637252020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"326176\">@Boxy [she/her]</span> that unit test doesn’t use TypeOutlives ?</p>",
        "id": 261949631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252063
    },
    {
        "content": "<p>we have <code>where [(); N + 1]:</code> (note the trailing <code>:</code>)</p>",
        "id": 261949658,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637252079
    },
    {
        "content": "<p>(that was a complaint I had about the test itself)</p>",
        "id": 261949669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252082
    },
    {
        "content": "<p>oh</p>",
        "id": 261949671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252084
    },
    {
        "content": "<p>that’s … interesting...</p>",
        "id": 261949693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252092
    },
    {
        "content": "<p>I originally didnt add the <code>TypeOutlives</code> arm but it was needed to let that pass since I believe its equivelent to like... <code>where [(); N + 1]: 'empty</code> or something</p>",
        "id": 261949753,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637252116
    },
    {
        "content": "<p>(its a bit silly syntax works but works<span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span>)</p>",
        "id": 261949807,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637252138
    },
    {
        "content": "<p>okay, I guess I need to replace my original complaint with something else about the test being too subtle. (And, at the same time, not trying very hard to explore the space here…)</p>",
        "id": 261949923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252180
    },
    {
        "content": "<p>which I understand</p>",
        "id": 261949953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252195
    },
    {
        "content": "<p>(its not easy to write tests)</p>",
        "id": 261949964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252201
    },
    {
        "content": "<p>but anyway, I think I’m okay with replacing that test with another one, if something reasonable presents itself. Thanks for pointing this out.</p>",
        "id": 261950077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637252247
    },
    {
        "content": "<p>Oh, that generates a <code>TypeOutlives</code>? I thought it would just generate some WF obligation</p>",
        "id": 261950335,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637252353
    },
    {
        "content": "<blockquote>\n<p><code>Drop</code> impl requires <code>[(); _]: '&lt;empty&gt;</code> but the struct it is implemented for does not</p>\n</blockquote>",
        "id": 261950523,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637252418
    },
    {
        "content": "<p>well okay then</p>",
        "id": 261950544,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637252428
    },
    {
        "content": "<p>I'm not sure why it's like that vs a wf obligation... tried to find the PR that changed it but cant <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 261950949,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637252598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261950335\">said</a>:</p>\n<blockquote>\n<p>Oh, that generates a <code>TypeOutlives</code>? I thought it would just generate some WF obligation</p>\n</blockquote>\n<p>used to be a wf obligation was changed to outlives here:<br>\n<a href=\"https://github.com/rust-lang/rust/pull/55649/commits/79b6c41bc2d4e9cb9a0c92c0c446882a0cf1a804\">https://github.com/rust-lang/rust/pull/55649/commits/79b6c41bc2d4e9cb9a0c92c0c446882a0cf1a804</a></p>",
        "id": 261953517,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1637253685
    },
    {
        "content": "<p>hmm, seems to be a chalk thing...not sure</p>",
        "id": 261954806,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637254212
    }
]