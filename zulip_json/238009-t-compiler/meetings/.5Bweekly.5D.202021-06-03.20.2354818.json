[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/wCIbJPBKSxKeScnuh3dr2Q?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>   <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>  </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>   <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 241381901,
        "sender_full_name": "apiraino",
        "timestamp": 1622722498
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Triage meeting is starting now; add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 241394470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622728912
    },
    {
        "content": "<p>We'll start off with ~8 minutes for</p>\n<h2>Announcements</h2>",
        "id": 241394554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622728939
    },
    {
        "content": "<ul>\n<li>Friday <strong>June, 4th 2021 at 10:00 ET / 14:00 UTC</strong> is planning meeting. Get your proposals in at <a href=\"https://github.com/rust-lang/compiler-team/issues/new?assignees=&amp;labels=meeting-proposal&amp;template=meeting-proposal.md&amp;title=%28My+meeting+proposal%29\">proposal site</a></li>\n</ul>",
        "id": 241394609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622728963
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 241394724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729016
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 241394737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729023
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 241394751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729033
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 241394767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729041
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 241394824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729052
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Make <code>TypeFolder::fold_*</code> return <code>Result</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/432\">compiler-team#432</a></li>\n<li>\"Introduce ty::WhereClause to align chalk and rustc dyn representation\" <a href=\"https://github.com/rust-lang/compiler-team/issues/433\">compiler-team#433</a></li>\n<li>\"Force warnings on lints \" <a href=\"https://github.com/rust-lang/compiler-team/issues/434\">compiler-team#434</a></li>\n</ul>\n</li>\n</ul>",
        "id": 241394853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729068
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking issue for WebAssembly SIMD support\" <a href=\"https://github.com/rust-lang/rust/issues/74372\">rust#74372</a></li>\n<li>\"Tracking Issue for VecDeque binary search functions\" <a href=\"https://github.com/rust-lang/rust/issues/78021\">rust#78021</a></li>\n<li>\"Use try_reserve in Vec's io::Write\" <a href=\"https://github.com/rust-lang/rust/pull/84612\">rust#84612</a></li>\n<li>\"Show test type during prints\" <a href=\"https://github.com/rust-lang/rust/pull/84863\">rust#84863</a></li>\n<li>\"rustc: Allow safe #[target_feature] on wasm\" <a href=\"https://github.com/rust-lang/rust/pull/84988\">rust#84988</a></li>\n</ul>\n</li>\n</ul>",
        "id": 241394881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729080
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 241395277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729254
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> </p>\n<blockquote>\n<ul>\n<li>Currently iterating on the async vision doc.</li>\n<li>Completed the brainstorming period.</li>\n<li>Working on a \"harmonized shiny future\".</li>\n<li>Little coding at present that @nikomatsakis is aware of, anyhow.</li>\n</ul>\n</blockquote>",
        "id": 241395295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729263
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> </p>\n<blockquote>\n<ul>\n<li>Stabilized member constraints (<a href=\"https://github.com/rust-lang/rust/pull/84701\">https://github.com/rust-lang/rust/pull/84701</a>).</li>\n<li>Working towards stabilized named impl Trait and generic associated types.</li>\n<li>Jack Huey has a PR that is aiming to normalize under binders (<a href=\"https://github.com/rust-lang/rust/pull/85499\">https://github.com/rust-lang/rust/pull/85499</a>), which is pretty exciting.</li>\n<li>Still making small steps towards chalk-ty library, such as synchronizing rustc and chalk's folder traits.</li>\n</ul>\n</blockquote>",
        "id": 241395312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729270
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 241395329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729279
    },
    {
        "content": "<p>Oh I guess I jumped the gun a little there. Before we move to backport nominations: Does anyone want to chime in with any announcement of their own?</p>",
        "id": 241395461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729320
    },
    {
        "content": "<p>One little thing: I will be sporadically available for the next two weeks starting on Monday. I'll still jump in, but won't be 100 immediately available.</p>",
        "id": 241395717,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622729419
    },
    {
        "content": "<p>okay well lets move on to backport nominations</p>",
        "id": 241395802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729453
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Reachable statics have reachable initializers\" <a href=\"https://github.com/rust-lang/rust/pull/84549\">rust#84549</a><ul>\n<li>opened by <code>@tmiasko</code></li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span></li>\n<li>patch is already merged, fixes <a href=\"https://github.com/rust-lang/rust/issues/84455\">#84455</a> a P-medium()</li>\n</ul>\n</li>\n</ul>",
        "id": 241395829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729464
    },
    {
        "content": "<p>the thread on <a href=\"https://github.com/rust-lang/rust/issues/84455\">#84455</a> says this never worked correctly</p>",
        "id": 241395920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729510
    },
    {
        "content": "<p>so why wouldn't this change ride the trains?</p>",
        "id": 241395925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729516
    },
    {
        "content": "<p>I'd let it ride the trains</p>",
        "id": 241396014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1622729539
    },
    {
        "content": "<p>just because an ICE is bad?</p>",
        "id": 241396023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729541
    },
    {
        "content": "<p>(funny how this feels like it falls into a similar bucket as the incr-comp issue: An outright codegen bug is turned into an ICE, and suddenly we are under pressure to supply an \"appropriate\" (non-ICE'ing) fix.)</p>",
        "id": 241396107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729585
    },
    {
        "content": "<p>although the change is small and looks innocent but still, if this always existed I'd let it ride the trains</p>",
        "id": 241396150,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1622729608
    },
    {
        "content": "<p>(except of course the incr-comp issue was something where working code suddenly became non-working code.)</p>",
        "id": 241396161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729611
    },
    {
        "content": "<p>let me see who nominated this</p>",
        "id": 241396188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729628
    },
    {
        "content": "<p>It's <span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span></p>",
        "id": 241396209,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1622729642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> you want to argue for why we should backport?</p>",
        "id": 241396262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729651
    },
    {
        "content": "<p>I would be more inclined to backport if it turned an ice into an error, this makes to pass now.</p>",
        "id": 241396334,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622729688
    },
    {
        "content": "<p>yeah</p>",
        "id": 241396351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729695
    },
    {
        "content": "<p>oh, is this not a regression?</p>",
        "id": 241396393,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622729712
    },
    {
        "content": "<p>lets plan on letting it ride the trains. <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> if you get chance to chime in later, feel free</p>",
        "id": 241396399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729714
    },
    {
        "content": "<p>Let's <em>confirm</em> this never worked</p>",
        "id": 241396441,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622729732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> the ICE'ing is new behavior, but according to the thread ... oh that's a good point. :)</p>",
        "id": 241396457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729739
    },
    {
        "content": "<p>FYI: Depending on case by case basis, sometimes it worked correctly, and sometimes it is still broken.</p>",
        "id": 241396459,
        "sender_full_name": "tm",
        "timestamp": 1622729740
    },
    {
        "content": "<p>hmm</p>",
        "id": 241396469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729746
    },
    {
        "content": "<p>then I don't think we should backport, I think I nominated this because someone asked for that</p>",
        "id": 241396472,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622729747
    },
    {
        "content": "<p>if it sometimes worked correctly, then its a little more subtle.</p>",
        "id": 241396503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729761
    },
    {
        "content": "<p>yeah: <a href=\"#narrow/stream/241545-t-release/topic/Porting.20ICE.20crash.20to.20beta.3F/near/240792305\">https://rust-lang.zulipchat.com/#narrow/stream/241545-t-release/topic/Porting.20ICE.20crash.20to.20beta.3F/near/240792305</a></p>",
        "id": 241396566,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622729776
    },
    {
        "content": "<p>Did those times stop working?</p>",
        "id": 241396576,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622729779
    },
    {
        "content": "<p>The issue tracking cases where it does not work still: <a href=\"https://github.com/rust-lang/rust/issues/79738\">#79738</a>.</p>",
        "id": 241396637,
        "sender_full_name": "tm",
        "timestamp": 1622729813
    },
    {
        "content": "<p>wait even <em>with</em> this change, <a href=\"https://github.com/rust-lang/rust/issues/79738\">#79738</a> remains a problem?</p>",
        "id": 241396667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729831
    },
    {
        "content": "<p>or are you saying that this change will fix <a href=\"https://github.com/rust-lang/rust/issues/79738\">#79738</a>?</p>",
        "id": 241396679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729841
    },
    {
        "content": "<p>If people lived with it for 53 releases, I'm sure they can live with it for 1 more.</p>",
        "id": 241396719,
        "sender_full_name": "nagisa",
        "timestamp": 1622729866
    },
    {
        "content": "<p>It is related issue, but  has a different root cause.</p>",
        "id": 241396721,
        "sender_full_name": "tm",
        "timestamp": 1622729866
    },
    {
        "content": "<p>seems like rare enough bug.</p>",
        "id": 241396728,
        "sender_full_name": "nagisa",
        "timestamp": 1622729870
    },
    {
        "content": "<p>if a case previously worked now ICE's, that is different than living with it for 53 releases</p>",
        "id": 241396800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729889
    },
    {
        "content": "<p>How about we revisit next week?</p>",
        "id": 241396811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729896
    },
    {
        "content": "<p>That is, leave it beta-nominated. I'll take action item of figuring out cases where it worked and where it didn't.</p>",
        "id": 241396883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729931
    },
    {
        "content": "<p>(probably will need <span class=\"user-mention\" data-user-id=\"352985\">@tm</span> 's help on that.)</p>",
        "id": 241396903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622729940
    },
    {
        "content": "<p>next</p>",
        "id": 241397149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730034
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Build crtbegin.o/crtend.o from source code\" <a href=\"https://github.com/rust-lang/rust/pull/85395\">rust#85395</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"352056\">@12101111</span> </li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/issues/85310\">#85310</a>, <a href=\"https://github.com/rust-lang/rust/issues/47551\">#47551</a>, <a href=\"https://github.com/rust-lang/rust/issues/84033\">#84033</a></li>\n<li>already merged, reviewed by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n</ul>\n</li>\n</ul>",
        "id": 241397180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730044
    },
    {
        "content": "<p>the comment thread is pretty interesting, it seems like <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> was questioning whether this was a good change for a long while</p>",
        "id": 241397346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> I cannot tell what made you resolve your posted <a href=\"https://github.com/rust-lang/rust/pull/85395#issuecomment-850869460\">question</a> of </p>\n<blockquote>\n<p>what is simpler, less error-prone and requires less support - implementing the object search for all platforms on which x.py dist is supposed to be run, or building the objects ourselves (with correct flags and defines).</p>\n</blockquote>",
        "id": 241397471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730168
    },
    {
        "content": "<p>The comment right before <code>@bors r+</code> demonstrates that some systems simply don't appear to have these objects around.</p>",
        "id": 241397526,
        "sender_full_name": "nagisa",
        "timestamp": 1622730198
    },
    {
        "content": "<p>I had trouble interpreting that; it was demonstrating that <code>gcc</code> itself doesn't even work</p>",
        "id": 241397601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730241
    },
    {
        "content": "<p>This is in a similar bucket as previous backport in a way that things have been broken for a while in very specific scenarios for a long time, but we recently started linking crtbegin/end to rust binaries too, so it is also resolving a regression.</p>",
        "id": 241397664,
        "sender_full_name": "nagisa",
        "timestamp": 1622730252
    },
    {
        "content": "<p>I guess the point is that we cannot assume that a working C compiler is installed ... but no, we <em>definitely</em> assume that, don't we?</p>",
        "id": 241397719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730278
    },
    {
        "content": "<p>Or do we use the native linker directly on such platforms?</p>",
        "id": 241397762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730296
    },
    {
        "content": "<p>The refrain was primarily AFAIU because we thought that all of the systems always have crtbegin/end around (and so implementing search and copy would be an option) and it seems to not be the case.</p>",
        "id": 241397772,
        "sender_full_name": "nagisa",
        "timestamp": 1622730300
    },
    {
        "content": "<p>The only assumption is presence of linker, right?</p>",
        "id": 241397790,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622730306
    },
    {
        "content": "<p>Okay well I'm willing to believe the explanation that <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> has posted</p>",
        "id": 241397832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730327
    },
    {
        "content": "<p>We now do assume crtbegin/end are present much like libc is.</p>",
        "id": 241397859,
        "sender_full_name": "nagisa",
        "timestamp": 1622730339
    },
    {
        "content": "<p>ref <a href=\"https://github.com/rust-lang/rust/pull/82534\">https://github.com/rust-lang/rust/pull/82534</a> which is the introduction of the regression.</p>",
        "id": 241397945,
        "sender_full_name": "nagisa",
        "timestamp": 1622730369
    },
    {
        "content": "<p>and so the next question is: Should we backport this, or <a href=\"https://github.com/rust-lang/rust/pull/85395#issuecomment-850870521\">revert</a> <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> ?</p>",
        "id": 241397946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> what are your opinions regarding <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> ? Is it a must-have for 1.53 ?</p>",
        "id": 241398084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730427
    },
    {
        "content": "<p>Reverting 82534 can cause the unwinder which can be accessed from safe code to follow invalid pointers (UBish?)</p>",
        "id": 241398089,
        "sender_full_name": "nagisa",
        "timestamp": 1622730429
    },
    {
        "content": "<p>okay, and that's <a href=\"https://github.com/rust-lang/rust/issues/47551\">#47551</a> for example ?</p>",
        "id": 241398147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730471
    },
    {
        "content": "<p>Right.</p>",
        "id": 241398217,
        "sender_full_name": "nagisa",
        "timestamp": 1622730488
    },
    {
        "content": "<p>although this <del>issue</del> PR indicates this is an LLVM 12 issue?</p>",
        "id": 241398231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730497
    },
    {
        "content": "<p>or did I mis-infer that</p>",
        "id": 241398265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730514
    },
    {
        "content": "<p>So this has UB in 1.51, fails in 1.52 and is proposed as a backport to 1.53, correct?</p>",
        "id": 241398283,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622730523
    },
    {
        "content": "<p>does LLVM 12 just exacerbate the existing problem?</p>",
        "id": 241398347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730556
    },
    {
        "content": "<p>Reverting the PR wouldn't introduce <em>new UB</em>, in my eyes</p>",
        "id": 241398379,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622730574
    },
    {
        "content": "<p>I'll be honest, I'm not opposed to the backport at this point</p>",
        "id": 241398389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730579
    },
    {
        "content": "<p>its just ... its a long chain of reasoning. :)</p>",
        "id": 241398411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-03.20.2354818/near/241398231\">said</a>:</p>\n<blockquote>\n<p>although this <del>issue</del> PR indicates this is an LLVM 12 issue?</p>\n</blockquote>\n<p>I don't remember the exact detail regarding this, but a section that was created by a crt object would need to be terminated by a crt object.</p>",
        "id": 241398486,
        "sender_full_name": "nagisa",
        "timestamp": 1622730608
    },
    {
        "content": "<p>its more likely that the implementation of libunwind or similar has changed, that makes it be stricter with regards to the -eh_unwind section.</p>",
        "id": 241398520,
        "sender_full_name": "nagisa",
        "timestamp": 1622730617
    },
    {
        "content": "<p>The main risks I can see associated with PR <a href=\"https://github.com/rust-lang/rust/issues/85395\">#85395</a> are that it might cause some Tier-3 platforms to stop building, right?</p>",
        "id": 241398590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730652
    },
    {
        "content": "<p>I'm happy with either revert or backport personally.</p>",
        "id": 241398603,
        "sender_full_name": "nagisa",
        "timestamp": 1622730660
    },
    {
        "content": "<p>(because we are <em>testing</em> builds for Tier-1 and Tier-2 platforms, and it seems like the nature of the change is that 99.9% of the time, either it will work no problem, or it will fail to build the crtbegin.o/crtend.o objects and things will fail very obviously.)</p>",
        "id": 241398693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730711
    },
    {
        "content": "<p>I think the nature of the potential failure associated with PR <a href=\"https://github.com/rust-lang/rust/issues/85395\">#85395</a> sounds way more attractive than all the question marks I see associated with a revert of PR <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a>.</p>",
        "id": 241398801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730740
    },
    {
        "content": "<p>(but then again, a revert of PR <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> on beta alone just takes us back to previous status quo. Which is not terrible.)</p>",
        "id": 241398897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730787
    },
    {
        "content": "<p>OMG I just realized that I never put the <span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span> etc emojis down</p>",
        "id": 241398961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730825
    },
    {
        "content": "<p><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Build crtbegin.o/crtend.o from source code\" <a href=\"https://github.com/rust-lang/rust/issues/85395\">#85395</a></p>",
        "id": 241399025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730844
    },
    {
        "content": "<p>I'm not sure if we can revert, now that I think about it.</p>",
        "id": 241399060,
        "sender_full_name": "nagisa",
        "timestamp": 1622730856
    },
    {
        "content": "<p>because other stuff in beta has built atop <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> ?</p>",
        "id": 241399092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730880
    },
    {
        "content": "<p>if my memory serves me right, LLVM 12 upgrade didn't pass the CI because of this bug, so revert would also require reverting LLVM 12.</p>",
        "id": 241399093,
        "sender_full_name": "nagisa",
        "timestamp": 1622730880
    },
    {
        "content": "<p>Okay well that's not happening.</p>",
        "id": 241399108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730886
    },
    {
        "content": "<p>Then again, my remembering is fuzzy on this.</p>",
        "id": 241399125,
        "sender_full_name": "nagisa",
        "timestamp": 1622730897
    },
    {
        "content": "<p>Okay, lets do it. YOLO.</p>",
        "id": 241399128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730899
    },
    {
        "content": "<p>beta-backport for <a href=\"https://github.com/rust-lang/rust/issues/85395\">#85395</a> approved.</p>",
        "id": 241399145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730907
    },
    {
        "content": "<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/2ad07b11f914f23d46d52fb16b528f0d1983b5df/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731362e706e67\" title=\"stable\"> \"Build crtbegin.o/crtend.o from source code\" <a href=\"https://github.com/rust-lang/rust/pull/85395\">rust#85395</a><ul>\n<li>(see beta nomination)</li>\n<li>possibly a dot release? (see <a href=\"https://github.com/rust-lang/rust/pull/85395#issuecomment-850870521\">comment</a>)</li>\n<li>or revert <a href=\"https://github.com/rust-lang/rust/pull/82534\">#82534</a></li>\n</ul>\n</li>\n</ul>",
        "id": 241399185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730923
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/81451#issuecomment-785422316\">https://github.com/rust-lang/rust/pull/81451#issuecomment-785422316</a> yeah, here's the comment confirming this.</p>",
        "id": 241399227,
        "sender_full_name": "nagisa",
        "timestamp": 1622730946
    },
    {
        "content": "<p>so here's where I get confused</p>",
        "id": 241399305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730966
    },
    {
        "content": "<p>the stable is out, and it has <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> on it</p>",
        "id": 241399329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622730982
    },
    {
        "content": "<p>so what is the nature of the expected failure when you have <a href=\"https://github.com/rust-lang/rust/issues/82534\">#82534</a> landed, but not PR <a href=\"https://github.com/rust-lang/rust/issues/85395\">#85395</a> ?</p>",
        "id": 241399366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731003
    },
    {
        "content": "<p>your code fails to link on some platforms because linker can't find crtbegin/end.o files.</p>",
        "id": 241399450,
        "sender_full_name": "nagisa",
        "timestamp": 1622731040
    },
    {
        "content": "<p>Have we seen any bug reports against stable saying that?</p>",
        "id": 241399470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731052
    },
    {
        "content": "<p>I guess that is <a href=\"https://github.com/rust-lang/rust/issues/85310\">#85310</a> ?</p>",
        "id": 241399507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731080
    },
    {
        "content": "<p>1.53 is the stable version now, right? <a href=\"https://github.com/rust-lang/rust/issues/84033\">https://github.com/rust-lang/rust/issues/84033</a> is one then.</p>",
        "id": 241399548,
        "sender_full_name": "nagisa",
        "timestamp": 1622731087
    },
    {
        "content": "<p>\"now\" ?</p>",
        "id": 241399573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731094
    },
    {
        "content": "<p>1.53-beta is current beta channel</p>",
        "id": 241399595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731100
    },
    {
        "content": "<p>we will be releasing 1.53 stable in two weeks</p>",
        "id": 241399613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731108
    },
    {
        "content": "<p>I suspect the nature of this bug does not warrant a point release</p>",
        "id": 241399633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731117
    },
    {
        "content": "<p>okay, well, that issue was filled against 1.52.0-beta, which is now stable, then.</p>",
        "id": 241399634,
        "sender_full_name": "nagisa",
        "timestamp": 1622731118
    },
    {
        "content": "<p>gotcha</p>",
        "id": 241399673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731144
    },
    {
        "content": "<p>but its just a bootstrap problem <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 241399688,
        "sender_full_name": "nagisa",
        "timestamp": 1622731149
    },
    {
        "content": "<p>So I guess a better classification would be: you are unable to build the stable compiler in some setups?</p>",
        "id": 241399737,
        "sender_full_name": "nagisa",
        "timestamp": 1622731173
    },
    {
        "content": "<p>(we don't decide on whether release is warranted, only about the backport, theoretically)</p>",
        "id": 241399754,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622731181
    },
    {
        "content": "<p>yeah</p>",
        "id": 241399768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731185
    },
    {
        "content": "<p>its true</p>",
        "id": 241399776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731188
    },
    {
        "content": "<p>I was just thinking about that to myself</p>",
        "id": 241399790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731194
    },
    {
        "content": "<p>i.e. do we need/want to differentiate between</p>",
        "id": 241399846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731205
    },
    {
        "content": "<p>\"OMG this <em>must</em> be backported\"</p>",
        "id": 241399862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731209
    },
    {
        "content": "<p>vs</p>",
        "id": 241399865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731210
    },
    {
        "content": "<p>\"well, if someone wants to backport this, we won't object\"</p>",
        "id": 241399887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731222
    },
    {
        "content": "<p>or should those be treated as the same bucket?</p>",
        "id": 241399928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731241
    },
    {
        "content": "<p>That's a signal we should be leaving for the release team, even if it is just a link to zulip convo</p>",
        "id": 241399980,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622731264
    },
    {
        "content": "<p>(and even if they were the same bucket, would we even put this backport nom into the \"if someone wants to backport this, we won't object\" bucket)</p>",
        "id": 241399997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731273
    },
    {
        "content": "<p>Having said that, Im uneasy about backporting this to stable, but won't object if someone feels strongly about it</p>",
        "id": 241400084,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622731310
    },
    {
        "content": "<p>We're probably spending too much time on this</p>",
        "id": 241400098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731313
    },
    {
        "content": "<p>Does anyone want to argue <em>for</em> backporting this to stable?</p>",
        "id": 241400166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731327
    },
    {
        "content": "<p>Given that this issue is already in a stable release I'd say lets not backport this, esp since we're gonna release 1.53 in 2 weeks anyway.</p>",
        "id": 241400170,
        "sender_full_name": "nagisa",
        "timestamp": 1622731329
    },
    {
        "content": "<p>And I would personally leave it under the \"don't object bucket\" if we did</p>",
        "id": 241400189,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622731334
    },
    {
        "content": "<p>Yeah I understnad your thinking, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 241400229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731357
    },
    {
        "content": "<p>but there's another part of my brain that says \"well, some kinds of bugs are <em>worth</em> fixing even in old releases.\"</p>",
        "id": 241400259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731372
    },
    {
        "content": "<p>bootstrap issues <em>can</em> qualify</p>",
        "id": 241400285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731382
    },
    {
        "content": "<p>as being the kinds of things I'd like to fix, in terms of being able to construct old versions in the future</p>",
        "id": 241400323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731398
    },
    {
        "content": "<p>but I'm pretty uneasy about approving this for stable</p>",
        "id": 241400373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731429
    },
    {
        "content": "<p>anyway, lets just say stable-backport declined</p>",
        "id": 241400394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731438
    },
    {
        "content": "<p>(but I do agree with a lot of the points that were raised; e..g that its the release team's call about whether to issue a point release, etc)</p>",
        "id": 241400508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731476
    },
    {
        "content": "<p>(I just wonder if the decisions we make in this meeting, about what things to backport, end up influencing <em>those</em> decisions downstream.)</p>",
        "id": 241400549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731494
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 241400574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731504
    },
    {
        "content": "<p>/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc) / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 241400601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731514
    },
    {
        "content": "<p>Oh, one more thing</p>",
        "id": 241400631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731530
    },
    {
        "content": "<p>Just more of a heads up</p>",
        "id": 241400641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731534
    },
    {
        "content": "<p>I'll be reverting PR <a href=\"https://github.com/rust-lang/rust/issues/81238\">#81238</a> on the mainline and beta branches</p>",
        "id": 241400670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731553
    },
    {
        "content": "<p>in order to resolve issue <a href=\"https://github.com/rust-lang/rust/issues/84297\">#84297</a> (a beta regression) in the short term</p>",
        "id": 241400776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731579
    },
    {
        "content": "<p>longer term, we'll re-land PR <a href=\"https://github.com/rust-lang/rust/issues/81238\">#81238</a> after we figure out our strategy for intrinsics and reification.</p>",
        "id": 241400825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731599
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 241400884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731621
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">5 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">3 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">76 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">49 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">6 P-critical, 0 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 2 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">3 P-critical, 46 P-high, 86 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 241400908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731629
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 241400927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731637
    },
    {
        "content": "<ul>\n<li>\"ICE when reifying function pointers to copy / copy_nonoverlapping using an if\" <a href=\"https://github.com/rust-lang/rust/issues/84297\">rust#84297</a><ul>\n<li>issue of interest for T-lang?</li>\n</ul>\n</li>\n</ul>",
        "id": 241400955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731646
    },
    {
        "content": "<p>heh, I just explained my strategy for this</p>",
        "id": 241400978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731660
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>issue is being followed</li>\n</ul>\n</li>\n</ul>",
        "id": 241400997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731667
    },
    {
        "content": "<p>we had a steering last Friday about this: The plan is to disable incr-comp on 1.53 stable, the same way it was disabled in 1.52.1 release</p>",
        "id": 241401065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731685
    },
    {
        "content": "<ul>\n<li>\"Miscompilation on ARM-M with nightly-2021-04-23\" <a href=\"https://github.com/rust-lang/rust/issues/85351\">rust#85351</a><ul>\n<li>issue reported and fixed on LLVM end <a href=\"https://reviews.llvm.org/D103167\">D103167</a></li>\n<li>issue unassigned, does it need an owner?</li>\n</ul>\n</li>\n</ul>",
        "id": 241401121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731708
    },
    {
        "content": "<p>we dont have any MCVE for this yet, right?</p>",
        "id": 241401264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731769
    },
    {
        "content": "<p>what is our plan here?</p>",
        "id": 241401430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731818
    },
    {
        "content": "<p>the simplest thing would be to outright disable the outliner optimization</p>",
        "id": 241401465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731834
    },
    {
        "content": "<p>right?</p>",
        "id": 241401478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731837
    },
    {
        "content": "<p>eh, it's in LLVM, not sure how easy that is</p>",
        "id": 241401502,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731847
    },
    {
        "content": "<p>we have a fix in LLVM though right?</p>",
        "id": 241401514,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731853
    },
    {
        "content": "<p>just needs a backport to our branch, presumably?</p>",
        "id": 241401531,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I figure if you can disable via RUSTFLAGS, it must similarly be easy to do in software?</p>",
        "id": 241401555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731872
    },
    {
        "content": "<p>It looks like the LLVM patch is still waiting to be reviewed/merged.</p>",
        "id": 241401584,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1622731883
    },
    {
        "content": "<p>ah I see, -C llvm-args=--enable-machine-outliner=never</p>",
        "id": 241401597,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731889
    },
    {
        "content": "<p>I guess we can, seems like it's pretty recent, so probably not a big hit</p>",
        "id": 241401627,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731903
    },
    {
        "content": "<p>not sure how well-tested that configuration is</p>",
        "id": 241401638,
        "sender_full_name": "simulacrum",
        "timestamp": 1622731911
    },
    {
        "content": "<p>Or rather, choices as I see them are: </p>\n<ol>\n<li>Do nothing; let bug persist and document workaround for those that hit it</li>\n<li>Disable outliner optimization (potentially just on ARM. Or potentially for every target.)</li>\n<li>Backport the LLVM patch that is not yet merged to LLVM itself.</li>\n</ol>",
        "id": 241401758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622731952
    },
    {
        "content": "<p>Disabling the outliner optimization seems safest</p>",
        "id": 241401847,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622731986
    },
    {
        "content": "<p>This fix seems unlikely to make it to 12.0.1 LLVM release, so I don't see it likely that we'll get it as part of some backport. Seems reasonable to disable.</p>",
        "id": 241401885,
        "sender_full_name": "nagisa",
        "timestamp": 1622732006
    },
    {
        "content": "<p>Outliner is effectively just a minor size optimization anyway.</p>",
        "id": 241401919,
        "sender_full_name": "nagisa",
        "timestamp": 1622732022
    },
    {
        "content": "<p>Yes I'm inclined to disable</p>",
        "id": 241401925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732024
    },
    {
        "content": "<p>Should we disable on both mainline and beta?</p>",
        "id": 241401943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732032
    },
    {
        "content": "<p>or just mainline?</p>",
        "id": 241401947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732034
    },
    {
        "content": "<p>Both.</p>",
        "id": 241402002,
        "sender_full_name": "nagisa",
        "timestamp": 1622732043
    },
    {
        "content": "<p>Okay</p>",
        "id": 241402016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732046
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  do you think you'd have time to own that over next few days?</p>",
        "id": 241402041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732058
    },
    {
        "content": "<p>Code to disable will likely be trivial enough that backporting would be fairly obvious.</p>",
        "id": 241402060,
        "sender_full_name": "nagisa",
        "timestamp": 1622732065
    },
    {
        "content": "<p>I don't know what my weekend will look like but if I have some time I might hack on it, sure.</p>",
        "id": 241402110,
        "sender_full_name": "nagisa",
        "timestamp": 1622732084
    },
    {
        "content": "<p>Hmm. Okay</p>",
        "id": 241402122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732089
    },
    {
        "content": "<p>I'll see if I can get to it today or tomorrow. But if you don't see a PR from me about it, then you should assume I didn't make it happen.</p>",
        "id": 241402150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732107
    },
    {
        "content": "<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span></li>\n<li>reporter suggests possible fixes, on Zulip <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/Issues.20.2385863.20and.20.2385873\">some more thoughts</a></li>\n<li>is this issue of interest for T-lang? Also for T-libs?</li>\n</ul>\n</li>\n</ul>",
        "id": 241402223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732138
    },
    {
        "content": "<p>I don't think we have time to get into this one today</p>",
        "id": 241402309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732163
    },
    {
        "content": "<p>I just completed a new short high-level description on both this issue and the next one on the agenda and put it into <a href=\"https://github.com/rust-lang/rust/issues/85863\">#85863</a>:</p>\n<blockquote>\n<p>Fuse&lt;T&gt; and Zip&lt;T, U&gt; have optimizations relying on specialization if their type parameters implement a trait (FusedIterator or TrustedRandomAccess, respectively).</p>\n<p>These optimizations fundamentally change the way the iterator operates.</p>\n<p>All type arguments are covariant. Coercing e.g. Fuse&lt;T&gt; to Fuse&lt;U&gt; if U is a subtype of T can âswitch betweenâ these fundamentally different ways of operation if T: !FusedIterator and U: FusedIterator which can bring the iterator into an invalid state that can cause UB; the same kind of problem exists for Zip.</p>\n</blockquote>",
        "id": 241402342,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1622732171
    },
    {
        "content": "<p>It definitely sounds like a <del>T-libs</del> T-lang thing</p>",
        "id": 241402438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732218
    },
    {
        "content": "<p>unfortunately I missed the Tuesday <del>libs</del> lang meeting</p>",
        "id": 241402456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732226
    },
    {
        "content": "<p>I think T-libs, though there may be implications for T-lang's consideration of min_specialization (it seems like this is an easy footgun to hit, at least).</p>",
        "id": 241402505,
        "sender_full_name": "simulacrum",
        "timestamp": 1622732248
    },
    {
        "content": "<p>There seems to be a common theme of coercions doing unexpected things that leads to unsoundness</p>",
        "id": 241402526,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622732256
    },
    {
        "content": "<p>libs-impl too. I think the actual type-system part that T-lang would have a say over is well-enough defined.</p>",
        "id": 241402535,
        "sender_full_name": "nagisa",
        "timestamp": 1622732259
    },
    {
        "content": "<p>See also the Pin issues, for example</p>",
        "id": 241402548,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622732266
    },
    {
        "content": "<p>okay well lets let libs-impl drive this bug</p>",
        "id": 241402656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732293
    },
    {
        "content": "<p>(though those issues went through CoerceUnsized)</p>",
        "id": 241402663,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622732297
    },
    {
        "content": "<ul>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span>, related to issue <a href=\"https://github.com/rust-lang/rust/issues/85863\">#85863</a></li>\n<li>issue unassigned</li>\n<li>is this issue of interest for T-lang? Also for T-libs?</li>\n</ul>\n</li>\n</ul>",
        "id": 241402681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732304
    },
    {
        "content": "<p>this is in similar boat</p>",
        "id": 241402698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732309
    },
    {
        "content": "<p>so I'm going to treat it similarly</p>",
        "id": 241402708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732313
    },
    {
        "content": "<p>and move on</p>",
        "id": 241402712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732314
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>(see above) issue of interest also for T-libs-impl? </li>\n</ul>\n</li>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>(see above) issue of interest also for T-libs-impl?</li>\n</ul>\n</li>\n</ul>",
        "id": 241402738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732325
    },
    {
        "content": "<p>(ditto)</p>",
        "id": 241402748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732327
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 241402775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732336
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 241402807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732346
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-06-01.md\">triage logs for 2021-06</a></p>\n</blockquote>\n<h1>2021-06-01 Triage Log</h1>\n<p>Busy week, with several reverted PRs due to performance regressions, but overall a positive week.</p>\n<p>Triage done by <strong>@simulacrum</strong>.</p>\n<p>3 Regressions, 3 Improvements, 5 Mixed</p>",
        "id": 241402852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732365
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Merge CrateDisambiguator into StableCrateId <a href=\"https://github.com/rust-lang/rust/issues/85804\">#85804</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2023cc3aa1ea98530f3124ed07713e6f95fd26ab&amp;end=59579907ab52ad2369735622185a26f158bf0f0f&amp;stat=instructions:u\">instruction counts</a> (up to 1.6% on <code>full</code> builds of <code>html5ever-opt</code>)</li>\n<li>Seems to differ from the benchmark on PR, but held up over the rest of the<br>\n  week on the graph. Suggested a revert on PR.</li>\n</ul>",
        "id": 241402878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732375
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Don't hash <code>thir_body</code> <a href=\"https://github.com/rust-lang/rust/issues/85729\">#85729</a></li>\n<li>Optimize proc macro bridge <a href=\"https://github.com/rust-lang/rust/issues/85390\">#85390</a></li>\n</ul>",
        "id": 241402920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732390
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Add <code>TrustedRandomAccess</code> specialization for <code>Vec::extend()</code> <a href=\"https://github.com/rust-lang/rust/issues/83770\">#83770</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9a700d2947f2d7f97a2c0dfca3117a8dcc255bdd&amp;end=9111b8ae9793f18179a1336417618fc07a9cac85&amp;stat=instructions:u\">instruction counts</a> (up to 2.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=9a700d2947f2d7f97a2c0dfca3117a8dcc255bdd&amp;end=9111b8ae9793f18179a1336417618fc07a9cac85&amp;stat=instructions:u\">instruction counts</a> (up to -1.6% on <code>incr-patched: println</code> builds of <code>cargo-debug</code>)</li>\n<li>Reverted in the next result, seems to surprisingly in practice not be an improvement on<br>\n  some of our larger benchmarks.</li>\n</ul>\n<p>Revert \"Auto merge of <a href=\"https://github.com/rust-lang/rust/issues/83770\">#83770</a> - the8472:tra-extend, r=Mark-Simulacrum\" <a href=\"https://github.com/rust-lang/rust/issues/85754\">#85754</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=9a72afa7dd5689da1844695086d1f89130956a88&amp;end=bff138dbd95cec763f4def6b91bb465a26aaad9f&amp;stat=instructions:u\">instruction counts</a> (up to -2.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9a72afa7dd5689da1844695086d1f89130956a88&amp;end=bff138dbd95cec763f4def6b91bb465a26aaad9f&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>incr-patched: println</code> builds of <code>cargo-debug</code>)</li>\n</ul>\n<p>Simplification of query forcing <a href=\"https://github.com/rust-lang/rust/issues/85319\">#85319</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=d93b6a4598946a6a97e8f1b073b1cfc08d332a86&amp;end=f60a67025607e74fbee31c2007f8791c2f352b6a&amp;stat=instructions:u\">instruction counts</a> (up to -3.2% on <code>full</code> builds of <code>unused-warnings-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d93b6a4598946a6a97e8f1b073b1cfc08d332a86&amp;end=f60a67025607e74fbee31c2007f8791c2f352b6a&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>incr-unchanged</code> builds of <code>stm32f4-check</code>)</li>\n<li>Regressions seem to be limited to unused-warnings incremental.</li>\n</ul>\n<p>Reduce the amount of untracked state in TyCtxt <a href=\"https://github.com/rust-lang/rust/issues/85153\">#85153</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d2091147b16a1e3e1f9a73b6ee29fbe941c8abce&amp;end=41278062c8399ac02ed281e8b1648b99a36942e6&amp;stat=instructions:u\">instruction counts</a> (up to 1038.2% on <code>incr-unchanged</code> builds of <code>regex-opt</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=d2091147b16a1e3e1f9a73b6ee29fbe941c8abce&amp;end=41278062c8399ac02ed281e8b1648b99a36942e6&amp;stat=instructions:u\">instruction counts</a> (up to -1.3% on <code>full</code> builds of <code>cranelift-codegen-check</code>)</li>\n<li>This was a pretty big regression, and wasn't detected on the PR run,<br>\n  presumably due to work since the merge.</li>\n</ul>\n<p>Revert \"Reduce the amount of untracked state in TyCtxt\" <a href=\"https://github.com/rust-lang/rust/issues/85884\">#85884</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=80af6b091f6a4855be71bba1cd0c1ee9fd2a57a8&amp;end=1160cf864f2a0014e3442367e1b96496bfbeadf4&amp;stat=instructions:u\">instruction counts</a> (up to -91.2% on <code>incr-unchanged</code> builds of <code>regex-opt</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=80af6b091f6a4855be71bba1cd0c1ee9fd2a57a8&amp;end=1160cf864f2a0014e3442367e1b96496bfbeadf4&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>full</code> builds of <code>cranelift-codegen-check</code>)</li>\n</ul>",
        "id": 241402983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732403
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>Expecting to revert <a href=\"https://github.com/rust-lang/rust/pull/85804\">#85804</a></li>\n</ul>",
        "id": 241403048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732422
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 241403068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732429
    },
    {
        "content": "<ul>\n<li>Regression: undefined symbol __atomic_load_4 on risvc32imac-unknown-none-elf <a href=\"https://github.com/rust-lang/rust/issues/85736\">#85736</a><ul>\n<li>opened by github user <code>@xobs</code></li>\n<li>regression on nightly-2021-03-18, affects target <code>riscv32imac-unknown-none</code></li>\n<li>(spurious?) calls are generated to non-existing symbol <code>__atomic_load_4</code></li>\n<li>workaround is to use target <code>riscv32i-unknown-none-elf</code></li>\n<li>we have a <a href=\"https://github.com/rust-lang/rust/issues/85736#issuecomment-849881145\">repro</a></li>\n<li>who can own this?</li>\n</ul>\n</li>\n</ul>",
        "id": 241403088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-03.20.2354818/near/241402548\">said</a>:</p>\n<blockquote>\n<p>See also the Pin issues, for example</p>\n</blockquote>\n<p>Is there a sample issue? Looking for \"Pin Coercion\" doesn't really reveal much</p>",
        "id": 241403162,
        "sender_full_name": "nagisa",
        "timestamp": 1622732464
    },
    {
        "content": "<p>I have to go</p>",
        "id": 241403242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <a href=\"https://github.com/rust-lang/rust/issues/66544\">https://github.com/rust-lang/rust/issues/66544</a></p>",
        "id": 241403260,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622732497
    },
    {
        "content": "<p>It would be great to find an owner for issue <a href=\"https://github.com/rust-lang/rust/issues/85736\">#85736</a>, but I don't know who is best</p>",
        "id": 241403284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732507
    },
    {
        "content": "<p>To be honest I don't know what <code>risvc32imac</code> is. :)</p>",
        "id": 241403338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1622732523
    },
    {
        "content": "<p>and also <a href=\"https://github.com/rust-lang/rust/issues/85099\">https://github.com/rust-lang/rust/issues/85099</a></p>",
        "id": 241403419,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622732540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> also <a href=\"https://github.com/rust-lang/rust/issues/85099\">#85099</a></p>",
        "id": 241403431,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1622732544
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-03.20.2354818/near/241403338\">said</a>:</p>\n<blockquote>\n<p>To be honest I don't know what <code>risvc32imac</code> is. :)</p>\n</blockquote>\n<p>32bit RISC-V with support for the i, m, a and c extensions.</p>",
        "id": 241403535,
        "sender_full_name": "bjorn3",
        "timestamp": 1622732583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-03.20.2354818/near/241403338\">said</a>:</p>\n<blockquote>\n<p>To be honest I don't know what <code>risvc32imac</code> is. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>I'll give it a look, but seeing as this is LTO related I'm not very optimistic I'll have much to say.</p>",
        "id": 241403540,
        "sender_full_name": "nagisa",
        "timestamp": 1622732584
    },
    {
        "content": "<p>especially since this was regressed by my PR.</p>",
        "id": 241403639,
        "sender_full_name": "nagisa",
        "timestamp": 1622732621
    },
    {
        "content": "<p>Is there anything else left to discuss? <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 241404537,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1622732950
    },
    {
        "content": "<p>/me checks agenda</p>",
        "id": 241404594,
        "sender_full_name": "nagisa",
        "timestamp": 1622732980
    },
    {
        "content": "<p>No it seems that was all of it. Thanks for participating everyone! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 241404779,
        "sender_full_name": "nagisa",
        "timestamp": 1622733041
    },
    {
        "content": "<p>I think for once I can be the one who says: thanks for attending the meeting :D <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 241404820,
        "sender_full_name": "apiraino",
        "timestamp": 1622733057
    },
    {
        "content": "<p>ugh beaten by a split second</p>",
        "id": 241404846,
        "sender_full_name": "apiraino",
        "timestamp": 1622733070
    }
]