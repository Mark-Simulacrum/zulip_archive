[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-12-17T15:00:00Z\">2020-12-17T15:00:00+00:00</time></p>",
        "id": 220190842,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163254
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 220190878,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163276
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/bm8_ygc8SFi64MWKZowhWw?view\">meeting agenda</a></p>",
        "id": 220190892,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163289
    },
    {
        "content": "<p>We will have checkins from <em>WG-llvm</em> and <em>T-compiler/WG-meta</em></p>",
        "id": 220190940,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>?</p>",
        "id": 220191095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span>?</p>",
        "id": 220191164,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608163451
    },
    {
        "content": "<p>I will try to not forget to write an update before it's time for a meeting.</p>",
        "id": 220227946,
        "sender_full_name": "nagisa",
        "timestamp": 1608201715
    },
    {
        "content": "<ul>\n<li>Subjectively it seems like there has been an uptick of soundness issues/miscompilations related to LLVM (or perhaps people are now trying to use more obscure features of it, new targets?)</li>\n<li>Besides a regular submodule bump ( <a href=\"https://github.com/rust-lang/rust/issues/79861\">#79861</a>), there hasn't been much development, notable outstanding and related stuff is: <a href=\"https://github.com/rust-lang/rust/issues/77885\">#77885</a> using inline-asm stack probes which is blocked on 11.0.1 and a couple of changes as part of work to enable split dwarf support (<a href=\"https://github.com/rust-lang/rust/issues/80087\">#80087</a>, <a href=\"https://github.com/rust-lang/rust/issues/77117\">#77117</a>)</li>\n</ul>",
        "id": 220245860,
        "sender_full_name": "nagisa",
        "timestamp": 1608213531
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 55 minutes</p>",
        "id": 220246677,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608213926
    },
    {
        "content": "<p><a href=\"https://hackmd.io/bm8_ygc8SFi64MWKZowhWw?view\">Check out the meeting agenda</a></p>",
        "id": 220246706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608213946
    },
    {
        "content": "<p>I posted some updates for <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> -- I think I will not be able to attend the meeting though because I have to shovel some snow and this hour is kind of the only time I have to do it!</p>",
        "id": 220250510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1608215884
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 220253344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217244
    },
    {
        "content": "<p>lets start off with five minutes for </p>\n<h2>announcements</h2>",
        "id": 220253395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217268
    },
    {
        "content": "<ul>\n<li>Tomorrow (friday 18th) at the same time as this meeting, we have the \"Compiler Team Foundation Q&amp;A\"</li>\n</ul>",
        "id": 220253434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217290
    },
    {
        "content": "<p>(I recommend reading the current Q&amp;A results before the meeting, so that you won't be trying to skim it as the meeting is going on to see if your question has already been addressed.)</p>",
        "id": 220253555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217330
    },
    {
        "content": "<p>Where do we find the current Q&amp;A?</p>",
        "id": 220253611,
        "sender_full_name": "oli",
        "timestamp": 1608217361
    },
    {
        "content": "<p>namely, this is the draft FAQ: <a href=\"https://github.com/rust-lang/foundation-faq-2020/blob/main/FAQ.md\">https://github.com/rust-lang/foundation-faq-2020/blob/main/FAQ.md</a></p>",
        "id": 220253616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217363
    },
    {
        "content": "<p>(and this is the blog post where the \"Foundation Conversation\" was first discussed)</p>",
        "id": 220253664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217387
    },
    {
        "content": "<p>there is also this: <a href=\"https://github.com/rust-lang/foundation-faq-2020/issues\">https://github.com/rust-lang/foundation-faq-2020/issues</a></p>",
        "id": 220253703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217402
    },
    {
        "content": "<p>(I don't know if/how that group tracks which issues have been incorporated into the FAQ)</p>",
        "id": 220253770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217440
    },
    {
        "content": "<p>I did some updates to rust-log-analyzer over the past week!</p>",
        "id": 220253842,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1608217466
    },
    {
        "content": "<ul>\n<li>Following meetings are on 24th and 31st</li>\n</ul>",
        "id": 220253860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217480
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and I are working on getting PGO enabled for rustc, and I am personally optimistic at an initial version landing early January or even by end of year (see <a href=\"https://perf.rust-lang.org/compare.html?start=b32e6e6ac8921035177256ab6806e6ab0d4b9b94&amp;end=e50434ef20c317246d07fc5cac66963ac31ffe26&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=b32e6e6ac8921035177256ab6806e6ab0d4b9b94&amp;end=e50434ef20c317246d07fc5cac66963ac31ffe26&amp;stat=wall-time</a> for latest perf.rlo comparison and <a href=\"https://github.com/rust-lang/rust/issues/79562\">#79562</a> and <a href=\"https://github.com/rust-lang/rust/issues/79442\">#79442</a> for details)</li>\n</ul>",
        "id": 220253866,
        "sender_full_name": "simulacrum",
        "timestamp": 1608217484
    },
    {
        "content": "<p>oh, actually, let me take a moment to talk about the meeting schedule</p>",
        "id": 220253914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217507
    },
    {
        "content": "<ul>\n<li>rust-log-analyzer will now respond to failures again, and it will also learn again from successful builds! the results it posts should be way more accurate now</li>\n</ul>",
        "id": 220253926,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1608217513
    },
    {
        "content": "<p>we currently have a release scheduled for the 31st</p>",
        "id": 220253930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217515
    },
    {
        "content": "<p>wait, all, can we pause other announcements for a sec</p>",
        "id": 220253941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217525
    },
    {
        "content": "<p>right now, our meeting cadence means we have a meeting on the 24th and the 31st</p>",
        "id": 220253962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217541
    },
    {
        "content": "<p>I don't know which T-compiler members are going to be available for meetings on those days</p>",
        "id": 220253990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217559
    },
    {
        "content": "<p>Many places have holidays on the 25th and Jan 1st</p>",
        "id": 220254063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217581
    },
    {
        "content": "<p>but some extend it further, and people may have childcare issues, etc</p>",
        "id": 220254088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217597
    },
    {
        "content": "<p>meanwhile, our agenda today indicates that we have a <em>ton</em> of issues to address</p>",
        "id": 220254096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217606
    },
    {
        "content": "<p>but the release is scheduled for the 31st</p>",
        "id": 220254106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217617
    },
    {
        "content": "<p>so, I have two somewhat coupled questions:</p>",
        "id": 220254124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217628
    },
    {
        "content": "<ol>\n<li>do people think they are going to have less time to work on Rust over the next weeks over all, and specifically on the 24th and 31st?</li>\n</ol>",
        "id": 220254149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217654
    },
    {
        "content": "<ol start=\"2\">\n<li>if the answer to the above answer is yes, and we have this slew of issues... should we consider delaying the release? Would that actually help, anyway?</li>\n</ol>",
        "id": 220254236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217684
    },
    {
        "content": "<p>I am especially interested in <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> 's feedback on the above</p>",
        "id": 220254287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217719
    },
    {
        "content": "<p>I'm not sure if I'm worried more of skipping a release on the 31st (with tooling assuming no skipped releases possibly breaking) or shipping a release on the 31st</p>",
        "id": 220254329,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1608217746
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220254353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217761
    },
    {
        "content": "<p>I think delaying is unlikely to break much, but is unclear as to being helpful.</p>",
        "id": 220254405,
        "sender_full_name": "simulacrum",
        "timestamp": 1608217791
    },
    {
        "content": "<p>its true, its not a great time to be playing games with our existing cadence, for the exact same reason that I was considering <del>skipping</del> delaying a release</p>",
        "id": 220254408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217793
    },
    {
        "content": "<p>I am also not too worried about all but the well-known associated type obligation PR regressions I think</p>",
        "id": 220254526,
        "sender_full_name": "simulacrum",
        "timestamp": 1608217829
    },
    {
        "content": "<p>okay so lets assuming delaying a release is a non-starter (that is, its not going to happen).</p>",
        "id": 220254537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217836
    },
    {
        "content": "<p>Next question: Should we consider moving the current Thursday meeting to a day earlier in the week?</p>",
        "id": 220254558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217851
    },
    {
        "content": "<p>Here's another way to put this</p>",
        "id": 220254567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217854
    },
    {
        "content": "<p>If you <em>will</em> be able to attend next weeks' Thursday meeting, put a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on this comment. Otherwsie, put a <span aria-label=\"-1\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"-1\">:-1:</span></p>",
        "id": 220254611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217874
    },
    {
        "content": "<p>/me taps microphone. \"Is this thing on?\"</p>",
        "id": 220254752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217934
    },
    {
        "content": "<p>Okay well, the agenda today is pretty packed. Maybe we can revisit this question tomorrow.</p>",
        "id": 220254860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608217993
    },
    {
        "content": "<p>If I'm reading this correctly, some of these these are stable-to-stable regressions which have already shipped. So in some sense, delaying the next release does not put us in any better of a position since stable is currently broken.</p>",
        "id": 220254873,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608217998
    },
    {
        "content": "<p>For now, I'm going to assume that we're keeping the meetings as is</p>",
        "id": 220254889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218007
    },
    {
        "content": "<p>Okay. lets resume annoucnements. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220255066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218078
    },
    {
        "content": "<p>(everyone should scroll up and read the awesome announcements from <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> )</p>",
        "id": 220255176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218125
    },
    {
        "content": "<ul>\n<li>We will be releasing 1.49 on December 31st</li>\n</ul>",
        "id": 220255207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218136
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 220255240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218147
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Move query implementation outside rustc_middle\" <a href=\"https://github.com/rust-lang/compiler-team/issues/388\">compiler-team#388</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220255296,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218163
    },
    {
        "content": "<p><em>cough Wesley is now a co-lead cough</em></p>",
        "id": 220255299,
        "sender_full_name": "lqd",
        "timestamp": 1608218163
    },
    {
        "content": "<ul>\n<li>along with the better and more consistent rust-log-analyzer messages (posted above), I'm also planning to implement auto-hiding of its comments -- I'd love your feedback at <a href=\"#narrow/stream/131828-t-compiler/topic/RLA.20survey\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/RLA.20survey</a> on the possible implementations</li>\n</ul>",
        "id": 220255316,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1608218167
    },
    {
        "content": "<p>oh, goodness, that's right!</p>",
        "id": 220255338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218177
    },
    {
        "content": "<ul>\n<li>lets all welcome <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> as the new co-lead of the T-compiler team.</li>\n</ul>",
        "id": 220255371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218194
    },
    {
        "content": "<p>yay <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 220255396,
        "sender_full_name": "lqd",
        "timestamp": 1608218204
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></li>\n<li>\"rustc: Stabilize <code>-Zrun-dsymutil</code> as <code>-Csplit-debuginfo</code>\" <a href=\"https://github.com/rust-lang/rust/pull/79570\">rust#79570</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220255491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218249
    },
    {
        "content": "<p>Hey everyone, glad to be here and looking forward to interacting with everyone a lot more most likely <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220255519,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608218259
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 220255639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218289
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 220255673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218301
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"Use true previous lint level when detecting overriden forbids\" <a href=\"https://github.com/rust-lang/rust/pull/78864\">rust#78864</a></li>\n<li>[T-rustdoc] \"rustdoc: stabilise --default-theme command line option\" <a href=\"https://github.com/rust-lang/rust/pull/79642\">rust#79642</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220255702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218312
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 220255759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218341
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> checkin by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>:</p>\n<blockquote>\n<ul>\n<li>Subjectively it seems like there has been an uptick of soundness issues/miscompilations related to LLVM (or perhaps people are now trying to use more obscure features of it, new targets?)</li>\n<li>Besides a regular submodule bump (<a href=\"https://github.com/rust-lang/rust/issues/79861\">#79861</a>), there hasn't been much development, notable outstanding and related stuff is: <a href=\"https://github.com/rust-lang/rust/issues/77885\">#77885</a> using inline-asm stack probes which is blocked on 11.0.1 and a couple of changes as part of work to enable split dwarf support (<a href=\"https://github.com/rust-lang/rust/issues/80087\">#80087</a>, <a href=\"https://github.com/rust-lang/rust/issues/77117\">#77117</a>)</li>\n</ul>\n</blockquote>",
        "id": 220255783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218351
    },
    {
        "content": "<p>/me wonders how much of the uptick is associated with the LLVM upgrade ...</p>",
        "id": 220255840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218377
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>:</p>\n<blockquote>\n<ul>\n<li>wesleywiser is now the new compiler team co-lead!</li>\n<li>nikomatsakis floated a proposal around \"compiler team officers\", the idea being to identify various special roles within compiler team that get elected to fixed terms (including a set of folks who decide on RFCs), and to generally \"flatten\" the team structure so that contribuors/members both elect these officers</li>\n<li>The core team roadmap draft is going to focus on governance, such as defining team charters and other work, so nikomatsakis expects next year that meta will take on some of that work</li>\n<li>One question is whether nikomatsakis should continue as lead of the working group, or whether wesleywiser/pnkfelix (or someone else) would be better! nikomatsakis is open to stepping back from that role, if others are pscyched to fill it, and eager to contribute help and thoughts either way.</li>\n<li>Enjoy the upcoming holidays and take care of yourselves, folks! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></li>\n</ul>\n</blockquote>",
        "id": 220255968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218413
    },
    {
        "content": "<p>who is the other lead of WG-meta?</p>",
        "id": 220256028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218441
    },
    {
        "content": "<p>david and santiago</p>",
        "id": 220256046,
        "sender_full_name": "lqd",
        "timestamp": 1608218448
    },
    {
        "content": "<p>I'm not sure if I'd call myself lead of meta anymore, I meant, the wg is kind of in a pause since a while</p>",
        "id": 220256239,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608218524
    },
    {
        "content": "<p>We should look into this question, of whether the T-compiler lead needs to also be a lead of WG-meta. I suspect it would suffice for a T-compiler co-lead to be a <em>member</em> of WG-meta</p>",
        "id": 220256268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218538
    },
    {
        "content": "<p>(which still would not be the case under the current setup. So I think we should fix <em>that</em>.)</p>",
        "id": 220256295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218552
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Resolve enum field visibility correctly\" <a href=\"https://github.com/rust-lang/rust/pull/79956\">rust#79956</a><ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/79593\">rust#79593</a></li>\n<li>opened by <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> </li>\n<li>nominates for beta backport since error <a href=\"https://github.com/rust-lang/rust/pull/79956#issuecomment-744091095\">comes up fairly frequently</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220256344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218577
    },
    {
        "content": "<p>the bug it fixes ... is purely a diagnostic regression?</p>",
        "id": 220256534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218651
    },
    {
        "content": "<p>is there any non-diagnostic problem being resolved here?</p>",
        "id": 220256545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218657
    },
    {
        "content": "<p>not to my knowledge</p>",
        "id": 220256560,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218666
    },
    {
        "content": "<p>I am mildly -1</p>",
        "id": 220256627,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218703
    },
    {
        "content": "<p>it seems like a large patch and resolve is... sometimes not the best place</p>",
        "id": 220256653,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218716
    },
    {
        "content": "<p>okay. It seems like a pretty small papercut. I'm inclined to let it ride trains.</p>",
        "id": 220256659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218718
    },
    {
        "content": "<p>I don't know if its <em>that</em> big a patch</p>",
        "id": 220256689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218731
    },
    {
        "content": "<p>ah, yes, just tests</p>",
        "id": 220256720,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218744
    },
    {
        "content": "<p>I think most of the patch is tests but yeah, doesn't seem critical to have in <code>beta</code> either.</p>",
        "id": 220256726,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608218746
    },
    {
        "content": "<p>alright, lets decline to backport</p>",
        "id": 220256760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218757
    },
    {
        "content": "<p>but still does not seem like an obvious need exists for backport</p>",
        "id": 220256768,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218759
    },
    {
        "content": "<p>/me needs to stay focused today</p>",
        "id": 220256816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218764
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 220256837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218780
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 220256852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218788
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 220256882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218806
    },
    {
        "content": "<ul>\n<li>\"MIR-OPT: Pass to deduplicate blocks\" <a href=\"https://github.com/rust-lang/rust/pull/77551\">rust#77551</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"139182\">@Simon Vandel Sillesen</span> </li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>The performance gain seems to be not very clear. Relevant comments <a href=\"https://github.com/rust-lang/rust/pull/77551#issuecomment-713417158\">from here</a>.</li>\n</ul>\n</li>\n</ul>",
        "id": 220256914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218820
    },
    {
        "content": "<p>I would like to propose we skip discussing this PR today. It's not critical/urgent and we have a lot of other items to talk about.</p>",
        "id": 220256916,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608218822
    },
    {
        "content": "<p>Agreed</p>",
        "id": 220256946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218835
    },
    {
        "content": "<ul>\n<li>\"BPF target support\" <a href=\"https://github.com/rust-lang/rust/pull/79608\">rust#79608</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"369653\">@Alessandro Decina</span>, suggests a Tier 2 for this target</li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> </li>\n<li>Adds targets <code>bpfel-unknown-none</code> and <code>bpfeb-unknown-none</code> (more info <a href=\"https://github.com/alessandrod/bpf-linker\">here</a>)</li>\n<li>@_<em>simulacrum</em> suggests waiting to have a policy for that</li>\n<li><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> <a href=\"https://github.com/rust-lang/rust/pull/79608#issuecomment-744211807\">is working on it</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220256966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218844
    },
    {
        "content": "<p>can this wait as well?</p>",
        "id": 220256987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218859
    },
    {
        "content": "<p>maybe until after the release?</p>",
        "id": 220256996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218862
    },
    {
        "content": "<p>or at least until next week</p>",
        "id": 220257079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218887
    },
    {
        "content": "<p>lets move along</p>",
        "id": 220257082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218889
    },
    {
        "content": "<p>yes can wait</p>",
        "id": 220257083,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218889
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 220257089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218891
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">6 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">51 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">32 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 1 P-high, 0 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 8 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 28 P-high, 70 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 220257102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218898
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 220257121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218907
    },
    {
        "content": "<p>I would like to discuss this (BPF targets) as well but I don't think it needs to be discussed <em>right now</em>.</p>",
        "id": 220257122,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608218907
    },
    {
        "content": "<ul>\n<li>\"Switching to opt-level=z on i686-windows-msvc triggers STATUS_ACCESS_VIOLATION\" <a href=\"https://github.com/rust-lang/rust/issues/67497\">rust#67497</a><ul>\n<li>Discussed last week</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"238306\">@dignifiedquire</span> </li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/67497#issuecomment-733699197\">Rust 1.36.0 through 1.48.0</a> all have broken builds on Windows i686-windows-msvc</li>\n</ul>\n</li>\n</ul>",
        "id": 220257185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218930
    },
    {
        "content": "<p>crud I assigned this to myself and then didn't look at it</p>",
        "id": 220257209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218943
    },
    {
        "content": "<p>I am inclined to say that we should skip for today, it is not a new regression</p>",
        "id": 220257225,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218950
    },
    {
        "content": "<p>mm. okay.</p>",
        "id": 220257246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218964
    },
    {
        "content": "<ul>\n<li>\"missing_fragment_specifier hard error\" <a href=\"https://github.com/rust-lang/rust/issues/76605\">rust#76605</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> </li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> </li>\n<li>A deprecation warning since 2017 becomes hard error and breakes many packages (catched by the release team)</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> posted a <a href=\"https://github.com/rust-lang/rust/issues/76605#issuecomment-702811192\">patch </a> for the beta, suggests to create a patch for nightly also <a href=\"https://github.com/rust-lang/rust/issues/76605#issuecomment-742711664\">to make it a hard warning</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220257276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608218976
    },
    {
        "content": "<p>that comment is incorrect</p>",
        "id": 220257302,
        "sender_full_name": "simulacrum",
        "timestamp": 1608218989
    },
    {
        "content": "<p>we are waiting on someone to prepare a beta backport at this time</p>",
        "id": 220257322,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219001
    },
    {
        "content": "<p>there is no patch for beta yet, okay</p>",
        "id": 220257379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219008
    },
    {
        "content": "<p>this is important to resolve</p>",
        "id": 220257388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219011
    },
    {
        "content": "<p>right?</p>",
        "id": 220257392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219013
    },
    {
        "content": "<p>yes it is critical</p>",
        "id": 220257407,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219020
    },
    {
        "content": "<p>I'm inferring you have not heard back from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> nor <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 220257430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219027
    },
    {
        "content": "<p>Uh did I offer to do that in the regressions meeting last week?</p>",
        "id": 220257439,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219030
    },
    {
        "content": "<p>we were waiting on Esteban I think</p>",
        "id": 220257467,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219042
    },
    {
        "content": "<p>But at this point I think we need to reassign</p>",
        "id": 220257492,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219051
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> maybe to you?</p>",
        "id": 220257567,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219091
    },
    {
        "content": "<p>I can take a stab at it and reach out to either of them if necessary</p>",
        "id": 220257573,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219095
    },
    {
        "content": "<p>it is just a revert</p>",
        "id": 220257595,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219104
    },
    {
        "content": "<p>but git doesn't do it cleanly</p>",
        "id": 220257611,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219110
    },
    {
        "content": "<p>Right. You should have put \"just\" in quotes. :)</p>",
        "id": 220257662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219123
    },
    {
        "content": "<p>Okay, assigning to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 220257728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219144
    },
    {
        "content": "<p>Yeah. I suspect I can handle it but if there's unforeseen changes, I'll reach out to them.</p>",
        "id": 220257744,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219149
    },
    {
        "content": "<p>(and leaving <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> on the assignee list for now)</p>",
        "id": 220257779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219164
    },
    {
        "content": "<ul>\n<li>\"Upgrade to LLVM11 caused a codegen regression on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/78283\">rust#78283</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482008\">Previously discussed</a></li>\n<li>opened by <span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span></li>\n<li>assigned to  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> </li>\n<li>Firefox code that used to work on Rust 1.46 started to fail after upgrading to LLVM 11</li>\n<li>Affects only MSVC</li>\n<li><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> suggests could be related to <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a></li>\n<li><span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span> suggests to be related to LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a>, provides a <a href=\"https://github.com/rust-lang/rust/issues/78283#issuecomment-720156273\">minimal repro</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> has patch in progress for LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a> (got feedback recently from <span class=\"user-mention silent\" data-user-id=\"133224\">Nikita Popov</span>)</li>\n</ul>\n</li>\n</ul>",
        "id": 220257891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219205
    },
    {
        "content": "<p>So this has already shipped on stable as well</p>",
        "id": 220258027,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219245
    },
    {
        "content": "<p>(Not that it isn't important but perhaps it's not urgent)</p>",
        "id": 220258074,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219260
    },
    {
        "content": "<p>I did actually take some time to look at this. The feedback from Nikita was different from what I remembered; the problem they pointed out in my patch seems pretty serious, but the alternative solution they pointed me to seems like it will take more investment than I can plan to make.</p>",
        "id": 220258083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219263
    },
    {
        "content": "<p>anyway yes, it shipped in stable. Its pretty nasty and should remain P-critical I think</p>",
        "id": 220258130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219282
    },
    {
        "content": "<p>but hard to say, given that it may be so rare...</p>",
        "id": 220258161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219295
    },
    {
        "content": "<p>anyway we can move on</p>",
        "id": 220258184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219305
    },
    {
        "content": "<p>It seems fine to continue revisiting each week at least for now</p>",
        "id": 220258192,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219308
    },
    {
        "content": "<ul>\n<li>\"No error reported when a generic parameter doesn't meet the requirement of an associated type\" <a href=\"https://github.com/rust-lang/rust/issues/78893\">rust#78893</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482210\">Previously discussed</a>, and <a href=\"#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type\">a topic was created to discuss it on Zulip</a></li>\n<li>Nightly regression</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> provides a fix in PR <a href=\"https://github.com/rust-lang/rust/pull/79543\">rust#79543</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220258229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219327
    },
    {
        "content": "<p>This should actually be Matthew and Niko to talk about this.</p>",
        "id": 220258284,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1608219352
    },
    {
        "content": "<p>as in, that is the action item?</p>",
        "id": 220258362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219369
    },
    {
        "content": "<p>Also, I added this comment to the issue: \"(Note for future prioritization visits: to be clear, we cannot land the PR as it stands now, because it literally breaks bootstrapping of rustc.)\"</p>",
        "id": 220258405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219390
    },
    {
        "content": "<p>in an attempt to make the agenda summary clearer about status.</p>",
        "id": 220258449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219409
    },
    {
        "content": "<p>This was the one you mentioned up above <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , right?</p>",
        "id": 220258543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219449
    },
    {
        "content": "<p>among others</p>",
        "id": 220258572,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219465
    },
    {
        "content": "<p>as an example of something that we should just accept and <em>not</em> use as basis for delaying the release</p>",
        "id": 220258604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219477
    },
    {
        "content": "<p>this is a fix to one facet of the breakage</p>",
        "id": 220258607,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219479
    },
    {
        "content": "<p>well, \"fix\"</p>",
        "id": 220258679,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219494
    },
    {
        "content": "<p>No, this is what I am worried about</p>",
        "id": 220258695,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219502
    },
    {
        "content": "<p>I am less worried about the macro breakage and rustdoc regression and such</p>",
        "id": 220258742,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219517
    },
    {
        "content": "<p>As in, you are worried about the breakage illustrated by issues like <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a></p>",
        "id": 220258770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219529
    },
    {
        "content": "<p>correct yes</p>",
        "id": 220258785,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219535
    },
    {
        "content": "<p>that was all injected by <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a></p>",
        "id": 220258788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219537
    },
    {
        "content": "<p>okay</p>",
        "id": 220258794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219539
    },
    {
        "content": "<p>(because fixes seem hard and we cannot readily revert)</p>",
        "id": 220258844,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219561
    },
    {
        "content": "<p>So, do we need to talk about this concretely, with respect to the release schedule?</p>",
        "id": 220258874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219574
    },
    {
        "content": "<p>I do not know if <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> thinks we can fix these</p>",
        "id": 220258907,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219599
    },
    {
        "content": "<p>as in, would delaying release by a week increase likelihood that the breakage injected by <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a> will be addressed?</p>",
        "id": 220258912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219601
    },
    {
        "content": "<p>right, that does seem to be at the heart of the problem.</p>",
        "id": 220258983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219612
    },
    {
        "content": "<p>I also don't know that they are release blockers, but they seem very concerning</p>",
        "id": 220258988,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219616
    },
    {
        "content": "<p>there's an ICE which should be fixed before release.</p>",
        "id": 220259023,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1608219640
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/issues/79902\">#79902</a>)</p>",
        "id": 220259107,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1608219675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> are you coming to the friday meeting tomorrow?</p>",
        "id": 220259110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219677
    },
    {
        "content": "<p>Since I am certain <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> will be there, maybe we could plan to circle back around to this at the start of that meeting?</p>",
        "id": 220259157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219699
    },
    {
        "content": "<p>well I need to push through</p>",
        "id": 220259285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219741
    },
    {
        "content": "<p>the rest of meeting stuff</p>",
        "id": 220259295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219745
    },
    {
        "content": "<p>for now we're just advertising that there are problems here...</p>",
        "id": 220259335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219762
    },
    {
        "content": "<ul>\n<li>\"Miscompilation of AVX2 code under --release\" <a href=\"https://github.com/rust-lang/rust/issues/79865\">rust#79865</a><ul>\n<li>Discussed last week</li>\n<li>opened by <span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> </li>\n<li>not yet assigned</li>\n<li>unsoundness that impacts cryptographic code</li>\n<li>reporter mentions a workaround (<a href=\"https://github.com/rust-lang/rust/issues/79865#issuecomment-742039745\">pulling code out of a lamba</a>) to fix the error </li>\n<li>shortest <a href=\"https://github.com/rust-lang/rust/issues/79865#issuecomment-742861255\">mcve so far</a> provided by <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></li>\n</ul>\n</li>\n</ul>",
        "id": 220259370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219780
    },
    {
        "content": "<p>(maybe I should allocate a day out of each week to be my LLVM day)</p>",
        "id": 220259522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219847
    },
    {
        "content": "<p>(or a  half-day...)</p>",
        "id": 220259538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219852
    },
    {
        "content": "<blockquote>\n<p>This bug is easily reproducible and occurs on all versions of the Rust compiler and all operating systems I've tried.</p>\n</blockquote>",
        "id": 220259549,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219857
    },
    {
        "content": "<p>Reporter says it repros on 1.48</p>",
        "id": 220259563,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608219866
    },
    {
        "content": "<p>So its old</p>",
        "id": 220259573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219873
    },
    {
        "content": "<p>and therefore we can wait</p>",
        "id": 220259588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219882
    },
    {
        "content": "<p>good</p>",
        "id": 220259593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219884
    },
    {
        "content": "<ul>\n<li>\"Miscompilation in webrender on aarch64-apple-darwin\" <a href=\"https://github.com/rust-lang/rust/issues/80111\">rust#80111</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"220510\">@Mike Hommey</span> </li>\n<li>Firefox nightly would crash on startup on arm64 macos </li>\n<li>seems that different LTO parameters trigger the issue</li>\n</ul>\n</li>\n</ul>",
        "id": 220259612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219898
    },
    {
        "content": "<p>I will note that it is not yet a tier 1 platform</p>",
        "id": 220259651,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219920
    },
    {
        "content": "<p>how does that affect prioiritzation?</p>",
        "id": 220259709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219941
    },
    {
        "content": "<p>obviously not release blocker</p>",
        "id": 220259727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219955
    },
    {
        "content": "<p>so my only question is if we keep this at P-critical</p>",
        "id": 220259810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608219979
    },
    {
        "content": "<p>unclear :)</p>",
        "id": 220259822,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219984
    },
    {
        "content": "<p>I would say P-high though. it is not a release blocker.</p>",
        "id": 220259837,
        "sender_full_name": "simulacrum",
        "timestamp": 1608219994
    },
    {
        "content": "<p>right, if it's not tier 1 it should be <code>P-high</code></p>",
        "id": 220259838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608219994
    },
    {
        "content": "<p>okay, lets downgrade to P-high</p>",
        "id": 220259854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220006
    },
    {
        "content": "<p>I thought it was tier 1 already</p>",
        "id": 220259856,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608220006
    },
    {
        "content": "<p>I think forge states that already (?)</p>",
        "id": 220259882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608220021
    },
    {
        "content": "<p>lets double check</p>",
        "id": 220259893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220026
    },
    {
        "content": "<p>no <a href=\"https://doc.rust-lang.org/nightly/rustc/platform-support.html\">https://doc.rust-lang.org/nightly/rustc/platform-support.html</a></p>",
        "id": 220259898,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220029
    },
    {
        "content": "<p>ahh right</p>",
        "id": 220259930,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608220049
    },
    {
        "content": "<p>okay. P-high</p>",
        "id": 220260059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220098
    },
    {
        "content": "<p>next</p>",
        "id": 220260062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220100
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 220260080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220107
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>\n<ul>\n<li>\"regression 1.49: macro_rules unexpected tokens\" <a href=\"https://github.com/rust-lang/rust/issues/79908\">rust#79908</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span></li>\n<li>A crater test run find a regression. There are two crates involved (<code>fourier</code> and <code>tiger</code>), the latter is relevant to this regression</li>\n<li>we have an <a href=\"https://github.com/rust-lang/rust/issues/79908#issuecomment-747085341\">mcve</a></li>\n<li><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> is working on a patch</li>\n</ul>\n</li>\n</ul>",
        "id": 220260112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220124
    },
    {
        "content": "<p>This should, on the other hand, be P-critical. I consider it a release blocker to resolve it. But looks like we are on track.</p>",
        "id": 220260207,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220169
    },
    {
        "content": "<p>lets pump it to P-critical then</p>",
        "id": 220260225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220180
    },
    {
        "content": "<p>I don't want to risk overlooking it next week</p>",
        "id": 220260235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220184
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 220260322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220209
    },
    {
        "content": "<p>so we have ten minutes left</p>",
        "id": 220260364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220230
    },
    {
        "content": "<p>and we're at the Performance Logs section, which we've skipped several weeks in a row</p>",
        "id": 220260387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220241
    },
    {
        "content": "<p>scrolling thorugh it, I think we need to get these performance reports to something more succinct</p>",
        "id": 220260421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220261
    },
    {
        "content": "<p>(with a link to a separate doc that has the full report.)</p>",
        "id": 220260481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220286
    },
    {
        "content": "<p>but lets give it a shot</p>",
        "id": 220260502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220296
    },
    {
        "content": "<p>I would only focus on nags in this meeting</p>",
        "id": 220260507,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220299
    },
    {
        "content": "<p>oh, right, all the nominated issues</p>",
        "id": 220260529,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220311
    },
    {
        "content": "<p>okay</p>",
        "id": 220260533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220312
    },
    {
        "content": "<p>that's their purpose :)</p>",
        "id": 220260535,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220312
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">triage logs</a></p>\n</blockquote>\n<p>A week dominated by small regressions with only 1 modest yet clear performance gain. None of the regressions are large enough to cause concern, but there should be a followup to some to ensure that those regressions are at least examined.</p>\n<p>Triage done by <strong>@rylevick</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e&amp;end=e1cce06e4ff5206daf397e1dcf91ed53653be171&amp;absolute=false&amp;stat=instructions%3Au\">4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e..e1cce06e4ff5206daf397e1dcf91ed53653be171</a></p>\n<p>6 Regressions, 1 Improvements, 2 Mixed<br>\n0 of them in rollups</p>",
        "id": 220260622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220331
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li>Several regressions need followup investigations. See their respective entries <a href=\"https://hackmd.io/bm8_ygc8SFi64MWKZowhWw?both#Regressions\">in the agenda</a> for the issue number.</li>\n<li>As mentioned last week, stdarch expansion causing a 40% libcore compile time regression is still not resolved, and resolution is unclear. This is likely a related issue to the stdarch regression listed above.</li>\n</ul>",
        "id": 220260702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220370
    },
    {
        "content": "<p>okay, seven minutes left and many nominations</p>",
        "id": 220260740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220392
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 220260757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220398
    },
    {
        "content": "<p>Preamble: there are 3 issues below (<a href=\"https://github.com/rust-lang/rust/issues/76213\">#76213</a>, <a href=\"https://github.com/rust-lang/rust/issues/79246\">#79246</a>, <a href=\"https://github.com/rust-lang/rust/issues/79564\">#79564</a>) somehow all pointing to the same PR <a href=\"https://github.com/rust-lang/rust/pull/76030\">rust#76030</a> which exposed an existing <a href=\"https://bugs.llvm.org/show_bug.cgi?id=48340\">bug in loop vectorize in LLVM</a>. We (as in: me <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span>) are not 100% sure if they are all correlated, but thought to nominate them all to reason about their priority and (if any) find a common theme.</p>",
        "id": 220260775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220407
    },
    {
        "content": "<p>I had the feeling there's a general theme around these issues, but couldn't find it. This is why we've nominated some of them</p>",
        "id": 220260912,
        "sender_full_name": "apiraino",
        "timestamp": 1608220452
    },
    {
        "content": "<p>okay so maybe lets talk about all three of these at once</p>",
        "id": 220260915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220453
    },
    {
        "content": "<ul>\n<li>\"llvm segfaults during bootstrap of rustc_middle in stage 1\" <a href=\"https://github.com/rust-lang/rust/issues/76213\">rust#76213</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span></li>\n<li>not yet assigned</li>\n<li><code>P-high</code> regression, might be related to <a href=\"https://github.com/rust-lang/rust/issues/79564\">rust#79564</a></li>\n<li>still crashes after upgrade to <a href=\"https://github.com/rust-lang/rust/issues/76213#issuecomment-697361038\">LLVM 11.0.0-rc3</a></li>\n</ul>\n</li>\n<li>\"Performance regression in <code>1.48.0</code>\" <a href=\"https://github.com/rust-lang/rust/issues/79246\">rust#79246</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> </li>\n<li>regression from stable to stable not yet assigned</li>\n<li>issue reporter suggests bisection seems to point to <a href=\"https://github.com/rust-lang/rust/pull/70793\">rust#70793</a></li>\n<li>issue reporter comments that reverting PR <a href=\"https://github.com/rust-lang/rust/issues/79246#issuecomment-731836309\">rust#76030</a> fixes the regression</li>\n</ul>\n</li>\n<li>\"Segfault in 1.48.0 while release-building with <code>pango</code> crate with <code>target-cpu=native</code>\" <a href=\"https://github.com/rust-lang/rust/issues/79564\">rust#79564</a><ul>\n<li>opened by <a href=\"https://github.com/twistedfall\">twistedfall</a></li>\n<li>not yet assigned, unsure about the priority</li>\n<li><span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span> comments it could be related to <a href=\"https://github.com/rust-lang/rust/issues/79564#issuecomment-735842549\">rust#76213</a> and this issue provides a smaller reproducible sample</li>\n<li><a href=\"https://github.com/tmiasko\">tmiasko</a> comments that is could related to PR <a href=\"https://github.com/rust-lang/rust/issues/79564#issuecomment-736102763\">rust#76030</a> which exposes an <a href=\"https://bugs.llvm.org/show_bug.cgi?id=48340\">LLVM bug</a></li>\n<li>nominating to discuss if this issue is related to the same LLVM issue as issue <a href=\"https://github.com/rust-lang/rust/issues/76213\">#76213</a></li>\n</ul>\n</li>\n</ul>",
        "id": 220260955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220471
    },
    {
        "content": "<ol>\n<li>should we consider reverting <a href=\"https://github.com/rust-lang/rust/issues/76030\">rust#76030</a> ?</li>\n</ol>",
        "id": 220261000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220488
    },
    {
        "content": "<p>the PR itself seems inherently sound</p>",
        "id": 220261012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220495
    },
    {
        "content": "<p>so reverting would \"just\" be working around LLVM bug(s)</p>",
        "id": 220261035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220504
    },
    {
        "content": "<p>perf win is limited to incremental it seems for the most part</p>",
        "id": 220261080,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220523
    },
    {
        "content": "<p>but a revert would buy us time</p>",
        "id": 220261082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220523
    },
    {
        "content": "<p>I would benchmark a revert</p>",
        "id": 220261093,
        "sender_full_name": "simulacrum",
        "timestamp": 1608220531
    },
    {
        "content": "<p>The <a href=\"https://github.com/rust-lang/rust/issues/76213\">#76213</a>, <a href=\"https://github.com/rust-lang/rust/issues/79564\">#79564</a> are the same LLVM issue. After <a href=\"https://github.com/rust-lang/rust/issues/76030\">#76030</a>, the LLVM IR doesn't contain names for identified struct types, which breaks mangling used for overloaded intrinsics.</p>",
        "id": 220261129,
        "sender_full_name": "tm",
        "timestamp": 1608220545
    },
    {
        "content": "<p>which issue describes the impact of the breakage to mangling?</p>",
        "id": 220261253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220582
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79246\">#79246</a> ?</p>",
        "id": 220261283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220598
    },
    {
        "content": "<p>oh oh oh</p>",
        "id": 220261327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220617
    },
    {
        "content": "<p><em>both</em> of those issues are from that breakage to mangling, I see</p>",
        "id": 220261352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220631
    },
    {
        "content": "<p>okay. Lets at the very least benchmark a revert</p>",
        "id": 220261391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220647
    },
    {
        "content": "<p>or maybe just do it</p>",
        "id": 220261401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220651
    },
    {
        "content": "<p>(a revert)</p>",
        "id": 220261411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220655
    },
    {
        "content": "<p>who can do that? <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> do you have time to put up a temporary revert PR ?</p>",
        "id": 220261541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220702
    },
    {
        "content": "<p>/me is moving along with nominations</p>",
        "id": 220261587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-17.20.2354818/near/220261541\">said</a>:</p>\n<blockquote>\n<p>who can do that? <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> do you have time to put up a temporary revert PR ?</p>\n</blockquote>\n<p>I can do that</p>",
        "id": 220261595,
        "sender_full_name": "davidtwco",
        "timestamp": 1608220726
    },
    {
        "content": "<ul>\n<li>\"Miscompilation root-caused to llvm bug\" <a href=\"https://github.com/rust-lang/rust/issues/79708\">rust#79708</a><br>\n    - Reported by <span class=\"user-mention silent\" data-user-id=\"213049\">Jeremy Fitzhardinge</span><br>\n    - LLVM alias analysis bug that is causing soundness issues for production users<br>\n    - Apparently appeared in Rust 1.47.0, but the LLVM bug is present since 2015 (<a href=\"https://github.com/rust-lang/rust/issues/79708#issuecomment-738993565\">relevant comment</a>)<br>\n    - Fixed in LLVM upstream on December 3rd (<a href=\"https://reviews.llvm.org/D91576\">review</a>, <a href=\"https://github.com/llvm/llvm-project/commit/18603319321a6c1b158800bcc60035ee01549516\">commit</a>)<br>\n    - Nominated to discuss if a cherry-pick <a href=\"https://github.com/rust-lang/rust/issues/79708#issuecomment-740982542\">of the fix</a> is warranted</li>\n</ul>",
        "id": 220261638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220745
    },
    {
        "content": "<p>I think we could cherry-pick a fix here. The other option is, what, to wait for an LLVM point release and subsequent upgrade of our submodule?</p>",
        "id": 220261919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220859
    },
    {
        "content": "<p>My only Q is whether we would cherry-pick before release or not</p>",
        "id": 220261953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220874
    },
    {
        "content": "<p>My own gut here is to <em>either</em> cherry-pick to nightly before release, but <em>not</em> beta backport, or if we wait until after the release, then maybe consider a beta backport as well.</p>",
        "id": 220262039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220916
    },
    {
        "content": "<p>arg we are over time</p>",
        "id": 220262116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220935
    },
    {
        "content": "<p>this issue:</p>",
        "id": 220262160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220962
    },
    {
        "content": "<ul>\n<li>\"Unsafe checking skips pointer dereferences in unused places\" <a href=\"https://github.com/rust-lang/rust/issues/80059\">rust#80059</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span></li>\n<li><code>P-medium</code> issue has been this way for over 3 years</li>\n<li>Nominated for further discussion after T-lang meeting of 2020-12-15 </li>\n<li>Linking a <a href=\"https://github.com/rust-lang/rust/issues/79735#issuecomment-745506187\">comment</a> from <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> on issue <a href=\"https://github.com/rust-lang/rust/issues/79735\">rust#79735</a> which at least partly applies here too</li>\n</ul>\n</li>\n</ul>",
        "id": 220262164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220963
    },
    {
        "content": "<p>is important too, even though it is P-medium</p>",
        "id": 220262193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608220978
    },
    {
        "content": "<p>(and that prioritization may be wrong, for that matter)</p>",
        "id": 220262284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221021
    },
    {
        "content": "<p>(this is old, but it is also the kind of bug that is easy to overlook as a user, which may explain why its never gotten filed.)</p>",
        "id": 220262325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-17.20.2354818/near/220262284\">said</a>:</p>\n<blockquote>\n<p>(and that prioritization may be wrong, for that matter)</p>\n</blockquote>\n<p>I know this meeting is too packed to do it now, but at some point I would <em>love</em> to have a chat about what issues T-compiler considers important</p>",
        "id": 220262411,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608221063
    },
    {
        "content": "<p>more discussion here: <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/to.20prioritize.20or.20not.20to.20prioritize.2C.20that.20is.20the.20question\">https://rust-lang.zulipchat.com/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/to.20prioritize.20or.20not.20to.20prioritize.2C.20that.20is.20the.20question</a></p>",
        "id": 220262458,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608221083
    },
    {
        "content": "<p>I suppose The main reason that its P-medium is not that its old, but rather that it is not actually a soundness bug</p>",
        "id": 220262508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221115
    },
    {
        "content": "<p>(see discussion on the ticket for why that is... or might be...)</p>",
        "id": 220262523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221124
    },
    {
        "content": "<p>yeah, it's not unsound</p>",
        "id": 220262552,
        "sender_full_name": "lcnr",
        "timestamp": 1608221138
    },
    {
        "content": "<p>((the reason I say \"or might be\" is that the reason this came up at all is due to oddities that can come up when you have <code>param: *const !</code></p>",
        "id": 220262584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221155
    },
    {
        "content": "<p>(just weird and unintended)</p>",
        "id": 220262592,
        "sender_full_name": "lcnr",
        "timestamp": 1608221158
    },
    {
        "content": "<p>oh, right, still sound: <a href=\"https://github.com/rust-lang/rust/issues/79735\">#79735</a></p>",
        "id": 220262699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221189
    },
    {
        "content": "<p>(when you have <code>*const !</code>, it \"magically\" starts being seen as <code>unsafe</code> again.)</p>",
        "id": 220262737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221207
    },
    {
        "content": "<p>okay. The P-medium categorization is probably correct, then.</p>",
        "id": 220262771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221224
    },
    {
        "content": "<p>but still might be nice to fix it. :)</p>",
        "id": 220262790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221234
    },
    {
        "content": "<p>okay we are way over the hour. THanks everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 220262814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1608221248
    },
    {
        "content": "<p>Just a reminder of the email <strong>Florian Gilcher</strong> sent out:</p>\n<blockquote>\n<p>Let’s make sure we don’t do all too clever things in the week before Christmas. We had issues in the past where we broke targets popular with hobbyists - this is a little less pronounced nowadays, as nightly usage for beginners is less and less, but still to be kept in mind. Keeping rustc stable over the season is to the benefit of everyone.</p>\n</blockquote>\n<p>No harm in being a little extra cautious over the next week or two <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220263200,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1608221405
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-17.20.2354818/near/220261541\">said</a>:</p>\n<blockquote>\n<p>who can do that? <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> do you have time to put up a temporary revert PR ?</p>\n</blockquote>\n<p>see <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/revert.20.2376030\">#t-compiler &gt; revert #76030</a></p>",
        "id": 220267053,
        "sender_full_name": "davidtwco",
        "timestamp": 1608222923
    },
    {
        "content": "<p>I've just created <a href=\"https://hackmd.io/dHM5sW8oT0qhSMDAZjj4AQ?both\">next meeting's agenda</a> from the template</p>",
        "id": 220302075,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608238972
    },
    {
        "content": "<p>next week checkins would be from <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> (cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>) and <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> (cc <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>)</p>",
        "id": 220302178,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608239024
    },
    {
        "content": "<p>About <code>\"Performance regression in 1.48.0\" rust#79246</code> opened by me. I tried to do more digging and pushed to code here (far from being really minimized): <a href=\"https://github.com/marmeladema/bitvec-perf-regression\">https://github.com/marmeladema/bitvec-perf-regression</a><br>\nAll my experiments led me to believe it's related to some codegen in llvm, either inlining heuristics or something related to auto vectorization. Either way sometime, just changing a tiny bit a unrelated piece of code triggers the regression.<br>\nSome further bisection led to believe that <a href=\"https://github.com/rust-lang/rust/pull/76030\">https://github.com/rust-lang/rust/pull/76030</a> is involved and it's getting reverted for other issues discussed in this thread too so it might also fix my regression.</p>",
        "id": 220527026,
        "sender_full_name": "marmeladema",
        "timestamp": 1608482477
    },
    {
        "content": "<p>I see it has been reverted in <a href=\"https://github.com/rust-lang/rust/pull/80122\">https://github.com/rust-lang/rust/pull/80122</a>, how do I find the correct nightly built with that reverted commit?<br>\nI want to try it and verify if it fixes my regression.</p>",
        "id": 220527073,
        "sender_full_name": "marmeladema",
        "timestamp": 1608482532
    },
    {
        "content": "<p>it was merged on the 17th, so I would expect it to be in 2020-12-18. You can verify by installing the -18 distribution, running <code>rustc --version</code> and looking at git log of the commit hash.</p>",
        "id": 220527159,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608482703
    },
    {
        "content": "<p>Thanks! Will try that</p>",
        "id": 220527229,
        "sender_full_name": "marmeladema",
        "timestamp": 1608482780
    },
    {
        "content": "<p>I tried <code>rustc 1.50.0-nightly (1f5bc176b 2020-12-19)</code> and the regression is fixed with that nightly</p>",
        "id": 220527442,
        "sender_full_name": "marmeladema",
        "timestamp": 1608483139
    },
    {
        "content": "<p>you can also use rustup-toolchain-install-master instead of relying on nightlies</p>",
        "id": 220527593,
        "sender_full_name": "lcnr",
        "timestamp": 1608483396
    },
    {
        "content": "<p><a href=\"https://github.com/kennytm/rustup-toolchain-install-master\">https://github.com/kennytm/rustup-toolchain-install-master</a></p>",
        "id": 220527596,
        "sender_full_name": "lcnr",
        "timestamp": 1608483404
    },
    {
        "content": "<p>Hum it is also fixed for <code>nightly 2020-12-15</code> ...</p>",
        "id": 220527784,
        "sender_full_name": "marmeladema",
        "timestamp": 1608483720
    },
    {
        "content": "<p>But definitely not for <code>1.49.0-beta.4</code></p>",
        "id": 220527827,
        "sender_full_name": "marmeladema",
        "timestamp": 1608483738
    },
    {
        "content": "<p>That makes  no sense to me, but according to cargo-bisect-rustc, the regression was fixed by <a href=\"https://github.com/rust-lang/rust/commit/9122b769c8306b1cb3c8d1f96fca3ea3e208e22e\">https://github.com/rust-lang/rust/commit/9122b769c8306b1cb3c8d1f96fca3ea3e208e22e</a></p>",
        "id": 220529055,
        "sender_full_name": "marmeladema",
        "timestamp": 1608485866
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-17.20.2354818/near/220302178\">said</a>:</p>\n<blockquote>\n<p>next week checkins would be from [..] and @_<em>WG-polonius</em> </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I can't update the hackmd so here is the update for the polonius WG ^^:<br>\nA few things to report since last time:</p>\n<ul>\n<li>we completed the refactoring to align with the rules we finalized last sprint (but this work is not yet reviewed/landed)</li>\n<li>preparatory work for the 1st sprint of 2021, both for planning the sprint, and in-progress PRs to review during the sprint</li>\n</ul>",
        "id": 220543203,
        "sender_full_name": "lqd",
        "timestamp": 1608507940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> can you give me your HackMD username?, so I can add you</p>",
        "id": 220872690,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1608819950
    },
    {
        "content": "<p>Sorry I have not prepped a mir opt update.</p>",
        "id": 220872786,
        "sender_full_name": "oli",
        "timestamp": 1608820069
    }
]