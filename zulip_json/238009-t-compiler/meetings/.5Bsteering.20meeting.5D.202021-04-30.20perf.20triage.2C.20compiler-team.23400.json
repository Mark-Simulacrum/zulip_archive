[
    {
        "content": "<p><del>hi @T-compiler/em</del></p>",
        "id": 236837758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619790977
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; we’ll be having our performance triage process review meeting in about 4 minutes</p>",
        "id": 236837851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791020
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 236838559,
        "sender_full_name": "simulacrum",
        "timestamp": 1619791286
    },
    {
        "content": "<p>Okay, hi again <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show that you are here</p>",
        "id": 236838579,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791295
    },
    {
        "content": "<p>we have a document that has been prepared by <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> , it is available here: <a href=\"https://hackmd.io/@ryanlevick/Bk1Hidcbu\">https://hackmd.io/@ryanlevick/Bk1Hidcbu</a></p>",
        "id": 236838685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791333
    },
    {
        "content": "<p>Lets take ten minutes to all read it. Add a <span aria-label=\"book\" class=\"emoji emoji-1f4d6\" role=\"img\" title=\"book\">:book:</span> when you start reading, and a <span aria-label=\"checkered flag\" class=\"emoji emoji-1f3c1\" role=\"img\" title=\"checkered flag\">:checkered_flag:</span> when you finish</p>",
        "id": 236838748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791357
    },
    {
        "content": "<p>I think it's important to note that the focus of today's meeting is on process (as outlined in the doc) and not on pref.rlo itself.</p>",
        "id": 236838780,
        "sender_full_name": "rylev",
        "timestamp": 1619791377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> , are you two reading the doc?</p>",
        "id": 236840038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791873
    },
    {
        "content": "<p>(and I think <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> just got here)</p>",
        "id": 236840079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791892
    },
    {
        "content": "<p>I had to take a call but I'm almost finished reading. Don't let me hold the meeting up <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 236840102,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619791904
    },
    {
        "content": "<p>I'm following the meeting in brief intervals between work, don't slow down on my part.</p>",
        "id": 236840121,
        "sender_full_name": "davidtwco",
        "timestamp": 1619791912
    },
    {
        "content": "<p>okay. lets give <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> another minute to finish reading (I want read the last section more carefully anyway)</p>",
        "id": 236840189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619791935
    },
    {
        "content": "<p>I'm also kind of following meanwhile I'm doing other stuff, so don't let me hold the meeting neither</p>",
        "id": 236840201,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1619791939
    },
    {
        "content": "<p>/me is finished reading</p>",
        "id": 236840434,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619792045
    },
    {
        "content": "<p>Okay</p>",
        "id": 236840485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792066
    },
    {
        "content": "<p>So lets start with: Are there any questions about the description of the process that is used <em>today</em> ?</p>",
        "id": 236840527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792080
    },
    {
        "content": "<p>I’ll start: When a metric is marked as volatile, what form does that mark take?</p>",
        "id": 236840596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792116
    },
    {
        "content": "<p>There are a few benchmarks with \"?\" next to them</p>",
        "id": 236840628,
        "sender_full_name": "rylev",
        "timestamp": 1619792134
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/swNg1BvJ7nV3lZmtZg3bUHwH/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/swNg1BvJ7nV3lZmtZg3bUHwH/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/swNg1BvJ7nV3lZmtZg3bUHwH/image.png\"></a></div>",
        "id": 236840659,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619792154
    },
    {
        "content": "<p>perhaps <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can speak to what this means in concrete terms. I can't recall.</p>",
        "id": 236840752,
        "sender_full_name": "rylev",
        "timestamp": 1619792193
    },
    {
        "content": "<p>and that volatility is based just on the data set that was just gathered?</p>",
        "id": 236840757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792194
    },
    {
        "content": "<p>or is it related to the benchmark itself in someway?</p>",
        "id": 236840778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792202
    },
    {
        "content": "<p>I believe it's just a setting on the benchmark for ones that are known to have high variance.</p>",
        "id": 236840821,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619792223
    },
    {
        "content": "<p>literally just benchmark name match</p>",
        "id": 236840831,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792228
    },
    {
        "content": "<p>okay</p>",
        "id": 236840839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792234
    },
    {
        "content": "<p>and entirely manual</p>",
        "id": 236840849,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792241
    },
    {
        "content": "<p>Changes there are not meant to be the subject of this meeting, right?</p>",
        "id": 236840891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792254
    },
    {
        "content": "<p>I think so, yes</p>",
        "id": 236840905,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792260
    },
    {
        "content": "<p>(i.e. we’re taking things like that, that are part of perf.rlo as it stands today, as givens)</p>",
        "id": 236840926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792273
    },
    {
        "content": "<p>okay</p>",
        "id": 236840928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792274
    },
    {
        "content": "<p>though obviously the future protocol assumes, in places, that we would make improvements</p>",
        "id": 236840993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792291
    },
    {
        "content": "<p>Correct, though it's good to identify where the process is impacted by perf.rlo issues</p>",
        "id": 236840994,
        "sender_full_name": "rylev",
        "timestamp": 1619792291
    },
    {
        "content": "<p>alright. Any other questions?</p>",
        "id": 236841031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792302
    },
    {
        "content": "<p>or ratehr</p>",
        "id": 236841069,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792324
    },
    {
        "content": "<p>any other questions about process as it stands</p>",
        "id": 236841079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792330
    },
    {
        "content": "<p>In that vain I would also mention that the perf.rlo stats default to CPU instruction count, and this can bias analysis IMO</p>",
        "id": 236841137,
        "sender_full_name": "rylev",
        "timestamp": 1619792347
    },
    {
        "content": "<p>If people come up with some questions about status quo, feel free to chime in with them (but be clear about context for your Question)</p>",
        "id": 236841192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792368
    },
    {
        "content": "<p>but assuming there are no further Q's</p>",
        "id": 236841215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792377
    },
    {
        "content": "<p>lets move on to: Questions about the Proposed idea for a new process</p>",
        "id": 236841232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792387
    },
    {
        "content": "<p>I have one: For some reason I thought we already <em>do</em> have performance results for every merge to master</p>",
        "id": 236841315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792412
    },
    {
        "content": "<p>It sounds like based on my reading <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> you're not suggesting anything really 'new' in some sense, rather automating/moving to bots some of the work currently done by humans. Is that an accurate impression?</p>",
        "id": 236841317,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think that's correct?</p>",
        "id": 236841376,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792435
    },
    {
        "content": "<p>Yes I would say that's fair. In general, the more we automate, the more we can focus on improving around that automation.</p>",
        "id": 236841405,
        "sender_full_name": "rylev",
        "timestamp": 1619792444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236841315\">said</a>:</p>\n<blockquote>\n<p>I have one: For some reason I thought we already <em>do</em> have performance results for every merge to master</p>\n</blockquote>\n<p>I guess why do you think this is <em>not</em> true</p>",
        "id": 236841463,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792468
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236841315\">said</a>:</p>\n<blockquote>\n<p>I have one: For some reason I thought we already <em>do</em> have performance results for every merge to master</p>\n</blockquote>\n<p>We do. If that's not clear in the description of the current process, we should tweak it</p>",
        "id": 236841519,
        "sender_full_name": "rylev",
        "timestamp": 1619792471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236841315\">said</a>:</p>\n<blockquote>\n<p>I have one: For some reason I thought we already <em>do</em> have performance results for every merge to master</p>\n</blockquote>\n<p>okay, so the change \"On every merge to master a performance run is made and if a performance regression is found […]”, the relevant bit is the automatic creation of an issue</p>",
        "id": 236841521,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792472
    },
    {
        "content": "<p>Correct</p>",
        "id": 236841547,
        "sender_full_name": "rylev",
        "timestamp": 1619792489
    },
    {
        "content": "<p>and that would hopefully address the problem in the status quo of “There is not process to ensure that the issue comes to some sort of conclusion” , right?</p>",
        "id": 236841694,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792544
    },
    {
        "content": "<p>I think I understand that</p>",
        "id": 236841760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792569
    },
    {
        "content": "<p>No I don't believe this are connected.</p>",
        "id": 236841764,
        "sender_full_name": "rylev",
        "timestamp": 1619792571
    },
    {
        "content": "<p>oh they’re not?</p>",
        "id": 236841777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792576
    },
    {
        "content": "<p>Not directly at least</p>",
        "id": 236841804,
        "sender_full_name": "rylev",
        "timestamp": 1619792586
    },
    {
        "content": "<p>so you don’t think the new protocol addresses the \"There is not process to ensure that the issue comes to some sort of conclusion” problem?</p>",
        "id": 236841862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792605
    },
    {
        "content": "<p>Oh way sorry, yes it is connected - I read your comment wrong</p>",
        "id": 236841890,
        "sender_full_name": "rylev",
        "timestamp": 1619792617
    },
    {
        "content": "<p>But this assumes some follow up process similar to compiler issue triage that ensures we make process on addressing these issues</p>",
        "id": 236841943,
        "sender_full_name": "rylev",
        "timestamp": 1619792640
    },
    {
        "content": "<p>(I mean, one can argue that the vast majority of our issue database has no process to ensure they come to a conclusion)</p>",
        "id": 236841981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792645
    },
    {
        "content": "<p>(because as soon as something is not P-critical and not a beta-regression, there is no forcing function bringing collective attention to it)</p>",
        "id": 236842039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236841981\">said</a>:</p>\n<blockquote>\n<p>(I mean, one can argue that the vast majority of our issue database has no process to ensure they come to a conclusion)</p>\n</blockquote>\n<p>A topic I'd love to talk through another day <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 236842047,
        "sender_full_name": "rylev",
        "timestamp": 1619792671
    },
    {
        "content": "<p>back when Graydon was in charge, we had periodic meetings where we went through <em>every</em> <em>open</em> <em>bug</em></p>",
        "id": 236842147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792713
    },
    {
        "content": "<p>those were … rough times.</p>",
        "id": 236842170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792722
    },
    {
        "content": "<p>Anyway</p>",
        "id": 236842230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792739
    },
    {
        "content": "<p>Another question I had</p>",
        "id": 236842279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792759
    },
    {
        "content": "<p>I believe we discussed an earlier version of this document</p>",
        "id": 236842337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792770
    },
    {
        "content": "<p>or a part of its proposal</p>",
        "id": 236842346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792773
    },
    {
        "content": "<p>and there was concern about auto-running a performance run on every PR</p>",
        "id": 236842388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792789
    },
    {
        "content": "<p>this proposal narrows that to \"anything that touches a “.rs” file in the “compiler” directory\"</p>",
        "id": 236842414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792803
    },
    {
        "content": "<p>hm, not quite, right?</p>",
        "id": 236842437,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792814
    },
    {
        "content": "<p>it says \"suggest it\"</p>",
        "id": 236842461,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792822
    },
    {
        "content": "<p>oh oh</p>",
        "id": 236842464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792824
    },
    {
        "content": "<p>true</p>",
        "id": 236842468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792825
    },
    {
        "content": "<p>I misread that</p>",
        "id": 236842479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792829
    },
    {
        "content": "<p>and entirely skipped the bullet after it</p>",
        "id": 236842534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792853
    },
    {
        "content": "<p>apparently</p>",
        "id": 236842546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792856
    },
    {
        "content": "<p>I think prompting is a good step</p>",
        "id": 236842591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792872
    },
    {
        "content": "<p>This is the part I'm least sure about. We want to encourage people to test performance. I have seen large refactors go without perf suite runs. Suggestions could help, but it's also possible people will learn to ignore these.</p>",
        "id": 236842602,
        "sender_full_name": "rylev",
        "timestamp": 1619792880
    },
    {
        "content": "<p>regardless, I do think it'll increase the performance run rate. I'm not sure that's a bad thing, necessarily; whether we have capacity is an open question but I think addressable one way or another (whether by fine-tuning what benchmarks are run for the 'default try' or server optimization/parallelism)</p>",
        "id": 236842614,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792882
    },
    {
        "content": "<p>if for no other reason, it will remind people the right way to invoke the rust-timer queue</p>",
        "id": 236842680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792896
    },
    {
        "content": "<p>there are plenty of times when I think “I should invoke a bot to do X here” but then I don’t remember the syntax, and either don’t have time to look it up or get sidetracked before I can.</p>",
        "id": 236842776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792935
    },
    {
        "content": "<p>I think ultimately the long-term here is likely that we integrate the performance test <em>into</em> bors somehow, requiring that it doesn't differ sufficiently from a previous run on PR (that was ack'd) to merge.</p>",
        "id": 236842802,
        "sender_full_name": "simulacrum",
        "timestamp": 1619792946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> regarding capacity</p>",
        "id": 236842815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792949
    },
    {
        "content": "<p>I think people will be less likely to ignore the suggestion if it's appropriate. Suggesting on every pr that touches <code>compiler/</code> will probably get ignored very quickly.</p>",
        "id": 236842845,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619792961
    },
    {
        "content": "<p>can you remind me of the current architecture for perf.rlo?</p>",
        "id": 236842847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792961
    },
    {
        "content": "<p>in terms of what machine(s) are driving the runs?</p>",
        "id": 236842920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619792983
    },
    {
        "content": "<p>A better version of that question, perhaps: Isn’t this something we can throw more cloud machines at?</p>",
        "id": 236842984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793005
    },
    {
        "content": "<p>perf.rlo collection is a single dedicated machine (we rent a box); the website is served separately (from ECS on AWS)</p>",
        "id": 236842992,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793006
    },
    {
        "content": "<p>okay</p>",
        "id": 236843001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793010
    },
    {
        "content": "<p>and it has to be that single dedicated machine</p>",
        "id": 236843012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793016
    },
    {
        "content": "<p>it is, broadly speaking, there is engineering work to make it reliable</p>",
        "id": 236843015,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793019
    },
    {
        "content": "<p>in order to ensure that its not noisy?</p>",
        "id": 236843023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793022
    },
    {
        "content": "<p>i.e. you want to make sure the same benchmarks get run on the same machines</p>",
        "id": 236843050,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793029
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/ote-4M_Xu0QHMJgqv9wdifmL/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ote-4M_Xu0QHMJgqv9wdifmL/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/ote-4M_Xu0QHMJgqv9wdifmL/image.png\"></a></div>",
        "id": 236843087,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793043
    },
    {
        "content": "<p>that's the queue length over last 7 days</p>",
        "id": 236843110,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793053
    },
    {
        "content": "<p>so we have some capacity for sure</p>",
        "id": 236843120,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793057
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236843050\">said</a>:</p>\n<blockquote>\n<p>i.e. you want to make sure the same benchmarks get run on the same machines</p>\n</blockquote>\n<p>that, or you switch to focusing solely on metrics (in the sense of what counters you observe) that are repeatable even on cloud machines</p>",
        "id": 236843170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793080
    },
    {
        "content": "<p>right?</p>",
        "id": 236843203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793103
    },
    {
        "content": "<p>yeah, perhaps. or rent a sufficiently \"big box\" (our is only a 3600, maybe not even X) that we can reduce the time a performance run takes</p>",
        "id": 236843276,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793125
    },
    {
        "content": "<p>ultimately I'm not too worried about capacity</p>",
        "id": 236843319,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793142
    },
    {
        "content": "<p>hmm</p>",
        "id": 236843331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793146
    },
    {
        "content": "<p>okay</p>",
        "id": 236843405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793186
    },
    {
        "content": "<p>We also can tweak the benchmarks to run faster. I believe some last longer than they strictly need to to run</p>",
        "id": 236843436,
        "sender_full_name": "rylev",
        "timestamp": 1619793191
    },
    {
        "content": "<p>I guess this falls into category of “things we should not try to address inthis meeting\"</p>",
        "id": 236843452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793200
    },
    {
        "content": "<p>though I really would like to explore the space better</p>",
        "id": 236843461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793208
    },
    {
        "content": "<p>yeah I'd be happy to schedule some time to chat</p>",
        "id": 236843492,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793227
    },
    {
        "content": "<p>Like, I think people at AWS would love to help here</p>",
        "id": 236843493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793228
    },
    {
        "content": "<p>if we can figure out a way to make cloud runs <em>useful</em></p>",
        "id": 236843558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793247
    },
    {
        "content": "<p>ultimately I think we're more starved of human implementation / 'programmers' than hardware, for now</p>",
        "id": 236843581,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793254
    },
    {
        "content": "<p>I guess</p>",
        "id": 236843626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793270
    },
    {
        "content": "<p>but the fact that the idea of “do a perf run on every PR\"</p>",
        "id": 236843644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793278
    },
    {
        "content": "<p>got met with “that’s too expensive\"</p>",
        "id": 236843651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793283
    },
    {
        "content": "<p>that to me said that there’s an opportunity</p>",
        "id": 236843664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793292
    },
    {
        "content": "<p>hm, did it?</p>",
        "id": 236843679,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793300
    },
    {
        "content": "<p>I don't think it is</p>",
        "id": 236843709,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793310
    },
    {
        "content": "<p>I thought <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> said that</p>",
        "id": 236843711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793310
    },
    {
        "content": "<p>its possible I’m misremembering</p>",
        "id": 236843719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793317
    },
    {
        "content": "<p>If its <em>not</em> too expensive, then why not do it?</p>",
        "id": 236843766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793331
    },
    {
        "content": "<p>Well, you currently need a cursory review before you can do a performance run (as it runs largely unsandboxed)</p>",
        "id": 236843802,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793353
    },
    {
        "content": "<p>because it will make noise on the PR comment thread? (That’s doesn’t seem like a good counter-argument)</p>",
        "id": 236843810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793357
    },
    {
        "content": "<p>ah ha</p>",
        "id": 236843817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793359
    },
    {
        "content": "<p><em>that</em> is an argument.</p>",
        "id": 236843830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793362
    },
    {
        "content": "<p>so again, not 'hardware' cost :)</p>",
        "id": 236843878,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793369
    },
    {
        "content": "<p>(so now I’m wondering about the impact of running sandboxed… heh.)</p>",
        "id": 236843938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793393
    },
    {
        "content": "<p>Okay, sorry</p>",
        "id": 236843988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793414
    },
    {
        "content": "<p>sidetracked</p>",
        "id": 236843992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793417
    },
    {
        "content": "<p>back to the doc itself</p>",
        "id": 236844000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793421
    },
    {
        "content": "<p>What other questions do people have about the proposed revised process?</p>",
        "id": 236844054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793444
    },
    {
        "content": "<p>I think my main question is \"who implements this?\" and \"how can we roll it out gradually?\"</p>",
        "id": 236844058,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793447
    },
    {
        "content": "<p>otherwise, it seems like a great improvement</p>",
        "id": 236844082,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793460
    },
    {
        "content": "<p>So the pieces of it that I see</p>",
        "id": 236844184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793486
    },
    {
        "content": "<p>I might kick off without the suggestions on ~every PR, I agree with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> that every compiler/ PR might be a bit excessive</p>",
        "id": 236844193,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793489
    },
    {
        "content": "<p>I think if we can get these improvements into the form of simple GitHub issues we might have luck attracting help</p>",
        "id": 236844203,
        "sender_full_name": "rylev",
        "timestamp": 1619793492
    },
    {
        "content": "<p>are changes to bots (and maybe new bots)?</p>",
        "id": 236844220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793498
    },
    {
        "content": "<p>and also</p>",
        "id": 236844225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793500
    },
    {
        "content": "<p>changes to perf.rlo itself (to track the state that will inform heuristics)</p>",
        "id": 236844259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793517
    },
    {
        "content": "<p>do those two categories sound like they cover it completely?</p>",
        "id": 236844337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793541
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236844193\">said</a>:</p>\n<blockquote>\n<p>I might kick off without the suggestions on ~every PR, I agree with <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> that every compiler/ PR might be a bit excessive</p>\n</blockquote>\n<p>We’d probably want to have some dedicated place to debate what heuristics to kick off with, in that case</p>",
        "id": 236844398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793578
    },
    {
        "content": "<p>We need small changes to rust-lang/rust repo itself (e.g., a new label)</p>",
        "id": 236844399,
        "sender_full_name": "rylev",
        "timestamp": 1619793578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236844398\">said</a>:</p>\n<blockquote>\n<p>We’d probably want to have some dedicated place to debate what heuristics to kick off with, in that case</p>\n</blockquote>\n<p>Maybe the historical data would be the right thing then</p>",
        "id": 236844431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> I wrote this in the doc too: Do you think it would be feasible to try to build up the information about the <em>past</em> here?</p>",
        "id": 236844544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793633
    },
    {
        "content": "<p>we don't delete any data, pretty much</p>",
        "id": 236844585,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793653
    },
    {
        "content": "<p>i.e. use the past perf runs on the PR’s and from that, build up a model of what .rs files are problematic?</p>",
        "id": 236844598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793658
    },
    {
        "content": "<p>it is relatively straightforward to do some analysis thereof, in theory; I don't know how I'd go about it but seems not impossible</p>",
        "id": 236844638,
        "sender_full_name": "simulacrum",
        "timestamp": 1619793679
    },
    {
        "content": "<p>(I’m not 100% sure that .rs files are the right reference point, since things move around. but its the easiest thing to observe without parsing the code itself…)</p>",
        "id": 236844675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793700
    },
    {
        "content": "<p>I'm not sure how easy that will be. We need to go through all runs, determine which look like regressions, find the changes that caused the run, and then build a heuristic from that. Sounds doable, but certainly not trivial.</p>",
        "id": 236844678,
        "sender_full_name": "rylev",
        "timestamp": 1619793703
    },
    {
        "content": "<p>maybe its something one throws machine learning at</p>",
        "id": 236844815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793761
    },
    {
        "content": "<p>Would it be valuable to signal that we shouldn't refrain from reverting the regressions?</p>",
        "id": 236844876,
        "sender_full_name": "nagisa",
        "timestamp": 1619793784
    },
    {
        "content": "<p>signal in what sense?</p>",
        "id": 236844920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236843436\">said</a>:</p>\n<blockquote>\n<p>We also can tweak the benchmarks to run faster. I believe some last longer than they strictly need to to run</p>\n</blockquote>\n<p>Could we compile benchmark dependencies in parallel on a separate machine without having to wait for all earlier jobs to be finished on the benchmark machine?</p>",
        "id": 236844921,
        "sender_full_name": "bjorn3",
        "timestamp": 1619793802
    },
    {
        "content": "<p>To the contributors. Right now there's a lot of reluctance to revert.</p>",
        "id": 236844971,
        "sender_full_name": "nagisa",
        "timestamp": 1619793825
    },
    {
        "content": "<p>Oh, as in, our bar for reversion today is usually based on soundness bugs</p>",
        "id": 236845058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793854
    },
    {
        "content": "<p>so a policy of some sort: if its an unanticipated regression, its going to be reverted.</p>",
        "id": 236845063,
        "sender_full_name": "nagisa",
        "timestamp": 1619793859
    },
    {
        "content": "<p>but you’re suggesting we broaden things, lower the bar</p>",
        "id": 236845096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793876
    },
    {
        "content": "<p>(I suspect its going to just place more burden onto bors tho)</p>",
        "id": 236845098,
        "sender_full_name": "nagisa",
        "timestamp": 1619793879
    },
    {
        "content": "<p>its an interesting idea</p>",
        "id": 236845120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793889
    },
    {
        "content": "<p>I think we should work on making bors more reliable if we do that</p>",
        "id": 236845159,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793905
    },
    {
        "content": "<blockquote>\n<p>determine which look like regressions</p>\n</blockquote>\n<p>Personally, this is where I'd start. A bot that can leave a comment on the PR with a \"this seems ok\", \"nice performance improvement!\", or \"maybe this needs some work?\" would be useful today.</p>",
        "id": 236845169,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619793909
    },
    {
        "content": "<p>right now there are quite a lot of spurious failures even for trivial changes</p>",
        "id": 236845181,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793916
    },
    {
        "content": "<p>and it adds reluctance to revert things that land, because it will be a pain to land them again</p>",
        "id": 236845234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236844921\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236843436\">said</a>:</p>\n<blockquote>\n<p>We also can tweak the benchmarks to run faster. I believe some last longer than they strictly need to to run</p>\n</blockquote>\n<p>Could we compile benchmark dependencies in parallel on a separate machine without having to wait for all earlier jobs to be finished on the benchmark machine?</p>\n</blockquote>\n<p>(I think rylev’s comment was about the actual benchmark run time. but you’re right: If we aren’t compiling the benchmarks on a different machine today, we should definitely consider it.)</p>",
        "id": 236845268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793952
    },
    {
        "content": "<p>are there really that many spurious failures?/</p>",
        "id": 236845272,
        "sender_full_name": "nagisa",
        "timestamp": 1619793955
    },
    {
        "content": "<p>We should gather data on that</p>",
        "id": 236845333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793974
    },
    {
        "content": "<p>I don't recall it being an issue, but if it is, then its definitely something to pour some resources towards.</p>",
        "id": 236845347,
        "sender_full_name": "nagisa",
        "timestamp": 1619793978
    },
    {
        "content": "<p>here's a recent example: <a href=\"https://github.com/rust-lang/rust/pull/84574\">https://github.com/rust-lang/rust/pull/84574</a></p>",
        "id": 236845358,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793982
    },
    {
        "content": "<p>and I remember there being a lot of others too</p>",
        "id": 236845370,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793988
    },
    {
        "content": "<p>I think it comes up more often than you’d expect</p>",
        "id": 236845375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619793990
    },
    {
        "content": "<p>also github occasionally kills machines without any logs</p>",
        "id": 236845437,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794024
    },
    {
        "content": "<p>usually Mac or ARM I think</p>",
        "id": 236845461,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794030
    },
    {
        "content": "<p>hmm so I think there’s a few parallel conversation threads at the moment</p>",
        "id": 236845562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794062
    },
    {
        "content": "<p>(sorry, I can quiet down and bring it up after the meeting)</p>",
        "id": 236845643,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794092
    },
    {
        "content": "<p>let me at least try to see if I can summarize them</p>",
        "id": 236845647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794094
    },
    {
        "content": "<p>no its good feedback</p>",
        "id": 236845664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794100
    },
    {
        "content": "<p>I just don’t want things to get lost</p>",
        "id": 236845670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794103
    },
    {
        "content": "<ol>\n<li>should we lower bar for reverting PR’s to include performance regressions</li>\n</ol>",
        "id": 236845692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794118
    },
    {
        "content": "<ol start=\"2\">\n<li>what should we focus on first? E.g., the heuristics used to identify whether a PR <em>is</em> a performance regression?</li>\n</ol>",
        "id": 236845720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794141
    },
    {
        "content": "<ol start=\"3\">\n<li>(or perhaps 1b.): is there a lot of spurious bors failures today?</li>\n</ol>",
        "id": 236845778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794169
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845778\">said</a>:</p>\n<blockquote>\n<ol start=\"3\">\n<li>(or perhaps 1b.): is there a lot of spurious bors failures today?</li>\n</ol>\n</blockquote>\n<p>I can spend time coming up with more examples if you want me to <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 236845834,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845692\">said</a>:</p>\n<blockquote>\n<ol>\n<li>should we lower bar for reverting PR’s to include performance regressions</li>\n</ol>\n</blockquote>\n<p>I think ideally it would be a rare occurrence to encounter a performance regression in a merged PR since they should mostly be caught in review.</p>",
        "id": 236845892,
        "sender_full_name": "rylev",
        "timestamp": 1619794206
    },
    {
        "content": "<ol start=\"4\">\n<li>what heuristics do we need for determining whether to suggest a perf run?</li>\n</ol>",
        "id": 236845918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845892\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845692\">said</a>:</p>\n<blockquote>\n<ol>\n<li>should we lower bar for reverting PR’s to include performance regressions</li>\n</ol>\n</blockquote>\n<p>I think ideally it would be a rare occurrence to encounter a performance regression in a merged PR since they should mostly be caught in review.</p>\n</blockquote>\n<p>Right, but I think part of nagisa’s idea was that if people are told it <em>will</em> get reverted</p>",
        "id": 236845976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794246
    },
    {
        "content": "<p>then they will invest more effort</p>",
        "id": 236845982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794250
    },
    {
        "content": "<p>in making sure that any performance issues are understood</p>",
        "id": 236845999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794258
    },
    {
        "content": "<ol start=\"5\">\n<li>can we build up model of problematic code/files based on past perf runs</li>\n</ol>",
        "id": 236846072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845834\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845778\">said</a>:</p>\n<blockquote>\n<ol start=\"3\">\n<li>(or perhaps 1b.): is there a lot of spurious bors failures today?</li>\n</ol>\n</blockquote>\n<p>I can spend time coming up with more examples if you want me to <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>\n</blockquote>\n<p>(my intent here was to suggest we make a survey, rather than anecdotes)</p>",
        "id": 236846185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794338
    },
    {
        "content": "<p>as in: Individual instances are annoying. But its possible that they are still <em>rare</em></p>",
        "id": 236846211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794356
    },
    {
        "content": "<p>and it seems like its data we could scrape?</p>",
        "id": 236846258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794378
    },
    {
        "content": "<p>(i.e. since its all done with automated comments, it should be straight-forward to pattern match the cases, I think…)</p>",
        "id": 236846354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794427
    },
    {
        "content": "<p>Anyway, were there any items beyond the 5 I managed to list?</p>",
        "id": 236846421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794444
    },
    {
        "content": "<p>Okay. Since we only have about six minutes left in meeting</p>",
        "id": 236846510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794494
    },
    {
        "content": "<p>I’ll come up with a quick prioirty order of topics</p>",
        "id": 236846544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794508
    },
    {
        "content": "<p>2, 1+3, 4. (We can skip 5.)</p>",
        "id": 236846618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236846354\">said</a>:</p>\n<blockquote>\n<p>(i.e. since its all done with automated comments, it should be straight-forward to pattern match the cases, I think…)</p>\n</blockquote>\n<p>hmm, I think it would be hard to distinguish \"this PR failed correctly\" from \"it failed spuriously\"</p>",
        "id": 236846625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845720\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>what should we focus on first? E.g., the heuristics used to identify whether a PR <em>is</em> a performance regression?</li>\n</ol>\n</blockquote>",
        "id": 236846638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794549
    },
    {
        "content": "<p>maybe looking for \"@bors retry\" would be more accurate</p>",
        "id": 236846653,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619794552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , was your point there that its not enough to use the blanket “2% threshold” or whatever?</p>",
        "id": 236846831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794609
    },
    {
        "content": "<p>Or was your point that such a threshold is a good enough starting point?</p>",
        "id": 236846894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794633
    },
    {
        "content": "<p>We don't show in PRs whether the run is a regression or not. We require reviewers to click the link and make the judgement themselves.</p>",
        "id": 236846912,
        "sender_full_name": "rylev",
        "timestamp": 1619794640
    },
    {
        "content": "<p>we can use the same heuristics used for the performance reports Ryan and I do each week, I guess, as a starting point to assessing the results</p>",
        "id": 236846916,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794643
    },
    {
        "content": "<p>but to be clear</p>",
        "id": 236846948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794658
    },
    {
        "content": "<p>No, just that automation of the analysis would add consistency to interpreting the perf results and be useful even in the current system. I think a threshold like that would be sufficient to start with.</p>",
        "id": 236846958,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619794663
    },
    {
        "content": "<p>the bot won’t do this unless a perf run has been requested in the first place</p>",
        "id": 236846966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794667
    },
    {
        "content": "<p>right?</p>",
        "id": 236846967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794668
    },
    {
        "content": "<p>Correct</p>",
        "id": 236846984,
        "sender_full_name": "rylev",
        "timestamp": 1619794678
    },
    {
        "content": "<p>okay</p>",
        "id": 236846991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794681
    },
    {
        "content": "<p>that all sounds good to me</p>",
        "id": 236847007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794684
    },
    {
        "content": "<p>the suggestion here is for a github-label</p>",
        "id": 236847067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794698
    },
    {
        "content": "<p>I could imagine editing the description could also be good</p>",
        "id": 236847100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794712
    },
    {
        "content": "<p>at least, it can be difficult to jump to the right comment</p>",
        "id": 236847125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794725
    },
    {
        "content": "<p>I would also love to automate the triage process to do the same thing as we're suggesting here but for post-merge perf runs.</p>",
        "id": 236847130,
        "sender_full_name": "rylev",
        "timestamp": 1619794728
    },
    {
        "content": "<p>anyway I don’t think there’s much else to discuss on 2 then</p>",
        "id": 236847161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794744
    },
    {
        "content": "<p>next</p>",
        "id": 236847165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794745
    },
    {
        "content": "<p>1+3</p>",
        "id": 236847168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794746
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845692\">said</a>:</p>\n<blockquote>\n<ol>\n<li>should we lower bar for reverting PR’s to include performance regressions</li>\n</ol>\n</blockquote>",
        "id": 236847185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-04-30.20perf.20triage.2C.20compiler-team.23400/near/236845778\">said</a>:</p>\n<blockquote>\n<ol start=\"3\">\n<li>(or perhaps 1b.): is there a lot of spurious bors failures today?</li>\n</ol>\n</blockquote>",
        "id": 236847201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794758
    },
    {
        "content": "<p>We can embed it into the bottom 'ci results' panel, without too much work</p>",
        "id": 236847203,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794758
    },
    {
        "content": "<p>hmm</p>",
        "id": 236847255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794788
    },
    {
        "content": "<p>I guess we’re almost out of time</p>",
        "id": 236847263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794791
    },
    {
        "content": "<p>but anyway, that's presentational</p>",
        "id": 236847268,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794795
    },
    {
        "content": "<p>Do people think nagisa’s suggestion makes sense?</p>",
        "id": 236847277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794800
    },
    {
        "content": "<p>its something we’d want to probably bring up with whole team</p>",
        "id": 236847376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794813
    },
    {
        "content": "<p>that isn’t here</p>",
        "id": 236847388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794815
    },
    {
        "content": "<p>maybe an MCP</p>",
        "id": 236847429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794819
    },
    {
        "content": "<p>right?</p>",
        "id": 236847461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794822
    },
    {
        "content": "<p>maybe</p>",
        "id": 236847560,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794839
    },
    {
        "content": "<p>and … we probably wouldn’t want to do it .. .until the rest of this infrastructure is in place, right?</p>",
        "id": 236847575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794842
    },
    {
        "content": "<p>I'd like to gather stats on how many times a PR results in a performance regression broken down by how often a perf run was requested and how often it was not requested.</p>",
        "id": 236847659,
        "sender_full_name": "rylev",
        "timestamp": 1619794858
    },
    {
        "content": "<p>i.e. if the point is to encourage contributors to make sure their PR’s don’t regress performance</p>",
        "id": 236847664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794859
    },
    {
        "content": "<p>not sure how I feel, I guess, I'm always 'revert happy' to some extent, but situations are rarely clear cut</p>",
        "id": 236847669,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794860
    },
    {
        "content": "<p>e.g., important bug fix with a 3% unexplained performance hit</p>",
        "id": 236847779,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794879
    },
    {
        "content": "<p>then I’d like to ensure that such investigation, and signalling of potnetial problems, is as lightweight as possible</p>",
        "id": 236847821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794888
    },
    {
        "content": "<p>Right. I think the point is to have that justification up front</p>",
        "id": 236847907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794905
    },
    {
        "content": "<p>and at least a statement that it was known about</p>",
        "id": 236847956,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794914
    },
    {
        "content": "<p>instead of a surprise</p>",
        "id": 236847978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794919
    },
    {
        "content": "<p>but I guess your point is that sometimes it will be a surprise?</p>",
        "id": 236848081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794929
    },
    {
        "content": "<p>In <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> ’s ideal world, it wouldn’t be. :)</p>",
        "id": 236848163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794946
    },
    {
        "content": "<p>Anyway we’re over time now</p>",
        "id": 236848197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794953
    },
    {
        "content": "<p>yeah not sure how I feel</p>",
        "id": 236848243,
        "sender_full_name": "simulacrum",
        "timestamp": 1619794962
    },
    {
        "content": "<p>Is there anything else anyone wants to chime in with?</p>",
        "id": 236848254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619794963
    },
    {
        "content": "<p>NB: I didn't think through the details of my suggestion myself, there may be good reasons to not do it.</p>",
        "id": 236848287,
        "sender_full_name": "nagisa",
        "timestamp": 1619794970
    },
    {
        "content": "<p>We can discuss in #perf what the next concrete steps are</p>",
        "id": 236848646,
        "sender_full_name": "rylev",
        "timestamp": 1619795038
    },
    {
        "content": "<p>Okay</p>",
        "id": 236848761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619795061
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!. and thanks to <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> for preparing the doc!</p>",
        "id": 236848816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1619795077
    }
]