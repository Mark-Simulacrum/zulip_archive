[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at 2pm UTC</p>",
        "id": 206067256,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655701
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 206067280,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655716
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/motmieXeSOabbMf6-IfLog?view\">meeting agenda</a></p>",
        "id": 206067304,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655728
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span>  and <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span></p>",
        "id": 206067348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655756
    },
    {
        "content": "<p>I'll be sharing some stuff about <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span></p>",
        "id": 206067467,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> and/or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>?</p>",
        "id": 206067511,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596655842
    },
    {
        "content": "<p>I won't be at the meeting</p>",
        "id": 206068651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596656456
    },
    {
        "content": "<p>but also, blitzerr isn't involved anymore</p>",
        "id": 206068660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596656463
    },
    {
        "content": "<p>we should update the web-site</p>",
        "id": 206068673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596656466
    },
    {
        "content": "<p>that said, I can leave a note :)</p>",
        "id": 206068677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596656468
    },
    {
        "content": "<p>done</p>",
        "id": 206069656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596656940
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 40 minutes</p>",
        "id": 206139236,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596720018
    },
    {
        "content": "<p><a href=\"https://hackmd.io/motmieXeSOabbMf6-IfLog?view\">Check out the meeting agenda</a></p>",
        "id": 206139256,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596720032
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, I don't see <a href=\"https://github.com/rust-lang/rust/issues/75100\">https://github.com/rust-lang/rust/issues/75100</a> on the list, could it be added?</p>",
        "id": 206140117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720446
    },
    {
        "content": "<p>It has I-nominated</p>",
        "id": 206140160,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720467
    },
    {
        "content": "<p>I could add P-critical if it helps you find it</p>",
        "id": 206140279,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720511
    },
    {
        "content": "<p>it needs T-compiler for compiler team to discuss</p>",
        "id": 206140363,
        "sender_full_name": "simulacrum",
        "timestamp": 1596720549
    },
    {
        "content": "<p>Hmm ... It needs help from the compiler team but it only affects rustdoc</p>",
        "id": 206140427,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720576
    },
    {
        "content": "<p>Or in other words no one in rustdoc knows how to fix it</p>",
        "id": 206140462,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720593
    },
    {
        "content": "<p>I added T-compiler but you can remove it if it doesn't fit</p>",
        "id": 206140788,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596720724
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 206144777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722543
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 206144869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722589
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-05.20.2354818/near/206140117\">said</a>:</p>\n<blockquote>\n<p>Hi <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span>, I don't see <a href=\"https://github.com/rust-lang/rust/issues/75100\">https://github.com/rust-lang/rust/issues/75100</a> on the list, could it be added?</p>\n</blockquote>\n<p>adding it to the agenda</p>",
        "id": 206144939,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596722622
    },
    {
        "content": "<ul>\n<li>We removed script-servo-2 from <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a>, see <a href=\"https://github.com/rust-lang/rustc-perf/pull/740\">https://github.com/rust-lang/rustc-perf/pull/740</a> for some explanation. Please comment there if you want us to revert (or ping me in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a>)</li>\n</ul>",
        "id": 206144968,
        "sender_full_name": "simulacrum",
        "timestamp": 1596722639
    },
    {
        "content": "<ul>\n<li><code>tracing</code> has been added to rustc, @oli is playing with features, comment if you have opinions: <a href=\"https://github.com/rust-lang/rust/pull/75143\">https://github.com/rust-lang/rust/pull/75143</a></li>\n</ul>",
        "id": 206145025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722651
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"refactor types to fit the chalk-ty generic plan\" <a href=\"https://github.com/rust-lang/compiler-team/issues/341\">compiler-team#341</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206145051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722663
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Move the compiler to a new <code>compiler/</code> directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">compiler-team#336</a></li>\n<li>\"Form t-compiler/wg-parser-library\" <a href=\"https://github.com/rust-lang/compiler-team/issues/338\">compiler-team#338</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206145074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722673
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 206145099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722689
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Stabilizable subset of const generics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/332\">compiler-team#332</a></li>\n<li>\"Create a WebAssembly target notification group.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/337\">compiler-team#337</a></li>\n<li>\"Set ninja=true by default\" <a href=\"https://github.com/rust-lang/compiler-team/issues/339\">compiler-team#339</a></li>\n<li>\"Implement const equality and const wf\" <a href=\"https://github.com/rust-lang/compiler-team/issues/340\">compiler-team#340</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206145117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722700
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n<li>Finalized FCPs<ul>\n<li>No finalized FCPs this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 206145144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722714
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 206145160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722723
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span>  checkin by @<strong>spastorino</strong>:</p>\n<blockquote>\n<ul>\n<li>We have now a <a href=\"https://github.com/rust-lang/compiler-team-prioritization/\">repo for the working group</a> and we are mainly handling our todo list as issues there.</li>\n<li>Our procedure automation cli is \"complete\" and outputs the agenda but we still need to integrate it with the Zulip bot.</li>\n<li>We've <a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html\">documented our procedure</a> with a lot of details on Rust Forge.</li>\n<li>We have added Pre-FCP and FCP information to the announcements.</li>\n<li>There's a list of things we need to tweak <a href=\"https://github.com/rust-lang/compiler-team-prioritization/issues?q=is%3Aopen+is%3Aissue\">in our issue tracker</a>, help is appreciated :)</li>\n</ul>\n</blockquote>",
        "id": 206145176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722731
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> checkin by <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>:</p>\n<blockquote>\n<p>Work is currently on a temporary hiatus because of exam period.</p>\n<p>We have been working on various refactorings to allow captures<br>\nto capture not just individual variables but arbitrary places.</p>\n<p>Some of the refactorings we are working on:</p>\n<ul>\n<li>Making it so that we don't assume that we always know how many<br>\n  captured variables there are for a particular closure, since<br>\n  that will now need to be inferred by upvar analysis.</li>\n<li>Extending the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/hir/place/struct.Place.html\">**HIR** definition of a \n  place</a><br>\n  to have more information. (<a href=\"https://github.com/rust-lang/project-rfc-2229/issues/10\">rust-lang/project-rfc-2229#10</a>)</li>\n<li>Created a data structure that captures the full places that a closure uses<br>\n  and then uses that to create the existing capture data structures of<br>\n  individual variables, thus testing out the new visitor and place information. (<a href=\"https://github.com/rust-lang/project-rfc-2229/issues/7\">rust-lang/project-rfc-2229#7</a>)</li>\n<li>Experimenting with the algorithm to capture minimal places (<a href=\"https://github.com/rust-lang/project-rfc-2229/issues/9\">rust-lang/project-rfc-2229#9</a>)</li>\n</ul>\n</blockquote>",
        "id": 206145199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722742
    },
    {
        "content": "<p>about prioritization checkin, it probably doesn't make sense anymore to checkin, given that things are settling, but we can discuss that after the meeting if you want <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 206145420,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596722832
    },
    {
        "content": "<p>regarding <code>tracing</code>: this is an area that I'm not very familiar with, but it looks interesting.</p>",
        "id": 206145591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722893
    },
    {
        "content": "<p>The docs for the <code>tracing</code> crate indicate that its aimed at making sense of asynchronous systems; but I wonder if the idea here is that those same characteristics will be useful to make sense of our query system?</p>",
        "id": 206145715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722947
    },
    {
        "content": "<p>pretty much, yea. We don't know when and where queries execute</p>",
        "id": 206145756,
        "sender_full_name": "oli",
        "timestamp": 1596722967
    },
    {
        "content": "<p>or I guess the <code>tracing</code> being added is just for miri?</p>",
        "id": 206145763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722972
    },
    {
        "content": "<p>this will only get \"worse\" with parallelism</p>",
        "id": 206145767,
        "sender_full_name": "oli",
        "timestamp": 1596722974
    },
    {
        "content": "<p>nope</p>",
        "id": 206145770,
        "sender_full_name": "oli",
        "timestamp": 1596722975
    },
    {
        "content": "<p>that's just the demo</p>",
        "id": 206145778,
        "sender_full_name": "oli",
        "timestamp": 1596722978
    },
    {
        "content": "<p>ah, your intent is indeed to have it work with everything, not just <code>miri</code>?</p>",
        "id": 206145809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596722997
    },
    {
        "content": "<p>jup</p>",
        "id": 206145860,
        "sender_full_name": "oli",
        "timestamp": 1596723004
    },
    {
        "content": "<p>I wasn't sure how to interpret the phrase \"entire MIR interp stack\"</p>",
        "id": 206145877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723011
    },
    {
        "content": "<p>anyway I'll look into this more later</p>",
        "id": 206145906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723029
    },
    {
        "content": "<p>I want to be able to annotate every query in a way that you can see the query stack in the logs if you want to</p>",
        "id": 206145915,
        "sender_full_name": "oli",
        "timestamp": 1596723034
    },
    {
        "content": "<p>or that you can only log things that happen within a specific query</p>",
        "id": 206145950,
        "sender_full_name": "oli",
        "timestamp": 1596723049
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> !</p>",
        "id": 206145955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723052
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 206145977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723061
    },
    {
        "content": "<ul>\n<li>\"typeck: check for infer before type impls trait\" <a href=\"https://github.com/rust-lang/rust/pull/73965\">rust#73965</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> </li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/73886\">rust#73886</a> a <code>P-medium</code> nightly regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74734#issuecomment-667711436\">Nominated</a> to also fix <a href=\"https://github.com/rust-lang/rust/issues/74734\">rust#74734</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206145997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723073
    },
    {
        "content": "<p>yeah this seems like a pretty clear beta-backport approve situation, even for a P-medium bug</p>",
        "id": 206146261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723186
    },
    {
        "content": "<p>beta-approved</p>",
        "id": 206146270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723191
    },
    {
        "content": "<ul>\n<li>\"forbid <code>#[track_caller]</code> on main\" <a href=\"https://github.com/rust-lang/rust/pull/75130\">rust#75130</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span>, assigned to <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span></li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/75125\">rust#75125</a> a <code>P-high</code> <code>I-unsound</code>  issue</li>\n</ul>\n</li>\n</ul>",
        "id": 206146290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723201
    },
    {
        "content": "<p>so I have to ask: Who the eack was running around adding <code>#[track_caller]</code> to their <code>fn main</code> ?</p>",
        "id": 206146355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723231
    },
    {
        "content": "<p>anyway, I guess I'm fine with backporting here</p>",
        "id": 206146465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723274
    },
    {
        "content": "<p>beta backport approved</p>",
        "id": 206146540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723320
    },
    {
        "content": "<ul>\n<li>\"Forbid non-derefable types explicitly in unsizing casts\" <a href=\"https://github.com/rust-lang/rust/pull/75136\">rust#75136</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span>, assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/75118\">rust#75118</a> a beta regression</li>\n</ul>\n</li>\n</ul>",
        "id": 206146557,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723332
    },
    {
        "content": "<p>skimming over the diff, specifically the test case</p>",
        "id": 206146764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723432
    },
    {
        "content": "<p>can someone explain to me why this is emitting that note about <code>feature(const_fn)</code> ?</p>",
        "id": 206146785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723446
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75136/files#diff-06753d66edbf473847020e3a89ccc160\">https://github.com/rust-lang/rust/pull/75136/files#diff-06753d66edbf473847020e3a89ccc160</a></p>",
        "id": 206146808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723461
    },
    {
        "content": "<p>seems ... like a bug in the diagnostic, right?</p>",
        "id": 206146879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723483
    },
    {
        "content": "<p>maybe because of how this particular error is being signalled, by returning <code>Err</code> from the <code>check_rvalue</code> method?</p>",
        "id": 206146955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723516
    },
    {
        "content": "<p>if you turn that flag on it'll actually compile, because under the <code>const_fn</code> feature gate a bunch of things work that don't work stably in <code>const fn</code></p>",
        "id": 206146976,
        "sender_full_name": "oli",
        "timestamp": 1596723528
    },
    {
        "content": "<p>or will adding <code>feature(const_fn)</code> actually make it work?</p>",
        "id": 206146982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723530
    },
    {
        "content": "<p>the ICE was only in the stable const fn checks</p>",
        "id": 206146991,
        "sender_full_name": "oli",
        "timestamp": 1596723534
    },
    {
        "content": "<p>oh okay</p>",
        "id": 206146994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723535
    },
    {
        "content": "<p>okay then</p>",
        "id": 206147027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723548
    },
    {
        "content": "<p>(arguably the diagnostic could say that as part of its message, i.e. \"unsizing casts are allowed solely for references in stable Rust\")</p>",
        "id": 206147103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723584
    },
    {
        "content": "<p>but I'm fine with this, people will figure it out from the linked issue, presumably</p>",
        "id": 206147131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723601
    },
    {
        "content": "<p>beta backport approved</p>",
        "id": 206147182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723606
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>",
        "id": 206147221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723624
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 206147238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723634
    },
    {
        "content": "<ul>\n<li>\"Rename \"cyclone\" to \"apple-a7\" per changes in upstream LLVM\" <a href=\"https://github.com/rust-lang/rust/pull/73086\">rust#73086</a><ul>\n<li>\"cyclone\" is now a legacy and flood with warnings + probably creates incorrectly optimized artifacts.</li>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, <a href=\"https://github.com/rust-lang/rust/pull/73086#issuecomment-666762193\">reason here</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206147249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723643
    },
    {
        "content": "<p>Note though that I am personally against this (and we probably won't have a .3 anyway)</p>",
        "id": 206147295,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723665
    },
    {
        "content": "<p>it seems like a somewhat trivial patch?</p>",
        "id": 206147362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723696
    },
    {
        "content": "<p>What risk do you identify with it, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ?</p>",
        "id": 206147382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723706
    },
    {
        "content": "<p>mostly just \"touched LLVM\"</p>",
        "id": 206147418,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723719
    },
    {
        "content": "<p>I don't <em>mind</em> letting it just ride the trains</p>",
        "id": 206147424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723721
    },
    {
        "content": "<p>\"touched LLVM\" ?</p>",
        "id": 206147486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723732
    },
    {
        "content": "<p>it does seem true that if LLVM just renamed, then we're fine</p>",
        "id": 206147488,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723733
    },
    {
        "content": "<p>but I am always scared of backporting changes that affect codegen like this, where it's not really a \"one line\" change</p>",
        "id": 206147535,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723755
    },
    {
        "content": "<p>this PR itself does not touch LLVM; but you just mean its dangerous to play games with our interface <strong>to</strong> LLVM?</p>",
        "id": 206147540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723758
    },
    {
        "content": "<p>yeah okay</p>",
        "id": 206147546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723763
    },
    {
        "content": "<p><em>that</em> does sound like a reasonable fear</p>",
        "id": 206147561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723770
    },
    {
        "content": "<p>so, what are risks associated with <strong>not</strong> backporting this, then</p>",
        "id": 206147582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723781
    },
    {
        "content": "<p>Is there a reason to back port this to stable beyond just \"LLVM has done this\"?</p>",
        "id": 206147614,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596723797
    },
    {
        "content": "<p>you cannot do <code>cargo build --target=aarch64-apple-ios</code> on stable now?</p>",
        "id": 206147633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723806
    },
    {
        "content": "<p>This isn't breaking anyone on stable currently right?</p>",
        "id": 206147651,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596723815
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-05.20.2354818/near/206147633\">said</a>:</p>\n<blockquote>\n<p>you cannot do <code>cargo build --target=aarch64-apple-ios</code> on stable now?</p>\n</blockquote>\n<p>oh, you <em>can</em> do the build, you just get a ton of warning diagnostic output</p>",
        "id": 206147765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723852
    },
    {
        "content": "<p>yes, and someone alleged that the performance or whatever could be worse</p>",
        "id": 206147809,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723871
    },
    {
        "content": "<p>yeah okay, that doesn't sound \"that bad\" compared to the risk of landing this too soon and having unexpected fallout</p>",
        "id": 206147835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723887
    },
    {
        "content": "<p>have you confirmed <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that this is indeed in the beta?</p>",
        "id": 206147861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723897
    },
    {
        "content": "<p>as best as I can tell, it is</p>",
        "id": 206147877,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723905
    },
    {
        "content": "<p>I can double check</p>",
        "id": 206147885,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723907
    },
    {
        "content": "<p>I think I would prefer to let this ride the beta train.</p>",
        "id": 206147901,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596723918
    },
    {
        "content": "<p>okay; your message from 7 days ago said you didn't understand how PR <a href=\"https://github.com/rust-lang/rust/issues/73086\">#73086</a> was in the beta</p>",
        "id": 206147909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723925
    },
    {
        "content": "<p>lets just quickly establish now: if this <em>isn't</em> in the current beta, we <em>would</em> approve a beta backport, right?</p>",
        "id": 206148045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596723975
    },
    {
        "content": "<p>I was confused by this comment \"This is fixed in beta and nightly via <a href=\"https://github.com/rust-lang/rust/issues/73086\">#73086</a>. Should probably be nominated for backport to a point release, if there is one.\"</p>",
        "id": 206148061,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723979
    },
    {
        "content": "<p>which implied to me that we had backported or something (since it mentioned <em>both</em> nightly and beta)</p>",
        "id": 206148084,
        "sender_full_name": "simulacrum",
        "timestamp": 1596723992
    },
    {
        "content": "<p>but I just re-checked and it is indeed in beta</p>",
        "id": 206148101,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724001
    },
    {
        "content": "<p>i see</p>",
        "id": 206148105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724002
    },
    {
        "content": "<p>okay</p>",
        "id": 206148109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724004
    },
    {
        "content": "<p>just naturally, by riding the trains</p>",
        "id": 206148117,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724007
    },
    {
        "content": "<p>sounds great. declining to do stable backport.</p>",
        "id": 206148147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724018
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>",
        "id": 206148181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724032
    },
    {
        "content": "<h2>PR's S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"[android] Add support for android's file descriptor ownership tagging to libstd.\" <a href=\"https://github.com/rust-lang/rust/pull/74860\">rust#74860</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is inclined to land the PR but thinks it needs an FCP given it's a user-facing change.</li>\n<li>This is also of interest of <code>T-libs</code> but it lies somewhere on the boundary of \"implementation detail\" and \"public facing API change\", so maybe everyone wants weigh in.</li>\n</ul>\n</li>\n</ul>",
        "id": 206148208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724042
    },
    {
        "content": "<p>here is zulip discussion that niko referenced in a github comment: <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/android.20change.20.2374860\">#t-compiler &gt; android change #74860</a></p>",
        "id": 206148382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724114
    },
    {
        "content": "<p>I think I agree with niko that an FCP is probably warranted here</p>",
        "id": 206148525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724186
    },
    {
        "content": "<p>but before firing off an FCP</p>",
        "id": 206148592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724206
    },
    {
        "content": "<p>should this be: T-compiler alone, or T-compiler+T-libs, or T-libs alone?</p>",
        "id": 206148647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724231
    },
    {
        "content": "<p>I think T-libs definitely, given that it is a breaking change, right?</p>",
        "id": 206148717,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724276
    },
    {
        "content": "<p>this was one of my main questions, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ended telling me that at this point everyone may want to weigh in</p>",
        "id": 206148738,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596724288
    },
    {
        "content": "<p>(though perhaps only on broken code)</p>",
        "id": 206148740,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724289
    },
    {
        "content": "<p>right. I'm just curious whether we want to delegate the decision <em>entirely</em> over to T-libs</p>",
        "id": 206148761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724303
    },
    {
        "content": "<p>at least a brief discussion about it is good :)</p>",
        "id": 206148840,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596724330
    },
    {
        "content": "<p>(it strikes me as a somewhat trivial piece of code; the heart of the matter, to me, <em>is</em> about the public facing API change.)</p>",
        "id": 206148866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724347
    },
    {
        "content": "<p>The author claims that one should only observe breakage in \"weird\" scenarios, but I'm not yet certain how true tha tis</p>",
        "id": 206148890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724367
    },
    {
        "content": "<p>after all, if it really only broke things in weird scenarios, then why would you add it? (I suppose teh true argument is that it breaks <strong>buggy</strong> programs</p>",
        "id": 206148933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724390
    },
    {
        "content": "<p>imo, T-compiler doesn't need to weigh in -- a single reviewer can confirm it to do what it says</p>",
        "id": 206148977,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724404
    },
    {
        "content": "<p>(Okay to be fair, the author did say \"either buggy or very weird\", not just \"weird\")</p>",
        "id": 206149006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724422
    },
    {
        "content": "<p>(like we don't weigh in on T-lang decisions \"just because they touch compiler code\")</p>",
        "id": 206149008,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724424
    },
    {
        "content": "<p>exactly.</p>",
        "id": 206149017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724430
    },
    {
        "content": "<p>does anyone object to me removing T-compiler, leaving tagged as T-libs, and calling for an FCP?</p>",
        "id": 206149103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724454
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, should we also remove <code>T-compiler</code> label then? ... right :)</p>",
        "id": 206149122,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596724462
    },
    {
        "content": "<p>(I'm not even sure I will have the authority to call for an FCP if its solely tagged as T-libs; I guess we'll see)</p>",
        "id": 206149142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724471
    },
    {
        "content": "<p>basically: does anyone here think that we <em>should</em> require a majority of T-compiler to explicitly approve of this change before it lands?</p>",
        "id": 206149176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724503
    },
    {
        "content": "<p>you don't have authority to call fcp for t-libs</p>",
        "id": 206149260,
        "sender_full_name": "simulacrum",
        "timestamp": 1596724541
    },
    {
        "content": "<p>(also, the PR author may need help figuring out where to add tests. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 206149271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> this is unfortunately a scenario where emoji feedback is ambiguous</p>",
        "id": 206149376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724590
    },
    {
        "content": "<p>Sigh</p>",
        "id": 206149393,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596724597
    },
    {
        "content": "<p>I cannot tell if a <span aria-label=\"thumbs down\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"thumbs down\">:thumbs_down:</span> is a way to agree with my (negative) statement or disagreement.</p>",
        "id": 206149423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724609
    },
    {
        "content": "<p>I think we should <em>not</em> require a majority of T-compiler to sign off.</p>",
        "id": 206149438,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596724617
    },
    {
        "content": "<p>okay</p>",
        "id": 206149446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724620
    },
    {
        "content": "<p>I think all present members of T-compiler agree on that point then.</p>",
        "id": 206149477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724636
    },
    {
        "content": "<p>I'll remove T-compiler and try to get someone on T-libs to call for FCP</p>",
        "id": 206149508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724650
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on libs-impl this time.</li>\n</ul>",
        "id": 206149541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724667
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">51 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">28 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 2 P-high, 3 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 14 P-high, 50 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 206149550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724676
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 206149606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724689
    },
    {
        "content": "<ul>\n<li>\"LTO triggers apparent miscompilation on Windows 10 x64\" <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a><ul>\n<li>Discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>I-unsound regression from stable to stable, started failing when we updated to LLVM 9.0</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74498#issuecomment-661950983\">LLVM issue reproduced on LLVM master</a></li>\n<li>Rust started to trigger this misbehavior more frequent since the introduction of <a href=\"https://github.com/rust-lang/rust/pull/69659\">rust#69659</a> that happened in 1.45+.</li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">filled a bug with LLVM upstream</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74498#issuecomment-667452406\">According to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></a> the remaining question is if we should, for the short term, change that <code>range.rs</code> code to not used an <code>unchecked_add</code>, in order to (hopefully) bypass the misoptimization here or patch LLVM.</li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/74498#issuecomment-668598776\">also discusses</a> if this generates an overflow or not.</li>\n</ul>\n</li>\n</ul>",
        "id": 206149633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724707
    },
    {
        "content": "<p>What do people think of revising the <code>range.rs</code> code in the short term, potentially solely on Windows?</p>",
        "id": 206149843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724792
    },
    {
        "content": "<p>I have to admit, I have a slight prefernce for investing a bit more time in fixing the bug in LLVM upstream</p>",
        "id": 206149918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724808
    },
    {
        "content": "<p>I spent a little while on it, got my feet wet with LoopStrengthReduction code there</p>",
        "id": 206149958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-05.20.2354818/near/206149843\">said</a>:</p>\n<blockquote>\n<p>What do people think of revising the <code>range.rs</code> code in the short term, potentially solely on Windows?</p>\n</blockquote>\n<p>This seems like a reasonable work around in the short-term to me. But fixing the root issue would be best.</p>",
        "id": 206150009,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596724848
    },
    {
        "content": "<p>(asked some embarrassing questions and/or made some embarrassing hypotheses)</p>",
        "id": 206150013,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724853
    },
    {
        "content": "<p>I'm not even certain, to be honest, that switching to <code>wrapping_add</code> in the way I suggest <em>will</em> fix ths</p>",
        "id": 206150087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724889
    },
    {
        "content": "<p>(that is, I don't yet know if the <code>add nuw</code> is coming from our own codegen, or from some other LLVM optimization pass...)</p>",
        "id": 206150136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724913
    },
    {
        "content": "<p>anyway its a stable-to-stable regression</p>",
        "id": 206150250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724948
    },
    {
        "content": "<p>and a long standing one, for that matter</p>",
        "id": 206150308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724975
    },
    {
        "content": "<p>so its not like we're up against a big deadline for a fix</p>",
        "id": 206150325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724985
    },
    {
        "content": "<p>Ah ok. Well it seems like if it's as easy as switching to <code>wrapping_add</code>, we should perhaps do that now but if it's not, fixing the LLVM issue is probably a better use of time than trying to work around it.</p>",
        "id": 206150332,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596724986
    },
    {
        "content": "<p>its just ... emabarassing</p>",
        "id": 206150343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596724991
    },
    {
        "content": "<p>moving along</p>",
        "id": 206150395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725015
    },
    {
        "content": "<ul>\n<li>\"Unexpected trait resolution overflow error\" <a href=\"https://github.com/rust-lang/rust/issues/74868\">rust#74868</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>Needs MCVE and bisection</li>\n<li>Possible culprits <a href=\"https://github.com/rust-lang/rust/pull/73357\">rust#73357</a> or <a href=\"https://github.com/rust-lang/rust/pull/73261\">rust#73261</a> maybe?</li>\n<li>According to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> this is probably due to <a href=\"https://github.com/rust-lang/rust/pull/73452\">rust#73452</a>, <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a> fixes that issue but is not suitable for a backport. <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is going to provide a PR suitable for a backport.</li>\n</ul>\n</li>\n</ul>",
        "id": 206150422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725028
    },
    {
        "content": "<p>yeah I briefly tried to reduce to MCVE but didn't get too far</p>",
        "id": 206150512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> are you around? You said you were planning to make a PR that only includes relevant commit from PR <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a>, but maybe if <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is short on time, someone else should try to identify the commit to cherry-pick?</p>",
        "id": 206150574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725094
    },
    {
        "content": "<p>this is s a stable-to-beta regression, so we <em>are</em> up against a deadline here, in that we'd like something backported to beta before ...</p>",
        "id": 206150684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725155
    },
    {
        "content": "<p>/me checks forge</p>",
        "id": 206150687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725158
    },
    {
        "content": "<p>~3 weeks from now I believe</p>",
        "id": 206150752,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596725178
    },
    {
        "content": "<p>right next release is august 27th</p>",
        "id": 206150793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725196
    },
    {
        "content": "<p>but we will start testing a given beta some number of days before that point</p>",
        "id": 206150830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725214
    },
    {
        "content": "<p>so, you know, it'd be nice to have this taken care of in the next two weeks</p>",
        "id": 206150849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725226
    },
    {
        "content": "<p>its already assigned to me, I guess I can switch from MCVE generation to instead evaluating matthew jaspers commits from PR <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a></p>",
        "id": 206150927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725268
    },
    {
        "content": "<ul>\n<li>\"Lifetime error when indexing with borrowed index in beta but not in stable\" <a href=\"https://github.com/rust-lang/rust/issues/74933\">rust#74933</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span></li>\n<li>Code that compiles on stable, fails on beta</li>\n<li>Regressed in <a href=\"https://github.com/rust-lang/rust/pull/73504\">rust#73504</a> which is a roll-up, likely <a href=\"https://github.com/rust-lang/rust/pull/72280\">rust#72280</a></li>\n<li>PR by <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> and assigned to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is up in <a href=\"https://github.com/rust-lang/rust/pull/74960\">rust#74960</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206151014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725293
    },
    {
        "content": "<p>hmm, the patch in PR <a href=\"https://github.com/rust-lang/rust/issues/74960\">#74960</a> is a little more complicated then what I like to have to look at for beta backports</p>",
        "id": 206151147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725359
    },
    {
        "content": "<p>/me tries to remember when niko is on vacation over next few weeks</p>",
        "id": 206151195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725381
    },
    {
        "content": "<p>until monday, inclusively, at least</p>",
        "id": 206151333,
        "sender_full_name": "simulacrum",
        "timestamp": 1596725431
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 206151351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-05.20.2354818/near/206151147\">said</a>:</p>\n<blockquote>\n<p>hmm, the patch in PR <a href=\"https://github.com/rust-lang/rust/issues/74960\">#74960</a> is a little more complicated then what I like to have to look at for beta backports</p>\n</blockquote>\n<p>this needs first to be merged on master and the we will need a backport</p>",
        "id": 206151359,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596725444
    },
    {
        "content": "<p>tuesday is soon enough that I'm okay letting this continue to be on niko's plate for now</p>",
        "id": 206151389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725462
    },
    {
        "content": "<p>so following your previous reasoning about <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span>'s PR, there's some rush here too</p>",
        "id": 206151393,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596725464
    },
    {
        "content": "<p>(its true, there is rush here too; but I had that in mind in my thinking above)</p>",
        "id": 206151443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725482
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No P-critical issues for libs-impl this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No P-critical issues for T-rustdoc this time.</li>\n</ul>",
        "id": 206151461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725494
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>",
        "id": 206151489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725503
    },
    {
        "content": "<ul>\n<li>\"libtest panics when running <code>should_panic</code> tests under QEMU armv7 \" <a href=\"https://github.com/rust-lang/rust/issues/74820\">rust#74820</a><ul>\n<li>Cargo lib skeleton + should_panic test code fails on armv7</li>\n<li>It seems to be caused by <a href=\"https://github.com/rust-lang/rust/pull/72746\">rust#72746</a> by <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n</ul>\n</li>\n</ul>",
        "id": 206151509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725512
    },
    {
        "content": "<p>well its not like anyone uses arm chips, amirite? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 206151609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725542
    },
    {
        "content": "<p>does the switch to gimli sidestep this entirely?</p>",
        "id": 206151781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725623
    },
    {
        "content": "<p>or wait, does the switch to gimli predate <a href=\"https://github.com/rust-lang/rust/issues/72746\">rust#72746</a></p>",
        "id": 206151907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725670
    },
    {
        "content": "<p>/me doesn't actually understand our unwind/backtrace story anymore</p>",
        "id": 206151956,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725690
    },
    {
        "content": "<p>Especially since unwind and backtrace are different things</p>",
        "id": 206152049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725735
    },
    {
        "content": "<p>(sigh, sorry for the noise)</p>",
        "id": 206152074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725746
    },
    {
        "content": "<p>/me has to go at 11 and can't answer too many questions about rustdoc afterwards</p>",
        "id": 206152145,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596725764
    },
    {
        "content": "<p>okay lets see then</p>",
        "id": 206152199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725791
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74820\">rust#74820</a> remains unassigned</p>",
        "id": 206152212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725799
    },
    {
        "content": "<p>it remains a beta regression</p>",
        "id": 206152234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725812
    },
    {
        "content": "<p>so it would probably be good to have someone assigned to it</p>",
        "id": 206152260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725821
    },
    {
        "content": "<p>but I'm not yet willing to add it to my own pile</p>",
        "id": 206152291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725836
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>\n<ul>\n<li>\"Type mismatch in function arguments E0631, E0271 are falsely recognized as E0308 mismatched types\" <a href=\"https://github.com/rust-lang/rust/issues/74400\">rust#74400</a><ul>\n<li>Discussed last week</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73643\">rust#73643</a> which is a rollup, likely to be <a href=\"https://github.com/rust-lang/rust/pull/72493\">rust#72493</a></li>\n</ul>\n</li>\n</ul>",
        "id": 206152329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725852
    },
    {
        "content": "<p>lets quickly skip ahead to the nominated issue</p>",
        "id": 206152372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725879
    },
    {
        "content": "<p>since <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> wont be able to hang out after the hour is up</p>",
        "id": 206152426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725891
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>async-std docs no longer build on recent nightlies <a href=\"https://github.com/rust-lang/rust/issues/75100\">rust#75100</a></li>\n</ul>",
        "id": 206152459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725904
    },
    {
        "content": "<p>do we have confirmation that PR <a href=\"https://github.com/rust-lang/rust/issues/73566\">#73566</a> is indeed the cause of this regression?</p>",
        "id": 206152528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725943
    },
    {
        "content": "<p>I don't know what else it could be</p>",
        "id": 206152558,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596725960
    },
    {
        "content": "<p>it's one of the known drawbacks of the pr, it treats <code>async fn</code> as <code>impl Trait</code></p>",
        "id": 206152586,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596725971
    },
    {
        "content": "<p>crater missed that it broke code</p>",
        "id": 206152622,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596725985
    },
    {
        "content": "<p>hmm</p>",
        "id": 206152635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596725989
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/crater/issues/532\">https://github.com/rust-lang/crater/issues/532</a></p>",
        "id": 206152645,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596725994
    },
    {
        "content": "<p>okay I have some passing understanding of PR <a href=\"https://github.com/rust-lang/rust/issues/73566\">#73566</a></p>",
        "id": 206152746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726019
    },
    {
        "content": "<p>namely since it was replacing the use of <code>everybody_loops</code>, which I was always horrified in how <code>rustdoc</code> was using it</p>",
        "id": 206152814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I'll self-assign this and take a look</p>",
        "id": 206152866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726072
    },
    {
        "content": "<p>more info at <a href=\"https://github.com/rust-lang/rust/issues/75100#issuecomment-668335125\">https://github.com/rust-lang/rust/issues/75100#issuecomment-668335125</a></p>",
        "id": 206152894,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596726087
    },
    {
        "content": "<p>have to go, sorry</p>",
        "id": 206152913,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596726093
    },
    {
        "content": "<p>last</p>",
        "id": 206152915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726094
    },
    {
        "content": "<p>is</p>",
        "id": 206152920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726097
    },
    {
        "content": "<p>performance report</p>",
        "id": 206152927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726100
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Triage done by <a href=\"https://github.com/Mark-Simulacrum\">simulacrum</a>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=efc02b03d18b0cbaa55b1e421d792f70a39230b2&amp;end=19cefa68640843956eedd86227ddc1d35dbc6754&amp;absolute=false&amp;stat=instructions%3Au\">efc02b03d18b0cbaa55b1e421d792f70a39230b2..19cefa68640843956eedd86227ddc1d35dbc6754</a></p>\n<p>8 regressions, 2 improvements, 1 of them on rollups.<br>\n1 outstanding nag from last week.</p>",
        "id": 206152952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726110
    },
    {
        "content": "<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73503\">convert higher ranked <code>Predicate</code>s to <code>PredicateKind::ForAll</code> #73503</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=efc02b03d18b0cbaa55b1e421d792f70a39230b2&amp;end=76e83339bb619aba206e5590b1e4b813a154b199&amp;stat=instructions%3Au\">instructions</a>)<br>\n  Up to 2.5% losses on stress tests, 1-2% on some other real-world crates. This was <a href=\"https://github.com/rust-lang/rust/pull/73503#issuecomment-661053865\">expected</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73265#issuecomment-668254522\">mv std libs to library/ #73265</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=9be8ffcb0206fc1558069a7b4766090df7877659&amp;end=ac48e62db85e6db4bbe026490381ab205f4a614d&amp;stat=instructions%3Au\">instructions</a>)<br>\n  Up to 3% losses on tiny crates, and stress tests show 1-3% regressions.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74923#issuecomment-668261346\">Update cargo #74923</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=efc02b03d18b0cbaa55b1e421d792f70a39230b2&amp;end=76e83339bb619aba206e5590b1e4b813a154b199&amp;stat=instructions%3Au\">instructions</a>)<br>\n  This was up to a 28% loss on some incremental benchmarks, as a result of regressions in proc macro performance (expansion is slower).</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74876#issuecomment-668262178\">Replace all uses of <code>log::log_enabled</code> with <code>Debug</code> printers #74876</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=6e50a225fd67576e43bab1d4dfa3c97f310786a8&amp;end=1799d31847294d6e3816c17679247a5c206e809a&amp;stat=instructions%3Au\">instructions</a>)<br>\n  A 1.5% regression on the ctfe stress test.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74682#issuecomment-668264270\">std: Switch from libbacktrace to gimli (take 2) #74682</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=cfc572cae2d1fc381cce476b5c787fd7221af98c&amp;end=c058a8b8dc5dea0ed9b33e14da9e317e2749fcd7&amp;stat=instructions%3Au\">instructions</a>)<br>\n  An expected loss of up to 20% on smaller benchmarks. This was also a <a href=\"https://perf.rust-lang.org/compare.html?start=cfc572cae2d1fc381cce476b5c787fd7221af98c&amp;end=c058a8b8dc5dea0ed9b33e14da9e317e2749fcd7&amp;stat=max-rss\">max-rss</a><br>\n  regression, though how big is difficult to determine as this statistics is noisy. See discussion on <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/gimli.20regressions\">Zulip</a>.<br>\n  Optimistically, there is a follow-up PR, \"metadata: track the simplified Self type for every trait impl <a href=\"https://github.com/rust-lang/rust/issues/75008\">#75008</a>\", which may <a href=\"https://github.com/rust-lang/rust/pull/75008#issuecomment-667577993\">eliminate</a> a good portion of these losses.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/65989#issuecomment-668267468\">Normalize all opaque types when converting ParamEnv to Reveal::All #65989</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=62f9aa94c0d0312544589bed78679d85646d4e62&amp;end=6e87bacd37539b7e7cd75152dffd225047fa983a&amp;stat=instructions%3Au\">instructions</a>)<br>\n  A slight performance regression, of up to 4%. Expected.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75004#issuecomment-668271907\">Move 'probably equal' methods to librustc_parse #75004</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=8141873e6d50a0a0829fd756b0a16a92b27cfe22&amp;end=46cf80dc1a75ad27f67e79f73fec371a16762494&amp;stat=instructions%3Au\">instructions</a>)<br>\n  A 1% regression on some smaller crates, rustdoc-only.</p>\n</li>\n<li>\n<p><a href=\"https://perf.rust-lang.org/compare.html?start=e8876ae2c11f341565059b900eeae1254a9accf1&amp;end=a99ae95c722d4dc8d1eef09aaa4e72d50d496e75&amp;stat=instructions%3Au\">Rollup of 10 pull requests #75060</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=e8876ae2c11f341565059b900eeae1254a9accf1&amp;end=a99ae95c722d4dc8d1eef09aaa4e72d50d496e75&amp;stat=instructions%3Au\">instructions</a>)<br>\n  Up to 1% regression; unclear cause -- possibly <code>BTreeMap</code> changes.</p>\n</li>\n</ul>",
        "id": 206153034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726130
    },
    {
        "content": "<p>Improvements</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74887#issuecomment-668258043\">Cache non-exhaustive separately from attributes #74887</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=517385b31b0add8487ff3cc27e216cf3f867ab44&amp;end=10c375700ce170fc57cb617754dc6d0631d3d573&amp;stat=instructions%3Au\">instructions</a>)<br>\n  Up to 2% wins on tiny crates. This arose as an attempt to mitigate some of the effects of <a href=\"https://github.com/rust-lang/rust/pull/74682\">re-landing gimli</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74726#issuecomment-668269871\">Move from <code>log</code> to <code>tracing</code> #74726</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=de10abf50c514ca648eb3bdcbc912d46b7eb32a6&amp;end=05762e3d6f5facafdd47efdf4203021fadf61bb1&amp;stat=instructions%3Au\">instructions</a>)<br>\n  Up to 1.5% wins, scattered across the smaller benchmarks. Expected.</p>\n</li>\n</ul>",
        "id": 206153059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726140
    },
    {
        "content": "<p>Nags:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74633#issuecomment-668243225\">Disable polymorphisation #74633</a><br>\n   From last week, this was a performance neutral PR even though the landing of polymorphisation was a regression. Investigation on why needs to be conducted.</li>\n</ul>",
        "id": 206153098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726152
    },
    {
        "content": "<p>The nag has since been resolved</p>",
        "id": 206153122,
        "sender_full_name": "simulacrum",
        "timestamp": 1596726163
    },
    {
        "content": "<p>Who was going to investigate that last one? Was it <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> ?</p>",
        "id": 206153128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726167
    },
    {
        "content": "<p>Yeah, we've fixed that.</p>",
        "id": 206153137,
        "sender_full_name": "davidtwco",
        "timestamp": 1596726171
    },
    {
        "content": "<p>oh great</p>",
        "id": 206153146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726176
    },
    {
        "content": "<p>okay then</p>",
        "id": 206153207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726201
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/75155\">#75155</a> made some changes to polymorphisation and saw some <a href=\"https://perf.rust-lang.org/compare.html?start=5f6bd6ec0ac422991b89bb8643eaa5d9d46eed11&amp;end=7a4d90c2e80578e57956455e81b511d8fb964d70\">decent improvements</a></p>",
        "id": 206153260,
        "sender_full_name": "davidtwco",
        "timestamp": 1596726222
    },
    {
        "content": "<p>okay well then I'm not sure if any of the items on the performance report deserve further discussion</p>",
        "id": 206153362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726253
    },
    {
        "content": "<p>the regression on <a href=\"https://github.com/rust-lang/rust/issues/65989\">#65989</a> sounds potentially worrisome</p>",
        "id": 206153450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726296
    },
    {
        "content": "<p>at least \"up to 4%\" is a scary phrase</p>",
        "id": 206153467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726304
    },
    {
        "content": "<p>but since <span class=\"user-mention\" data-user-id=\"120989\">@njn</span> said it was a \"slight performance regression\", maybe the 4% is only in rare scenarios</p>",
        "id": 206153519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726329
    },
    {
        "content": "<p>we probably should explore other ways to present this data</p>",
        "id": 206153530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726337
    },
    {
        "content": "<p>looks like it's only in stress tests</p>",
        "id": 206153555,
        "sender_full_name": "lcnr",
        "timestamp": 1596726348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> there was something you all were looking at recently, right?</p>",
        "id": 206153558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726349
    },
    {
        "content": "<p>other perf presentations, that is?</p>",
        "id": 206153568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726358
    },
    {
        "content": "<p>/me tries to remember where that was</p>",
        "id": 206153613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is working on collecting instruction counts instead of wall-clock time in the self-profiler.</p>",
        "id": 206153707,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596726413
    },
    {
        "content": "<p>Is that what you're thinking of?</p>",
        "id": 206153715,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596726418
    },
    {
        "content": "<p>yeah, and there was some other kind of graph that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> was demoing as part of that</p>",
        "id": 206153733,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726433
    },
    {
        "content": "<p>I cannot find it though</p>",
        "id": 206153903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726512
    },
    {
        "content": "<p>well maybe I'll find it later and if so, add it to agenda for another meeting. :)</p>",
        "id": 206153915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726522
    },
    {
        "content": "<p>okay that's all everyone, sorry for going a bit over time</p>",
        "id": 206153929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726529
    },
    {
        "content": "<p>bye to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , thank you all so much for attending!</p>",
        "id": 206153956,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596726540
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-05.20.2354818/near/206153519\">said</a>:</p>\n<blockquote>\n<p>but since <span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> said it was a \"slight performance regression\", maybe the 4% is only in rare scenarios</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> did the triage this week! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 206196640,
        "sender_full_name": "njn",
        "timestamp": 1596747853
    },
    {
        "content": "<p>And the 4% regression was on <code>ctfe-stress-4</code>, which is an artificial stress test for compile-time function evaluation, so it doesn't matter much. Apart from that benchmark, <a href=\"https://github.com/rust-lang/rust/issues/65989\">#65989</a> was actually a small win overall</p>",
        "id": 206196752,
        "sender_full_name": "njn",
        "timestamp": 1596747922
    }
]