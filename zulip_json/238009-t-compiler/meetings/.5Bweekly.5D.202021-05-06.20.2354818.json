[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/w9tJSQkHTZWYet3BUijtTA?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span>  by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span>  and <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>  by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> : any update to share?</li>\n</ul>",
        "id": 237648017,
        "sender_full_name": "apiraino",
        "timestamp": 1620303492
    },
    {
        "content": "<p>Since the LLVM 12's landing there have been a large number of issues. Many were fixed. We also enabled a some features we thought were fixed. So we still have plenty of problems that are still outstanding. We'll have to disable some of those features (mutable-noalias, inline-asm stack probes…) until we've more confidence they're fixed again T_T</p>",
        "id": 237649169,
        "sender_full_name": "nagisa",
        "timestamp": 1620304070
    },
    {
        "content": "<p>(great progress, by the way, from my humble POV so thanks!)</p>",
        "id": 237652148,
        "sender_full_name": "apiraino",
        "timestamp": 1620305457
    },
    {
        "content": "<p>This reminds me, I wish there was a link to the previous update, would be easier to figure out how far back does an update need to go.</p>",
        "id": 237656529,
        "sender_full_name": "nagisa",
        "timestamp": 1620307305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237656529\">said</a>:</p>\n<blockquote>\n<p>This reminds me, I wish there was a link to the previous update, would be easier to figure out how far back does an update need to go.</p>\n</blockquote>\n<p>good point, I'll think of a way to link these reports from meeting to meeting (they're all in past agenda files, but scattered)</p>",
        "id": 237656845,
        "sender_full_name": "apiraino",
        "timestamp": 1620307432
    },
    {
        "content": "<p>(here the previous one: <a href=\"https://hackmd.io/UZ8VFdqFT0mJtGRnm-Lwmw#WG-checkins\">https://hackmd.io/UZ8VFdqFT0mJtGRnm-Lwmw#WG-checkins</a>)</p>",
        "id": 237657030,
        "sender_full_name": "apiraino",
        "timestamp": 1620307514
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , our weekly triage meeting is starting now. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 237662521,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309679
    },
    {
        "content": "<p>We will start with ~9 minutes for</p>\n<h2>Announcements</h2>",
        "id": 237662602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309712
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Today the new stable release 1.52 is out <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 237662736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309757
    },
    {
        "content": "<ul>\n<li>Tomorrow <strong>May, 7th 2021 10:00 ET</strong> (14:00 UTC) monthly <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Compiler Team planning meeting</a><ul>\n<li>However, I don’t see any new meeting proposals. So if you have something you think we should discuss, today would be a great time to <a href=\"https://github.com/rust-lang/compiler-team/issues/new?assignees=&amp;labels=meeting-proposal&amp;template=meeting-proposal.md&amp;title=%28My+meeting+proposal%29\">write a proposal</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237662913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309821
    },
    {
        "content": "<h3>MCPs/FCPs</h3>",
        "id": 237662958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309839
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237663007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309846
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"Eagerly construct bodies of THIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/409\">compiler-team#409</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"A --temps-dir option for specifying where the intermediate files are written\" <a href=\"https://github.com/rust-lang/compiler-team/issues/423\">compiler-team#423</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237663032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309855
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 237663067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309867
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Rename -Cllvm-args to something backend agnostic\" <a href=\"https://github.com/rust-lang/compiler-team/issues/421\">compiler-team#421</a></li>\n<li>\"Update the existing musl targets to be dynamically linked.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">compiler-team#422</a></li>\n<li>\"Split rustc_mir\" <a href=\"https://github.com/rust-lang/compiler-team/issues/426\">compiler-team#426</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237663090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309876
    },
    {
        "content": "<p>(I decided to take a moment to second <a href=\"https://github.com/rust-lang/compiler-team/issues/423\">compiler-team#423</a> )</p>",
        "id": 237663281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309957
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 237663379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309981
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for {HashMap,BTreeMap}::into_{keys,values}\" <a href=\"https://github.com/rust-lang/rust/issues/75294\">rust#75294</a></li>\n<li>\"Add default search path to <code>Target::search()</code>\" <a href=\"https://github.com/rust-lang/rust/pull/83800\">rust#83800</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237663399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620309990
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 237663419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310003
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:</li>\n</ul>\n<blockquote>\n<p>The incr-comp working group will be shifting to having its bi-weekly meetings <a href=\"#narrow/stream/241847-t-compiler.2Fwg-incr-comp/topic/change.20meeting.20time.20or.20other.20changes.20to.20drive.20engagement/near/235333445\">on zulip</a> instead of zoom.</p>\n<p>Since the last checkin (on <a href=\"https://hackmd.io/UZ8VFdqFT0mJtGRnm-Lwmw?view#WG-checkins\">25 march 2021</a>), thanks to efforts by cjgillot, we have started streaming the dep-graph to a file instead of storing it in-memory (<a href=\"https://github.com/rust-lang/rust/pull/82780\">PR #82780</a>).<br>\n</p>\n</blockquote>",
        "id": 237663432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310009
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> checkin by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>:<blockquote>\n<p>Since the LLVM 12's landing there have been a large number of issues. Many were fixed. We also enabled a some features we thought were fixed. So we still have plenty of problems that are still outstanding. We'll have to disable some of those features (mutable-noalias, inline-asm stack probes...) until we've more confidence they're fixed again</p>\n</blockquote>\n</li>\n</ul>",
        "id": 237663445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310018
    },
    {
        "content": "<p>any more announcements from the group as a whole?</p>",
        "id": 237663787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310153
    },
    {
        "content": "<p>okay lets move along then</p>",
        "id": 237663817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310175
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 237663834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310182
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Deduplicate ParamCandidates with the same value except for bound vars\" <a href=\"https://github.com/rust-lang/rust/pull/84559\">rust#84559</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n<li>changes requested by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></li>\n<li>Fixes a <a href=\"https://github.com/rust-lang/rust/issues/84398\">p-high regression</a> that slipped into beta 1.53</li>\n</ul>\n</li>\n</ul>",
        "id": 237663853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310194
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> here? I’m mostly curious if niko’s request could be a follow-up work item?</p>",
        "id": 237664029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310264
    },
    {
        "content": "<p>I'm here</p>",
        "id": 237664055,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310273
    },
    {
        "content": "<p>I’m trying to understand the nature of the non-determinism that niko is commenting on</p>",
        "id": 237664101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310294
    },
    {
        "content": "<p>It's a really simple change, I just need to get to it</p>",
        "id": 237664103,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310294
    },
    {
        "content": "<p>Just, better determinism on <em>which</em> candidate we pick</p>",
        "id": 237664161,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310319
    },
    {
        "content": "<p>Do we think this is worth running through crater in some way? (Whether it gets picked up in beta depends on how soon this lands)</p>",
        "id": 237664210,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310326
    },
    {
        "content": "<p>oh we haven’t promoted nightly to the 1.53 beta yet?</p>",
        "id": 237664257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310350
    },
    {
        "content": "<p>We basically decided just pick the candidate with fewer bound vars, and then the first on ties</p>",
        "id": 237664259,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310351
    },
    {
        "content": "<p>I'm pretty sure nightly got bumped?</p>",
        "id": 237664314,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310371
    },
    {
        "content": "<p>we did</p>",
        "id": 237664409,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310410
    },
    {
        "content": "<p>I was actually trying to get Niko to review this <em>before</em> the bump, but alas here we are</p>",
        "id": 237664415,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310412
    },
    {
        "content": "<p>looks to me like current beta  is 1.53</p>",
        "id": 237664417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310414
    },
    {
        "content": "<p>so did I misunderstand <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ’s question?</p>",
        "id": 237664437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310423
    },
    {
        "content": "<p>I'm saying this PR is going to land in master after the bump, and if accepted, likely after we kick off beta crater run</p>",
        "id": 237664453,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310430
    },
    {
        "content": "<p>if we're concerned about possible breakage <em>caused by this PR</em> then  a crater run on it directly may be good</p>",
        "id": 237664559,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310457
    },
    {
        "content": "<p>ah, “whether this gets picked up in <em>the beta crater run</em>” is what you were saying?</p>",
        "id": 237664578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310462
    },
    {
        "content": "<p>I'm always a bit worried about trait system PRs :)</p>",
        "id": 237664581,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310464
    },
    {
        "content": "<p>yes</p>",
        "id": 237664593,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310467
    },
    {
        "content": "<p>okay</p>",
        "id": 237664599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310470
    },
    {
        "content": "<p>I don't think there's a high likelihood of breakage from this</p>",
        "id": 237664655,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310493
    },
    {
        "content": "<p>But I'll spend some time this afternoon to make the change and get niko to r+</p>",
        "id": 237664697,
        "sender_full_name": "Jack Huey",
        "timestamp": 1620310510
    },
    {
        "content": "<p>Okay, if <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> thinks they’ll get to do follow-up today, then I won’t worry about trying to find someone else to help with that aspect of things</p>",
        "id": 237664785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310545
    },
    {
        "content": "<p>Sounds good</p>",
        "id": 237664972,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310603
    },
    {
        "content": "<p>I'm in favor of backporting if we can get it included in the crater run.</p>",
        "id": 237665045,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620310631
    },
    {
        "content": "<p>as for the question of whether to do a crater run on the PR itself  … <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>  ...</p>",
        "id": 237665067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310644
    },
    {
        "content": "<p>so maybe the answer is: Its unconditionally beta-approved <em>if</em> the beta-backport lands before the beta crater run is started</p>",
        "id": 237665128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310670
    },
    {
        "content": "<p>but if the beta-crater run wins that race, then we want to see a crater run on the PR itself first before we do a backport?</p>",
        "id": 237665204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310688
    },
    {
        "content": "<p>Does that make sense? Did I interpret that right?</p>",
        "id": 237665222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310695
    },
    {
        "content": "<p>In the absence of feedback, I’m going to assume I’m right</p>",
        "id": 237665314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310735
    },
    {
        "content": "<p>because that always works out well</p>",
        "id": 237665322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310740
    },
    {
        "content": "<p>/s</p>",
        "id": 237665335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310746
    },
    {
        "content": "<p>seems OK</p>",
        "id": 237665340,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310747
    },
    {
        "content": "<p>though we could also just unilaterally backport</p>",
        "id": 237665359,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310754
    },
    {
        "content": "<p>or w/e word</p>",
        "id": 237665368,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310759
    },
    {
        "content": "<p>If we have the capacity, I think it would be good to have the crater run on it</p>",
        "id": 237665369,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620310759
    },
    {
        "content": "<p>the crater run on the PR itself, rahter than try to fold it into the beta?</p>",
        "id": 237665396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310775
    },
    {
        "content": "<p>I figured since Jack said its low risk, I’m willing to take the bet ...</p>",
        "id": 237665419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310786
    },
    {
        "content": "<p>If it doesn't make beta in time</p>",
        "id": 237665422,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620310789
    },
    {
        "content": "<p>crater queue is relatively empty just today, so we can likely queue one up on the PR (just check). that can be done in parallel with a backport</p>",
        "id": 237665424,
        "sender_full_name": "simulacrum",
        "timestamp": 1620310789
    },
    {
        "content": "<p>Feel free to bump my pr from the crater queue</p>",
        "id": 237665502,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620310808
    },
    {
        "content": "<p>Okay, if the crater load is relatively low, then cratering just this PR seems fine too</p>",
        "id": 237665503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310808
    },
    {
        "content": "<p>It's not urgent</p>",
        "id": 237665514,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620310814
    },
    {
        "content": "<p>ah I misunderstood <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ’s comment about “good to have the crater run on it\"</p>",
        "id": 237665554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310829
    },
    {
        "content": "<p>(sorry, I'm traveling today so responding from the mobile app)</p>",
        "id": 237665571,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620310833
    },
    {
        "content": "<p>okay then, I’m going to go ahead and go with the plan I wrote above: We’ll approve the backport, and let it race with the initiation of the beta crater run.</p>",
        "id": 237665618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310857
    },
    {
        "content": "<p>next</p>",
        "id": 237665698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310881
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Account for unsatisfied bounds in E0599\" <a href=\"https://github.com/rust-lang/rust/pull/84808\">rust#84808</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, already merged</li>\n<li>Fixes a <a href=\"https://github.com/rust-lang/rust/issues/84769\">P-high</a></li>\n<li>Nominated for 1.53 beta backport</li>\n</ul>\n</li>\n</ul>",
        "id": 237665713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310887
    },
    {
        "content": "<p>It's a pure diagnostic change, so it seems very low-risk</p>",
        "id": 237665876,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620310945
    },
    {
        "content": "<p>Ooh ooh ooh I always love to see <code>if let (binding, BOOLEAN-LITERAL) = tuple-expression</code></p>",
        "id": 237665943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310972
    },
    {
        "content": "<p>Sorry, maybe I should save these reactions for twitter.</p>",
        "id": 237666005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620310999
    },
    {
        "content": "<p>anyway looks good to me</p>",
        "id": 237666100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311038
    },
    {
        "content": "<p>backport approved</p>",
        "id": 237666105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311041
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Do not ICE on invalid const param\" <a href=\"https://github.com/rust-lang/rust/pull/84913\">rust#84913</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>, already merged</li>\n<li>Fixes a <a href=\"https://github.com/rust-lang/rust/issues/84831\">P-medium ICE</a></li>\n<li>Nominated for 1.53 beta backport</li>\n</ul>\n</li>\n</ul>",
        "id": 237666163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311050
    },
    {
        "content": "<p>For this one, please verify the whitelist I used</p>",
        "id": 237666285,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311102
    },
    {
        "content": "<p>Oh. That seems worrying, given we can add new variants and they'd be silently overlooked by this...</p>",
        "id": 237666436,
        "sender_full_name": "simulacrum",
        "timestamp": 1620311158
    },
    {
        "content": "<p>Well, that would 'just' cause a delay span bug</p>",
        "id": 237666551,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311187
    },
    {
        "content": "<p>ah ok</p>",
        "id": 237666577,
        "sender_full_name": "simulacrum",
        "timestamp": 1620311196
    },
    {
        "content": "<p>seems ok then</p>",
        "id": 237666584,
        "sender_full_name": "simulacrum",
        "timestamp": 1620311199
    },
    {
        "content": "<p>Do we need the <code>_</code> arm for anything else?</p>",
        "id": 237666596,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311202
    },
    {
        "content": "<p>Or could we remove it and exhaustively match?</p>",
        "id": 237666636,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311220
    },
    {
        "content": "<p>Its worth considering</p>",
        "id": 237666725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311258
    },
    {
        "content": "<p>but we don’t need to make it part of the beta backport</p>",
        "id": 237666738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311264
    },
    {
        "content": "<p>We could exhaustive match, but it is a catchall for malformed code :)</p>",
        "id": 237666757,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311273
    },
    {
        "content": "<p>I think we can approve this, right?</p>",
        "id": 237666758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311274
    },
    {
        "content": "<p>seems fine to me</p>",
        "id": 237666786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311283
    },
    {
        "content": "<p>Beta-backport approved</p>",
        "id": 237666823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311286
    },
    {
        "content": "<p>Do you think we need tests for each variant you listed?</p>",
        "id": 237666875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311308
    },
    {
        "content": "<p>(again, doesn’t need to block the backport)</p>",
        "id": 237666893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311318
    },
    {
        "content": "<p>Potentially?</p>",
        "id": 237666959,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311341
    },
    {
        "content": "<p>I guess its not a big deal to be missing tests here</p>",
        "id": 237666975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311347
    },
    {
        "content": "<p>if the list is too broad, then generics_of itself will ICE</p>",
        "id": 237667036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311371
    },
    {
        "content": "<p>right?</p>",
        "id": 237667041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311373
    },
    {
        "content": "<p>correct</p>",
        "id": 237667061,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311380
    },
    {
        "content": "<p>the problematic error is making the list too short</p>",
        "id": 237667091,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311390
    },
    {
        "content": "<p>sure, but even that’s an ICE</p>",
        "id": 237667114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311399
    },
    {
        "content": "<p>correct</p>",
        "id": 237667153,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620311404
    },
    {
        "content": "<p>so my point is that in either direction, if you get the list wrong, it will ICE. And so to me, that means we don’t need to put high priority on testing every case</p>",
        "id": 237667225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311428
    },
    {
        "content": "<p>(this is of course all predicated on the assumption that generics_of always ICE’s in such cases)</p>",
        "id": 237667302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311451
    },
    {
        "content": "<p>okay sounds great</p>",
        "id": 237667312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311454
    },
    {
        "content": "<p>As already stated, backport approved.</p>",
        "id": 237667330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311462
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 237667356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311471
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 237667383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311477
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 237667411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311490
    },
    {
        "content": "<ul>\n<li>\"Remove unstable <code>--pretty</code> flag\" <a href=\"https://github.com/rust-lang/rust/pull/83491\">rust#83491</a><ul>\n<li>Should disambiguate and consolidate the usage of two apparently redundant flags (<code>--unpretty</code> and <code>--pretty</code>) into one</li>\n<li>Only known usage seems to be in the Rust Playground</li>\n<li>Reviewed by <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>, suggests removing it from the Rust Playground before landing this (<span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> agrees on removing the flag)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83491#issuecomment-831894280\">@**Santiago Pastorino** suggests</a> renaming/aliasing the flag to a <code>--dump-*</code> to better reflect its purpose</li>\n</ul>\n</li>\n</ul>",
        "id": 237667433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311497
    },
    {
        "content": "<p>(It’s been merged and presumably deployed)</p>",
        "id": 237667586,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620311544
    },
    {
        "content": "<p>So. I want to argue that <code>—pretty</code> does serve a purpose</p>",
        "id": 237667628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311561
    },
    {
        "content": "<p>to my mind, at least</p>",
        "id": 237667648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311568
    },
    {
        "content": "<p>it may be that my instincts are wrong here</p>",
        "id": 237667681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311580
    },
    {
        "content": "<p>but in my ideal world, <code>—pretty</code> could be expected to be used by people programming in Rust</p>",
        "id": 237667782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311603
    },
    {
        "content": "<p>as a way to understand aspects of their code</p>",
        "id": 237667801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311611
    },
    {
        "content": "<p>(e.g., the macro expanded form)</p>",
        "id": 237667825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311619
    },
    {
        "content": "<p>while <code>—unpretty</code> would provide the options that really don’t make sense unless you’re doing <code>rustc</code> development</p>",
        "id": 237667885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311641
    },
    {
        "content": "<p>I guess I could say this on the PR itself.</p>",
        "id": 237667950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311653
    },
    {
        "content": "<p>So, yeah. I guess I would prefer to go make my case for this on the PR itself</p>",
        "id": 237668083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311697
    },
    {
        "content": "<p>there is of course a small problem with my logic here, in that <code>—pretty</code> is itself unstable</p>",
        "id": 237668157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311723
    },
    {
        "content": "<p>(but I do think there is a large set of  Rust developers who are using unstable Rust and are not rustc developers)</p>",
        "id": 237668216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311745
    },
    {
        "content": "<p>Okay so I guess I won’t take more meeting time for soap-boxing this and/or arguing with myself</p>",
        "id": 237668253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311761
    },
    {
        "content": "<p>lets leave it S-waiting-on-team for now</p>",
        "id": 237668320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311770
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>",
        "id": 237668351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311785
    },
    {
        "content": "<ul>\n<li>\"Use try_reserve in Vec's io::Write\" <a href=\"https://github.com/rust-lang/rust/pull/84612\">rust#84612</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"198824\">@Kornel</span></li>\n<li>Assigned for review to <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span>, waiting for consensus from T-libs</li>\n<li>Currently discussing the possible breakage this could cause (although fixing an incorrect behaviour)</li>\n<li>addressed the concern by <a href=\"https://github.com/rust-lang/rust/pull/84612#issuecomment-833052459\">making it a warning</a> and maybe <code>io::Error</code> in the future</li>\n</ul>\n</li>\n</ul>",
        "id": 237668362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311790
    },
    {
        "content": "<p>Is that just because we don't have OOM-panic?</p>",
        "id": 237668660,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311904
    },
    {
        "content": "<p>is which because? The possible breakage?</p>",
        "id": 237668704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311927
    },
    {
        "content": "<p>If we did, would using the nom-fallible vec apis have the same effect?</p>",
        "id": 237668739,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311942
    },
    {
        "content": "<p>The PR itself</p>",
        "id": 237668752,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620311947
    },
    {
        "content": "<p>I’m still not understanding your question</p>",
        "id": 237668779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311957
    },
    {
        "content": "<p>are you asking what the motivation for the PR is?</p>",
        "id": 237668788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620311962
    },
    {
        "content": "<p>OOM aborts. io::Write on Vec should ideally just return an Err. but that breaks code. this PR now changes it to a panic, which is slightly better than an abort</p>",
        "id": 237668795,
        "sender_full_name": "Mara",
        "timestamp": 1620311963
    },
    {
        "content": "<p>What I'm asking is - if we had OOM-panic, wouldnt explicitly panicking on a try_reseve error be the same as just trying to allocate, and letting vec itself panic on OOM?</p>",
        "id": 237668979,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312027
    },
    {
        "content": "<p>we're expecting an RFC about OOM-safe/non-failible collections. at that point we can continue the discussion about io::Write for Vec, but for now we don't want to break code.</p>",
        "id": 237668994,
        "sender_full_name": "Mara",
        "timestamp": 1620312032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> yes</p>",
        "id": 237669000,
        "sender_full_name": "Mara",
        "timestamp": 1620312034
    },
    {
        "content": "<p>Ok</p>",
        "id": 237669018,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312039
    },
    {
        "content": "<p>Okay, I see. <a href=\"https://github.com/rust-lang/rust/pull/84612#issuecomment-833052459\">This comment</a> is important: </p>\n<blockquote>\n<p>Ok, to address the \"io-write-vec-infallible\" concern I've changed it to:</p>\n<p><code>\ntry_reserve(len).expect(\"Out Of Memory. This panic may become an io::Error in the future (#84612)\")\n</code></p>\n</blockquote>",
        "id": 237669043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312050
    },
    {
        "content": "<p>yeah the PR was changed. originally it returned an Err. which is the correct thing to do, but breaking.</p>",
        "id": 237669109,
        "sender_full_name": "Mara",
        "timestamp": 1620312079
    },
    {
        "content": "<p>Is there code relying on the process aborting?</p>",
        "id": 237669180,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312108
    },
    {
        "content": "<p>right, I didn’t undertand the “making it a warning” (and havdn’t looked at the link)</p>",
        "id": 237669202,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312116
    },
    {
        "content": "<p>If I understand correctly, we would change from aborting to panicking?</p>",
        "id": 237669216,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312122
    },
    {
        "content": "<p>I mean returning an error</p>",
        "id": 237669266,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah, that was a plan that was proposed in an earlier comment. warning on <code>let _ = vec.write(..);</code>. but that was just a suggestion.</p>",
        "id": 237669318,
        "sender_full_name": "Mara",
        "timestamp": 1620312151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237669216\">said</a>:</p>\n<blockquote>\n<p>If I understand correctly, we would change from aborting to panicking?</p>\n</blockquote>\n<p>this seems okay to me, as long as there aren’t performance costs</p>",
        "id": 237669362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312173
    },
    {
        "content": "<p>Sorry, I wasn't clear</p>",
        "id": 237669396,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312190
    },
    {
        "content": "<p>Why is this on agenda of T-compiler?</p>",
        "id": 237669397,
        "sender_full_name": "nagisa",
        "timestamp": 1620312190
    },
    {
        "content": "<p>Because its libs-impl</p>",
        "id": 237669418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ideally we want to change from <code>abort()</code> to <code>return Err()</code>. but for now we change from <code>abort()</code> to <code>panic!()</code>. at least until we know better what the future of oom-safe collections will be.</p>",
        "id": 237669420,
        "sender_full_name": "Mara",
        "timestamp": 1620312201
    },
    {
        "content": "<p>I see</p>",
        "id": 237669447,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237669397\">said</a>:</p>\n<blockquote>\n<p>Why is this on agenda of T-compiler?</p>\n</blockquote>\n<p>(I do think we can trust the libs-impl’s team’s judgement here, though.)</p>",
        "id": 237669492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312239
    },
    {
        "content": "<p>anyway it seems like its progressing</p>",
        "id": 237669596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312271
    },
    {
        "content": "<p>which is the main thing I want to ensure when it comes to PR’s marked S-waiting-on-team</p>",
        "id": 237669628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312284
    },
    {
        "content": "<p>We could run a perf to see the impact on rustc itself as a proxy?</p>",
        "id": 237669642,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620312292
    },
    {
        "content": "<p>we started the chartering process for libs. should be finished before the end of the month, and then everything what's now labeled libs-impl should be covered by our meetings. (going a bit slower i originally expected)</p>",
        "id": 237669666,
        "sender_full_name": "Mara",
        "timestamp": 1620312303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> already happening</p>",
        "id": 237669683,
        "sender_full_name": "Mara",
        "timestamp": 1620312309
    },
    {
        "content": "<p>okay lets move along</p>",
        "id": 237669739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312327
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">73 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">51 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 2 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 42 P-high, 88 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 237669744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312328
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 237669764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312336
    },
    {
        "content": "<ul>\n<li>\"no_coverage feature-gated on function, not crate?\" <a href=\"https://github.com/rust-lang/rust/issues/84836\">rust#84836</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li><span class=\"user-mention\" data-user-id=\"296355\">@Rich Kadel</span> pushed <a href=\"https://github.com/rust-lang/rust/pull/84871\">a PR to address the concern</a></li>\n</ul>\n</li>\n</ul>",
        "id": 237669786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312349
    },
    {
        "content": "<p>(seems under control)</p>",
        "id": 237669865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312369
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and nominated for discussion (see below)</li>\n</ul>\n</li>\n</ul>",
        "id": 237669883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312376
    },
    {
        "content": "<p>Also seems under control, largely speaking</p>",
        "id": 237669909,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312388
    },
    {
        "content": "<p>I can work on a PR to make it a 'normal' error</p>",
        "id": 237669921,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312392
    },
    {
        "content": "<p>and its also nominated, so we can talk about it during nomination section</p>",
        "id": 237669940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312404
    },
    {
        "content": "<p>I'm strongly opposed to removing the ICE/error entirely</p>",
        "id": 237669945,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312407
    },
    {
        "content": "<p>(I would be opposed to that as well)</p>",
        "id": 237669976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312414
    },
    {
        "content": "<p>lets keep moving</p>",
        "id": 237669999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312423
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 237670052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312432
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 237670067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312437
    },
    {
        "content": "<ul>\n<li>\"Type annotations needed error on definition site\" <a href=\"https://github.com/rust-lang/rust/issues/84398\">rust#84398</a><ul>\n<li>This should be fixed by PR <a href=\"https://github.com/rust-lang/rust/pull/84559\">#84559</a> (mentioned before in beta backports)</li>\n</ul>\n</li>\n</ul>",
        "id": 237670095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312445
    },
    {
        "content": "<p>(we already discussed)</p>",
        "id": 237670108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312453
    },
    {
        "content": "<ul>\n<li>\"On nightly rustc, E0599 emits a massive diagnostic to suggest wrapping the receiver in every combination of <code>{Box,Pin,Rc,Arc}::new({,&amp;,&amp;mut} expr)</code>\" <a href=\"https://github.com/rust-lang/rust/issues/84769\">rust#84769</a><ul>\n<li>Addressed by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> in PR <a href=\"https://github.com/rust-lang/rust/pull/84808\">#84808</a></li>\n<li>Will be also beta backported with PR <a href=\"https://github.com/rust-lang/rust/pull/84969\">#84969</a> (waiting for review, see previous beta nomination)</li>\n</ul>\n</li>\n</ul>",
        "id": 237670126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312460
    },
    {
        "content": "<p>(also already discussed)</p>",
        "id": 237670231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312485
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 237670280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312497
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-05-04.md\">triage logs for 2021-05-04</a></p>\n</blockquote>\n<p>Quiet week overall.</p>\n<p>Triage done by <strong>@simulacrum</strong>, 2 Regressions, 1 Improvements, 1 Mixed</p>",
        "id": 237670306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312503
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Revert PR 77885 everywhere <a href=\"https://github.com/rust-lang/rust/issues/84708\">#84708</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=18587b14d1d820d31151d5c0a633621a67149e78&amp;end=478a07df05e3fe8df964291d8b25dd80b7e0e76b&amp;stat=instructions:u\">instruction counts</a> (up to 2.0% on <code>incr-unchanged</code> builds of <code>cargo-check</code>)</li>\n</ul>\n<p>Update BARE_TRAIT_OBJECT and ELLIPSIS_INCLUSIVE_RANGE_PATTERNS to errors in Rust 2021 <a href=\"https://github.com/rust-lang/rust/issues/83213\">#83213</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c20c9219dae5ea56ce9bf1c211fafdc7da8700b9&amp;end=7a0f1781d04662041db5deaef89598a8edd53717&amp;stat=instructions:u\">instruction counts</a> (up to 3.0% on <code>incr-unchanged</code> builds of <code>encoding-check</code>)</li>\n</ul>",
        "id": 237670321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312511
    },
    {
        "content": "<p>(I’m not surprised about <a href=\"https://github.com/rust-lang/rust/issues/84708\">#84708</a> )</p>",
        "id": 237670355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312526
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>\"const\" initialized thread locals in rustc <a href=\"https://github.com/rust-lang/rust/issues/84833\">#84833</a></li>\n</ul>",
        "id": 237670419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312552
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Move HIR parenting information out of hir_owner <a href=\"https://github.com/rust-lang/rust/issues/83114\">#83114</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5f304a5d7908d9dd55dda3baadd3cf564d907369&amp;end=6e2a34474bb86911c5235476d2ea820e163629fe&amp;stat=instructions:u\">instruction counts</a> (up to -5.0% on <code>incr-patched: println</code> builds of <code>piston-image-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5f304a5d7908d9dd55dda3baadd3cf564d907369&amp;end=6e2a34474bb86911c5235476d2ea820e163629fe&amp;stat=instructions:u\">instruction counts</a> (up to 2.2% on <code>incr-unchanged</code> builds of <code>unused-warnings-check</code>)</li>\n</ul>",
        "id": 237670445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312560
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>None this week</li>\n</ul>",
        "id": 237670475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312571
    },
    {
        "content": "<p>(Wow, I can’t remember the last time we didn’t have any performance triage nags …)</p>",
        "id": 237670498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312584
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 237670523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312593
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>a <code>P-critical</code> nominated for discussion to be addressed before next stable</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/84970#issue-877005793\">as per comment</a>: there will be new ICEs emitted as a result of improved error detection in the incremental code, are there more user-friendly alternatives than emitting ICEs?</li>\n</ul>\n</li>\n</ul>",
        "id": 237670549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312599
    },
    {
        "content": "<p>So: This is an interesting issue</p>",
        "id": 237670651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312622
    },
    {
        "content": "<p>I want to try to understand one detail: The suggestion to switch to a “proper” error diagnostic rather than an ICE</p>",
        "id": 237670692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312640
    },
    {
        "content": "<p>Is that basically becasue our ICE output is unconditionally ugly, scary, and not prone to give users helpful suggestions of what to do in response?</p>",
        "id": 237670800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312675
    },
    {
        "content": "<p>That's what I was thinking</p>",
        "id": 237670836,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312695
    },
    {
        "content": "<p>because this will still remain, in spririt, an Internal Compiler Error ...</p>",
        "id": 237670856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312703
    },
    {
        "content": "<p>I think we should still encourage people to open an issue on the compiler</p>",
        "id": 237670879,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312711
    },
    {
        "content": "<p>But when they do open an issue, we're always going to say 'run cargo clean'</p>",
        "id": 237670969,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312729
    },
    {
        "content": "<p>So we could automate the process of telling them that :)</p>",
        "id": 237670999,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312740
    },
    {
        "content": "<p>i do worry about whether the issues they open will be actionable</p>",
        "id": 237671022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312748
    },
    {
        "content": "<p>Yeah, I think in particular we will get worse 'optics' if we start throwing a large percentage of users an ICE, rather than an error telling them what to do, though even so the errors existence is pretty unfortunate</p>",
        "id": 237671051,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312760
    },
    {
        "content": "<p>do we have enough information in the current output for the underlying bug to get fixed?</p>",
        "id": 237671062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312765
    },
    {
        "content": "<p>historically that has been a problem for incremental compilation bugs</p>",
        "id": 237671093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312776
    },
    {
        "content": "<p>It varies widely between issues</p>",
        "id": 237671094,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312777
    },
    {
        "content": "<p>For some, I was able to figure it out immediately, since the query was super simple</p>",
        "id": 237671150,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312797
    },
    {
        "content": "<p>For others (e.g. the recent MIR ken during bootstrap), I have no idea</p>",
        "id": 237671208,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312820
    },
    {
        "content": "<p>I mostly want to make sure it remains clear to the user that the compiler isn’t alerting them to any problem in their code as it stands</p>",
        "id": 237671218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312822
    },
    {
        "content": "<p>I think if we put 'Internal compiler error' at the start of the message, it should be clear</p>",
        "id": 237671352,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620312858
    },
    {
        "content": "<p>I think we can structure the error to be pretty close to an ICE, just look less scary</p>",
        "id": 237671370,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312865
    },
    {
        "content": "<p>I recall a few cases of people looking at ICEs and thinking they got something really wrong</p>",
        "id": 237671403,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312880
    },
    {
        "content": "<p>(and of course it would be awesome if we had a better system for capturing the way to reproduce the error. but that is a broader issue for incremental compilation, only barely related to this bug)</p>",
        "id": 237671415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312884
    },
    {
        "content": "<p>(maybe we should just generally improve the ICE style)</p>",
        "id": 237671435,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312893
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237671435\">said</a>:</p>\n<blockquote>\n<p>(maybe we should just generally improve the ICE style)</p>\n</blockquote>\n<p>this was what I was wondering about</p>",
        "id": 237671461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312904
    },
    {
        "content": "<p>i.e., are we better off turning this ICE into a “proper error\"</p>",
        "id": 237671493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312913
    },
    {
        "content": "<p>or should we instead try to make the ICE infrastructure more expressive?</p>",
        "id": 237671530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312926
    },
    {
        "content": "<p>but, that seems like a better question to answer separately and not something we want to backport to beta probably</p>",
        "id": 237671534,
        "sender_full_name": "simulacrum",
        "timestamp": 1620312928
    },
    {
        "content": "<p>Good point</p>",
        "id": 237671546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312934
    },
    {
        "content": "<p>Okay then</p>",
        "id": 237671556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312937
    },
    {
        "content": "<p>For <em>this</em> error, for now, lets go with strategy of promoting to normal error diagnostic</p>",
        "id": 237671584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312951
    },
    {
        "content": "<p>(with clear messaging that it remains an ICE)</p>",
        "id": 237671602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312958
    },
    {
        "content": "<p>that sounds like we don’t need to talk more about this issue then?</p>",
        "id": 237671724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620312992
    },
    {
        "content": "<p>okay</p>",
        "id": 237671784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313015
    },
    {
        "content": "<p>I'm happy to leave a comment and unnominate</p>",
        "id": 237671792,
        "sender_full_name": "simulacrum",
        "timestamp": 1620313018
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 237671797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313019
    },
    {
        "content": "<p>(there was a memory usage bug that I thought I had nominated)</p>",
        "id": 237671818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313029
    },
    {
        "content": "<p>(we can wait until next week to discuss with whole team, but let me at least link it …)</p>",
        "id": 237671861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313046
    },
    {
        "content": "<p>hmm was it only on reddit …?</p>",
        "id": 237672027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313101
    },
    {
        "content": "<p>Is this the debug info related one?</p>",
        "id": 237672063,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620313118
    },
    {
        "content": "<p>the one about 32-bit ARM</p>",
        "id": 237672107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313138
    },
    {
        "content": "<p>Or the report about not being able to bootstrap on arm32?</p>",
        "id": 237672116,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620313142
    },
    {
        "content": "<p>It's on irlo</p>",
        "id": 237672139,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620313147
    },
    {
        "content": "<p>this, yeah: <a href=\"https://www.reddit.com/r/rust/comments/n4ep9j/rust_1510_cant_be_built_on_32bit_arm_any_more/\">https://www.reddit.com/r/rust/comments/n4ep9j/rust_1510_cant_be_built_on_32bit_arm_any_more/</a></p>",
        "id": 237672154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313155
    },
    {
        "content": "<p>we should probably have an issue about that, no?</p>",
        "id": 237672182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313166
    },
    {
        "content": "<p>in terms of overall expectations, I would like for us to strive to not overflow a 32-bit address space ...</p>",
        "id": 237672247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313195
    },
    {
        "content": "<p>Yeah, there might be an existing issue for x86</p>",
        "id": 237672315,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620313208
    },
    {
        "content": "<p>okay gotta go</p>",
        "id": 237672346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620313214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237672182\">said</a>:</p>\n<blockquote>\n<p>we should probably have an issue about that, no?</p>\n</blockquote>\n<p>the person mentioning this problem would like to test 1.52 stable (when it's out) because PR <a href=\"https://github.com/rust-lang/rust/issues/70951\">#70951</a> could solve the issue<br>\nref: <a href=\"https://internals.rust-lang.org/t/building-rustc-on-armv7-rust-build-is-bloated/14619/9\">https://internals.rust-lang.org/t/building-rustc-on-armv7-rust-build-is-bloated/14619/9</a></p>",
        "id": 237673985,
        "sender_full_name": "apiraino",
        "timestamp": 1620313504
    },
    {
        "content": "<p>Follow-up - I 've opened <a href=\"https://github.com/rust-lang/rust/pull/84998\">https://github.com/rust-lang/rust/pull/84998</a> to show a nicer error when the 'unstable fingerprint' error ocurrs. This diff is very small, so it should be easy to backport</p>",
        "id": 237700494,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620323347
    }
]