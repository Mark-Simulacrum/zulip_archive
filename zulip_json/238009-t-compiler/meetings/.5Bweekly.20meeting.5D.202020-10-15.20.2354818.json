[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-10-15T14:00:00Z\">2020-10-15T14:00:00+00:00</time></p>",
        "id": 213343795,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602705955
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 213343850,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602705967
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/LydTi9iiR-S1EMUVtIBZxg?view\">meeting agenda</a></p>",
        "id": 213343865,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602705980
    },
    {
        "content": "<p>We will have one checkin this time from <em>WG-async-foundations</em></p>",
        "id": 213343922,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602706017
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>?</p>",
        "id": 213343968,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602706047
    },
    {
        "content": "<p>Most activity has been in RFCs and improving the async book lately. We've fixed some implementation issues lately and have a <a href=\"https://github.com/orgs/rust-lang/projects/2\">large backlog</a> of others.</p>\n<p>There haven't been a ton of people picking up new issues to work on, but I'd still say the main bottlenecks have been reviews and mentoring. I'm shifting priorities to focus more time on this and would love to grow more reviewers from the people who are contributing. One (minor) challenge here is it's unclear if we want to grant r+ to individual wg members, but I think we do.</p>",
        "id": 213378204,
        "sender_full_name": "tmandry",
        "timestamp": 1602734275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ^</p>",
        "id": 213378246,
        "sender_full_name": "tmandry",
        "timestamp": 1602734291
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 26 minutes</p>",
        "id": 213425802,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602768855
    },
    {
        "content": "<p><a href=\"https://hackmd.io/LydTi9iiR-S1EMUVtIBZxg?view\">Check out the meeting agenda</a></p>",
        "id": 213425834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602768873
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 213429626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770504
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 213429664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770521
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 213429732,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770535
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213429746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770543
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213429769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770552
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"<code>ty.kind()</code> -&gt; <code>ty.data()</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a></li>\n<li>\"inherit stable annotations in enum variants and field items\" <a href=\"https://github.com/rust-lang/compiler-team/issues/370\">compiler-team#370</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213429796,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770565
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213429837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770584
    },
    {
        "content": "<p>I just opened <a href=\"https://github.com/rust-lang/rust/issues/77975\">#77975</a> for cg_clif.</p>",
        "id": 213429872,
        "sender_full_name": "bjorn3",
        "timestamp": 1602770600
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Promote aarch64-pc-windows-msvc to Tier 2 Development Platform\" <a href=\"https://github.com/rust-lang/rust/pull/75914\">rust#75914</a></li>\n<li>\"Set up CI for aarch64-apple-darwin\" <a href=\"https://github.com/rust-lang/rust/pull/75991\">rust#75991</a></li>\n<li>[T-libs] \"Tracking issue for slice_partition_at_index\" <a href=\"https://github.com/rust-lang/rust/issues/55300\">rust#55300</a> (closed via merge of PR <a href=\"https://github.com/rust-lang/rust/issues/77639\">#77639</a> Oct 13)</li>\n<li>[T-libs] \"Fix Debug implementations of some of the HashMap and BTreeMap iterator types\" <a href=\"https://github.com/rust-lang/rust/pull/75377\">rust#75377</a> (PR merged Oct 2)</li>\n<li>[T-libs] \"Stabilize slice_ptr_range.\" <a href=\"https://github.com/rust-lang/rust/pull/77111\">rust#77111</a> (PR merged Oct 2)</li>\n</ul>\n</li>\n</ul>",
        "id": 213430049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770664
    },
    {
        "content": "<p>Regarding <a href=\"https://github.com/rust-lang/compiler-team/issues/370\">compiler-team#370</a></p>",
        "id": 213430103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770682
    },
    {
        "content": "<p>(\"inherit stable annotations\")</p>",
        "id": 213430122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770688
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested that might be a good candidate for a full fcp</p>",
        "id": 213430151,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770696
    },
    {
        "content": "<p>given that some folks had expressed doubt in the past</p>",
        "id": 213430171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770704
    },
    {
        "content": "<p>I think that's a good point</p>",
        "id": 213430194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770714
    },
    {
        "content": "<p>okay, lets do that then</p>",
        "id": 213430205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770721
    },
    {
        "content": "<p>what's the protocol for such a switch? Just write <code>@rfcbot fcp merge</code> ?</p>",
        "id": 213430283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770754
    },
    {
        "content": "<p>I guess I'll try that</p>",
        "id": 213430292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770757
    },
    {
        "content": "<p>I can do it, but yes</p>",
        "id": 213430365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770772
    },
    {
        "content": "<p>I don't know how it will respond with the labeling and all</p>",
        "id": 213430386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770785
    },
    {
        "content": "<p>hup, data race on the issue!</p>",
        "id": 213430461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770822
    },
    {
        "content": "<p>or rather, just a race!</p>",
        "id": 213430485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770832
    },
    {
        "content": "<p>yep...</p>",
        "id": 213430525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770850
    },
    {
        "content": "<p>I think we've got it fixed now ;)</p>",
        "id": 213430531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770853
    },
    {
        "content": "<p>okay, moving on</p>",
        "id": 213430546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770861
    },
    {
        "content": "<h3>WG checkins</h3>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> checkin by <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>:</p>\n<blockquote>\n<p>Most activity has been in RFCs and improving the async book lately. We've fixed some implementation issues lately and have a <a href=\"https://github.com/orgs/rust-lang/projects/2\">large backlog</a> of others.</p>\n<p>There haven't been a ton of people picking up new issues to work on, but I'd still say the main bottlenecks have been reviews and mentoring. I'm shifting priorities to focus more time on this and would love to grow more reviewers from the people who are contributing. One (minor) challenge here is it's unclear if we want to grant r+ to individual wg members, but I think we do.</p>\n</blockquote>",
        "id": 213430563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> let's discuss, I think some of those regular committers are prob good candidates for compiler team contributors</p>",
        "id": 213430672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770900
    },
    {
        "content": "<p>yeah, I think a good pattern here might be</p>",
        "id": 213430727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770921
    },
    {
        "content": "<p>\"if a wg member is contributing enough to consider giving them r+ privs, then probably best to nominate them for outright compiler contributor status\"</p>",
        "id": 213430788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770952
    },
    {
        "content": "<p>yeah</p>",
        "id": 213430807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602770963
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> checkin by @<strong>estebank</strong>:</p>\n<blockquote>\n<p>As usual, there has been a flurry of unstructured activity, lots of small and medium sized improvements. The following are a loose cathegorization of some of the salient work since the last update, but I'm sure I'm missing some (mainly PRs I'm fogetting about that didn't close an existing A-diagnostics ticket)</p>\n<ul>\n<li><strong>short path in error messages for unique identifiers</strong> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n<li>various improvements to structured suggestions for invalid patterns and invalid enum uses</li>\n<li>various small fixes to I-perf, parser and span accuracy regressions</li>\n<li>various borrowck wording and span tweaks</li>\n<li>more turbofish misparse recovery and suggestions</li>\n<li>gracefully handle range <code>const</code> used as pattern <a href=\"https://github.com/rust-lang/rust/pull/76222\">rust#76222</a></li>\n<li>structured suggestion when finding trait where a type was expected in where clause and trait object type <a href=\"https://github.com/rust-lang/rust/pull/77087\">rust#77087</a></li>\n<li>silence various redundant trait selection errors</li>\n<li>detect turbofish without surrounding angle brackets and recover parser state gracefully</li>\n<li>smarter numeric conversion suggestion <a href=\"https://github.com/rust-lang/rust/issues/73145\">rust#73145</a></li>\n<li>suggest constraining type parameter with appropriate trait bound when encountering binop involving them</li>\n<li>auditted hidden/short code suggestions</li>\n<li>tweak \"missing lifetime\" structured suggestions to be more accurate and account for <code>for&lt;'lt&gt;</code></li>\n</ul>\n<p>Upcoming change needing eyes:\n* Provide appropriate types in turbofish suggestions <a href=\"https://github.com/rust-lang/rust/pull/76043\">rust#76043</a></p>\n</blockquote>",
        "id": 213430858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770976
    },
    {
        "content": "<p>hmm</p>",
        "id": 213430880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770983
    },
    {
        "content": "<p>let me fix that</p>",
        "id": 213430887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602770985
    },
    {
        "content": "<blockquote>\n<p>short path in error messages for unique identifiers <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n</blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> indeed</p>",
        "id": 213430973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771008
    },
    {
        "content": "<p>that's PR <a href=\"https://github.com/rust-lang/rust/issues/73996\">#73996</a>, right?</p>",
        "id": 213431158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771103
    },
    {
        "content": "<p>(or is that too old...)</p>",
        "id": 213431234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771124
    },
    {
        "content": "<p>still, seems right to me</p>",
        "id": 213431309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771161
    },
    {
        "content": "<p>okay, on to beta nominations</p>",
        "id": 213431371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771194
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 213431383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771201
    },
    {
        "content": "<ul>\n<li>\"rustc_parse: More precise spans for <code>tuple.0.0</code>\" <a href=\"https://github.com/rust-lang/rust/pull/77774\">rust#77774</a><ul>\n<li>Fixes a severe rustfmt issue <a href=\"https://github.com/rust-lang/rustfmt/issues/4355\">rustfmt#4355</a></li>\n<li>cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213431413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771211
    },
    {
        "content": "<p>I don't quite understand what this PR does</p>",
        "id": 213431638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771301
    },
    {
        "content": "<p>/me squints at <code>rustfmt</code> panicking due to a looser span</p>",
        "id": 213431657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771309
    },
    {
        "content": "<p>but I agree that the rustfmt bug is worth fixing</p>",
        "id": 213431684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771320
    },
    {
        "content": "<p>I personally think this is a sign that <code>rustfmt</code> should not be relying on the spans in this way</p>",
        "id": 213431718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771334
    },
    {
        "content": "<p>but what do I know</p>",
        "id": 213431731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771338
    },
    {
        "content": "<p>I see, it only tweaks the span..</p>",
        "id": 213431772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771356
    },
    {
        "content": "<p>anyway I guess it seems fine to backport, assuming it did indeed fix the issue</p>",
        "id": 213431894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771389
    },
    {
        "content": "<p>(okay, the fix was confirmed)</p>",
        "id": 213431931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771412
    },
    {
        "content": "<p>so, I guess backport approved</p>",
        "id": 213432040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771436
    },
    {
        "content": "<p>next</p>",
        "id": 213432083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771449
    },
    {
        "content": "<ul>\n<li>\"Update crossbeam-channel to avoid UB\" <a href=\"https://github.com/rust-lang/rust/pull/77819\">rust#77819</a><ul>\n<li>Porting of a <a href=\"https://github.com/RustSec/advisory-db/pull/425\">security patch in crossbeam-channel</a> already in 1.47 stable</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213432088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> just so you know, in the specific context of beta backport nominations</p>",
        "id": 213432205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771491
    },
    {
        "content": "<p>we use the emojis as a sort of informal \"voting\" system</p>",
        "id": 213432254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771501
    },
    {
        "content": "<p>I'll make the <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> separate then</p>",
        "id": 213432281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602771525
    },
    {
        "content": "<p>(okay, thanks for removing the <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> ; hopefully that will keep things from getting too confused)</p>",
        "id": 213432284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771526
    },
    {
        "content": "<p>This use of emojis is an artifact, in part, of Zulips polling system not working on mobile devices. <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 213432400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771561
    },
    {
        "content": "<p>(although setting up a poll would be annoying too, unless there's a non-interactive way I don't know about)</p>",
        "id": 213432507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771607
    },
    {
        "content": "<p>we don't have the diff from crossbeam-channel</p>",
        "id": 213432546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771615
    },
    {
        "content": "<p>do we need to backport <a href=\"https://github.com/rust-lang/rls/issues/1703\">rust-lang/rls#1703</a> as well here?</p>",
        "id": 213432578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771619
    },
    {
        "content": "<p>but .. I trust it ;)</p>",
        "id": 213432591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602771623
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rls/issues/1703\">rust-lang/rls#1703</a></p>",
        "id": 213432596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771626
    },
    {
        "content": "<p>or is it enough to just backport the change to the <code>.lock</code> file for the purposes of the release channels?</p>",
        "id": 213432684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771671
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^ ?</p>",
        "id": 213432697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771676
    },
    {
        "content": "<p>.lock should be fine for backport purposes</p>",
        "id": 213432749,
        "sender_full_name": "simulacrum",
        "timestamp": 1602771688
    },
    {
        "content": "<p>(btw, <a href=\"https://github.com/RustSec/advisory-db/pull/425\">https://github.com/RustSec/advisory-db/pull/425</a> is pretty interesting to read, in terms of being aware of this kind of bug occurring elsewhere)</p>",
        "id": 213432944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771764
    },
    {
        "content": "<p>anyway, backport approved</p>",
        "id": 213433115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771808
    },
    {
        "content": "<ul>\n<li>\"Do not ICE with TraitPredicates containing [type error]\" <a href=\"https://github.com/rust-lang/rust/pull/77930\">rust#77930</a><ul>\n<li>Fixes a <code>P-medium</code> ICE <a href=\"https://github.com/rust-lang/rust/issues/77919\">rustc#77919</a> on resolving bounds after type-checking error</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213433142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771817
    },
    {
        "content": "<p>adding <code>delay_span_bug</code> in this manner seems pretty safe to me</p>",
        "id": 213433374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771902
    },
    {
        "content": "<p>so I'm good with approving this backport too</p>",
        "id": 213433399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771911
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 213433451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771934
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 213433475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771942
    },
    {
        "content": "<ul>\n<li>\"Do not ICE with TraitPredicates containing [type error]\" <a href=\"https://github.com/rust-lang/rust/pull/77930\">rust#77930</a><ul>\n<li>Fixes a <code>P-medium</code> ICE <a href=\"https://github.com/rust-lang/rust/issues/77919\">rustc#77919</a> on resolving bounds after type-checking error</li>\n<li>Nominating for stable backport because this is handling a stable-to-stable regression, but it was introduced back in 1.36 so it doesn't warrant a dot release only for this one fix.</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213433504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771953
    },
    {
        "content": "<p>this is teh one we just approved above</p>",
        "id": 213433594,
        "sender_full_name": "oli",
        "timestamp": 1602771978
    },
    {
        "content": "<p>right</p>",
        "id": 213433613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602771982
    },
    {
        "content": "<p>ah, stable backport</p>",
        "id": 213433618,
        "sender_full_name": "oli",
        "timestamp": 1602771984
    },
    {
        "content": "<p>anyway I think its ...f ine</p>",
        "id": 213433678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772006
    },
    {
        "content": "<p>I am inclined to reject it, P-medium and 1.36</p>",
        "id": 213433685,
        "sender_full_name": "simulacrum",
        "timestamp": 1602772008
    },
    {
        "content": "<p>simple enough, but not very important to backport</p>",
        "id": 213433689,
        "sender_full_name": "oli",
        "timestamp": 1602772009
    },
    {
        "content": "<p>though I'm also fine with rejecting it</p>",
        "id": 213433699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772014
    },
    {
        "content": "<p>I think stable backports need to be justified more than just \"Stable to stable\" regression</p>",
        "id": 213433716,
        "sender_full_name": "simulacrum",
        "timestamp": 1602772021
    },
    {
        "content": "<p>in some ways, stable backports should probably be reserved for ... right</p>",
        "id": 213433731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772025
    },
    {
        "content": "<p>after all, they're fairly high risk</p>",
        "id": 213433760,
        "sender_full_name": "simulacrum",
        "timestamp": 1602772036
    },
    {
        "content": "<p>like things that are critical problems</p>",
        "id": 213433766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772037
    },
    {
        "content": "<p>but an ICE on code is otherwise an error</p>",
        "id": 213433790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772047
    },
    {
        "content": "<p>is unlikely to warrant a stable backport</p>",
        "id": 213433808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772052
    },
    {
        "content": "<p>so</p>",
        "id": 213433816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772055
    },
    {
        "content": "<p>I thought that our role was more to judge the technical merits</p>",
        "id": 213433829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772061
    },
    {
        "content": "<p>unless there's some very severe UI issue that the backport resolves</p>",
        "id": 213433836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772064
    },
    {
        "content": "<p>and less to judge the importance</p>",
        "id": 213433838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772064
    },
    {
        "content": "<p>I think that's true yes</p>",
        "id": 213433864,
        "sender_full_name": "simulacrum",
        "timestamp": 1602772078
    },
    {
        "content": "<p>though I do agree that the bar is higher from a technical perspective as well</p>",
        "id": 213433866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772079
    },
    {
        "content": "<p>well, to my mind we're not here to judge whether to <em>have</em> a point release</p>",
        "id": 213433931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772089
    },
    {
        "content": "<p>but we can still say \"this is not worth the development effort</p>",
        "id": 213433960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772104
    },
    {
        "content": "<p>of producing a backport</p>",
        "id": 213433974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772111
    },
    {
        "content": "<p>i.e., even if we <em>do</em> have a point release, not worth backporting?</p>",
        "id": 213433991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772121
    },
    {
        "content": "<p>Right, yes</p>",
        "id": 213434007,
        "sender_full_name": "simulacrum",
        "timestamp": 1602772127
    },
    {
        "content": "<p>anyway I think this is a very safe PR</p>",
        "id": 213434014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772128
    },
    {
        "content": "<p>yeah I could honestly go either way</p>",
        "id": 213434126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772184
    },
    {
        "content": "<p>I'm...not sure about prioritity, I think it's maybe non-zero, I guess it depends</p>",
        "id": 213434131,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772187
    },
    {
        "content": "<p>the PR is both safe and simple</p>",
        "id": 213434133,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772188
    },
    {
        "content": "<p>what I cannot tell is if the user experience is significantly improved in any case</p>",
        "id": 213434300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772240
    },
    {
        "content": "<p>ok, I tinkered a bit with the example</p>",
        "id": 213434306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772243
    },
    {
        "content": "<p>in the sense that, is there a variant where the diagnostic feedback is useless without this PR in place</p>",
        "id": 213434350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772258
    },
    {
        "content": "<p>it does seem fairly sensitive to the <em>particular</em> example, so I agree low priority</p>",
        "id": 213434357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772260
    },
    {
        "content": "<p>(I was a bit afraid it might occur for all kinds of unresolved symbols or something...)</p>",
        "id": 213434385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772271
    },
    {
        "content": "<p>lets decline for stable backport</p>",
        "id": 213434480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772311
    },
    {
        "content": "<p>if someone can come up with an example where the UX is awful without this, then we can reconsider</p>",
        "id": 213434565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772333
    },
    {
        "content": "<p>(also, I will freely admit that we might be a bit wishy-washy in our policy regarding stable backports)</p>",
        "id": 213434611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772355
    },
    {
        "content": "<p>(it might be a good idea to actually keep stats from week to week about how many things are accepted vs rejected, and what kinds of PR's they were, so that we might form a collective set of values here that isn't reconstructed on-the-fly each week)</p>",
        "id": 213434722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772402
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 213434769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772422
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 213434793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772434
    },
    {
        "content": "<ul>\n<li>\"Tracking issue for renaming crates inside compiler directory\" <a href=\"https://github.com/rust-lang/rust/issues/76425\">rust#76425</a><ul>\n<li>References this <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">MCP</a></li>\n<li>The goal is to have all crates under <code>./compiler</code> have a consistent name</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213434819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772443
    },
    {
        "content": "<p>this has not gone through MCP but I think it would be a good change</p>",
        "id": 213434891,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772469
    },
    {
        "content": "<p>right now all the crates are named <code>rustc/rustc_xxx</code> which seems repetitive</p>",
        "id": 213434932,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772484
    },
    {
        "content": "<p>um</p>",
        "id": 213434955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772495
    },
    {
        "content": "<p>there is an associated MCP</p>",
        "id": 213434967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772498
    },
    {
        "content": "<p>given past controversies, we probably want this to be FCP'd?</p>",
        "id": 213434968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772499
    },
    {
        "content": "<p>was that not approved?</p>",
        "id": 213434982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213434967\">said</a>:</p>\n<blockquote>\n<p>there is an associated MCP</p>\n</blockquote>\n<p>yes, but the MCP doesn't mention this change I don't think</p>",
        "id": 213434990,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772510
    },
    {
        "content": "<p>there is going to be the challenge that usually occurs</p>",
        "id": 213434999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772513
    },
    {
        "content": "<p>this is an extension</p>",
        "id": 213435003,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772516
    },
    {
        "content": "<p>where people check their boxes and then the proposal changes a bit</p>",
        "id": 213435008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772519
    },
    {
        "content": "<p>these things need to be made clearer</p>",
        "id": 213435031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772528
    },
    {
        "content": "<p>(I wonder if we should ask folks who have particular concerns to write them out)</p>",
        "id": 213435050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> and <span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> had concerns this would make the crates less readable</p>",
        "id": 213435117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772559
    },
    {
        "content": "<p>I think if we only renamed the directories and kept the imports as <code>rustc_ast</code>, etc. that would be pretty readable, but of course I can't speak for them</p>",
        "id": 213435234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772596
    },
    {
        "content": "<p>right, this comment in particular was the main one that <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> and <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> agreed on: </p>\n<blockquote>\n<p>I'm a bit confused, where was it decided that the rustc_ prefix should be removed? I personally find it helpful, as it very clearly indicates which parts are crates from the compiler \"proper\", and which are from external crates. Also, a lot of these names seem like they could introduce ambiguity.</p>\n</blockquote>",
        "id": 213435272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772613
    },
    {
        "content": "<p>do these crates go into sysroot or something?</p>",
        "id": 213435303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772632
    },
    {
        "content": "<p>I guess that doesn't matter</p>",
        "id": 213435313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772636
    },
    {
        "content": "<p>I think the intention is to keep the crates within <code>compiler/</code></p>",
        "id": 213435364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772661
    },
    {
        "content": "<p>(sorry, I meant in the distribution; I think they do, but I don't think it matters very much)</p>",
        "id": 213435455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772690
    },
    {
        "content": "<p>(I was wondering if having more generic names would induce more conflicts)</p>",
        "id": 213435475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772704
    },
    {
        "content": "<p>years ago we had big arguments about line lengths, and people said \"we have wide monitors, we don't need an 80 character limit\"</p>",
        "id": 213435499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772718
    },
    {
        "content": "<p>anyway there is definitely objection, I don't know the best way to resolve this discussion, but this triage meeting is probably not it</p>",
        "id": 213435515,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772727
    },
    {
        "content": "<p>in that spriit, I'm mostly in the camp of \"I don't understand the benefit here\"</p>",
        "id": 213435542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772741
    },
    {
        "content": "<p>I guess I don't really like that the paths are so much longer now</p>",
        "id": 213435602,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772774
    },
    {
        "content": "<p>anyway this is waiting on team</p>",
        "id": 213435604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772775
    },
    {
        "content": "<p>so we need to figure out <em>where</em> the discussion is going to happen</p>",
        "id": 213435626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772787
    },
    {
        "content": "<p>it feels redundant to have rustc prefixes everywhere since now all the crates have it</p>",
        "id": 213435634,
        "sender_full_name": "DPC",
        "timestamp": 1602772789
    },
    {
        "content": "<p>if it happens at all</p>",
        "id": 213435638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772790
    },
    {
        "content": "<p>maybe we need a design meeting about this</p>",
        "id": 213435746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772824
    },
    {
        "content": "<p>there was a zulip stream in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> a while back</p>",
        "id": 213435749,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602772826
    },
    {
        "content": "<p>when's our next planning meeting?</p>",
        "id": 213435770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772839
    },
    {
        "content": "<p>I feel like a design meeting proposal is not a bad idea. It may also be that somebody should kind of go person to person and gather feedback and report it, maybe that's a big burden :)</p>",
        "id": 213435802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772854
    },
    {
        "content": "<p>I'd be curious to get a kind of survey/straw-poll</p>",
        "id": 213435815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772863
    },
    {
        "content": "<p>okay next planning meeting is a week from tomorrow</p>",
        "id": 213435826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772872
    },
    {
        "content": "<p>so maybe lets post a comment on the issue</p>",
        "id": 213435840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213435770\">said</a>:</p>\n<blockquote>\n<p>when's our next planning meeting?</p>\n</blockquote>\n<p>Oct 23</p>",
        "id": 213435852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772883
    },
    {
        "content": "<p>saying \"we think this deserves a planning meeting proposal. Get one in before next week!\"</p>",
        "id": 213435868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772894
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213435815\">said</a>:</p>\n<blockquote>\n<p>I'd be curious to get a kind of survey/straw-poll</p>\n</blockquote>\n<p>like -- what are the reasons to do it, what are the reasons not to, and where do people roughly fall</p>",
        "id": 213435877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772898
    },
    {
        "content": "<p>next</p>",
        "id": 213435917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772916
    },
    {
        "content": "<p>(sorry, I figure we should cut discussion short)</p>",
        "id": 213435975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772928
    },
    {
        "content": "<p>in prtaicular though I think I wouldn't want to schedule the meeting without someone agreeing to do that prep, or something to give it more structure</p>",
        "id": 213435979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602772928
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 213435999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772937
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">48 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">30 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">2 P-critical, 2 P-high, 4 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 19 P-high, 63 P-medium, 6 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 213436028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772946
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 213436046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772956
    },
    {
        "content": "<ul>\n<li>\"Optimisation-caused UB during cross-crate compilation\" <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a><ul>\n<li>This one was already discussed</li>\n<li><a href=\"https://reviews.llvm.org/D88529\">A different LLVM patch has been accepted</a> and will be included in LLVM 12</li>\n<li>The accepted patch is pretty small and self-contained, so we could cherry-pick it if we wanted to</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n</ul>\n</li>\n</ul>",
        "id": 213436063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772965
    },
    {
        "content": "<p>okay we definitely discussed this last week. :)</p>",
        "id": 213436087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602772978
    },
    {
        "content": "<p>I think we decided last week that wg-llvm should decide whether to cherry-pick, right?</p>",
        "id": 213436142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773011
    },
    {
        "content": "<p>Or at least, we wanted to give them authority to make a decision there. If wg-llvm doesn't have time/resources to evaluate whether to cherry-pick, then I guess it falls back on T-compiler itself.</p>",
        "id": 213436182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773036
    },
    {
        "content": "<p>/me remembers that he wants to try to get in habit of linking from issues to the relevant point in the zulip-archive after each discussion like this, to make it easier to track backwards</p>",
        "id": 213436348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773093
    },
    {
        "content": "<p>anyway, we did discuss this last week, and I still think its under control</p>",
        "id": 213436441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773128
    },
    {
        "content": "<p>but it would be good to make forward progress on deciding whether to cherry-pick</p>",
        "id": 213436484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773144
    },
    {
        "content": "<p>next</p>",
        "id": 213436522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773155
    },
    {
        "content": "<ul>\n<li>\"coreos-installer test segfaults on s390x-unknown-linux-gnu\" <a href=\"https://github.com/rust-lang/rust/issues/77382\">rust#77382</a><ul>\n<li>This one was already discussed</li>\n<li><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> points to this issue as duplicate of <a href=\"https://github.com/rust-lang/rust/issues/74551\">rust#74551</a></li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> opened an issue on <a href=\"https://bugs.llvm.org/show_bug.cgi?id=47736\">LLVM</a> and the issue was already fixed</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/77382#issuecomment-708618338\">Backport is waiting for LLVM 11 final rebase</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213436581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773166
    },
    {
        "content": "<p>Oooh I didn't actually know that LLVM 11 final release was done</p>",
        "id": 213436644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773192
    },
    {
        "content": "<p>we should have included that in the annoucements. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 213436671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773205
    },
    {
        "content": "<p>and we even finished merging it ... 6 hours ago ...</p>",
        "id": 213436714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773226
    },
    {
        "content": "<p>so cool</p>",
        "id": 213436728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773231
    },
    {
        "content": "<p>you're right, that was worth an announcement :)</p>",
        "id": 213436729,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773231
    },
    {
        "content": "<p>so okay, that to me means that <a href=\"https://github.com/rust-lang/rust/issues/77382\">rust#77382</a> is also under control</p>",
        "id": 213436778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> already said that they would take care of backporting the patch</p>",
        "id": 213436808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773264
    },
    {
        "content": "<p>next</p>",
        "id": 213436833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773272
    },
    {
        "content": "<p>this one in particular was not clear to me in which LLVM version was going to be included</p>",
        "id": 213436838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773274
    },
    {
        "content": "<p>well I'm confident we'll get the fix one way or another</p>",
        "id": 213436939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773296
    },
    {
        "content": "<ul>\n<li>\"[ICE] Encountered errors resolving bounds after type-checking\" <a href=\"https://github.com/rust-lang/rust/issues/77653\">rust#77653</a><ul>\n<li>This one was already discussed</li>\n<li>Nightly regression</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> to highlight comment from issue above <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> <a href=\"https://github.com/rust-lang/rust/issues/77638#issuecomment-704892157\">rust#77638</a></li>\n<li>Bisected to commit <a href=\"https://github.com/rust-lang/rust/commit/08e2d4616613716362b4b49980ff303f2b9ae654\">08e2d46</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77720\">PR by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> that fixes the issue is up</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213436942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773297
    },
    {
        "content": "<p>okay, the PR here is just awaiting review I think</p>",
        "id": 213437013,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773325
    },
    {
        "content": "<p>we need to review <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>'s PR</p>",
        "id": 213437018,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you think you'll have time, or do you want to delegate?</p>",
        "id": 213437033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773336
    },
    {
        "content": "<p>for this P-critical and for the following one</p>",
        "id": 213437050,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773343
    },
    {
        "content": "<p>the next one is this</p>\n<ul>\n<li>\"ICE: Projection bound ... was applicable to ... but now is not\" <a href=\"https://github.com/rust-lang/rust/issues/77656\">rust#77656</a><ul>\n<li>This one was already discussed</li>\n<li>Nightly regression that impacts code in a crate</li>\n<li>Bisected to commit <a href=\"https://github.com/rust-lang/rust/commit/08e2d4616613716362b4b49980ff303f2b9ae654\">08e2d46</a>, merged in <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77720\">PR by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> that fixes the issue is up</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213437099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773362
    },
    {
        "content": "<p>same PR fixes this issue :)</p>",
        "id": 213437136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213437033\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> do you think you'll have time, or do you want to delegate?</p>\n</blockquote>\n<p>sorry, I was reading the issue thread</p>",
        "id": 213437138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773378
    },
    {
        "content": "<p>(to be clear, the same PR fixes both issues; its not that <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has two distinct PR's here awaiting review)</p>",
        "id": 213437184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773399
    },
    {
        "content": "<p>is the question about reviewing <a href=\"https://github.com/rust-lang/rust/pull/77720\">https://github.com/rust-lang/rust/pull/77720</a> ?</p>",
        "id": 213437186,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773399
    },
    {
        "content": "<p>if so, I will definitely do that today</p>",
        "id": 213437233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yep, that was the question</p>",
        "id": 213437245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773413
    },
    {
        "content": "<p>great!</p>",
        "id": 213437247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773415
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 213437282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773431
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 213437297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773438
    },
    {
        "content": "<ul>\n<li>\"ICE: Expected module, found DefId\" <a href=\"https://github.com/rust-lang/rust/issues/75982\">rust#75982</a><ul>\n<li>Unassigned</li>\n<li>Reported by <span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span></li>\n<li>Issue priority raised to <code>P-high</code>: issue reporter <a href=\"https://github.com/rust-lang/rust/issues/75982#issuecomment-706100003\">mentions there was a test shadowing the ICE</a> behind a compiler error. ICE persists after removing this test.</li>\n</ul>\n</li>\n</ul>",
        "id": 213437320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773448
    },
    {
        "content": "<p>I'm not entirely happy with how the PR fixes <a href=\"https://github.com/rust-lang/rust/issues/77656\">rust#77656</a> , which is an issue around how we handle cycles in normalization/trait solving, so that might require some more discussion.</p>",
        "id": 213437332,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1602773455
    },
    {
        "content": "<p>Looks to me like <a href=\"https://github.com/rust-lang/rust/issues/75982\">rust#75982</a> needs an MCVE, no?</p>",
        "id": 213437512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773524
    },
    {
        "content": "<p>looks that wy</p>",
        "id": 213437622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773571
    },
    {
        "content": "<p>it also needs bisection</p>",
        "id": 213437662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773590
    },
    {
        "content": "<p>(right?)</p>",
        "id": 213437674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773596
    },
    {
        "content": "<p>seems like we should ping cleanup crew</p>",
        "id": 213437718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773616
    },
    {
        "content": "<p>/me is unhappy that its releatively difficult to google for the syntax to invoke the ice breakers</p>",
        "id": 213437721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773617
    },
    {
        "content": "<p>yes, this probably went unnoticed because it was originally a <code>P-medium</code> issue</p>",
        "id": 213437732,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> rustbot ping cleanup ?</p>",
        "id": 213437744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773630
    },
    {
        "content": "<p>I think</p>",
        "id": 213437754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773634
    },
    {
        "content": "<p>e.g. links here are not useful: <a href=\"https://blog.rust-lang.org/inside-rust/2020/02/06/Cleanup-Crew-ICE-breakers.html\">https://blog.rust-lang.org/inside-rust/2020/02/06/Cleanup-Crew-ICE-breakers.html</a></p>",
        "id": 213437755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> right, my point is that we have a lot of pages talking about these groups</p>",
        "id": 213437856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773668
    },
    {
        "content": "<p>but very few of them include the syntax for actually doing the ping</p>",
        "id": 213437896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773682
    },
    {
        "content": "<p>should probably update <a href=\"https://rustc-dev-guide.rust-lang.org/notification-groups/cleanup-crew.html\">https://rustc-dev-guide.rust-lang.org/notification-groups/cleanup-crew.html</a></p>",
        "id": 213437934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773702
    },
    {
        "content": "<p>to include that info</p>",
        "id": 213437948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773706
    },
    {
        "content": "<p>and so googling is less useful than it could/should be. (That, and/or the page with the ping syntax needs better SEO)</p>",
        "id": 213437971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773714
    },
    {
        "content": "<p>I think in general you want <a href=\"https://rustc-dev-guide.rust-lang.org/notification-groups/about.html\">https://rustc-dev-guide.rust-lang.org/notification-groups/about.html</a></p>",
        "id": 213438000,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773729
    },
    {
        "content": "<p>and then this is a dead link: <a href=\"https://rustc-dev-guide.rust-lang.org/notifiation-groups/about.html#tagging-an-issue-for-a-notification-group\">https://rustc-dev-guide.rust-lang.org/notifiation-groups/about.html#tagging-an-issue-for-a-notification-group</a></p>",
        "id": 213438043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773747
    },
    {
        "content": "<p>hmm why did my url fail but <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> 's worked</p>",
        "id": 213438148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773774
    },
    {
        "content": "<p>notifiation</p>",
        "id": 213438165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773781
    },
    {
        "content": "<p>there's a typo</p>",
        "id": 213438172,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773785
    },
    {
        "content": "<p>the right link is <a href=\"https://rustc-dev-guide.rust-lang.org/notification-groups/about.html#tagging-an-issue-for-a-notification-group\">https://rustc-dev-guide.rust-lang.org/notification-groups/about.html#tagging-an-issue-for-a-notification-group</a></p>",
        "id": 213438184,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773788
    },
    {
        "content": "<p>omg the blog post had a typo</p>",
        "id": 213438185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773788
    },
    {
        "content": "<p>this blog post, I mean: <a href=\"https://blog.rust-lang.org/inside-rust/2020/02/06/Cleanup-Crew-ICE-breakers.html\">https://blog.rust-lang.org/inside-rust/2020/02/06/Cleanup-Crew-ICE-breakers.html</a></p>",
        "id": 213438216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773802
    },
    {
        "content": "<p>has a typo in its url</p>",
        "id": 213438224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773807
    },
    {
        "content": "<p>agh gotta love the web</p>",
        "id": 213438237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773814
    },
    {
        "content": "<p>anywya</p>",
        "id": 213438281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773830
    },
    {
        "content": "<p>there's work to be done on all sorts of levels here</p>",
        "id": 213438309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773839
    },
    {
        "content": "<p>but I'm not too worried</p>",
        "id": 213438321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773844
    },
    {
        "content": "<p>lets move along</p>",
        "id": 213438326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773845
    },
    {
        "content": "<ul>\n<li>\"Build hang on Linux with nightly and beta toolchains\" <a href=\"https://github.com/rust-lang/rust/issues/76980\">rust#76980</a><ul>\n<li>Unassigned</li>\n<li>Build hangs on beta</li>\n<li><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> bisected it to <a href=\"https://github.com/rust-lang/rust/pull/73526\">rust#73526</a></li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-695805807\">is not aware of any LLVM 11 issue like that </a></li>\n<li>A <a href=\"https://github.com/rust-lang/rust/pull/77642\">possible workaround was added</a> by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> but it doesn't seem to be confirmation if works or not.</li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> believes the real issue stems in PR <a href=\"https://github.com/rust-lang/rust/pull/74163\">rustc#74163</a></li>\n<li>There's a long technical analysis in the <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-705800997\">last comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 213438354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773858
    },
    {
        "content": "<p>(omg and we're almost out of time)</p>",
        "id": 213438402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773878
    },
    {
        "content": "<p>the workaround works</p>",
        "id": 213438473,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602773894
    },
    {
        "content": "<p>or at least, nobody reported this is affecting 1.47 stable</p>",
        "id": 213438492,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602773907
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 213438510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773915
    },
    {
        "content": "<p>that's great</p>",
        "id": 213438553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602773934
    },
    {
        "content": "<p>I plan to backport the same fix to 1.48, btw -- just haven't gotten around to it. I think there's some exploration on the issue about proper fixes though</p>",
        "id": 213438561,
        "sender_full_name": "simulacrum",
        "timestamp": 1602773937
    },
    {
        "content": "<p>but we probably should figure out  a better fix</p>",
        "id": 213438576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773944
    },
    {
        "content": "<p>namely, the workaround was to disable ThinLTO, right?</p>",
        "id": 213438600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773954
    },
    {
        "content": "<p>yes</p>",
        "id": 213438605,
        "sender_full_name": "simulacrum",
        "timestamp": 1602773959
    },
    {
        "content": "<p>okay</p>",
        "id": 213438636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213438185\">said</a>:</p>\n<blockquote>\n<p>omg the blog post had a typo</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/711\">https://github.com/rust-lang/blog.rust-lang.org/pull/711</a></p>",
        "id": 213438650,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602773975
    },
    {
        "content": "<p>(well shared linking which is on by default with thinlto)</p>",
        "id": 213438652,
        "sender_full_name": "simulacrum",
        "timestamp": 1602773976
    },
    {
        "content": "<p>main question is how high priority is this</p>",
        "id": 213438669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602773984
    },
    {
        "content": "<p>i.e. is it P-high or P-critical</p>",
        "id": 213438721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774001
    },
    {
        "content": "<p>We can keep backporting the fix to beta</p>",
        "id": 213438729,
        "sender_full_name": "simulacrum",
        "timestamp": 1602774002
    },
    {
        "content": "<p>I'm inclined to leave it P-high</p>",
        "id": 213438788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774009
    },
    {
        "content": "<p>can we .. open an issue for LLVM?</p>",
        "id": 213438789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602774010
    },
    {
        "content": "<p>it seems like we're likely to keep discussing it</p>",
        "id": 213438806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774014
    },
    {
        "content": "<p>either way</p>",
        "id": 213438812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774017
    },
    {
        "content": "<p>(do we believe this is an LLVM issue?)</p>",
        "id": 213438816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602774018
    },
    {
        "content": "<p>I don't think it's an llvm bug</p>",
        "id": 213438817,
        "sender_full_name": "simulacrum",
        "timestamp": 1602774018
    },
    {
        "content": "<p>linkers, if anything</p>",
        "id": 213438831,
        "sender_full_name": "simulacrum",
        "timestamp": 1602774024
    },
    {
        "content": "<p>oh, ok</p>",
        "id": 213438835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1602774026
    },
    {
        "content": "<p>so we are out of time</p>",
        "id": 213438963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774084
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 213438968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774085
    },
    {
        "content": "<p>there's one unassigned P-high nightly regression listed in agenda</p>",
        "id": 213439020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774107
    },
    {
        "content": "<p>and a performance log that reports a busy week without any major regressions</p>",
        "id": 213439090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774124
    },
    {
        "content": "<p>(and a nice performance boost from <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> in \"Separate projection bounds and predicates\" <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a> )</p>",
        "id": 213439178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774155
    },
    {
        "content": "<p>and one nominated issue that we're going to leave for next week</p>",
        "id": 213439218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774172
    },
    {
        "content": "<p>so that's all folks. Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending; sorry for letting the earlier topics slow us down so much!</p>",
        "id": 213439274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774194
    },
    {
        "content": "<p>(by the way, <a href=\"https://github.com/rust-lang/rust/issues/75982\">#75982</a> has <em>got</em> to be a stable-to-stable regression by now, right?)</p>",
        "id": 213439479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602774269
    },
    {
        "content": "<p>ohh I think so</p>",
        "id": 213439585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602774314
    },
    {
        "content": "<p>question, after releasing a new version, do we have something that changes nightly regressions tags to beta and beta to stable?</p>",
        "id": 213439665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602774347
    },
    {
        "content": "<p>I was assuming that something or some group does that, but maybe <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> should pay extra attention to that?</p>",
        "id": 213439751,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602774370
    },
    {
        "content": "<p>I think it’s done manually by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>?</p>",
        "id": 213439766,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1602774376
    },
    {
        "content": "<p>There was an issue on triagebot to add a new command to do that IIRC</p>",
        "id": 213439796,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1602774392
    },
    {
        "content": "<p>have created next week's agenda <a href=\"https://hackmd.io/yszFneboQA2gJ0qaG6pllw?both\">https://hackmd.io/yszFneboQA2gJ0qaG6pllw?both</a></p>",
        "id": 213440394,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602774678
    },
    {
        "content": "<p>we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> (which <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> and I need to fill) and from <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> (cc <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>)</p>",
        "id": 213440636,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1602774787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213378204\">said</a>:</p>\n<blockquote>\n<p>There haven't been a ton of people picking up new issues to work on [...]</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> regarding this part: do you need some new people working on issues? Just a random thought: would something as a blog post help? Although I'm not  sure, I see the stream #wg-async-foundations already has a lot of people subscribed</p>",
        "id": 213442972,
        "sender_full_name": "apiraino",
        "timestamp": 1602775618
    },
    {
        "content": "<p>(its certainly possible for a channel to have a large number of subscribers and yet still need more active <em>contributors</em> ...)</p>",
        "id": 213443188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1602775705
    },
    {
        "content": "<p>No one switches labels actively today</p>",
        "id": 213452554,
        "sender_full_name": "simulacrum",
        "timestamp": 1602779873
    },
    {
        "content": "<p>It's an active pain point but I've yet to find time to fix it</p>",
        "id": 213452610,
        "sender_full_name": "simulacrum",
        "timestamp": 1602779887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213433142\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Do not ICE with TraitPredicates containing [type error]\" <a href=\"https://github.com/rust-lang/rust/pull/77930\">rust#77930</a><ul>\n<li>Fixes a <code>P-medium</code> ICE <a href=\"https://github.com/rust-lang/rust/issues/77919\">rustc#77919</a> on resolving bounds after type-checking error</li>\n<li>cc <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>Sorry, don't want to spam. But was there a reason I was cced on this? <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 213454258,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602780544
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213454258\">said</a>:</p>\n<blockquote>\n<p>Sorry, don't want to spam. But was there a reason I was cced on this? <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I believe as suggested reviewer of that PR</p>",
        "id": 213455246,
        "sender_full_name": "apiraino",
        "timestamp": 1602781001
    },
    {
        "content": "<p>But I'm not?</p>",
        "id": 213455672,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602781179
    },
    {
        "content": "<p>right, you're not. so I guess just a copy&amp;paste error by our side (sorry about that) <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 213455850,
        "sender_full_name": "apiraino",
        "timestamp": 1602781244
    },
    {
        "content": "<p>No problem. I was just super confused</p>",
        "id": 213455891,
        "sender_full_name": "Jack Huey",
        "timestamp": 1602781260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213442972\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> regarding this part: do you need some new people working on issues? Just a random thought: would something as a blog post help? Although I'm not  sure, I see the stream #wg-async-foundations already has a lot of people subscribed</p>\n</blockquote>\n<p>it might help, yeah. my focus right now is on getting reviews and mentoring up to par before adding more contributors. but maybe adding more contributors would be a good forcing function :)</p>",
        "id": 213471335,
        "sender_full_name": "tmandry",
        "timestamp": 1602788070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213435877\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-15.20.2354818/near/213435815\">said</a>:</p>\n<blockquote>\n<p>I'd be curious to get a kind of survey/straw-poll</p>\n</blockquote>\n<p>like -- what are the reasons to do it, what are the reasons not to, and where do people roughly fall</p>\n</blockquote>\n<p>Sorry I don't know where else to leave this comment, but I think the main arguments that I have seen currently are:</p>\n<p>In favor:</p>\n<ul>\n<li>The <code>rustc_</code> directory prefix seems redundant given that all the crates are already in the <code>compiler</code> directory. This makes the paths longer to type, which some find annoying.</li>\n<li>The <code>rustc_</code> crate prefix seems makes a lot of the paths longer to type in the code.</li>\n<li>We observed small performance degradation by having the longer paths, and this might help to recoup some of that lost perf.</li>\n</ul>\n<p>Against:</p>\n<ul>\n<li>It would cause a lot of churn (basically all <code>use</code>s would change)</li>\n<li>Those using IDEs with autocomplete don't often need to type longer paths</li>\n<li>Some of the names are general enough that if we removed the <code>rustc_</code> prefix, it would not be clear which crates are rustc crates vs crates from <a href=\"http://crates.io\">crates.io</a>.</li>\n</ul>",
        "id": 213720526,
        "sender_full_name": "mark-i-m",
        "timestamp": 1603048183
    },
    {
        "content": "<p>I had a different idea in mind</p>",
        "id": 213720685,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603048393
    },
    {
        "content": "<p>I was hoping we could <em>only</em> rename the directories</p>",
        "id": 213720691,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603048403
    },
    {
        "content": "<p>and keep the <code>use</code> the same</p>",
        "id": 213720692,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603048406
    },
    {
        "content": "<p>I like <code>use rustc_ast</code>, I think that's exactly as clear as it needs to be</p>",
        "id": 213720698,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603048417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Would that mean having <code>compiler/ast</code>, but importing it as <code>rustc_ast</code>?</p>",
        "id": 213721089,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603048932
    },
    {
        "content": "<p>yes, that's my idea: <code>rustc_ast = { path = \"../ast\" }</code></p>",
        "id": 213721108,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603048965
    },
    {
        "content": "<p>summary to compare to <span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> 's writeup:</p>\n<p>In favor:</p>\n<ul>\n<li>Not much churn, only <code>Cargo.toml</code> would change, which is rarely edited anyway</li>\n<li>IDEs are not affected, paths will remain the same</li>\n<li>Since paths are the same, it will still be clear what's from rustc and what's an external crate</li>\n<li>all the other points Mark had in favor</li>\n</ul>\n<p>Against:</p>\n<ul>\n<li>The directory won't match the import</li>\n<li>It's another big renaming, which github doesn't follow well, causing merge conflicts</li>\n</ul>",
        "id": 213721278,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603049181
    },
    {
        "content": "<p>imho, it just seems like making things inconsistent for very little benefit</p>",
        "id": 213721624,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603049679
    },
    {
        "content": "<p>i think it's very useful to have the crate and directory name match</p>",
        "id": 213721630,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603049695
    },
    {
        "content": "<blockquote>\n<p>It's another big renaming, which github doesn't follow well, causing merge conflicts</p>\n</blockquote>\n<p>This is actually a pretty big concern for me. It doesn't seem like any of the benefits really outweigh this (for me at least)</p>",
        "id": 213721839,
        "sender_full_name": "Jack Huey",
        "timestamp": 1603049974
    },
    {
        "content": "<p>I think it would be great to pull the above text into a hackmd</p>",
        "id": 213792634,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603117381
    },
    {
        "content": "<p>Done: <a href=\"https://hackmd.io/1FgS1fZGSOyWrwhDMq98pw\">hackmd link</a></p>",
        "id": 213793373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603117681
    },
    {
        "content": "<p>I'll file a design meeting proposal I think</p>",
        "id": 213793440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603117691
    },
    {
        "content": "<p>i think using separate names for the crate and for the import is going to cause more confusion than the current system we have</p>",
        "id": 214054123,
        "sender_full_name": "DPC",
        "timestamp": 1603289157
    }
]