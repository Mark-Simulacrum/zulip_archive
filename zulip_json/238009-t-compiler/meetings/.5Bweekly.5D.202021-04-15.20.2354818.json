[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/8vxPKnHtRqm481lSI5WmqQ?view\">meeting agenda</a></p>\n<p>We will have checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>  checkin by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  (anything to share?)</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>  checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>  and <code>michaelwoerister</code> (anything to share?)</li>\n</ul>",
        "id": 234664272,
        "sender_full_name": "apiraino",
        "timestamp": 1618488984
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; triage meeting is starting now, add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here!</p>",
        "id": 234680477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495272
    },
    {
        "content": "<p>We'll start off with 7 minutes or so for </p>\n<h2>Announcements</h2>",
        "id": 234680574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495304
    },
    {
        "content": "<p>You really have to listen for those zulip notifications, they are so easy to miss when there's music playing.</p>",
        "id": 234680609,
        "sender_full_name": "nagisa",
        "timestamp": 1618495318
    },
    {
        "content": "<ul>\n<li>Heads-up: meeting for <a href=\"https://github.com/rust-lang/compiler-team/issues/400\">perf triage report construction</a> is pushed to <strong>April, 30th</strong> at 10am EST (14:00 UTC) (originally scheduled for tomorrow April, 16th).</li>\n</ul>",
        "id": 234680657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495324
    },
    {
        "content": "<p>(which reminds me, I need to put up an inside rust blog post announcing the steering meetings)</p>",
        "id": 234680771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495356
    },
    {
        "content": "<h3>MCP/FCP states</h3>",
        "id": 234680876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495386
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 234680900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495392
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></li>\n<li>\"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></li>\n<li>\"Embed version numbers in backport nominations and regression labels\" <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"Eagerly construct bodies of THIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/409\">compiler-team#409</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"Rename -Cllvm-args to something backend agnostic\" <a href=\"https://github.com/rust-lang/compiler-team/issues/421\">compiler-team#421</a></li>\n<li>\"A --temps-dir option for specifying where the intermediate files are written\" <a href=\"https://github.com/rust-lang/compiler-team/issues/423\">compiler-team#423</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234680950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495405
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Add default search path to <code>Target::search()</code>\" <a href=\"https://github.com/rust-lang/rust/pull/83800\">rust#83800</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234681001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495422
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Update the existing musl targets to be dynamically linked.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">compiler-team#422</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234681046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495434
    },
    {
        "content": "<p>There was a 5th RC tag for LLVM 12.0 this week. So the release tag should be real close™ now.</p>",
        "id": 234681067,
        "sender_full_name": "nagisa",
        "timestamp": 1618495440
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Lang Item for Transmutability\" <a href=\"https://github.com/rust-lang/compiler-team/issues/411\">compiler-team#411</a></li>\n<li>\"Switch JSON serialization from rustc_serialize to serde\" <a href=\"https://github.com/rust-lang/compiler-team/issues/418\">compiler-team#418</a></li>\n<li>\"Lint large assignments and locals\" <a href=\"https://github.com/rust-lang/compiler-team/issues/420\">compiler-team#420</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234681201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495473
    },
    {
        "content": "<ul>\n<li>Closed MCPs for inactivity (<a href=\"https://forge.rust-lang.org/compiler/mcp.html#when-should-major-change-proposals-be-closed\">policy</a>)<ul>\n<li>Do not traverse the HIR to generate metadata <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#342</a></li>\n<li>Embed version numbers in backport nominations and regression labels <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n<li>Debuggable Macro Expansions <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234681255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495490
    },
    {
        "content": "<p>(I wanted to highlight that last bullet because its new this week; I want to make sure the team is aware of when MCP's get closed due to inactivity.)</p>",
        "id": 234681391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495537
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for <code>Duration::{zero, is_zero}</code> (<code>#![feature(duration_zero)]</code>)\" <a href=\"https://github.com/rust-lang/rust/issues/73544\">rust#73544</a></li>\n<li>\"Tracking Issue for <code>Duration</code> saturating operations\" <a href=\"https://github.com/rust-lang/rust/issues/76416\">rust#76416</a></li>\n<li>\"Tracking Issue for feature: \"option_insert\"\" <a href=\"https://github.com/rust-lang/rust/issues/78271\">rust#78271</a></li>\n<li>\"Tracking Issue for <code>atomic_fetch_update</code>\" <a href=\"https://github.com/rust-lang/rust/issues/78639\">rust#78639</a></li>\n<li>\"Tracking Issue for <code>#![feature(const_cell_into_inner)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/78729\">rust#78729</a></li>\n<li>\"Tracking Issue for {BTreeMap,BTreeSet}::retain\" <a href=\"https://github.com/rust-lang/rust/issues/79025\">rust#79025</a></li>\n<li>\"Tracking Issue for feature(nonzero_leading_trailing_zeros)\" <a href=\"https://github.com/rust-lang/rust/issues/79143\">rust#79143</a></li>\n<li>\"Tracking issue: fNN::is_subnormal\" <a href=\"https://github.com/rust-lang/rust/issues/79288\">rust#79288</a></li>\n<li>\"Stabilize <code>rustdoc::bare_urls</code> lint\" <a href=\"https://github.com/rust-lang/rust/pull/81764\">rust#81764</a></li>\n<li>\"Turn old edition lint (anonymous-parameters) into warn-by-default on 2015\" <a href=\"https://github.com/rust-lang/rust/pull/82918\">rust#82918</a></li>\n<li>\"Disallow octal format in Ipv4 string\" <a href=\"https://github.com/rust-lang/rust/pull/83652\">rust#83652</a></li>\n<li>\"Remove <code>T: Debug</code> bound on UnsafeCell Debug impl\" <a href=\"https://github.com/rust-lang/rust/pull/83707\">rust#83707</a></li>\n</ul>\n</li>\n</ul>",
        "id": 234681484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495564
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 234681523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495576
    },
    {
        "content": "<ul>\n<li>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> checkin by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>\n</li>\n<li>\n<p>Conveniently, we just finished a six-week sprint<br>\n    * old sprint: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/7838\">https://github.com/rust-analyzer/rust-analyzer/issues/7838</a><br>\n    * new sprint: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8486\">https://github.com/rust-analyzer/rust-analyzer/issues/8486</a></p>\n</li>\n<li>We now support derive and function-like proc macros by default</li>\n<li>\n<p>Supprot for attribute proc-macros is the last big bit until we have \"feature parity\" with rustc (<br>\n  well, was before min-const-generics were stabilized :-)</p>\n</li>\n<li>\n<p>We switched to chalk's representation on types!</p>\n</li>\n<li>We significantly reduced memory usage of rust-analyzer (finally!)</li>\n</ul>\n<p>Overall, there's a feeling that rust-analyzer becomes less and less experimental, and more a dependable piece of Rust tooling. So, we want to focus on quality next: fixing glaring bugs, tidying up the internals, and, hopefully, moving forward with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2912-rust-analyzer.md\">RFC 2912</a>.</p>\n<p>Sadly, there's still not much concrete progress on sharning more code between rustc and rust-analyzer, besides the chalk work.</p>",
        "id": 234681547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495584
    },
    {
        "content": "<blockquote>\n<p>\"Stabilize rustdoc::bare_urls lint\" <a href=\"https://github.com/rust-lang/rust/issues/81764\">rust#81764</a></p>\n</blockquote>\n<p>(this was already merged)</p>",
        "id": 234681579,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618495594
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and <code>michaelwoerister</code></li>\n</ul>",
        "id": 234681597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495600
    },
    {
        "content": "<p>Can you come back to us at the end of the meeting?</p>",
        "id": 234681649,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618495618
    },
    {
        "content": "<p>no problem</p>",
        "id": 234681666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495624
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 234681697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495636
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"move new c abi abort behavior behind feature gate\" <a href=\"https://github.com/rust-lang/rust/pull/84158\">rust#84158</a><ul>\n<li>pnkfelix nominated. They're not sure where the regression to beta is being tracked, if at all.</li>\n<li>the discussion on <a href=\"#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231848968\">#t-release&gt;<code>\"C\"</code> unwind issue for release 1.52</a>  indicated that we would <em>either</em> backport this fix (PR <a href=\"https://github.com/rust-lang/rust/issues/84158\">#84158</a>), or we would revert PR <a href=\"https://github.com/rust-lang/rust/issues/76570\">#76570</a> on beta. That is the choice before us.</li>\n</ul>\n</li>\n</ul>",
        "id": 234681707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495641
    },
    {
        "content": "<p>darn it I got the link wrong in the above.</p>",
        "id": 234681876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495693
    },
    {
        "content": "<p>(or maybe a zulip bug somewhere? that was what autocompleted. I'll make a manual link to : <a href=\"#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231848968\">https://rust-lang.zulipchat.com/#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231848968</a> )</p>",
        "id": 234682131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495775
    },
    {
        "content": "<p>Is there a summary of what each option would mean?</p>",
        "id": 234682364,
        "sender_full_name": "simulacrum",
        "timestamp": 1618495842
    },
    {
        "content": "<p>The change looks small but the behavior change is subtle.</p>",
        "id": 234682426,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1618495865
    },
    {
        "content": "<p>I think without knowing more, I would prefer to match master and beta behavior, applying a backport of the fix.</p>",
        "id": 234682505,
        "sender_full_name": "simulacrum",
        "timestamp": 1618495904
    },
    {
        "content": "<p>Is this the right summary:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/76570\">https://github.com/rust-lang/rust/pull/76570</a>, which implements the \"C-unwind\" ABI, also changes the behavior of the \"C\" ABI, re-introducing the abort-on-unwind logic once more. However, while \"C-unwind\" is behind a feature flag, the abort-on-unwind logic is not.</p>\n<p>We will be working on a PR to put the change to the \"C\" ABI behavior behind the \"C-unwind\" feature flag</p>\n</blockquote>",
        "id": 234682726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495982
    },
    {
        "content": "<p>(taken from first message from topic linked above)</p>",
        "id": 234682759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618495993
    },
    {
        "content": "<p>Yeah, that seems like the fix PR is good to backport.</p>",
        "id": 234682834,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496018
    },
    {
        "content": "<p>I’d be inclined to revert the original PR</p>",
        "id": 234682952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1618496046
    },
    {
        "content": "<p>I admit, I'm having a hard time understanding what the value-add of the original PR (with or without its fix) is on the beta and stable branches.</p>",
        "id": 234683138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496111
    },
    {
        "content": "<p>if I’m reading it correctly (on the cellphone) is introducing new behavior, so maybe better to have the fix on master and leave all that together to ride the trains</p>",
        "id": 234683147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1618496115
    },
    {
        "content": "<p>Yeah, I think it probably doesn't matter</p>",
        "id": 234683282,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496160
    },
    {
        "content": "<p>arguably we should have had this conversation with that WG back when they first said they were going to rush to get this fix ready for a beta backport</p>",
        "id": 234683284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496161
    },
    {
        "content": "<p>oh, I see, there was this specified: <a href=\"#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231905627\">https://rust-lang.zulipchat.com/#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231905627</a></p>",
        "id": 234683457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120076\">BatmanAoD (Kyle Strand)</span> <a href=\"#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231905627\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/.60.22C.22.60.20unwind.20issue.20for.20release.201.2E52/near/231849996\">said</a>:</p>\n<blockquote>\n<p>Is there a downside to just reverting immediately on beta? If it's feature flag'd already?</p>\n</blockquote>\n<p>The only downside is that the new behavior for <code>\"C-unwind\"</code> is essentially a sound version of the current <code>\"C\"</code> behavior, which is currently unsound (<a href=\"https://github.com/rust-lang/rust/issues/63943\">https://github.com/rust-lang/rust/issues/63943</a>). So the patch we will be writing will actually make the <code>\"C\"</code> behavior use the new <code>\"C-unwind\"</code> behavior, which will silently fix some UB until <code>\"C-unwind\"</code> itself lands.</p>\n</blockquote>",
        "id": 234683512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496228
    },
    {
        "content": "<p>The patch (<a href=\"https://github.com/rust-lang/rust/issues/84158\">#84158</a>) seems pretty conservative in behavior to me so I think I would vote to backport <a href=\"https://github.com/rust-lang/rust/issues/84158\">#84158</a> instead of trying to revert the original PR.</p>",
        "id": 234683612,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618496270
    },
    {
        "content": "<p>So the benefit of the backport is that it makes \"C\" behave like the new \"C-unwind\", which will fix some bugs for some users...? But then those users will have to switch to \"C-unwind\" when that becomes available.</p>",
        "id": 234683630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496276
    },
    {
        "content": "<p>“So I'd go either for immediate revert (yes that will re-introduce <a href=\"https://github.com/rust-lang/rust/issues/63943\">#63943</a> but we've lived with that bug for years), or a patch that makes <code>extern \"C\"</code> functions \"allow unwind\" both <a href=\"https://github.com/rust-lang/rust/pull/76570/files#diff-596bb4000aae6e6b37927544992b2bdf7e7ac5bad13ea2becadb4cc2638fa2acL564\">here</a> and <a href=\"https://github.com/rust-lang/rust/pull/76570/files#diff-b0320c2b8868f325d83c027fc5d71732636e9763551e35895488f30fe057c6e9L2599\">here</a> -- but honestly at this point that seems riskier than a \"go back to the known-to-kind-of-work previous state\" revert”</p>",
        "id": 234683782,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1618496311
    },
    {
        "content": "<p>that’s kind of my reasoning too</p>",
        "id": 234683886,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1618496362
    },
    {
        "content": "<p>I guess the question in my mind is: Backporting the fix is a way to deliver a fix for the developers that are currently running into <a href=\"https://github.com/rust-lang/rust/issues/63943\">#63943</a></p>",
        "id": 234683983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496401
    },
    {
        "content": "<p>but it also sets them up for dissapointment later when they have to switch to \"C-unwind\"</p>",
        "id": 234684056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496417
    },
    {
        "content": "<p>Would that forward change be a break of backcompat?</p>",
        "id": 234684142,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1618496451
    },
    {
        "content": "<p>And this change, I assume, runs the risk of regressing performance for some current users of <code>extern \"C\"</code> ?</p>",
        "id": 234684169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496461
    },
    {
        "content": "<p>Hm, I'm surprised the fix changes behavior for \"C\", tbh</p>",
        "id": 234684182,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496465
    },
    {
        "content": "<p>I would've expected a revert to the old behavior</p>",
        "id": 234684208,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496474
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234684182\">said</a>:</p>\n<blockquote>\n<p>Hm, I'm surprised the fix changes behavior for \"C\", tbh</p>\n</blockquote>\n<p>that's the claim from the dialogue. Let me re-read the patch</p>",
        "id": 234684235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496485
    },
    {
        "content": "<p>The deciding factor for me is that (AFAIK) there isn't a way on stable to get the behavior of \"C-unwind\". So this unbreaks those developers without requiring them to move to nightly.</p>",
        "id": 234684268,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618496496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> but they were broken for many releases already?</p>",
        "id": 234684307,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496509
    },
    {
        "content": "<p>like, we could have always removed the nounwind attr or whatever</p>",
        "id": 234684333,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496520
    },
    {
        "content": "<p>Ah, that's fair.</p>",
        "id": 234684420,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618496532
    },
    {
        "content": "<p>so it seems odd that the presence o c-unwind makes us willing to do that</p>",
        "id": 234684433,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496534
    },
    {
        "content": "<p>(now, it's a separate point whether that was the right call early on, and we can certainly change it)</p>",
        "id": 234684489,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496555
    },
    {
        "content": "<p>Is my summary from the dialogue just wrong?</p>",
        "id": 234684492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496556
    },
    {
        "content": "<p>So - I'd like to suggest - we still have some time. Maybe we should move on and ask the project group to come back with a summary of the pros/cons and why the choices made were made?</p>",
        "id": 234684616,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496599
    },
    {
        "content": "<p>We can discuss again next week.</p>",
        "id": 234684638,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496606
    },
    {
        "content": "<p>do we have that much time?</p>",
        "id": 234684649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496608
    },
    {
        "content": "<p>release is may 6th</p>",
        "id": 234684682,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496621
    },
    {
        "content": "<p>so I think so</p>",
        "id": 234684687,
        "sender_full_name": "simulacrum",
        "timestamp": 1618496623
    },
    {
        "content": "<p>3 weeks, okay.</p>",
        "id": 234684696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234684169\">said</a>:</p>\n<blockquote>\n<p>And this change, I assume, runs the risk of regressing performance for some current users of <code>extern \"C\"</code> ?</p>\n</blockquote>\n<p>I guess this claim can't be right. Or at least, its not like its regressing performance in a way that we would be planning to fix.</p>",
        "id": 234684993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496727
    },
    {
        "content": "<p>okay, moving on</p>",
        "id": 234685062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496749
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 234685080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496757
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 234685130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496764
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">63 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">39 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 2 P-high, 4 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 1 P-high, 4 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 38 P-high, 86 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 234685156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496776
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 234685194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496786
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 234685219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496793
    },
    {
        "content": "<ul>\n<li>\"<code>probe-stack=inline-asm</code> generates wrong DWARF information\" <a href=\"https://github.com/rust-lang/rust/issues/83139\">rust#83139</a><ul>\n<li>partially mitigated by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> in PR <a href=\"https://github.com/rust-lang/rust/pull/83412\">#82412</a>, which reverts PR <a href=\"https://github.com/rust-lang/rust/pull/77885\">#77885</a></li>\n<li>backporting LLVM patch <a href=\"https://reviews.llvm.org/D99579\">D99579</a> as partial solution</li>\n</ul>\n</li>\n</ul>",
        "id": 234685238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496800
    },
    {
        "content": "<p>upstream LLVM bug is probably also useful (for tracking ongoing progress): <a href=\"https://bugs.llvm.org/show_bug.cgi?id=49600\">https://bugs.llvm.org/show_bug.cgi?id=49600</a></p>",
        "id": 234685403,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496866
    },
    {
        "content": "<p>but then again, that's had less activity than D99579 ... <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 234685460,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> any thoughts on what might happen here? My revert PR <a href=\"https://github.com/rust-lang/rust/issues/82412\">#82412</a> was targetted only on the 1.51 stable branch</p>",
        "id": 234685667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496950
    },
    {
        "content": "<p>so probably \"need\" to backport D99579 soon, and then also backport it to beta.</p>",
        "id": 234685715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496968
    },
    {
        "content": "<p>Right, I think that's probably best way forward.</p>",
        "id": 234685766,
        "sender_full_name": "nagisa",
        "timestamp": 1618496986
    },
    {
        "content": "<p>beyond that, though, I cannot tell if there's been any work on completing the solution here</p>",
        "id": 234685789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618496996
    },
    {
        "content": "<p>(on the LLVM side, that is)</p>",
        "id": 234685809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497001
    },
    {
        "content": "<p>/me stars the message to not forget</p>",
        "id": 234685873,
        "sender_full_name": "nagisa",
        "timestamp": 1618497008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> do you want to handle the backport of D99579 to rust's llvm? Or shall I do it?</p>",
        "id": 234685941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497028
    },
    {
        "content": "<p>There has not been any activity since last week on LLVM side since the last update.</p>",
        "id": 234685953,
        "sender_full_name": "nagisa",
        "timestamp": 1618497032
    },
    {
        "content": "<p>I can handle the backport.</p>",
        "id": 234685973,
        "sender_full_name": "nagisa",
        "timestamp": 1618497040
    },
    {
        "content": "<p>okay thanks</p>",
        "id": 234685987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497043
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 234686021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497052
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-04-13.md\">2021-04-13 full triage logs</a></p>\n</blockquote>\n<p>A very quiet week overall. Triage done by <strong>@simulacrum</strong>.</p>\n<p>1 Regressions, 0 Improvements, 0 Mixed, 0 of them in rollups</p>",
        "id": 234686045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497057
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Update stdarch submodule (to before it switched to const generics) <a href=\"https://github.com/rust-lang/rust/issues/83776\">#83776</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1284da34da56a17ae368e4673920ec4120562cbd&amp;end=d0695c9081b16077d0aed368bccaf437d77ff497&amp;stat=instructions:u\">instruction counts</a> (up to 6.3% on <code>incr-unchanged</code> builds of <code>deeply-nested-closures-debug</code>)</li>\n<li>Mostly a regression for doc benchmarks, but also a 1.5% regression in memory<br>\n  usage on check, debug, and opt builds across all benchmarks.</li>\n</ul>",
        "id": 234686070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497069
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>None</li>\n</ul>\n<h4>Mixed</h4>\n<ul>\n<li>None</li>\n</ul>",
        "id": 234686094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497077
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>The <a href=\"https://github.com/rust-lang/rust/pull/82964#issuecomment-800663588\">issue</a> from three weeks ago has stalled.<br>\n  Likely this needs someone to mentor the author, or to take over the<br>\n  investigation.</li>\n</ul>",
        "id": 234686109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497083
    },
    {
        "content": "<p>should we file an outright bug about the diesel-doc ~30% regression ?</p>",
        "id": 234686296,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497136
    },
    {
        "content": "<p>Let me self-assign <a href=\"https://github.com/rust-lang/rustc-perf/issues/854\">https://github.com/rust-lang/rustc-perf/issues/854</a> at least</p>",
        "id": 234686492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497195
    },
    {
        "content": "<p>hmm I guess I can't do that. :)</p>",
        "id": 234686548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can I get added to a group for rustc-perf ?</p>",
        "id": 234686743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497264
    },
    {
        "content": "<p>hm, yeah, should be the wg-compiler-performance group</p>",
        "id": 234686794,
        "sender_full_name": "simulacrum",
        "timestamp": 1618497281
    },
    {
        "content": "<p>I can add you</p>",
        "id": 234686802,
        "sender_full_name": "simulacrum",
        "timestamp": 1618497284
    },
    {
        "content": "<p>oh maybe I'm not on that team</p>",
        "id": 234686825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497293
    },
    {
        "content": "<p>okay</p>",
        "id": 234686831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497296
    },
    {
        "content": "<p>next up</p>",
        "id": 234686876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497310
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 234686904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497318
    },
    {
        "content": "<ul>\n<li>\"<code>undefined reference to</code> linker error when using dylibs\" <a href=\"https://github.com/rust-lang/rust/issues/82151\">rust#82151</a><ul>\n<li>(postponed from previous meetings)</li>\n</ul>\n</li>\n</ul>",
        "id": 234686923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497326
    },
    {
        "content": "<p>(I've been looking into this a bit. Mostly wondering if we could improve our diagnostic output. and do better job documenting semantics for various target types.)</p>",
        "id": 234687082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497367
    },
    {
        "content": "<p>I'm not sure it needs to remain nominated, apart from the fact that visiting it each week reminds me that I would like to do something about our dylib story.</p>",
        "id": 234687279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497428
    },
    {
        "content": "<p>i'll unnominate</p>",
        "id": 234687330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497444
    },
    {
        "content": "<ul>\n<li>\"no_std: binary size blowup using Result::unwrap since 1.49.0\" <a href=\"https://github.com/rust-lang/rust/issues/83925\">rustc#83925</a><ul>\n<li>size of final binary exceeding the limit for deployment on an embedded tier2 platform (<code>thumbv7em-none-eabi</code>)</li>\n<li>unsure how to treat this</li>\n</ul>\n</li>\n</ul>",
        "id": 234687473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497489
    },
    {
        "content": "<p>this was bisected further by <span class=\"user-mention\" data-user-id=\"249694\">@eggyal</span> : \"Bisected this regression to nightly-2020-10-17.\"</p>",
        "id": 234687577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497530
    },
    {
        "content": "<p>looks like a failure to eliminate formatting machinery.</p>",
        "id": 234687648,
        "sender_full_name": "nagisa",
        "timestamp": 1618497556
    },
    {
        "content": "<p>I don't think we reasonably guarantee that optimizer will always do this in all situations forever to come.</p>",
        "id": 234687719,
        "sender_full_name": "nagisa",
        "timestamp": 1618497587
    },
    {
        "content": "<p>hmm</p>",
        "id": 234687753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497599
    },
    {
        "content": "<p>But still good to see what happened to make this become worse and decide then if we can act on this.</p>",
        "id": 234687943,
        "sender_full_name": "nagisa",
        "timestamp": 1618497635
    },
    {
        "content": "<p>heres what landed between 16 Oct and 17 Oct:</p>\n<div class=\"codehilite\"><pre><span></span><code>e3051d8c24467b54c81da9d9ad70a3e82e106ec1 Auto merge of #78028 - JohnTitor:rollup-jt3hikb, r=JohnTitor\n5a51185fd4600e96cc79a3db9da3c4bf927f2281 Auto merge of #78023 - RalfJung:miri, r=RalfJung\na78a62fc996ba16f7a111c99520b23f77029f4eb Auto merge of #77972 - Mark-Simulacrum:side-effect-loop, r=nagisa\n8850893d96252172700727fe9e746c8e1ebd5853 Auto merge of #77850 - kornelski:resizedefault, r=dtolnay\n6999ff33c9234b04cf5273497546b6a878bdb349 Auto merge of #77809 - nasso:master, r=jyn514,guillaumegomez\n95b4a4f0eee935f9e0c80b0ceef34866bcb72ca3 Auto merge of #77666 - fusion-engineering-forks:vxworks-cleanup, r=dtolnay\n8e6f69afc9b0943003ce51a53d1f59611e6601a3 Auto merge of #77962 - bugadani:arena2, r=Mark-Simulacrum\n9bd740a8f17d75168b683bcfb077b6e450047df5 Auto merge of #77947 - tmiasko:promoted-scope, r=oli-obk\nb6e2dc6cdece6b498b876bc7e9377ff7d63d93e7 Auto merge of #78001 - Dylan-DPC:rollup-zq3kxth, r=Dylan-DPC\n</code></pre></div>",
        "id": 234688057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497677
    },
    {
        "content": "<p>nothing jumps out at me</p>",
        "id": 234688211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497727
    },
    {
        "content": "<p>side-effect-loop seems potentially related.</p>",
        "id": 234688214,
        "sender_full_name": "nagisa",
        "timestamp": 1618497729
    },
    {
        "content": "<p>oh maybe</p>",
        "id": 234688240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497737
    },
    {
        "content": "<p>that's an interesting theory</p>",
        "id": 234688253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497743
    },
    {
        "content": "<p>anyway</p>",
        "id": 234688260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497747
    },
    {
        "content": "<p>do you think there's any hope of us dead-code-eliminating the formatting machinery on our end?</p>",
        "id": 234688321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497768
    },
    {
        "content": "<p>(otherwise, what, provide users with easy way to strip it, I guess.)</p>",
        "id": 234688385,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497789
    },
    {
        "content": "<p>If that's what caused the bug and LLVM12 does not fix this with its fixed forward-progress-guarantee story, then I don't think there's going to be an easy way out for this one.</p>",
        "id": 234688481,
        "sender_full_name": "nagisa",
        "timestamp": 1618497826
    },
    {
        "content": "<p>hmm</p>",
        "id": 234688571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497848
    },
    {
        "content": "<p>It would be good to do a commit bisection, if that's still in range, or maybe building from scratch locally if necessary</p>",
        "id": 234688592,
        "sender_full_name": "simulacrum",
        "timestamp": 1618497854
    },
    {
        "content": "<p>There was some chatter yesterday with some PR trying to add Rust support to Linux kernel, and Linus Torvalds noting that it would be a no-go with the way allocation failures were handled</p>",
        "id": 234688690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497886
    },
    {
        "content": "<p>But I would definitely appreciate a feature flag for <code>core</code> that prevented any formatting machinery from existing.</p>",
        "id": 234688718,
        "sender_full_name": "nagisa",
        "timestamp": 1618497899
    },
    {
        "content": "<p>it has been a routine pain point for anybody doing any embedded.</p>",
        "id": 234688743,
        "sender_full_name": "nagisa",
        "timestamp": 1618497908
    },
    {
        "content": "<p>that got my mind wondering about whether we would eventually want a <code>std</code> variant that returns <code>Result</code> for a lot more stuff</p>",
        "id": 234688778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618497918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> you mean falling back to it doing nothing?</p>",
        "id": 234688861,
        "sender_full_name": "simulacrum",
        "timestamp": 1618497946
    },
    {
        "content": "<p>Maybe? I was thinking <code>cfg</code>-out the entire <code>fmt</code> module and then every expression that invokes it in any way.</p>",
        "id": 234689041,
        "sender_full_name": "nagisa",
        "timestamp": 1618497991
    },
    {
        "content": "<p>hm, ok, well, let's not discuss here :)</p>",
        "id": 234689101,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498009
    },
    {
        "content": "<p>anyway it seems like something that might be worthy of an RFC or MCP</p>",
        "id": 234689161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498031
    },
    {
        "content": "<p>(nagisa's suggestion, that is)</p>",
        "id": 234689206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498039
    },
    {
        "content": "<p>moving along</p>",
        "id": 234689255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498056
    },
    {
        "content": "<p>oh, so, I think the question is also of how to prioritize <a href=\"https://github.com/rust-lang/rust/issues/83925\">#83925</a></p>",
        "id": 234689308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498081
    },
    {
        "content": "<p>I'm guessing P-medium</p>",
        "id": 234689448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498114
    },
    {
        "content": "<p>I think a confirmation of loop {} being the cause would be good</p>",
        "id": 234689472,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498122
    },
    {
        "content": "<p>it might be that it's just fixed on nightly with llvm 12?</p>",
        "id": 234689489,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498130
    },
    {
        "content": "<p>right. we should probably post feedback about next steps</p>",
        "id": 234689502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498141
    },
    {
        "content": "<p>but my point is that I don't think any of us should be losing sleep over it.</p>",
        "id": 234689535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498156
    },
    {
        "content": "<p>(or getting distracted, for that matter)</p>",
        "id": 234689546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498164
    },
    {
        "content": "<p>(distracted beyond trying to help the issue participants make fwd progress.)</p>",
        "id": 234689577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498182
    },
    {
        "content": "<p>anyway I'm going with P-medium</p>",
        "id": 234689622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498199
    },
    {
        "content": "<p>next up</p>",
        "id": 234689628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498202
    },
    {
        "content": "<p>I'll followup.</p>",
        "id": 234689682,
        "sender_full_name": "nagisa",
        "timestamp": 1618498208
    },
    {
        "content": "<ul>\n<li>\"Disk usage 2-3x somewhere around 1.48\" <a href=\"https://github.com/rust-lang/rust/issues/84097\">rustc##84097</a><ul>\n<li>Debian maintainer reports substancial increasing disk space when building rustc, across recent stable releases, build config is unchanged.</li>\n<li>issue reporter mentions that possibly debuginfo-related - the architectures using the least space have <code>debuginfo-level = 0 </code>due to <a href=\"https://github.com/rust-lang/rust/issues/45854\">#45854</a>, generally the 32-bit.</li>\n<li>disk space metrics are not really measured on <a href=\"https://perf.rust-lang.org/dashboard.html\">perf.rlo</a></li>\n<li>unsure how to treat this class of issues involving disk space usage</li>\n</ul>\n</li>\n</ul>",
        "id": 234689687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498210
    },
    {
        "content": "<p>3x blowup is a bummer</p>",
        "id": 234689821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498259
    },
    {
        "content": "<p>more than 3x  in some listed cases, actually</p>",
        "id": 234689859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498278
    },
    {
        "content": "<p>I still have a vague suspicion that this is a rustbuild, not rustc, change</p>",
        "id": 234689879,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498287
    },
    {
        "content": "<p>(e.g., we happen to cache more)</p>",
        "id": 234689898,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498294
    },
    {
        "content": "<p>ppc64 when from 8.12 GB in 1.47 to 35.1 GB, for example</p>",
        "id": 234689902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498295
    },
    {
        "content": "<p>but without additional investigation hard to say</p>",
        "id": 234689965,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498313
    },
    {
        "content": "<p>we probably should prioritize looking at this, rightZ?</p>",
        "id": 234690082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498349
    },
    {
        "content": "<p>or</p>",
        "id": 234690111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498359
    },
    {
        "content": "<p>hmm</p>",
        "id": 234690118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498361
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> are these intermediate build products kept around in our own storage?</p>",
        "id": 234690156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498375
    },
    {
        "content": "<p>No, CI uploads only dist artifacts</p>",
        "id": 234690185,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498386
    },
    {
        "content": "<p>or do we discard them and just retain the distribution portions?</p>",
        "id": 234690187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498386
    },
    {
        "content": "<p>if that's what you mean</p>",
        "id": 234690194,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498389
    },
    {
        "content": "<p>okay</p>",
        "id": 234690198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498390
    },
    {
        "content": "<p>yeah that's exactly what I meant</p>",
        "id": 234690204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498394
    },
    {
        "content": "<p>so its not <em>quite</em> as high priority for us internally</p>",
        "id": 234690238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498405
    },
    {
        "content": "<p>(and indeed our CI bucket does not show any unexpected increase)</p>",
        "id": 234690250,
        "sender_full_name": "simulacrum",
        "timestamp": 1618498409
    },
    {
        "content": "<p>okay well</p>",
        "id": 234690335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498442
    },
    {
        "content": "<p>I <em>think</em> I'm willing to call this P-high</p>",
        "id": 234690390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498452
    },
    {
        "content": "<p>also, I want to make sure <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> has time to report from wg-self-profile</p>",
        "id": 234690422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498463
    },
    {
        "content": "<p>There's not really anything to report for wg-self-profile. It's been a quiet month &amp; a half since the last update. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 234690510,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618498491
    },
    {
        "content": "<p>(for <a href=\"https://github.com/rust-lang/rust/issues/84097\">#84097</a>, I think our internal action item should be to start tracking + reporting disk usage )</p>",
        "id": 234690571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498512
    },
    {
        "content": "<blockquote>\n<p>debuginfo-level = 2</p>\n</blockquote>\n<p>I wonder how much of that disk space is debug info?</p>",
        "id": 234690654,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618498542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> oh, okay, that was easy. :)</p>",
        "id": 234690658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234690654\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>debuginfo-level = 2</p>\n</blockquote>\n<p>I wonder how much of that disk space is debug info?</p>\n</blockquote>\n<p>yeah they didn't give numbers; just said that the ones with the least problem were setting debuginfo=0</p>",
        "id": 234690779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498570
    },
    {
        "content": "<p>I had to go check to make sure I wasn't forgetting anything :)</p>",
        "id": 234690804,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618498577
    },
    {
        "content": "<p>there was one more thing I wanted to mentino</p>",
        "id": 234690837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498588
    },
    {
        "content": "<p>there's been some discussion of the MUSL mcp</p>",
        "id": 234690858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498597
    },
    {
        "content": "<p><a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Update.20the.20existing.20musl.20targets.20to.20be.20dy.E2.80.A6.20compiler-team.23422\">#t-compiler/major changes &gt; Update the existing musl targets to be dy… compiler-team#422</a></p>",
        "id": 234690927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498627
    },
    {
        "content": "<p>there has been some concern expressed about breakage, but I think its mostly about us not being able to predict the breakage?</p>",
        "id": 234691011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498652
    },
    {
        "content": "<p>and that people won't pay attention to warning lints</p>",
        "id": 234691050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498667
    },
    {
        "content": "<p>part of the problem, IMO, is that the cargo report-future-incompat infrastructure is still unstable (in cargo at least)</p>",
        "id": 234691216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498714
    },
    {
        "content": "<p>Be aware that there's some brigading from reddit</p>",
        "id": 234691237,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1618498720
    },
    {
        "content": "<p>and so we might not be able to leverage that for this change</p>",
        "id": 234691243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234691237\">said</a>:</p>\n<blockquote>\n<p>Be aware that there's some brigading from reddit</p>\n</blockquote>\n<p>sure; I'm trying to reflect largely <span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> 's opinion here.</p>",
        "id": 234691310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498745
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234691237\">said</a>:</p>\n<blockquote>\n<p>Be aware that there's some brigading from reddit</p>\n</blockquote>\n<p>hmm, I only saw 2 people I didn't recognize and both seemed to have reasonable concerns</p>",
        "id": 234691368,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618498761
    },
    {
        "content": "<p>And the main point pushed forward there was \"I wrote code 3 years ago and left the org and was the only rust Dev there, if they can't cargo build without anything breaking this is unacceptable\"</p>",
        "id": 234691409,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1618498770
    },
    {
        "content": "<p>My interpretation of the comments, admittedly</p>",
        "id": 234691447,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1618498785
    },
    {
        "content": "<p>I think there's also some concern from the wider Rust community that we're just going to flip target definitions out from under them. </p>\n<p>Which is obviously not what we want to do or are going to do.</p>",
        "id": 234691479,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618498794
    },
    {
        "content": "<p>hmm, I now realize</p>",
        "id": 234691614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498816
    },
    {
        "content": "<p>that the target-tier RFC probably is related here</p>",
        "id": 234691698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498825
    },
    {
        "content": "<p>in terms of the expectations it states</p>",
        "id": 234691731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498832
    },
    {
        "content": "<p>anyway we are at the hour</p>",
        "id": 234691836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498846
    },
    {
        "content": "<p>Definitely.</p>",
        "id": 234691863,
        "sender_full_name": "nagisa",
        "timestamp": 1618498850
    },
    {
        "content": "<p>I just wanted to draw attention to the discussion for that MCP</p>",
        "id": 234691916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498857
    },
    {
        "content": "<p>and say that my personal intention is still to move forward with changing the semantics of that target</p>",
        "id": 234692036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498874
    },
    {
        "content": "<p>but that I welcome counter-proposals</p>",
        "id": 234692080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498882
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234691409\">said</a>:</p>\n<blockquote>\n<p>And the main point pushed forward there was \"I wrote code 3 years ago and left the org and was the only rust Dev there, if they can't cargo build without anything breaking this is unacceptable\"</p>\n</blockquote>\n<p>that was not the impression I got - I think people were worried that it would be more difficult to make statically linked binaries (which is correct if we <em>only</em> flip the defaults and do nothing else)</p>",
        "id": 234692082,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618498882
    },
    {
        "content": "<p>I read through the RFC again the other day with this MCP in mind and didn't find any issues with our overall plan.</p>",
        "id": 234692087,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1618498882
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Stay healthy y'all!</p>",
        "id": 234692406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618498930
    },
    {
        "content": "<p>(as opposed to the --remap-path-prefix issue, which has a lot more grandstanding and I had to unsubscribe from for my sanity)</p>",
        "id": 234692613,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618498967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-04-15.20.2354818/near/234690571\">said</a>:</p>\n<blockquote>\n<p>(for <a href=\"https://github.com/rust-lang/rust/issues/84097\">#84097</a>, I think our internal action item should be to start tracking + reporting disk usage )</p>\n</blockquote>\n<p>I'd like to wrap the discussion on  issue <a href=\"https://github.com/rust-lang/rust/issues/84097\">#84097</a> - just so the reporter knows that the issue had eyes on it. So, we will assign a <code>P-medium</code> because it's nothing immediately breaking, though we agree that it is definitively a major annoyance and we need to improve/investigate our reporting on our builds.<br>\n(would such a summary makes sense?)</p>",
        "id": 234695533,
        "sender_full_name": "apiraino",
        "timestamp": 1618499607
    },
    {
        "content": "<p>(also, would that be suitable for the ICE breakers?) not really an ICE but there's possibly some bisecting involved?</p>",
        "id": 234695628,
        "sender_full_name": "apiraino",
        "timestamp": 1618499631
    },
    {
        "content": "<p>everything you said makes sense to me, I think.</p>",
        "id": 234700372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618501162
    },
    {
        "content": "<p>Draft for next week's agenda:<br>\n<a href=\"https://hackmd.io/ic4TdKg2Tq2-OZ1gTE_q2g?view\">https://hackmd.io/ic4TdKg2Tq2-OZ1gTE_q2g?view</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>   checkin by  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>  checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 234701478,
        "sender_full_name": "apiraino",
        "timestamp": 1618501530
    }
]