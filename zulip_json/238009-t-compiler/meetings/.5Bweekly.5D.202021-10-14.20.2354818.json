[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/czhRhn0rSaib7Pnr5ZvDUg?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> : anything to share?</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span>by  <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span>: : anything to share?</li>\n</ul>",
        "id": 257524057,
        "sender_full_name": "apiraino",
        "timestamp": 1634213669
    },
    {
        "content": "<p>we had the checkin in our internal hackmd, added it to the agenda, thanks for the reminder <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span></p>",
        "id": 257539374,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1634219871
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , triage meeting starting now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 257539937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220062
    },
    {
        "content": "<p>We’ll start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 257539981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220081
    },
    {
        "content": "<ul>\n<li>1.56 releases in a week!</li>\n</ul>",
        "id": 257540053,
        "sender_full_name": "simulacrum",
        "timestamp": 1634220116
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2021-10-15T14:00:00Z\">2021-10-15T10:00:00-04:00</time>, Polonius Hackaton</li>\n</ul>",
        "id": 257540152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220140
    },
    {
        "content": "<p>We are now asking for feedback on the <a href=\"https://github.com/rust-lang/surveys/blob/main/surveys/2021-annual-survey/questions.md\">annual community survey</a> rough draft. Please take a look and add issues for anything you find!</p>",
        "id": 257540415,
        "sender_full_name": "rylev",
        "timestamp": 1634220240
    },
    {
        "content": "<p>Oh, also:</p>",
        "id": 257540486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220252
    },
    {
        "content": "<ul>\n<li>T-compiler Planning meeting is a week from tomorrow. Get proposals in if you have stuff that would be good for a steering meeting during the October/November cycle.</li>\n</ul>",
        "id": 257540602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220294
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 257540745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220344
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 257540777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220353
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip +3 months ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 257540840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220363
    },
    {
        "content": "<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip about 6 weeks ago)</li>\n</ul>",
        "id": 257540864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220371
    },
    {
        "content": "<p>Ugh, sorry everyone, I’m really losing it</p>",
        "id": 257540999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220435
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip +3 months ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip about 6 weeks ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: GH none, Zulip 3 weeks ago)</li>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a> (last review activity: GH 25 days ago, Zulip 2 weeks ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: GH none, Zulip 3 weeks ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 257541026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220448
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n<li>\"Tracking issue for <code>#![feature(const_precise_live_drops)]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/73255\">rust#73255</a></li>\n</ul>\n</li>\n</ul>",
        "id": 257541059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220458
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"lint internal hashmap iteration\" <a href=\"https://github.com/rust-lang/compiler-team/issues/465\">compiler-team#465</a></li>\n</ul>\n</li>\n</ul>",
        "id": 257541080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220467
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 257541092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220475
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Make all proc-macro back-compat lints deny-by-default\" <a href=\"https://github.com/rust-lang/rust/pull/88041\">rust#88041</a></li>\n</ul>\n</li>\n</ul>",
        "id": 257541121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220482
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 257541200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220499
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1187\">WG-diagnostics</span>   by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (<a href=\"https://hackmd.io/3r_D-3ElQ-WR_VVzx4g2Pw?view#WG-checkins\">previous checkin</a>):</li>\n</ul>\n<blockquote>\n<ul>\n<li>Trait Alias = impl Trait; improvements</li>\n<li>NLL borrowck closer in parity with old borrowck</li>\n<li>Typo suggestions in more places (assoc items and modules/crates)</li>\n<li>Multiple improvements around trait bound presentation</li>\n<li>More accurate expected/found labels when trait paths are the same (long standing confusing issue)</li>\n<li><strong>I</strong> now consider type ascription syntax as no longer being problematic (last outstanding issues for common confusables closed)</li>\n<li>Internal refactors &amp; general clean ups</li>\n<li>More parser recovery for common typos in match arms</li>\n<li>Extend C-style printf format string parsing <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></li>\n</ul>\n<p>There's in flight a style linter for diagnostics, to ensure consistency, which even without merging has already yielded a few clean up PRs</p>\n</blockquote>",
        "id": 257541229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220511
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1380\">WG-rustc-dev-guide</span> by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span> (<a href=\"https://hackmd.io/3r_D-3ElQ-WR_VVzx4g2Pw?view#WG-checkins\">previous checkin</a>):<blockquote>\n<h4>Most notable changes</h4>\n<ul>\n<li>Document tracing awesomeness <a href=\"https://github.com/rust-lang/rustc-&gt;dev-guide/pull/1223\">#1223</a></li>\n<li>Update sanitizer documentation <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1220\">#1220</a></li>\n<li>Parallel codegen <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1206\">#1206</a></li>\n<li>Parallel docs <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1203\">#1203</a></li>\n</ul>\n<h4>Most notable WIPs</h4>\n<ul>\n<li>Remove docs on Assemble step <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1233\">#1233</a></li>\n<li>Added detail to codegen section <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1216\">#1216</a></li>\n<li>Update build instructions for rustdoc <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1117\">#1117</a></li>\n<li>Document inert vs active attributes <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1110\">#1110</a></li>\n<li>Explain the new valtree system for type level constants. <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1097\">#1097</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>",
        "id": 257541344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220561
    },
    {
        "content": "<p>Okay, on to</p>\n<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 257541417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220595
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Emit item no type error even if type inference fails\" <a href=\"https://github.com/rust-lang/rust/pull/89585\">rust#89585</a><ul>\n<li>fixes P-high regression from stable <a href=\"https://github.com/rust-lang/rust/issues/89574\">rust#89574</a></li>\n<li>nomination suggested by <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> <a href=\"https://github.com/rust-lang/rust/pull/89854#issuecomment-942638505\">in this comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 257541471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220605
    },
    {
        "content": "<p>(look at <a href=\"https://github.com/rust-lang/rust/pull/89585/files?diff=split&amp;w=1\">the diff with ignore ws</a> for a more accurate view of the change)</p>",
        "id": 257541597,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634220660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257541229\">said</a>:</p>\n<blockquote>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1187\">WG-diagnostics</span>   by <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> and <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> (<a href=\"https://hackmd.io/3r_D-3ElQ-WR_VVzx4g2Pw?view#WG-checkins\">previous checkin</a>):</li>\n</ul>\n<blockquote>\n<ul>\n<li>Trait Alias = impl Trait; improvements</li>\n<li>NLL borrowck closer in parity with old borrowck</li>\n<li>Typo suggestions in more places (assoc items and modules/crates)</li>\n<li>Multiple improvements around trait bound presentation</li>\n<li>More accurate expected/found labels when trait paths are the same (long standing confusing issue)</li>\n<li><strong>I</strong> now consider type ascription syntax as no longer being problematic (last outstanding issues for common confusables closed)</li>\n<li>Internal refactors &amp; general clean ups</li>\n<li>More parser recovery for common typos in match arms</li>\n<li>Extend C-style printf format string parsing <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></li>\n</ul>\n<p>There's in flight a style linter for diagnostics, to ensure consistency, which even without merging has already yielded a few clean up PRs</p>\n</blockquote>\n</blockquote>\n<p>I will say that I'm particularly excited about the NLL diagnostics.</p>",
        "id": 257541633,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634220673
    },
    {
        "content": "<p>okay yes hiding whitespace this is a lot easier to see that its a small change, in terms of lines changed</p>",
        "id": 257541792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220730
    },
    {
        "content": "<p>and it seems all around just a good thing</p>",
        "id": 257541876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220760
    },
    {
        "content": "<p>(I do wonder whether in general we should try to separate out commits that do whitepace cleanup, in order to provide easier commits for backporting…)</p>",
        "id": 257541964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220797
    },
    {
        "content": "<p>(but that’s not going to affect the decision here.)</p>",
        "id": 257541983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220806
    },
    {
        "content": "<p>backport approved</p>",
        "id": 257542056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220826
    },
    {
        "content": "<p>It's not just whitespace cleanup, there's a subtle logic change that increased indentation</p>",
        "id": 257542078,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634220833
    },
    {
        "content": "<p>oh oh true</p>",
        "id": 257542095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220839
    },
    {
        "content": "<p>we can't merge without passing rustfmt :)</p>",
        "id": 257542108,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634220842
    },
    {
        "content": "<p>Hmm, yes</p>",
        "id": 257542155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220850
    },
    {
        "content": "<p>and that can’t be avoided in the backport process. yes. okay.</p>",
        "id": 257542185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220862
    },
    {
        "content": "<p>/me wishes there were more adopted AST-aware diffing algorithms</p>",
        "id": 257542240,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634220886
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Use correct edition for panic in [debug_]assert!().\" <a href=\"https://github.com/rust-lang/rust/pull/89622\">rust#89622</a><ul>\n<li>nomination suggested by mara <a href=\"https://github.com/rust-lang/rust/issues/88638#issuecomment-915472783\">in this comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 257542254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220894
    },
    {
        "content": "<p>looks good to me</p>",
        "id": 257542520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220996
    },
    {
        "content": "<p>backport approved</p>",
        "id": 257542526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634220999
    },
    {
        "content": "<p>It climbs the span backtrace <em>until</em> it's out of <code>panic!</code>, otherwise that macro's spans are marked as 2021 edition</p>",
        "id": 257542533,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221001
    },
    {
        "content": "<p>Is this a problem with other macro things</p>",
        "id": 257542752,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634221083
    },
    {
        "content": "<p>I don’t know offhand what the <code>edition_panic</code> feature is, but I don’t want to get bogged down in meeting now finding out</p>",
        "id": 257542784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257542752\">said</a>:</p>\n<blockquote>\n<p>Is this a problem with other macro things</p>\n</blockquote>\n<p>are there other macros that are edition-dependent?</p>",
        "id": 257542841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221117
    },
    {
        "content": "<p>(At least, I think that’s the criteria one would use to determine if its a problem elsewhere.)</p>",
        "id": 257542948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221165
    },
    {
        "content": "<p>Anyway lets keep moviing</p>",
        "id": 257542966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221170
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 257542986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221181
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 257542999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221186
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 257543019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221193
    },
    {
        "content": "<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last review activity: 4 months ago)<ul>\n<li>self-assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n</ul>\n</li>\n</ul>",
        "id": 257543033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221200
    },
    {
        "content": "<p><em>Okay</em>: I finally am done with the work thing that’s been distracting me for weeks, and I can actually commit to doing stuff like this</p>",
        "id": 257543139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221226
    },
    {
        "content": "<p>unless <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> still wants dibs on it. :)</p>",
        "id": 257543159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221234
    },
    {
        "content": "<p>(It could happen elsewhere, but it becomes obvious only on macros that have changed: the potential is there, but this covers the only where the API surface changed this ed)</p>",
        "id": 257543180,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221241
    },
    {
        "content": "<p>No, if you want to take it, by all means :)</p>",
        "id": 257543190,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634221246
    },
    {
        "content": "<p>okay. I’ll make an action item for myself</p>",
        "id": 257543215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221256
    },
    {
        "content": "<p>But I'm also happy to stay on the hook for it.</p>",
        "id": 257543222,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634221259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257543019\">said</a>:</p>\n<blockquote>\n<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>\n</blockquote>\n<p>Side comment on this: There are still a lot of PRs (~170 last time I checked) that don't have a team label. I'm trying to organize/push for either triage or priotization to start adding labels for \"older\" PRs</p>",
        "id": 257543273,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634221280
    },
    {
        "content": "<p>that’s a good idea</p>",
        "id": 257543320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221303
    },
    {
        "content": "<p>~70 now if I'm <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+label%3AS-waiting-on-review+-label%3AT-libs-api+-label%3AT-libs+-label%3AT-rustdoc+-label%3AT-compiler+-label%3AT-lang+-label%3AT-infra+sort%3Acreated-asc\">counting correctly</a></p>",
        "id": 257543516,
        "sender_full_name": "apiraino",
        "timestamp": 1634221362
    },
    {
        "content": "<ul>\n<li>\"Normalize MIR with RevealAll before optimizations.\" <a href=\"https://github.com/rust-lang/rust/pull/85254\">rust#85254</a> (last review activity: 3 months ago)</li>\n</ul>",
        "id": 257543575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221384
    },
    {
        "content": "<p>this is assigned to <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> . It only recently was fixed to pass CI again</p>",
        "id": 257543688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221429
    },
    {
        "content": "<p>overall I think its okay; I don’t the review process is breaking down here, given the overall timeline</p>",
        "id": 257543808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221461
    },
    {
        "content": "<p>but, <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> , do you think you’ll have time to double-check the changes here in the near future?</p>",
        "id": 257543871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221482
    },
    {
        "content": "<ul>\n<li>\"move implicit <code>Sized</code> predicate to end of list\" <a href=\"https://github.com/rust-lang/rust/pull/86011\">rust#86011</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 257543943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221504
    },
    {
        "content": "<p>Okay this was also recently (7 days ago) fixed to pass CI</p>",
        "id": 257544084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you have time to double-check? Probably just needs a rubber-stamp from you at this point I think</p>",
        "id": 257544170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221572
    },
    {
        "content": "<p>That PR was hitting code that was in flight</p>",
        "id": 257544181,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221575
    },
    {
        "content": "<p>as in it is risky?</p>",
        "id": 257544211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221587
    },
    {
        "content": "<p>I need to check what the state of it is now that it's gotten quiter in that fron</p>",
        "id": 257544225,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221592
    },
    {
        "content": "<p>or as in, it was in rebase hell?</p>",
        "id": 257544227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221593
    },
    {
        "content": "<p>okay</p>",
        "id": 257544237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221596
    },
    {
        "content": "<p>last time I looked at it, there were some diganostics regressions that I disliked</p>",
        "id": 257544266,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221608
    },
    {
        "content": "<p>okay</p>",
        "id": 257544274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221614
    },
    {
        "content": "<p>double-check and provide that feedback again, if necessary</p>",
        "id": 257544288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221622
    },
    {
        "content": "<ul>\n<li>\"Mir-Opt for copying enums with large discrepancies\" <a href=\"https://github.com/rust-lang/rust/pull/85158\">rust#85158</a> (last review activity: 2 months ago)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/88638#issuecomment-915472783\">discussed previously</a></li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, PR author re-requested review</li>\n</ul>\n</li>\n</ul>",
        "id": 257544291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221623
    },
    {
        "content": "<p>and wanted to take the time to propose a good course of action instead of just an r-</p>",
        "id": 257544304,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634221628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> wow you’re typing those names in by hand? <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 257544370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221658
    },
    {
        "content": "<p>I'll finish that review today.</p>",
        "id": 257544389,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634221666
    },
    {
        "content": "<ul>\n<li>\"Abort in panic_abort eh_personality\" <a href=\"https://github.com/rust-lang/rust/pull/86801\">rust#86801</a> (last review activity: 2 months ago)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/88638#issuecomment-915472783\">discussed previously</a>, now being reviewed</li>\n<li><span class=\"user-mention\" data-user-id=\"274417\">@Daniel Frampton</span> <a href=\"https://github.com/rust-lang/rust/pull/86801#issuecomment-941177751\">reviewed the PR</a></li>\n<li>Alex Crichton also contributed some thoughts</li>\n</ul>\n</li>\n</ul>",
        "id": 257544461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221685
    },
    {
        "content": "<p>yeah, active discussion. Review process seems to be <em>working</em> here</p>",
        "id": 257544538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221717
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"274417\">@Daniel Frampton</span>! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 257544582,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634221734
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> should we be cycling forward through things? I.e. if we discussed a PR last week, then we should not include it on the list this week if there are other old PR’s, right?</p>",
        "id": 257544607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221742
    },
    {
        "content": "<p>We should revisit how we sample the list, is all I’m saying.</p>",
        "id": 257544648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221756
    },
    {
        "content": "<p>but lets not worry about how we implement such changes to protocol right now</p>",
        "id": 257544687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221774
    },
    {
        "content": "<p>uhm ... makes sense. no need to go over and over the same PRs</p>",
        "id": 257544695,
        "sender_full_name": "apiraino",
        "timestamp": 1634221779
    },
    {
        "content": "<p>(unless they’re critical PRs. but I don’t think any of these are.)</p>",
        "id": 257544803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221808
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">75 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">51 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 46 P-high, 83 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 257544829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221816
    },
    {
        "content": "<p>I think the simplest and best way to do that is for the reviewer to just make a comment stating review intent</p>",
        "id": 257544855,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634221823
    },
    {
        "content": "<p>e.g. I should post on the one I said I’d finally get to. Yes.</p>",
        "id": 257544954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221865
    },
    {
        "content": "<p>Right. The idea being that it makes sure the actual issue moves forward. And someone coming to it later knows why its held up</p>",
        "id": 257545042,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634221902
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 257545190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221948
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 257545206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221954
    },
    {
        "content": "<ul>\n<li>\"no errors encountered even though <code>delay_span_bug</code> issued\" <a href=\"https://github.com/rust-lang/rust/issues/87757\">rust#87757</a></li>\n</ul>",
        "id": 257545240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221963
    },
    {
        "content": "<p>so this had a fix and that fix was beta nominated ...</p>",
        "id": 257545320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221988
    },
    {
        "content": "<p>and accepted</p>",
        "id": 257545353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634221997
    },
    {
        "content": "<p>okay so we just need to close this issue? It looks like it was part of <a href=\"https://github.com/rust-lang/rust/pull/89527\">https://github.com/rust-lang/rust/pull/89527</a> ?</p>",
        "id": 257545449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222035
    },
    {
        "content": "<p>closing as fixed; left comment linking to <a href=\"https://github.com/rust-lang/rust/issues/89527\">#89527</a></p>",
        "id": 257545573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222065
    },
    {
        "content": "<p>(could someone double-check for me if a test was added in that beta backport?)</p>",
        "id": 257545614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222082
    },
    {
        "content": "<ul>\n<li>\"regression: cycle in MIR opts\" <a href=\"https://github.com/rust-lang/rust/issues/88972\">rust#88972</a></li>\n</ul>",
        "id": 257545636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222090
    },
    {
        "content": "<p>oh, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , should I update the project board too?</p>",
        "id": 257545749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222129
    },
    {
        "content": "<p>nah, that's still experimental, don't worry about it</p>",
        "id": 257545766,
        "sender_full_name": "simulacrum",
        "timestamp": 1634222139
    },
    {
        "content": "<p>(confirmed test was included in the backport PR)</p>",
        "id": 257545797,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634222148
    },
    {
        "content": "<p>for <a href=\"https://github.com/rust-lang/rust/issues/88972\">#88972</a>, looks as if it was it was fixed by <a href=\"https://github.com/rust-lang/rust/issues/88979\">#88979</a> which was likewise included in <a href=\"https://github.com/rust-lang/rust/issues/89527\">#89527</a></p>",
        "id": 257545941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222194
    },
    {
        "content": "<p>(can someone likewise confirm if a test for <a href=\"https://github.com/rust-lang/rust/issues/88972\">#88972</a> was included in <a href=\"https://github.com/rust-lang/rust/issues/89527\">#89527</a> ?)</p>",
        "id": 257546032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222229
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>\"CI: dist-s390x-linux build went from 40min. to 160min with new LLVM pass manager\" <a href=\"https://github.com/rust-lang/rust/issues/89609\">rust#89609</a><ul>\n<li>significant compilation time regression on Tier 2 target s390x</li>\n<li>filed bug for <a href=\"https://bugs.llvm.org/show_bug.cgi?id=52146\">LLVM pass-manager</a></li>\n<li>assigned P-high to keep under the radar before the next release cycle</li>\n</ul>\n</li>\n</ul>",
        "id": 257546061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222240
    },
    {
        "content": "<p>“before the next release cycle\"</p>",
        "id": 257546116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222260
    },
    {
        "content": "<p>this has a workaround applied in PR <a href=\"https://github.com/rust-lang/rust/issues/89666\">#89666</a>, right?</p>",
        "id": 257546307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222324
    },
    {
        "content": "<p>so I think everything looks okay….</p>",
        "id": 257546366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222351
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-10-12.md\">triage logs for 2021-10-12</a></p>\n</blockquote>\n<p>A relatively quiet week: two smallish regressions, and one largish regression that is isolated to doc builds. A couple of nice small wins as well.</p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=25ec8273855fde2d72ae877b397e054de5300e10&amp;end=9475e609b8458fff9e444934a6017d2e590642cf&amp;absolute=false&amp;stat=instructions%3Au\">25ec8273855fde2d72ae877b397e054de5300e10..9475e609b8458fff9e444934a6017d2e590642cf</a></p>\n<p>2 Regressions, 2 Improvements, 2 Mixed; 1 of them in rollups, 42 comparisons made in total</p>",
        "id": 257546418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222365
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 12 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89608\">#89608</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d480ceff384f80394e9367b5e9d3596d62f20585&amp;end=0eabf25b90396dead0b2a1aaa275af18a1ae6008&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>incr-unchanged</code> builds of <code>externs</code>)</li>\n<li>A large number of <code>doc</code> targets regressed very slightly here.</li>\n<li>Apart from that, biggest changes were to <code>externs</code> and <code>deeply-nested-async</code>.</li>\n<li>Left <a href=\"https://github.com/rust-lang/rust/pull/89608#issuecomment-941365151\">comment</a> noting the above</li>\n</ul>\n<p>Move top part of print_item to Tera templates <a href=\"https://github.com/rust-lang/rust/issues/89695\">#89695</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=6928fafe06e4ab29317f75194e1bf67c119dccdc&amp;end=c1cb97481a633bdfdf3d6b57c6dcebfdfadbcfdf&amp;stat=instructions:u\">instruction counts</a> (up to 3.7% on <code>full</code> builds of <code>externs</code>)</li>\n<li>Large regression for certain doc builds.</li>\n<li>Fix posted in PR <a href=\"https://github.com/rust-lang/rust/issues/89732\">#89732</a>; thanks <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> !</li>\n</ul>\n<p>Apply clippy suggestions for rustc and core <a href=\"https://github.com/rust-lang/rust/issues/89709\">#89709</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=86d6d2b7389fe1b339402c1798edae8b695fc9ef&amp;end=6ae8912a3e7d2c4c775024f58a7ba4b1aedc4073&amp;stat=instructions:u\">instruction counts</a> (up to 2.8% on <code>full</code> builds of <code>keccak</code>)</li>\n<li>instruction-count regressions in the 1.1% to 2.7% range in keccak and inflate</li>\n<li>Left <a href=\"https://github.com/rust-lang/rust/pull/89709#issuecomment-941560787\">comment</a></li>\n</ul>",
        "id": 257546445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222376
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>perf: only check for <code>rustc_trivial_field_reads</code> attribute on traits, not items, impls, etc. <a href=\"https://github.com/rust-lang/rust/issues/89454\">#89454</a></li>\n<li>rustdoc: Cleanup various <code>clean</code> types <a href=\"https://github.com/rust-lang/rust/issues/88379\">#88379</a></li>\n</ul>",
        "id": 257546459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222384
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Add two inline annotations for hot functions <a href=\"https://github.com/rust-lang/rust/issues/89495\">#89495</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=d3e6770efbd76c4ad1e17468895b538a2efec4bd&amp;end=ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc&amp;stat=instructions:u\">instruction counts</a> (up to -7.1% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=d3e6770efbd76c4ad1e17468895b538a2efec4bd&amp;end=ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n</ul>\n<p>Introduce <code>tcx.get_diagnostic_name</code> <a href=\"https://github.com/rust-lang/rust/issues/89534\">#89534</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=680ff86391f19e12b485293f01372036e85ba87c&amp;end=0157cc977fd71297ce73e2f249321f5ba2555d42&amp;stat=instructions:u\">instruction counts</a> (up to -3.4% on <code>incr-full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=680ff86391f19e12b485293f01372036e85ba87c&amp;end=0157cc977fd71297ce73e2f249321f5ba2555d42&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n</ul>",
        "id": 257546492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222397
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89709\">#89709 Apply clippy suggestions for rustc and core</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89695\">#89695 Move top part of print_item to Tera templates</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89608\">#89608 Rollup of 12 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89534\">#89534 Introduce <code>tcx.get_diagnostic_name</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89495\">#89495 Add two inline annotations for hot functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89435\">#89435 Rollup of 6 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89405\">#89405 Fix clippy lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89263\">#89263 Suggest both of immutable and mutable trait implementations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89165\">#89165 Fix read_to_end to not grow an exact size buffer</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89125\">#89125 Don't use projection cache or candidate cache in intercrate mode</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89103\">#89103 Migrate in-tree crates to 2021</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89047\">#89047 Rollup of 10 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89030\">#89030 Introduce <code>Rvalue::ShallowInitBox</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88945\">#88945 Remove concept of 'completion' from the projection cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88880\">#88880 Rework HIR API to make invocations of the hir_crate query harder.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88824\">#88824 Rollup of 15 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88804\">#88804 Revise never type fallback algorithm</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88719\">#88719 Point at argument instead of call for their obligations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88703\">#88703 Gather module items after lowering.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88627\">#88627 Do not preallocate HirIds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88575\">#88575 Querify <code>FnAbi::of_{fn_ptr,instance}</code> as <code>fn_abi_of_{fn_ptr,instance}</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88308\">#88308 Morph <code>layout_raw</code> query into <code>layout_of</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87064\">#87064 Support <code>#[track_caller]</code> on closures and generators</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n</ul>",
        "id": 257546563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222408
    },
    {
        "content": "<p>(I'm still confused how <code>tcx.get_diagnostic_name</code> <a href=\"https://github.com/rust-lang/rust/issues/89534\">#89534</a> improved things <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span>)</p>",
        "id": 257546716,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634222463
    },
    {
        "content": "<p>Driving down the length of this list is tough</p>",
        "id": 257546739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257546445\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Fix posted in PR <a href=\"https://github.com/rust-lang/rust/issues/89732\">#89732</a>; thanks <span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> !</li>\n</ul>\n</blockquote>\n<p>It's not fixed yet, it's under heavy investigations on both tera and rustdoc</p>",
        "id": 257546774,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1634222488
    },
    {
        "content": "<p>Oh, okay!</p>",
        "id": 257546800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222497
    },
    {
        "content": "<p>Hopefully it'll be fixed in the coming days</p>",
        "id": 257546833,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1634222512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257546716\">said</a>:</p>\n<blockquote>\n<p>(I'm still confused how <code>tcx.get_diagnostic_name</code> <a href=\"https://github.com/rust-lang/rust/issues/89534\">#89534</a> improved things <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span>)</p>\n</blockquote>\n<p>Might be measurement bias</p>",
        "id": 257546998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222572
    },
    {
        "content": "<p>note that beta branches ~tomorrow</p>",
        "id": 257547003,
        "sender_full_name": "simulacrum",
        "timestamp": 1634222574
    },
    {
        "content": "<p>I wonder if there's some automation we can add to help fix perf regressions</p>",
        "id": 257547016,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634222579
    },
    {
        "content": "<p>Whether that's having a bot run perf before/after and post the results or something like that</p>",
        "id": 257547089,
        "sender_full_name": "Jack Huey",
        "timestamp": 1634222607
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257546445\">said</a>:</p>\n<blockquote>\n<h4>Regressions</h4>\n<p>Move top part of print_item to Tera templates <a href=\"https://github.com/rust-lang/rust/issues/89695\">#89695</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=6928fafe06e4ab29317f75194e1bf67c119dccdc&amp;end=c1cb97481a633bdfdf3d6b57c6dcebfdfadbcfdf&amp;stat=instructions:u\">instruction counts</a> (up to 3.7% on <code>full</code> builds of <code>externs</code>)</li>\n<li>Large regression for certain doc builds.</li>\n<li>Fix posted in PR <a href=\"https://github.com/rust-lang/rust/issues/89732\">#89732</a>; thanks <span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> !</li>\n</ul>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/89732\">#89732</a> is not a fix, it's an issue tracking the regression</p>",
        "id": 257547104,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222610
    },
    {
        "content": "<p>oh yeah guillaume said that already</p>",
        "id": 257547128,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222622
    },
    {
        "content": "<p>Yeah, I misinterpreted the title</p>",
        "id": 257547156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222632
    },
    {
        "content": "<p>(and ignored the other hints, like the fact that its an issue and not a PR)</p>",
        "id": 257547247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222648
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 257547299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222668
    },
    {
        "content": "<ul>\n<li>\"Add new tier 3 target: <code>x86_64-unknown-none</code>\" <a href=\"https://github.com/rust-lang/rust/pull/89062\">rust#89062</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> for T-compiler consideration. On <code>T-lang</code> seems all set.</li>\n</ul>\n</li>\n</ul>",
        "id": 257547308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222674
    },
    {
        "content": "<p>are there any stakeholders for the above present in this meeting?</p>",
        "id": 257547407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222718
    },
    {
        "content": "<p>basically, the people involved would like to see movement forward</p>",
        "id": 257547441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222730
    },
    {
        "content": "<p>see e.g. <a href=\"https://github.com/rust-lang/rust/pull/89062#issuecomment-941347194\">https://github.com/rust-lang/rust/pull/89062#issuecomment-941347194</a></p>",
        "id": 257547464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222739
    },
    {
        "content": "<p>Notably:</p>\n<blockquote>\n<p>There is substantial opportunity to coalesce the none, linuxkernel and hermetkernel into a single target. Further, it seems that parties are interested in collaborating on this. However, it is likely more efficient to do this after the target is merged. All three targets are tier 3 and can do this one target feature at a time. I propose we delay this until after the target is merged.</p>\n</blockquote>\n<p>So I think objections of form “we have opportunity to improve our target names”, I think the above addresses that.</p>",
        "id": 257547616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222799
    },
    {
        "content": "<p>anyway it sounds like no one here is a stakeholder (or if they are, they have nothing to say)</p>",
        "id": 257547745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222850
    },
    {
        "content": "<ul>\n<li>LTO toolchain compatability docs could use an update in case anything has changed in the last year <a href=\"https://github.com/rust-lang/rust/issues/89654\">rust#89654</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></li>\n<li>currently LTO compatibility declared up to 1.46, reporter asks if min. version can be extented to more recent versions</li>\n</ul>\n</li>\n</ul>",
        "id": 257547762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222859
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> if the target owners are onboard with a potential rename in the future, that seems to resolve the objection.</p>",
        "id": 257547776,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634222863
    },
    {
        "content": "<p>Heh, I like lines of the form \"Our test suite almost passed.\"</p>",
        "id": 257547917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222908
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257547917\">said</a>:</p>\n<blockquote>\n<p>Heh, I like lines of the form \"Our test suite almost passed.\"</p>\n</blockquote>\n<p>yeah ... unfortunately our tests are quite flaky so it's unlikely to be related to LTO</p>",
        "id": 257547987,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222942
    },
    {
        "content": "<p>(we found afterwards we had an infinite loop in that test which C++ treats as UB)</p>",
        "id": 257548019,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222954
    },
    {
        "content": "<p>What are the pro’s/con’s of extending the table at <a href=\"https://doc.rust-lang.org/rustc/linker-plugin-lto.html#toolchain-compatibility\">https://doc.rust-lang.org/rustc/linker-plugin-lto.html#toolchain-compatibility</a> ?</p>",
        "id": 257548034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222959
    },
    {
        "content": "<p>I don’t know what tests are used to decide whether something goes on that table.</p>",
        "id": 257548097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634222988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'm not sure how to answer that without knowing what the failure case looks like</p>",
        "id": 257548100,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222989
    },
    {
        "content": "<p>what happens when the versions of LLVM don't match up?</p>",
        "id": 257548126,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634222996
    },
    {
        "content": "<p>do we have any test for this intree? I'd rather not build various versions of clang in each CI build to check this</p>",
        "id": 257548132,
        "sender_full_name": "simulacrum",
        "timestamp": 1634222997
    },
    {
        "content": "<p>and it's not clear what that check looks like or what 'working' means here, either, imo</p>",
        "id": 257548200,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223010
    },
    {
        "content": "<p>I don’t think its realistic to do this in CI. It checking against old versions</p>",
        "id": 257548205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223014
    },
    {
        "content": "<p>My current guess is: the testing is done by following the steps <em>above</em> the table on that page</p>",
        "id": 257548302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223050
    },
    {
        "content": "<p>e.g. <a href=\"https://doc.rust-lang.org/rustc/linker-plugin-lto.html#rust-staticlib-as-dependency-in-cc-program\">https://doc.rust-lang.org/rustc/linker-plugin-lto.html#rust-staticlib-as-dependency-in-cc-program</a></p>",
        "id": 257548321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223058
    },
    {
        "content": "<p>probably by hand</p>",
        "id": 257548335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223063
    },
    {
        "content": "<p>I'm not sure I see harm in extending the table with additional data, but at the same time, I don't see a strong reason to attempt to keep it current.</p>",
        "id": 257548338,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223064
    },
    {
        "content": "<p>I think extending it implies we're testing something we're not</p>",
        "id": 257548370,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223076
    },
    {
        "content": "<p>unless someone is actively testing, I would rather we drop it</p>",
        "id": 257548399,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223087
    },
    {
        "content": "<p>I'm also ok with dropping it.</p>",
        "id": 257548425,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223099
    },
    {
        "content": "<p>so, say we wanted to test this at Cloudflare. How could we know whether the versions of rustc and clang were compatible?</p>",
        "id": 257548432,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223101
    },
    {
        "content": "<p>well, if someone asserts that they followed all the steps on that page for a given Version pair, why not add an entry to the table?</p>",
        "id": 257548448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223108
    },
    {
        "content": "<p>You just need the version of clang that corresponds to the version of LLVM rustc was built with IIRC.</p>",
        "id": 257548484,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223122
    },
    {
        "content": "<p>The “test suite almost passed” was LTO managed to exploit a UB issue (while (1) loop was removed that was intended to hang the process until the watchdog fired a sigint and terminated the process). Other optimization levels hadn’t had an issue surprisingly</p>",
        "id": 257548527,
        "sender_full_name": "Vitali Lovich",
        "timestamp": 1634223125
    },
    {
        "content": "<p>apart from the fact that its compiling a <code>lib.rs</code> that is not specified.</p>",
        "id": 257548540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257548399\">said</a>:</p>\n<blockquote>\n<p>unless someone is actively testing, I would rather we drop it</p>\n</blockquote>\n<p>or in other words, what does \"Actively testing\" look like?</p>",
        "id": 257548616,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257548484\">said</a>:</p>\n<blockquote>\n<p>You just need the version of clang that corresponds to the version of LLVM rustc was built with IIRC.</p>\n</blockquote>\n<p>Is that all the table actually is, in the end?</p>",
        "id": 257548623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223166
    },
    {
        "content": "<p>The table basically just says \"Rust 1.x was built with LLVM 9 so you need Clang 9\"</p>",
        "id": 257548626,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223167
    },
    {
        "content": "<p>etc</p>",
        "id": 257548637,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223172
    },
    {
        "content": "<p>I’d be willing to have a table that states that it just reporting what Wesley wrote above</p>",
        "id": 257548709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223201
    },
    {
        "content": "<blockquote>\n<p>Best results are achieved by using a rustc and clang that are based on the exact same version of LLVM. One can use rustc -vV in order to view the LLVM used by a given rustc version. Note that the version number given here is only an approximation as Rust sometimes uses unstable revisions of LLVM. However, the approximation is usually reliable.</p>\n</blockquote>",
        "id": 257548711,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223202
    },
    {
        "content": "<p>Turning on cross-lang LTO didn’t seem to have any problems. We build with the clang that v8 distributes which is usually tip of tree (currently 14). The rust we use is on llvm 12</p>",
        "id": 257548718,
        "sender_full_name": "Vitali Lovich",
        "timestamp": 1634223205
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257548711\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Best results are achieved by using a rustc and clang that are based on the exact same version of LLVM. One can use rustc -vV in order to view the LLVM used by a given rustc version. Note that the version number given here is only an approximation as Rust sometimes uses unstable revisions of LLVM. However, the approximation is usually reliable.</p>\n</blockquote>\n</blockquote>\n<p>ah, right</p>",
        "id": 257548764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223223
    },
    {
        "content": "<blockquote>\n<p>Best results are achieved by using a rustc and clang that are based on the exact same version of LLVM.</p>\n</blockquote>\n<p>does anyone know what \"Best results\" means here? I'm still not sure what the error case looks like</p>",
        "id": 257548793,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223237
    },
    {
        "content": "<p>I think the error case is that the ABI’s don’t match up?</p>",
        "id": 257548883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223255
    },
    {
        "content": "<p>and you get UB?</p>",
        "id": 257548896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223260
    },
    {
        "content": "<p>no, wait, that can’t be right</p>",
        "id": 257548920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223272
    },
    {
        "content": "<p>Ok. That is indeed quite bad. And there's no way to verify that ahead of time?</p>",
        "id": 257548927,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223275
    },
    {
        "content": "<p>hold on, let me think about the error scenarios here</p>",
        "id": 257548949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223286
    },
    {
        "content": "<p>Yeah and/or the bitcode has changed semantics between LLVM versions so the failure mode is anything from \"nothing\" to the worst UB you can imagine.</p>",
        "id": 257548961,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223291
    },
    {
        "content": "<p>I would guess that different LLVM's have different file formats and so you can read garbage and think it's valid or something</p>",
        "id": 257548970,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223295
    },
    {
        "content": "<p>so basically it's UB.</p>",
        "id": 257548986,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223303
    },
    {
        "content": "<p>yeah, okay, I think UB is indeed the worst case scenario</p>",
        "id": 257549007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223311
    },
    {
        "content": "<p>No. The error case had nothing to do with rust. Our test suite passes now. The bug existed completely in c++ land due to UB there</p>",
        "id": 257549018,
        "sender_full_name": "Vitali Lovich",
        "timestamp": 1634223315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"450867\">@Vitali Lovich</span> it happened to work for us</p>",
        "id": 257549043,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223324
    },
    {
        "content": "<p>but it may not in the future if the versions are sufficiently different</p>",
        "id": 257549055,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"450867\">@Vitali Lovich</span> I think we’re talking pathological cases, not the actual case you had</p>",
        "id": 257549058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223335
    },
    {
        "content": "<p>UB can indeed turn out to not cause problems <em>in a particular case</em>, in some sense, it's just not any kind of guarantee</p>",
        "id": 257549094,
        "sender_full_name": "simulacrum",
        "timestamp": 1634223353
    },
    {
        "content": "<p>Ok thanks. Just making sure</p>",
        "id": 257549107,
        "sender_full_name": "Vitali Lovich",
        "timestamp": 1634223358
    },
    {
        "content": "<p>I think I’m personally okay with extending this table. Its just a convenience for people to not have to run <code>rustc -vV</code> , right?</p>",
        "id": 257549232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223395
    },
    {
        "content": "<p>I'm in favor of removing the table. I don't think it contributes much beyond the paragraph above it and requires active maintenance.</p>",
        "id": 257549234,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223396
    },
    {
        "content": "<p>So LLVM doesn't have versioning in bitcode to prevent mixing of bitcode from different LLVM versions?</p>",
        "id": 257549266,
        "sender_full_name": "Gary Guo",
        "timestamp": 1634223412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257547776\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> if the target owners are onboard with a potential rename in the future, that seems to resolve the objection.</p>\n</blockquote>\n<p>Yes, if it needed to be renamed in the future that'd be fine. Ideally before it reaches tier 2, at which point that'd become a bit more disruptive.</p>",
        "id": 257549268,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634223413
    },
    {
        "content": "<p>so rust doesn't guarantee that anything will work other than the exact same version of LLVM? and anything else could have UB?</p>",
        "id": 257549303,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223422
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257549234\">said</a>:</p>\n<blockquote>\n<p>I'm in favor of removing the table. I don't think it contributes much beyond the paragraph above it and requires active maintenance.</p>\n</blockquote>\n<p>Or we could reduce the table to just a few example entries</p>",
        "id": 257549351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223441
    },
    {
        "content": "<p>so that people can confirm that their own invocations of <code>rustc -vV</code> match up with example data</p>",
        "id": 257549396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257549303\">said</a>:</p>\n<blockquote>\n<p>so rust doesn't guarantee that anything will work other than the exact same version of LLVM? and anything else could have UB?</p>\n</blockquote>\n<p>^ I can make a PR documenting this later today if it's true</p>",
        "id": 257549445,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223479
    },
    {
        "content": "<p>the current structure, of showing so many versions, does sort of imply “its just these and no others\"</p>",
        "id": 257549456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223482
    },
    {
        "content": "<p>Shrinking the table would be fine.</p>",
        "id": 257549531,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223499
    },
    {
        "content": "<p>okay lets do that.</p>",
        "id": 257549548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223507
    },
    {
        "content": "<p>I think \"known good\" kind of implies other versions have \"known issues\"</p>",
        "id": 257549551,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223508
    },
    {
        "content": "<p>So perhaps tweaking the wording to simply reflect these are the versions you will need would also be helpful.</p>",
        "id": 257549600,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1634223529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257549445\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257549303\">said</a>:</p>\n<blockquote>\n<p>so rust doesn't guarantee that anything will work other than the exact same version of LLVM? and anything else could have UB?</p>\n</blockquote>\n<p>^ I can make a PR documenting this later today if it's true</p>\n</blockquote>\n<p>I think its safe to say that coloring outside the lines here is very much a “buyer beware” situation...</p>",
        "id": 257549621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223537
    },
    {
        "content": "<p>I have to step out now.</p>",
        "id": 257549658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223556
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257549658\">said</a>:</p>\n<blockquote>\n<p>I have to step out now.</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 257549717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223581
    },
    {
        "content": "<p>(I’ll let you all debate whether UB is realistic outcome or not!)</p>",
        "id": 257549812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223604
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 257549877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1634223622
    },
    {
        "content": "<p>(probably good to start a separate thread for that)</p>",
        "id": 257549886,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634223624
    },
    {
        "content": "<p>done: <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/cross-language.20LTO.20with.20LLVM.20IR.20from.20different.20versions\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/cross-language.20LTO.20with.20LLVM.20IR.20from.20different.20versions</a></p>",
        "id": 257550005,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634223667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I'm around for any followups about <code>x86_64-unknown-none</code>. I'm quite interested in starting to experiment with it.</p>",
        "id": 257550014,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634223673
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/t04YVEwTRJWwTej-kLvDsw\">https://hackmd.io/t04YVEwTRJWwTej-kLvDsw</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"3282\">wg-incr-comp</span>  by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1176\">WG-llvm</span>  by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>",
        "id": 257551638,
        "sender_full_name": "apiraino",
        "timestamp": 1634224250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-14.20.2354818/near/257543871\">said</a>:</p>\n<blockquote>\n<p>but, <span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> , do you think you’ll have time to double-check the changes here in the near future?</p>\n</blockquote>\n<p>think so, yeah</p>",
        "id": 257759969,
        "sender_full_name": "lcnr",
        "timestamp": 1634329624
    },
    {
        "content": "<p>somehow missed that pr getting updated</p>",
        "id": 257759982,
        "sender_full_name": "lcnr",
        "timestamp": 1634329628
    }
]