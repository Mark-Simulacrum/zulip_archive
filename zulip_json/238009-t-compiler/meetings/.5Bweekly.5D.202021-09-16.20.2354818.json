[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>  by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> : anything to share?</li>\n<li>@<em>WG-polymorphization</em> checkin by <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span></li>\n</ul>",
        "id": 253571045,
        "sender_full_name": "apiraino",
        "timestamp": 1631794358
    },
    {
        "content": "<p>wg-mir-opt is still essentially shut down.</p>",
        "id": 253571149,
        "sender_full_name": "oli",
        "timestamp": 1631794425
    },
    {
        "content": "<p>in case <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> doesn't have any secret news here: <a class=\"stream\" data-stream-id=\"216091\" href=\"/#narrow/stream/216091-t-compiler.2Fwg-polymorphization\">#t-compiler/wg-polymorphization</a> is currently also not doing much right now.</p>\n<p>while i keep thinking about a slightly different approach for it, i haven't had the time to experiment with an actual implementation of that yet (or to even fully write it down somewhere).</p>",
        "id": 253581280,
        "sender_full_name": "lcnr",
        "timestamp": 1631798915
    },
    {
        "content": "<p>yeah, there's no news from polymorphization as yet, I've started my new job and we're working out how to navigate the bureaucracy so that I can start contributing more, should be some news by the next update <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 253581566,
        "sender_full_name": "davidtwco",
        "timestamp": 1631799035
    },
    {
        "content": "<p>congrats for the job!</p>",
        "id": 253581694,
        "sender_full_name": "apiraino",
        "timestamp": 1631799078
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Weekly triage meeting starting now; leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here</p>",
        "id": 253586508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631800843
    },
    {
        "content": "<p>We’ll start off with ~6 minutes for </p>\n<h2>Announcements</h2>",
        "id": 253586576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631800868
    },
    {
        "content": "<ul>\n<li>rustconf was this week. <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ’s talk on contributing to <code>rustc</code> is now up on YouTube: <a href=\"https://www.youtube.com/watch?v=9H9SO2u6Q20\">https://www.youtube.com/watch?v=9H9SO2u6Q20</a><div class=\"youtube-video message_inline_image\"><a data-id=\"9H9SO2u6Q20\" href=\"https://www.youtube.com/watch?v=9H9SO2u6Q20\"><img src=\"https://uploads.zulipusercontent.net/4f82b82945c3ab77d2fb0a61a5362f6867d75785/68747470733a2f2f692e7974696d672e636f6d2f76692f394839534f3275365132302f64656661756c742e6a7067\"></a></div></li>\n</ul>",
        "id": 253586822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631800955
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 253587107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801059
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 253587118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801064
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip: none)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip: about 2w ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: GH none, Zulip: about 2m ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last review activity: GH none, Zulip about 40d ago)</li>\n<li>\"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a> (last review activity: GH None, Zulip about 1m ago)</li>\n<li>\"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a> (last review activity: GH none, Zulip 9d ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 253587139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801074
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253587169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801085
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Add <code>pie</code> relocation-model\" <a href=\"https://github.com/rust-lang/compiler-team/issues/461\">compiler-team#461</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253587226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801108
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Add <code>Rvalue::ShallowInitBox</code> to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/460\">compiler-team#460</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253587246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801116
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Stabilize \"force warn\" option \" <a href=\"https://github.com/rust-lang/rust/issues/86516\">rust#86516</a> </li>\n<li>\"Support <code>#[track_caller]</code> on closures and generators\" <a href=\"https://github.com/rust-lang/rust/pull/87064\">rust#87064</a> </li>\n<li>\"stabilize disjoint capture in closures (RFC 2229)\" <a href=\"https://github.com/rust-lang/rust/issues/88126\">rust#88126</a> </li>\n<li>\"Stabilize reserved prefixes\" <a href=\"https://github.com/rust-lang/rust/issues/88140\">rust#88140</a> </li>\n<li>\"2229: Don't move out of drop type\" <a href=\"https://github.com/rust-lang/rust/pull/88477\">rust#88477</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253587267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801126
    },
    {
        "content": "<h3>WG checkins</h3>\n<p>@<em>WG-mir-optimization</em> by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> (<a href=\"https://hackmd.io/vQr9mk6zSdib5vg9OlHuOQ\">previous checkin</a>):</p>\n<blockquote>\n<p>nothing to report at this time</p>\n</blockquote>\n<p>@<em>WG-polymorphization</em> checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://hackmd.io/vQr9mk6zSdib5vg9OlHuOQ\">previous checkin</a>):</p>\n<blockquote>\n<p>No update from the working group, expect that some progress will be made in the next few weeks.</p>\n</blockquote>",
        "id": 253587294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801135
    },
    {
        "content": "<p>side thought: m is ambiguous for month and minute (though context most likely disambiguates sufficiently)</p>",
        "id": 253587306,
        "sender_full_name": "nagisa",
        "timestamp": 1631801141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> ^</p>",
        "id": 253587344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801154
    },
    {
        "content": "<p>ok will disambiguate :)</p>",
        "id": 253587419,
        "sender_full_name": "apiraino",
        "timestamp": 1631801171
    },
    {
        "content": "<p>I’m not sure how best to resolve that</p>",
        "id": 253587423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801173
    },
    {
        "content": "<p>(other than, expanding to <em>N</em>min and <em>N</em>mon ?)</p>",
        "id": 253587462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801188
    },
    {
        "content": "<p>or <code>minutes</code> and <code>months</code> ?:)</p>",
        "id": 253587508,
        "sender_full_name": "apiraino",
        "timestamp": 1631801208
    },
    {
        "content": "<p>anyway <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 253587541,
        "sender_full_name": "apiraino",
        "timestamp": 1631801223
    },
    {
        "content": "<p>That would be fine too. Use your best judgement!</p>",
        "id": 253587582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801237
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 253587601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801245
    },
    {
        "content": "<p>We're getting close to merging <a href=\"https://github.com/rust-lang/rust/pull/82183\">@**mw**'s PR</a> to use an on disk hash table to store DefPathHash. This yields some <a href=\"https://perf.rust-lang.org/compare.html?start=da7d405357600a76f2b93b8aa41fe5ee5da7885d&amp;end=9b80ef6da24918fc1a6e755aa805a2ee0994ea8a\">nice wins to incremental performance</a>. It will probably be landing within the next week. </p>\n<p>Just wanted to give a heads up so if we see any ICEs that look related come in after this merges, please ping us on that bug report so we can investigate.</p>",
        "id": 253587615,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631801252
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Change scope of temporaries in match guards\" <a href=\"https://github.com/rust-lang/rust/pull/88678\">rust#88678</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n<li>assigned <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, comments that <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure.202021-09-05/near/252170503\">this fix is small and contained</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253587616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801252
    },
    {
        "content": "<p>so is <a href=\"https://github.com/rust-lang/rust/issues/88649\">#88649</a> a beta-regression then?</p>",
        "id": 253587896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801372
    },
    {
        "content": "<p>oh I see, it is now because of the timing of the release, okay</p>",
        "id": 253588002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801406
    },
    {
        "content": "<blockquote>\n<p>This change isn't done for if expressions because that affects a large number of mir-opt tests and could more significantly affect performance.</p>\n</blockquote>\n<p>Does this mean we have a similar issue with <code>if</code> or <code>if let</code> that is not yet resolved?</p>",
        "id": 253588120,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631801451
    },
    {
        "content": "<p>That’s a good question</p>",
        "id": 253588169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801470
    },
    {
        "content": "<p>IIRC <code>if let</code> uses this same code so it's probably also resolved there. Not sure about <code>if</code> though...</p>",
        "id": 253588351,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631801543
    },
    {
        "content": "<p>if PR <a href=\"https://github.com/rust-lang/rust/issues/88572\">#88572</a> is the injection point, does that provide some evidence that <code>if</code> is likely not effected?</p>",
        "id": 253588466,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801585
    },
    {
        "content": "<p>The original ticket is a stable to nightly (now beta) regression <a href=\"https://github.com/rust-lang/rust/issues/88649\">https://github.com/rust-lang/rust/issues/88649</a><br>\nDoes this mean that 1.55 was fine?</p>",
        "id": 253588491,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631801593
    },
    {
        "content": "<p>It sounds like we have a number of questions that it would be good to resolve</p>",
        "id": 253588551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801622
    },
    {
        "content": "<p>luckily we’re not in a rush</p>",
        "id": 253588563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801626
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/88572\">https://github.com/rust-lang/rust/pull/88572</a> which introduced this according to comments in <a href=\"https://github.com/rust-lang/rust/issues/88649\">#88649</a> landed in 1.56</p>",
        "id": 253588647,
        "sender_full_name": "simulacrum",
        "timestamp": 1631801649
    },
    {
        "content": "<p>I left a question on PR <a href=\"https://github.com/rust-lang/rust/issues/88678\">#88678</a> about the scope of <a href=\"https://github.com/rust-lang/rust/issues/88649\">#88649</a> itself</p>",
        "id": 253588939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801765
    },
    {
        "content": "<p>but I think we are probably justified in backport approving this</p>",
        "id": 253588976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801786
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Add a regression test for <a href=\"https://github.com/rust-lang/rust/issues/88649\">#88649</a>\" <a href=\"https://github.com/rust-lang/rust/pull/88691\">rust#88691</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"374396\">@hyd-dev</span></li>\n<li>PR closed <a href=\"https://github.com/rust-lang/rust/issues/88649\">rust#88649</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253589067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801822
    },
    {
        "content": "<p>hmm. I don’t know what precedent we have set for backporting regression tests</p>",
        "id": 253589276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801894
    },
    {
        "content": "<p>on its face, it sounds like a good idea, since you want people testing builds of the beta to get the test coverage they provide</p>",
        "id": 253589312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801917
    },
    {
        "content": "<p>I nominated this because we may want to backport the previous one</p>",
        "id": 253589315,
        "sender_full_name": "simulacrum",
        "timestamp": 1631801918
    },
    {
        "content": "<p>iow, if we're touching that code, I want the code tested</p>",
        "id": 253589351,
        "sender_full_name": "simulacrum",
        "timestamp": 1631801934
    },
    {
        "content": "<p>oh yes, I totally missed the fact that these PR’s are related. :)</p>",
        "id": 253589360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801938
    },
    {
        "content": "<p>okay, yeah, that sounds good to me</p>",
        "id": 253589391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801950
    },
    {
        "content": "<p>I think it's reasonable to treat these as one decision and either backport both or neither.</p>",
        "id": 253589398,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631801953
    },
    {
        "content": "<p>lets treat these as coupled then</p>",
        "id": 253589406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631801957
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Revert anon union parsing\" <a href=\"https://github.com/rust-lang/rust/pull/88775\">rust#88775</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, beta-nominated to have this fix for <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a> in edition 2021</li>\n</ul>\n</li>\n</ul>",
        "id": 253589761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802096
    },
    {
        "content": "<p>In my memory originally the change was made in an effort to improve diagnostics.</p>",
        "id": 253589918,
        "sender_full_name": "nagisa",
        "timestamp": 1631802149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-16.20.2354818/near/253589918\">said</a>:</p>\n<blockquote>\n<p>In my memory originally the change was made in an effort to improve diagnostics.</p>\n</blockquote>\n<p>you mean the addition of anon union parsing?</p>",
        "id": 253589969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802167
    },
    {
        "content": "<p>yeah. Which makes this seem like an obvious <span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span>.</p>",
        "id": 253589997,
        "sender_full_name": "nagisa",
        "timestamp": 1631802183
    },
    {
        "content": "<p>You mean because unbreaking code has higher priority than improving diagnostics?</p>",
        "id": 253590062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802219
    },
    {
        "content": "<p><em>nods</em></p>",
        "id": 253590168,
        "sender_full_name": "nagisa",
        "timestamp": 1631802252
    },
    {
        "content": "<p>anyway the PR’s this reverts were meant to be more than just diagnostic fixes; they were meant to be foundation for RFC 2102, if i understand correctly</p>",
        "id": 253590182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802257
    },
    {
        "content": "<p>the main reasons I haven’t unilaterally approved backport here are: 1. I wrote the PR, so I feel uncomfortable unilaterally approving it if there isn’t dire urgency, and 2. there was a little bit of manual editing of the reverts, in places where it didn’t revert cleanly.</p>",
        "id": 253590299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802313
    },
    {
        "content": "<p>Please let's make whoever relands this that there's a fix already for it that keeps the new diagnostics but fixes the parser</p>",
        "id": 253590316,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802321
    },
    {
        "content": "<p>sorry <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> I could’t parse that</p>",
        "id": 253590368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802347
    },
    {
        "content": "<p>And we need a thorough union in all places test</p>",
        "id": 253590378,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802350
    },
    {
        "content": "<p>was there a missing word, like “make them <em>remember</em> …” ?</p>",
        "id": 253590399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802359
    },
    {
        "content": "<p>Yes</p>",
        "id": 253590453,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802367
    },
    {
        "content": "<p>ok</p>",
        "id": 253590464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802373
    },
    {
        "content": "<p>well it looks like people are onboard for backport approval</p>",
        "id": 253590502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802388
    },
    {
        "content": "<p>(Walking the dog janking on leash)</p>",
        "id": 253590507,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802390
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 253590575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802418
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 253590587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802424
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 253590610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802431
    },
    {
        "content": "<ul>\n<li>\"Perform type inference in range pattern\" <a href=\"https://github.com/rust-lang/rust/pull/88090\">rust#88090</a><ul>\n<li>I-nominated, waiting for <code>T-lang</code> feedback</li>\n</ul>\n</li>\n</ul>",
        "id": 253590621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802437
    },
    {
        "content": "<p>(so this isn’t us.)</p>",
        "id": 253590635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802441
    },
    {
        "content": "<p>(T-lang meeting was pre-empted by RustConf this week. Hopefully T-lang will get to it next week.)</p>",
        "id": 253590666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802455
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 253590680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802461
    },
    {
        "content": "<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last review activity: 3 months ago)<ul>\n<li>last week <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned</li>\n</ul>\n</li>\n</ul>",
        "id": 253590692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802468
    },
    {
        "content": "<p>hmm. I’m not going to be able to look at <a href=\"https://github.com/rust-lang/rust/issues/85013\">rust#85013</a> until after Monday at the earliest</p>",
        "id": 253590722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802481
    },
    {
        "content": "<p>I haven't had much time over the last week to look at it but it is on my todo list. <span aria-label=\"slight frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"slight frown\">:slight_frown:</span></p>",
        "id": 253590853,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631802523
    },
    {
        "content": "<p>likewise for next one</p>",
        "id": 253590857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802524
    },
    {
        "content": "<ul>\n<li>\"Add basic checks for well-formedness of <code>fn</code>/<code>fn_mut</code> lang items\" <a href=\"https://github.com/rust-lang/rust/pull/86246\">rust#86246</a> (last review activity: 3 months ago)<ul>\n<li>last week <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned</li>\n</ul>\n</li>\n</ul>",
        "id": 253590859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802525
    },
    {
        "content": "<p>it seems like it will be fine for them to wait until after Monday</p>",
        "id": 253590934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802553
    },
    {
        "content": "<ul>\n<li>\"check where-clause for explicit <code>Sized</code> before suggesting <code>?Sized</code>\" <a href=\"https://github.com/rust-lang/rust/pull/86455\">rust#86455</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 253590972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802567
    },
    {
        "content": "<p>this is currently assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , whom I know has been busy</p>",
        "id": 253591062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802599
    },
    {
        "content": "<p>I could potentially take over this</p>",
        "id": 253591152,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631802621
    },
    {
        "content": "<p>How are you feeling about this, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , should we try to figure out a way to reassign?</p>",
        "id": 253591159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802625
    },
    {
        "content": "<p>Ill take a look at it tomorrow</p>",
        "id": 253591222,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802647
    },
    {
        "content": "<p>okay</p>",
        "id": 253591229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802651
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/81746\">#81746</a> (Distribute cg_clif as rustup component on the nightly channel) has been sitting without review for quite a while. I only marked it as draft as it depends on a couple of fixes to rust-installer (<a href=\"https://github.com/rust-lang/rust-installer/issues/112\">rust-lang/rust-installer#112</a>) which haven't been reviewed either.</p>",
        "id": 253591272,
        "sender_full_name": "bjorn3",
        "timestamp": 1631802664
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> if you run out of time, feel free to reassign to me</p>",
        "id": 253591299,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631802673
    },
    {
        "content": "<p>I have a few in my queue I've been procrastinating on because I want to be thorough on them</p>",
        "id": 253591332,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631802684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> yeah I don’t know what our official philosophy is about whether reviewers should treat DRAFT as Work-in-Progress</p>",
        "id": 253591426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802721
    },
    {
        "content": "<p>Should I mark it as ready?</p>",
        "id": 253591512,
        "sender_full_name": "bjorn3",
        "timestamp": 1631802746
    },
    {
        "content": "<p>I do see evidence that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has provided some feedback along the way?</p>",
        "id": 253591516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802747
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/81746\">#81746</a> should be assigned to me</p>",
        "id": 253591563,
        "sender_full_name": "simulacrum",
        "timestamp": 1631802768
    },
    {
        "content": "<p>maybe easier/better to just talk directly to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> to let them know its ready</p>",
        "id": 253591581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802776
    },
    {
        "content": "<p>it's not waiting-on-review so I don't see it in my review queue :)</p>",
        "id": 253591620,
        "sender_full_name": "simulacrum",
        "timestamp": 1631802791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> oh, I wasn’t clear. It <em>is</em> assigned to you</p>",
        "id": 253591625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802793
    },
    {
        "content": "<p>Ah, fair enough</p>",
        "id": 253591665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-16.20.2354818/near/253591620\">said</a>:</p>\n<blockquote>\n<p>it's not waiting-on-review so I don't see it in my review queue :)</p>\n</blockquote>\n<p>right, didn't think about that.</p>",
        "id": 253591691,
        "sender_full_name": "bjorn3",
        "timestamp": 1631802817
    },
    {
        "content": "<p>anyway lets get through the rest of this week’s queue</p>",
        "id": 253591713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802825
    },
    {
        "content": "<ul>\n<li>\"Use DefPathHash instead of HirId to break inlining cycles.\" <a href=\"https://github.com/rust-lang/rust/pull/85321\">rust#85321</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 253591740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802837
    },
    {
        "content": "<p>it sounds ilke there’s been a request from <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> here for a perf run, along with suggestions from <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> on how to actually architect a meaningful perf run.</p>",
        "id": 253591925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802904
    },
    {
        "content": "<p>Does that sounds accurate?</p>",
        "id": 253591932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802908
    },
    {
        "content": "<p>I think this should be waiting-on-author?</p>",
        "id": 253591938,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631802911
    },
    {
        "content": "<p>Yeah I agree with that</p>",
        "id": 253591958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> or <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> : would one of you mind updating the label and writing a note explaining what the author is being asked for?</p>",
        "id": 253592027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802947
    },
    {
        "content": "<p>next</p>",
        "id": 253592068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802960
    },
    {
        "content": "<ul>\n<li>\"Account for incorrect <code>impl Foo&lt;const N: ty&gt; {}</code> syntax\" <a href=\"https://github.com/rust-lang/rust/pull/85346\">rust#85346</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 253592140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631802970
    },
    {
        "content": "<p>I think maybe <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> just got stuck</p>",
        "id": 253592175,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631802985
    },
    {
        "content": "<p>also probably just mislabeled</p>",
        "id": 253592199,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631802993
    },
    {
        "content": "<p>oh, but also, is varkor still around?</p>",
        "id": 253592225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803002
    },
    {
        "content": "<p>I had thought they took a break from the project</p>",
        "id": 253592260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803010
    },
    {
        "content": "<p>so we probably want to reassign reviewer here anyway</p>",
        "id": 253592342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> maybe follow-up with me about that, <em>after</em> Monday? :)</p>",
        "id": 253592392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803052
    },
    {
        "content": "<p>I don't know. The pr introduces a test failure that baffles me and I haven't figured out out</p>",
        "id": 253592424,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631803065
    },
    {
        "content": "<p>okay</p>",
        "id": 253592452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803074
    },
    {
        "content": "<p>Sounds good to me <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 253592466,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631803079
    },
    {
        "content": "<p>lets try to poke at it</p>",
        "id": 253592535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803090
    },
    {
        "content": "<p>next</p>",
        "id": 253592559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803102
    },
    {
        "content": "<h2>Issues of Note</h2>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">76 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">51 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 1 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 0 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 45 P-high, 83 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 253592561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803103
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Type called union wreaks havoc since 1.54\" <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a> <ul>\n<li>fixed by Felix's PR <a href=\"https://github.com/rust-lang/rust/pull/88775\">rust#88775</a></li>\n</ul>\n</li>\n</ul>",
        "id": 253592585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803117
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 253592593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803123
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 253592609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803130
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 253592620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803137
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-14.md\">triage logs for 2021-09-14</a></p>\n</blockquote>\n<p>Fairly busy week, with some large improvements on several benchmarks. Several larger rollups landed, in part due to recovery from a temporary CI outage, which has complicated some of the performance monitoring work. These should, however, now be resolved.</p>\n<p>Triage done by <strong>@simulacrum</strong>. 2 Regressions, 2 Improvements, 5 Mixed; 2 of them in rollups<br>\n31 comparisons made in total</p>",
        "id": 253592648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803147
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> didn’t the perf interface also change this week? With the new “Significance Factor” column? Or was that added last week?</p>",
        "id": 253592733,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803188
    },
    {
        "content": "<p>Anyway!</p>",
        "id": 253592758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803200
    },
    {
        "content": "<p>I don't typically note that in here, but yes</p>",
        "id": 253592763,
        "sender_full_name": "simulacrum",
        "timestamp": 1631803202
    },
    {
        "content": "<p>I know not every UI change is worth noting</p>",
        "id": 253592841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803220
    },
    {
        "content": "<p>There's going to be more to say on that front when we switch to the new significance algorithm</p>",
        "id": 253592842,
        "sender_full_name": "simulacrum",
        "timestamp": 1631803220
    },
    {
        "content": "<p>I see, okay</p>",
        "id": 253592854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803225
    },
    {
        "content": "<p>so there’s a column, but the formula it uses is likely to change soon, and so its better to wait before we talk a lot about it?</p>",
        "id": 253592900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803254
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Encode spans relative to the enclosing item <a href=\"https://github.com/rust-lang/rust/issues/84373\">#84373</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=8c2b6ea37d7719a0370bd404030eef9702c1752c&amp;end=547d9374d26f203ab963b3ffe1ed36bd70f16633&amp;stat=instructions:u\">instruction counts</a> (up to 2.1% on <code>incr-unchanged</code> builds of <code>tuple-stress</code>)</li>\n<li>Regressions are much smaller on \"full\" benchmarks (&lt;0.5%). This support has  also landed gated behind a -Z flag, so the incremental cost is being paid  without the possible wins.</li>\n</ul>\n<p>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/88881\">#88881</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9ef27bf7dc50a8b51435579b4f2e86f7ee3f7a94&amp;end=c7dbe7a830100c70d59994fd940bf75bb6e39b39&amp;stat=instructions:u\">instruction counts</a> (up to 2.1% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>No clear cause. Investigation is partially ongoing, but may warrant an<br>\n  assignee -- there's several possible candidates.</li>\n</ul>",
        "id": 253592930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803268
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/88857\">#88857</a></li>\n<li>Use FxHashSet instead of Vec for well formed tys <a href=\"https://github.com/rust-lang/rust/issues/88771\">#88771</a></li>\n</ul>",
        "id": 253593094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803324
    },
    {
        "content": "<p>The improvement in <a href=\"https://github.com/rust-lang/rust/issues/88857\">#88857</a> is really big</p>",
        "id": 253593128,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803344
    },
    {
        "content": "<p>like 40% for the coercions bench</p>",
        "id": 253593161,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803359
    },
    {
        "content": "<p>(because of <a href=\"https://github.com/rust-lang/rust/issues/88147\">#88147</a>, it was unexpected)</p>",
        "id": 253593185,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803375
    },
    {
        "content": "<p>would it merit teasing out where it originated in the rollup?</p>",
        "id": 253593196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803379
    },
    {
        "content": "<p>okay so it was already isolated to PR <a href=\"https://github.com/rust-lang/rust/issues/88147\">#88147</a> ?</p>",
        "id": 253593243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803395
    },
    {
        "content": "<p>Yep</p>",
        "id": 253593252,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803399
    },
    {
        "content": "<p>huh</p>",
        "id": 253593275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803407
    },
    {
        "content": "<p>Just thought it was a really nice thing to note</p>",
        "id": 253593299,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803417
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=641e02f388acc6b1d316a59c605a32d1711a8758&amp;end=43769af69e43d0fb9770f0a392671f000595df78\">https://perf.rust-lang.org/compare.html?start=641e02f388acc6b1d316a59c605a32d1711a8758&amp;end=43769af69e43d0fb9770f0a392671f000595df78</a></p>",
        "id": 253593312,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803424
    },
    {
        "content": "<p>I see, there was even dialog about this on PR <a href=\"https://github.com/rust-lang/rust/issues/88857\">#88857</a></p>",
        "id": 253593354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803440
    },
    {
        "content": "<p>Yes. Anyways, nothing to discuss, just figured people like seeing huge wins</p>",
        "id": 253593461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803476
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Split rustc_mir <a href=\"https://github.com/rust-lang/rust/issues/80522\">#80522</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=47ae8deb8a35030bdc4e502b03400800864cc264&amp;end=97032a6dfacdd3548e4bff98c90a6b3875a14077&amp;stat=instructions:u\">instruction counts</a> (up to -2.0% on <code>full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=47ae8deb8a35030bdc4e502b03400800864cc264&amp;end=97032a6dfacdd3548e4bff98c90a6b3875a14077&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>full</code> builds of <code>await-call-tree</code>)</li>\n<li>Mixed results. Noted in a comment that this also was a slight regression in<br>\n  bootstrap time as measured by <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a>, which seems unfortunate and<br>\n  may merit some investigation.</li>\n</ul>\n<p>Rollup of 15 pull requests <a href=\"https://github.com/rust-lang/rust/issues/88824\">#88824</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b69fe57261086e70aea9d5b58819a1794bf7c121&amp;end=22719efcc570b043f2e519d6025e5f36eab38fe2&amp;stat=instructions:u\">instruction counts</a> (up to -0.7% on <code>incr-patched: println</code> builds of <code>html5ever</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b69fe57261086e70aea9d5b58819a1794bf7c121&amp;end=22719efcc570b043f2e519d6025e5f36eab38fe2&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>incr-unchanged</code> builds of <code>derive</code>)</li>\n<li>Report seems a little bit close to noise, and is definitely mixed. No clear<br>\n  cause, but also a fairly large rollup.</li>\n</ul>\n<p>Refactor query forcing <a href=\"https://github.com/rust-lang/rust/issues/78780\">#78780</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=43769af69e43d0fb9770f0a392671f000595df78&amp;end=8c2b6ea37d7719a0370bd404030eef9702c1752c&amp;stat=instructions:u\">instruction counts</a> (up to -0.9% on <code>incr-full</code> builds of <code>unused-warnings</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=43769af69e43d0fb9770f0a392671f000595df78&amp;end=8c2b6ea37d7719a0370bd404030eef9702c1752c&amp;stat=instructions:u\">instruction counts</a> (up to 1.3% on <code>incr-patched: println</code> builds of <code>coercions</code>)</li>\n<li>Solid improvement in rustc_query_impl compile times (8%). Overall looks like<br>\n  results are overall more of an improvement than a regression.</li>\n</ul>\n<p>Update LLVM submodule <a href=\"https://github.com/rust-lang/rust/issues/88765\">#88765</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=0273e3bce7a0ce49e96a9662163e2380cb87e0be&amp;end=0212c70b1df2aa542aef48d5fcde0af3734970c6&amp;stat=instructions:u\">instruction counts</a> (up to -0.7% on <code>full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=0273e3bce7a0ce49e96a9662163e2380cb87e0be&amp;end=0212c70b1df2aa542aef48d5fcde0af3734970c6&amp;stat=instructions:u\">instruction counts</a> (up to 0.7% on <code>incr-unchanged</code> builds of <code>ripgrep</code>)</li>\n<li>Fairly mixed results, no clear picture either way.</li>\n</ul>",
        "id": 253593482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803486
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88881\">#88881 Rollup of 7 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88824\">#88824 Rollup of 15 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88765\">#88765 Update LLVM submodule</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88710\">#88710 Use index newtyping for TyVid</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88597\">#88597 Move global analyses from lowering to resolution</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88552\">#88552 Stop allocating vtable entries for non-object-safe methods</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88533\">#88533 Concrete regions can show up in mir borrowck if the originated from there</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88530\">#88530 Shrink Session a bit</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88435\">#88435 Avoid invoking the hir_crate query to traverse the HIR</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87815\">#87815 encode <code>generics_of</code> for fields and ty params</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87688\">#87688 Introduce <code>let...else</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87640\">#87640 Rollup of 9 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87587\">#87587 Various refactorings of the TAIT infrastructure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87244\">#87244 Better diagnostics with mismatched types due to implicit static lifetime</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86898\">#86898 Add fast path for Path::cmp that skips over long shared prefixes</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86698\">#86698 Move OnDiskCache to rustc_query_impl.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to 🛡️ against 💥 💥-payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85556\">#85556 Warn about unreachable code following an expression with an uninhabited type</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84373\">#84373 Encode spans relative to the enclosing item</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/80522\">#80522 Split rustc_mir</a></li>\n</ul>",
        "id": 253593627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803545
    },
    {
        "content": "<p>That list is getting pretty long</p>",
        "id": 253593668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803557
    },
    {
        "content": "<p>We don’t really have a strategy for working through the list</p>",
        "id": 253593772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803593
    },
    {
        "content": "<p>I'm working through it a little bit -- but definitely could use more ownership of regressions from authors/reviewers in their PRs</p>",
        "id": 253593877,
        "sender_full_name": "simulacrum",
        "timestamp": 1631803643
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86034\">#86034</a> has a PR by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 253593900,
        "sender_full_name": "nagisa",
        "timestamp": 1631803655
    },
    {
        "content": "<p>Ah, I guess this list was constructed before the label changed 13 hours ago</p>",
        "id": 253594011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803690
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged+sort%3Aupdated-asc\">https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged+sort%3Aupdated-asc</a> is a current list</p>",
        "id": 253594054,
        "sender_full_name": "simulacrum",
        "timestamp": 1631803703
    },
    {
        "content": "<p>the aforementioned PR seems to be <a href=\"https://github.com/rust-lang/rust/issues/88988\">#88988</a></p>",
        "id": 253594062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803706
    },
    {
        "content": "<p>so thank you for doing that, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 253594075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803712
    },
    {
        "content": "<p>I wonder if there's a way that we can maybe make figuring out a fix for these easier</p>",
        "id": 253594120,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803732
    },
    {
        "content": "<p>There's some discussion about that in <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/cachegrind.20perf.20triage\">#t-compiler/performance &gt; cachegrind perf triage</a></p>\n<p>in particular, <a href=\"https://github.com/rust-lang/rust/pull/87244#issuecomment-920538189\">https://github.com/rust-lang/rust/pull/87244#issuecomment-920538189</a> may be of interest to folks</p>",
        "id": 253594166,
        "sender_full_name": "simulacrum",
        "timestamp": 1631803750
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 253594183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803757
    },
    {
        "content": "<p>If that's automating generating perf diffs during perf benchmarking or something</p>",
        "id": 253594189,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803759
    },
    {
        "content": "<ul>\n<li>\"Perform type inference in range pattern\" <a href=\"https://github.com/rust-lang/rust/pull/88090\">rust#88090</a> <ul>\n<li>nomination is for <code>T-lang</code></li>\n</ul>\n</li>\n</ul>",
        "id": 253594197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803763
    },
    {
        "content": "<p>(so again, we leave that for <code>T-lang</code>)</p>",
        "id": 253594214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803771
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 253594223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803776
    },
    {
        "content": "<h2>Oh, one more thing</h2>\n<ul>\n<li><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> proposal to host T-compiler agenda meetings <a href=\"#narrow/stream/131828-t-compiler/topic/Hosting.20meetings.20agenda.20on.20a.20git.20repo\">on a git repo</a></li>\n</ul>",
        "id": 253594239,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803783
    },
    {
        "content": "<p>which we can discuss in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/Hosting.20meetings.20agenda.20on.20a.20git.20repo\">#t-compiler &gt; Hosting meetings agenda on a git repo</a></p>",
        "id": 253594316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803805
    },
    {
        "content": "<p>I'm definitely in favor of adding meeting agendas to github</p>",
        "id": 253594357,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631803819
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-16.20.2354818/near/253594166\">said</a>:</p>\n<blockquote>\n<p>There's some discussion about that in <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/cachegrind.20perf.20triage\">#t-compiler/performance &gt; cachegrind perf triage</a></p>\n<p>in particular, <a href=\"https://github.com/rust-lang/rust/pull/87244#issuecomment-920538189\">https://github.com/rust-lang/rust/pull/87244#issuecomment-920538189</a> may be of interest to folks</p>\n</blockquote>\n<p>CacheGrind as a service might be interesting to investigate</p>",
        "id": 253594624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803940
    },
    {
        "content": "<p>I.e., as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> notes in <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/cachegrind.20perf.20triage\">#t-compiler/performance &gt; cachegrind perf triage</a> , <code>cachegrind</code> itself is too slow to make it part of the normal pipeline that perf.rlo uses</p>",
        "id": 253594701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631803973
    },
    {
        "content": "<p>but since it emulates behavior, it (unlike perf) can be an entirely separate machine or set of machines.</p>",
        "id": 253594787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> also noted in the above linked comment that the output of <code>cg_diff</code> directly doesn’t work well, because the hashs for each compiler are embedded into the paths</p>",
        "id": 253595034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804083
    },
    {
        "content": "<p>which makes me wonder: Could we remove the obstacle itself there?</p>",
        "id": 253595076,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804102
    },
    {
        "content": "<p>this is trivially solveable with some sed'ing so it's not really a problem</p>",
        "id": 253595080,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804104
    },
    {
        "content": "<p>Have some bootstrap mode that doesn’t embed the hashes, that is</p>",
        "id": 253595130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804124
    },
    {
        "content": "<p>well, it needs to be the binaries that we ship</p>",
        "id": 253595145,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804133
    },
    {
        "content": "<p>oh, we only do these cachegrind runs on the binaries we ship?</p>",
        "id": 253595184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804152
    },
    {
        "content": "<p>normally bootstrap doesn't embed hashes, that's only something we do in the dist builders I believe</p>",
        "id": 253595186,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804152
    },
    {
        "content": "<p>I mean, I could build locally, that's just more hassle</p>",
        "id": 253595262,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804170
    },
    {
        "content": "<p>there's no such thing as \"cachegrind runs\"</p>",
        "id": 253595282,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804178
    },
    {
        "content": "<p>yes, I just meant  “when you run cachegrind\"</p>",
        "id": 253595315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804197
    },
    {
        "content": "<p>ah, sure, yeah, I run these on the rustup-toolchain-install-master artifacts (which are 1:1 with nightlies/stable/etc )</p>",
        "id": 253595358,
        "sender_full_name": "simulacrum",
        "timestamp": 1631804219
    },
    {
        "content": "<p>anyway there’s potential food for thought there</p>",
        "id": 253595392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804231
    },
    {
        "content": "<p>okay I think that’s everything</p>",
        "id": 253595507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804276
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for coming!</p>",
        "id": 253595564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631804284
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/GtwX44b4QwOSG-G5ZRMqRA?view\">https://hackmd.io/GtwX44b4QwOSG-G5ZRMqRA?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n</ul>",
        "id": 253596212,
        "sender_full_name": "apiraino",
        "timestamp": 1631804518
    }
]