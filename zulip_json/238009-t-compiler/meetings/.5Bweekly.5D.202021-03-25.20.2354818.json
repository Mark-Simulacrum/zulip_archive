[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/UZ8VFdqFT0mJtGRnm-Lwmw?view\">meeting agenda</a></p>\n<p>We will have checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span>  checkin by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>: anything to share?</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>  by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>: anything to share?</li>\n</ul>",
        "id": 231788985,
        "sender_full_name": "apiraino",
        "timestamp": 1616674188
    },
    {
        "content": "<p>(I will probably not be able to attend today, but I'll definitively read the log later)</p>",
        "id": 231789604,
        "sender_full_name": "apiraino",
        "timestamp": 1616674445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , by the way, do you have a doc ready yet for the design meeting tomorrow?</p>",
        "id": 231798142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616678243
    },
    {
        "content": "<p>if not, let me know, and I will carve out some time today for us to work on one together.</p>",
        "id": 231798183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616678270
    },
    {
        "content": "<p>Yes, we do! Thanks to <span class=\"user-mention\" data-user-id=\"360752\">@Ariadne Conill</span> and <span class=\"user-mention\" data-user-id=\"396723\">@Ã‰rico Nogueira Rolim</span> for working with me on that.</p>\n<p><a href=\"https://hackmd.io/YoAGSxUsRWumVvbRiHddrg\">https://hackmd.io/YoAGSxUsRWumVvbRiHddrg</a></p>",
        "id": 231798380,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616678359
    },
    {
        "content": "<p>WG-llvm update: We bumped the LLVM version to a commit from a 12-series branch as well as the minimum LLVM version from 9 to 10. There has been a concentrated effort to clean up a number of regressions that we ended up hitting as well as to enable various features (e.g. noalias) that are fixed in LLVM 12.</p>\n<p>As there was a recent train roll-over and there are still some outstanding issues surfaced by LLVM12, fixes that we make over the next 6 weeks to the regressions caused by this upgrade should be often be backported.</p>",
        "id": 231799029,
        "sender_full_name": "nagisa",
        "timestamp": 1616678633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> great. I wrote up notes for wg-incr-comp (they're in agenda already).</p>",
        "id": 231799342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616678755
    },
    {
        "content": "<p>(I'll transcribe <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> 's notes now; thanks for those, @nagisa!)</p>",
        "id": 231799418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616678771
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , our weekly triage meeting is starting now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here!</p>",
        "id": 231805371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616680956
    },
    {
        "content": "<p>We're start off with eight minutes for </p>\n<h2>Announcements</h2>",
        "id": 231805458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616680987
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Today the new stable release 1.51 is out <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 231805493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616680995
    },
    {
        "content": "<ul>\n<li>Tomorrow <strong>March 26 10am EDT (14:00 UTC)</strong> <a href=\"https://github.com/rust-lang/rust/pull/82556#issuecomment-804087406\">compiler team meeting</a> to decide on the behaviour of <code>musl-</code> targets compiling<br>\n    - current background doc for design meeting: <a href=\"https://hackmd.io/YoAGSxUsRWumVvbRiHddrg\">https://hackmd.io/YoAGSxUsRWumVvbRiHddrg</a></li>\n</ul>",
        "id": 231805534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681012
    },
    {
        "content": "<h3>MCPs/FCPs</h3>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Lint large assignments and locals\" <a href=\"https://github.com/rust-lang/compiler-team/issues/420\">compiler-team#420</a></li>\n<li>(pnkfelix just seconded the latter just before this meeting. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</li>\n</ul>\n</li>\n</ul>",
        "id": 231805730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681067
    },
    {
        "content": "<p>Though, I'm not 100% clear on whether the MCP process dictates that a full-team FCP-checkoff is necessary for a lint. I think a second + ten day period for objections suffices here.</p>",
        "id": 231805838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681109
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></li>\n<li>\"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></li>\n<li>\"Embed version numbers in backport nominations and regression labels\" <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"Eagerly construct bodies of THIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/409\">compiler-team#409</a></li>\n<li>\"Lang Item for Transmutability\" <a href=\"https://github.com/rust-lang/compiler-team/issues/411\">compiler-team#411</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231805879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681124
    },
    {
        "content": "<p>There was another MCP 3 hours ago: <a href=\"https://github.com/rust-lang/compiler-team/issues/421\">https://github.com/rust-lang/compiler-team/issues/421</a> (Rename -Cllvm-args to something backend agnostic)</p>",
        "id": 231805918,
        "sender_full_name": "bjorn3",
        "timestamp": 1616681139
    },
    {
        "content": "<p>(I'd love to try to put some protocol in place to ensure we process the old MCP's in some sort of manner. Just even setting appropriate expectations for when they will be either seconded or closed as \"without interest\" would be better than status quo, I think.)</p>",
        "id": 231806112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681199
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"reduce threads spawned by ui-tests\" <a href=\"https://github.com/rust-lang/rust/pull/81942\">rust#81942</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231806157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681220
    },
    {
        "content": "<p>(that's waiting on boxes from any one of <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> )</p>",
        "id": 231806262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681261
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Filter out query machinery from compiler backtraces by default\" <a href=\"https://github.com/rust-lang/compiler-team/issues/410\">compiler-team#410</a></li>\n<li>\"MCP: Embed the <code>hir_id</code> of the _awaited expression_ into <code>DesugaringKind</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/413\">compiler-team#413</a></li>\n<li>\"Switch JSON serialization from rustc_serialize to serde\" <a href=\"https://github.com/rust-lang/compiler-team/issues/418\">compiler-team#418</a></li>\n<li>\"Adding diesel to the cargotest suite\" <a href=\"https://github.com/rust-lang/rust/pull/81507\">rust#81507</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231806314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681278
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 231806372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681289
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"tracking issue for <code>debug_non_exhaustive</code> feature\" <a href=\"https://github.com/rust-lang/rust/issues/67364\">rust#67364</a></li>\n<li>\"Add IEEE 754 compliant fmt/parse of -0, infinity, NaN\" <a href=\"https://github.com/rust-lang/rust/pull/78618\">rust#78618</a></li>\n<li>\"Added #[repr(transparent)] to core::cmp::Reverse\" <a href=\"https://github.com/rust-lang/rust/pull/81879\">rust#81879</a></li>\n<li>\"Deprecate <code>doc(include)</code>\" <a href=\"https://github.com/rust-lang/rust/pull/82539\">rust#82539</a></li>\n<li>\"rustdoc: allow list syntax for #[doc(alias)] attributes\" <a href=\"https://github.com/rust-lang/rust/pull/82846\">rust#82846</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231806399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681299
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 231806414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681308
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> checkin by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:<blockquote>\n<p>Most of wg-incr-comp members have been busy with other tasks. We have not had time to revisit any of the A-incr-comp labelled backlog.<br>\nWe have had a lot of positive activity from <span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span> (<a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+author%3Acjgillot\">PRs</a>) and <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> (<a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+author%3Amw\">PRs</a>), especially inflight improvements to how we handle disk/memory traffic for the incremental state (<a href=\"https://github.com/rust-lang/rust/pull/82780\">PR #82780</a>, <a href=\"https://github.com/rust-lang/rust/pull/83214\">PR #83214</a>)<br>\n<span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> enabled incremental hash (ICH) validation (<a href=\"https://github.com/rust-lang/rust/pull/83007\">PR #83007</a>) which has uncovered many pre-existing bugs that they are now fixing.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 231806432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681315
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>: </li>\n</ul>\n<blockquote>\n<p>WG-llvm update: We bumped the LLVM version to a commit from a 12-series branch as well as the minimum LLVM version from 9 to 10. There has been a concentrated effort to clean up a number of regressions that we ended up hitting as well as to enable various features (e.g. noalias) that are fixed in LLVM 12.</p>\n<p>As there was a recent train roll-over and there are still some outstanding issues surfaced by LLVM12, fixes that we make over the next 6 weeks to the regressions caused by this upgrade should be often be backported.</p>\n</blockquote>\n<ul>\n<li>Example of note: <a href=\"https://github.com/rust-lang/rust/issues/83335\">Issue #83335</a>, an AArch64 bare metal miscompile on LLVM12</li>\n</ul>",
        "id": 231806581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681364
    },
    {
        "content": "<p>any more announcements from the group at large?</p>",
        "id": 231806746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681413
    },
    {
        "content": "<p>I'll move along to backport nominations; privmsg me if you want time at end to make another announcement</p>",
        "id": 231806829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681442
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 231806856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681451
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Lower condition of <code>if</code> expression before it's \"then\" block\" <a href=\"https://github.com/rust-lang/rust/pull/82308\">rust#82308</a><ul>\n<li>PR from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> fixes <a href=\"https://github.com/rust-lang/rust/issues/82290\">#82290</a> and a duplicate <a href=\"https://github.com/rust-lang/rust/issues/82250\">#82250</a>. A <code>P-medium</code>, <a href=\"https://github.com/rust-lang/rust/issues/82290#issuecomment-782482808\">see brief explaination</a></li>\n<li>fairly <a href=\"https://github.com/rust-lang/rust/pull/82308#issuecomment-782487249\">safe to backport</a>, was nightly only, a week ago started affecting beta</li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span></li>\n</ul>\n</li>\n</ul>",
        "id": 231806882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681459
    },
    {
        "content": "<p>how did this start affecting beta? Are <code>let_chains</code> stabilized now?</p>",
        "id": 231807161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681550
    },
    {
        "content": "<p>is something that requires nightly? or am I wrong?</p>",
        "id": 231807222,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1616681567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> ^ ?</p>",
        "id": 231807229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681569
    },
    {
        "content": "<p>ah, comment explains</p>",
        "id": 231807291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681591
    },
    {
        "content": "<blockquote>\n<p>Nightly feature let patterns can cause ICE even without the feature gate set. It seems like a case easy to hit, but there's no risk in letting this follow the process.</p>\n</blockquote>",
        "id": 231807326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681599
    },
    {
        "content": "<p>so if you write the code without the feature-gate enabled, you still may hit the ICE. and I guess you don't get any diagnostic at all telling you why it ICE'd, if I understand correctly</p>",
        "id": 231807437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681631
    },
    {
        "content": "<p>Oh, but you do still get the message that <code>let</code> expressions in this position are experimental</p>",
        "id": 231807609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681671
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=fb61caa49134083d3ccad05d95ee5366\">https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=fb61caa49134083d3ccad05d95ee5366</a></p>",
        "id": 231807626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681676
    },
    {
        "content": "<p>Correct. The original repro required nightly, but found another repro that didn't.</p>",
        "id": 231807646,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1616681682
    },
    {
        "content": "<p>right. but even the beta-one still does tell you about the experimentality of the expression, and highlights it</p>",
        "id": 231807719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681706
    },
    {
        "content": "<p>Correct</p>",
        "id": 231807741,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1616681713
    },
    {
        "content": "<p>so that's why its P-medium and not P-high I assume</p>",
        "id": 231807784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681726
    },
    {
        "content": "<p>I can go either way here</p>",
        "id": 231807836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681740
    },
    {
        "content": "<p>I think it is in stable now, given when I checked this. I'm fine with this riding the train.</p>",
        "id": 231807970,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1616681771
    },
    {
        "content": "<p>Must be, yeah</p>",
        "id": 231808107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681811
    },
    {
        "content": "<p>okay lets decline to backport, I think we're okay letting this ride trains</p>",
        "id": 231808135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681821
    },
    {
        "content": "<p>(I do welcome counter arguments. It just doesn't seem worth extra effort to me.)</p>",
        "id": 231808263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681864
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 231808293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681874
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-libs-impl</code> this time.</li>\n<li>No stable nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 231808346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681883
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 231808373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681890
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"add dynamically-linked musl targets\" <a href=\"https://github.com/rust-lang/rust/pull/82556\">rust#82556</a><ul>\n<li>Issue will be discussed at compiler meeting on <a href=\"https://github.com/rust-lang/rust/pull/82556#issuecomment-804087406\">March 26 10am EDT (14:00 UTC)</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231808415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681904
    },
    {
        "content": "<p>We're going to discuss <a href=\"https://github.com/rust-lang/rust/issues/82556\">rust#82556</a> tomorrow, and I linked the background info doc in the announcements</p>",
        "id": 231808503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681931
    },
    {
        "content": "<p>before we move on, I forgot to mention</p>",
        "id": 231808535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681940
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> mentioned to me that the T-rustdoc has more of a real team now</p>",
        "id": 231808598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681960
    },
    {
        "content": "<p>they might be able to take on beta-nomination approval duties again, much the same way we ... agreed (?) to do the same for T-libs-impl</p>",
        "id": 231808683,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616681993
    },
    {
        "content": "<p>just something to think about, I need to circle back with <span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> and double-check my understanding of the state of T-rustdoc.</p>",
        "id": 231808829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682027
    },
    {
        "content": "<p>I think the big question is what do we <em>expect</em> from a team that has that responsibility. E.g. do they need to be having weekly triage meetings, or would monthly suffice?</p>",
        "id": 231808946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682061
    },
    {
        "content": "<p>(I suspect monthly would not suffice, given our 6-week release cycle)</p>",
        "id": 231809017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682080
    },
    {
        "content": "<p>anyway just something I wanted to share, maybe get peoples thoughts on it asynchronously.</p>",
        "id": 231809091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682100
    },
    {
        "content": "<p>back to PRs S-waiting-on-team</p>",
        "id": 231809122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682114
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>\"Use getrandom for generating HashMap seed\" <a href=\"https://github.com/rust-lang/rust/pull/80149\">rust#80149</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"130074\">@Artyom Pavlov</span></li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"243558\">@Steven Fackler</span>, <a href=\"https://github.com/rust-lang/rust/pull/80149#issuecomment-776352953\">raises a question</a> about the policy for adding <code>getrandom</code> as new std dependency</li>\n<li><span class=\"user-mention\" data-user-id=\"131912\">@dhardy</span> describes how <a href=\"https://github.com/rust-lang/rust/pull/80149#issuecomment-776352953\">the evaluation process could be</a></li>\n<li>labeled for T-libs-impl discussion</li>\n</ul>\n</li>\n</ul>",
        "id": 231809148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> are you around? Is T-libs-impl on top of this?</p>",
        "id": 231809241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682140
    },
    {
        "content": "<p>I'm going to assume T-libs-impl will handle this in a timely manner.</p>",
        "id": 231809345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682172
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">62 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">39 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 3 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 0 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stabl\ne\">0 P-critical, 37 P-high, 90 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 231809369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682180
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 231809446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682214
    },
    {
        "content": "<ul>\n<li>\"<code>probe-stack=inline-asm</code> generates wrong DWARF information\" <a href=\"https://github.com/rust-lang/rust/issues/83139\">rust#83139</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-18.20.2354818/near/230877570\">discussed last week</a>, outcome was that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self assigns and revert PR <a href=\"https://github.com/rust-lang/rust/pull/77885\">#77885</a> (or part of it)</li>\n<li>probably can be now downgraded to <code>P-high</code> (as it's clearly not a release blocker)</li>\n</ul>\n</li>\n</ul>",
        "id": 231809484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682229
    },
    {
        "content": "<p>so, wait: I don't know if I understand the reasoning in that bullet</p>",
        "id": 231809520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682242
    },
    {
        "content": "<p>(unfortunately <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> is not here)</p>",
        "id": 231809580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682253
    },
    {
        "content": "<p>or, mm</p>",
        "id": 231809673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682281
    },
    {
        "content": "<p>well, here was what I was wondering</p>",
        "id": 231809693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-25.20.2354818/near/231809520\">said</a>:</p>\n<blockquote>\n<p>so, wait: I don't know if I understand the reasoning in that bullet</p>\n</blockquote>\n<p>reference to this: <br>\n<a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818/near/221297038\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818/near/221297038</a></p>",
        "id": 231809736,
        "sender_full_name": "apiraino",
        "timestamp": 1616682301
    },
    {
        "content": "<p>We did revert the relevant effect of PR <a href=\"https://github.com/rust-lang/rust/issues/77885\">#77885</a> on stable only</p>",
        "id": 231809741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682302
    },
    {
        "content": "<p>so its <em>possible</em> this would remain a release blocker. Or rather, other P-critical issues that were handled in that way <em>could</em> remain P-critical</p>",
        "id": 231809860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682335
    },
    {
        "content": "<p>because the whole point is, we reverted that PR for the release build, as a way to avoid asking the question \"should this block the release\"</p>",
        "id": 231809926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682360
    },
    {
        "content": "<p>Now, for this <em>particular</em> issue, I think I agree that it would not be a release blocker</p>",
        "id": 231810039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682384
    },
    {
        "content": "<p>e.g. if we had not been able to revert its effect, then I think we still would have gone ahead with the release</p>",
        "id": 231810085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682399
    },
    {
        "content": "<p>so I am okay with the idea of downgrading its priority to P-high</p>",
        "id": 231810109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682409
    },
    {
        "content": "<p>but I just wanted to be clear about the basis for doing so</p>",
        "id": 231810136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682421
    },
    {
        "content": "<p>it wasn't \"obvious\" that it isn't a release blocker, the same way that it <em>is</em> obvious for other bugs that we outright let leak into the release.</p>",
        "id": 231810199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682446
    },
    {
        "content": "<p>anyway</p>",
        "id": 231810225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682457
    },
    {
        "content": "<p>enough about prioritization, lets call that P-high instead of P-critical</p>",
        "id": 231810259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682472
    },
    {
        "content": "<p>the other question is, what to do about it, if anything</p>",
        "id": 231810278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> was arguing against doing any revert at all here</p>",
        "id": 231810362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682495
    },
    {
        "content": "<p>but there is a patch in flight on LLVM's repo: <a href=\"https://reviews.llvm.org/D98789\">https://reviews.llvm.org/D98789</a></p>",
        "id": 231810443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682527
    },
    {
        "content": "<p>There's a list of pending fixes upstream.</p>",
        "id": 231810450,
        "sender_full_name": "nagisa",
        "timestamp": 1616682528
    },
    {
        "content": "<p>do you expect one of them to land in LLVM's repo sometime in the next few weeks, based on interactions so far?</p>",
        "id": 231810597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682577
    },
    {
        "content": "<p>well in any case</p>",
        "id": 231810700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682604
    },
    {
        "content": "<p>This bug sounds much scarier than it really is â€“ even though we generate wrong uwtables in the prolog, the only case that it can be observed is when there's some sort of a sampling unwinder â€“ otherwise frame will never be in the prolog during unwind.</p>",
        "id": 231810758,
        "sender_full_name": "nagisa",
        "timestamp": 1616682625
    },
    {
        "content": "<p>it looks like this is being taken care of, between the work of <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and YangKeao</p>",
        "id": 231810779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682630
    },
    {
        "content": "<p>what does \"sampling unwinder\" mean? Would a sampling profiler that used the dwarf info to generate a stack trace count?</p>",
        "id": 231810930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682675
    },
    {
        "content": "<p>(or is generating stack backtrace not handled by the uwtables?)</p>",
        "id": 231811001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682704
    },
    {
        "content": "<p>The motivating case in this example is that there's some profiler that samples stack frames and runs from within a program.</p>",
        "id": 231811048,
        "sender_full_name": "nagisa",
        "timestamp": 1616682718
    },
    {
        "content": "<p>my argument is that if a tool does this, it ought to have some way to deal with invalid uwtables because they're everywhere.</p>",
        "id": 231811149,
        "sender_full_name": "nagisa",
        "timestamp": 1616682743
    },
    {
        "content": "<p>things like <code>perf</code> or <code>gdb</code> handle this kind of situation quite gracefully.</p>",
        "id": 231811206,
        "sender_full_name": "nagisa",
        "timestamp": 1616682762
    },
    {
        "content": "<p>hmm. \"runs within the program.\" So <code>-Z self-profile</code> is an example of something that runs within the program (but is non-sampling), while <code>perf</code> does not run within the program, right?</p>",
        "id": 231811237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682774
    },
    {
        "content": "<p>okay</p>",
        "id": 231811253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682780
    },
    {
        "content": "<p>lets downgrade to P-high, but otherwise this seems under control</p>",
        "id": 231811357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682808
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 231811399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682822
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 231811418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682828
    },
    {
        "content": "<ul>\n<li>\"Method resolution error\" <a href=\"https://github.com/rust-lang/rust/issues/81211\">rust#81211</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/81211#issuecomment-802917170\">comments</a> being a minor breakage that can slip</li>\n<li>anything to add for this issue?</li>\n</ul>\n</li>\n</ul>",
        "id": 231811449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682839
    },
    {
        "content": "<p>this is now in stable</p>",
        "id": 231811542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682857
    },
    {
        "content": "<p>(right?)</p>",
        "id": 231811596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682873
    },
    {
        "content": "<p>yeah, it's probably not worth any further work - I guess we were going to follow up with ufcs everywhere maybe?</p>",
        "id": 231811615,
        "sender_full_name": "simulacrum",
        "timestamp": 1616682879
    },
    {
        "content": "<p>I forget if your pr only did debug</p>",
        "id": 231811720,
        "sender_full_name": "simulacrum",
        "timestamp": 1616682914
    },
    {
        "content": "<p>maybe</p>",
        "id": 231811773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682932
    },
    {
        "content": "<p>I'll try to follow-up after this meeting about this</p>",
        "id": 231811893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682967
    },
    {
        "content": "<p>I assume we will close this as a wont-fix, but it would be good to check about ufcs-everywhere</p>",
        "id": 231811943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682985
    },
    {
        "content": "<ul>\n<li>\"WASI: path_open regression in Rust 1.51 when using LTO\" <a href=\"https://github.com/rust-lang/rust/issues/82758\">rust#82758</a><ul>\n<li>Should be fixed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> in commit <a href=\"https://github.com/Mark-Simulacrum/rust/commit/b9438e090570424d4f0813a94ce96be34351ae4d\">b9438e</a></li>\n</ul>\n</li>\n</ul>",
        "id": 231811969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616682997
    },
    {
        "content": "<p>that b9438e commit is from PR <a href=\"https://github.com/rust-lang/rust/issues/83377\">#83377</a></p>",
        "id": 231812049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683033
    },
    {
        "content": "<p>yep, fixed on beta/master/stable</p>",
        "id": 231812083,
        "sender_full_name": "simulacrum",
        "timestamp": 1616683048
    },
    {
        "content": "<p>okay, I see PR <a href=\"https://github.com/rust-lang/rust/issues/82804\">#82804</a> now, yes</p>",
        "id": 231812194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683083
    },
    {
        "content": "<p>good good</p>",
        "id": 231812235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683100
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 231812267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683112
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-03-23.md\">2021-03-23 Triage Log</a></p>\n</blockquote>\n<p>An overall busy but decent week for performance. While there were some performance regressions they were mostly small, and they were outnumbered by performance gains. Perhaps the most interesting news is not a compiler performance improvement but rather the introduction of no-alias optimizations at the LLVM level. This slightly hurts optimized build time performance in some cases, but it should make some workloads run faster after compilation.</p>\n<p>Triage done by <strong>@rylev</strong>.</p>\n<p>2 Regressions, 5 Improvements, 3 Mixed<br>\n1 of them in rollups</p>",
        "id": 231812295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683123
    },
    {
        "content": "<p>those no-alias optimizations, that does deserve special mention</p>",
        "id": 231812334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683144
    },
    {
        "content": "<p>since some people on twitter have expressed ... concern? about breakage to intrusive linked lists. It is supposed to be handled by a (conservative) heuristic leveraging <code>!Unpin</code></p>",
        "id": 231812477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683191
    },
    {
        "content": "<p>anyway I just want to draw general attention, since I have seen multiple people ask about it.</p>",
        "id": 231812586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683219
    },
    {
        "content": "<h4>Regressions</h4>",
        "id": 231812623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683233
    },
    {
        "content": "<p>Implement (but don't use) valtree and refactor in preparation of use <a href=\"https://github.com/rust-lang/rust/issues/82936\">#82936</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=f5d8117c338a788bd24abec733fd143dfceb25a0&amp;end=e655fb62216b6ba64a094b30f116d7988d19322d&amp;stat=instructions:u\">instruction counts</a> (up to 2.1% on <code>full</code> builds of <code>ctfe-stress-4-opt</code>)</li>\n<li>Purely an addition of unused code (for a future feature). It is possible that this changed some inlining behavior, but the benchmark in question is susceptible to high variance though it seemed to impact full builds and not incremental builds.</li>\n<li>The query impacted is <code>eval_to_allocation_raw</code> which is what ctfe stresses, so we'll <a href=\"https://github.com/rust-lang/rust/pull/82936#issuecomment-805029518\">look into it</a>.</li>\n</ul>",
        "id": 231812638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683240
    },
    {
        "content": "<p>Use TrustedRandomAccess for in-place iterators where possible <a href=\"https://github.com/rust-lang/rust/issues/79846\">#79846</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=97663b6690689379aa0493deb494dfe14627c46b&amp;end=35385770ae1ea86a911cc44ac43f856831e44b26&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>full</code> builds of <code>deep-vector-debug</code>)</li>\n<li>This is a change in the standard library that seems to only impact one benchmark: <code>deep-vector-debug</code> full compilation. It looks to be impacting <code>typeck</code>, but I'm not sure why this would be. It's also possible that it's noise.</li>\n<li>There's also a possibility that this has some strange interaction with the performance gained in <a href=\"https://github.com/rust-lang/rust/issues/83360\">#83360</a>.</li>\n</ul>",
        "id": 231812656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683248
    },
    {
        "content": "<h4>Improvements</h4>",
        "id": 231812698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683262
    },
    {
        "content": "<ul>\n<li>Add a check for ASCII characters in to_upper and to_lower <a href=\"https://github.com/rust-lang/rust/issues/81358\">#81358</a></li>\n<li>ast/hir: Rename field-related structures <a href=\"https://github.com/rust-lang/rust/issues/83188\">#83188</a></li>\n<li>Revert performance-sensitive change in <a href=\"https://github.com/rust-lang/rust/issues/82436\">#82436</a> <a href=\"https://github.com/rust-lang/rust/issues/83293\">#83293</a></li>\n<li>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/83360\">#83360</a></li>\n<li>Simplify encoder and decoder <a href=\"https://github.com/rust-lang/rust/issues/83273\">#83273</a></li>\n</ul>",
        "id": 231812719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683270
    },
    {
        "content": "<p>I assume we don't know where the performance improvement arose in the rollup <a href=\"https://github.com/rust-lang/rust/issues/83360\">#83360</a> ?</p>",
        "id": 231812839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683308
    },
    {
        "content": "<p>I wonder if it was the <code>TrustedLen</code> change (PR <a href=\"https://github.com/rust-lang/rust/issues/81607\">#81607</a>)</p>",
        "id": 231812932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683325
    },
    {
        "content": "<p>remind me: I should be able to a perf run on the (merged by rollup) PR <a href=\"https://github.com/rust-lang/rust/issues/81607\">#81607</a>, right? Or will that not work?</p>",
        "id": 231813050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683364
    },
    {
        "content": "<p>well I'll leave that alone for now</p>",
        "id": 231813151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683396
    },
    {
        "content": "<h4>Mixed</h4>\n<ul>\n<li>feat: Update hashbrown to instantiate less llvm IR <a href=\"https://github.com/rust-lang/rust/issues/77566\">#77566</a></li>\n<li>Replace closures_captures and upvar_capture with closure_min_captures <a href=\"https://github.com/rust-lang/rust/issues/82951\">#82951</a></li>\n<li>Enable mutable noalias for LLVM &gt;= 12 <a href=\"https://github.com/rust-lang/rust/issues/82834\">#82834</a></li>\n</ul>",
        "id": 231813189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683407
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/82964#issuecomment-800663588\">Issue</a> from last week needs to still be addressed.</li>\n<li>This weeks follow-ups:<br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/77566#issuecomment-805033514\">https://github.com/rust-lang/rust/pull/77566#issuecomment-805033514</a><br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/82951#issuecomment-805038336\">https://github.com/rust-lang/rust/pull/82951#issuecomment-805038336</a><br>\n    - <a href=\"https://github.com/rust-lang/rust/pull/82936#issuecomment-805029518\">https://github.com/rust-lang/rust/pull/82936#issuecomment-805029518</a></li>\n</ul>",
        "id": 231813225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683418
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 231813421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683473
    },
    {
        "content": "<ul>\n<li>\"<code>undefined reference to</code> linker error when using dylibs\" <a href=\"https://github.com/rust-lang/rust/issues/82151\">rust#82151</a><ul>\n<li>mentioned during last <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-18.20.2354818/near/230879756\">meeting</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has discussed it a bit with <span class=\"user-mention\" data-user-id=\"253053\">@Alex Kornitzer</span>, still trying to figure out what the scope of it is, in terms of rustc's role</li>\n<li><span class=\"user-mention\" data-user-id=\"253053\">@Alex Kornitzer</span> <a href=\"https://github.com/rust-lang/rust/issues/82151#issuecomment-801310681\">points out</a> that the issue is related to how cargo changed behaviour</li>\n</ul>\n</li>\n</ul>",
        "id": 231813446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683484
    },
    {
        "content": "<p>I haven't looked at this at all</p>",
        "id": 231813630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683539
    },
    {
        "content": "<p>since 8 days ago</p>",
        "id": 231813642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683547
    },
    {
        "content": "<p>I'll try to circle back to it</p>",
        "id": 231813655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683551
    },
    {
        "content": "<ul>\n<li>\"add dynamically-linked musl targets\" <a href=\"https://github.com/rust-lang/rust/pull/82556\">rust#82556</a><ul>\n<li>mentioned in <code>P-waiting-on-team</code></li>\n</ul>\n</li>\n</ul>",
        "id": 231813694,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683562
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>\"Use getrandom for generating HashMap seed\" <a href=\"https://github.com/rust-lang/rust/pull/80149\">rust#80149</a><ul>\n<li>mentioned in <code>P-waiting-on-team</code></li>\n</ul>\n</li>\n</ul>",
        "id": 231813737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683567
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 231813769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683575
    },
    {
        "content": "<p>and that's our agenda!</p>",
        "id": 231813793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683582
    },
    {
        "content": "<p>anyone want to dance for 14 minutes to celebrate the 1.51 release? <span aria-label=\"dancing\" class=\"emoji emoji-1f57a\" role=\"img\" title=\"dancing\">:dancing:</span></p>",
        "id": 231813844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683602
    },
    {
        "content": "<p>so, since we do have a few moments, I want to get people's opinion on something</p>",
        "id": 231814126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> made a great writeup for the design meeting tomorrow</p>",
        "id": 231814140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683698
    },
    {
        "content": "<p>something I'm debating is whether to try to adopt a procedure used at Amazon</p>",
        "id": 231814175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683710
    },
    {
        "content": "<p>where instead of asking people \"can you all please make sure you read the doc before the meeting\"</p>",
        "id": 231814210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683721
    },
    {
        "content": "<p>instead they just allocate a small fixed period of time at the meeting outset, where everyone is expected to use that time to read the doc</p>",
        "id": 231814265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683740
    },
    {
        "content": "<p>It is something that is a little counter-intuitive: Getting everyone synchronously meeting, only to sit in silence and read</p>",
        "id": 231814361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683779
    },
    {
        "content": "<p>Either is fine with me but I think we should aim to spend the bulk of the meeting talking about how to make forward progress instead of the historical context covered in the hackmd.</p>",
        "id": 231814413,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616683800
    },
    {
        "content": "<p>but it also ... seems to work... Though part of the magic is that the documents are written in a manner where they <em>can</em> be digested in that short period of time</p>",
        "id": 231814486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> that's a good point. maybe we can structure to be focused in that manner, by putting historical notes in an appendix?</p>",
        "id": 231814582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683841
    },
    {
        "content": "<p>The history section isn't that long in the first place, though</p>",
        "id": 231814674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683877
    },
    {
        "content": "<p>It's just one paragraph in the beginning and it is useful to understand the current state.</p>",
        "id": 231814687,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616683883
    },
    {
        "content": "<p>or, I guess <del>the</del> some amount of history is interwoven into the Recommendation ?</p>",
        "id": 231814719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683895
    },
    {
        "content": "<p>Oh, yeah there's some there too.</p>",
        "id": 231814771,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616683914
    },
    {
        "content": "<p>Overall, I'd just encourage everyone to read the whole thing. It looks longer than it actually is due to formatting.</p>",
        "id": 231814870,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616683934
    },
    {
        "content": "<p>I think its short enough that we can ask people to review it over 5 minutes</p>",
        "id": 231814882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683938
    },
    {
        "content": "<p>(and if you are a stakeholder, you may want to 1. read it ahead of time, and 2. suggest any changes to make it as readable as possible to the group at large.)</p>",
        "id": 231814959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683966
    },
    {
        "content": "<p>It will also be much faster for everyone to read it than for someone to retype parts of it into chat here during the meeting.</p>",
        "id": 231814966,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616683971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"396976\">@Rich Felker</span> ^</p>",
        "id": 231814989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616683979
    },
    {
        "content": "<p>(It was already written in concert with <span class=\"user-mention silent\" data-user-id=\"396723\">Ã‰rico Nogueira Rolim</span> and <span class=\"user-mention silent\" data-user-id=\"360752\">Ariadne Conill</span> , if I understand correctly? Did Rich weigh in as well?)</p>",
        "id": 231815265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684057
    },
    {
        "content": "<blockquote>\n<p>It was already written in concert with Ã‰rico Nogueira Rolim and Ariadne Conill</p>\n</blockquote>\n<p>Yes</p>\n<blockquote>\n<p>Did Rich weigh in as well?</p>\n</blockquote>\n<p>Not explicitly to me but he may have been in contact with Ã‰rico Nogueira Rolim and Ariadne Conill.</p>",
        "id": 231815486,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1616684121
    },
    {
        "content": "<p>anyway, that's everything I wanted to cover for this meeting! Lets end it here, its great to be done early for once instead of running over time.</p>",
        "id": 231815536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684134
    },
    {
        "content": "<p>is there a way in hackmd to wrap lines to 80 or 120 columns or somesuch?</p>",
        "id": 231815563,
        "sender_full_name": "nagisa",
        "timestamp": 1616684144
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Stay safe y'all!</p>",
        "id": 231815579,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-25.20.2354818/near/231815563\">said</a>:</p>\n<blockquote>\n<p>is there a way in hackmd to wrap lines to 80 or 120 columns or somesuch?</p>\n</blockquote>\n<p>you don't want to read the rendered version? Or are you trying to edit it and want it wrapped in the editor?</p>",
        "id": 231815743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684196
    },
    {
        "content": "<p>anyway, apart from manual adjusting the width of the editor pane, I don't know how you might get it to wrap lines. but I'm also still not sure I understand your goal</p>",
        "id": 231816090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684293
    },
    {
        "content": "<p>Yeah, I prefer reading the monospace, I guess I'll just copy it over into vim and reflow there.</p>",
        "id": 231816168,
        "sender_full_name": "nagisa",
        "timestamp": 1616684320
    },
    {
        "content": "<p>Interestingly, your question led me to discover the \"Breaks\" option at the bottom of the editor pane. We have it set to \"Render newlines as hard line breaks\", which is a reason why people avoid breaking their lines to fit 80 or 120 column standards. But one <em>can</em> set it to \"CommonMark standard line breaks\", which would at least <em>allow</em> us to have natural line breaking in the editor pane.</p>",
        "id": 231816953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684524
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-25.20.2354818/near/231816168\">said</a>:</p>\n<blockquote>\n<p>Yeah, I prefer reading the monospace, I guess I'll just copy it over into vim and reflow there.</p>\n</blockquote>\n<p>Do you prefer the monospace font itself, or is it that you prefer to read the source markdown?</p>",
        "id": 231817331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616684614
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-25.20.2354818/near/231817331\">said</a>:</p>\n<blockquote>\n<p>Do you prefer the monospace font itself, or is it that you prefer to read the source markdown?</p>\n</blockquote>\n<p>Both. Got used to reading RFCs that way ages ago and came to prefer both monospace and source markdow3n. I do appreciate nicely typeset pdfs too; alas nice typesetting is something web browsers still haven't cracked quite yet.</p>",
        "id": 231823102,
        "sender_full_name": "nagisa",
        "timestamp": 1616686310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-03-25.20.2354818/near/231808683\">said</a>:</p>\n<blockquote>\n<p>they might be able to take on beta-nomination approval duties again, much the same way we ... agreed (?) to do the same for T-libs-impl</p>\n</blockquote>\n<p>aha, so that's why t-compiler handles beta nominations</p>",
        "id": 231857306,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616698678
    },
    {
        "content": "<p>yes, I would be fine with rustdoc taking this back up, we've already been doing it unofficially because I didn't realize there was a process</p>",
        "id": 231857380,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616698698
    },
    {
        "content": "<p>Draft for next week's agenda:<br>\n<a href=\"https://hackmd.io/RA9MK7AzQnK8cMYnHttvNQ?view\">https://hackmd.io/RA9MK7AzQnK8cMYnHttvNQ?view</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> checkin by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> checkin by <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> and <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span></li>\n</ul>",
        "id": 231877516,
        "sender_full_name": "apiraino",
        "timestamp": 1616707013
    }
]