[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/VNIxtjGBT8Owfkb92Vzt6w?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>: anything to share?</li>\n</ul>",
        "id": 249976802,
        "sender_full_name": "apiraino",
        "timestamp": 1629375109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span>: <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and I are slowly working towards being able to record non-timestamp data like the sizes of files that the compiler emits -- e.g. object files and incr. comp. on-disk data. <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> is doing the reviewing. We should have something to show by the next checkin <code>:)</code></p>",
        "id": 249989307,
        "sender_full_name": "mw",
        "timestamp": 1629381131
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for the triage meeting. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here.</p>",
        "id": 249990610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381644
    },
    {
        "content": "<p>Lets start off with</p>\n<h2>Announcements</h2>",
        "id": 249991078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381861
    },
    {
        "content": "<ul>\n<li>Steering meeting on <time datetime=\"2021-08-20T14:00:00Z\">2021-08-20T10:00:00-04:00</time> to discuss how to increase the number of reviewers available to handle the review queue load. (<a href=\"#narrow/stream/131828-t-compiler/topic/Review.20assignments.20steering.20meeting\">Zulip topic</a>)</li>\n</ul>",
        "id": 249991092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381865
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249991110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381876
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a> (last comments: GH 7m ago, Zulip 12d ago)</li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comments: GH 6m ago, Zulip 50d ago)</li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a> (last comments: GH 2m ago, Zulip 49d ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comments: GH 49d ago, Zulip none)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comments: GH 48d ago, Zulip 59d ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last comments: GH 28d ago, Zulip 20d ago)</li>\n<li>\"Make <code>resolve_instance</code> fallible\" <a href=\"https://github.com/rust-lang/compiler-team/issues/449\">compiler-team#449</a> (last comments: GH 18d ago, Zulip none)</li>\n<li>\"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a> (last comment: GH none, Zulip yesterday)</li>\n</ul>\n</li>\n</ul>",
        "id": 249991126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381889
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Reproducible command line + determinism\" <a href=\"https://github.com/rust-lang/compiler-team/issues/450\">compiler-team#450</a></li>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a> </li>\n<li>\"Extend <code>-Cdebuginfo</code> with new options and named aliases\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249991138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381897
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Make AST-&gt;HIR lowering incremental\" <a href=\"https://github.com/rust-lang/compiler-team/issues/452\">compiler-team#452</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249991154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381905
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Rename various internal things\" <a href=\"https://github.com/rust-lang/compiler-team/issues/451\">compiler-team#451</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249991166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381912
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>No new finished FCP (disposition merge) this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 249991178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381917
    },
    {
        "content": "<h3>WG checkins</h3>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> (<a href=\"https://hackmd.io/tuLB5d6ETKCZGS3cpzzRiA#WG-checkins\">previous checkin</a>)</p>\n<blockquote>\n<p>@rylev and <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> are slowly working towards being able to record non-timestamp data like the sizes of files that the compiler emits -- e.g. object files and incr. comp. on-disk data. <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> is doing the reviewing. We should have something to show by the next checkin :)</p>\n</blockquote>",
        "id": 249991206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629381931
    },
    {
        "content": "<p>okay lets move along to beta backport nominations</p>",
        "id": 249991848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382204
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 249991897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382217
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Always preserve sub-obligations in the projection cache\" <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a> <ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned to find another reviewer</li>\n</ul>\n</li>\n</ul>",
        "id": 249991978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382240
    },
    {
        "content": "<p>There was some feedback from <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> on it to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> . But Jack also said they would not be comfortable reviewing without at least some support from e.g. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 249992198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382310
    },
    {
        "content": "<p>Yeah, for me to feel comfortable, I'd have to dig in and just haven't had time</p>",
        "id": 249992320,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629382356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> does <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> have dedicated open “office hours” for things like this? If so, would that be sufficient support for you?</p>",
        "id": 249992323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382357
    },
    {
        "content": "<p>I totally understand not having time</p>",
        "id": 249992334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382362
    },
    {
        "content": "<p>I'll discuss with him on Monday :)</p>",
        "id": 249992353,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629382374
    },
    {
        "content": "<p>Where are we in release cycle, let me see</p>",
        "id": 249992376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382382
    },
    {
        "content": "<p>next release is September 9th</p>",
        "id": 249992428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382404
    },
    {
        "content": "<p>I will say that my first thought is \"seems okay\"</p>",
        "id": 249992460,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629382418
    },
    {
        "content": "<p>So if we land this soonish, we will have reasonable amount of time to evaluate before beta branch</p>",
        "id": 249992475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382424
    },
    {
        "content": "<p>but I haven't really gotten to think about it</p>",
        "id": 249992479,
        "sender_full_name": "Jack Huey",
        "timestamp": 1629382426
    },
    {
        "content": "<p>but if it doesn’t land soonish, then we might just delay until after beta branch, to avoid surprises</p>",
        "id": 249992546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382449
    },
    {
        "content": "<p>we’ll see.</p>",
        "id": 249992553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382454
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 249992568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382462
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 249992624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382501
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 249992641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382507
    },
    {
        "content": "<ul>\n<li>\"Extend <code>-Cdebuginfo</code> with new options and named aliases\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"318885\">@Julia Tatz</span></li>\n<li>assigned and reviewed by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249241832\">last week</a></li>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249242280\">decided to pass this through an FCP</a> but author didn't respond</li>\n</ul>\n</li>\n</ul>",
        "id": 249992666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382518
    },
    {
        "content": "<p>at this point there are only three checkboxes unchecked on the FCP</p>",
        "id": 249992751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382559
    },
    {
        "content": "<p>I think we basically only want better docs there</p>",
        "id": 249992830,
        "sender_full_name": "mw",
        "timestamp": 1629382583
    },
    {
        "content": "<p>but there is no one to push it over the finish line</p>",
        "id": 249992845,
        "sender_full_name": "mw",
        "timestamp": 1629382593
    },
    {
        "content": "<p>right, and the docs need not block landing it, right?</p>",
        "id": 249992847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382593
    },
    {
        "content": "<p>I think the docs should block landing it</p>",
        "id": 249992881,
        "sender_full_name": "mw",
        "timestamp": 1629382609
    },
    {
        "content": "<p>otherwise it will never get done</p>",
        "id": 249992923,
        "sender_full_name": "mw",
        "timestamp": 1629382626
    },
    {
        "content": "<p>Okay. last week I said this, but didn’t follow through:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249242816\">said</a>:</p>\n<blockquote>\n<p>Lets leave a comment specifically saying that elaborating on these details is what is blocking the PR</p>\n</blockquote>",
        "id": 249992973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382659
    },
    {
        "content": "<p>I'll read through the PR and check my box after the meeting.</p>",
        "id": 249993014,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1629382680
    },
    {
        "content": "<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/rust/pull/84373\">rust#84373</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> </li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has action item on <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw?view\">HackMD</a> to mentor issue reporter</li>\n<li>pending wg-incr-comp discussion</li>\n</ul>\n</li>\n</ul>",
        "id": 249993154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382747
    },
    {
        "content": "<p>wait, is that item conflating two different things?</p>",
        "id": 249993221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382791
    },
    {
        "content": "<p>namely, I thought my action item was regarding <a href=\"https://github.com/rust-lang/rust/issues/86511\">#86511</a></p>",
        "id": 249993323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382820
    },
    {
        "content": "<p>I'm afraid so <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> Im sorry perhaps I got confused while copy&amp;pasting</p>",
        "id": 249993333,
        "sender_full_name": "apiraino",
        "timestamp": 1629382824
    },
    {
        "content": "<p>no problem</p>",
        "id": 249993338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382829
    },
    {
        "content": "<p>just needed clarification</p>",
        "id": 249993352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382833
    },
    {
        "content": "<p>okay so for <a href=\"https://github.com/rust-lang/rust/issues/84373\">rust#84373</a></p>",
        "id": 249993356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382837
    },
    {
        "content": "<p>this is indeed pending wg-incr-comp discussion</p>",
        "id": 249993370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382844
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> do you three have time either today or tomorrow?</p>",
        "id": 249993442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382879
    },
    {
        "content": "<p>Yes, I can find some time.</p>",
        "id": 249993508,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1629382903
    },
    {
        "content": "<p>I have half an hour after this meeting</p>",
        "id": 249993509,
        "sender_full_name": "mw",
        "timestamp": 1629382903
    },
    {
        "content": "<p>or tomorrow before the steering meeting</p>",
        "id": 249993548,
        "sender_full_name": "mw",
        "timestamp": 1629382922
    },
    {
        "content": "<p>the half hour after this meeting is blocked for me, but I don’t have to be at this discussion</p>",
        "id": 249993574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382923
    },
    {
        "content": "<p>Tomorrow before steering meeting also works</p>",
        "id": 249993610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382931
    },
    {
        "content": "<p>maybe lets plan on the latter?</p>",
        "id": 249993621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382937
    },
    {
        "content": "<p>if <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> can make it</p>",
        "id": 249993670,
        "sender_full_name": "mw",
        "timestamp": 1629382958
    },
    {
        "content": "<p>I’ll make a calendar event and invite you all. Even if cjgillot cannot make it, we might be able to make progress on our own, especially if one of us does some research ahead of time...</p>",
        "id": 249993729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629382978
    },
    {
        "content": "<p>okay well I invited Wesley, cannot take time to find other emails right now</p>",
        "id": 249993922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383063
    },
    {
        "content": "<p>(you can ping them here too)</p>",
        "id": 249993957,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1629383080
    },
    {
        "content": "<ul>\n<li>\"Remove all json handling from rustc_serialize\" <a href=\"https://github.com/rust-lang/rust/pull/85993\">rust#85993</a> <ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249240458\">last week</a>, we'd like to have <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> and <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> in the loop</li>\n</ul>\n</li>\n</ul>",
        "id": 249993966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383083
    },
    {
        "content": "<p>I have a work appointment after this meeting, at least 1h.</p>",
        "id": 249993979,
        "sender_full_name": "cjgillot",
        "timestamp": 1629383088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> how is tomorrow?</p>",
        "id": 249994009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383102
    },
    {
        "content": "<p>After the steering meeting.</p>",
        "id": 249994109,
        "sender_full_name": "cjgillot",
        "timestamp": 1629383157
    },
    {
        "content": "<p>re <a href=\"https://github.com/rust-lang/rust/issues/85993\">rust#85993</a>, at this point I’m inclined to agree with <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> : the best way forward for <a href=\"https://github.com/rust-lang/rust/issues/85993\">rust#85993</a> is for <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> to write an MCP.</p>",
        "id": 249994187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383171
    },
    {
        "content": "<p>so, next up</p>",
        "id": 249994320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383242
    },
    {
        "content": "<p>(oh, and so for <a href=\"https://github.com/rust-lang/rust/issues/85993\">rust#85993</a>, lets take off the waiting on team and put on waiting-on-author, for that MCP)</p>",
        "id": 249994359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383264
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler\n+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">83 T-compiler P-high issues</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">56 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 49 P-high, 81 P-medium, 9 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 249994539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383339
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 249994559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383350
    },
    {
        "content": "<ul>\n<li>\"LLVM crash: Basic Block does not have terminator!\" <a href=\"https://github.com/rust-lang/rust/issues/88043\">rust#88043</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> </li>\n<li>seems caused by <a href=\"https://github.com/rust-lang/rust/pull/83417\">rust#83417</a> cc: <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, suggests a quick revert and then look at this again without pressure</li>\n<li><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> also <a href=\"https://github.com/rust-lang/rust/issues/88043#issuecomment-900517377\">points out</a> relation with <a href=\"https://github.com/rust-lang/rust/issues/88043#issuecomment-900517377\">rust#88043</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249994573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> , can you own reverting <a href=\"https://github.com/rust-lang/rust/issues/83417\">rust#83417</a> ?</p>",
        "id": 249994618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383390
    },
    {
        "content": "<p>There's a fix landing in <a href=\"https://github.com/rust-lang/rust/pull/88124\">https://github.com/rust-lang/rust/pull/88124</a></p>",
        "id": 249994698,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1629383410
    },
    {
        "content": "<p>yea, was just pasting the link XD</p>",
        "id": 249994724,
        "sender_full_name": "oli",
        "timestamp": 1629383421
    },
    {
        "content": "<p>hmm. okay</p>",
        "id": 249994739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383425
    },
    {
        "content": "<p>it is already reverted and a fix is pending</p>",
        "id": 249994742,
        "sender_full_name": "oli",
        "timestamp": 1629383427
    },
    {
        "content": "<p>oh dear</p>",
        "id": 249994788,
        "sender_full_name": "eddyb",
        "timestamp": 1629383450
    },
    {
        "content": "<p>if its already reverted, then why is <a href=\"https://github.com/rust-lang/rust/issues/88043\">#88043</a> still open? Oh, becasue its stable-to-stable regression?</p>",
        "id": 249994799,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383456
    },
    {
        "content": "<p>The revert PR is <a href=\"https://github.com/rust-lang/rust/pull/88056\">https://github.com/rust-lang/rust/pull/88056</a></p>",
        "id": 249994816,
        "sender_full_name": "oli",
        "timestamp": 1629383463
    },
    {
        "content": "<p>yea, the PR that was reverted only made the issue worse</p>",
        "id": 249994865,
        "sender_full_name": "oli",
        "timestamp": 1629383481
    },
    {
        "content": "<p>i see</p>",
        "id": 249994887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383490
    },
    {
        "content": "<p>codegen already has to take into account edges to the start block, for eliding certain things, I guess every MIR pass could also be wrong about it too :/</p>",
        "id": 249994931,
        "sender_full_name": "eddyb",
        "timestamp": 1629383508
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/blob/a9ab2e55395013de116340e4cbfa0bb0263bb658/compiler/rustc_codegen_ssa/src/mir/mod.rs#L155-L157\">https://github.com/rust-lang/rust/blob/a9ab2e55395013de116340e4cbfa0bb0263bb658/compiler/rustc_codegen_ssa/src/mir/mod.rs#L155-L157</a>)</p>",
        "id": 249995056,
        "sender_full_name": "eddyb",
        "timestamp": 1629383550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> the “points out relation to …”, was that supposed to point to PR <a href=\"https://github.com/rust-lang/rust/pull/78360\">https://github.com/rust-lang/rust/pull/78360</a> ?</p>",
        "id": 249995110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383582
    },
    {
        "content": "<p>anyway it sounds like this as being handled well</p>",
        "id": 249995154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383607
    },
    {
        "content": "<p>lets move along</p>",
        "id": 249995159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383609
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 249995306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383667
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 249995319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383674
    },
    {
        "content": "<ul>\n<li>\"ICE: unexpected concrete region in borrowck: ReStatic\" <a href=\"https://github.com/rust-lang/rust/issues/87455\">rust#87455</a> <ul>\n<li>regression in crate run for 1.55, manifested in a <a href=\"https://github.com/rust-lang/rust/issues/87455#issuecomment-897891685\">couple of issues</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> self-assigned to backport <a href=\"https://github.com/rust-lang/rust/pull/87483\">rust#87843</a></li>\n</ul>\n</li>\n</ul>",
        "id": 249995343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383684
    },
    {
        "content": "<p>(I just jotted that down on my explicit action items list. Will do today or tomorrow.)</p>",
        "id": 249995538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383771
    },
    {
        "content": "<ul>\n<li>\"ICE: unexpected concrete region in borrowck: ReEarlyBound(0, 'a)\" <a href=\"https://github.com/rust-lang/rust/issues/83190\">rust#83190</a> <ul>\n<li>assigned same <code>P-high</code> as sibling <a href=\"https://github.com/rust-lang/rust/issues/87455\">rust#87455</a> :point_up_2:</li>\n</ul>\n</li>\n</ul>",
        "id": 249995552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383781
    },
    {
        "content": "<p>I’m inferring that will be resolved by same backport</p>",
        "id": 249995571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383797
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 249995578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383803
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-08-17.md\">triage logs for 2021-08-17</a></p>\n</blockquote>\n<p>A fairly busy week which was to expected given that we've <a href=\"https://github.com/rust-lang/rustc-perf/pull/956\">adjusted our algorithm</a> for whether we label a change as a regression or not. Most regressions were relatively small, and only one has not yet been addressed in some way.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=6b20506d17f4e5e5bf5bcad7e94add4d754b0ae3&amp;end=aa8f27bf4d980023a8b245ceb25a490a18041eb2&amp;absolute=false&amp;stat=instructions%3Au\">6b20506d17f4e5e5bf5bcad7e94add4d754b0ae3..aa8f27bf4d980023a8b245ceb25a490a18041eb2</a><br>\n59 comparisons made in total</p>\n<p>3 Regressions, 2 Improvements, 2 Mixed; 0 of them in rollups</p>",
        "id": 249995591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383815
    },
    {
        "content": "<h4>Regressions</h4>\n<p>encode <code>generics_of</code> for fields and ty params <a href=\"https://github.com/rust-lang/rust/issues/87815\">#87815</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2d10c2a3302d53e10a4ad3ac581103faaae9eeb6&amp;end=c4c2986c499ee9440b7ae23bf5a62c6168e1ce17&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>incr-unchanged</code> builds of <code>diesel</code>)</li>\n<li>While the regressions are fairly small, the largest ones seem to be happening in real-world crates like diesel, serde, and futures. </li>\n<li>The largest regressions seem to be in the <code>explicit_predicates_of</code> query which would seem to be directly impacted by this change.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/87815#issuecomment-900465263\">comment</a> to see how we should address this issue. </li>\n</ul>\n<p>Various refactorings of the TAIT infrastructure <a href=\"https://github.com/rust-lang/rust/issues/87587\">#87587</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=47b41b7788a6f85c749049062f1e4eed497cd894&amp;end=d488de82f30fd1dcb0220d57498638596622394e&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>The issue is <a href=\"https://github.com/rust-lang/rust/pull/87587#issuecomment-896754235\">expected</a> and is being monitored with a possible solution in the works.</li>\n</ul>\n<p>Name the captured upvars for closures/generators in debuginfo <a href=\"https://github.com/rust-lang/rust/issues/85020\">#85020</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c6094fc7b9981d755abeb8c0e866a0f6315b3ec3&amp;end=99efc51dae1dbe9d741707a7ddef84c29e654df5&amp;stat=instructions:u\">instruction counts</a> (up to 4.9% on <code>incr-patched: println</code> builds of <code>webrender-wrench</code>)</li>\n<li>This is a large regression in one benchmark, but it seems to be in codegen which this change would impact. </li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85020#issuecomment-898823772\">There is a comment</a> justifying this as concerning but worth it given it only impacts one benchmark. I still believe this might be one worth keeping an eye on.</li>\n</ul>",
        "id": 249995610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> how do we go about “keeping an eye on” an issue like the regression from PR <a href=\"https://github.com/rust-lang/rust/issues/85020\">#85020</a>?</p>",
        "id": 249995909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383966
    },
    {
        "content": "<p>are you saying we should file an issue for it? Or keep it in the running performance triage report?</p>",
        "id": 249995938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629383985
    },
    {
        "content": "<p>well, moving along through report</p>",
        "id": 249996107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384048
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Avoid using the <code>copy_nonoverlapping</code> wrapper through <code>mem::replace</code>. <a href=\"https://github.com/rust-lang/rust/issues/87827\">#87827</a></li>\n<li>Run RemoveZsts pass at mir-opt-level=1 <a href=\"https://github.com/rust-lang/rust/issues/83417\">#83417</a></li>\n</ul>",
        "id": 249996123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384058
    },
    {
        "content": "<p>(so I’m guessing the revert of PR <a href=\"https://github.com/rust-lang/rust/issues/83417\">#83417</a> thus injects a regression)</p>",
        "id": 249996177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384083
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Introduce <code>hir::ExprKind::Let</code> - Take 2 <a href=\"https://github.com/rust-lang/rust/issues/80357\">#80357</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=2bd17c1d43bba43412cc2f051323a279d6751e43&amp;end=2a6fb9a4c0e5ca7a81999065943b211c226fe9d8&amp;stat=instructions:u\">instruction counts</a> (up to -2.1% on <code>incr-patched: println</code> builds of <code>webrender</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2bd17c1d43bba43412cc2f051323a279d6751e43&amp;end=2a6fb9a4c0e5ca7a81999065943b211c226fe9d8&amp;stat=instructions:u\">instruction counts</a> (up to 0.7% on <code>full</code> builds of <code>cranelift-codegen</code>)</li>\n</ul>\n<p>BTree: merge the complication introduced by <a href=\"https://github.com/rust-lang/rust/issues/81486\">#81486</a> and <a href=\"https://github.com/rust-lang/rust/issues/86031\">#86031</a> <a href=\"https://github.com/rust-lang/rust/issues/87696\">#87696</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=2a6fb9a4c0e5ca7a81999065943b211c226fe9d8&amp;end=23461b210f1b0a121592a18fc4fb666106006668&amp;stat=instructions:u\">instruction counts</a> (up to -0.6% on <code>full</code> builds of <code>issue-46449</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2a6fb9a4c0e5ca7a81999065943b211c226fe9d8&amp;end=23461b210f1b0a121592a18fc4fb666106006668&amp;stat=instructions:u\">instruction counts</a> (up to 1.7% on <code>full</code> builds of <code>ripgrep</code>)</li>\n<li>This is mostly a wash in terms of performance (with performance shifting somewhat equally across all the benchmarks), with the largest changes happening in stress tests.</li>\n</ul>",
        "id": 249996249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384122
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87640\">#87640 Rollup of 9 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87587\">#87587 Various refactorings of the TAIT infrastructure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87244\">#87244 Better diagnostics with mismatched types due to implicit static lifetime</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86698\">#86698 Move OnDiskCache to rustc_query_impl.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to shield against exploding payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n</ul>",
        "id": 249996331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384144
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> : I’ll be honest, I still don’t quite understand what the meaning and purpose of the “Untriaged Pull Requests” section of the performance triage report. Am I supposed to interpret it as \"These are things that we saw regressed and didn’t have a performance run done on them at the time\"? And we’re hoping for eventual follow up justifying the identified regressions?)</p>",
        "id": 249996469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384230
    },
    {
        "content": "<p>The goal is that yes, someone needs to follow up and investigate the performance regression. These are effectively the \"nags\" of old.</p>",
        "id": 249996616,
        "sender_full_name": "simulacrum",
        "timestamp": 1629384284
    },
    {
        "content": "<p>okay</p>",
        "id": 249996662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384305
    },
    {
        "content": "<p>and they’re all tagged with the label:perf-regression, and once the regression has been resolved or explicitly identified as something we are willing to pay for, then we add the additional label perf-regression-triaged ?</p>",
        "id": 249996842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384376
    },
    {
        "content": "<p>Correct, yes.</p>",
        "id": 249996856,
        "sender_full_name": "simulacrum",
        "timestamp": 1629384383
    },
    {
        "content": "<p>and the only remaining question is how we drive the list down</p>",
        "id": 249996881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384397
    },
    {
        "content": "<p>since right now we’re basically relying on people to volunteer to investigate</p>",
        "id": 249996918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384416
    },
    {
        "content": "<p>okay.</p>",
        "id": 249996923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384418
    },
    {
        "content": "<p>moving on</p>",
        "id": 249996933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384427
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 249996946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384433
    },
    {
        "content": "<ul>\n<li>\"Remove all json handling from rustc_serialize\" <a href=\"https://github.com/rust-lang/rust/pull/85993\">rust#85993</a><ul>\n<li>discussed in <code>S-waiting-on-team</code></li>\n</ul>\n</li>\n</ul>",
        "id": 249996954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384437
    },
    {
        "content": "<p>(discussed already, and now I’ve removed the nomination label)</p>",
        "id": 249996972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384451
    },
    {
        "content": "<ul>\n<li>\"Binary size is significant increased from <code>1.46.0</code> to <code>1.51.0</code>\" <a href=\"https://github.com/rust-lang/rust/issues/86610\">rust#86610</a><ul>\n<li>Has action item on <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw\">HackMD</a> to add binary size tracking to perf.rlo, needs an owner</li>\n</ul>\n</li>\n</ul>",
        "id": 249996987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384457
    },
    {
        "content": "<p>Hey, this sounds like its very strongly related to what <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> noted at the start, right?</p>",
        "id": 249997004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> will the self-profile work naturally end up on perf.rlo? or is that a task with an independent owner?</p>",
        "id": 249997105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384508
    },
    {
        "content": "<p>I’m basically wondering if I can assign this action item to wg-self-profile</p>",
        "id": 249997132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384522
    },
    {
        "content": "<p>Yes, it's the plan for that to end up in perf.rlo</p>",
        "id": 249997145,
        "sender_full_name": "mw",
        "timestamp": 1629384529
    },
    {
        "content": "<p>Okay I’m going to make the action item list reflect that, that the owner is the whole wg-self-profile working group</p>",
        "id": 249997172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384548
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> signed up for being the owner of that</p>",
        "id": 249997191,
        "sender_full_name": "mw",
        "timestamp": 1629384557
    },
    {
        "content": "<p>okay I’ll write both things down: rylev (wg-self-profile)</p>",
        "id": 249997226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384576
    },
    {
        "content": "<p>so also remove the <code>I-nominated</code>, correct?</p>",
        "id": 249997241,
        "sender_full_name": "apiraino",
        "timestamp": 1629384589
    },
    {
        "content": "<p>I think we can do that now, yes. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 249997414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384654
    },
    {
        "content": "<p>Hey, I think we’re done!</p>",
        "id": 249997638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384758
    },
    {
        "content": "<p>Is there anything else anyone wanted to discuss in the 8 minutes we have left?</p>",
        "id": 249997672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384773
    },
    {
        "content": "<p>RFC2603 in the agenda?</p>",
        "id": 249997679,
        "sender_full_name": "apiraino",
        "timestamp": 1629384778
    },
    {
        "content": "<p>oh whoops, let me look</p>",
        "id": 249997696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384788
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span></p>",
        "id": 249997724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384799
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>\"[RFC2603] Extend <code>&lt;const&gt;</code> to include <code>str</code> and structural constants.\" <a href=\"https://github.com/rust-lang/rfcs/pull/3161\">rfcs#3161</a><ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249243501\">last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-12.20.2354818/near/249247119\">suggested</a> to merge the current implementation, not the RFC, and gather real-world data</li>\n<li>still needs discussion or <code>I-nominated</code> can be removed?</li>\n</ul>\n</li>\n</ul>",
        "id": 249997760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384810
    },
    {
        "content": "<p>Yeah, I mainly would like to unblock making the new mangling scheme the default</p>",
        "id": 249997894,
        "sender_full_name": "mw",
        "timestamp": 1629384859
    },
    {
        "content": "<p>I think the plan <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> has laid out in the PR sounds good</p>",
        "id": 249997901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384861
    },
    {
        "content": "<p>we have something that works for const generics and we don't need to make that perfect right now</p>",
        "id": 249997957,
        "sender_full_name": "mw",
        "timestamp": 1629384889
    },
    {
        "content": "<p>The symbol mangling RFC, it dates from 2018</p>",
        "id": 249998005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384912
    },
    {
        "content": "<p>if we wrote it today, would it have been an MCP ?</p>",
        "id": 249998017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384920
    },
    {
        "content": "<p>I'm not sure</p>",
        "id": 249998046,
        "sender_full_name": "mw",
        "timestamp": 1629384932
    },
    {
        "content": "<p>it touches a lot of external tooling in addition to rustc itself</p>",
        "id": 249998066,
        "sender_full_name": "tmandry",
        "timestamp": 1629384941
    },
    {
        "content": "<p>yeah</p>",
        "id": 249998076,
        "sender_full_name": "mw",
        "timestamp": 1629384946
    },
    {
        "content": "<p>okay</p>",
        "id": 249998094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384952
    },
    {
        "content": "<p>I just wanted to calibrate</p>",
        "id": 249998103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384955
    },
    {
        "content": "<p>in terms of whether we’re using an overly heavy-weight process for this</p>",
        "id": 249998162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384966
    },
    {
        "content": "<p>but it sounds like we’re calibrated correctly</p>",
        "id": 249998175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629384972
    },
    {
        "content": "<p>Since it could become part of a future \"Rust ABI\" (if we decide to document or stabilize it), having an RFC for the mangling scheme seems appropriate to me.</p>",
        "id": 249998274,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1629385015
    },
    {
        "content": "<p>it does feel a bit heavyweight but yeah I think so</p>",
        "id": 249998285,
        "sender_full_name": "tmandry",
        "timestamp": 1629385019
    },
    {
        "content": "<p>does anyone object to plan laid out by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> : merge implementation PR, but not the RFC amendment <em>yet</em> ?</p>",
        "id": 249998291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385020
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> should go ahead with that plan, personally.</p>",
        "id": 249998397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385064
    },
    {
        "content": "<p>Seems reasonable to me</p>",
        "id": 249998480,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1629385087
    },
    {
        "content": "<p>an example of an MCP for this might be re-using some existing mangling pattern for another purpose, changing how some mangled symbols are handled but not requiring updating external tools?</p>",
        "id": 249998497,
        "sender_full_name": "tmandry",
        "timestamp": 1629385094
    },
    {
        "content": "<p>so lets take the <code>I-nominated</code> off of <a href=\"https://github.com/rust-lang/rfcs/issues/3161\">rfcs#3161</a></p>",
        "id": 249998501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-08-19.20.2354818/near/249998497\">said</a>:</p>\n<blockquote>\n<p>an example of an MCP for this might be re-using some existing mangling pattern for another purpose, changing how some mangled symbols are handled but not requiring updating external tools?</p>\n</blockquote>\n<p>yeah maybe. Back in the day, we might have even done that without an MCP</p>",
        "id": 249998557,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385123
    },
    {
        "content": "<p>(well, i guess the whole pointis that we didn’t <em>have</em> MCP’s back in the day)</p>",
        "id": 249998619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385140
    },
    {
        "content": "<p>okay, thanks for coming to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Have a great week!</p>",
        "id": 249998678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629385163
    },
    {
        "content": "<p>whether significant debuginfo changes need MCPs in general is a bit unclear to me</p>",
        "id": 249998743,
        "sender_full_name": "tmandry",
        "timestamp": 1629385188
    },
    {
        "content": "<p>Thanks for driving, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> !</p>",
        "id": 249998762,
        "sender_full_name": "mw",
        "timestamp": 1629385199
    },
    {
        "content": "<p>I think we need a RFC-like document, whether RFC or a page in the reference, documenting the mangling, for tooling interop, either way</p>",
        "id": 249998972,
        "sender_full_name": "eddyb",
        "timestamp": 1629385247
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/9aTxrdTQSaS_Fx55dEW1hA?view\">https://hackmd.io/9aTxrdTQSaS_Fx55dEW1hA?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 249999705,
        "sender_full_name": "apiraino",
        "timestamp": 1629385542
    }
]