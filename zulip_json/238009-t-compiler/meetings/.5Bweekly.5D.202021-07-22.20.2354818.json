[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h50<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/euBza5vIQHOTs2elsYN2bg?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> from <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> and <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span>  </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span>: anything to share?</li>\n</ul>",
        "id": 246838136,
        "sender_full_name": "apiraino",
        "timestamp": 1626955975
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , triage meeting starting now! Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show that you’re here.</p>",
        "id": 246850604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962459
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for preparing the <a href=\"https://hackmd.io/euBza5vIQHOTs2elsYN2bg?view\">agenda</a></p>",
        "id": 246850669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962485
    },
    {
        "content": "<p>Lets start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 246850749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962521
    },
    {
        "content": "<ul>\n<li><span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> Next week, July, 29th release Rust stable 1.54 <span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span></li>\n</ul>",
        "id": 246850800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962529
    },
    {
        "content": "<p>Form <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a>: You may have noticed that the comparison page of the perf report has changed. This is the beginning of us adding much more functionality to the comparison page so that it will be much easier to interpret and identify performance regressions. If you have feedback or want to discuss anything about the evolution of the perf.rlo, please join us in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a>.</p>",
        "id": 246851104,
        "sender_full_name": "rylev",
        "timestamp": 1626962657
    },
    {
        "content": "<p>Also, next week at <time datetime=\"2021-07-30T14:00:00Z\">2021-07-30T10:00:00-04:00</time>  : We have our planning meeting for the August steering meeting cycle. There is currently <a href=\"https://github.com/rust-lang/compiler-team/issues?q=is%3Aissue+is%3Aopen+label%3Ameeting-proposal++-label%3Ameeting-scheduled\">one proposal</a> but I’m pretty sure I’ve seen chatter about ideas for other steering meetings.</p>",
        "id": 246851124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962670
    },
    {
        "content": "<p>the new perf.rlo comparison page: <a href=\"https://perf.rust-lang.org/compare.html\">https://perf.rust-lang.org/compare.html</a></p>",
        "id": 246851222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962711
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 246851439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962801
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 246851458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962810
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a> (last comment: 6 months ago)</li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comment: 5 months ago)</li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a> (last comment: about 41 days ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comment: about 20 days ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comment: about 20 days ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last comment: about 6 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 246851482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962820
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a> </li>\n<li>\"Preserve, clarify, and extend debug information\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246851554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> those are showing the last comment on the issue, which is the wrong metric: it should show the last comment on the Zulip thread because that's where discussion happened</p>",
        "id": 246851576,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626962866
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">compiler-team#443</a> </li>\n<li>\"Don't abort compilation after giving a lint error\" <a href=\"https://github.com/rust-lang/compiler-team/issues/447\">compiler-team#447</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246851604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962878
    },
    {
        "content": "<p>The last comment on the issue basically only tells you when it was opened</p>",
        "id": 246851605,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626962879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> maybe you and I can work together to figure out how to script that. It seems like it would be an unnecessary pain to visit the zulip threads manually.</p>",
        "id": 246851728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962926
    },
    {
        "content": "<p>Not necessarily an entirely useless metric. If an MCP is open for months, I think that's a pretty strong signal that nobody is interested in seconding it.</p>",
        "id": 246851738,
        "sender_full_name": "nagisa",
        "timestamp": 1626962929
    },
    {
        "content": "<p>Or it's a signal that it's complicated and the discussion is ongoing. I think \"last comment on Zulip\" is a better metric either way</p>",
        "id": 246851796,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626962961
    },
    {
        "content": "<p>its not entirely useless, but I definitely want to differentiate MCP’s that have active conversations from ones that are just getting no interest in any direction.</p>",
        "id": 246851820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626962971
    },
    {
        "content": "<p>Or at least clarify that it's when it was opened; right now that's not clear at all</p>",
        "id": 246851843,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626962986
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 246851934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963009
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for IntoInnerError::into_parts etc. (io_into_inner_error_parts)\" <a href=\"https://github.com/rust-lang/rust/issues/79704\">rust#79704</a> </li>\n<li>\"Remove P: Unpin bound on impl Future for Pin\" <a href=\"https://github.com/rust-lang/rust/pull/81363\">rust#81363</a> </li>\n<li>\"Allow leading pipe in <code>matches!()</code> patterns.\" <a href=\"https://github.com/rust-lang/rust/pull/85272\">rust#85272</a> </li>\n<li>\"Stabilize <code>const_fn_transmute</code>, <code>const_fn_union</code>\" <a href=\"https://github.com/rust-lang/rust/pull/85769\">rust#85769</a> </li>\n<li>\"Partially stabilize <code>const_slice_first_last</code>\" <a href=\"https://github.com/rust-lang/rust/pull/86593\">rust#86593</a> </li>\n<li>\"Document iteration order of <code>retain</code> functions\" <a href=\"https://github.com/rust-lang/rust/pull/86790\">rust#86790</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246851951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963017
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 246851969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963024
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </p>\n<blockquote>\n<p>Since our last checking a lot of PRs with improvements have been merged. We've made many subtle changes to wording, amount and accuracy of information and presence structured suggestions in a variety of diagnostics. All of them fall into one of the following categories:<br>\n- More accurate spans for predicate obligations (associated types and trait bounds, ongoing area of concern)<br>\n- We now account better for implicit <code>'static</code> lifetimes introduced by type params and assoc types<br>\n- We now include <code>for&lt;'lt&gt;</code> in pretty printing output<br>\n- We had some efforts to close the distance between nll and old regionck output<br>\n- Improvements to MIR, TAIT and const diagnostics, as part of ongoing efforts<br>\n- Tweaks to lint triggering and output<br>\n- We now include first macro level, this particularly makes errors involving <code>derive</code> macros easier to understand<br>\n- Various parser and error recovery improvements<br>\n- Various ICE fixes by improving support or use of <code>delay_span_bug</code><br>\n- Proc macros can now have spans pointing _to their own crate_<br>\n- <code>#[track_caller]</code> now works on trait object method calls<br>\n- Point at <code>impl Trait</code> return types in more cases<br>\n- Multiple regression tests added</p>\n<p>I want to call out @FabianWolff, @Aaron1011 and @Smittyvb for delivering on a number of these categories.</p>\n<hr>\n<p>Not directly related to WG-diagnostics, but I want to call it out:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/86761\">Eisel-Lemire algorithm Float-Parsing Algorithm #86761</a> landed on nightly, removing a now unnecessary error.</p>\n</blockquote>\n</blockquote>",
        "id": 246851995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963037
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span></p>\n<blockquote>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"217081\">Yuki Okushi</span> joined the team as a new co-lead, thanks <span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> for everything you've done!</li>\n<li>Not a lot has happened lately but here's a small set of changes and WIPs ...</li>\n</ul>\n<h4>Most notable changes</h4>\n<ul>\n<li>Create issues for many TODOs <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1163\">#1163</a></li>\n<li>Update information on lints <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1154\">#1154</a></li>\n<li>Document how to mark features as incomplete <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1151\">#1151</a></li>\n<li>Document how to run unit tests <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1141\">#1141</a></li>\n</ul>\n<h4>Most notable WIPs</h4>\n<ul>\n<li>Document inert vs active attributes <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1110\">#1110</a></li>\n<li>Explain the new valtree system for type level constants. <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1097\">#1097</a></li>\n</ul>\n</blockquote>",
        "id": 246852086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963084
    },
    {
        "content": "<h2>Backport unilateral approvals</h2>\n<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Revert PR 81473 to resolve (on mainline) issues 81626 and 81658.\" <a href=\"https://github.com/rust-lang/rust/pull/86212\">rust#86212</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> for 1.54 and have it land in 1.55</li>\n<li>should address <a href=\"https://github.com/rust-lang/rust/issues/81658\">rust#81658</a> (an invalid \"field never read lint\" diagnostic) until we can land again PR <a href=\"https://github.com/rust-lang/rust/issues/83171\">rust#83171</a> with an enhancement like PR <a href=\"https://github.com/rust-lang/rust/issues/83004\">rust#83004</a></li>\n<li>unilaterally beta-backport approved by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>beta backport PR: <a href=\"https://github.com/rust-lang/rust/pull/87369\">rust#87369</a></li>\n</ul>\n</li>\n</ul>",
        "id": 246852109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963096
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 246852132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963113
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Don't use gc-sections with profile-generate.\" <a href=\"https://github.com/rust-lang/rust/pull/87004\">rust#87004</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"309977\">@Jamie Cunliffe</span> </li>\n<li>nomination proposed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> as this should fix <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a>, preferably to be shipped in 1.54 a <code>P-critical</code> regression on AArch64 target</li>\n<li>Some PGO tests were failing last week, is bors now happy?</li>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246099199\">last week</a> - is <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a> really a release blocker?</li>\n</ul>\n</li>\n</ul>",
        "id": 246852167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963123
    },
    {
        "content": "<p>I'm not sure what the discussion was <del>yesterday</del> last time, but I don't see why we'd backport this either way.</p>",
        "id": 246852365,
        "sender_full_name": "nagisa",
        "timestamp": 1626963216
    },
    {
        "content": "<p>Yeah, we are rather close to release</p>",
        "id": 246852402,
        "sender_full_name": "mw",
        "timestamp": 1626963233
    },
    {
        "content": "<p>I don't think this is that critical</p>",
        "id": 246852507,
        "sender_full_name": "mw",
        "timestamp": 1626963266
    },
    {
        "content": "<p>The reason its been nominated was to get the fix out as quickly as possible. If the bug <em>were</em> critical, and the fix were trivial, then I think we would be talking about a backport (or I’d unilaterlly approve it)</p>",
        "id": 246852547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963293
    },
    {
        "content": "<p>People have been using PGO for a longest time without complaining and if they weren't then this is an obscure enough feature that it doesn't warrant backporting fixes for it is my view.</p>",
        "id": 246852549,
        "sender_full_name": "nagisa",
        "timestamp": 1626963293
    },
    {
        "content": "<p>I think it's only PGO on aarch64 that's broken</p>",
        "id": 246852604,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626963318
    },
    {
        "content": "<blockquote>\n<p>People have been using PGO for a longest time without complaining</p>\n</blockquote>\n<p>Including on AArch64 ?</p>",
        "id": 246852609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963320
    },
    {
        "content": "<p>That said, I'd vote to let it ride the trains.</p>",
        "id": 246852627,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626963326
    },
    {
        "content": "<p>My impression is that it's not really tied to a particular target, more like \"PGO is buggy with linkers sometimes deleting its data\"</p>",
        "id": 246852660,
        "sender_full_name": "simulacrum",
        "timestamp": 1626963344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246852609\">said</a>:</p>\n<blockquote>\n<p>Including on AArch64 ?</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>if they weren't then this is an obscure enough feature that it doesn't warrant backporting fixes for it is my view.</p>\n</blockquote>",
        "id": 246852672,
        "sender_full_name": "nagisa",
        "timestamp": 1626963349
    },
    {
        "content": "<p>right okay</p>",
        "id": 246852695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963360
    },
    {
        "content": "<p>in particular, the issue this is resolving is one that we filed ourselves</p>",
        "id": 246852787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963388
    },
    {
        "content": "<p>but didn’t we work around it for a long time? let me double check <a href=\"https://github.com/rust-lang/rust/issues/78226\">#78226</a></p>",
        "id": 246852832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I think the hypothesis is that the reason we don’t hear any complaints is that it hasn’t hit stable yet</p>",
        "id": 246852919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963457
    },
    {
        "content": "<p>Maybe we can even remove this workaround from the test case now: <a href=\"https://github.com/rust-lang/rust/blob/f913a4fe901d6aeb84941fa06c17916d4e6d1dd7/src/test/run-make-fulldeps/pgo-branch-weights/Makefile#L22-L28\">https://github.com/rust-lang/rust/blob/f913a4fe901d6aeb84941fa06c17916d4e6d1dd7/src/test/run-make-fulldeps/pgo-branch-weights/Makefile#L22-L28</a></p>",
        "id": 246852978,
        "sender_full_name": "mw",
        "timestamp": 1626963482
    },
    {
        "content": "<p>no, the issue has appeared and disappeared over time</p>",
        "id": 246853016,
        "sender_full_name": "simulacrum",
        "timestamp": 1626963484
    },
    {
        "content": "<p>(and, as discussed w.r.t. the fingerprint ICEs, not very many users are testing beta pro-actively)</p>",
        "id": 246853018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963485
    },
    {
        "content": "<p>like, in practice, this is an artifact of \"random\" noise going into hashes that seems to cause different linker behavior</p>",
        "id": 246853072,
        "sender_full_name": "simulacrum",
        "timestamp": 1626963508
    },
    {
        "content": "<p>Okay.</p>",
        "id": 246853085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963512
    },
    {
        "content": "<p>that's my impression, anyway</p>",
        "id": 246853090,
        "sender_full_name": "simulacrum",
        "timestamp": 1626963515
    },
    {
        "content": "<p>If the hypothesis is actually that this isn’t a true regression</p>",
        "id": 246853109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963522
    },
    {
        "content": "<p>but rather an old bug that is unreliable in terms of when it fires</p>",
        "id": 246853147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963539
    },
    {
        "content": "<p>then I say we should not backport, especially at this late point</p>",
        "id": 246853163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963547
    },
    {
        "content": "<p>let it ride the trains</p>",
        "id": 246853176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963550
    },
    {
        "content": "<p>thanks all</p>",
        "id": 246853204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963562
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 246853330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963611
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 246853340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963617
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 246853353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963626
    },
    {
        "content": "<ul>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/rust/pull/84373\">rust#84373</a><ul>\n<li>discussed last week, <span class=\"user-group-mention silent\" data-user-group-id=\"3282\">wg-incr-comp</span> seem the best owners of this</li>\n</ul>\n</li>\n</ul>",
        "id": 246853363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963632
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> should try to drive discussion here, lets open up a thread in <a class=\"stream\" data-stream-id=\"241847\" href=\"/#narrow/stream/241847-t-compiler.2Fwg-incr-comp\">#t-compiler/wg-incr-comp</a> for it, and maybe aim to land shortly after next nightly-&gt;beta promotion, if possible.</p>",
        "id": 246853451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963681
    },
    {
        "content": "<ul>\n<li>\"Wrap libraries in linker groups, allowing backwards/circular references\" <a href=\"https://github.com/rust-lang/rust/pull/85805\">rust#85805</a><ul>\n<li>discussed last week</li>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> commented it could be potentially troublesome</li>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  mentioned to postpone for a few months</li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> suggested an MCP to give visibility</li>\n</ul>\n</li>\n</ul>",
        "id": 246853465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963689
    },
    {
        "content": "<p>hm, seems to have been a mispaste - I think that was petrochenkov, not I, suggesting to postpone?</p>",
        "id": 246853511,
        "sender_full_name": "simulacrum",
        "timestamp": 1626963712
    },
    {
        "content": "<p>fixed, thanks</p>",
        "id": 246853583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963730
    },
    {
        "content": "<p>I think we just need to post the feedback accordingly</p>",
        "id": 246853681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963773
    },
    {
        "content": "<p>that, or decide if we want to give more directed feedback</p>",
        "id": 246853729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963789
    },
    {
        "content": "<p>between MCP vs postpone</p>",
        "id": 246853735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963794
    },
    {
        "content": "<p>(but an MCP will get the effect of some degree of postponement in any case.)</p>",
        "id": 246853805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963827
    },
    {
        "content": "<p>I’ll own an action item for that</p>",
        "id": 246853920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963871
    },
    {
        "content": "<p>If my memory is right, what Petrochenkov is requesting is a postponement until a specific other feature is implemented.</p>",
        "id": 246853936,
        "sender_full_name": "nagisa",
        "timestamp": 1626963880
    },
    {
        "content": "<p>yes, okay, I can see some hints of that in comment thread</p>",
        "id": 246854035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963940
    },
    {
        "content": "<blockquote>\n<p>I would prefer not to give this guarantee now, but stabilize linking modifiers first (<a href=\"https://github.com/rust-lang/rust/issues/81490\">#81490</a>)</p>\n</blockquote>",
        "id": 246854110,
        "sender_full_name": "nagisa",
        "timestamp": 1626963964
    },
    {
        "content": "<p>In terms of process, BTW: I’m thinking, to keep myself accountable, that we might want a standing list of action items</p>",
        "id": 246854139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963974
    },
    {
        "content": "<p>that we can just check off</p>",
        "id": 246854160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963983
    },
    {
        "content": "<p>at least, I think the lang team’s use of such a list seems to work pretty well</p>",
        "id": 246854187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626963996
    },
    {
        "content": "<p>that sounds like a good idea</p>",
        "id": 246854210,
        "sender_full_name": "mw",
        "timestamp": 1626964007
    },
    {
        "content": "<p>where is it hosted?</p>",
        "id": 246854217,
        "sender_full_name": "mw",
        "timestamp": 1626964012
    },
    {
        "content": "<p>its just another hackmd</p>",
        "id": 246854226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964017
    },
    {
        "content": "<p>ok</p>",
        "id": 246854239,
        "sender_full_name": "mw",
        "timestamp": 1626964023
    },
    {
        "content": "<p>with a series of </p>\n<ul>\n<li>[ ] check boxes</li>\n</ul>\n<p>(And we garbage collect the checked off one, at times.)</p>",
        "id": 246854266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964038
    },
    {
        "content": "<p>I’ll look into make it after the meeting. (Another action item, self-referential!)</p>",
        "id": 246854352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964080
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">79 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 1 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 44 P-high, 81 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 246854428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964102
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 246854452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964115
    },
    {
        "content": "<ul>\n<li>\"run-make-fulldeps/pgo-branch-weights fails on AArch64 Linux\" <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a> <ul>\n<li>discussed last week, linked to PR <a href=\"https://github.com/rust-lang/rust/issues/87004\">rust#87004</a>, now merged and scheduled for 1.55.0 milestone</li>\n</ul>\n</li>\n</ul>",
        "id": 246854474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964125
    },
    {
        "content": "<p>(we just discussed this, its on the trains for 1.55.0)</p>",
        "id": 246854512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964141
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a> <ul>\n<li>discussed last week</li>\n<li><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-15.20.2354818/near/246102804\">asked</a> if a fix for <a href=\"https://github.com/rust-lang/rust/issues/84963\">rust#84963</a> is somewhere being worked on?</li>\n<li>other updates on stoppers / pending related PRs?</li>\n</ul>\n</li>\n</ul>",
        "id": 246854563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964163
    },
    {
        "content": "<p>I guess we’ll find out in a week how good/bad our estimation of impact is</p>",
        "id": 246854668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964204
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/84963\">rust#84963</a> is sort of a bummer</p>",
        "id": 246854938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964311
    },
    {
        "content": "<blockquote>\n<p>One solution would be to cache the reached recursion depth as part of the trait selection result. This would allow us to deterministically error when evaluating u8 as New2&lt;()&gt; (assuming that the #![recursion_limit] has not been increased).</p>\n</blockquote>",
        "id": 246855015,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964330
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> said last week that <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a> will fix <a href=\"https://github.com/rust-lang/rust/issues/84963\">#84963</a></p>",
        "id": 246855016,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964330
    },
    {
        "content": "<p>it would be better if the description for PR <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> <em>said</em> that.</p>",
        "id": 246855065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964356
    },
    {
        "content": "<p>I don't think it will</p>",
        "id": 246855075,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964359
    },
    {
        "content": "<p>ah okay</p>",
        "id": 246855092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246855015\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>One solution would be to cache the reached recursion depth as part of the trait selection result. This would allow us to deterministically error when evaluating u8 as New2&lt;()&gt; (assuming that the #![recursion_limit] has not been increased).</p>\n</blockquote>\n</blockquote>\n<p>so back to this then</p>",
        "id": 246855105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964372
    },
    {
        "content": "<p>It will fix the main evaluate_obligation icr</p>",
        "id": 246855116,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964376
    },
    {
        "content": "<p>I'll update the descriltion</p>",
        "id": 246855121,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964380
    },
    {
        "content": "<p>Yeah, sorry just got to that message in last week's meeting.</p>",
        "id": 246855215,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964422
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/85360\">https://github.com/rust-lang/rust/issues/85360</a> is the issue that PR will fix.</p>",
        "id": 246855256,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I have to admit I don’t fully understand your follow-up comment to what I quotd above.</p>\n<p>Follow-up comment:</p>\n<blockquote>\n<p>However, I'm not certain that we actually want to do this. As I understand it, the main role of #![recursion_limit] is to enforce that we stop evaluating traits at some point (the trait system is Turing-complete, so we can't know if a given trait evaluation will ever complete). Forcing the user to bump the #![recursion_limit] here doesn't actually serve any useful purpose, other than simplifying the incr comp implementation.</p>\n</blockquote>",
        "id": 246855270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964442
    },
    {
        "content": "<p>Deterministic error does not necessarily imply forcing user to bump recursion_limit</p>",
        "id": 246855370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964468
    },
    {
        "content": "<p>they might revise their code in other ways</p>",
        "id": 246855387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964475
    },
    {
        "content": "<p>In the case of this particular issue, the fix I have in mind would require recursion_limit to be bumped</p>",
        "id": 246855428,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964490
    },
    {
        "content": "<p>what does “require” mean there?</p>",
        "id": 246855469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964504
    },
    {
        "content": "<p>as in, to get your code compiling?</p>",
        "id": 246855492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964511
    },
    {
        "content": "<p>When we use a cached result, we would treat it as though it \"wasn't\" cached when we determine if recursion_limit was reached</p>",
        "id": 246855524,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964523
    },
    {
        "content": "<p>which, I mean, fine. I just want to figure out how to make the ICE stop happening.</p>",
        "id": 246855533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964527
    },
    {
        "content": "<p>e.g., we would treat it as if you had actually evaluated all of the sub-obligations to whatever depth was needed</p>",
        "id": 246855563,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964540
    },
    {
        "content": "<p>ah I think I see</p>",
        "id": 246855573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964547
    },
    {
        "content": "<p>or maybe I don't</p>",
        "id": 246855651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964564
    },
    {
        "content": "<p>if we do <code>eval(MyStruct: SomeDeepPredicate)</code></p>",
        "id": 246855671,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964577
    },
    {
        "content": "<p>I'd be interested in the story around <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a></p>",
        "id": 246855672,
        "sender_full_name": "mw",
        "timestamp": 1626964578
    },
    {
        "content": "<p>at this point I think we should not take up more of this meeting time on this sidebar</p>",
        "id": 246855708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964596
    },
    {
        "content": "<p>and then do something like <code>eval(SomethingElse where MyStruct: SomeDeepPredicate)</code></p>",
        "id": 246855718,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964602
    },
    {
        "content": "<p>but lets do follow-up, perhaps in <a class=\"stream\" data-stream-id=\"241847\" href=\"/#narrow/stream/241847-t-compiler.2Fwg-incr-comp\">#t-compiler/wg-incr-comp</a> ?</p>",
        "id": 246855734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964607
    },
    {
        "content": "<p>(after you're done with the recursion limit discussion)</p>",
        "id": 246855750,
        "sender_full_name": "mw",
        "timestamp": 1626964613
    },
    {
        "content": "<p>same for discussing of <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a></p>",
        "id": 246855803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964636
    },
    {
        "content": "<p>I want to just finish the high-level discussion of <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a></p>",
        "id": 246855834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964656
    },
    {
        "content": "<p>i.e.: How are we feeling about incr-comp right now?</p>",
        "id": 246855857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964666
    },
    {
        "content": "<p>We still good to have it enabled for 1.54? I  think we are still good.</p>",
        "id": 246855877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964676
    },
    {
        "content": "<p>I'm wondering mainly about <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a></p>",
        "id": 246855884,
        "sender_full_name": "mw",
        "timestamp": 1626964680
    },
    {
        "content": "<p>Should this have landed and been backported already?</p>",
        "id": 246855943,
        "sender_full_name": "mw",
        "timestamp": 1626964697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> in terms of whether we should land it and backport it to 1.54 ?</p>",
        "id": 246855946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964698
    },
    {
        "content": "<p>yes</p>",
        "id": 246855960,
        "sender_full_name": "mw",
        "timestamp": 1626964706
    },
    {
        "content": "<p>how common is the error it fixes</p>",
        "id": 246855977,
        "sender_full_name": "mw",
        "timestamp": 1626964717
    },
    {
        "content": "<p>It's really hard to know, unfortunately</p>",
        "id": 246856009,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964733
    },
    {
        "content": "<p>how did the perf run turn out ...</p>",
        "id": 246856019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964740
    },
    {
        "content": "<p>I believe most of the people hitting incr comp issues before were people using stable</p>",
        "id": 246856029,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964747
    },
    {
        "content": "<p>okay <a href=\"https://perf.rust-lang.org/compare.html?start=b5a2ccee81406303324016d03399fac68ceb6718&amp;end=7d3788b67103a424bf6612495afedb80c4fe8b10\">perf run</a> is pretty unfortunate too. :(</p>",
        "id": 246856083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964788
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856019\">said</a>:</p>\n<blockquote>\n<p>how did the perf run turn out ...</p>\n</blockquote>\n<p>We talked about this last week and the general conclusion seemed to be that the impact was minimal. Many of the significant regressions are on the order of milliseconds of time.</p>",
        "id": 246856159,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964812
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/pull/86871\">https://github.com/rust-lang/rust/pull/86871</a> is another option, though it's much hackier</p>",
        "id": 246856179,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964822
    },
    {
        "content": "<p>hmm okay</p>",
        "id": 246856181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964823
    },
    {
        "content": "<p>it has a smaller perf impact</p>",
        "id": 246856199,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964833
    },
    {
        "content": "<p>I don't think perf is a real problem</p>",
        "id": 246856230,
        "sender_full_name": "mw",
        "timestamp": 1626964851
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856159\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856019\">said</a>:</p>\n<blockquote>\n<p>how did the perf run turn out ...</p>\n</blockquote>\n<p>We talked about this last week and the general conclusion seemed to be that the impact was minimal. Many of the significant regressions are on the order of milliseconds of time.</p>\n</blockquote>\n<p>the default perf presentation isn’t providing that info in its immediate rendering. Maybe worth more feedback to <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span></p>",
        "id": 246856319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964893
    },
    {
        "content": "<p>but would we be OK with merging and backporting this?</p>",
        "id": 246856321,
        "sender_full_name": "mw",
        "timestamp": 1626964893
    },
    {
        "content": "<p>I personally would like to get <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> merged and backported for the 1.54 release as the patch is small (basically just removing code that causes the issue) and the perf hit seems acceptable.</p>",
        "id": 246856324,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964894
    },
    {
        "content": "<p>Lets do a quick beta-nom handling now</p>",
        "id": 246856354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964909
    },
    {
        "content": "<p><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> Always preserve sub-obligations in the projection cache <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a></p>",
        "id": 246856386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626964922
    },
    {
        "content": "<p>I have one concern about backporting - IIRC, we ran into exponential blowup issues in the past that were in some way related to projection caching</p>",
        "id": 246856524,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964975
    },
    {
        "content": "<p>I don't think this should be able to cause that</p>",
        "id": 246856548,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964988
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856319\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856159\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856019\">said</a>:</p>\n<blockquote>\n<p>how did the perf run turn out ...</p>\n</blockquote>\n<p>We talked about this last week and the general conclusion seemed to be that the impact was minimal. Many of the significant regressions are on the order of milliseconds of time.</p>\n</blockquote>\n<p>the default perf presentation isn’t providing that info in its immediate rendering. Maybe worth more feedback to <span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span></p>\n</blockquote>\n<p>Yeah for sure! Having some idea of the absolute numbers for compilation time would be useful.  There's also some work Ryan and I are going to do to add a tagging system to perf.rlo. That will give us a way to surface \"micro-benchmark\" vs \"real-world\" crate and other distinctions in the UI.</p>",
        "id": 246856552,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626964989
    },
    {
        "content": "<p>I would like to see “Why” is this a right fix in the PR description.</p>",
        "id": 246856576,
        "sender_full_name": "nagisa",
        "timestamp": 1626964998
    },
    {
        "content": "<p>since we 'just' re-do work that we did the first time we tried to project a particular predicate</p>",
        "id": 246856579,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626964999
    },
    {
        "content": "<p>I feel uneasy about backporting a fix that has not landed yet</p>",
        "id": 246856646,
        "sender_full_name": "mw",
        "timestamp": 1626965032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I'll update the PR description</p>",
        "id": 246856649,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965033
    },
    {
        "content": "<p>with very little time to test it</p>",
        "id": 246856671,
        "sender_full_name": "mw",
        "timestamp": 1626965041
    },
    {
        "content": "<p>Does crater collect build times? It's be interesting to see perf impact ecosystem wide</p>",
        "id": 246856749,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626965066
    },
    {
        "content": "<p>I think I’m with <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> here. This is pretty last minute</p>",
        "id": 246856784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965092
    },
    {
        "content": "<p>and we have no idea about the scope of how many users are hit by this instance of the ICE</p>",
        "id": 246856819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  Crater does not run on compute that has consistent performance.</p>",
        "id": 246856820,
        "sender_full_name": "nagisa",
        "timestamp": 1626965107
    },
    {
        "content": "<p>so we cannot evaluate the trade-off. :(</p>",
        "id": 246856828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965112
    },
    {
        "content": "<p>I think we probably should not attempt backport for 1.54</p>",
        "id": 246856872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965125
    },
    {
        "content": "<p>so what's the worst case then? we re-enable and the issue keeps popping up</p>",
        "id": 246856892,
        "sender_full_name": "mw",
        "timestamp": 1626965132
    },
    {
        "content": "<p>but maybe we look into 1.55, <em>if</em> it doesn’t land before the nightly-&gt;beta promotion</p>",
        "id": 246856903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965138
    },
    {
        "content": "<p>(i.e. <a href=\"https://github.com/rust-lang/rust/issues/85360\">https://github.com/rust-lang/rust/issues/85360</a>)</p>",
        "id": 246856933,
        "sender_full_name": "mw",
        "timestamp": 1626965148
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856892\">said</a>:</p>\n<blockquote>\n<p>so what's the worst case then? we re-enable and the issue keeps popping up</p>\n</blockquote>\n<p>which is an outcome we have to be prepared for <em>anyway</em></p>",
        "id": 246856965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965162
    },
    {
        "content": "<p>are we prepared for it? :)</p>",
        "id": 246857040,
        "sender_full_name": "mw",
        "timestamp": 1626965182
    },
    {
        "content": "<p>more prepared than last time, I think.</p>",
        "id": 246857064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965192
    },
    {
        "content": "<p>we haven’t put any formal processes in place</p>",
        "id": 246857079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965204
    },
    {
        "content": "<p>so what would we do?</p>",
        "id": 246857116,
        "sender_full_name": "mw",
        "timestamp": 1626965227
    },
    {
        "content": "<p>but I think we learned enough that we would actually get the word out, e.g. via twitter, if we had a re-run of the same thing as 1.52.0</p>",
        "id": 246857117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965227
    },
    {
        "content": "<p>should we communicate this in the release message? ie. that we half-expect a point release?</p>",
        "id": 246857184,
        "sender_full_name": "mw",
        "timestamp": 1626965268
    },
    {
        "content": "<p>No, I don't</p>",
        "id": 246857193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965273
    },
    {
        "content": "<p>I don’t half-expect a point release</p>",
        "id": 246857200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965278
    },
    {
        "content": "<p>10% expect :)</p>",
        "id": 246857257,
        "sender_full_name": "mw",
        "timestamp": 1626965288
    },
    {
        "content": "<p>When is the release date?</p>",
        "id": 246857262,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> one week from today</p>",
        "id": 246857279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965301
    },
    {
        "content": "<p>I think if we're seriously thinking there will need to be a point release, then we should not be reenabling at this time.</p>",
        "id": 246857296,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626965311
    },
    {
        "content": "<p>So, one more time then: Are we ready to re-enable incr-comp? :)</p>",
        "id": 246857357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965343
    },
    {
        "content": "<p>If we backport this PR, then definitely</p>",
        "id": 246857416,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965376
    },
    {
        "content": "<p>However, I'm not 100% that we should backport it</p>",
        "id": 246857444,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965385
    },
    {
        "content": "<p>if we don’t backport this PR</p>",
        "id": 246857449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965387
    },
    {
        "content": "<p>then are we ready to re-enable incr-comp?</p>",
        "id": 246857462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965394
    },
    {
        "content": "<p>maybe we are not</p>",
        "id": 246857469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965396
    },
    {
        "content": "<p>If we decide to not, we need to communicate in the release notes why and how to reenable it</p>",
        "id": 246857525,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626965409
    },
    {
        "content": "<p>personally, I think given the better diagnostic it's ok to reenable even with known bugs</p>",
        "id": 246857554,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626965424
    },
    {
        "content": "<p>as long as people aren't hitting them every other compile</p>",
        "id": 246857571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626965432
    },
    {
        "content": "<p>If we enable it, we need to communicate our uncertainty explaining we don't have any telemetry to confirm everything has been tackled</p>",
        "id": 246857582,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626965439
    },
    {
        "content": "<p>if you read r/rust people are <em>very</em> disappointed that incremental is disabled</p>",
        "id": 246857596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626965448
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> brings up a good point</p>",
        "id": 246857633,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965464
    },
    {
        "content": "<p>And mentioning that there's at least one outstanding issue that we expect to be rare</p>",
        "id": 246857639,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626965467
    },
    {
        "content": "<p>we won't be displaying the same kind of incomprehensible ICE that we did previously</p>",
        "id": 246857656,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965477
    },
    {
        "content": "<p>I mean, we <em>will</em>, but we'll also display a nicer error message telling people what to do</p>",
        "id": 246857696,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965491
    },
    {
        "content": "<p>Okay, so what I’m hearing is that if we re-enable, we should provide some more up-front communication</p>",
        "id": 246857701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965492
    },
    {
        "content": "<p>it should <em>not</em> go so far as to say we expect a point release.</p>",
        "id": 246857746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965506
    },
    {
        "content": "<p>(because, if we did, then we should not be re-enabling.)</p>",
        "id": 246857775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965520
    },
    {
        "content": "<p>but we can work on a release note item about this. Heck, it should be <em>celebrating</em> incr-comp being reenabled.</p>",
        "id": 246857866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965548
    },
    {
        "content": "<p>Who wants to own working on that section of release blog post? It definitely needs a delicate hand.</p>",
        "id": 246857919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965575
    },
    {
        "content": "<p>I'll be posting the PR for the 1.55 release blog post later today and would be happy for someone to update the section (currently just with placeholder text from last release) on incr</p>",
        "id": 246857929,
        "sender_full_name": "simulacrum",
        "timestamp": 1626965579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you think you’d have time for word-smithing here?</p>",
        "id": 246857946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965588
    },
    {
        "content": "<p>I sort of doubt I'll have the time to do so.</p>",
        "id": 246857952,
        "sender_full_name": "simulacrum",
        "timestamp": 1626965592
    },
    {
        "content": "<p>There's currently two issues outstanding. <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> fixes one of those. This doesn't seem like a bad state to release in to me.</p>",
        "id": 246858012,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626965626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> but <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> is not relevant to the 1.54 release if we do not backport it to 1.54, right?</p>",
        "id": 246858097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965649
    },
    {
        "content": "<p>Yes, that's true.</p>",
        "id": 246858122,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626965661
    },
    {
        "content": "<p>We have <em>got</em> to tie this off</p>",
        "id": 246858126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965664
    },
    {
        "content": "<p>I’ll own writing the section or delegating it.</p>",
        "id": 246858142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965674
    },
    {
        "content": "<p>lets move on</p>",
        "id": 246858147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246857929\">said</a>:</p>\n<blockquote>\n<p>I'll be posting the PR for the 1.55 release blog post later today and would be happy for someone to update the section (currently just with placeholder text from last release) on incr</p>\n</blockquote>\n<p>I can take this.</p>",
        "id": 246858183,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626965700
    },
    {
        "content": "<p>I can help with the wording</p>",
        "id": 246858191,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1626965703
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 246858218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965711
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 246858241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965720
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-07-20.md\">triage logs for 2021-07-20</a></p>\n</blockquote>\n<p>A mixed week, with some moderate regressions and moderate improvements. (I am personally wondering whether style-servo-debug needs to have a larger individual threshold for signalling a regression.) There were some notable PR's that were specifically oriented around performance enhancements.</p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=5aff6dd07a562a2cba3c57fc3460a72acb6bef46&amp;end=5c0ca08c662399c1c864310d1a20867d3ab68027&amp;absolute=false&amp;stat=instructions%3Au\">5aff6dd07a562a2cba3c57fc3460a72acb6bef46..5c0ca08c662399c1c864310d1a20867d3ab68027</a></p>\n<p>3 Regressions, 3 Improvements, 3 Mixed; 1 of them in rollups</p>",
        "id": 246858271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965738
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Replace associated item bound vars with placeholders when projecting <a href=\"https://github.com/rust-lang/rust/issues/86993\">#86993</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b1f8e27b74c541d3d555149c8efa4bfe9385cd56&amp;end=27e42058811e448b1a7dd8630d86ab247fbfcb9b&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>A perf run was <a href=\"https://perf.rust-lang.org/compare.html?start=fdfe819580062a441024d713b49340cd3f7d7efc&amp;end=7baa78ec683fd14db4d4c1869dbef5cbbc5b774d\">done on the PR originally</a>. The regression flagged here seems to be on a different set of benchmarks: <code>style-servo-debug</code> and <code>wf-projection-stress-65510-*</code>, neither of which was flagged as a regression in the original runs.</li>\n<li>Results overall seem pretty mixed and hard to interpret. Left a <a href=\"https://github.com/rust-lang/rust/pull/86993#issuecomment-883624762\">comment</a> on the PR.</li>\n</ul>\n<p>Remove special case for <code>ExprKind::Paren</code> in <code>MutVisitor</code> <a href=\"https://github.com/rust-lang/rust/issues/87284\">#87284</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=014026d1a7ca991f82f12efa95ef4dffb29dc8af&amp;end=6535449a002264ee08dec8e741f1aadd97428fae&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>full</code> builds of <code>coercions-debug</code>)</li>\n<li>This is on the borderline for \"significant regression\", and was the <em>only</em> regression associated with this PR.</li>\n<li>Also, <code>coercions-debug</code> seems like it has a noisy history (that's pnkfelix's opinion from eyeballing it; it has also a single \"?\" on its comparison line.)</li>\n</ul>\n<p>Better diagnostics with mismatched types due to implicit static lifetime <a href=\"https://github.com/rust-lang/rust/issues/87244\">#87244</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=718d53b0cb7dde93499cb92950d60b412f5a3d05&amp;end=da7d405357600a76f2b93b8aa41fe5ee5da7885d&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>full</code> builds of <code>stm32f4-check</code>)</li>\n<li>Widespread regressions that exceed the 0.2% threshold for non-noisy benchmarks.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/87244#issuecomment-883635813\">comment</a> asking if this was expected. But I suspect the situation does not warrant additional investment of effort, assuming there's no trivial fix identifiable from the PR author.</li>\n</ul>",
        "id": 246858295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965751
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/87118\">#87118</a></li>\n<li>Make expansions stable for incr. comp. <a href=\"https://github.com/rust-lang/rust/issues/86676\">#86676</a></li>\n<li>Some perf optimizations and logging <a href=\"https://github.com/rust-lang/rust/issues/87203\">#87203</a></li>\n</ul>",
        "id": 246858312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965760
    },
    {
        "content": "<blockquote>\n<p>Remove special case for ExprKind::Paren in MutVisitor</p>\n</blockquote>",
        "id": 246858375,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965772
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Cache expansion hash globally <a href=\"https://github.com/rust-lang/rust/issues/87044\">#87044</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3e1c75c6e25a4db968066bd2ef2dabc7c504d7ca&amp;end=c7d6bcc788ef6b2293d2d5166a9b0339d5d03b0a&amp;stat=instructions:u\">instruction counts</a> (up to 1.9% on <code>full</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3e1c75c6e25a4db968066bd2ef2dabc7c504d7ca&amp;end=c7d6bcc788ef6b2293d2d5166a9b0339d5d03b0a&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>incr-unchanged</code> builds of <code>inflate-check</code>)</li>\n<li>This was an improvement for a lot of incremental cases, and a regression for a few full-compilation cases: <code>deeply-nested-async-{check,debug,opt}</code>, and <code>coercions-debug</code>.</li>\n<li>It seems like these results were <a href=\"https://github.com/rust-lang/rust/pull/87044#issuecomment-879407381\">expected</a>, and they make sense given the nature of the PR.</li>\n</ul>\n<p>Update Rust Float-Parsing Algorithms to use the Eisel-Lemire algorithm. <a href=\"https://github.com/rust-lang/rust/issues/86761\">#86761</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=64d171b8a419eb6cb872ab579398eff8a741bbc6&amp;end=f502bd3abd12111bbfae0974db018c165a977c0e&amp;stat=instructions:u\">instruction counts</a> (up to 3.2% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=64d171b8a419eb6cb872ab579398eff8a741bbc6&amp;end=f502bd3abd12111bbfae0974db018c165a977c0e&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>full</code> builds of <code>piston-image-opt</code>)</li>\n<li>A perf run was done on the orignal PR, but the run there did not predict the regression that was now observed to <code>style-servo-debug</code> when this PR landed on nightly.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/86761#issuecomment-883645181\">comment</a>, but I am guessing that <code>style-servo-debug</code> may need a bigger noise threshold (or rather, sensitivity to perturbations) than what we currently use.</li>\n</ul>\n<p>Move OnDiskCache to rustc_query_impl. <a href=\"https://github.com/rust-lang/rust/issues/86698\">#86698</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5a8a44196b3cf099f8c9b0156bd902eaec0b4e5f&amp;end=18073052d8c3544ccb73effd289ed3acda0d66c0&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5a8a44196b3cf099f8c9b0156bd902eaec0b4e5f&amp;end=18073052d8c3544ccb73effd289ed3acda0d66c0&amp;stat=instructions:u\">instruction counts</a> (up to 1.1% on <code>incr-unchanged</code> builds of <code>deeply-nested-async-opt</code>)</li>\n<li>A perf run was done on the original PR that predicted a much better outcome here.</li>\n<li>Left a <a href=\"https://github.com/rust-lang/rust/pull/86698#issuecomment-883647259\">comment</a> asking PR author if they have any idea about the discrepancy.</li>\n</ul>",
        "id": 246858387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965779
    },
    {
        "content": "<p>The special case that this PR removed was an awful hack, so I think we would want to accept the performance hit if it's real</p>",
        "id": 246858425,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965795
    },
    {
        "content": "<p>I don’t think its real</p>",
        "id": 246858443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965804
    },
    {
        "content": "<p>I probably should have either removed it from the report, or moved it to a separate “suspicious benchmarks” section. :)</p>",
        "id": 246858506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965833
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87153\">#87153 \\[debuginfo\\] Emit associated type bindings in trait object type names.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86993\">#86993 Replace associated item bound vars with placeholders when projecting</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to 🛡️ against 💥 💥-payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n</ul>",
        "id": 246858531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965846
    },
    {
        "content": "<p>have we investigated why it's so noisy?</p>",
        "id": 246858538,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626965849
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>None</p>",
        "id": 246858556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246858538\">said</a>:</p>\n<blockquote>\n<p>have we investigated why it's so noisy?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> ^ ?</p>",
        "id": 246858600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965881
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 246858659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965890
    },
    {
        "content": "<ul>\n<li>\"Binary search performance regressed in 1.25\" <a href=\"https://github.com/rust-lang/rust/issues/53823\">rust#53823</a><ul>\n<li>Needs a fix <a href=\"https://bugs.llvm.org/show_bug.cgi?id=40027\">upstream on LLVM</a>, see <a href=\"https://github.com/rust-lang/rust/issues/53823#issuecomment-882660032\">comment</a>``</li>\n<li>discussed on <a href=\"#narrow/stream/131828-t-compiler/topic/tracking.20an.20old.20regression\">Zulip</a></li>\n<li>T-compiler tagged FIY</li>\n</ul>\n</li>\n</ul>",
        "id": 246858718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965918
    },
    {
        "content": "<p>(this, <a href=\"https://github.com/rust-lang/rust/issues/53823\">rust#53823</a>, is just a heads up. Its something that was moved to T-libs and now moved back to T-compilre.)</p>",
        "id": 246858767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246858600\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246858538\">said</a>:</p>\n<blockquote>\n<p>have we investigated why it's so noisy?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> ^ ?</p>\n</blockquote>\n<p>Not recently no. It is on the list of todos.</p>",
        "id": 246858803,
        "sender_full_name": "rylev",
        "timestamp": 1626965953
    },
    {
        "content": "<p>(but its also low priority. P-medium at <em>best</em>, but probably P-low.)</p>",
        "id": 246858804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965953
    },
    {
        "content": "<p>so just a heads-up and an attempt to nerd-snipe. (The issue <em>is</em> potentially interesting.)</p>",
        "id": 246858866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965976
    },
    {
        "content": "<p>but we should remove nomination label</p>",
        "id": 246858891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965987
    },
    {
        "content": "<ul>\n<li>\"Binary size is significant increased from <code>1.46.0</code> to <code>1.51.0</code>\" <a href=\"https://github.com/rust-lang/rust/issues/86610\">rust#86610</a><ul>\n<li>perhaps related to one or more issues about the same theme (see mentioned issues, ex. <a href=\"https://github.com/rust-lang/rust/issues/86431\">rust#86431</a> was mentioned)</li>\n<li>issue nominated as FIY for T-compiler. Can this be tracked in perf?</li>\n</ul>\n</li>\n</ul>",
        "id": 246858899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626965989
    },
    {
        "content": "<p><em>this</em> we should probably look in. And the first thing is probably to indeed track binary size in perf.</p>",
        "id": 246858926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626966003
    },
    {
        "content": "<p>I’ll leave it nominated so we’ll hopefully talk more about it next week.</p>",
        "id": 246859064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626966017
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 246859095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626966023
    },
    {
        "content": "<p>And that’s all, folks! <span aria-label=\"pig\" class=\"emoji emoji-1f416\" role=\"img\" title=\"pig\">:pig:</span></p>",
        "id": 246859134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626966030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246858926\">said</a>:</p>\n<blockquote>\n<p><em>this</em> we should probably look in. And the first thing is probably to indeed track binary size in perf.</p>\n</blockquote>\n<p>incidentally this is something that <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and I will be tackling shortly</p>",
        "id": 246859178,
        "sender_full_name": "mw",
        "timestamp": 1626966038
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 246859206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626966044
    },
    {
        "content": "<p>The evaluate_obligaiton fix PR <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a> is now rebased, and has an updated description</p>",
        "id": 246859327,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626966064
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^, you mentioned last week you'd like to review that PR</p>",
        "id": 246859693,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1626966160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246851576\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> those are showing the last comment on the issue, which is the wrong metric: it should show the last comment on the Zulip thread because that's where discussion happened</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  I've opened a topic on zulip to follow-up this remark <br>\n<a href=\"#narrow/stream/224082-t-release.2Ftriagebot/topic/Last.20comment.20in.20topic\">https://rust-lang.zulipchat.com/#narrow/stream/224082-t-release.2Ftriagebot/topic/Last.20comment.20in.20topic</a><br>\nlet's see if I figure out the API for that</p>",
        "id": 246861110,
        "sender_full_name": "apiraino",
        "timestamp": 1626966769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> has marked this topic as resolved.</p>",
        "id": 246890813,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626980307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> has marked this topic as unresolved.</p>",
        "id": 246890834,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626980331
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> has marked this topic as resolved.</p>",
        "id": 246909478,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626990179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> has marked this topic as unresolved.</p>",
        "id": 246909496,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626990199
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246859178\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246858926\">said</a>:</p>\n<blockquote>\n<p><em>this</em> we should probably look in. And the first thing is probably to indeed track binary size in perf.</p>\n</blockquote>\n<p>incidentally this is something that <span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> and I will be tackling shortly</p>\n</blockquote>\n<p>which one of you (<span class=\"user-mention\" data-user-id=\"124287\">@mw</span> or <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> ) <em>owns</em> it? I want to put it in <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw?view\">new action items list</a></p>",
        "id": 246909847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1626990458
    },
    {
        "content": "<p>I'm happy to be the one on point for this ^^ This fits perfectly with the other work I'm doing on perf.</p>",
        "id": 246950033,
        "sender_full_name": "rylev",
        "timestamp": 1627027114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Would it make sense to turn the action items list into a spreadsheet. then it could have an optional column for a due-date and items that are due soon could be color-marked.</p>",
        "id": 246964533,
        "sender_full_name": "mw",
        "timestamp": 1627038471
    },
    {
        "content": "<p>What did we decide about backporting <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a></p>",
        "id": 247015942,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1627065554
    },
    {
        "content": "<p>Draft for next meeting's agenda is available at:<br>\n<a href=\"https://hackmd.io/QCs_hIbpTbKgcSy-0V0Liw\">https://hackmd.io/QCs_hIbpTbKgcSy-0V0Liw</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>  from <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  (<a href=\"https://hackmd.io/YIIP5vCnSjOYogzRSlJ9MQ?view\">past summary</a>)</li>\n</ul>",
        "id": 247187170,
        "sender_full_name": "apiraino",
        "timestamp": 1627296578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246964533\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> Would it make sense to turn the action items list into a spreadsheet. then it could have an optional column for a due-date and items that are due soon could be color-marked.</p>\n</blockquote>\n<p>I’ll look into that.</p>",
        "id": 247212876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1627311066
    },
    {
        "content": "<p>I want to ensure its trivial to add new action items</p>",
        "id": 247212901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1627311077
    },
    {
        "content": "<p>but I can imagine have an incoming queue that’s just a bullet list, that can get converted lazily into table entries.</p>",
        "id": 247212945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1627311101
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-22.20.2354818/near/246856872\">said</a>:</p>\n<blockquote>\n<p>I think we probably should not attempt backport for 1.54</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> I think this was my conclusion regarding <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> … given the potential issues, and fact that it has not landed in nightly, makes it too risky. That was why I tried to shift discussion to “assuming we don’t land this PR, do we re-enable incr-comp\"</p>",
        "id": 247213332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1627311253
    }
]