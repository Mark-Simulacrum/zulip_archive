[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 1h40<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/EewyTLZXQpmtfaH633GU-A?view\">meeting agenda</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1172\">WG-async-foundations</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>  (<a href=\"https://hackmd.io/fS5Qiyo3Ta6F8S7QNxg5xA#WG-checkins\">previous checkin</a>)</li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span>  (generic associated types) by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 274833252,
        "sender_full_name": "apiraino",
        "timestamp": 1646918484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> I've added the two WG-traits subgroups to the checkin rotation. if it's ok for you, we can start with reporting for the generic associated type or at your choice the other one (impl trait) :)</p>",
        "id": 274833271,
        "sender_full_name": "apiraino",
        "timestamp": 1646918494
    },
    {
        "content": "<p>Also <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> : today's agenda has quite a bit of <a href=\"https://hackmd.io/EewyTLZXQpmtfaH633GU-A?view#Nominated-Issues\">nominated issues</a> so we may want to skim quickly the old PR waiting for review</p>",
        "id": 274833364,
        "sender_full_name": "apiraino",
        "timestamp": 1646918535
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274833271\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> I've added the two WG-traits subgroups to the checkin rotation. if it's ok for you, we can start with reporting for the generic associated type or at your choice the other one (impl trait) :)</p>\n</blockquote>\n<p>This works! I should be able to fill this in before the meeting.</p>",
        "id": 274834191,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646918974
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Our weekly triage meeting starts now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here.</p>",
        "id": 274846506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924504
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for preparing this weeks <a href=\"https://hackmd.io/EewyTLZXQpmtfaH633GU-A?both\">agenda</a></p>",
        "id": 274846627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924539
    },
    {
        "content": "<p>Lets start off with ~6 minutes for </p>\n<h2>Announcements</h2>",
        "id": 274846672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924558
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2022-03-10T15:00:00Z\">2022-03-10T10:00:00-05:00</time> monthly Compiler Team Planning meeting ( <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">link</a>)</li>\n</ul>",
        "id": 274846683,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924565
    },
    {
        "content": "<p>(we have <a href=\"https://github.com/rust-lang/compiler-team/issues?q=is%3Aissue+is%3Aopen+label%3Ameeting-proposal+-label%3Ameeting-scheduled\">five meeting proposals</a> already filed, but that's no reason you all shouldn't add more if you have something important for the team to discuss!)</p>",
        "id": 274846794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924627
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 274846859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924648
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 274846868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924654
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Implement <code>Clone</code> for generators\" <a href=\"https://github.com/rust-lang/compiler-team/issues/494\">compiler-team#494</a> </li>\n<li>\"Add <code>import_name_type</code> parameter to <code>#[link]</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/495\">compiler-team#495</a> </li>\n<li>\"Removing codegen logic for <code>nvptx-nvidia-cuda</code> (32-bit target)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/496\">compiler-team#496</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274846884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924660
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 8 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 5 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: 3 months ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: 3 months ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: 2 months ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: about 48 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 274846916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924681
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Tracking issue for Consistent no-prelude attribute (RFC 501)\" <a href=\"https://github.com/rust-lang/rust/issues/20561#issuecomment-1059258740\">rust#20561</a> </li>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901#issuecomment-1043124526\">rust#93901</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274846952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924702
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"allow arbitrary inherent impls in the standard library\" <a href=\"https://github.com/rust-lang/compiler-team/issues/487\">compiler-team#487</a> </li>\n<li>\"Increase the minimum linux-gnu versions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/493\">compiler-team#493</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274846976,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924711
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 274846992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924718
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Stabilize const_fn_fn_ptr_basics, const_fn_trait_bound, and const_impl_trait\" <a href=\"https://github.com/rust-lang/rust/pull/93827\">rust#93827</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274847010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924725
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 274847042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924736
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1172\">WG-async-foundations</span> by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> (<a href=\"https://hackmd.io/fS5Qiyo3Ta6F8S7QNxg5xA#WG-checkins\">previous checkin</a>)</li>\n</ul>",
        "id": 274847052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924743
    },
    {
        "content": "<blockquote>\n<p>wg-async has started an <a href=\"https://hackmd.io/6kSbmyggT6eAy5uvdB6srA?view\">\"async reading club\"</a>, every 2 weeks on Mondays. Check out the link to learn more.</p>\n</blockquote>",
        "id": 274847074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924750
    },
    {
        "content": "<p>(there was more stuff discussed at <a class=\"stream-topic\" data-stream-id=\"187312\" href=\"/#narrow/stream/187312-wg-async/topic/sprint.20planning.202022-03-03\">#wg-async &gt; sprint planning 2022-03-03</a>  and <a class=\"stream-topic\" data-stream-id=\"187312\" href=\"/#narrow/stream/187312-wg-async/topic/sprint.20planning.202022-02-17\">#wg-async &gt; sprint planning 2022-02-17</a>  but I couldn't remember enough to make a good summary before this meeting.)</p>",
        "id": 274847234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924813
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span> (generic associated types) by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> (<a href=\"https://hackmd.io/fS5Qiyo3Ta6F8S7QNxg5xA#WG-checkins\">previous checkin</a>)<blockquote>\n<p>A few PRs have landed<br>\n- Associated type where clause move <a href=\"https://github.com/rust-lang/rust/pull/90076\">rust#90076</a><br>\n- Normalization in fulfill <a href=\"https://github.com/rust-lang/rust/pull/90887\">rust#90887</a><br>\n- Normalize all obligation and expected trait refs in the same place <a href=\"https://github.com/rust-lang/rust/pull/94108\">rust#94108</a><br>\n- GATs in rustdoc <a href=\"https://github.com/rust-lang/rust/pull/94009\">rust#94009</a></p>\n<p>Road to stabilization<br>\n- Only 3 untriaged GATs issues remain (but Jack's taken a look at all, just need a look from Niko)<br>\n- Still working on a \"shiny future\" design for a GATified Iterator (and maybe other traits)<br>\n- Need to go through current tests and issues, in order to document current behavior, what works, what doesn't<br>\n- Finally, need to write stabilization report and related docs</p>\n</blockquote>\n</li>\n</ul>",
        "id": 274847266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924823
    },
    {
        "content": "<p>any other announcements before we move to backport nominations?</p>",
        "id": 274847327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924850
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 274847459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924888
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Check method input expressions once\" <a href=\"https://github.com/rust-lang/rust/pull/94438\">rust#94438</a> <ul>\n<li>pr by <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span> , already merged</li>\n<li>beta-backport decision was waiting on <a href=\"https://github.com/rust-lang/rust/pull/94596\">rust#94596</a>, which is now merged</li>\n</ul>\n</li>\n</ul>",
        "id": 274847483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924897
    },
    {
        "content": "<p>it <em>sounds</em> like we're actually in a spot where we need to consider <a href=\"https://github.com/rust-lang/rust/issues/94438\">rust#94438</a> in <em>tandem</em> with <a href=\"https://github.com/rust-lang/rust/issues/94596\">#94596</a>, is that correct?</p>",
        "id": 274847638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924968
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Delay bug in expr adjustment when check_expr is called multiple times\" <a href=\"https://github.com/rust-lang/rust/pull/94596\">rust#94596</a><ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span>, already merged</li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/pull/94516\">rust#94516</a></li>\n<li>beta-backport nominated by  <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274847659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646924983
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274847638\">said</a>:</p>\n<blockquote>\n<p>it <em>sounds</em> like we're actually in a spot where we need to consider <a href=\"https://github.com/rust-lang/rust/issues/94438\">rust#94438</a> in <em>tandem</em> with <a href=\"https://github.com/rust-lang/rust/issues/94596\">#94596</a>, is that correct?</p>\n</blockquote>\n<p>I think so yeah</p>",
        "id": 274847753,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925009
    },
    {
        "content": "<p>Or i guess the latter could be backported on its own</p>",
        "id": 274847755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925010
    },
    {
        "content": "<p>so maybe lets handle that first</p>",
        "id": 274847773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925017
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Delay bug in expr adjustment when check_expr is called multiple times\" <a href=\"https://github.com/rust-lang/rust/pull/94596\">rust#94596</a><ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span>, already merged</li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/pull/94516\">rust#94516</a></li>\n<li>beta-backport nominated by  <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274847780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925019
    },
    {
        "content": "<p>so the latter makes no sense to backport alone, it fixes an issue with the first backport fix</p>",
        "id": 274847838,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925045
    },
    {
        "content": "<p>oh okay</p>",
        "id": 274847858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925058
    },
    {
        "content": "<p>so they are inded in tandem</p>",
        "id": 274847865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925062
    },
    {
        "content": "<p>yes indeed</p>",
        "id": 274847879,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925068
    },
    {
        "content": "<p>Looks like half of the changes in <a href=\"https://github.com/rust-lang/rust/pull/94438\">https://github.com/rust-lang/rust/pull/94438</a> are only due to variables being renamed.</p>",
        "id": 274848100,
        "sender_full_name": "mw",
        "timestamp": 1646925153
    },
    {
        "content": "<p>I'm feeling dumb, <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span> : why were you able to remove the condition <code>if arg_count_error.is_some() { return; }</code> in <a href=\"https://github.com/rust-lang/rust/issues/94596\">#94596</a> ?</p>",
        "id": 274848114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925163
    },
    {
        "content": "<p>(so the diff looks bigger than it is)</p>",
        "id": 274848115,
        "sender_full_name": "mw",
        "timestamp": 1646925163
    },
    {
        "content": "<p>because then we can call check_expr twice without hitting a bug!() in adjustment</p>",
        "id": 274848217,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925217
    },
    {
        "content": "<p>ah okay</p>",
        "id": 274848241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925226
    },
    {
        "content": "<p>but yeah, the ICE that they fix is pretty easy to trigger imo -- it triggers potentially any time you pass N args to a fn that takes one N-tuple. There have been a handful of issues filed for it on beta I think.</p>",
        "id": 274848453,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925312
    },
    {
        "content": "<p>I guess its fine to backport this</p>",
        "id": 274848503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925342
    },
    {
        "content": "<p>So i think it's worthwhile to backport. Also, I totally forgot, we actually can just backport <a href=\"https://github.com/rust-lang/rust/issues/94596\">#94596</a> alone actually.</p>",
        "id": 274848530,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925359
    },
    {
        "content": "<p>Just ignoring the part that it reverts in the previous PR.</p>",
        "id": 274848591,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925373
    },
    {
        "content": "<p>(its worth keeping in mind that if you're making a change that is meant to be backported, sometimes you should opt to <em>not</em> do the variable renamings and whatnot)</p>",
        "id": 274848703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925429
    },
    {
        "content": "<p>Neither PR are huge so I think I'd rather backport both and have the same code between beta and nightly than to have beta in a slightly different state.</p>",
        "id": 274848740,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925449
    },
    {
        "content": "<p>yep</p>",
        "id": 274848759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925456
    },
    {
        "content": "<p>Makes sense.</p>",
        "id": 274848766,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646925459
    },
    {
        "content": "<p>okay, backport approved for both <a href=\"https://github.com/rust-lang/rust/issues/94438\">#94438</a> and <a href=\"https://github.com/rust-lang/rust/issues/94596\">#94596</a></p>",
        "id": 274848841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925485
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Do not recover from <code>Ty?</code> in macro parsing\" <a href=\"https://github.com/rust-lang/rust/pull/94593\">rust#94593</a> <ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, already merged</li>\n<li>pr fixes <a href=\"https://github.com/rust-lang/rust/issues/94510\">rust#94510</a>, follow up for <a href=\"https://github.com/rust-lang/rust/pull/92746\">rust#92746</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274848864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925500
    },
    {
        "content": "<p>I have to admit, I'm pretty lost in this diff</p>",
        "id": 274849326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925690
    },
    {
        "content": "<p>I think this is the only real behavior change <a href=\"https://github.com/rust-lang/rust/pull/94593/files#diff-1a054923fe6e121f46954f52f6660a22970818b5c8b3ef1c0f3b703eae2baef6R143\">https://github.com/rust-lang/rust/pull/94593/files#diff-1a054923fe6e121f46954f52f6660a22970818b5c8b3ef1c0f3b703eae2baef6R143</a></p>",
        "id": 274849375,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925717
    },
    {
        "content": "<p>why are there all these paths  in the control flow that were previously tracking \"is as cast\" and are now \"recover question mark\" ?</p>",
        "id": 274849470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925750
    },
    {
        "content": "<p>Most of the rest of the diff is fallout from changing the type <code>IsAsCast</code> to <code>RecoverQuestionMark</code> and the subsequent flip of <code>yes</code> =&gt; <code>no</code> and <code>no</code> =&gt; <code>yes</code></p>",
        "id": 274849482,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925756
    },
    {
        "content": "<p>hmm.</p>",
        "id": 274849537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925785
    },
    {
        "content": "<p>I'm not 100% sure but the very next line after the change is <code>if self.token == token::Question {</code> so there was already some effective relation there.</p>",
        "id": 274849650,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925834
    },
    {
        "content": "<p>oh I think I see now</p>",
        "id": 274849653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925835
    },
    {
        "content": "<p>I guess in a <code>as</code> context <code>?</code> is interpreted as part of the type name? (<code>?Sized</code>)</p>",
        "id": 274849732,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925857
    },
    {
        "content": "<p>previously, we thought the only place that we would say \"you cannot have ? here because its a type\" was after an as cast</p>",
        "id": 274849748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925866
    },
    {
        "content": "<p>oh, I hadn't considered the <code>?Sized</code> case... (but that's not a type, its a bound, right?)</p>",
        "id": 274849826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925901
    },
    {
        "content": "<p>anyway, at least now I can see <em>why</em> <code>as</code> was relevant before</p>",
        "id": 274849864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925917
    },
    {
        "content": "<p>I guess that's true yeah</p>",
        "id": 274849868,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646925920
    },
    {
        "content": "<p>okay.</p>",
        "id": 274850002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925973
    },
    {
        "content": "<p>I think we can beta backport approve this</p>",
        "id": 274850042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646925996
    },
    {
        "content": "<p>(and in this case, I think the renaming probably <em>was</em> warranted, even for a backport directed PR, because it would have been so outright misleading to leave the old name in there.)</p>",
        "id": 274850095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926024
    },
    {
        "content": "<p>next</p>",
        "id": 274850128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926043
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Downgrade <code>#[test]</code> on macro call to warning\" <a href=\"https://github.com/rust-lang/rust/pull/94624\">rust#94624</a><ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, already merged</li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/issues/94508\">rust#94508</a>, (regression discovered in crater run)</li>\n</ul>\n</li>\n</ul>",
        "id": 274850144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926055
    },
    {
        "content": "<p>how much of a risk is there here that this PR is too narrow in scope? Are there other cases besides macro-calls that have been turned into errors that should merely be warnings here?</p>",
        "id": 274850386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926152
    },
    {
        "content": "<p>This was the introduction: <a href=\"https://github.com/rust-lang/rust/pull/92959/files#diff-a281d84acb618afea7e8f2a746d8ffd4d17edea90e4017cfd2c1ae4854793adbL105-L109\">https://github.com/rust-lang/rust/pull/92959/files#diff-a281d84acb618afea7e8f2a746d8ffd4d17edea90e4017cfd2c1ae4854793adbL105-L109</a></p>",
        "id": 274850585,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1646926213
    },
    {
        "content": "<p>okay</p>",
        "id": 274850616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926232
    },
    {
        "content": "<p>So I feel pretty confident that the change only for macros is valid.</p>",
        "id": 274850620,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1646926233
    },
    {
        "content": "<p>yes, the scope seems correct now that I've seen that, thanks</p>",
        "id": 274850643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926245
    },
    {
        "content": "<p>beta backport approved</p>",
        "id": 274850674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926257
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Update LLVM submodule\" <a href=\"https://github.com/rust-lang/rust/pull/94764\">rust#94764</a><ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span></li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  for review</li>\n<li>fixes a number of issues from LLVM 14: <a href=\"https://github.com/rust-lang/rust/issues/89609\">rust#89609</a>, <a href=\"https://github.com/rust-lang/rust/issues/93923\">rust#93923</a>, <a href=\"https://github.com/rust-lang/rust/issues/94032\">rust#94032</a></li>\n<li>relevant <a href=\"#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/NewPM.20compile-time.20issues/near/274264531\">Zulip topic</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274850703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926273
    },
    {
        "content": "<p>hmm.</p>",
        "id": 274851084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926413
    },
    {
        "content": "<p>I always get antsy with llvm backports, but there are a couple miscompilations fixed with this</p>",
        "id": 274851103,
        "sender_full_name": "Jack Huey",
        "timestamp": 1646926420
    },
    {
        "content": "<p>right, I'm sitting here wondering, what's better: Individual backports of specific commits that fix those known bugs, or directly updating the LLVM submodule</p>",
        "id": 274851203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926455
    },
    {
        "content": "<p>I guess we're currently on an LLVM 14 release candidate and this syncs us up to the latest RC?</p>",
        "id": 274851284,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646926498
    },
    {
        "content": "<p>or maybe I'm confused about teh state of the update: Is it pulling in a bunch of stuff, or just a narrow targetted set of backport commits... let me see...</p>",
        "id": 274851287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926499
    },
    {
        "content": "<p>It looks to me like it's syncing with some upstream branch.</p>",
        "id": 274851338,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646926516
    },
    {
        "content": "<p>For context, beta currently has LLVM 14 ~rc1, and this updates to LLVM 14 ~rc3</p>",
        "id": 274851427,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1646926549
    },
    {
        "content": "<p>and we have about a month before the release</p>",
        "id": 274851518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926566
    },
    {
        "content": "<p>so, options as I see them: 1. Say \"this is too risky, we're leaving everything as it is.\", or 2. \"this is too risky, lets do tailored backports\", or 3. \"lets go for it, we've got a month and if something comes up, we can ... roll it back\" ?</p>",
        "id": 274851702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926643
    },
    {
        "content": "<p>Are we going to be doing crater runs this time?</p>",
        "id": 274851718,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1646926647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if we land this LLVM upgrade, is it reasonable for us to plan a crater run during the remaining beta cycle? It seems reasonable to me.</p>",
        "id": 274851863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926690
    },
    {
        "content": "<p>Yes, we can definitely kick one (or more) off.</p>",
        "id": 274851897,
        "sender_full_name": "simulacrum",
        "timestamp": 1646926701
    },
    {
        "content": "<p>okay. I'm inclined to just go for this then. Its probably the simplest option that makes forward progress w.r.t. those issues</p>",
        "id": 274851965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926733
    },
    {
        "content": "<p>Are we anticipating upgrading beta again to a later LLVM 14 RC/final release or is RC 3 the final stop and we may just consider targeted backports?</p>",
        "id": 274851982,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646926740
    },
    {
        "content": "<p>That's a good Q. <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> what is the LLVM release schedule like?</p>",
        "id": 274852049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926768
    },
    {
        "content": "<p>i.e. would we be expecting more RC's during the next month that we might want to incorporate?</p>",
        "id": 274852118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926798
    },
    {
        "content": "<p>rc3 is expected to be the last release candidate. I don't think we need to be on the final release unless there are additional fixes that are actually relevant to us.</p>",
        "id": 274852212,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1646926827
    },
    {
        "content": "<p>okay. <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you agree that we should beta backport approve this then?</p>",
        "id": 274852315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926860
    },
    {
        "content": "<p>Yes, <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 274852369,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646926875
    },
    {
        "content": "<p>backport approved</p>",
        "id": 274852384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926881
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 274852400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926886
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 274852413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926891
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 274852424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926898
    },
    {
        "content": "<ul>\n<li>\"Allow struct and enum to contain inner attrs\" <a href=\"https://github.com/rust-lang/rust/pull/84414\">rust#84414</a><ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> </li>\n<li>PR discussion progress seemed to stop <a href=\"https://github.com/rust-lang/rust/pull/84414#issuecomment-892884864\">last year</a></li>\n<li>is this waiting on <code>T-lang</code>?</li>\n</ul>\n</li>\n</ul>",
        "id": 274852450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926906
    },
    {
        "content": "<p>I think this should be waiting on T-lang</p>",
        "id": 274852542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926936
    },
    {
        "content": "<p>I added a nomination label for T-lang</p>",
        "id": 274852594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926958
    },
    {
        "content": "<p>lets move along</p>",
        "id": 274852601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926964
    },
    {
        "content": "<ul>\n<li>\"Make specifying repr optional for fieldless enums\" <a href=\"https://github.com/rust-lang/rust/pull/88203\">rust#88203</a><ul>\n<li>Felix mentioned this PR for <a href=\"https://github.com/rust-lang/lang-team/issues/134\">a t-lang mtg proposal</a></li>\n<li>also waiting on <code>t-lang</code>?</li>\n</ul>\n</li>\n</ul>",
        "id": 274852621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926971
    },
    {
        "content": "<p>yes, this is also waiting on T-lang I think</p>",
        "id": 274852646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926981
    },
    {
        "content": "<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> nominated for T-compiler discussion </li>\n<li>PR is pending FCP request</li>\n</ul>\n</li>\n</ul>",
        "id": 274852660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646926989
    },
    {
        "content": "<p>This has a number of checkboxes its waiting on from T-compiler</p>",
        "id": 274852734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927027
    },
    {
        "content": "<p>there has been some recent comment activity from people like <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 274852825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927051
    },
    {
        "content": "<p>so I think its making some amount of forward progress</p>",
        "id": 274852851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927062
    },
    {
        "content": "<p>not stalled completely</p>",
        "id": 274852860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927065
    },
    {
        "content": "<p>ok so it's enough for the nomination <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> also, right?</p>",
        "id": 274852915,
        "sender_full_name": "apiraino",
        "timestamp": 1646927088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> I don't understand your question?</p>",
        "id": 274852951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927102
    },
    {
        "content": "<p>Yeah, I think we can remove the nomination at this point.</p>",
        "id": 274852966,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646927107
    },
    {
        "content": "<p>oh oh,yes I think so.</p>",
        "id": 274852984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927113
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 274853017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927126
    },
    {
        "content": "<p>If <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> is concerned that it isn't moving forward, they can nominate again for discussion in a future meeting.</p>",
        "id": 274853032,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646927133
    },
    {
        "content": "<p>(lets try to get through these quickly, there's a lot of nominated PR's this week)</p>",
        "id": 274853064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274853032\">said</a>:</p>\n<blockquote>\n<p>If <span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> is concerned that it isn't moving forward, they can nominate again for discussion in a future meeting.</p>\n</blockquote>\n<p>(and if it warrants a design meeting, then they can propose that option too. But I haven't seen evidence that it needs a design meeting...)</p>",
        "id": 274853149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927172
    },
    {
        "content": "<ul>\n<li>\"Make AST-&gt;HIR lowering incremental\" <a href=\"https://github.com/rust-lang/rust/pull/88186\">rust#88186</a> (last review activity: 6 months ago)<ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> pushed changes and resolved conflicts</li>\n<li>cc: assignee <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274853168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927184
    },
    {
        "content": "<p>My impression was that this is blocked on other PRs</p>",
        "id": 274853283,
        "sender_full_name": "mw",
        "timestamp": 1646927249
    },
    {
        "content": "<p>is this blocked on getting the performance numbers \"good enough\" ?</p>",
        "id": 274853284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927249
    },
    {
        "content": "<p>one of the more recent discussions about this is in <a href=\"https://github.com/rust-lang/rust/issues/90204\">#90204</a> if I'm not wrong</p>",
        "id": 274853326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1646927267
    },
    {
        "content": "<p>oh, indeed, there's a summary</p>",
        "id": 274853332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927269
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/90204\">#90204</a> is the one remaining its blocked on, okay</p>",
        "id": 274853358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927281
    },
    {
        "content": "<p>but what is that waiting on?</p>",
        "id": 274853465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927307
    },
    {
        "content": "<p>well anyway lets keep moving</p>",
        "id": 274853477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927312
    },
    {
        "content": "<p>I reviewed <a href=\"https://github.com/rust-lang/rust/issues/90204\">#90204</a> and approved it a while ago, iirc</p>",
        "id": 274853549,
        "sender_full_name": "mw",
        "timestamp": 1646927344
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"124287\">@mw</span> if you can follow-up on whether PR <a href=\"https://github.com/rust-lang/rust/issues/90204\">#90204</a> is blocked, I'd appreciate it.)</p>",
        "id": 274853575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927355
    },
    {
        "content": "<p>ok</p>",
        "id": 274853595,
        "sender_full_name": "mw",
        "timestamp": 1646927363
    },
    {
        "content": "<ul>\n<li>\"RFC-2841: add codegen flag export symbols from executable\" <a href=\"https://github.com/rust-lang/rust/pull/85673\">rust#85673</a> (last review activity: 6 months ago)]<ul>\n<li>pr seems to be ready for review (latest comments from last year)</li>\n<li>review assigned to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274853613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927368
    },
    {
        "content": "<p>how did I get review for that...</p>",
        "id": 274853773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646927415
    },
    {
        "content": "<p>I cannot tell what this is blocked on either. <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> can you find out ?</p>",
        "id": 274853777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274853773\">said</a>:</p>\n<blockquote>\n<p>how did I get review for that...</p>\n</blockquote>\n<p>not sure but you definitely engaged on that PR. :)</p>",
        "id": 274853820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927440
    },
    {
        "content": "<p>yeah, I see that I asked for tests</p>",
        "id": 274853836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646927448
    },
    {
        "content": "<p>looks like it has some now</p>",
        "id": 274853851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646927455
    },
    {
        "content": "<ul>\n<li>\"Allow use of AddressSanitizer on Windows by linking to existing libraries\" <a href=\"https://github.com/rust-lang/rust/pull/89369\">rust#89369</a> (last review activity: 4 months ago)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> </li>\n<li>latest discussion in T-compiler led to the conclusion that a Windows / ASAN expert was better suited to have a look here</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89369#issuecomment-1003001945\">github comment</a> and (<a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-28.20.2354818/near/259397383\">zulip discussion</a>)</li>\n<li>checking if there's anything new since then</li>\n</ul>\n</li>\n</ul>",
        "id": 274853864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , I suspect you two are best situated to find a Windows+ASAN expert to help here ?</p>",
        "id": 274854054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927524
    },
    {
        "content": "<ul>\n<li>\"Improve <code>unsafe</code> diagnostic\" <a href=\"https://github.com/rust-lang/rust/pull/91133\">rust#91133</a> (last review activity: 3 months ago)<ul>\n<li>cc: assigned reviewer <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274854078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927538
    },
    {
        "content": "<p>This is in my radar.</p>",
        "id": 274854131,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1646927561
    },
    {
        "content": "<ul>\n<li>\"Change several HashMaps to IndexMap to improve incremental hashing performance\" <a href=\"https://github.com/rust-lang/rust/pull/90253\">rust#90253</a> (last review activity: 2 months ago)<ul>\n<li>author replied to comments, pr now has updated perf results</li>\n<li>cc: assigned reviewer <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span></li>\n</ul>\n</li>\n</ul>",
        "id": 274854200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927591
    },
    {
        "content": "<p>huh</p>",
        "id": 274854381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927649
    },
    {
        "content": "<p>reading <a href=\"https://github.com/rust-lang/rust/pull/90253#issuecomment-952127157\">comments</a></p>",
        "id": 274854407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is this PR now believed to be <em>correct</em> with respect to incr-comp ?</p>",
        "id": 274854492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927695
    },
    {
        "content": "<p>or do we need a design meeting or something?</p>",
        "id": 274854518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927706
    },
    {
        "content": "<p>Yes, I'd even say it is a correctness fix</p>",
        "id": 274854537,
        "sender_full_name": "mw",
        "timestamp": 1646927714
    },
    {
        "content": "<p>okay. It looks like it would be really great to try to land this</p>",
        "id": 274854581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927733
    },
    {
        "content": "<p>(I'm a little surprised it doesn't help more than clap-rs ...)</p>",
        "id": 274854697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927765
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3A\nT-compiler+label%3AP-high\">67 T-compiler P-high issues</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">47 of those are unassigned</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 1 P-medium, 2 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regressi\non-from-stable-to-stable\">1 P-critical, 43 P-high, 83 P-medium, 11 P-low regression-from-stabl\ne-to-stable</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274854720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927775
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 274854735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927782
    },
    {
        "content": "<ul>\n<li>\"Binary crashes when statically linked with LTO turned on\" <a href=\"https://github.com/rust-lang/rust/issues/94564\">rust#94564</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"407656\">@Hans Kratz</span> suggested maximum alert since LTO and static linking seems to be broken (zulip <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2394564.20Binary.20crashes.20when.20statically.20linked.20with.20LTO.20turne.E2.80.A6\">topic</a>)</li>\n<li>provides bisection pointing to <code>nightly-2021-02-14</code>. (see <a href=\"https://github.com/rust-lang/rust/issues/94564#issuecomment-1059915365\">comment</a>).</li>\n</ul>\n</li>\n</ul>",
        "id": 274854753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927792
    },
    {
        "content": "<p>I'll take this</p>",
        "id": 274854860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927845
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 274854894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927860
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 274854908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927867
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-03-09.md\">triage logs for 2022-03-09</a></p>\n</blockquote>\n<p>A pretty smooth week. All three regressions were small, and two were isolated to rustdoc alone.</p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=f0c4da49983aa699f715caf681e3154b445fb60b&amp;end=10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287&amp;absolute=false&amp;stat=instructions%3Au\">f0c4da49983aa699f715caf681e3154b445fb60b..10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287</a></p>\n<p>3 Regressions, 3 Improvements, 1 Mixed; 2 of them in rollups<br>\n30 Untriaged Pull Requests<br>\n53 comparisons made in total</p>",
        "id": 274854927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927876
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/pull/94541\">#94541</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 1.5%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=8769f4ef2fe1efddd1f072485f97f568e7328f79&amp;end=2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a&amp;stat=instructions:u\">instruction counts</a>: 3.9% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>After looking at the performance data, it seems like the regressions to <code>deeply-nested-async</code> are isolated to some <a href=\"https://perf.rust-lang.org/detailed-query.html?sort_idx=-11&amp;commit=2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a&amp;base_commit=8769f4ef2fe1efddd1f072485f97f568e7328f79&amp;benchmark=deeply-nested-async-check&amp;scenario=full\">slowdown in <code>check_mod_privacy</code></a>.</li>\n<li>But AFAICT nothing in this rollup should have affected <code>check_mod_privacy</code>.</li>\n<li>Chalking this up to optimization noise; marked as triaged.</li>\n</ul>\n<p>Support GATs in Rustdoc <a href=\"https://github.com/rust-lang/rust/pull/94009\">#94009</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 0.8%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=40d3040ae19b8c43c0027bc6d3e9805e5ee5e0ee&amp;end=6d7684101a51f1c375ec84aef5d2fbdeb214bbc2&amp;stat=instructions:u\">instruction counts</a>: 1.1% on <code>full</code> builds of <code>ctfe-stress-4 doc</code></li>\n<li>Already marked as triaged by rustdoc team; this change makes rustdoc track more data, which inevitably leads to perf regressions.</li>\n</ul>\n<p>rustdoc: Stop textually replacing <code>Self</code> in doc links before resolving them <a href=\"https://github.com/rust-lang/rust/pull/93805\">#93805</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 0.3%</li>\n<li>Arithmetic mean of all relevant changes: 0.3%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=0cbef1c6a7f4ee33cd41d91778544c5399f10f39&amp;end=1661e4c7e0e68b4297aec095064d80566d4ea2b1&amp;stat=instructions:u\">instruction counts</a>: 1.0% on <code>full</code> builds of <code>serde doc</code></li>\n<li>rustdoc team did not expect a regression here.</li>\n<li>it looks like collect-intra-doc-links got slower. not clear why, though.</li>\n<li>slowdown was solely observed in <code>serde doc</code>. posted some theories and marked as triaged.</li>\n</ul>",
        "id": 274854963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927888
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>remove obligation dedup from <code>impl_or_trait_obligations</code> <a href=\"https://github.com/rust-lang/rust/pull/84944\">#84944</a></li>\n<li>Introduce <code>ConstAllocation</code>. <a href=\"https://github.com/rust-lang/rust/pull/94597\">#94597</a></li>\n<li>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/pull/94761\">#94761</a></li>\n</ul>",
        "id": 274854979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927894
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Reopen 91719 <a href=\"https://github.com/rust-lang/rust/pull/94570\">#94570</a></p>\n<ul>\n<li>Arithmetic mean of relevant regressions: 0.5%</li>\n<li>Arithmetic mean of relevant improvements: -1.4%</li>\n<li>Arithmetic mean of all relevant changes: -1.0%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=047f9c4bc4e26df4f54c3c76af3e963782ed05e4&amp;end=b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f&amp;stat=instructions:u\">instruction counts</a>: -6.9% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=047f9c4bc4e26df4f54c3c76af3e963782ed05e4&amp;end=b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f&amp;stat=instructions:u\">instruction counts</a>: 1.3% on <code>incr-full</code> builds of <code>piston-image opt</code></li>\n<li>Already <a href=\"https://github.com/rust-lang/rust/pull/94570#issuecomment-1058879131\">triaged by workingjubilee</a> when they r+'ed it.</li>\n</ul>",
        "id": 274854999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927903
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>No nags requiring follow up</p>",
        "id": 274855012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927909
    },
    {
        "content": "<p>okay, four nominated issues and two minutes left <em>sigh</em></p>",
        "id": 274855062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927930
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 274855077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927935
    },
    {
        "content": "<ul>\n<li><code>no_mangle</code>/<code>used</code> static is only present in output when in reachable module\" <a href=\"https://github.com/rust-lang/rust/issues/47384\">rust#47384</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"417924\">@inquisitivecrystal</span>  suggested nomination (zulip <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2347384.20.60no_mangle.60.2F.60used.60.20static.20is.20only.20present.20in.20output.20.E2.80.A6/near/274092228\">comment</a>)</li>\n<li>pointing to <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  <a href=\"https://github.com/rust-lang/rust/issues/47384#issuecomment-1032974536\">github comment</a></li>\n<li>the Wg-prio zulip topic <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2347384.20.60no_mangle.60.2F.60used.60.20static.20is.20only.20present.20in.20output.20.E2.80.A6\">has more context</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274855107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646927949
    },
    {
        "content": "<p>we cannot resolve this in mere minutes I don't think</p>",
        "id": 274855291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928016
    },
    {
        "content": "<ul>\n<li>\"rustc hangs and takes increasing amounts of memory when compiling <code>json</code> crate as dependency\" <a href=\"https://github.com/rust-lang/rust/issues/89647\">rust#89647</a> <ul>\n<li><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span>  self-assigned issue</li>\n<li>... and just closed it now as fixed by <a href=\"https://github.com/rust-lang/rust/pull/94764\">rust#94764</a></li>\n</ul>\n</li>\n</ul>",
        "id": 274855408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928047
    },
    {
        "content": "<p>was closed, okay</p>",
        "id": 274855412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928050
    },
    {
        "content": "<ul>\n<li>\"rustc_apfloat: Double::mul_add_r panic with specific values\" <a href=\"https://github.com/rust-lang/rust/pull/93225\">rust#93225</a> <ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> for discussion (<a href=\"https://github.com/rust-lang/rust/pull/93225#issuecomment-1059211687\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 274855441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928059
    },
    {
        "content": "<p>This (<a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a>) was nominated on 1-22 and much has happened since then. I think we should consider clearing the nomination flag and asking the person who tagged if they feel there is more that needs to be discussed.</p>",
        "id": 274855448,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646928063
    },
    {
        "content": "<p>ok, I'll update the issue</p>",
        "id": 274855530,
        "sender_full_name": "apiraino",
        "timestamp": 1646928100
    },
    {
        "content": "<p>I nominated because <code>rustc_apfloat</code> seems to be in limbo due to licensing concerns and I have no idea what to do with this PR.</p>",
        "id": 274855541,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646928105
    },
    {
        "content": "<p>Wesley, lets you and I talk about the licensing issues in our 1:1 later today, okay?</p>",
        "id": 274855717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928158
    },
    {
        "content": "<p>Sounds good</p>",
        "id": 274855735,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1646928164
    },
    {
        "content": "<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> nominated for T-compiler discussion </li>\n<li>PR is pending FCP request</li>\n<li>(discussed in present meeting)</li>\n</ul>\n</li>\n</ul>",
        "id": 274855748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928170
    },
    {
        "content": "<p>which we already touched on</p>",
        "id": 274855789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928191
    },
    {
        "content": "<p>so hey we're okayu!</p>",
        "id": 274855825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928209
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 274855847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928219
    },
    {
        "content": "<p>okay then! Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 274855943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928248
    },
    {
        "content": "<p>sorry it was a bit rushed this week.</p>",
        "id": 274855954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646928256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274855717\">said</a>:</p>\n<blockquote>\n<p>Wesley, lets you and I talk about the licensing issues in our 1:1 later today, okay?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> in case <a href=\"https://github.com/rust-lang/rust/issues/93225\">#93225</a> was discussed in a follow-up tothis meeting, we can remove the <code>I-compiler-nominated</code> and drop a new comment (if any). Or leave it as it is if the discussion is still pending (will be automatically in tomorrow's agenda)</p>",
        "id": 275565089,
        "sender_full_name": "apiraino",
        "timestamp": 1647458701
    },
    {
        "content": "<p>I think we can remove the nomination label and take it off the agenda at this time.</p>",
        "id": 275565138,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1647458728
    }
]