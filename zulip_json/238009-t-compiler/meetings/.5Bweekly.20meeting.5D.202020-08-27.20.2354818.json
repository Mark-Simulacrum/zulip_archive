[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-08-27T14:00:00Z\">2020-08-27T14:00:00+00:00</time></p>",
        "id": 208146933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475169
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 208146972,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475186
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/gkjQsiZKSGKZUQBIt_pHCA?view\">meeting agenda</a></p>",
        "id": 208146999,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475198
    },
    {
        "content": "<p>Should probably use the new Zulip thing btw, <time datetime=\"2020-08-27T14:00:00Z\">2020-08-27T10:00:00-04:00</time></p>",
        "id": 208147042,
        "sender_full_name": "simulacrum",
        "timestamp": 1598475225
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> and <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span></p>",
        "id": 208147135,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span>?</p>",
        "id": 208147818,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and/or <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>?</p>",
        "id": 208147897,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475585
    },
    {
        "content": "<p>as always, feel free to nominate something you want to discuss during tomorrow's meeting</p>",
        "id": 208148181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598475706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> can't edit the hackmd, but for diagnostics:</p>\n<ul>\n<li>More gracefully handle patterns used in an incorrect manner (all combinations of struct variant/enum variant/unit variant that do not correspond to their declaration) with structured suggestions and pointing at definitions</li>\n<li>From <a href=\"http://fasterthanli.me\">fasterthanli.me</a> (amos)'s last two articles we've gotten 3 diagnostics improvements<ul>\n<li>cleaning up parser errors (regression from a refactor some time back, reduced amount of parse errors inside struct definitions significantly)</li>\n<li>structured suggestions for methods missing <code>self</code> receiver</li>\n<li>more structured suggestions for boxed trait objects instead of impl Trait on non-coerceable tail expressions</li>\n</ul>\n</li>\n<li>Fix parser regression: <code>{block} &amp;&amp;true</code> is a valid tail expression in an <code>fn foo() -&gt; &amp;&amp;bool</code>. This was introduced a couple of releases back, will be fixed in 1.47.</li>\n<li>We detect <code>===</code>/<code>!==</code> and <code>for foo of bar</code> (JS syntax) and suggest correct syntax</li>\n<li>Various clean ups, rewordings, fixing of ICEs and silencing of redundant errors</li>\n<li>Further various cleanups of <code>::</code> -&gt; <code>:</code> typos (continue to hate the type ascription syntax, but I'll cope)</li>\n<li>Removal of type path string comparisons from diagnostics code and instead use \"diagnostic_item\"s.</li>\n<li>Further work on lifetime errors caused by implicit <code>'static</code> lifetimes with targeted diagnostics</li>\n<li>Tweak errors on arguments caused by <code>Sized</code> requirements and suggest to borrow</li>\n<li>Detect <code>foo.collect::Vec&lt;_&gt;();</code> and suggest <code>foo.collect::&lt;Vec&lt;_&gt;&gt;();</code></li>\n<li>Provide suggestions for some moved value errors</li>\n</ul>\n<p>Changes requiring to be signed off (or closed)</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74130\">https://github.com/rust-lang/rust/pull/74130</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/71481\">https://github.com/rust-lang/rust/pull/71481</a></li>\n</ul>\n<p>Feeling fancy and wanting to highlight still unmerged change that I'm proud of:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75931\">https://github.com/rust-lang/rust/pull/75931</a> Suggest <code>if let x = y</code> when encountering <code>if x = y</code></li>\n</ul>",
        "id": 208180486,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598507667
    },
    {
        "content": "<p>^ added to the agenda <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 208189623,
        "sender_full_name": "apiraino",
        "timestamp": 1598516577
    },
    {
        "content": "<p>I also added</p>\n<p>Kind of major change announcement:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75138\">rust#75138</a> moves a lot of the error handling logic \"out of the happy path\"<br>\n  by using structs to describe the error situation and having a scheme for rendering said structs.</li>\n</ul>\n<p>to the diagnostics section of the agenda</p>",
        "id": 208204856,
        "sender_full_name": "oli",
        "timestamp": 1598528081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> I added you to the hackmd team so you can edit next time.</p>",
        "id": 208214554,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598534121
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in 42 minutes, at <time datetime=\"2020-08-27T14:00:00Z\">2020-08-27T14:00:00+00:00</time></p>",
        "id": 208215056,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598534367
    },
    {
        "content": "<p><a href=\"https://hackmd.io/gkjQsiZKSGKZUQBIt_pHCA?view\">Check out the meeting agenda</a></p>",
        "id": 208215078,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598534387
    },
    {
        "content": "<p>I'm still reviewing some last details of it</p>",
        "id": 208215093,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598534397
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 208220752,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598537092
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 208220769,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598537104
    },
    {
        "content": "<p>oh <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 208220848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537156
    },
    {
        "content": "<p>sorry had to take care of a few things and time got away from me</p>",
        "id": 208220901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537164
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 208220930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537183
    },
    {
        "content": "<p>(we'll count the ones above too)</p>",
        "id": 208220952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537193
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 208220958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537201
    },
    {
        "content": "<ul>\n<li>Rust 1.46 is being released today! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 208220978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537215
    },
    {
        "content": "<ul>\n<li>Crater run for 1.46 <a href=\"https://github.com/rust-lang/rust/issues/75142\">rust#75142</a> came back clear. In particular we wanted to check if <a href=\"https://github.com/rust-lang/rust/issues/75494\">rust#75494</a> was ok.</li>\n</ul>",
        "id": 208220988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537223
    },
    {
        "content": "<ul>\n<li>Tomorrow (friday 28th) we have <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">our planning meeting</a></li>\n</ul>",
        "id": 208221009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537233
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add StatementKind::Call to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/348\">compiler-team#348</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208221032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537248
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Uplift <code>temporary-cstring-as-ptr</code> lint from <code>clippy</code> into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/346\">compiler-team#346</a></li>\n<li>\"Uplift <code>drop-bounds</code> lint from clippy into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208221062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537263
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 208221131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537284
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Auto-generate lint documentation\" <a href=\"https://github.com/rust-lang/compiler-team/issues/349\">compiler-team#349</a></li>\n<li>\"Don't build tools by default with <code>x.py build</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/351\">compiler-team#351</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208221144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537292
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Move the compiler to a new <code>compiler/</code> directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">compiler-team#336</a></li>\n<li>\"Form t-compiler/wg-parser-library\" <a href=\"https://github.com/rust-lang/compiler-team/issues/338\">compiler-team#338</a></li>\n<li>\"Stabilise <code>link-self-contained</code> option\" <a href=\"https://github.com/rust-lang/compiler-team/issues/343\">compiler-team#343</a></li>\n<li>\"Moving <code>#[cfg(test)]</code> modules into a separate files to save recompiling the <code>std</code> crate\" <a href=\"https://github.com/rust-lang/compiler-team/issues/344\">compiler-team#344</a></li>\n<li>\"Add a lint for attempting to mutate a <code>const</code> item\" <a href=\"https://github.com/rust-lang/compiler-team/issues/345\">compiler-team#345</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208221164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537303
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"stabilize ptr_offset_from\" <a href=\"https://github.com/rust-lang/rust/pull/74238\">rust#74238</a></li>\n<li>\"Stabilize Range[Inclusive]::is_empty\" <a href=\"https://github.com/rust-lang/rust/pull/75132\">rust#75132</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208221192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537315
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 208221210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537327
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> checkin by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 208221250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537348
    },
    {
        "content": "<blockquote>\n<ul>\n<li>More gracefully handle patterns used in an incorrect manner (all combinations of struct variant/enum variant/unit variant that do not correspond to their declaration) with structured suggestions and pointing at definitions</li>\n<li>From <a href=\"http://fasterthanli.me\">fasterthanli.me</a> (amos)'s last two articles we've gotten 3 diagnostics improvements<br>\ncleaning up parser errors (regression from a refactor some time back, reduced amount of parse errors inside struct definitions significantly)<ul>\n<li>structured suggestions for methods missing <code>self</code> receiver</li>\n<li>more structured suggestions for boxed trait objects instead of impl Trait on non-coerceable tail expressions</li>\n</ul>\n</li>\n<li>Fix parser regression: <code>{block} &amp;&amp;true</code> is a valid tail expression in an <code>fn foo() -&gt; &amp;&amp;bool</code>. This was introduced a couple of releases back, will be fixed in 1.47.</li>\n<li>We detect <code>===/!==</code> and <code>for foo of bar</code> (JS syntax) and suggest correct syntax</li>\n<li>Various clean ups, rewordings, fixing of ICEs and silencing of redundant errors</li>\n<li>Further various cleanups of <code>::</code> -&gt; <code>:</code> typos (continue to hate the type ascription syntax, but I'll cope)</li>\n<li>Removal of type path string comparisons from diagnostics code and instead use \"diagnostic_item\"s.</li>\n<li>Further work on lifetime errors caused by implicit<code>'static</code> lifetimes with targeted diagnostics</li>\n<li>Tweak errors on arguments caused by Sized requirements and suggest to borrow</li>\n<li>Detect <code>foo.collect::Vec&lt;_&gt;();</code> and suggest <code>foo.collect::&lt;Vec&lt;_&gt;&gt;();</code></li>\n<li>Provide suggestions for some moved value errors</li>\n</ul>\n</blockquote>",
        "id": 208221272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537362
    },
    {
        "content": "<blockquote>\n<p>Changes requiring to be signed off (or closed)</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74130\">rust#74130</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/71481\">rust#71481</a></li>\n</ul>\n<p>Feeling fancy and wanting to highlight still unmerged change that I'm proud of:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75931\">rust#75931</a> Suggest <code>if let x = y</code> when encountering <code>if x = y</code></li>\n</ul>\n</blockquote>",
        "id": 208221346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537401
    },
    {
        "content": "<blockquote>\n<p>Kind of major change announcement:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75138\">rust#75138</a> moves a lot of the error handling logic \"out of the happy path\"<br>\n  by using structs to describe the error situation and having a scheme for rendering said structs.</li>\n</ul>\n</blockquote>",
        "id": 208221394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537411
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></p>\n<blockquote>\n<p>Work on the compiler has, I believe, been slow lately. There has been progress towards an RFC for the <code>Stream</code> trait and experiments for a lint around values that should be live over yields. -- nikomatsakis, who may be a bit behind</p>\n</blockquote>",
        "id": 208221426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537426
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 208221469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537451
    },
    {
        "content": "<ul>\n<li>\"Account for async functions when suggesting new named lifetime\" <a href=\"https://github.com/rust-lang/rust/pull/75867\">rust#75867</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, reviewed by <span class=\"user-mention\" data-user-id=\"225422\">@pickfire</span></li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/75850\">rust#75850</a></li>\n<li>Nominating for beta backport simply because it (the bug) is already in stable, but there's no harm on letting this ride the train.</li>\n<li>Assigned P-low</li>\n</ul>\n</li>\n</ul>",
        "id": 208221489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537461
    },
    {
        "content": "<p>What do we mean by \"already in stable\"? Did this get backported into stable?</p>",
        "id": 208221562,
        "sender_full_name": "simulacrum",
        "timestamp": 1598537500
    },
    {
        "content": "<p>I was just going to ask that</p>",
        "id": 208221590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537514
    },
    {
        "content": "<p>The bad diagnostic is visible in stable</p>",
        "id": 208221600,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537520
    },
    {
        "content": "<p>oh oh</p>",
        "id": 208221646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537525
    },
    {
        "content": "<p>was the beta cut already I guess?</p>",
        "id": 208221692,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598537546
    },
    {
        "content": "<p>beta was cut tuesday</p>",
        "id": 208221706,
        "sender_full_name": "simulacrum",
        "timestamp": 1598537551
    },
    {
        "content": "<p>Also, I think it will be cut in this beta</p>",
        "id": 208221710,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537553
    },
    {
        "content": "<p>So.the point is moot</p>",
        "id": 208221727,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537560
    },
    {
        "content": "<p><span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 208221737,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537563
    },
    {
        "content": "<p>(Also: A bug already in stable is usually a justification for <em>not</em> nominating or at least not beta backporting...)</p>",
        "id": 208221748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537567
    },
    {
        "content": "<p>backporting now is almost like if this was merged since a couple of days ago :)</p>",
        "id": 208221750,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598537567
    },
    {
        "content": "<p>The diagnostic does look pretty bad:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0261]: use of undeclared lifetime name `&#39;somelifetime`\n --&gt; src/lib.rs:3:31\n  |\n3 |     async fn buggy(&amp;self) -&gt; &amp;&#39;somelifetime str {\n  |                               ^^^^^^^^^^^^^ undeclared lifetime\n  |\nhelp: consider introducing lifetime `&#39;somelifetime` here\n  |\n2 | impl&lt;&#39;somelifetime&gt; Bug {\n  |     ^^^^^^^^^^^^^^^\nhelp: consider introducing lifetime `&#39;somelifetime` here\n  |\n3 |     async fn buggy(&#39;somelifetime, &amp;self) -&gt; &amp;&#39;somelifetime str {\n  |                    ^^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 208221831,
        "sender_full_name": "simulacrum",
        "timestamp": 1598537602
    },
    {
        "content": "<p>eh, I'm ambivalent</p>",
        "id": 208221965,
        "sender_full_name": "simulacrum",
        "timestamp": 1598537654
    },
    {
        "content": "<p>So, to clarify, as of today, the bad diagnostic is happening in <code>beta</code> and this PR resolves that?</p>",
        "id": 208221967,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598537656
    },
    {
        "content": "<p>I think this is now included in beta, it was cut immediately after</p>",
        "id": 208222085,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537716
    },
    {
        "content": "<p>Otherwise yes</p>",
        "id": 208222122,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537738
    },
    {
        "content": "<p>By \"this\"</p>",
        "id": 208222125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537740
    },
    {
        "content": "<p>you cannot mean the PR</p>",
        "id": 208222132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537743
    },
    {
        "content": "<p>since that hasn't landed on nightly yet</p>",
        "id": 208222140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537748
    },
    {
        "content": "<p>right?</p>",
        "id": 208222207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537766
    },
    {
        "content": "<p>Sorry my mistake (half asleep)</p>",
        "id": 208222222,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537773
    },
    {
        "content": "<p>Correct</p>",
        "id": 208222237,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537779
    },
    {
        "content": "<p>Okay.</p>",
        "id": 208222264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537788
    },
    {
        "content": "<p>the fix looks quite small in diff, anyway</p>",
        "id": 208222269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598537792
    },
    {
        "content": "<p>This error is still in beta, this pr would fix it</p>",
        "id": 208222273,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537794
    },
    {
        "content": "<p>(misread open date with merge date)</p>",
        "id": 208222306,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1598537810
    },
    {
        "content": "<p>Got it, thanks!</p>",
        "id": 208222308,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598537810
    },
    {
        "content": "<p>Normally I'd let P-low things ride the trains</p>",
        "id": 208222318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537813
    },
    {
        "content": "<p>but this looks so incredibly low risk that I'm willing to beta-approve</p>",
        "id": 208222332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537822
    },
    {
        "content": "<p>anyone object?</p>",
        "id": 208222349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537826
    },
    {
        "content": "<p>okay, beta-approved</p>",
        "id": 208222386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537844
    },
    {
        "content": "<p>:ditto: I think there's some value in relying on the status quo of the process. (This was in response in P-low)</p>",
        "id": 208222391,
        "sender_full_name": "nagisa",
        "timestamp": 1598537846
    },
    {
        "content": "<p>question, is it really <code>P-low</code> this issue?</p>",
        "id": 208222581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1598537916
    },
    {
        "content": "<p>/me 's mind is circling around \"the status quo of the process\"</p>",
        "id": 208222587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537919
    },
    {
        "content": "<p>I think the issue is P-low in terms of prioritizing a fix</p>",
        "id": 208222616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537938
    },
    {
        "content": "<p>but now that a fix is available, and seems trivial, I am inclined to beta-approve. At same time, it hasn't yet landed on nightly</p>",
        "id": 208222674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537966
    },
    {
        "content": "<p>we have 4 <span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span> so I think we have a decision.</p>",
        "id": 208222736,
        "sender_full_name": "nagisa",
        "timestamp": 1598537998
    },
    {
        "content": "<p>anyway <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> should I actually interpret your response as an objection ?</p>",
        "id": 208222742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598537999
    },
    {
        "content": "<p>okay</p>",
        "id": 208222747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538001
    },
    {
        "content": "<ul>\n<li>\"Fix another clashing_extern_declarations false positive.\" <a href=\"https://github.com/rust-lang/rust/pull/75885\">rust#75885</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"255801\">@jumbatm</span>, reviewed by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </li>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/75739\">rust#75739</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75885#issuecomment-679270849\">Backport reasons</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208222837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538025
    },
    {
        "content": "<p>I’m of an opinion that we should backport a lint level downgrade instead.</p>",
        "id": 208222967,
        "sender_full_name": "nagisa",
        "timestamp": 1598538076
    },
    {
        "content": "<p>I am generally <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> on that as well.</p>",
        "id": 208223016,
        "sender_full_name": "simulacrum",
        "timestamp": 1598538098
    },
    {
        "content": "<p>indeed, I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> proposed that in the linked \"backport reasons\" ?</p>",
        "id": 208223021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538102
    },
    {
        "content": "<p>that sounds prudent to me</p>",
        "id": 208223046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538112
    },
    {
        "content": "<p>Note: similarly this hasn’t even landed to nightly yet either.</p>",
        "id": 208223084,
        "sender_full_name": "nagisa",
        "timestamp": 1598538122
    },
    {
        "content": "<p>yep</p>",
        "id": 208223112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538126
    },
    {
        "content": "<p>okay lets just re-commit the previous beta-backport that allowed this lint by default then.</p>",
        "id": 208223167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538152
    },
    {
        "content": "<p>if you object, say something (interrupt meeting if necessary)</p>",
        "id": 208223240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538165
    },
    {
        "content": "<p>(in case someone else is posting the comments on the PR's: I'd call that a \"declining to backport\" and then link to the previous beta-comit that allowed the lint by default)</p>",
        "id": 208223344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538204
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 208223368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538215
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 208223383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538222
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 208223403,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538229
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">50 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">30 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 2 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 16 P-high, 54 P-medium, 6 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 208223422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538239
    },
    {
        "content": "<p>wow 0 P-critical issues</p>",
        "id": 208223479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538249
    },
    {
        "content": "<p>does anyone know how many weeks its been since we've had a meeting with 0 P-critical issues?</p>",
        "id": 208223510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538267
    },
    {
        "content": "<p>this is so exciting I'm going to paste the rest of the template</p>",
        "id": 208223553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538288
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 208223565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538294
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>",
        "id": 208223612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538314
    },
    {
        "content": "<ul>\n<li>\"libtest panics when running <code>should_panic</code> tests under QEMU armv7 \" <a href=\"https://github.com/rust-lang/rust/issues/74820\">rust#74820</a><ul>\n<li>Discussed last week</li>\n<li>Cargo lib skeleton + should_panic test code fails on QEMU armv7</li>\n<li>It seems to be caused by <a href=\"https://github.com/rust-lang/rust/pull/72746\">rust#72746</a> by <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n<li>Seems to be specific to QEMU, <a href=\"https://github.com/rust-lang/rust/issues/74820#issuecomment-673977399\">see comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208223645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538333
    },
    {
        "content": "<p>(to be clear: The theory we posited last week was that this bug could be thread-scheduler dependent, right?)</p>",
        "id": 208223771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538377
    },
    {
        "content": "<p>(and that that is why we may only see it on QEMU; but I think it would be a mistake to then conclude that you <em>couldn't</em> see it on any real hardware in the wild...)</p>",
        "id": 208223835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538411
    },
    {
        "content": "<p>or something to do w/ panic machinery</p>",
        "id": 208223838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538414
    },
    {
        "content": "<p>oh right</p>",
        "id": 208223848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538418
    },
    {
        "content": "<p>so I believe the panic results from lock poisoning</p>",
        "id": 208223881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538438
    },
    {
        "content": "<p>but I'm not convinced it is scheduler related</p>",
        "id": 208223887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538442
    },
    {
        "content": "<p>it seems more likely that an unexpected panic is occurring for some reason, or maybe <code>catch_unwind</code> is not working, idk</p>",
        "id": 208223938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538466
    },
    {
        "content": "<p>i.e., and hence the lock is becoming poisoned</p>",
        "id": 208223982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538480
    },
    {
        "content": "<p>okay. Worth further investigation</p>",
        "id": 208224043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538491
    },
    {
        "content": "<p>but its also pretty certain to become a stable-to-stable regression at this point</p>",
        "id": 208224089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538516
    },
    {
        "content": "<p>(and I think when it does turn into a stable-to-stable regression, that will imply that we won't visit it every week in this meeting, even if it remains P-high, which I think it probably should.)</p>",
        "id": 208224245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538587
    },
    {
        "content": "<p>it also might be something that we should investigate more before making an ARM Tier1 architecture, right?</p>",
        "id": 208224324,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538613
    },
    {
        "content": "<p>that sounds reasonable</p>",
        "id": 208224353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538628
    },
    {
        "content": "<p>/me looks for issue describing that tier 1 addition</p>",
        "id": 208224369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538633
    },
    {
        "content": "<p>You mean <a href=\"https://github.com/rust-lang/rfcs/pull/2959\">https://github.com/rust-lang/rfcs/pull/2959</a>?</p>",
        "id": 208224454,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598538672
    },
    {
        "content": "<p>Or <a href=\"https://github.com/rust-lang/rust/pull/75914\">https://github.com/rust-lang/rust/pull/75914</a>? Er, that's tier-2.</p>",
        "id": 208224510,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1598538698
    },
    {
        "content": "<p>that's one of them, thank you</p>",
        "id": 208224511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538699
    },
    {
        "content": "<p>and another</p>",
        "id": 208224536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538718
    },
    {
        "content": "<p>and of course <a href=\"https://github.com/rust-lang/rust/issues/73908\">https://github.com/rust-lang/rust/issues/73908</a></p>",
        "id": 208224579,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538726
    },
    {
        "content": "<p>(i.e. Linux, Windows, and Mac ARM, respectively)</p>",
        "id": 208224594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538739
    },
    {
        "content": "<p>I notice that we haven’t pinged our ARM experts.</p>",
        "id": 208224731,
        "sender_full_name": "nagisa",
        "timestamp": 1598538813
    },
    {
        "content": "<p>I thought we did so</p>",
        "id": 208224737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538819
    },
    {
        "content": "<p>/me looks again</p>",
        "id": 208224749,
        "sender_full_name": "nagisa",
        "timestamp": 1598538826
    },
    {
        "content": "<p>We did, and they tested on hardware and said it didn't fail</p>",
        "id": 208224768,
        "sender_full_name": "simulacrum",
        "timestamp": 1598538836
    },
    {
        "content": "<p>pretty sure I also pestered <span class=\"user-mention\" data-user-id=\"275830\">@Robin Randhawa</span>  in a previous meeting as well :)</p>",
        "id": 208224773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538838
    },
    {
        "content": "<p>ah we did, I missed it.</p>",
        "id": 208224814,
        "sender_full_name": "nagisa",
        "timestamp": 1598538843
    },
    {
        "content": "<p>clearly we need a QEMU ping group. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 208224858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538872
    },
    {
        "content": "<p>heh I was just thinking that :P</p>",
        "id": 208224873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598538877
    },
    {
        "content": "<p>AFAIK <code>cross</code> uses binfmt support, which I found wonky many times in the past.</p>",
        "id": 208224904,
        "sender_full_name": "nagisa",
        "timestamp": 1598538894
    },
    {
        "content": "<p>it is not really a VM and more like an… interpreter.</p>",
        "id": 208224918,
        "sender_full_name": "nagisa",
        "timestamp": 1598538904
    },
    {
        "content": "<p>you know, an AMD ping group might actually makes sense, since <em>hardware</em> is not as easy to \"just grab\" as a QEMU binary...</p>",
        "id": 208224937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538916
    },
    {
        "content": "<p>but now I'm super-digressing</p>",
        "id": 208224961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538930
    },
    {
        "content": "<p>if we can confirm this to be the case I’d be inclined to call this not-a-bug in rust in the first place.</p>",
        "id": 208225011,
        "sender_full_name": "nagisa",
        "timestamp": 1598538948
    },
    {
        "content": "<p>interesting</p>",
        "id": 208225079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598538972
    },
    {
        "content": "<p>(I remain kind of unclear on how much to prioritize a QEMU-only bug)</p>",
        "id": 208225170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539021
    },
    {
        "content": "<p>I think it'd be \"ok\" to file it as medium or low and wait to see if we see similar symptoms crop up in real hardware ever</p>",
        "id": 208225211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539038
    },
    {
        "content": "<p>I would add one note to that suggestion: In general, if we were to take that tack ...</p>",
        "id": 208225274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539080
    },
    {
        "content": "<p>... I would want us to add the code illustrating the bug to our test suite</p>",
        "id": 208225327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539090
    },
    {
        "content": "<p>to sort of force people to find out about where the problem occurs</p>",
        "id": 208225367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539103
    },
    {
        "content": "<p>However, in this particular case</p>",
        "id": 208225377,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539106
    },
    {
        "content": "<p>I think the code is already in our test suite</p>",
        "id": 208225390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539115
    },
    {
        "content": "<p>that is, it looks like a dirt-simple check of <code>#[should_panic]</code> support</p>",
        "id": 208225469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539145
    },
    {
        "content": "<p>so yeah, shall we lower priority of this to P-medium then?</p>",
        "id": 208225524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539175
    },
    {
        "content": "<p>(there's also the detail that we may <em>need</em> QEMU support to work in practice for some of our volunteers to be able to double-check that their code works for those targets...)</p>",
        "id": 208225655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539226
    },
    {
        "content": "<p>but that's a broader question that gets into \"what priority do we give QEMU support\", and I don't want to try to answer that question today.</p>",
        "id": 208225734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539277
    },
    {
        "content": "<p>It sounds like people are generally okay with lowering priority to P-medium</p>",
        "id": 208225770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539298
    },
    {
        "content": "<p>next up</p>",
        "id": 208225881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539334
    },
    {
        "content": "<ul>\n<li>\"diagnostics: \"one type is more general\" for two identical types?\" <a href=\"https://github.com/rust-lang/rust/issues/75791\">rust#75791</a><ul>\n<li>Very confusing error message</li>\n<li><span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span> suggested that it may have regressed on <a href=\"https://github.com/rust-lang/rust/pull/73643\">rust#73643</a> which is a rollup.</li>\n</ul>\n</li>\n</ul>",
        "id": 208225885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539335
    },
    {
        "content": "<p>hmm</p>",
        "id": 208226018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539406
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/72493\">#72493</a> ( move leak-check to during coherence, candidate eval)</p>\n</blockquote>",
        "id": 208226050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539422
    },
    {
        "content": "<p>that's the obvious candidate</p>",
        "id": 208226057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539425
    },
    {
        "content": "<p>there is some other bug assigned to me related to that</p>",
        "id": 208226075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539430
    },
    {
        "content": "<p>I've been 110% swamped with just 0 time for coding, reviews, etc</p>",
        "id": 208226093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539440
    },
    {
        "content": "<p>the error is correct</p>",
        "id": 208226228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539492
    },
    {
        "content": "<p>the diagnostics are not good, though, it's not showing where the binder occurs</p>",
        "id": 208226246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539503
    },
    {
        "content": "<p>is it just not printing a <code>for</code> or something?</p>",
        "id": 208226249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539504
    },
    {
        "content": "<p>yeah basically</p>",
        "id": 208226291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539521
    },
    {
        "content": "<p>we have specialized output for <em>impls</em></p>",
        "id": 208226308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539526
    },
    {
        "content": "<p>but not <em>types</em></p>",
        "id": 208226314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539529
    },
    {
        "content": "<p>also referring to this as \"mismatched types\" is weird itself</p>",
        "id": 208226358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539547
    },
    {
        "content": "<p><code>remove_file</code> however implements <code>FnMut(?P)</code> for some <code>?P</code>, where in this case it is <code>&amp;'a Path</code> for some <code>'a</code></p>",
        "id": 208226449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539579
    },
    {
        "content": "<p>but we need <code>for&lt;'b&gt; FnMut(&amp;'b Path)</code></p>",
        "id": 208226452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539585
    },
    {
        "content": "<p>(Would \"incompatible types\" be better?)</p>",
        "id": 208226454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539585
    },
    {
        "content": "<p>I'm not sure, maybe, it doesn't feel like <em>types</em> at all</p>",
        "id": 208226477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539598
    },
    {
        "content": "<p>i.e., there is no <code>FnMut</code> type here (that's a trait)</p>",
        "id": 208226504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539611
    },
    {
        "content": "<p>oh okay sure</p>",
        "id": 208226519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539619
    },
    {
        "content": "<p>we do in some cases have output that tries to say</p>",
        "id": 208226547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539632
    },
    {
        "content": "<p>so hold on</p>",
        "id": 208226593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539648
    },
    {
        "content": "<p>\"this implements <code>Foo&lt;&amp;'a u32&gt;</code>for <em>some</em> <code>'a</code> but we need it for <em>any</em> <code>'a</code>\"</p>",
        "id": 208226594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539649
    },
    {
        "content": "<p>lets not get in the weeds</p>",
        "id": 208226606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539652
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is swamped</p>",
        "id": 208226613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is there anyone currently active other than you with good enough knowledge of this code that you might be able to mentor a fix?</p>",
        "id": 208226741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539692
    },
    {
        "content": "<p>or at least delegate investigation?</p>",
        "id": 208226757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539698
    },
    {
        "content": "<p>I left a comment to start</p>",
        "id": 208226943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539761
    },
    {
        "content": "<p>(and maybe delegate issue <a href=\"https://github.com/rust-lang/rust/issues/74400\">#74400</a> as well, which I think is the other one that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> alluded to above...)</p>",
        "id": 208226944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539762
    },
    {
        "content": "<p>I'm not sure, maybe <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> or maybe <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 208226975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539779
    },
    {
        "content": "<p>okay well for now we've made some headway</p>",
        "id": 208226988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539786
    },
    {
        "content": "<p>but I'm also happy to try and at least leave some mentoring tips</p>",
        "id": 208226990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539787
    },
    {
        "content": "<p>pointing at the right points of the code</p>",
        "id": 208226998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539790
    },
    {
        "content": "<p>I left an initial comment and I'll leave some more :)</p>",
        "id": 208227018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539801
    },
    {
        "content": "<p>okay</p>",
        "id": 208227078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539812
    },
    {
        "content": "<p>(I'm also thinking about what I can do to get \"unswamped\", because this isn't sustainable I think)</p>",
        "id": 208227095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539819
    },
    {
        "content": "<p>(but that's kind of an <span aria-label=\"evergreen tree\" class=\"emoji emoji-1f332\" role=\"img\" title=\"evergreen tree\">:evergreen_tree:</span> thought =)</p>",
        "id": 208227123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598539832
    },
    {
        "content": "<p>I won't assign it to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> though because, well, they're currently swamped.)</p>",
        "id": 208227124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539832
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>\n<ul>\n<li>\"Type mismatch in function arguments E0631, E0271 are falsely recognized as E0308 mismatched types\" <a href=\"https://github.com/rust-lang/rust/issues/74400\">rust#74400</a><ul>\n<li>Discussed last week</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73643\">rust#73643</a> which is a rollup, likely to be <a href=\"https://github.com/rust-lang/rust/pull/72493\">rust#72493</a></li>\n</ul>\n</li>\n</ul>",
        "id": 208227170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539854
    },
    {
        "content": "<p>right we just discussed this, sort of</p>",
        "id": 208227184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539862
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>This week saw an upgrade to LLVM 11, which resulted in large speedups to<br>\noptimized builds. This offsets the slowdown we observed as part of the <br>\n<a href=\"https://perf.rust-lang.org/compare.html?start=0aa6751c19d3ba80df5b0b02c00bf44e13c97e80&amp;end=82911b3bba76e73afe2881b732fe6b0edb35d5d3&amp;stat=instructions:u\">upgrade to LLVM 10</a>. Many thanks to rust-lang and LLVM contributor<br>\n<a href=\"https://github.com/nikic\">@nikic</a> for their work to measure <a href=\"https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html\">LLVM\nperformance</a>. That upgrade did cause slight regressions to check and<br>\ndebug builds, but on the whole it is a significant win for compile times.</p>\n<p>Triage done by @ecstaticmorse.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=67e7b9b8cf776222825dbbd4cb1e39b7765ef27c&amp;end=03017003c77d782cf7ed841a05d7c628a9b93f25&amp;absolute=false&amp;stat=instructions%3Au\">67e7b9b8cf776222825dbbd4cb1e39b7765ef27c..03017003c77d782cf7ed841a05d7c628a9b93f25</a></p>\n<p>1 Regression, 4 Improvements, 0 of them in rollups.</p>",
        "id": 208227272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539900
    },
    {
        "content": "<p>whoops</p>",
        "id": 208227309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539917
    },
    {
        "content": "<p>why didn't those links work?</p>",
        "id": 208227371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598539926
    },
    {
        "content": "<p>hm I think because they're the \"distance\" Markdown links, and zulip only understands inline markdown links?</p>",
        "id": 208227504,
        "sender_full_name": "simulacrum",
        "timestamp": 1598539982
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-24.md\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-24.md</a></p>",
        "id": 208227573,
        "sender_full_name": "simulacrum",
        "timestamp": 1598540013
    },
    {
        "content": "<p>that's the report in rendered form</p>",
        "id": 208227584,
        "sender_full_name": "simulacrum",
        "timestamp": 1598540018
    },
    {
        "content": "<p>okay well I edited the message</p>",
        "id": 208227682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540051
    },
    {
        "content": "<p>I guess we'll see how the rest of the report looks</p>",
        "id": 208227702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540062
    },
    {
        "content": "<h4>Regressions</h4>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75555\">#75555</a> Cargo update (almost) all the things! </p>\n<ul>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=30f0a07684f6c1f5df62d69e9519d82e13d6bf2d&amp;end=1656582822a80139d725e56f00c564f4f58f2883&amp;stat=instructions:u\">A very small regression</a></li>\n</ul>",
        "id": 208227743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540076
    },
    {
        "content": "<h4>Improvements</h4>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75145\">#75145</a> Reference lang items during AST lowering </p>\n<ul>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=33c96b4d9782cf6364e47cb2c904e66b06c22bb4&amp;end=792c645ca7d11a8d254df307d019c5bf01445c37&amp;stat=instructions:u\">An improvement of ~3% on <code>await-call-tree</code></a></li>\n<li>Coupled with small improvements across the board </li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75590\">#75590</a> Add a packed/tagged pointer abstraction and utilize it for ParamEnv </p>\n<ul>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=9900178cba95369cd5822c8ce579edcc89ffeb76&amp;end=32c654a9795b0d88541e56ba9da4150e34f1d5f9&amp;stat=instructions:u\">A small improvement on <code>keccak</code>/<code>inflate</code></a></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73526\">#73526</a> Upgrade to LLVM 11 (rc2) </p>\n<ul>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=e482c86b9de32c6392cb83aa97d72e22425163f9&amp;end=7ce71c362be9a89e7897ac066aba6e3e6f747800&amp;stat=instructions:u\">An improvement on optimized builds</a></li>\n<li>Tempered by a small regression on debug and check builds.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75813\">#75813</a> Lazy decoding of DefPathTable from crate metadata (non-incremental case) </p>\n<ul>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=7ce71c362be9a89e7897ac066aba6e3e6f747800&amp;end=d5abc8d3b2e14c8793182b427520497a90b6de83&amp;stat=instructions:u\">A major improvement on small crates, especially on check builds</a></li>\n</ul>",
        "id": 208227757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540086
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>None</p>",
        "id": 208227772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540094
    },
    {
        "content": "<p>seems good</p>",
        "id": 208228005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598540192
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 208228024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540203
    },
    {
        "content": "<ul>\n<li>\"Unsizing coercion does not normalize associated types in structs.\" <a href=\"https://github.com/rust-lang/rust/issues/75899\">rust#75899</a><ul>\n<li>Opened and nominated by <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n</ul>\n</li>\n</ul>",
        "id": 208228040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540211
    },
    {
        "content": "<p>this is probably too in-depth for us to discuss in three minutes</p>",
        "id": 208228094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540242
    },
    {
        "content": "<p>lets leave that nominated for next week</p>",
        "id": 208228109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540247
    },
    {
        "content": "<ul>\n<li>\"Add aarch64-pc-windows-msvc to CI\" <a href=\"https://github.com/rust-lang/rust/pull/75914\">rust#75914</a><ul>\n<li>PR by @<strong>arlosi</strong>, reviewed by @<strong>Ryan Levick</strong></li>\n<li>This one seems more a T-infra nomination</li>\n<li><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> may have wanted to notify the compiler team about this</li>\n<li>The infrastructure team approved allocating a dedicated builder for this!</li>\n</ul>\n</li>\n</ul>",
        "id": 208228127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540256
    },
    {
        "content": "<p>Notably: \"This promotes aarch64-pc-windows-msvc from a Tier 2 Compilation Target (std) to a Tier 2 Development Platform (std+rustc+cargo+tools).\"</p>",
        "id": 208228225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah the compiler team needs to approve the tier bump</p>",
        "id": 208228385,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598540368
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> made a point of saying that this promotion (<a href=\"https://github.com/rust-lang/rust/issues/75914\">#75914</a>) requires sign-off from both teams</p>",
        "id": 208228396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540372
    },
    {
        "content": "<p>Should we actually post an <code>@rfcbot fcp merge</code> for it?</p>",
        "id": 208228519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540416
    },
    {
        "content": "<p>or is it sufficient to just use the people present here as the representative body of the compiler team?</p>",
        "id": 208228597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540448
    },
    {
        "content": "<p>I'd prefer to make approval to tier 2 an FCP I think</p>",
        "id": 208228678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598540480
    },
    {
        "content": "<p>it feels like a \"real decision\" to me</p>",
        "id": 208228692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1598540488
    },
    {
        "content": "<p>okay lets do that then</p>",
        "id": 208228709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> that means that T-infra will need to check off their boxes too, okay?</p>",
        "id": 208228749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> infra already signed off</p>",
        "id": 208228810,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598540525
    },
    {
        "content": "<p>each team can do the approval however they prefer :)</p>",
        "id": 208228831,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598540539
    },
    {
        "content": "<p>I'm just saying in terms of the bots</p>",
        "id": 208228838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540542
    },
    {
        "content": "<p>well whatever</p>",
        "id": 208228852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540547
    },
    {
        "content": "<p>I don't think it's necessary</p>",
        "id": 208228863,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598540551
    },
    {
        "content": "<p>feel free to remove the T-infra label</p>",
        "id": 208228873,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598540556
    },
    {
        "content": "<p>okay that's what you meant</p>",
        "id": 208228895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540564
    },
    {
        "content": "<p>Okay I'll remove T-infra, do <code>@rfcbot fcp merge</code>, and then readd T-infra</p>",
        "id": 208228935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540581
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 208229061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540641
    },
    {
        "content": "<p>and that's everything!</p>",
        "id": 208229110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540649
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 208229135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1598540660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-08-27.20.2354818/near/208228094\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Unsizing coercion does not normalize associated types in structs.\" <a href=\"https://github.com/rust-lang/rust/issues/75899\">rust#75899</a><ul>\n<li>Opened and nominated by <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span></li>\n</ul>\n</li>\n</ul>\n<p>this is probably too in-depth for us to discuss in three minutes</p>\n</blockquote>\n<p>that's great because I forgot about it and wasn't even awake to participate <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 208246180,
        "sender_full_name": "eddyb",
        "timestamp": 1598547783
    }
]