[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at 2pm UTC</p>",
        "id": 205379800,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596039995
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in #<strong>t-compiler/wg-prioritizationa/alerts</strong></p>",
        "id": 205379836,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596040013
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/pdiqlL2ZTfawYz_QHz0dRQ?view\">meeting agenda</a></p>",
        "id": 205380112,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596040150
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> and WG-Polymorphization</p>",
        "id": 205380191,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596040193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span>?</p>",
        "id": 205380271,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596040223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> do you have something you want to share about WG-Polymorphization?</p>",
        "id": 205380326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596040250
    },
    {
        "content": "<p>I’ll write something up for you, do I add it directly to the agenda?</p>",
        "id": 205380383,
        "sender_full_name": "davidtwco",
        "timestamp": 1596040280
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> not exactly, there's nothing to report apart that the WG will be doing a little focus \"week\" next week ! (Also I'm not sure we have enough activity to be in the check-ins rotation that often, as you've seen)</p>",
        "id": 205380737,
        "sender_full_name": "lqd",
        "timestamp": 1596040468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I believe you should write it directly, yes</p>",
        "id": 205380959,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1596040570
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205380383\">said</a>:</p>\n<blockquote>\n<p>I’ll write something up for you, do I add it directly to the agenda?</p>\n</blockquote>\n<p>yes, if you can't please give me your HackMD user and I'll give you access</p>",
        "id": 205398906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596049077
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205380737\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> not exactly, there's nothing to report apart that the WG will be doing a little focus \"week\" next week ! (Also I'm not sure we have enough activity to be in the check-ins rotation that often, as you've seen)</p>\n</blockquote>\n<p>ok, about checkins it's perfectly fine to skip</p>",
        "id": 205399046,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596049123
    },
    {
        "content": "<p>I added some content for wg-polonius, basically what <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> said</p>",
        "id": 205402149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596050756
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 59 minutes</p>",
        "id": 205475014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596114088
    },
    {
        "content": "<p><a href=\"https://hackmd.io/pdiqlL2ZTfawYz_QHz0dRQ?view\">Check out the meeting agenda</a></p>",
        "id": 205475045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596114107
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 205481731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117695
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 205481777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think I forgot the T-compiler label, but could we add <a href=\"https://github.com/rust-lang/rust/pull/74682\">https://github.com/rust-lang/rust/pull/74682</a> to the agenda? (I can't seem to edit). It would be good to get to it today.</p>",
        "id": 205481828,
        "sender_full_name": "simulacrum",
        "timestamp": 1596117723
    },
    {
        "content": "<p>I'll add it</p>",
        "id": 205481850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> don't worry I can do it so you can continue</p>",
        "id": 205481896,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596117763
    },
    {
        "content": "<p>I think its already sort of in there, as part of the performance reports</p>",
        "id": 205481897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117764
    },
    {
        "content": "<p>(or I guess that was take one, and this is take two)</p>",
        "id": 205481917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117774
    },
    {
        "content": "<p>anyway</p>",
        "id": 205481969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117798
    },
    {
        "content": "<ul>\n<li>Tomorrow (Friday at 2pm UTC) we have our <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Steering Meeting</a></li>\n</ul>",
        "id": 205481984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117808
    },
    {
        "content": "<p>(I assume that tomorrow's is a <em>planning meeting</em>)</p>",
        "id": 205482024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117827
    },
    {
        "content": "<p>which means that people may want to check out <a href=\"https://github.com/rust-lang/compiler-team/issues?q=is%3Aopen+is%3Aissue+label%3Ameeting-proposal\">https://github.com/rust-lang/compiler-team/issues?q=is%3Aopen+is%3Aissue+label%3Ameeting-proposal</a> and perhaps add new proposals</p>",
        "id": 205482132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117872
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Move the compiler to a new <code>compiler/</code> directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">compiler-team#336</a></li>\n<li>\"Create a WebAssembly target notification group.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/337\">compiler-team#337</a></li>\n<li>\"Form t-compiler/wg-parser-library\" <a href=\"https://github.com/rust-lang/compiler-team/issues/338\">compiler-team#338</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205482154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117885
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205482168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117895
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 205482186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117905
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Stabilizable subset of const generics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/332\">compiler-team#332</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205482210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117916
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory\" <a href=\"https://github.com/rust-lang/compiler-team/issues/310\">compiler-team#310</a></li>\n<li>\"Add future-incompat entries to json diagnostic output\" <a href=\"https://github.com/rust-lang/compiler-team/issues/315\">compiler-team#315</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205482223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117925
    },
    {
        "content": "<ul>\n<li>Finalized FCPs<ul>\n<li>\"Stabilize core:<span aria-label=\"future\" class=\"emoji emoji-1f52e\" role=\"img\" title=\"future\">:future:</span>:{pending,ready}\" <a href=\"https://github.com/rust-lang/rust/pull/74328\">rust#74328</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205482234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117933
    },
    {
        "content": "<p>note that the agenda is really packed, so <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we may want to decide as we go to skip certain things ... if we really want to cover <a href=\"https://github.com/rust-lang/rust/pull/74682\">https://github.com/rust-lang/rust/pull/74682</a> which is the very last item of the agenda</p>",
        "id": 205482253,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596117944
    },
    {
        "content": "<ul>\n<li>an announcement I forgot to add to the agenda: wg-incr-comp (which for now I'm assuming will be a domain working group) is having its kickoff meeting on Tuesday of next week</li>\n</ul>",
        "id": 205482330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596117972
    },
    {
        "content": "<ul>\n<li><code>Izzy Swart</code> is looking for some help figuring out why their code is generating OOMs in rustc from the trait system. <a href=\"#narrow/stream/144729-wg-traits/topic/investigating.20obligations.20blowup\">https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits/topic/investigating.20obligations.20blowup</a></li>\n</ul>\n<p>Help would be greatly appreciated!</p>",
        "id": 205482340,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596117980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can you put that mtg on the compiler team calendar, if you didn't already?</p>",
        "id": 205482380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596118006
    },
    {
        "content": "<p>The wg-incr-comp kickoff meeting will specifically be at <time datetime=\"2020-08-05T00:00:00Z\">2020-08-04T20:00:00-04:00</time></p>",
        "id": 205482393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118017
    },
    {
        "content": "<p><del>!</del> (fixed; my usage of <code>&lt;time</code> didn't work at first)</p>",
        "id": 205482396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> it should be on there already</p>",
        "id": 205482444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118055
    },
    {
        "content": "<p>I see it</p>",
        "id": 205482461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596118063
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 205482570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118107
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>:</p>\n<blockquote>\n<p>We are planning a \"sprint\" Aug 3 - 5, which means that we'll be putting some energy into pushing polonius along. We've been changing to this \"sprint-oriented\" model because it's hard to keep a complex project like polonius moving in fits and starts, it requires some dedicated attention.</p>\n<p>Last sprint we focused on getting a \"complete write-up\" of the polonius rules and in particular incorporating liveness and other things. I'm not sure what we'll focus on this sprint, probably similar themes, but I know that lqd has some ideas. --nikomatsakis</p>\n</blockquote>",
        "id": 205482584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118114
    },
    {
        "content": "<p>WG-Polymorphization checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>:</p>\n<blockquote>\n<p>Since the last check-in from the polymorphisation working group (myself with lots of help from <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> and <span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span>), we’ve made a few steps forward and a few steps back:</p>\n<p>Polymorphisation (<a href=\"https://github.com/rust-lang/rust/issues/69749\">#69749</a>) was merged and enabled by default. Another perf run was performed before merge, which found that the improvements from earlier perf runs had vanished - some investigation revealed that this was due to an update to the script-servo benchmark that patched the opportunity that polymorphisation was taking advantage of.</p>\n<p>We quickly discovered a regression that was missed by the test suite in <a href=\"https://github.com/rust-lang/rust/issues/74614\">#74614</a>. Some investigation revealed the issue but we fixed the issue by disabling polymorphisation again in <a href=\"https://github.com/rust-lang/rust/issues/74633\">#74633</a>. <a href=\"https://github.com/rust-lang/rust/issues/74636\">#74636</a> was filed to track fixing the underlying bug - there are some subtle implications of polymorphisation here that we hadn’t thought about and warrant some discussion. </p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/74717\">#74717</a> has been submitted to fix that regression, but it’s still pending review and warrants some discussion before merge (particularly with respect to the intersection between polymorphisation and reflection). </p>\n<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> fixed another bug with polymorphisation that was discovered while investigating the regression with <a href=\"https://github.com/rust-lang/rust/issues/74623\">#74623</a>. </p>\n<p><span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> reported that disabling polymorphisation didn’t regain the performance losses of enabling it - I intend to look into why this might be soon.</p>\n</blockquote>",
        "id": 205482625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118133
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 205482651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118144
    },
    {
        "content": "<ul>\n<li>\"Add the aarch64-apple-darwin target\" <a href=\"https://github.com/rust-lang/rust/pull/74541\">rust#74541</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span>, Assigned to <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span></li>\n</ul>\n</li>\n</ul>",
        "id": 205482660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118152
    },
    {
        "content": "<p>do we know why this was beta-nominated?</p>",
        "id": 205482807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118210
    },
    {
        "content": "<p>unknown from the comments but I guess it's to have support for that target as soon as possible?</p>",
        "id": 205482876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596118242
    },
    {
        "content": "<p>Is it beta-nominated so it ships by some date?</p>",
        "id": 205482881,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596118246
    },
    {
        "content": "<p>this target is currently only available in the Apple DTK, right? Do we need to prioirtize getting that out in 12 weeks time?</p>",
        "id": 205482889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118254
    },
    {
        "content": "<p>I think so the bootstrap compiler contains it earlier, making it easier to bootstrap for the target.</p>",
        "id": 205482897,
        "sender_full_name": "bjorn3",
        "timestamp": 1596118257
    },
    {
        "content": "<p>oh I see. Hmm.</p>",
        "id": 205482916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118264
    },
    {
        "content": "<p>The goal is just to get bootstrap to work without custom hacks</p>",
        "id": 205482932,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118272
    },
    {
        "content": "<p>imo, it's a low-risk patch -- essentially \"tier 3\" support at this point</p>",
        "id": 205482966,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118286
    },
    {
        "content": "<p>Okay I guess it seems fine</p>",
        "id": 205482978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118295
    },
    {
        "content": "<p>I sort of wish we had a way to add bootstrap support without also adding even tier3 support to our stable system 6 weeks sooner than we really need.</p>",
        "id": 205483081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118332
    },
    {
        "content": "<p>but it <em>is</em> low risk.</p>",
        "id": 205483094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118339
    },
    {
        "content": "<p>anyway, beta-accepted</p>",
        "id": 205483136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118357
    },
    {
        "content": "<p><code>lowrisc</code></p>",
        "id": 205483139,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596118359
    },
    {
        "content": "<ul>\n<li>\"rustc_target: Add a target spec option for disabling <code>--eh-frame-hdr</code>\" <a href=\"https://github.com/rust-lang/rust/pull/74631\">rust#74631</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, Assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n</ul>\n</li>\n</ul>",
        "id": 205483170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118376
    },
    {
        "content": "<p>This seems fine; <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> did note that they were not sure if the affected targets were even usable on stable</p>",
        "id": 205483376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118463
    },
    {
        "content": "<p>notably, none of the issues its tagged as fixing are themselves tagged as regression-stable-to-beta?</p>",
        "id": 205483482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118510
    },
    {
        "content": "<p>anyway, I don't mind approving</p>",
        "id": 205483491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118519
    },
    {
        "content": "<p>it just seemed a little weird</p>",
        "id": 205483517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118535
    },
    {
        "content": "<p>beta-accepted</p>",
        "id": 205483525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118538
    },
    {
        "content": "<ul>\n<li>\"Fix #[track_caller] shims for trait objects.\" <a href=\"https://github.com/rust-lang/rust/pull/74784\">rust#74784</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"130111\">@anp</span>, Assigned to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n<li>Fixes an <code>I-unsound</code> <code>P-critical</code> issue <a href=\"https://github.com/rust-lang/rust/issues/74764\">rust#74764</a>.</li>\n<li>This is also stable nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 205483550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118555
    },
    {
        "content": "<p>yeah seems like obvious beta-accept to me</p>",
        "id": 205483670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118616
    },
    {
        "content": "<p>the detail about making sure that codegen &amp; miri agree on how to make vtables like this seems important; <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> can you confirm that?</p>",
        "id": 205483718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118639
    },
    {
        "content": "<p>beta-accepted</p>",
        "id": 205483763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118663
    },
    {
        "content": "<ul>\n<li>\"Fix incorrect clashing_extern_declarations warnings.\" <a href=\"https://github.com/rust-lang/rust/pull/73990\">rust#73990</a><br>\n    - PR by <span class=\"user-mention\" data-user-id=\"255801\">@jumbatm</span>, Assigned to <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>",
        "id": 205483772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118667
    },
    {
        "content": "<p>This one was nominated just now. Improves correctness of a warn-by-default lint.</p>",
        "id": 205483867,
        "sender_full_name": "nagisa",
        "timestamp": 1596118694
    },
    {
        "content": "<p>fairly complex patch</p>",
        "id": 205483941,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596118733
    },
    {
        "content": "<p>Fairly complex diff, so I don’t have a strong opinion on whether it should actually be backported.</p>",
        "id": 205483942,
        "sender_full_name": "nagisa",
        "timestamp": 1596118734
    },
    {
        "content": "<p>the bug itself was introduced by PR <a href=\"https://github.com/rust-lang/rust/issues/70946\">#70946</a></p>",
        "id": 205484011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118768
    },
    {
        "content": "<p>it also touches code for the other important lint around whether types are C-safe in FFI APIs.</p>",
        "id": 205484023,
        "sender_full_name": "nagisa",
        "timestamp": 1596118770
    },
    {
        "content": "<p>and PR <a href=\"https://github.com/rust-lang/rust/issues/70946\">#70946</a> merged on June 21</p>",
        "id": 205484052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118791
    },
    {
        "content": "<p>/me is trying to figure out if the lint breakage has hit stable yet or not</p>",
        "id": 205484151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118820
    },
    {
        "content": "<p>its currently in beta I believe and not in stable.</p>",
        "id": 205484181,
        "sender_full_name": "nagisa",
        "timestamp": 1596118841
    },
    {
        "content": "<p>We could just backport a switch of the lint to allow-by-default?</p>",
        "id": 205484198,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118847
    },
    {
        "content": "<p>A better backport could probably be yeah that</p>",
        "id": 205484205,
        "sender_full_name": "nagisa",
        "timestamp": 1596118851
    },
    {
        "content": "<p>l.ets do that</p>",
        "id": 205484216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118855
    },
    {
        "content": "<p>beta-declined, with note that we would prefer to \"just\" backport a switch of lint to allow-by-default to beta.</p>",
        "id": 205484270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118885
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations this time.</li>\n</ul>",
        "id": 205484311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118914
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 205484331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118922
    },
    {
        "content": "<ul>\n<li>\"The const propagator cannot trace references.\" <a href=\"https://github.com/rust-lang/rust/pull/73613\">rust#73613</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, already merged</li>\n<li>Fixes an <code>I-unsound</code> <code>P-critical</code> issue</li>\n</ul>\n</li>\n</ul>",
        "id": 205484376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118930
    },
    {
        "content": "<p>(Stable release is scheduled for <time datetime=\"2020-07-30T17:00:00Z\">2020-07-30T13:00:00-04:00</time> today, btw)</p>",
        "id": 205484437,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118963
    },
    {
        "content": "<p>why is this stable-nominated and not beta-nominated?</p>",
        "id": 205484473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118979
    },
    {
        "content": "<p>oh it already got into beta</p>",
        "id": 205484478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118983
    },
    {
        "content": "<p>right?</p>",
        "id": 205484483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596118985
    },
    {
        "content": "<p>yes</p>",
        "id": 205484488,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118988
    },
    {
        "content": "<p>it missed the beta train last cycle by several hours</p>",
        "id": 205484506,
        "sender_full_name": "simulacrum",
        "timestamp": 1596118997
    },
    {
        "content": "<p>so something went wrong in our tracking that we didn't nominate this sooner I take it?</p>",
        "id": 205484559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205484437\">said</a>:</p>\n<blockquote>\n<p>(Stable release is scheduled for <time datetime=\"2020-07-30T17:00:00Z\">2020-07-30T13:00:00-04:00</time> today, btw)</p>\n</blockquote>\n<p>release is today?, I didn't see that on the rust releases calendar, will ping you in private to sync about this</p>",
        "id": 205484570,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596119038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> we have a calendar?!</p>",
        "id": 205484628,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119049
    },
    {
        "content": "<p>if we stable approve this, would it just be enqueued for a future point release?</p>",
        "id": 205484657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> sort of but let's not discuss now?</p>",
        "id": 205484658,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119072
    },
    {
        "content": "<p>no<br>\n, it'll go out today</p>",
        "id": 205484671,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119077
    },
    {
        "content": "<p>oh okay</p>",
        "id": 205484689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119085
    },
    {
        "content": "<p>Okay then, yeah, seems like obvious stable-accept then, I think.</p>",
        "id": 205484713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119097
    },
    {
        "content": "<p>Yeah, I think when I initially r+'d it, it should have made the train but by the time it actually merged, it missed the window.</p>",
        "id": 205484716,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596119100
    },
    {
        "content": "<p>stable-accepted</p>",
        "id": 205484735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119107
    },
    {
        "content": "<p>I'm wondering if we should think about doing a quick review of all the PRs that land within ~24hr after beta branches to try to catch this kind of issue in the future.</p>",
        "id": 205484786,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596119134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205484628\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> we have a calendar?!</p>\n</blockquote>\n<p>well if you don't know it probably unofficial :), anyway let's discuss in private</p>",
        "id": 205484798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596119139
    },
    {
        "content": "<ul>\n<li>\"Fix #[track_caller] shims for trait objects.\" <a href=\"https://github.com/rust-lang/rust/pull/74784\">rust#74784</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"130111\">@anp</span>, Assigned to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n<li>Fixes an <code>I-unsound</code> <code>P-critical</code> issue <a href=\"https://github.com/rust-lang/rust/issues/74764\">rust#74764</a>.</li>\n<li>This is also beta nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 205484926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119186
    },
    {
        "content": "<p>yeah this also seems like a good one to stable-accept</p>",
        "id": 205484999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119227
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations this time.</li>\n</ul>",
        "id": 205485044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119251
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Inlined symbols\" <a href=\"https://github.com/rust-lang/rust/pull/74554\">rust#74554</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"120989\">@njn</span>, assigned to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> </li>\n<li>\"Encode symbols that are 4 bytes or shorter directly in the u32\"</li>\n<li>Waiting on <a href=\"https://github.com/rust-lang/rust/pull/74554#issuecomment-664001716\">an evaluation of the performance vs complexity tradeoff</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205485071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Could we make a note to ping me or T-release with stable noms? This could've been included today if we had known when it was posted or so</p>",
        "id": 205485074,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119266
    },
    {
        "content": "<p>sorry, a note where?</p>",
        "id": 205485193,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596119309
    },
    {
        "content": "<p>lets maybe make a separate topic, or private msg group maybe, to discuss how we'll modify things to try to avoid this situation in future?</p>",
        "id": 205485246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119344
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> -- <a href=\"#narrow/stream/131828-t-compiler/topic/putting.20stable-noms.20on.20release.20radar\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/putting.20stable-noms.20on.20release.20radar</a></p>",
        "id": 205485252,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119348
    },
    {
        "content": "<p>(don't know if it needs to be held in private; PM me if you want the discussion to be private; otherwise I'll create a topic at the end of today's meeting for the discussion)</p>",
        "id": 205485327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119397
    },
    {
        "content": "<p>so, back to</p>",
        "id": 205485383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119406
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Inlined symbols\" <a href=\"https://github.com/rust-lang/rust/pull/74554\">rust#74554</a><ul>\n<li>PR by <span class=\"user-mention\" data-user-id=\"120989\">@njn</span>, assigned to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> </li>\n<li>\"Encode symbols that are 4 bytes or shorter directly in the u32\"</li>\n<li>Waiting on <a href=\"https://github.com/rust-lang/rust/pull/74554#issuecomment-664001716\">an evaluation of the performance vs complexity tradeoff</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205485400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119413
    },
    {
        "content": "<p>seems like there is ongoing discussion of what best to do here</p>",
        "id": 205485520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119484
    },
    {
        "content": "<p>the PR itself may or may not provide significant win in real world benchmarks. but more important to me is that further discussion may yield <em>better</em> variations of this idea?</p>",
        "id": 205485642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119532
    },
    {
        "content": "<p>anyway I'm happy to let this remain in a waiting-on-team state</p>",
        "id": 205485670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119544
    },
    {
        "content": "<p>but: We could also just land it</p>",
        "id": 205485709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119561
    },
    {
        "content": "<p>and let future work be just that: future work</p>",
        "id": 205485737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119573
    },
    {
        "content": "<p>any thoughts?</p>",
        "id": 205485751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119578
    },
    {
        "content": "<p>I'm in favor of landing, and if we find that the complexity makes things hard, we can always back it out in the future (e.g., with other work that tries different strategies)</p>",
        "id": 205485804,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119599
    },
    {
        "content": "<p>(i'd also be curious to do some research of the literature for related work here... this seems like a problem that a lot of compilers have had to deal wtih?)</p>",
        "id": 205485852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119622
    },
    {
        "content": "<p>does anyone present want to argue <em>against</em> landing this? I know that <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <a href=\"https://github.com/rust-lang/rust/pull/74554#issuecomment-664000704\">commented</a>:</p>\n<blockquote>\n<p>I wish we didn't have to do this, it's just too damn ugly.<br>\nYes, <code>Span</code> uses the same technique, but it at least doesn't have to provide functionality like <code>as_str</code> or <code>is_*_keyword</code>.</p>\n</blockquote>",
        "id": 205486009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119692
    },
    {
        "content": "<p>is there anyone else in that camp, to the degree that they'd like to argue against landing this?</p>",
        "id": 205486063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119718
    },
    {
        "content": "<p>I haven't looked closely at the PR to see how much complexity it adds,</p>",
        "id": 205486203,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119769
    },
    {
        "content": "<p>but I wouldn't argue against landing it.</p>",
        "id": 205486220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119777
    },
    {
        "content": "<p>most notably, follow-up comments from <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> suggest that we might be better off trying other ideas, like providing direct access to the string interner</p>",
        "id": 205486232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119783
    },
    {
        "content": "<p>Well.</p>",
        "id": 205486266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119800
    },
    {
        "content": "<p>The wins are pretty small :)</p>",
        "id": 205486275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119805
    },
    {
        "content": "<p>though widespread</p>",
        "id": 205486285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119809
    },
    {
        "content": "<p>okay lets just land it. Like <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> says, we can back it out later.</p>",
        "id": 205486299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119814
    },
    {
        "content": "<p>Interestingly the objc runtime always packs small strings into the pointer value using pointer tagging.</p>",
        "id": 205486324,
        "sender_full_name": "bjorn3",
        "timestamp": 1596119836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, but maybe those small wins are indicative of problems that <em>other</em> approaches would yield even bigger wins?</p>",
        "id": 205486337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119842
    },
    {
        "content": "<p>As <span class=\"user-mention\" data-user-id=\"120989\">@njn</span> wrote:</p>\n<blockquote>\n<p>The performance results look decent but the biggest improvements all accrue to the shortest-running benchmarks, which are mostly artificial. By the time we get to real programs, such as futures, the improvements are ~0.5% or less.</p>\n</blockquote>",
        "id": 205486338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119842
    },
    {
        "content": "<p>(but also, I don't know if ~0.5% is actually small.)</p>",
        "id": 205486401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119867
    },
    {
        "content": "<p>seems small to me</p>",
        "id": 205486479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you had noted that you wanted the implementation to be \"somewhat abstract\"</p>",
        "id": 205486515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119908
    },
    {
        "content": "<p>was that an implicit request for a different PR?</p>",
        "id": 205486525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119915
    },
    {
        "content": "<p>no, I think this PR is pretty much there already</p>",
        "id": 205486536,
        "sender_full_name": "simulacrum",
        "timestamp": 1596119924
    },
    {
        "content": "<p>okay then</p>",
        "id": 205486540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119929
    },
    {
        "content": "<p>lets say its approved for landing</p>",
        "id": 205486547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119936
    },
    {
        "content": "<p>and move along in this meeting</p>",
        "id": 205486553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119940
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on libs-impl this time.</li>\n</ul>",
        "id": 205486562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119947
    },
    {
        "content": "<p>I think the answer is that I wouldn't try to block it from landing</p>",
        "id": 205486563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596119949
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">51 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">28 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 2 P-high, 3 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 15 P-high, 48 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 205486576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119954
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 205486602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119972
    },
    {
        "content": "<ul>\n<li>\"LTO triggers apparent miscompilation on Windows 10 x64\" <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a><ul>\n<li>Discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>I-unsound regression from stable to stable, started failing when we updated to LLVM 9.0</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74498#issuecomment-661950983\">LLVM issue reproduced on LLVM master</a></li>\n<li>Rust started to trigger this misbehavior more frequent since the introduction of <a href=\"https://github.com/rust-lang/rust/pull/69659\">rust#69659</a> that happened in 1.45+.</li>\n</ul>\n</li>\n</ul>",
        "id": 205486620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596119984
    },
    {
        "content": "<p>My intent had been to make sure an LLVM bug was filed</p>",
        "id": 205486754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120042
    },
    {
        "content": "<p>but I haven't done that yet</p>",
        "id": 205486899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120106
    },
    {
        "content": "<p>I don't have anything else to report there. Its probably not useful to try to revert the <code>Range::next</code> change that <span class=\"user-mention\" data-user-id=\"132778\">@Luqman Aden</span> identified as being the source of LLVM's woes here</p>",
        "id": 205487103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120198
    },
    {
        "content": "<ul>\n<li>\"Unexpected trait resolution overflow error\" <a href=\"https://github.com/rust-lang/rust/issues/74868\">rust#74868</a><ul>\n<li>Unassigned</li>\n<li>Needs MCVE and bisection</li>\n<li>Possible culprits <a href=\"https://github.com/rust-lang/rust/pull/73357\">rust#73357</a> or <a href=\"https://github.com/rust-lang/rust/pull/73261\">rust#73261</a> maybe?</li>\n</ul>\n</li>\n</ul>",
        "id": 205487195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120242
    },
    {
        "content": "<p>hmm. Lots of questions here.</p>",
        "id": 205487438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120346
    },
    {
        "content": "<p>I'll self-assign to at least assist with getting an MCVE</p>",
        "id": 205487582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120402
    },
    {
        "content": "<p>hmm</p>",
        "id": 205487616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120421
    },
    {
        "content": "<ul>\n<li>\"Lifetime error when indexing with borrowed index in beta but not in stable\" <a href=\"https://github.com/rust-lang/rust/issues/74933\">rust#74933</a><ul>\n<li>Unassigned</li>\n<li>Code that compiles on stable, fails on beta</li>\n<li>Regressed in <a href=\"https://github.com/rust-lang/rust/pull/73504\">rust#73504</a> which is a roll-up, likely <a href=\"https://github.com/rust-lang/rust/pull/72280\">rust#72280</a></li>\n</ul>\n</li>\n</ul>",
        "id": 205487680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120454
    },
    {
        "content": "<p>/me sighs</p>",
        "id": 205487861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120520
    },
    {
        "content": "<p>I haven't studied the example in <a href=\"https://github.com/rust-lang/rust/issues/74933\">rust#74933</a></p>",
        "id": 205487867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120524
    },
    {
        "content": "<p>this is why we can't have nice things :)</p>",
        "id": 205487873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120529
    },
    {
        "content": "<p>is it possible that this code should never have compiled?</p>",
        "id": 205487880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120531
    },
    {
        "content": "<p>/me looks</p>",
        "id": 205487888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120535
    },
    {
        "content": "<p>I haven't studied it enough yet</p>",
        "id": 205487910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120547
    },
    {
        "content": "<p>not a great error msg</p>",
        "id": 205487979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120581
    },
    {
        "content": "<p>diagnostic is definitely subpar</p>",
        "id": 205487989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120585
    },
    {
        "content": "<p>\"these two types\" ==&gt; \"<em>what</em> two types? You highlighted one...\"</p>",
        "id": 205488005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120595
    },
    {
        "content": "<p>(random question, do we have any stats for how often bisection yields rollups?)</p>",
        "id": 205488087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120613
    },
    {
        "content": "<p>and yeah, \"data from <code>field</code> flows into <code>field</code> here...)</p>",
        "id": 205488089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205488087\">said</a>:</p>\n<blockquote>\n<p>(random question, do we have any stats for how often bisection yields rollups?)</p>\n</blockquote>\n<p>we can probably get that data from the cut-and-pasted cargo-bisect-rustc reports</p>",
        "id": 205488148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120643
    },
    {
        "content": "<p>as in, by scaping those comments</p>",
        "id": 205488160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120651
    },
    {
        "content": "<p>anyway if I had to guess</p>",
        "id": 205488165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120655
    },
    {
        "content": "<p>that might be an interesting exercise</p>",
        "id": 205488175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120659
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205488087\">said</a>:</p>\n<blockquote>\n<p>(random question, do we have any stats for how often bisection yields rollups?)</p>\n</blockquote>\n<p>pretty often :)</p>",
        "id": 205488204,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1596120672
    },
    {
        "content": "<p><em>somehow</em> <a href=\"https://github.com/rust-lang/rust/issues/72280\">#72280</a> probably removed an instance of subtyping</p>",
        "id": 205488205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120674
    },
    {
        "content": "<p>such that <code>&amp;'a Foo&lt;'b&gt;</code> is now being equated with <code>&amp;'c Foo&lt;'c&gt;</code></p>",
        "id": 205488229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120692
    },
    {
        "content": "<p>feels like it could happen</p>",
        "id": 205488270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120711
    },
    {
        "content": "<p>is it <code>&amp;'c Foo&lt;'c&gt;</code> ?</p>",
        "id": 205488271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120712
    },
    {
        "content": "<p>or is it <code>&amp;'b Foo&lt;'c&gt;</code> ?</p>",
        "id": 205488280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120719
    },
    {
        "content": "<p>the declared type is <code>&amp;Field&lt;'_&gt;</code>; is the inner <code>'_</code> going to be the same as the lifetime attached to the <code>&amp;</code>?</p>",
        "id": 205488365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120744
    },
    {
        "content": "<p>oh wait maybe I misread your message</p>",
        "id": 205488407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120763
    },
    {
        "content": "<p>thought you wrote <code>&amp;'a Foo&lt;'a&gt;</code></p>",
        "id": 205488425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120774
    },
    {
        "content": "<p>because that's what is in the <code>impl</code> s of <code>Index</code> and <code>IndexMut</code></p>",
        "id": 205488449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120785
    },
    {
        "content": "<p>anyway</p>",
        "id": 205488450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120786
    },
    {
        "content": "<p>we are officially in the weeds here</p>",
        "id": 205488472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  can you take point on this issue?</p>",
        "id": 205488490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120801
    },
    {
        "content": "<p>well</p>",
        "id": 205488548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120830
    },
    {
        "content": "<p>i.e. can I assign <a href=\"https://github.com/rust-lang/rust/issues/74933\">#74933</a> to you niko?</p>",
        "id": 205488555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120833
    },
    {
        "content": "<p>go ahead for now</p>",
        "id": 205488613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120843
    },
    {
        "content": "<p>okay</p>",
        "id": 205488617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120845
    },
    {
        "content": "<p>I am hesitating beacuse I know I have pretty limited time over next few weeks</p>",
        "id": 205488629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120852
    },
    {
        "content": "<p>but I should be able to do a bit of digging</p>",
        "id": 205488645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596120860
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No P-critical issues for libs-impl this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No P-critical issues for T-rustdoc this time.</li>\n</ul>",
        "id": 205488713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120893
    },
    {
        "content": "<p>OMG we <em>still</em> haven't gotten to the performance report stuff</p>",
        "id": 205488743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120904
    },
    {
        "content": "<p>okay I'm skipping the unassigned P-high regressions</p>",
        "id": 205488769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120914
    },
    {
        "content": "<p>we can't skip this for two weeks in a row</p>",
        "id": 205488781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120921
    },
    {
        "content": "<h2>Performance logs</h2>",
        "id": 205488804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120930
    },
    {
        "content": "<p>what we wrote on the agenda was that we should revisit last weeks' report</p>",
        "id": 205488838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120944
    },
    {
        "content": "<p>and we should</p>",
        "id": 205488847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120947
    },
    {
        "content": "<p>but we should also keep in mind that some of the regressions from last week were addressed this week</p>",
        "id": 205488920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120968
    },
    {
        "content": "<p>so lets see</p>",
        "id": 205488921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120970
    },
    {
        "content": "<p>so what I'll do</p>",
        "id": 205488941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120978
    },
    {
        "content": "<p>is paste <em>both</em> reports</p>",
        "id": 205488952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120982
    },
    {
        "content": "<p>one after another</p>",
        "id": 205488953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120984
    },
    {
        "content": "<p>and we can try to discuss together</p>",
        "id": 205488967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596120989
    },
    {
        "content": "<p>and this is where we may also want to discuss that PR that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> mentioned but I cannot recall the PR # for at the moment and cannot take time to scroll up to find it</p>",
        "id": 205489028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121021
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74682\">https://github.com/rust-lang/rust/pull/74682</a></p>",
        "id": 205489042,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121031
    },
    {
        "content": "<h4>Last week</h4>",
        "id": 205489089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121056
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by njn</a></p>\n<p>This week was a disaster, perf-wise. 28 revisions checked. 7 regressions, several of them ranging from large to huge, many in rollups. Some additional regressions may have occurred in rollups that were masked by other regressions/improvements. 3 improvements, one of which was a reversion of a regression. Thanks for Mark-Simulacrum and eddyb for follow-up measurements and adding new tooling to help investigate regressions in rollups. A follow-up thread on Zulip is <a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Follow-up.20to.20the.20bad.20perf.20triage.20of.202020-07-21\">here</a>.</p>\n<p>In better news, rustdoc performance is now being benchmarked, thanks to the<br>\nefforts of <a href=\"https://github.com/rust-lang/rustc-perf/pull/675\">Joshua Nelson</a>.</p>\n<p>Triage done by njn. Revision range: <a href=\"https://perf.rust-lang.org/?start=9d09331e00b02f81c714b0c41ce3a38380dd36a2&amp;end=71384101ea3b030b80f7def80a37f67e148518b0&amp;absolute=false&amp;stat=instructions%3Au\">9d09331e00b02f81c714b0c41ce3a38380dd36a2..71384101ea3b030b80f7def80a37f67e148518b0</a>.</p>\n<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74461#issuecomment-660492867\">Rollup of 18 pull requests #74461</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=39d5a61f2e4e237123837f5162cc275c2fd7e625&amp;end=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02-v1&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 73.0% losses on many benchmarks.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416#issuecomment-660545238\">#74416</a><br>\n  is at fault; it was reverted in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, see below.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73441#issuecomment-660881380\">std: Switch from libbacktrace to gimli #73441</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=instructions:u\">instructions</a>,<br>\n<a href=\"https://perf.rust-lang.org/compare.html?start=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;end=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;stat=max-rss\">max-rss</a>):<br>\n  Up to 44.8% instruction increases on many benchmarks, and 5-10% max-rss increases on many benchmarks. Being reverted in <a href=\"https://github.com/rust-lang/rust/pull/74613\">#74613</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74113#issuecomment-661470398\">Support const args in type dependent paths (Take 2) #74113</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;end=7e11379f3b4c376fbb9a6c4d44f3286ccc28d149&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.5% losses on numerous benchmarks, which was expected.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74202#issuecomment-661475728\">Reduce the amount of interning and <code>layout_of</code> calls in const eval. #74202</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=4cd0ee9343da86d9770bf0a514a682d240e0dce8&amp;end=125c58caebc67c32ec45ac6c0581b596fd532082&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2% losses on one benchmark.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74543#issuecomment-661507295\">Rollup of 9 pull requests #74543</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=2c21a6f3a8b1c75c444b87fde5116853383b3fbd&amp;end=891e6fee572009ff2be4d4057fb33483610c36a7&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 12% losses on rustdoc for many benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74518#issuecomment-661498214\">Rollup of 4 pull requests #74518</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=48036804d2bc461b243c5d291b850e44bcca68ef&amp;end=d7f94516345a36ddfcd68cbdf1df835d356795c3&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 6.4% losses on rustdoc for two benchmarks.</p>\n</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">Rollup of 7 pull requests #74493</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=1fa54ad9680cc82e7301f8ed4e9b7402dfd6ce0e&amp;end=0701419e96d94e5493c7ebfcecb66511ab0aa778&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 33.5% improvements, at least partly due to the backout of<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74416\">#74416</a> in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74478\">#74478</a>, but it's also<br>\n  possible that another PR in that rollup <a href=\"https://github.com/rust-lang/rust/pull/74493#issuecomment-661521298\">caused a regression that was masked\n  by the improvement from the backout</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74214#issuecomment-661459141\">Change <code>SymbolName::name</code> to a <code>&amp;str</code>. #74214</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=c714eae0e3b4ba263c193d54f6e46bb9a1feb2cc&amp;end=d9e8d6290745a65025a3e082aea72fbe372292c6&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 2.5% wins on numerous benchmarks.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73566#issuecomment-661484787\">Don't run <code>everybody_loops</code> for rustdoc; instead ignore resolution errors #73566</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=6ee1b62c811a6eb68d6db6dfb91f66a49956749b&amp;end=5c9e5df3a097e094641f16dab501ab1c4da10e9f&amp;stat=instructions:u\">instructions</a>):<br>\n  Wins of up to 62.6% and losses of up to 8.5%, all on rustdoc builds. Overall,<br>\n  the improvements greatly outweigh the losses. (Landed in rollup<br>\n<a href=\"https://github.com/rust-lang/rust/pull/74408\">#74408</a>.)</p>\n</li>\n</ul>\n<h3>Notes</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74468#issuecomment-661371815\">Rollup of 11 pull requests #74468</a></p>\n<ul>\n<li>(<a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02-v1&amp;end=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;stat=instructions:u\">instructions</a>)</li>\n</ul>\n<p>This rollup was originally judged as responsible for a 10% regression in<br>\ninstrutions:u. However, since then, it has been determined that the likely cause of this regression is actually perf's <a href=\"https://github.com/rust-lang/rustc-perf/commit/048360c77a74244ba6e70d9b3f2bcd7779b8129f\">move</a> to using <code>x.py dist</code>-shipped std's rather than building one locally. Investigation into <em>why</em> this move caused a regression is as yet not done, but is being tracked in <a href=\"https://github.com/rust-lang/rustc-perf/issues/724\">rustc-perf#724</a>.</p>\n<p>Initially <a href=\"https://github.com/rust-lang/rust/pull/74069\">#74069</a> and/or <a href=\"https://github.com/rust-lang/rust/pull/72414\">#72414</a> were suspected as the cause of the regression, but further testing showed that to not be the case.</p>\n<ul>\n<li>The original rollup, <a href=\"https://github.com/rust-lang/rust/issues/74468\">#74468</a>, landed with a <a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02-v1&amp;end=7d31ffc1ac9e9ea356e896e63307168a64501b9d&amp;stat=instructions:u\">5-10% performance regression</a></li>\n<li>In <a href=\"https://github.com/rust-lang/rust/issues/74611\">#74611</a>, we tested as-if a rollup of <a href=\"https://github.com/rust-lang/rust/issues/74069\">#74069</a> and <a href=\"https://github.com/rust-lang/rust/issues/72414\">#72414</a> landed. (<a href=\"https://gist.github.com/Mark-Simulacrum/6893dff239d116947bca647f4f8128c7\">This</a> is the diff between d3df85 and cfade73) That yielded <a href=\"https://perf.rust-lang.org/compare.html?start=d3df8512d2c2afc6d2e7d8b5b951dd7f2ad77b02-v1&amp;end=cfade73820883adf654fe34fd6b0b03a99458a51\">identical results to the rollup</a>.</li>\n<li>We reverted <a href=\"https://github.com/rust-lang/rust/issues/74069\">#74069</a> in <a href=\"https://github.com/rust-lang/rust/issues/74611\">#74611</a>, this yielded <a href=\"https://perf.rust-lang.org/compare.html?start=e8b55a4ad230ebec762fdfc4f241ba98a98560af&amp;end=fcac11993ca055bbdc7683a2f6ed7b88a838fb0f&amp;stat=instructions:u\">neutral performance results</a>.</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74716\">#74716</a> then tried a revert of <a href=\"https://github.com/rust-lang/rust/issues/72414\">#72414</a> but this also yielded <a href=\"https://perf.rust-lang.org/compare.html?start=900869371e13cead086f4f9809419daa6a63cfaf&amp;end=193b2f77c9463ed7378c20bad843a9031489e215\">neutral performance results</a></li>\n</ul>\n<p>We have since opened a PR to re-land <a href=\"https://github.com/rust-lang/rust/issues/74069\">#74069</a>, as well: <a href=\"https://github.com/rust-lang/rust/issues/74802\">#74802</a>.</p>",
        "id": 205489095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121058
    },
    {
        "content": "<h4>This week</h4>",
        "id": 205489110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121067
    },
    {
        "content": "<p>Triage done by njn. Revision range: <a href=\"https://perf.rust-lang.org/?start=71384101ea3b030b80f7def80a37f67e148518b0&amp;end=efc02b03d18b0cbaa55b1e421d792f70a39230b2&amp;absolute=false&amp;stat=instructions%3Au\">71384101ea3b030b80f7def80a37f67e148518b0..efc02b03d18b0cbaa55b1e421d792f70a39230b2</a></p>\n<p>2 regressions, 1 improvement, none of them on rollups.</p>\n<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/72121#issuecomment-664685450\">Serialize span hygiene data #72121</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=c70986264b4d534e35992fc64ecd9139700b5071&amp;end=fa36f960687c41caf5b260ab7610ebd83a7860dd&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 3.5% losses on numerous benchmarks. This was expected, and the author and reviewer deemed it reasonable for the improvement in error messages.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/69749#issuecomment-664688297\">Polymorphization #69749</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=734233d29771869f824d8ddbaddabb90b3b68e03&amp;end=b52522ade1f6979a35b24087dadcf5ba5c981cbe&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 1.8% losses (ignoring the noisy <code>script-servo-2-opt</code> results), which was expected. (Hopefully extensions to this change will allow for compile time improvements in the future.) This feature was later disabled due to correctness issues, but the disabling was <a href=\"https://github.com/rust-lang/rust/pull/74633#issuecomment-664691511\">performance neutral</a>, oddly enough.</p>\n</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/74613#issuecomment-664682974\">Revert libbacktrace -&gt; gimli #74613</a><br>\n  (<a href=\"https://perf.rust-lang.org/compare.html?start=2bbfa02b1b15974d5772b520aa027bf79f8c248e&amp;end=371917ab218de72a625227ba6eed7e84e610a058&amp;stat=instructions:u\">instructions</a>):<br>\n  Up to 25.5% wins across many benchmarks. A reversion of one of last week's regressions. This PR may re-land because it's a big functional improvement and the regressions are mostly on very short-running benchmarks. If it does it will be after consideration and with intention.</li>\n</ul>",
        "id": 205489132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121078
    },
    {
        "content": "<p>So, my <em>impression</em> from reading the two reports</p>",
        "id": 205489214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121100
    },
    {
        "content": "<p>is that the two most significant sources of regression from last week</p>",
        "id": 205489236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121109
    },
    {
        "content": "<p>have now been addressed by reverting their associated PR's</p>",
        "id": 205489246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121116
    },
    {
        "content": "<p>Correct.</p>",
        "id": 205489288,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121137
    },
    {
        "content": "<p>so that may lead to conclusion that the two weeks combined are a wash. Well, maybe not a wash, there are still some regressions</p>",
        "id": 205489366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121174
    },
    {
        "content": "<p>Idea for <span class=\"user-mention\" data-user-id=\"120989\">@njn</span> if you aren't already doing this: In a situation like this, where we have such a bad week followed by a flurry of reverts ...</p>",
        "id": 205489449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121203
    },
    {
        "content": "<p>... it would probably be good for the performance report to include both the data for comparing the last week and for comparing the last two weeks, right?</p>",
        "id": 205489487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121222
    },
    {
        "content": "<p>(Maybe that's just adding extra effort when you are already making note of the improvements and tying them to the reversion PRs....)</p>",
        "id": 205489548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121263
    },
    {
        "content": "<p>anyway, lets maybe focus for moment on PR <a href=\"https://github.com/rust-lang/rust/issues/74682\">#74682</a></p>",
        "id": 205489588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121289
    },
    {
        "content": "<p>obviously meeting time is up. but I figure the people who <em>can</em> stick around can voice opinions on this</p>",
        "id": 205489633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121308
    },
    {
        "content": "<p>This re-lands the gimli change, and is a clear regression (up to 20%). However, it is also essentially a soundness fix -- libbacktrace has been a long standing \"black hole\" of code we <em>know</em> we can't trust but didn't have much choice about. Now we do :)</p>",
        "id": 205489732,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121339
    },
    {
        "content": "<p>namely this <a href=\"https://github.com/rust-lang/rust/pull/74682#issuecomment-665708347\">comment</a> from <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> : </p>\n<blockquote>\n<p>Is it possible to bump this sooner on the agenda? It was intended to land this just after the beta branch to give this maximal testing on nightly to weed out unexpected regressions. Landing after August 6th delays that by 3 weeks and halves the amount of nightly testing this is going to get.</p>\n<p>I'll reiterate I'm more than happy to revert this if the decision is that it shouldn't land. Given though that this is highly likely to land I continue to not understand the very strong reluctance to put this in tree.</p>\n</blockquote>",
        "id": 205489787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121364
    },
    {
        "content": "<p>That said, the wall-clock regressions are tiny -- a few milliseconds at most -- and all of the regressions come from crate loading.</p>",
        "id": 205489791,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121366
    },
    {
        "content": "<p>do we have any sense of whether that 20% affects only \"small\" tests or larger ones too?</p>",
        "id": 205489813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121376
    },
    {
        "content": "<p>Just small ones</p>",
        "id": 205489820,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121380
    },
    {
        "content": "<p>when we were discussing parallelization</p>",
        "id": 205489864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121405
    },
    {
        "content": "<p>we had a (semi-arbitary) threshold</p>",
        "id": 205489874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121408
    },
    {
        "content": "<p>The regressions are largely due to the (quite problematic) point of the trait evaluation code loading all structs in the universe</p>",
        "id": 205489879,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121410
    },
    {
        "content": "<p>I kind of forget what it was, but I think it was something like &gt;nms and &gt;n%</p>",
        "id": 205489921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121425
    },
    {
        "content": "<p>or maybe it was \"or\" :)</p>",
        "id": 205489954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121437
    },
    {
        "content": "<p>It doesn't fit any bar on the &gt;nms side</p>",
        "id": 205489956,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121439
    },
    {
        "content": "<p>IMO, we should land this -- it's a clear regression, but plausibly a fixable one, and it seems like a clear win functionality wise</p>",
        "id": 205490038,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121465
    },
    {
        "content": "<p>we've already heard from folks outside the rust teams that having a fully Rust libstd is really nice</p>",
        "id": 205490065,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121481
    },
    {
        "content": "<p>yeah, I think we should land it too</p>",
        "id": 205490088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121492
    },
    {
        "content": "<p>shame about the hit</p>",
        "id": 205490104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121498
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-07-30.20.2354818/near/205489879\">said</a>:</p>\n<blockquote>\n<p>The regressions are largely due to the (quite problematic) point of the trait evaluation code loading all structs in the universe</p>\n</blockquote>\n<p>I'd like to hear a bit more about this :)</p>",
        "id": 205490116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121503
    },
    {
        "content": "<p>(but not during this mtg presumably)</p>",
        "id": 205490127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121508
    },
    {
        "content": "<p>I guess you have some zulip links...</p>",
        "id": 205490134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121513
    },
    {
        "content": "<p>So the main benefit here</p>",
        "id": 205490142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121518
    },
    {
        "content": "<p>is not just fixing backtracing for ICE's on windows-gnu</p>",
        "id": 205490159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121531
    },
    {
        "content": "<p>we've historically had random segfaults and such from libbacktrace</p>",
        "id": 205490182,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121549
    },
    {
        "content": "<p>but rather the improvement of having Rust-based backtracing for others?</p>",
        "id": 205490189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121552
    },
    {
        "content": "<p>hmm okay</p>",
        "id": 205490195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121554
    },
    {
        "content": "<p>which we've sort of fixed but usually been unable to upstream effectively</p>",
        "id": 205490256,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121563
    },
    {
        "content": "<p>and as a large pile of C code, it's not like we expect those to be finished even after 5+ years of usage</p>",
        "id": 205490321,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121590
    },
    {
        "content": "<p>This also opens the door to things like split-dwarf</p>",
        "id": 205490375,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121620
    },
    {
        "content": "<p>which I expect to be a really nice win (e.g., we could ship debuginfo for the compiler and such then)</p>",
        "id": 205490410,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121635
    },
    {
        "content": "<p>Actually I'm with niko here: are there links to zulip conversations about this and the other PR, and the regressions associated with them, etc?</p>",
        "id": 205490445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121666
    },
    {
        "content": "<p>In terms of the investigation done into the causes of the regression?</p>",
        "id": 205490504,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121682
    },
    {
        "content": "<p>yeah, I think the motivation for me is that I know that libbacktrace has come up numerous times as a thorn in the side of various plans</p>",
        "id": 205490527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121684
    },
    {
        "content": "<p>I figure the best thing would be to provide links to those, if they exist, and gnerally just move forward on landing this PR</p>",
        "id": 205490532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121689
    },
    {
        "content": "<p>so having some control over that codebase I feel like is going to be a boon long term</p>",
        "id": 205490540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121694
    },
    {
        "content": "<p>though I admit this is kind of me pattern matching vague memories and not having precise ideas</p>",
        "id": 205490572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596121710
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74682#issuecomment-665376022\">https://github.com/rust-lang/rust/pull/74682#issuecomment-665376022</a> is a cachegrind instruction diff</p>",
        "id": 205490592,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121720
    },
    {
        "content": "<p>there's not been a ton of conversation here yet</p>",
        "id": 205490605,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121727
    },
    {
        "content": "<p>also I'm trying to understand this comment from alex: \"I'll reiterate I'm more than happy to revert this if the decision is that it shouldn't land. Given though that this is highly likely to land I continue to not understand the very strong reluctance to put this in tree.\"</p>",
        "id": 205490618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121736
    },
    {
        "content": "<p>that is, I just don't know how to parse \"X is highly likely to land &amp;&amp; there is reluctance to put X in tree\"</p>",
        "id": 205490676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121774
    },
    {
        "content": "<p>unless two occurrences of the word \"this\" is referring to different things in alex's remark?</p>",
        "id": 205490723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121796
    },
    {
        "content": "<p>no, they're the same</p>",
        "id": 205490791,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121810
    },
    {
        "content": "<p>the reluctance is due to performance though</p>",
        "id": 205490809,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121819
    },
    {
        "content": "<p>and Alex believes (rightly, I think) that the performance is sort of a \"fundamental\" problem with how rustc currently views the universe of crates -- i.e., dependencies have a (relatively small) cost even if largely unused, it's not viable for us to block on fixing that</p>",
        "id": 205490922,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121873
    },
    {
        "content": "<p>so alex's remark is, more simply stated, \"resistance is futile\" ? (I'm making a big joke here, I know alex isn't putting up that kind of attitude)</p>",
        "id": 205491050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121904
    },
    {
        "content": "<p>okay</p>",
        "id": 205491224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121933
    },
    {
        "content": "<p>basically \"let's get this in tree for functionality benefits and ecosystem testing ASAP, then we can fix performance later\"</p>",
        "id": 205491251,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121938
    },
    {
        "content": "<p>well, maybe fix performance -- there's not a \"known path\" of course, or we would've done it :)</p>",
        "id": 205491354,
        "sender_full_name": "simulacrum",
        "timestamp": 1596121964
    },
    {
        "content": "<p>right</p>",
        "id": 205491375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121971
    },
    {
        "content": "<p>okay well it sounds like everyone present is willing to accept the tradeoffs here</p>",
        "id": 205491419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596121991
    },
    {
        "content": "<p>So yeah, go ahead and land it</p>",
        "id": 205491442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596122000
    },
    {
        "content": "<p>and with that, I'm going to call this meeting over.</p>",
        "id": 205491470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596122018
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! Sorry for running way over time today.</p>",
        "id": 205491511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596122038
    },
    {
        "content": "<p>I can write up the comment summarizing this decision</p>",
        "id": 205491520,
        "sender_full_name": "simulacrum",
        "timestamp": 1596122040
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 205491576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596122049
    }
]