[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/HYT7NJFwS8q8Xp1h_CmfTQ?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:<br>\n<span class=\"user-group-mention silent\" data-user-group-id=\"1123\">WG-self-profile</span>  from <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> : anything to share?</p>",
        "id": 265915245,
        "sender_full_name": "apiraino",
        "timestamp": 1640265313
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , weekly triage meeting is starting now! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re present</p>",
        "id": 265924183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640271764
    },
    {
        "content": "<p>We’ll start off with ~5 minutes for</p>\n<h2>Announcements</h2>",
        "id": 265924215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640271791
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 265924276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640271835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> I suppose we knew we would have less attendance this week, though I didn’t know it would be this bad. :)</p>",
        "id": 265924461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640271962
    },
    {
        "content": "<p>Well lets go through the agenda nonetheless. It might be lighter this week than usual, so maybe we can get through it quickly and all go back to wrapping gifts et cetera. :)</p>",
        "id": 265924560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272023
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265924589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272039
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: 4 months ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 5 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 2 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: about 13 days ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: about 13 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 265924599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272047
    },
    {
        "content": "<p>(I augmented the text of <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> to make the proposal more concrete, in terms of the initial scope.)</p>",
        "id": 265924644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272070
    },
    {
        "content": "<p>(I plan to investigate the concrete implementation even without a second, if only to add more detail to the related zulip topic)</p>",
        "id": 265924741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272111
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Stabilize <code>-Z instrument-coverage</code> as <code>-C instrument-coverage</code>\" <a href=\"https://github.com/rust-lang/rust/pull/90132#issuecomment-992952031\">rust#90132</a></li>\n<li>\"Stabilize <code>-Z print-link-args</code> as <code>-C print-link-args</code>\" <a href=\"https://github.com/rust-lang/rust/pull/91606#issuecomment-992960418\">rust#91606</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265924753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272121
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Tracking issue for RFC 2115: In-band lifetime bindings\" <a href=\"https://github.com/rust-lang/rust/issues/44524#issuecomment-988260475\">rust#44524</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265925003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272274
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 265925013,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272281
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Relax priv-in-pub lint on generic bounds and where clauses of trait impls.\" <a href=\"https://github.com/rust-lang/rust/pull/90586#issuecomment-982939978\">rust#90586</a></li>\n<li>\"Make <code>rustdoc --passes</code> and <code>rustdoc --no-defaults</code> have no effect\" <a href=\"https://github.com/rust-lang/rust/issues/91714#issuecomment-990014921\">rust#91714</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265925024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> is there anything to report from <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> ? (Is it dormant?)</p>",
        "id": 265925040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272308
    },
    {
        "content": "<p>We've had a small amount of activity</p>",
        "id": 265925062,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640272321
    },
    {
        "content": "<p>The main thing is that we now report sizes of binary artifacts generated on per.rlo</p>",
        "id": 265925132,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640272357
    },
    {
        "content": "<p>Aside: would it make any sense to merge WG-self-profile with t-compiler/performance? Or are their concerns distinct enough that they deserve separte WG’s ?</p>",
        "id": 265925146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272369
    },
    {
        "content": "<p>That's not a bad idea. T-compiler/perf is the main consumer for self-profile data</p>",
        "id": 265925199,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640272409
    },
    {
        "content": "<p>(I don’t mind that they are separate. But it does seem like there is a lot of potential overlap of concerns)</p>",
        "id": 265925203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272411
    },
    {
        "content": "<p>Okay. Maybe we can talk more about that outside of this meeting</p>",
        "id": 265925230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272433
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 265925299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272464
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Re-introduce concept of projection cache 'completion'\" <a href=\"https://github.com/rust-lang/rust/pull/89831\">rust#89831</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n<li>fixes regression introduced in <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a> <a href=\"https://github.com/rust-lang/rust/pull/89831#issuecomment-941930652\">see comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265925311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272476
    },
    {
        "content": "<p>(oh good, I noticed that <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> is now here)</p>",
        "id": 265925345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272499
    },
    {
        "content": "<p>I'd like to hear <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>'s thoughts</p>",
        "id": 265925360,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272514
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> you had raised concerns about needing more tests for the “original incremental issues”</p>",
        "id": 265925375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272532
    },
    {
        "content": "<p>Tests are on master now</p>",
        "id": 265925386,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272547
    },
    {
        "content": "<p>Was this PR augmented with such tests? And/or did they land elsewhere?</p>",
        "id": 265925389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272550
    },
    {
        "content": "<p>They landed elsewhere, but that's a good point</p>",
        "id": 265925446,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272568
    },
    {
        "content": "<p>(were these the tests that <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> authored?)</p>",
        "id": 265925458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272574
    },
    {
        "content": "<p>They should be landing with the deduplication PR</p>",
        "id": 265925469,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272584
    },
    {
        "content": "<p>Yes, those</p>",
        "id": 265925474,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272586
    },
    {
        "content": "<p>okay</p>",
        "id": 265925475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272587
    },
    {
        "content": "<p>I’m currently inclined to beta approve and stable decline</p>",
        "id": 265925482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272599
    },
    {
        "content": "<p>but maybe we should remain open to a future stable nomination?</p>",
        "id": 265925495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272610
    },
    {
        "content": "<p>that, or leave it stable-nominated</p>",
        "id": 265925506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272627
    },
    {
        "content": "<p>hmm</p>",
        "id": 265925511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272630
    },
    {
        "content": "<p>I don’t know if we’ll see <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> today</p>",
        "id": 265925534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272654
    },
    {
        "content": "<p>If we didn't backport the dedupe PR, I don't know if we should backport this</p>",
        "id": 265925552,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272666
    },
    {
        "content": "<p>Beta is okay though I think</p>",
        "id": 265925559,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272676
    },
    {
        "content": "<p>Out of curiousity, anyone know why the descritpiion on this PR doesn’t link to any issues?</p>",
        "id": 265925617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272703
    },
    {
        "content": "<p>seems like a small oversight</p>",
        "id": 265925633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272720
    },
    {
        "content": "<p>easily fixed, let me see</p>",
        "id": 265925636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272724
    },
    {
        "content": "<p>This is a perf fix</p>",
        "id": 265925669,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272751
    },
    {
        "content": "<p>Sure, but there was at least one perf-related issue filed here</p>",
        "id": 265925682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272768
    },
    {
        "content": "<p>But I suppose it could still close an issue</p>",
        "id": 265925688,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272772
    },
    {
        "content": "<p>anyway I added a link</p>",
        "id": 265925689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272773
    },
    {
        "content": "<p>I think when it was opened it was not clear it if it resolved any issues or simply improved them</p>",
        "id": 265925696,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640272781
    },
    {
        "content": "<p>I don’t necessarily need for it to close an issue</p>",
        "id": 265925701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272787
    },
    {
        "content": "<p>I just wanted to easily jump from the PR description to the related issues</p>",
        "id": 265925713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272801
    },
    {
        "content": "<p>(this is something that I do think bugzilla gets somewhat right)</p>",
        "id": 265925769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272815
    },
    {
        "content": "<p>anyway</p>",
        "id": 265925772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272821
    },
    {
        "content": "<p>We don’t really have a huge number of T-compiler team members here</p>",
        "id": 265925797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272838
    },
    {
        "content": "<p>but we also don’t necessarily need them to approve beta backports, if the lead(s) are confident</p>",
        "id": 265925811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272858
    },
    {
        "content": "<p>I think we can postpone making a decision</p>",
        "id": 265925828,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272871
    },
    {
        "content": "<p>So I’m going to beta-accept this this week</p>",
        "id": 265925832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272876
    },
    {
        "content": "<p>and leave the stable-nomination on ther</p>",
        "id": 265925844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272884
    },
    {
        "content": "<p>That works too</p>",
        "id": 265925846,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272887
    },
    {
        "content": "<p>Sorry I'm late</p>",
        "id": 265925858,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640272900
    },
    {
        "content": "<p>I'm a little concerned about beta backporting that PR</p>",
        "id": 265925908,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640272925
    },
    {
        "content": "<p>oh goodie, lets talk then</p>",
        "id": 265925918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272936
    },
    {
        "content": "<p>what are risks?</p>",
        "id": 265925929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640272951
    },
    {
        "content": "<p>I re-added a different kind of 'completion' logic than we originally had</p>",
        "id": 265925942,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640272958
    },
    {
        "content": "<p>Fair</p>",
        "id": 265925969,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640272985
    },
    {
        "content": "<p>In order to work correctly with incremral compilation, we have to ensure that we handle EvaluatedToOkModuloRegions properly</p>",
        "id": 265925975,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640272992
    },
    {
        "content": "<p>I'm worried that theres a risk of new fingerprint ices</p>",
        "id": 265925993,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> are you concerned about outright breakage to type system? Or just hidden performance issues?</p>",
        "id": 265925996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273013
    },
    {
        "content": "<p>Ah okay</p>",
        "id": 265926000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you think you’ll gain more confidence with time for it to bake on nightly?</p>",
        "id": 265926073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273066
    },
    {
        "content": "<p>i.e. do you think you might be in favor of a beta backport in the future, or are you expecting to push for this to ride the trains all the way down?</p>",
        "id": 265926100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273093
    },
    {
        "content": "<p>Yes, I do. I think it would be better to a oid rushing any changes to the projection caching system</p>",
        "id": 265926102,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273096
    },
    {
        "content": "<p>On the other hand, the perf regressions that it fixed were pretty bad</p>",
        "id": 265926112,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273110
    },
    {
        "content": "<p>Right</p>",
        "id": 265926115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273114
    },
    {
        "content": "<p>and I know that this made the compiler essentially unusable for certain projects</p>",
        "id": 265926123,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273127
    },
    {
        "content": "<p>Maybe the right thing is to go back and look over our action items for gaining confidence in incremental stuff</p>",
        "id": 265926135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273140
    },
    {
        "content": "<p>and also the action items to encourage people to test the beta...</p>",
        "id": 265926149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273152
    },
    {
        "content": "<p>and in the meantime, hold off on beta backport approval</p>",
        "id": 265926192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273164
    },
    {
        "content": "<p>I think waiting a week is a decent compromise for now</p>",
        "id": 265926206,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640273182
    },
    {
        "content": "<p>let defer decision on beta and stable both for now then, yes</p>",
        "id": 265926210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273190
    },
    {
        "content": "<p>okay</p>",
        "id": 265926213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273194
    },
    {
        "content": "<p>next</p>",
        "id": 265926243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273232
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Disable LLVM newPM by default\" <a href=\"https://github.com/rust-lang/rust/pull/91190\">rust#91190</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, we want to beta-backport this or <a href=\"https://github.com/rust-lang/rust/pull/92110\">#92110</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265926254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273242
    },
    {
        "content": "<p>Either this one, or the PR which disables the specific kinds of problematic inlining in LLVM.</p>",
        "id": 265926353,
        "sender_full_name": "nagisa",
        "timestamp": 1640273291
    },
    {
        "content": "<p>Imo it makes more sense to backport this than a less-tested bug fix</p>",
        "id": 265926359,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640273301
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/pull/92110\">https://github.com/rust-lang/rust/pull/92110</a>)</p>",
        "id": 265926369,
        "sender_full_name": "nagisa",
        "timestamp": 1640273307
    },
    {
        "content": "<p>Yes I’m with <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> on this one</p>",
        "id": 265926391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273324
    },
    {
        "content": "<p>I’m thrilled that we’re on track to leave NewPM enabled on nightly, assuming PR <a href=\"https://github.com/rust-lang/rust/issues/92110\">#92110</a> lands reasonably soon</p>",
        "id": 265926426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273352
    },
    {
        "content": "<p>I'm okay with either.</p>",
        "id": 265926428,
        "sender_full_name": "nagisa",
        "timestamp": 1640273354
    },
    {
        "content": "<p>lets beta backport <a href=\"https://github.com/rust-lang/rust/issues/91190\">#91190</a> then</p>",
        "id": 265926439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273367
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Don't perform any new queries while reading a query result on disk\" <a href=\"https://github.com/rust-lang/rust/pull/91919\">rust#91919</a></li>\n</ul>",
        "id": 265926571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273457
    },
    {
        "content": "<p>this hasn’t landed on nightly yet</p>",
        "id": 265926604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273494
    },
    {
        "content": "<p>That's just adding an internal check</p>",
        "id": 265926614,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273505
    },
    {
        "content": "<p>nonetheless</p>",
        "id": 265926640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273522
    },
    {
        "content": "<p>It doesn't actually fix any incremental bugs - it catches code that could cause a bug. I don't think a backport is necessary</p>",
        "id": 265926683,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273541
    },
    {
        "content": "<p>/me skims the PR</p>",
        "id": 265926688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273545
    },
    {
        "content": "<p>Also, we would have to backport two other PRs for that PR to even work</p>",
        "id": 265926707,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-23.20.2354818/near/265926683\">said</a>:</p>\n<blockquote>\n<p>It doesn't actually fix any incremental bugs - it catches code that could cause a bug. I don't think a backport is necessary</p>\n</blockquote>\n<p>Oh, I interpreted your comment as being an argument <em>for</em> backport. :)</p>",
        "id": 265926712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273568
    },
    {
        "content": "<p>Michael's nomination says it's a \"correctness fix\"?</p>",
        "id": 265926715,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640273570
    },
    {
        "content": "<p>since it would trigger a crash on the unfixed issues in beta</p>",
        "id": 265926725,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273579
    },
    {
        "content": "<p>lets maybe defer discussion until <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is present, next week I hope?</p>",
        "id": 265926777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273635
    },
    {
        "content": "<p>We would need to consider backporting <a href=\"https://github.com/rust-lang/rust/pull/91924\">https://github.com/rust-lang/rust/pull/91924</a> before backporting that PR could work</p>",
        "id": 265926804,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273643
    },
    {
        "content": "<p>(or maybe two weeks from today, I’m not sure what <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> ’s schedule is like)</p>",
        "id": 265926830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273655
    },
    {
        "content": "<p>I think Michael is on PTO through the end of the year</p>",
        "id": 265926844,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640273666
    },
    {
        "content": "<p>okay so maybe it would be two weeks ...</p>",
        "id": 265926853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273681
    },
    {
        "content": "<p>and 1.58 is out on January 13th</p>",
        "id": 265926874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273692
    },
    {
        "content": "<p>that’s a little tight. but only if we actually wait until T-compiler meetings to have the discussion</p>",
        "id": 265926904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273712
    },
    {
        "content": "<p>if we/I remember to discuss this with <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> once they’re back, then its not so bad</p>",
        "id": 265926929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273730
    },
    {
        "content": "<p>and in any case, it sounds like <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ’s point is that we should not backport this</p>",
        "id": 265926941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273743
    },
    {
        "content": "<p>so I think we’ll be safe even if we don’t manage to catch <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> in time before the release</p>",
        "id": 265926965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273760
    },
    {
        "content": "<p>I think the AdtDef serialization is too big to backport (plus it's exposed other incr comp bugs)</p>",
        "id": 265927029,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273795
    },
    {
        "content": "<p>So I don't think we can backport either PR</p>",
        "id": 265927055,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640273823
    },
    {
        "content": "<p>I left a comment</p>",
        "id": 265927094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273857
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Backport LLVM changes to disable deferred inlining\" <a href=\"https://github.com/rust-lang/rust/pull/92110\">rust#92110</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, we want to beta-backport this or <a href=\"https://github.com/rust-lang/rust/pull/91190\">#91190</a></li>\n</ul>\n</li>\n</ul>",
        "id": 265927105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273865
    },
    {
        "content": "<p>we discussed this already; we’ll decline to backport for now</p>",
        "id": 265927112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273875
    },
    {
        "content": "<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> \"Re-introduce concept of projection cache 'completion'\" <a href=\"https://github.com/rust-lang/rust/pull/89831\">rust#89831</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>, mentions that is as risky as <a href=\"https://github.com/rust-lang/rust/pull/90423\">rust#90423</a> (beta backported approved, stable backport declined)</li>\n</ul>\n</li>\n</ul>",
        "id": 265927240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273964
    },
    {
        "content": "<p>we discussed this too</p>",
        "id": 265927244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273969
    },
    {
        "content": "<p>so we can move on</p>",
        "id": 265927248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273974
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 265927251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273978
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>None</li>\n</ul>",
        "id": 265927256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273984
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 265927261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273990
    },
    {
        "content": "<ul>\n<li>\"Extract rustc_mir_pretty crate from rustc_middle\" <a href=\"https://github.com/rust-lang/rust/pull/89636\">rust#89636</a><ul>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> 3 months ago</li>\n<li>PR author seems to need a little more help with squashing the perf. regression</li>\n</ul>\n</li>\n</ul>",
        "id": 265927269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640273996
    },
    {
        "content": "<p>so the thing I’m interested in here is the bootstrap timings</p>",
        "id": 265927436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274061
    },
    {
        "content": "<p>(at least, if we start under assumption that the regressions are relatively small and/or addressable)</p>",
        "id": 265927488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274082
    },
    {
        "content": "<p>(the regressions of 1.5% to 2% or so are on real code like cranelift-codegen and clap-rs. So that’s a minus.)</p>",
        "id": 265927587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274126
    },
    {
        "content": "<p>and the total bootstrap time didn’t change much: A: 783.465     B: 783.761  Total: 0.3<br>\n(0.038%)</p>",
        "id": 265927661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274165
    },
    {
        "content": "<p>It seems like we’d be unlikely to land this without more work. It doesn’t justify itself as it stands.</p>",
        "id": 265927735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274193
    },
    {
        "content": "<p>Is there any justification on better modularity?</p>",
        "id": 265927802,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274226
    },
    {
        "content": "<p>as in, its just cleaner code and that should serve as justification?</p>",
        "id": 265927825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274242
    },
    {
        "content": "<p>Yes</p>",
        "id": 265927863,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274249
    },
    {
        "content": "<p>(Genuine question, I haven't looked at the PR)</p>",
        "id": 265927870,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274262
    },
    {
        "content": "<p>its an argument. :)</p>",
        "id": 265927871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274262
    },
    {
        "content": "<p>If the motivation is \"split up for better compile times\", then I think the mark is missed</p>",
        "id": 265927911,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274307
    },
    {
        "content": "<p>also, am I wrong, or did the author end up decding not to add any inline attributes? I wonder if they did the experiments that <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> had asked for but didn’t do so, or if they did it, didn’t see actionable feedback from the experiments</p>",
        "id": 265927941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274329
    },
    {
        "content": "<p>If its \"this is cleaner\", then that's different</p>",
        "id": 265927957,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274343
    },
    {
        "content": "<blockquote>\n<p>This shrinks and removes dependencies from rustc_middle so I'm hoping this is beneficial for bootstrap times. It also just seems sensible and consistent.</p>\n</blockquote>",
        "id": 265927969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274353
    },
    {
        "content": "<p>seems like motivation was on both sides</p>",
        "id": 265927974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274358
    },
    {
        "content": "<p>Do we see a build time improvement with -j2 or higher?</p>",
        "id": 265928024,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640274368
    },
    {
        "content": "<p>lets leave this open for now</p>",
        "id": 265928043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274388
    },
    {
        "content": "<p>Iirc perf.rlo builds with -j1 for bootstrap times</p>",
        "id": 265928044,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1640274391
    },
    {
        "content": "<p>Gotta run. Might be back in 10 ish minutes</p>",
        "id": 265928055,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640274407
    },
    {
        "content": "<p>the main thing is to try to provide the PR author with feedback</p>",
        "id": 265928059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274408
    },
    {
        "content": "<p>-j1 with 2 threads per rustc (so only one rustc is running at a time)</p>",
        "id": 265928064,
        "sender_full_name": "simulacrum",
        "timestamp": 1640274411
    },
    {
        "content": "<p>lets keep moving</p>",
        "id": 265928098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274447
    },
    {
        "content": "<p>(if someone wants to volunteer to try to add a comment to the PR that summarizes the notes from this discussion, I’d appreciate it. Otherwise, I can try to do so.)</p>",
        "id": 265928123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274465
    },
    {
        "content": "<ul>\n<li>\"Store liveness in interval sets for region inference\" <a href=\"https://github.com/rust-lang/rust/pull/90637\">rust#90637</a><ul>\n<li>last review about 20 days ago from <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> asks (IIUC) if this can move forward</li>\n</ul>\n</li>\n</ul>",
        "id": 265928190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274495
    },
    {
        "content": "<p>what timing for <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> to chime in. :)</p>",
        "id": 265928211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274518
    },
    {
        "content": "<p>I think lqd indicated they'd get a chance to review it this week / next</p>",
        "id": 265928222,
        "sender_full_name": "simulacrum",
        "timestamp": 1640274530
    },
    {
        "content": "<p>okay</p>",
        "id": 265928234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274537
    },
    {
        "content": "<p>(over PM)</p>",
        "id": 265928235,
        "sender_full_name": "simulacrum",
        "timestamp": 1640274539
    },
    {
        "content": "<p>we’ll leave it with them for now, then</p>",
        "id": 265928244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274547
    },
    {
        "content": "<p>seems like exciting work!</p>",
        "id": 265928248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274552
    },
    {
        "content": "<p><span aria-label=\"thought\" class=\"emoji emoji-1f4ad\" role=\"img\" title=\"thought\">:thought:</span> : maybe the rust-timer comment should be reporting memory usage <em>and</em> instruction count summaries</p>",
        "id": 265928271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274591
    },
    {
        "content": "<p>(that aligns with thoughts from last Friday about rustc-perf reporting multiple metrics at once, though it would be presumably much much simpler to implement)</p>",
        "id": 265928341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274627
    },
    {
        "content": "<p>max-rss delta: <a href=\"https://perf.rust-lang.org/compare.html?start=f04a2f4b8e89eac1119061ea2055d33c97e618b4&amp;end=96dca710131d1af1e408fd40a74de0f5ecffd051&amp;stat=max-rss\">https://perf.rust-lang.org/compare.html?start=f04a2f4b8e89eac1119061ea2055d33c97e618b4&amp;end=96dca710131d1af1e408fd40a74de0f5ecffd051&amp;stat=max-rss</a></p>",
        "id": 265928359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274647
    },
    {
        "content": "<p>Interesting that unicode_normalization debug regressed</p>",
        "id": 265928487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274727
    },
    {
        "content": "<p>Anyway its cool</p>",
        "id": 265928517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274753
    },
    {
        "content": "<p>crap, spend too long on this sectino again</p>",
        "id": 265928544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274774
    },
    {
        "content": "<p>moving along</p>",
        "id": 265928547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274775
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">78 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">52 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 52 P-high, 82 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 265928556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274781
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 265928567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274790
    },
    {
        "content": "<ul>\n<li>\"Huge compile-time regression in beta/nightly\" <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> provided PR <a href=\"https://github.com/rust-lang/rust/pull/92110\">rust#92110</a> to beta-backport LLVM changes to fix this</li>\n</ul>\n</li>\n</ul>",
        "id": 265928573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274797
    },
    {
        "content": "<p>(discussed above, and is under control)</p>",
        "id": 265928585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274804
    },
    {
        "content": "<ul>\n<li>\"Compile-time regression between 1.56.1 and 1.57.0 for deeply nested decorator types\" <a href=\"https://github.com/rust-lang/rust/issues/91598\">rust#91598</a><ul>\n<li>compilation time regression partially improved in latest nightlities</li>\n</ul>\n</li>\n</ul>",
        "id": 265928597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274811
    },
    {
        "content": "<p>(should we be trying to identify one or more backport candidate PRs for <a href=\"https://github.com/rust-lang/rustZ/issues/91598\">rustZ#91598</a> ?)</p>",
        "id": 265928616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274838
    },
    {
        "content": "<p>oh, wait, its things like PR <a href=\"https://github.com/rust-lang/rust/issues/91186\">#91186</a> … lets see</p>",
        "id": 265928665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> should we be considering PR <a href=\"https://github.com/rust-lang/rust/issues/91186\">#91186</a> for beta backport?</p>",
        "id": 265928779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274946
    },
    {
        "content": "<p>oh, never mind, it hasn’t landed in nightly yet</p>",
        "id": 265928839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274974
    },
    {
        "content": "<p>so let it wait</p>",
        "id": 265928844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274979
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 265928857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640274995
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 265928864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275002
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-12-21.md\">triage logs for 2021-12-21</a></p>\n</blockquote>\n<p>Unfortunately a change introduced in <a href=\"https://github.com/rust-lang/rust/pull/89836\">rust-lang/rust#89836</a> has made performance across different compiler artifacts much more variable by embedding compiler version information (including a git commit hash) in demangled symbol names. This means that even if two compiler artifacts are built from the same exact source code (with only the git commit changed), the compiler will have slightly different performance characteristics. This makes comparisons across pull requests virtually impossible.</p>\n<p>The compiler team is still deciding what to do to handle this, but in the mean time, performance testing is largely broken. This issue is currently being tracked in <a href=\"https://github.com/rust-lang/rustc-perf/issues/1126\">rust-lang/rustc-perf#1126</a>.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=404c8471aba60c2d837fa728e7c729a0f52d5830&amp;end=3d57c61a9e04dcd3df633f41142009d6dcad4399&amp;absolute=false&amp;stat=instructions%3Au\">404c8471aba60c2d837fa728e7c729a0f52d5830..3d57c61a9e04dcd3df633f41142009d6dcad4399</a></p>\n<p>2 Regressions, 2 Improvements, 23 Mixed; 9 of them in rollups<br>\n23 Untriaged Pull Requests<br>\n38 comparisons made in total</p>",
        "id": 265928870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275010
    },
    {
        "content": "<p>Maybe that can be disabled for perf?</p>",
        "id": 265928903,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275055
    },
    {
        "content": "<p>Ah that's mentioned in the issue</p>",
        "id": 265928959,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275085
    },
    {
        "content": "<p>We performance test what we release</p>",
        "id": 265928962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275086
    },
    {
        "content": "<p>(in theory)</p>",
        "id": 265928975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275096
    },
    {
        "content": "<p>but yes, we have a workaround</p>",
        "id": 265928985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275107
    },
    {
        "content": "<p>The open question I think is whether to revert <a href=\"https://github.com/rust-lang/rust/issues/89836\">rust#89836</a></p>",
        "id": 265928999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275123
    },
    {
        "content": "<p>but we don’t have time today to discuss that</p>",
        "id": 265929020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275144
    },
    {
        "content": "<p>And it can wait until next week</p>",
        "id": 265929031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275151
    },
    {
        "content": "<p>I plan to file an issue, I think, or a pr for that</p>",
        "id": 265929044,
        "sender_full_name": "simulacrum",
        "timestamp": 1640275164
    },
    {
        "content": "<p>okay thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 265929051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275169
    },
    {
        "content": "<p>I’ll just go ahead and cut-and-paste the remainder of the performance triage report. (The rest of the agenda after that is a no-op)</p>",
        "id": 265929223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275242
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Update Clippy <a href=\"https://github.com/rust-lang/rust/issues/92036\">#92036</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2595d038273a4c7746320efd06200764f99bd760&amp;end=34dc0d0f249a33fda18755991b4e73ad786d2b19&amp;stat=instructions:u\">instruction counts</a> (up to 133.5% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Largely caused by a <a href=\"https://github.com/rust-lang/rustc-perf/pull/1123\">change in how we're doing benchmarking</a> that should not impact any other PRs other than this one.</li>\n<li>Luckily we can generally rely on updating Clippy as having no effect whatsoever on compiler performance.</li>\n</ul>\n<p>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/92059\">#92059</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=dde825db464b08d6f572766579dfb629b837368c&amp;end=208ced64db20bd947a2ba5c90f37936fd3ab352b&amp;stat=instructions:u\">instruction counts</a> (up to 20.0% on <code>incr-unchanged</code> builds of <code>encoding</code>)</li>\n</ul>",
        "id": 265929232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275247
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91962\">#91962</a></li>\n<li>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/92099\">#92099</a></li>\n</ul>",
        "id": 265929247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275253
    },
    {
        "content": "<p>Lucked out on that clippy PR</p>",
        "id": 265929292,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275283
    },
    {
        "content": "<p>Heh, the Mixed section is too long for Zulip</p>",
        "id": 265929304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275291
    },
    {
        "content": "<p>lets <em>not</em> transcribe that then</p>",
        "id": 265929312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275297
    },
    {
        "content": "<p>A first one to land after the change</p>",
        "id": 265929320,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275302
    },
    {
        "content": "<p>The Mixed section is a nightmare</p>",
        "id": 265929322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275304
    },
    {
        "content": "<p>link instead: <a href=\"https://hackmd.io/HYT7NJFwS8q8Xp1h_CmfTQ?both#Mixed\">https://hackmd.io/HYT7NJFwS8q8Xp1h_CmfTQ?both#Mixed</a></p>",
        "id": 265929401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275337
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-compiler-nominated\">T-compiler</a></p>\n<ul>\n<li>No <code>I-compiler-nominated</code> issues at this time</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>\n<p><span aria-label=\"holiday tree\" class=\"emoji emoji-1f384\" role=\"img\" title=\"holiday tree\">:holiday_tree:</span> :)</p>",
        "id": 265929418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275352
    },
    {
        "content": "<p>Okay, great meeting everyone! Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 265929435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275364
    },
    {
        "content": "<p>Happy holidays everyone :)</p>",
        "id": 265929461,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275390
    },
    {
        "content": "<p>what else we got, <span aria-label=\"champagne\" class=\"emoji emoji-1f37e\" role=\"img\" title=\"champagne\">:champagne:</span></p>",
        "id": 265929565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275452
    },
    {
        "content": "<p>but yeah, have a great holiday! I hope you all are healthy and happy, and get some time to reflect on life beyond Rust. :)</p>",
        "id": 265929600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640275502
    },
    {
        "content": "<p>I'm online for a little bit now. <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>, <a href=\"https://github.com/rust-lang/rust/pull/91924\">https://github.com/rust-lang/rust/pull/91924</a> has exposed other bugs? In that case I definitely agree that we don't want to backport that PR and <a href=\"https://github.com/rust-lang/rust/pull/91919\">https://github.com/rust-lang/rust/pull/91919</a>.</p>",
        "id": 265929658,
        "sender_full_name": "mw",
        "timestamp": 1640275560
    },
    {
        "content": "<p>(btw can someone add me to the zulip list for T-compiler/meetings so I stop missing the pings)</p>",
        "id": 265929661,
        "sender_full_name": "Jack Huey",
        "timestamp": 1640275561
    },
    {
        "content": "<p>done</p>",
        "id": 265930257,
        "sender_full_name": "simulacrum",
        "timestamp": 1640276050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-23.20.2354818/near/265926683\">said</a>:</p>\n<blockquote>\n<p>It doesn't actually fix any incremental bugs - it catches code that could cause a bug. I don't think a backport is necessary</p>\n</blockquote>\n<p>I don't think this is completely accurate. In addition to adding a check, <a href=\"https://github.com/rust-lang/rust/pull/91919\">#91919</a> also makes the compiler open a new dep-tracking context while decoding cached query results (instead of using the existing context from a random \"parent\" query). This is the root cause of many of incr. comp. bugs that have been reported for 1.57. The other PR (<a href=\"https://github.com/rust-lang/rust/pull/91924\">#91924</a>) does not fix the root cause, it just removes the currently only case that hits the faulty code path.</p>",
        "id": 265931434,
        "sender_full_name": "mw",
        "timestamp": 1640276895
    },
    {
        "content": "<p>Having a new TaskDeps doesn't do anything unless we try to add new edges, iirc</p>",
        "id": 265931493,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640276941
    },
    {
        "content": "<p>Now that we've fixed the two cases where edges were getting added during deserialization, I think the fresh TaskDeps will just prevent us from adding any new query calls during deserialization</p>",
        "id": 265931564,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640276991
    },
    {
        "content": "<p>Yes, that's basically what I'm saying: preventing the addition of new edges (either at all, or to the existing taskdeps context of the parent query) is the fix for the root cause.</p>",
        "id": 265931821,
        "sender_full_name": "mw",
        "timestamp": 1640277185
    },
    {
        "content": "<p>It will only do something if there's other incorrect code, though - adding it won't change anything if of our query invocations are already correct</p>",
        "id": 265932200,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640277456
    },
    {
        "content": "<p>so I don't think it would be useful to backport</p>",
        "id": 265932285,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640277515
    },
    {
        "content": "<p>Yes, if the question is specifically about backporting, I agree: in the current form it would only turn silent dependency tracking errors into ICEs. One could argue that only backporting the AdtDef PR is sufficient.</p>",
        "id": 265932754,
        "sender_full_name": "mw",
        "timestamp": 1640277882
    },
    {
        "content": "<p>(which seems to be prevented by other issues)</p>",
        "id": 265932796,
        "sender_full_name": "mw",
        "timestamp": 1640277908
    },
    {
        "content": "<p>There are at least two issues that have been exposed by the AdtDef serialization change, though</p>",
        "id": 265932902,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640277979
    },
    {
        "content": "<p>Yeah, I saw :(</p>",
        "id": 265932918,
        "sender_full_name": "mw",
        "timestamp": 1640278003
    },
    {
        "content": "<p>The foreign SourceFile decoding issue <a href=\"https://github.com/rust-lang/rust/pull/92175\">https://github.com/rust-lang/rust/pull/92175</a> and the span hashing issue <a href=\"https://github.com/rust-lang/rust/pull/92210\">https://github.com/rust-lang/rust/pull/92210</a></p>",
        "id": 265932947,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640278032
    },
    {
        "content": "<p>So, as per last weeks' <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-16.20.2354818/near/265176755\">poll</a>, next week we will have our meeting :)</p>\n<p>Draft for the agenda available at:<br>\n<a href=\"https://hackmd.io/WU5tkvweQR2rc1JfUmvnlQ?view\">https://hackmd.io/WU5tkvweQR2rc1JfUmvnlQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1172\">WG-async-foundations</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"692\">WG-traits</span>  by  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n</ul>",
        "id": 265934219,
        "sender_full_name": "apiraino",
        "timestamp": 1640278865
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-23.20.2354818/near/265928271\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"thought\" class=\"emoji emoji-1f4ad\" role=\"img\" title=\"thought\">:thought:</span> : maybe the rust-timer comment should be reporting memory usage <em>and</em> instruction count summaries</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/issues/988\">https://github.com/rust-lang/rustc-perf/issues/988</a></p>",
        "id": 266265120,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640703062
    }
]