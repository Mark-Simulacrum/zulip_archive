[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-11-19T15:00:00Z\">2020-11-19T15:00:00+00:00</time></p>",
        "id": 217199362,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735036
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 217199380,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735045
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/qJb6ljabRaGixAnWNwp1TA?view\">meeting agenda</a></p>",
        "id": 217199398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735056
    },
    {
        "content": "<p>We will have checkins from <em>WG-self-profile</em> and <em>WG-traits</em></p>",
        "id": 217199454,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>?</p>",
        "id": 217199535,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735126
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> or <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>?</p>",
        "id": 217199581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735156
    },
    {
        "content": "<p>Sure I'll fill in something</p>",
        "id": 217199614,
        "sender_full_name": "Jack Huey",
        "timestamp": 1605735180
    },
    {
        "content": "<p>if someone wants to nominate an issue to move it forward or just to discuss I guess it may be a good time to do so</p>",
        "id": 217199867,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605735333
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 48 minutes</p>",
        "id": 217273988,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605795137
    },
    {
        "content": "<p><a href=\"https://hackmd.io/qJb6ljabRaGixAnWNwp1TA?view\">Check out the meeting agenda</a></p>",
        "id": 217274015,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605795149
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 217280616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798015
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>",
        "id": 217280645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798029
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 217280660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798035
    },
    {
        "content": "<ul>\n<li>Rust 1.48 is <del>going to be</del> released today!!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 217280681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798047
    },
    {
        "content": "<p>(is released <a href=\"https://blog.rust-lang.org/2020/11/19/Rust-1.48.html\">https://blog.rust-lang.org/2020/11/19/Rust-1.48.html</a>)</p>",
        "id": 217280694,
        "sender_full_name": "simulacrum",
        "timestamp": 1605798053
    },
    {
        "content": "<ul>\n<li>Tomorrow we have our <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">planning meeting</a> at <time datetime=\"2020-11-20T15:00:00Z\">2020-11-20T15:00:00-00:00</time></li>\n</ul>",
        "id": 217280699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798054
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Rename <code>rustc_ty</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/387\">compiler-team#387</a></li>\n<li>\"Move query implementation outside rustc_middle\" <a href=\"https://github.com/rust-lang/compiler-team/issues/388\">compiler-team#388</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217280761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798083
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217280790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798101
    },
    {
        "content": "<p>(I'm checking with <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> about whether <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a> is obsoleted by <a href=\"https://github.com/rust-lang/compiler-team/issues/388\">compiler-team#388</a>. I will probably be closing <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a> under that assumption.)</p>",
        "id": 217280882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798131
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217280924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798150
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 217280955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798164
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"TypeVisitor: do not hard-code a <code>ControlFlow&lt;()&gt;</code> result\" <a href=\"https://github.com/rust-lang/compiler-team/issues/383\">compiler-team#383</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217280987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798183
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"Add checking for no_mangle to unsafe_code lint\" <a href=\"https://github.com/rust-lang/rust/pull/72209\">rust#72209</a></li>\n<li>[T-libs] \"Implement Error for &amp;(impl Error)\" <a href=\"https://github.com/rust-lang/rust/pull/75180\">rust#75180</a></li>\n<li>[T-libs] \"Stabilize clamp\" <a href=\"https://github.com/rust-lang/rust/pull/77872\">rust#77872</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217281019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798193
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 217281037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798205
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:</p>\n<blockquote>\n<p>Things have settled down a bit since the last checkin but we still have a few items to highlight:<br>\n</p>\n</blockquote>",
        "id": 217281098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798234
    },
    {
        "content": "<p>oh, whoops</p>",
        "id": 217281254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798294
    },
    {
        "content": "<p>hmm</p>",
        "id": 217281262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798297
    },
    {
        "content": "<p>(reposting as one big msg so that markdown renders properly)</p>",
        "id": 217281364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798345
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:</p>\n<blockquote>\n<p>Things have settled down a bit since the last checkin but we still have a few items to highlight:</p>\n<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> has opened their PR for hardware performance counter support in <code>measureme</code> [measureme#143]. They've also written an extensive and fascinating post about this project [here][eddyb-post].</li>\n<li><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> contributed a fix that allows us to profile extremely large crates like <code>rustc_middle</code>. Previously, this would trip an internal assertion and ICE the compiler [measureme#137].</li>\n<li>@_<strong>wesleywiser</strong> added a function that allows recording multiple arguments per event, not just a single one [measureme#138]. This is used downstream in rustc to record both CGU names as well as the estimated size during codegen [rustc#78702].</li>\n<li>@_<strong>Mark-Simulacrum</strong> contributed a fix to allow perf.rlo to continue processing the new storage format in-memory in the web server [measureme#142].</li>\n<li>Finally, we shipped measureme 9.0 with all of the above improvements and fixes <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>\n</blockquote>\n<p>[measureme#137]: <a href=\"https://github.com/rust-lang/measureme/pull/137\">https://github.com/rust-lang/measureme/pull/137</a><br>\n[measureme#138]: <a href=\"https://github.com/rust-lang/measureme/pull/138\">https://github.com/rust-lang/measureme/pull/138</a><br>\n[measureme#142]: <a href=\"https://github.com/rust-lang/measureme/pull/142\">https://github.com/rust-lang/measureme/pull/142</a><br>\n[measureme#143]: <a href=\"https://github.com/rust-lang/measureme/pull/143\">https://github.com/rust-lang/measureme/pull/143</a><br>\n[rustc#78702]: <a href=\"https://github.com/rust-lang/rust/pull/78702\">https://github.com/rust-lang/rust/pull/78702</a><br>\n[eddyb-post]: <a href=\"https://hackmd.io/sH315lO2RuicY-SEt7ynGA?view\">https://hackmd.io/sH315lO2RuicY-SEt7ynGA?view</a></p>",
        "id": 217281406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798362
    },
    {
        "content": "<p>(I normally <em>do</em> post these things as one big message, but for some reason I wanted to break it up today, probably because I wanted to call attention to some of those individual bullets)</p>",
        "id": 217281506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798392
    },
    {
        "content": "<p>Oh that didn't work either.</p>",
        "id": 217281550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798408
    },
    {
        "content": "<p><strong>sigh</strong></p>",
        "id": 217281562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798413
    },
    {
        "content": "<p>Okay well go checkout the agenda if you like rendered markdown</p>",
        "id": 217281588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798425
    },
    {
        "content": "<p>(someone is fixing it in parallel now)</p>",
        "id": 217281595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798429
    },
    {
        "content": "<p>(fixed)</p>",
        "id": 217281629,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1605798446
    },
    {
        "content": "<p>the chalk update has teh same problem</p>",
        "id": 217281659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798457
    },
    {
        "content": "<p>I do have one announcement</p>",
        "id": 217281684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798469
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span> checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>:</p>\n<blockquote>\n<p>Most of the work has been focused around aligning chalk-ir and rustc, with the eventual goal of extracting out a shared type library.</p>\n<p>On Chalk side:<br>\n- Add support for <code>Variance</code> (<a href=\"https://github.com/rust-lang/chalk/pull/609\">chalk#609</a>)<br>\n- Rename <code>TyData</code> to <code>TyKind</code> (<a href=\"https://github.com/rust-lang/chalk/pull/628\">chalk#628</a>)<br>\n- Remove <code>TypeName</code> and merge into <code>TyKind</code> (<a href=\"https://github.com/rust-lang/chalk/pull/629\">chalk#629</a>)<br>\n- Remove <code>TargetInterner</code> (<a href=\"https://github.com/rust-lang/chalk/pull/648\">chalk#648</a>)<br>\n- Use <code>ControlFlow</code> and <code>BreakTy</code> for <code>Visitor</code> (<a href=\"https://github.com/rust-lang/chalk/pull/645\">chalk#645</a> and <a href=\"https://github.com/rust-lang/chalk/pull/651\">chalk#651</a>)<br>\n- Add Empty and Erased regions (<a href=\"https://github.com/rust-lang/chalk/pull/650\">chalk#650</a>)<br>\n- Many bug fixes</p>\n<p>On rustc side:<br>\n- Continued work on tracking late-bound vars<br>\n- Chalk updates<br>\n- Initial work on removing <code>ty::Param</code></p>\n</blockquote>",
        "id": 217281774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798499
    },
    {
        "content": "<ul>\n<li>as I mentioned in <a class=\"stream-topic\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta/topic/review.20active.20groups\">#t-compiler/wg-meta &gt; review active groups</a>, I plan to do a review  of the active groups and maybe propose a few other edits to the set of working group metadata and so forth. For example I want to remove the <a class=\"stream\" data-stream-id=\"187679\" href=\"/#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc\">#t-compiler/wg-parallel-rustc</a> which is inactive. If you have thoughts on inactive groups or other things please feel free to pop in on that topic and leave thoughts.</li>\n</ul>",
        "id": 217281811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798520
    },
    {
        "content": "<p>to elaborate a bit on the chalk update:</p>",
        "id": 217281958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798579
    },
    {
        "content": "<p>the main thing we're working towards is trying to realize the \"shared library for types\" plan that has been kicking around for a while</p>",
        "id": 217281991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798594
    },
    {
        "content": "<p>If anyone wants to add another announcement, privmsg me during the meeting and I'll try to allocate time at the end for it</p>",
        "id": 217282040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798604
    },
    {
        "content": "<p>this is involving a fair bit of \"realignment\" to bring chalk-rustc together; mostly we've been adapting chalk, but there are some changes we're investigating on the rustc side of things</p>",
        "id": 217282073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798618
    },
    {
        "content": "<p>(i.e., where it seems like chalk handles things more uniformly or better, and we want to see if that approach will work \"at scale\")</p>",
        "id": 217282116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798638
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> !</p>",
        "id": 217282136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798649
    },
    {
        "content": "<p>If there's a specific zulip topic to discuss that work, maybe link it</p>",
        "id": 217282190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798673
    },
    {
        "content": "<p>but lets move along to next agenda items</p>",
        "id": 217282212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798682
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No beta nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 217282230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-19.20.2354818/near/217282190\">said</a>:</p>\n<blockquote>\n<p>If there's a specific zulip topic to discuss that work, maybe link it</p>\n</blockquote>\n<p>it's just <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> in general I guess</p>",
        "id": 217282248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798701
    },
    {
        "content": "<p>/me is so happy on release day, since it (tends to) mean no beta-noms</p>",
        "id": 217282285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798716
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 217282338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798725
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 217282364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798739
    },
    {
        "content": "<ul>\n<li>\"Don't leak return value after panic in drop\" <a href=\"https://github.com/rust-lang/rust/pull/78373\">rust#78373</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> </li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>Reviewwed by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></li>\n<li>Closes <a href=\"https://github.com/rust-lang/rust/issues/47949\">rust#47949</a>, a <code>P-medium</code> unsoundness by which panics in destructors could cause the return value to be leaked</li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has <a href=\"https://github.com/rust-lang/rust/pull/78373#issuecomment-726470113\">some comments</a> w.r.t. the perf regression (~5% acceptable being an unsoundness bug) but perhaps not rush a merge in this release cycle.</li>\n</ul>\n</li>\n</ul>",
        "id": 217282393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798754
    },
    {
        "content": "<p>to be clear, my comment was trying to say that we should merge it early in the next release cycle, which has now started</p>",
        "id": 217282447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798782
    },
    {
        "content": "<p>(at least, I assume the beta is already cut; is that right, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ?)</p>",
        "id": 217282473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798792
    },
    {
        "content": "<p>yes, last friday indeed</p>",
        "id": 217282496,
        "sender_full_name": "simulacrum",
        "timestamp": 1605798801
    },
    {
        "content": "<p>I agree with the assessment that we should fix the soundness bug and then address perf later</p>",
        "id": 217282509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798813
    },
    {
        "content": "<p>IMO we should definitely merge</p>",
        "id": 217282643,
        "sender_full_name": "simulacrum",
        "timestamp": 1605798862
    },
    {
        "content": "<p>I probably need to re-read the example of why this is unsound a few more times</p>",
        "id": 217282649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798865
    },
    {
        "content": "<p>i really should have examples like this built into my brain</p>",
        "id": 217282668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798873
    },
    {
        "content": "<p>but yeah, lets merge asap</p>",
        "id": 217282709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798889
    },
    {
        "content": "<p>in fact</p>",
        "id": 217282711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798889
    },
    {
        "content": "<p>/me goes to r+</p>",
        "id": 217282720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798892
    },
    {
        "content": "<p>well, I guess the whole point of bringing it up at the meeting</p>",
        "id": 217282759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798903
    },
    {
        "content": "<p>is to give people a chance to object</p>",
        "id": 217282776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798909
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 217282790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798914
    },
    {
        "content": "<p>the ultimate race condition is happening now</p>",
        "id": 217282824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-19.20.2354818/near/217282649\">said</a>:</p>\n<blockquote>\n<p>I probably need to re-read the example of why this is unsound a few more times</p>\n</blockquote>\n<p>it's not so much <em>unsound</em> as \"not abiding by the specification\", I think -- or at least the specification as I think it should be written :)</p>",
        "id": 217282832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798936
    },
    {
        "content": "<p>yeah we need to hammer down these things</p>",
        "id": 217282869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605798953
    },
    {
        "content": "<p>in other words, we get to define when drop runs, and I think it should run here</p>",
        "id": 217282876,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798959
    },
    {
        "content": "<p>(though I forget the precise details of the situation, would have to review <a href=\"https://github.com/rust-lang/rust/issues/47949\">#47949</a>)</p>",
        "id": 217282976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605798990
    },
    {
        "content": "<p>I just get nervous any time I hear \"well drop <em>has</em> to run here or else you get unsoundness\"</p>",
        "id": 217283034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799017
    },
    {
        "content": "<p>because that sort of thinking was how we got that bug in the old scoped threads API</p>",
        "id": 217283069,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799031
    },
    {
        "content": "<p>I think it's like -- there is unsafe code that we would like to be legal which would be invalidated</p>",
        "id": 217283085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799037
    },
    {
        "content": "<p>(where it was possible to force a value to be leaked via a ref-count cycle)</p>",
        "id": 217283129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799061
    },
    {
        "content": "<p>anyway</p>",
        "id": 217283145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799069
    },
    {
        "content": "<p>sounds like no one is objecting</p>",
        "id": 217283158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799075
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 217283283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799123
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">3 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">46 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">30 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 3 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">2 P-critical, 0 P-high, 7 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 22 P-high, 67 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 217283299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799133
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 217283335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799145
    },
    {
        "content": "<ul>\n<li>\"Upgrade to LLVM11 caused a codegen regression on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/78283\">rust#78283</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482008\">Discussed last week</a></li>\n<li>opened by <span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span></li>\n<li>assigned to  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> </li>\n<li>Firefox code that used to work on Rust 1.46 started to fail after upgrading to LLVM 11</li>\n<li>Affects only MSVC</li>\n<li><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> suggests could be related to <a href=\"https://github.com/rust-lang/rust/issues/74498\">rust#74498</a></li>\n<li><span class=\"user-mention\" data-user-id=\"133260\">@Jeff Muizelaar</span> suggests to be related to LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a>, provides a <a href=\"https://github.com/rust-lang/rust/issues/78283#issuecomment-720156273\">minimal repro</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has patch in progress for LLVM bug <a href=\"https://bugs.llvm.org/show_bug.cgi?id=46943\">#46943</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217283380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799163
    },
    {
        "content": "<p>(is <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> around? I'd like to allocate time to speak with them synchronously re my patch here)</p>",
        "id": 217283513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799211
    },
    {
        "content": "<p>(but not during this mtg, of course)</p>",
        "id": 217283545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799226
    },
    {
        "content": "<ul>\n<li>\"No error reported when a generic parameter doesn't meet the requirement of an associated type\" <a href=\"https://github.com/rust-lang/rust/issues/78893\">rust#78893</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-11-12.20.2354818/near/216482210\">Discussed last week</a>, and <a href=\"#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type\">a topic was created to discuss it on Zulip</a></li>\n<li>Nightly regression</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/73905\">rust#73905</a> cc <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n</ul>\n</li>\n</ul>",
        "id": 217283592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799246
    },
    {
        "content": "<p>(sorry, I should explicitly said: I think <a href=\"https://github.com/rust-lang/rust/issues/78283\">rust#78283</a> is under control)</p>",
        "id": 217283659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799272
    },
    {
        "content": "<p>hmm</p>",
        "id": 217283755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799312
    },
    {
        "content": "<p>I forgot about this</p>",
        "id": 217283760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799316
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> , do you think you'll have time to implement the old behavior atop the current master?</p>",
        "id": 217283813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799325
    },
    {
        "content": "<p>for <a href=\"https://github.com/rust-lang/rust/issues/78893\">rust#78893</a> ?</p>",
        "id": 217283821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799329
    },
    {
        "content": "<p>or whatever it is that you all were musing about on the <a href=\"#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type\">parallel zulip topic</a> ?</p>",
        "id": 217283860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799349
    },
    {
        "content": "<p>I'm of the opinion we should preserve the old behavior but we likely eventually would change it :)</p>",
        "id": 217283863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799351
    },
    {
        "content": "<p>so yeah that'd be useful ... I guess if not I could maybe poke at it today</p>",
        "id": 217283911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799379
    },
    {
        "content": "<p>I don't want the responsibility to lie solely on <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> 's shoulders if we can avoid that</p>",
        "id": 217283933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799388
    },
    {
        "content": "<p>though I don't know if load-balancing to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is really the right answer at all there!</p>",
        "id": 217283959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799399
    },
    {
        "content": "<p>I have a bit of time I had allocated for coding ...</p>",
        "id": 217283973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799407
    },
    {
        "content": "<p>could you mentor it, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ?</p>",
        "id": 217284000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799417
    },
    {
        "content": "<p>or is it too time critical to wait for mentoree to show up?</p>",
        "id": 217284025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799427
    },
    {
        "content": "<p>I'll take a look today if <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> doesn't reply and at least form an opinion</p>",
        "id": 217284032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799432
    },
    {
        "content": "<p>about what change may be required</p>",
        "id": 217284051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799440
    },
    {
        "content": "<p>okay</p>",
        "id": 217284056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799441
    },
    {
        "content": "<p>I guess I'll claim that this ... seems under control?</p>",
        "id": 217284122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799454
    },
    {
        "content": "<p>if nothing else, it sounds like we aren't willing to revert the original PR</p>",
        "id": 217284156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799465
    },
    {
        "content": "<p>so its just a question of how much mitigation we can put into place</p>",
        "id": 217284170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799475
    },
    {
        "content": "<p>we're at the start of the beta cycle now, so the 6-week clock started ticking last friday</p>",
        "id": 217284206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799493
    },
    {
        "content": "<p>(right?)</p>",
        "id": 217284221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799500
    },
    {
        "content": "<p>that's the story I'm going with, anyway</p>",
        "id": 217284243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799513
    },
    {
        "content": "<p>next</p>",
        "id": 217284258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799521
    },
    {
        "content": "<ul>\n<li>\"alacritty/vte fails to build on rustc master   (mutable references are not allowed in constant functions)\" <a href=\"https://github.com/rust-lang/rust/issues/79152\">rust#79152</a><ul>\n<li>Reported by <span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span></li>\n<li>Affects Alacritty/vte</li>\n<li>Nightly regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/79152#issuecomment-729318274\">There's a very simple MCVE</a></li>\n<li>It seems that the culprit is <a href=\"https://github.com/rust-lang/rust/pull/74989\">rust#74989</a></li>\n</ul>\n</li>\n</ul>",
        "id": 217284262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799521
    },
    {
        "content": "<p>I say we revert <a href=\"https://github.com/rust-lang/rust/issues/74989\">rust#74989</a></p>",
        "id": 217284459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799599
    },
    {
        "content": "<p>who wants to argue the other side?</p>",
        "id": 217284470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799606
    },
    {
        "content": "<p>or do we need to pull in <span class=\"user-group-mention\" data-user-group-id=\"2645\">@T-libs</span> for this decision?</p>",
        "id": 217284575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799657
    },
    {
        "content": "<p>(I'm investigating)</p>",
        "id": 217284592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799664
    },
    {
        "content": "<p>this may indeed need sign off from <span class=\"user-group-mention\" data-user-group-id=\"2645\">@T-libs</span> to revert</p>",
        "id": 217284611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799674
    },
    {
        "content": "<p>hm, it seems like a more targeted fix in the area <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> points at would be better</p>",
        "id": 217284639,
        "sender_full_name": "simulacrum",
        "timestamp": 1605799683
    },
    {
        "content": "<p>I see, so this is specific to <code>const fn</code>?</p>",
        "id": 217284773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799728
    },
    {
        "content": "<p>yes I think so</p>",
        "id": 217284799,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799744
    },
    {
        "content": "<p>and it has to do with the writeback code that figures out when we should prefer a builtin impl?</p>",
        "id": 217284805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799747
    },
    {
        "content": "<p>I guess I agree that we can <em>likely</em> fix this</p>",
        "id": 217284819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799754
    },
    {
        "content": "<p>I'd be ok with a revert and re-land though</p>",
        "id": 217284831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799760
    },
    {
        "content": "<p>(i.e., re-land the original PR with the complete changes)</p>",
        "id": 217284855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605799768
    },
    {
        "content": "<p>yes</p>",
        "id": 217284858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799771
    },
    {
        "content": "<p>I think I'd like us to try to do that more often</p>",
        "id": 217284876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799777
    },
    {
        "content": "<p>or encourage it in cases like this where the PR is very fresh</p>",
        "id": 217284915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799791
    },
    {
        "content": "<p>yeah. I will note that this is still a nightly regression, so we do have some time</p>",
        "id": 217285038,
        "sender_full_name": "simulacrum",
        "timestamp": 1605799825
    },
    {
        "content": "<p>I feel like we don't need to pull in T-libs to revert this</p>",
        "id": 217285057,
        "sender_full_name": "simulacrum",
        "timestamp": 1605799833
    },
    {
        "content": "<p>/me wonders if our reliance on bors has led to us being less willing to revert at-will than other projects</p>",
        "id": 217285059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799834
    },
    {
        "content": "<p>okay</p>",
        "id": 217285065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799837
    },
    {
        "content": "<p>given that we intend to reland a fixed version</p>",
        "id": 217285083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799844
    },
    {
        "content": "<p>I agree that we don't need to pull in T-libs</p>",
        "id": 217285108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799853
    },
    {
        "content": "<p>so lets revert</p>",
        "id": 217285132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799860
    },
    {
        "content": "<p>next</p>",
        "id": 217285177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799878
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 217285181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799879
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 217285200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799888
    },
    {
        "content": "<ul>\n<li>\"New \"warning incompatible with previous forbid in same scope\" error\" <a href=\"https://github.com/rust-lang/rust/issues/77713\">rust#77713</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> </li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has a PR <a href=\"https://github.com/rust-lang/rust/pull/78864\">#78864</a> which is in proposed FCP with intention to merge state.</li>\n</ul>\n</li>\n</ul>",
        "id": 217285230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799898
    },
    {
        "content": "<p>okay, I've checked off my box there; we just need to get one of <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> / <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  / <span class=\"user-mention\" data-user-id=\"256759\">@boats</span> to look at it (and check their box) to push it through</p>",
        "id": 217285417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605799969
    },
    {
        "content": "<p>I plan to revert the original PR on the 1.49 beta, at least, and then we can land onto 1.50</p>",
        "id": 217285470,
        "sender_full_name": "simulacrum",
        "timestamp": 1605799991
    },
    {
        "content": "<p>for clarity: which original PR are you going to revert?</p>",
        "id": 217285568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800033
    },
    {
        "content": "<p>ah, I think \"yours\"</p>",
        "id": 217285586,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800040
    },
    {
        "content": "<p>:)</p>",
        "id": 217285634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800046
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/77534\">https://github.com/rust-lang/rust/pull/77534</a></p>",
        "id": 217285646,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800049
    },
    {
        "content": "<p>thanks</p>",
        "id": 217285661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800058
    },
    {
        "content": "<p>okay well not much else here besides pinging those <span class=\"user-group-mention\" data-user-group-id=\"1977\">@T-lang</span> members</p>",
        "id": 217285778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800116
    },
    {
        "content": "<p>next</p>",
        "id": 217285793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800120
    },
    {
        "content": "<ul>\n<li>\"1.48 beta broken on mips due to copy_file_range EOVERFLOW\" <a href=\"https://github.com/rust-lang/rust/issues/78979\">rust#78979</a><ul>\n<li>Reviewed by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>Beta regression</li>\n<li>This is already fixed on stable and nightly and a beta backport is approved and waiting to be done.</li>\n</ul>\n</li>\n</ul>",
        "id": 217285807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800128
    },
    {
        "content": "<p>that backport is PR <a href=\"https://github.com/rust-lang/rust/issues/79008\">#79008</a> ?</p>",
        "id": 217285877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800162
    },
    {
        "content": "<p>but that merged, that cannot be right</p>",
        "id": 217285923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800167
    },
    {
        "content": "<p>no, it's right</p>",
        "id": 217285945,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800174
    },
    {
        "content": "<p>it merged into 1.48</p>",
        "id": 217285954,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800177
    },
    {
        "content": "<p>but needs to get into 1.49 beta</p>",
        "id": 217285961,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800180
    },
    {
        "content": "<p>oh oh I see</p>",
        "id": 217285978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800185
    },
    {
        "content": "<p>so beta backport \"is approved\"</p>",
        "id": 217285998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800195
    },
    {
        "content": "<p>mean that we approved the previous backport, that is now in stable</p>",
        "id": 217286019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800205
    },
    {
        "content": "<p>but we still need to construct a corresponding backport into the current beta</p>",
        "id": 217286066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800222
    },
    {
        "content": "<p>does that all sound right?</p>",
        "id": 217286075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800225
    },
    {
        "content": "<p>yes but I think it should be easy, I expect it to backport cleanly</p>",
        "id": 217286136,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800251
    },
    {
        "content": "<p>(and during normal beta backport procedures)</p>",
        "id": 217286149,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800260
    },
    {
        "content": "<p>totally agree</p>",
        "id": 217286153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800260
    },
    {
        "content": "<p>sounds very much under control</p>",
        "id": 217286181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800273
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 217286183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800274
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>This was a relatively mixed week, with some very large performance wins balanced out by a relatively large range of benchmarks seeing small performance regressions. </p>\n<p>The winner this week for largest performance improvement was <a href=\"https://github.com/rust-lang/rust/issues/78826\">#78826</a> which saw huge gains in the relatively new derive stress benchmark.</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage done by **@rylevick**</a>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=cf9cf7c923eb01146971429044f216a3ca905e06&amp;end=c919f490bbcd2b29b74016101f7ec71aaa24bdbb&amp;absolute=false&amp;stat=instructions%3Au\">cf9cf7c923eb01146971429044f216a3ca905e06..c919f490bbcd2b29b74016101f7ec71aaa24bdbb</a></p>\n<p>5 Regressions, 5 Improvements, 2 Mixed</p>\n<p>6 rollups had perfomance impacts (3 negative, 1 positive, 2 mixed)</p>",
        "id": 217286251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800290
    },
    {
        "content": "<h3>Regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76256\">#76256</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=7f5a42b073dc2bee2aa625052eb066ee07072048&amp;end=9722952f0bed5815cb22cb4878be09fb39f92804&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>incr-unchanged</code> builds of <code>externs-check</code>)</li>\n<li>Changes to the serialization of span end line/column.</li>\n<li>This regresses performance slightly but is a necessary correctness fix that was affecting incremental builds (see the linked PR for many related issues). The performance lost here is balanced out by a related change to the <a href=\"https://github.com/rust-lang/rust/pull/77476\">hashing algorithm</a> introduced previously.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78998\">#78998</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9722952f0bed5815cb22cb4878be09fb39f92804&amp;end=e80ee05bfc135d7d800f3fcc89bc005d6858cd9b&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>incr-unchanged</code> builds of <code>deep-vector-check</code>)</li>\n<li>Rollup</li>\n<li>Most likely introduced by <a href=\"https://github.com/rust-lang/rust/pull/78836\">#78836</a> (Implement destructuring assignment for structs and slices)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/79065\">#79065</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=361c4ea22486557ec50c4fc6a93d60e7476ecbea&amp;end=75042566d1c90d912f22e4db43b6d3af98447986&amp;stat=instructions:u\">instruction counts</a> (up to 2.9% on <code>full</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li>Rollup</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78801\">#78801</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9b2b02a840f358bcadef5c3ae861d2852da20b3d&amp;end=b5c37e86ff1782923e3abfbf5491dd383fcf827d&amp;stat=instructions:u\">instruction counts</a> (up to 2.3% on <code>full</code> builds of <code>inflate-check</code>)</li>\n<li>Initial implementation of precise capture analysis in closures</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/79128\">#79128</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=54508a26eb0595eb8417a4643f2ee572d6ca33d3&amp;end=efcb3b39203a0d54269ca274601b8f73207fe10d&amp;stat=instructions:u\">instruction counts</a> (up to 2.5% on <code>full</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>Rollup</li>\n<li>The affected benchmark is prone to noise, so it's not sure that this is an actual regression.</li>\n</ul>",
        "id": 217286308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800316
    },
    {
        "content": "<h3>Improvements</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78826\">#78826</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=f036a8f3bee55ea7566ac7a631ad3193696204b4&amp;end=a38f8fb674e6a0a6fc358655c6ce6069235f621a&amp;stat=instructions:u\">instruction counts</a> (up to -49.0% on <code>incr-unchanged</code> builds of <code>derive-check</code>)</li>\n<li>Change how macro_rules scopes are tracked during expansion so that they do not grow to big.</li>\n<li>This was particularly helpful in the new derive stress test benchmark, but yielded improvements in several other benchmarks.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78825\">#78825</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=38030ffb4e735b26260848b744c0910a5641e1db&amp;end=d4ea0b3e46a0303d5802b632e88ba1ba84d9d16f&amp;stat=instructions:u\">instruction counts</a> (up to -1.5% on <code>incr-patched: println</code> builds of <code>coercions-debug</code>)</li>\n<li>Changes several usages of <code>unwrap_or</code> to <code>unwrap_or_else</code> so that the else case is lazily evaluated.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78956\">#78956</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5404efc28a0cddee103ef6396c48ea71ff9631c8&amp;end=77180db6f81ffdacd14545f1df0a5db55dac1706&amp;stat=instructions:u\">instruction counts</a> (up to -1.1% on <code>incr-patched: println</code> builds of <code>coercions-debug</code>)</li>\n<li>Rollup</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78313\">#78313</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=c6a6105bccd5599daf0ecef40c4b5ffa175fc1c1&amp;end=9b2b02a840f358bcadef5c3ae861d2852da20b3d&amp;stat=instructions:u\">instruction counts</a> (up to -2.1% on <code>full</code> builds of <code>inflate-check</code>)</li>\n<li>Internal refactor (<a href=\"https://github.com/rust-lang/compiler-team/issues/371\">proposed here</a>) where <code>TypeFoldable</code> takes self by value instead of reference.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78779\">#78779</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=efcb3b39203a0d54269ca274601b8f73207fe10d&amp;end=e0ef0fc392963438af5f0343bf7caa46fb9c3ec3&amp;stat=instructions:u\">instruction counts</a> (up to -2.0% on <code>full</code> builds of <code>inflate-check</code>)</li>\n<li>Internal refactoring which introduces <code>BreakTy</code> in <code>TypeVisitor</code>.</li>\n</ul>",
        "id": 217286476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800388
    },
    {
        "content": "<p>One thing I might mention here</p>",
        "id": 217286567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800412
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/69218\">https://github.com/rust-lang/rust/pull/69218</a> has been sitting for a bit</p>",
        "id": 217286629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800440
    },
    {
        "content": "<p>it has some very big improvements in some cases, some regressions in others</p>",
        "id": 217286639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800447
    },
    {
        "content": "<p>anyway I guess it's a non-sequitor, it's just on my mind since I've been going over assigned PRs</p>",
        "id": 217286654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800457
    },
    {
        "content": "<h3>Mixed</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78920\">#78920</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=cf9cf7c923eb01146971429044f216a3ca905e06&amp;end=38030ffb4e735b26260848b744c0910a5641e1db&amp;stat=instructions:u\">instruction counts</a> (up to -2.5% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-opt</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=cf9cf7c923eb01146971429044f216a3ca905e06&amp;end=38030ffb4e735b26260848b744c0910a5641e1db&amp;stat=instructions:u\">instruction counts</a> (up to 1.5% on <code>incr-patched: println</code> builds of <code>coercions-debug</code>)</li>\n<li>Rollup</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/79104\">#79104</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=f5230fbf76bafd86ee4376a0e26e551df8d17fec&amp;end=c6a6105bccd5599daf0ecef40c4b5ffa175fc1c1&amp;stat=instructions:u\">instruction counts</a> (up to 6.5% on <code>full</code> builds of <code>keccak-opt</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=f5230fbf76bafd86ee4376a0e26e551df8d17fec&amp;end=c6a6105bccd5599daf0ecef40c4b5ffa175fc1c1&amp;stat=instructions:u\">instruction counts</a> (up to -2.1% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo-debug</code>)</li>\n<li>Rollup</li>\n</ul>",
        "id": 217286675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800465
    },
    {
        "content": "<p>and I'd like folks to think about how we feel about that :) I think I still hope we can improve those regressions though</p>",
        "id": 217286688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800472
    },
    {
        "content": "<p>yea, ignore the <code>ctfe-stress-4-check</code> regression. It's very likely <a href=\"https://github.com/rust-lang/rust/issues/79027\">#79027</a> and this is entirely expected. The perf test is just a canary for such changes, it's not relevant if small changes happen</p>",
        "id": 217286710,
        "sender_full_name": "oli",
        "timestamp": 1605800484
    },
    {
        "content": "<p>I've been wondering lately</p>",
        "id": 217286752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800503
    },
    {
        "content": "<p>if we should change the presentation of perf</p>",
        "id": 217286761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800507
    },
    {
        "content": "<p>so that it focuses mostly on ... well, \"real-world\" benchmarks</p>",
        "id": 217286853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800528
    },
    {
        "content": "<p>and puts the microbenchmarks and stress tests that are not exactly representative of real-world</p>",
        "id": 217286918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800549
    },
    {
        "content": "<p>into some kind of separate bucket in the presentation</p>",
        "id": 217286948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800559
    },
    {
        "content": "<p>on the one hand, this means that maybe canaries get overlooked</p>",
        "id": 217287000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800583
    },
    {
        "content": "<p>but there may be a way to compensate for that</p>",
        "id": 217287016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800591
    },
    {
        "content": "<p>the UI could use work. I'm not sure if that'll hide them too much. I will note the ctfe-stress bench is already marked as \"?\" which indicates being prone to noise.</p>",
        "id": 217287029,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800598
    },
    {
        "content": "<p>e.g., highlight the other bucket if a really significant change is observed</p>",
        "id": 217287046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800607
    },
    {
        "content": "<p>Sure, I just mean that the amount of information currently presented is overwhelming</p>",
        "id": 217287118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800633
    },
    {
        "content": "<p>perf measurement and presentation feels like more art than science  :/</p>",
        "id": 217287128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800638
    },
    {
        "content": "<p>and requires some amount of expertise to interpret</p>",
        "id": 217287149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800643
    },
    {
        "content": "<p>definitely agreed there</p>",
        "id": 217287191,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800650
    },
    {
        "content": "<p>anyway, its a stray thought I had</p>",
        "id": 217287203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800657
    },
    {
        "content": "<p>based on observations over here at Amazon</p>",
        "id": 217287228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800664
    },
    {
        "content": "<p>where they are very focused on analytics that zero in on how the <em>customer</em> will experience things</p>",
        "id": 217287348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800721
    },
    {
        "content": "<p>and that resonated with me, in the sense that engineers may love microbenchmarks because they can tell you a lot about certain scenarios</p>",
        "id": 217287396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800743
    },
    {
        "content": "<p>but overall, they can be very distracting to the non-expert</p>",
        "id": 217287431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800757
    },
    {
        "content": "<p>I have wondered on how much e.g. hiding anything with delta less than 0.3% is going to reduce the data a bunch and give you much smaller set</p>",
        "id": 217287441,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800762
    },
    {
        "content": "<p>As in, people wouldn't notice a 0.3% delta, and that info is only useful for understanding accumulated change, right?</p>",
        "id": 217287567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800799
    },
    {
        "content": "<p>well, more so, that less than 0.3% delta is likely noise or not too much important</p>",
        "id": 217287608,
        "sender_full_name": "simulacrum",
        "timestamp": 1605800819
    },
    {
        "content": "<p>that too</p>",
        "id": 217287617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800824
    },
    {
        "content": "<p>anyway</p>",
        "id": 217287627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800826
    },
    {
        "content": "<p>this is a super digression</p>",
        "id": 217287642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800830
    },
    {
        "content": "<p>but something I wanted to note for a while. Do we have a perf project group?</p>",
        "id": 217287684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800852
    },
    {
        "content": "<p>well sort of :)</p>",
        "id": 217287708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800866
    },
    {
        "content": "<p>not formally though?</p>",
        "id": 217287736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> recently amended the contents of the \"compiler perf wg\"</p>",
        "id": 217287744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800879
    },
    {
        "content": "<p>I see</p>",
        "id": 217287795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800885
    },
    {
        "content": "<p>but I think that it woudl be awesome to formally talk about its charter</p>",
        "id": 217287801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800889
    },
    {
        "content": "<p>(this is related to the work I was saying of going over the groups to update/refresh...)</p>",
        "id": 217287839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1605800905
    },
    {
        "content": "<p>yeah. Maybe that could be a topic for a design meeting</p>",
        "id": 217287842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800906
    },
    {
        "content": "<p>okay lets finish up the agenda items</p>",
        "id": 217287881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800923
    },
    {
        "content": "<p>For performance triage:</p>\n<h3>Nags requiring follow up</h3>\n<p>No nags this week.</p>",
        "id": 217287906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800935
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Don't leak return value after panic in drop\" <a href=\"https://github.com/rust-lang/rust/pull/78373\">rust#78373</a><ul>\n<li>waiting on team, see <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> </li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 217287948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800948
    },
    {
        "content": "<p>oh.</p>",
        "id": 217287954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800950
    },
    {
        "content": "<p>we're done</p>",
        "id": 217287956,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800951
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 217287969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605800956
    },
    {
        "content": "<p>we are giving people a lot of free time lately ;)</p>",
        "id": 217288306,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605801064
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending today! Stay safe, stay distant IRL and close IVL</p>",
        "id": 217288553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1605801153
    },
    {
        "content": "<p>have just <a href=\"https://hackmd.io/Jp-q_pMvQba1T3jdiO6iQQ\">created next week's agenda</a> from the template</p>",
        "id": 217288678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605801207
    },
    {
        "content": "<p>we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> (cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>) and <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> (cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>) for you all to know a week ahead of time :)</p>",
        "id": 217288871,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605801284
    }
]