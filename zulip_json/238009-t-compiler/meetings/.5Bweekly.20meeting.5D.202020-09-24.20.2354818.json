[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-09-24T14:00:00Z\">2020-09-24T14:00:00+00:00</time></p>",
        "id": 211027853,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878452
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 211027882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878461
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?view\">meeting agenda</a></p>",
        "id": 211027910,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878474
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> and <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span></p>",
        "id": 211028013,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878506
    },
    {
        "content": "<p>we've already filled our short <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> checkin</p>",
        "id": 211028060,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>?</p>",
        "id": 211028103,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600878557
    },
    {
        "content": "<p><del>I can add some details</del> I can't edit the note. </p>\n<ul>\n<li>Most of the infrastructure to capture Places is in now</li>\n<li>Work resumed after the break, all existing branches  revived. </li>\n<li>Progress on updating how closures are printed (for non-verbose just removing upvar types)</li>\n<li>New capture analysis verified to not break existing functionality (all tests up to stage1 tests pass).</li>\n</ul>",
        "id": 211028522,
        "sender_full_name": "Aman Arora",
        "timestamp": 1600878766
    },
    {
        "content": "<p>I've added them (I think <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> can give you access to the file (for future use))</p>",
        "id": 211127246,
        "sender_full_name": "apiraino",
        "timestamp": 1600952503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> send me you HackMD username on a PM please :)</p>",
        "id": 211133025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600955200
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 13 minutes</p>",
        "id": 211133103,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600955244
    },
    {
        "content": "<p><a href=\"https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?view\">Check out the meeting agenda</a></p>",
        "id": 211133125,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600955256
    },
    {
        "content": "<p>(fyi, I'm likely not available today)</p>",
        "id": 211134084,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600955655
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 211135432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956233
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 211135499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956249
    },
    {
        "content": "<ul>\n<li>Tomorrow we have our <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">planning meeting</a> at <time datetime=\"2020-09-25T14:00:00Z\">2020-09-25T14:00:00+00:00</time></li>\n</ul>",
        "id": 211135560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956272
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211135600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956286
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"<code>ty.kind()</code> -&gt; <code>ty.data()</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211135656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956307
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"Promote aarch64-pc-windows-msvc to Tier 2 Development Platform\" <a href=\"https://github.com/rust-lang/rust/pull/75914\">rust#75914</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211135692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956320
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Uplift <code>temporary-cstring-as-ptr</code> lint from <code>clippy</code> into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/346\">compiler-team#346</a></li>\n<li>\"Uplift <code>drop-bounds</code> lint from clippy into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a></li>\n<li>\"Add StatementKind::Intrinsic to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/348\">compiler-team#348</a></li>\n<li>\"Make TyKind Copy and change ty.kind() to return TyKind instead of &amp;TyKind\" <a href=\"https://github.com/rust-lang/compiler-team/issues/363\">compiler-team#363</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211135714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956330
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 211135737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956344
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-rustdoc] \"Stabilize intra-doc links\" <a href=\"https://github.com/rust-lang/rust/pull/74430\">rust#74430</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211135758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956350
    },
    {
        "content": "<h3>WG checkins</h3>\n<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> checkin by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>:</p>\n<blockquote>\n<ul>\n<li>We published last week a <a href=\"https://blog.rust-lang.org/2020/09/14/wg-prio-call-for-contributors.html\">Call for new contributors</a>. The answer was above our expectations, to this day we have received 13 new applications and we are therefore encouraging new volunteers showing up to also join the <a href=\"https://rustc-dev-guide.rust-lang.org/notification-groups/cleanup-crew.html\">Cleanup crew group</a>.</li>\n<li>Most of our procedures and work have settled now and not many huge things are happening other than our day to day work.</li>\n</ul>\n</blockquote>",
        "id": 211135814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956363
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> checkin by <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>:</p>\n<blockquote>\n<ul>\n<li>Most of the infrastructure to capture Places is in now</li>\n<li>Work resumed after the break, all existing branches revived.</li>\n<li>Progress on updating how closures are printed (for non-verbose just removing upvar types)</li>\n<li>New capture analysis verified to not break existing functionality (all tests up to stage1 tests pass).</li>\n</ul>\n</blockquote>",
        "id": 211135864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956385
    },
    {
        "content": "<p>I think we can remove ourselves (<code>WG-prioritization</code>) from the checkins by now, unsure what do you think about that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> but we can discuss on a different topic</p>",
        "id": 211135885,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600956396
    },
    {
        "content": "<p>(well certainly this last checkin seemed worth celebrating)</p>",
        "id": 211135941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956430
    },
    {
        "content": "<p>yes a ton of people have joined and this is why I think it was important to share but we can always add stuff in the announcements</p>",
        "id": 211136011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600956466
    },
    {
        "content": "<p>true</p>",
        "id": 211136091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956487
    },
    {
        "content": "<p>(especially since the wg-prioritization team is the team that is preparing the announcements each week!)</p>",
        "id": 211136168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956529
    },
    {
        "content": "<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 211136189,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600956538
    },
    {
        "content": "<p>let me just re-emphasize that first announcement: we have a planning meeting tomorrow, same time as this meeting.</p>",
        "id": 211136244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956568
    },
    {
        "content": "<p>(this is my way of trying to force myself to remember it myself...)</p>",
        "id": 211136274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956583
    },
    {
        "content": "<p>but okay, lets move along now</p>",
        "id": 211136359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956605
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211136374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956610
    },
    {
        "content": "<ul>\n<li>\"Issue 72408 nested closures exponential\" <a href=\"https://github.com/rust-lang/rust/pull/72412\">rust#72412</a><ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/72408\">rust#72408</a> an exponential compilation time increase</li>\n</ul>\n</li>\n</ul>",
        "id": 211136397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956620
    },
    {
        "content": "<p>seems like a large change for a backport and I don't think it's urgent to fix the kind of issue it fixes</p>",
        "id": 211136552,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600956688
    },
    {
        "content": "<p>is the exponential growth observable in typical programs? Or just on pathological microbenchmarks?</p>",
        "id": 211136664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956738
    },
    {
        "content": "<p>I'm actually going to say we shouldn't backport because this isn't fixing a regression, it sounds like performance has always been bad in this case. I'd prefer to let this ride the trains.</p>",
        "id": 211136707,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600956754
    },
    {
        "content": "<p>I was going to say the same, is not even a regression</p>",
        "id": 211136767,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600956784
    },
    {
        "content": "<p>yes I agree 100%</p>",
        "id": 211136828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956809
    },
    {
        "content": "<p>(there are instances where a change is so good that we <em>still</em> will backport it even if it isn't a regression, but I think the risk associated with the size of this patch means we should let it ride the trains.)</p>",
        "id": 211136928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956849
    },
    {
        "content": "<p>okay, declining to backport</p>",
        "id": 211136953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956859
    },
    {
        "content": "<ul>\n<li>\"[mir-opt] Disable the <code>ConsideredEqual</code> logic in SimplifyBranchSame opt\" <a href=\"https://github.com/rust-lang/rust/pull/76837\">rust#76837</a><ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/76803\">rust#76803</a> a <code>P-critical</code> unsound beta regression</li>\n<li>The PR just disables the logic</li>\n</ul>\n</li>\n</ul>",
        "id": 211136978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956872
    },
    {
        "content": "<p>regarding this dialog: <a href=\"https://github.com/rust-lang/rust/pull/76837/files#r490459679\">https://github.com/rust-lang/rust/pull/76837/files#r490459679</a></p>",
        "id": 211137094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956933
    },
    {
        "content": "<p>(where <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> asked \"so this is re-enabled via opt-level=3? What is plan to avoid accidentally opting into buggy optimizations?\")</p>",
        "id": 211137140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> said \"we've made a decision but haven't implemented it yet\"</p>",
        "id": 211137207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956979
    },
    {
        "content": "<p>what is the decision and/or design?</p>",
        "id": 211137215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956984
    },
    {
        "content": "<p>I have a PR that needs to be rebased that adds the new <code>-Zunsound-mir-opts</code> flag <a href=\"https://github.com/rust-lang/rust/pull/76899\">https://github.com/rust-lang/rust/pull/76899</a></p>",
        "id": 211137218,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600956984
    },
    {
        "content": "<p>okay</p>",
        "id": 211137225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600956989
    },
    {
        "content": "<p>After which no amount of <code>-Zmir-opt-level=99999</code> will run unsound mir opts.</p>",
        "id": 211137253,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600957005
    },
    {
        "content": "<p>unless you opt into the <code>-Zunsound-mir-opts</code> flag, of course</p>",
        "id": 211137297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957034
    },
    {
        "content": "<p>Sure yeah, but you should hopefully know what you're getting into at that point :)</p>",
        "id": 211137330,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600957050
    },
    {
        "content": "<p>anyway, okay. backport approved.</p>",
        "id": 211137331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957050
    },
    {
        "content": "<ul>\n<li>\"Rebase LLVM onto 11.0.0-rc3\" <a href=\"https://github.com/rust-lang/rust/pull/77063\">rust#77063</a><ul>\n<li>Needed to fix some LLVM 11 regressions, like <a href=\"https://github.com/rust-lang/rust/issues/76042\">rust#76042</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211137378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957065
    },
    {
        "content": "<p>the decision here is probably coupled with our decision about whether to back out the LLVM 11 upgrade in the first place, no?</p>",
        "id": 211137489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957105
    },
    {
        "content": "<p>still seems like a clear win to backport this under the likely assumption that we will be sticking with the LLVM 11 upgrade, I think.</p>",
        "id": 211137607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957163
    },
    {
        "content": "<p>I guess we can also vote as if we are sticking with LLVM 11 maybe?</p>",
        "id": 211137619,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600957169
    },
    {
        "content": "<p>yeah I don't know if that discussion will happen today or tomorrow. Probably tomorrow I suspect.</p>",
        "id": 211137649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957184
    },
    {
        "content": "<p>(at the aforementioned planning meeting)</p>",
        "id": 211137660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957194
    },
    {
        "content": "<p>we've said if I remember correctly that we were going to spend some time tomorrow</p>",
        "id": 211137727,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600957211
    },
    {
        "content": "<p>right. Okayh</p>",
        "id": 211137761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957224
    },
    {
        "content": "<p>anyway lets go ahead and backport approve <a href=\"https://github.com/rust-lang/rust/issues/77063\">rust#77063</a></p>",
        "id": 211137780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957236
    },
    {
        "content": "<p>I imagine its going to be trivial to land it,</p>",
        "id": 211137795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957245
    },
    {
        "content": "<p>Famous last words</p>",
        "id": 211137820,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600957258
    },
    {
        "content": "<p>at least compared to the overall effort of backing out the upgrade if we go down that path</p>",
        "id": 211137829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957263
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211137878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957284
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211137892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957291
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211137914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957299
    },
    {
        "content": "<ul>\n<li>\"Uplift drop-bounds lint from clippy\" <a href=\"https://github.com/rust-lang/rust/pull/75699\">rust#75699</a><ul>\n<li>This is waiting on MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a>, which was seconded 7 days ago.</li>\n</ul>\n</li>\n</ul>",
        "id": 211137930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957310
    },
    {
        "content": "<p>yeah so the FCP period for <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a> is 10 days, so that is expected to be approved 3 days from now</p>",
        "id": 211138027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957351
    },
    {
        "content": "<p>and then I imagine we'll just land <a href=\"https://github.com/rust-lang/rust/issues/75699\">rust#75699</a></p>",
        "id": 211138042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957361
    },
    {
        "content": "<p>but we can leave it marked S-waiting-on-team</p>",
        "id": 211138058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957370
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 211138071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957376
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">55 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">33 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">3 P-critical, 1 P-high, 4 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 5 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 20 P-high, 59 P-medium, 6 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 211138093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957386
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211138160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957420
    },
    {
        "content": "<ul>\n<li>\"incorrect code generation for i686 release build for 1.47 beta and nightly\" <a href=\"https://github.com/rust-lang/rust/issues/76042\">rust#76042</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li><code>I-unsound</code> issue and beta regression</li>\n<li>The <a href=\"https://bugs.llvm.org/show_bug.cgi?id=47278\">LLVM bug</a> was fixed and included in the 11.x branch of LLVM</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77063#issuecomment-696895601\">Rebasing on top of LLVM 11.0.0-rc3 will fix the issue</a></li>\n<li>Issue is fixed with <a href=\"https://github.com/rust-lang/rust/pull/77063\">rust#77063</a> backport</li>\n</ul>\n</li>\n</ul>",
        "id": 211138186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957432
    },
    {
        "content": "<p>(so given that we just approved the backport, I guess this is under control.)</p>",
        "id": 211138241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957446
    },
    {
        "content": "<p>This is fixed on nightly now</p>",
        "id": 211138246,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600957447
    },
    {
        "content": "<ul>\n<li>\"Optimisation-caused UB during cross-crate compilation\" <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n<li>Also nominated for discussion</li>\n<li>Is not a regression, this never worked so it was also discussed if this was <code>P-critical</code> or <code>P-high</code></li>\n<li><a href=\"https://bugs.llvm.org/show_bug.cgi?id=47444\">It's an LLVM bug</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is <a href=\"https://github.com/rust-lang/rust/issues/76387#issuecomment-690610859\">left a patch up for review upstream and can be cherry picked if needed</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211138276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957469
    },
    {
        "content": "<p>(I'm going to assign the unassigned P-critical issue to myself (<a href=\"https://github.com/rust-lang/rust/issues/76803\">#76803</a>) since I created the PR to backport and I'm also reviewing the real fix)</p>",
        "id": 211138299,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600957481
    },
    {
        "content": "<p>is the review upstream progressing on the fix for <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a> ?</p>",
        "id": 211138338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957502
    },
    {
        "content": "<p>/me looks</p>",
        "id": 211138359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957509
    },
    {
        "content": "<p>I added some additional reviewers</p>",
        "id": 211138370,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600957519
    },
    {
        "content": "<p>so hopefully someone takes a look at it soon</p>",
        "id": 211138384,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600957526
    },
    {
        "content": "<p>yes I see, and one of them asked someone else to look at it yesterday</p>",
        "id": 211138392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you think its worth addressing the Pre-merge checks that are on the upstream code review tool?</p>",
        "id": 211138506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957572
    },
    {
        "content": "<p>Or do you figure you're better off waiting for actual review feedback from a human before you do that?</p>",
        "id": 211138526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957583
    },
    {
        "content": "<p>I can address the variable name 'i' one</p>",
        "id": 211138529,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600957584
    },
    {
        "content": "<p>I'm not sure about the other one, since it's a pre-existing method name</p>",
        "id": 211138540,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600957593
    },
    {
        "content": "<p>I don't know if they'll want me to rename it</p>",
        "id": 211138559,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600957599
    },
    {
        "content": "<p>hmm interesting</p>",
        "id": 211138576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957607
    },
    {
        "content": "<p>yeah I see, okay.</p>",
        "id": 211138584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957610
    },
    {
        "content": "<p>better to follow the precedent set in the code, I agree.</p>",
        "id": 211138640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957632
    },
    {
        "content": "<p>well this is hopefully under control</p>",
        "id": 211138664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957646
    },
    {
        "content": "<p>if its still unreviewed next week I guess we'll have to decide whether we want to land it ourselves even without upstream feedback</p>",
        "id": 211138706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957667
    },
    {
        "content": "<p>but I think I'm willing to wait until then ...</p>",
        "id": 211138731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957676
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a> is only on nightly? Its not on beta?</p>",
        "id": 211138826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957710
    },
    {
        "content": "<p>/me is a little surprised if so</p>",
        "id": 211138843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957720
    },
    {
        "content": "<p>oh it never worked?</p>",
        "id": 211138876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957734
    },
    {
        "content": "<p>yeah okay not a regression, it never worked.</p>",
        "id": 211138895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957740
    },
    {
        "content": "<p>which means we'd be unlikely to beta backport it, I <em>think</em>...</p>",
        "id": 211138941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957757
    },
    {
        "content": "<p>but it might get folded into a general LLVM upgrade, which may happen on beta ... or maybe the most recent upgrade is the last one we'll do.</p>",
        "id": 211139019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957779
    },
    {
        "content": "<p>Okay I'm just talking to myself at this point.</p>",
        "id": 211139025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957788
    },
    {
        "content": "<p>anyway I think its under control</p>",
        "id": 211139067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957800
    },
    {
        "content": "<p>we might want to backport it into our llvm anyway</p>",
        "id": 211139210,
        "sender_full_name": "nagisa",
        "timestamp": 1600957839
    },
    {
        "content": "<p>cherry-pick, yes</p>",
        "id": 211139232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957847
    },
    {
        "content": "<p>whenever it lands upstream</p>",
        "id": 211139235,
        "sender_full_name": "nagisa",
        "timestamp": 1600957848
    },
    {
        "content": "<p>I'm mostly sitting here debating about a beta backport</p>",
        "id": 211139258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957856
    },
    {
        "content": "<p>I don't believe it made the llvm11 train</p>",
        "id": 211139263,
        "sender_full_name": "nagisa",
        "timestamp": 1600957858
    },
    {
        "content": "<p>e.g. if it doesn't get reviewed upstream, then I don't want to backport it to beta, but I might be willing to still cherry-pick it to our LLVM on our nightly <em>after</em> the next beta is cut.</p>",
        "id": 211139355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957903
    },
    {
        "content": "<p>i.e. maximize its testing during its train ride.</p>",
        "id": 211139397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957919
    },
    {
        "content": "<p>but this is all getting ahead of myself, since they may well review it upstream in the near future.</p>",
        "id": 211139484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957941
    },
    {
        "content": "<ul>\n<li>\"regression: get_unchecked resolves to unstable feature use\" <a href=\"https://github.com/rust-lang/rust/issues/76479\">rust#76479</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> after hitting the issue on a crater run</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested that is expected breakage (before the MCVE was built)</li>\n<li>Beta regression that started on PR <a href=\"https://github.com/rust-lang/rust/pull/73565\">rust#73565</a> cc <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>\n</li>\n</ul>",
        "id": 211139526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957962
    },
    {
        "content": "<p>shoot I promised to write up mentorship instructions here and didn't follow through</p>",
        "id": 211139560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957977
    },
    {
        "content": "<p>at this point time is tight, I probabl should reassign to someone who can take charge on just doing an alpha-rename</p>",
        "id": 211139605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600957998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> would you be interested in working with me on this?</p>",
        "id": 211139628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958010
    },
    {
        "content": "<p>sure</p>",
        "id": 211139662,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600958026
    },
    {
        "content": "<p>I suspect its largely mechanical; the biggest problems are just having the time to do some rebuilds. :)</p>",
        "id": 211139664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958027
    },
    {
        "content": "<p>we could revert the pr from beta to get more time if necessary, it was entirely a perf optimisation IIRC</p>",
        "id": 211139683,
        "sender_full_name": "nagisa",
        "timestamp": 1600958036
    },
    {
        "content": "<p>okay lets touch base about it later</p>",
        "id": 211139691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958039
    },
    {
        "content": "<p>I thought PR <a href=\"https://github.com/rust-lang/rust/issues/73565\">#73565</a> fixed a bug</p>",
        "id": 211139796,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958065
    },
    {
        "content": "<p>namely: \"Fixed a bug where Debug would create aliasing references when using the specialized zip impl\"</p>",
        "id": 211139806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958070
    },
    {
        "content": "<p>yeah it fixed this bug: <code>nth_back()</code> for <code>Zip</code> returns wrong values <a href=\"https://github.com/rust-lang/rust/issues/68536\">#68536</a></p>",
        "id": 211139901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958105
    },
    {
        "content": "<p>got it</p>",
        "id": 211139956,
        "sender_full_name": "nagisa",
        "timestamp": 1600958127
    },
    {
        "content": "<p>(I mean maybe <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> meant there is some <em>other</em> PR that injected <a href=\"https://github.com/rust-lang/rust/issues/68536\">#68536</a> and we could revert <em>that</em> PR?)</p>",
        "id": 211139958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958127
    },
    {
        "content": "<p>oh okay</p>",
        "id": 211139964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958130
    },
    {
        "content": "<p>anyway I think we can handle this.</p>",
        "id": 211139975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958135
    },
    {
        "content": "<p>I just have been distracted with ... stuff...</p>",
        "id": 211139996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958141
    },
    {
        "content": "<p>this is the wrong period of my life for me to default to self-assigning things</p>",
        "id": 211140032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958155
    },
    {
        "content": "<p>anyway I'm confident <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I will take care of it.</p>",
        "id": 211140137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958186
    },
    {
        "content": "<ul>\n<li>\"starting from nightly-2020-08-18 rustls can't connect to some websites\" <a href=\"https://github.com/rust-lang/rust/issues/76803\">rust#76803</a><ul>\n<li>Unassigned</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"321021\">@Paolo Barbolini</span></li>\n<li>Beta regression that started on PR <a href=\"https://github.com/rust-lang/rust/pull/74748\">rust#74748</a> cc <span class=\"user-mention\" data-user-id=\"139182\">@Simon Vandel Sillesen</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76803#issuecomment-693999586\">Mir optimization bug</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/76837\">Fix by @**wesleywiser** is in master already</a> but it's still pending beta backport.</li>\n</ul>\n</li>\n</ul>",
        "id": 211140140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958188
    },
    {
        "content": "<p>aforementioned fix is <a href=\"https://github.com/rust-lang/rust/issues/76837\">#76837</a></p>",
        "id": 211140175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958205
    },
    {
        "content": "<p>oof I wish I could help a bit more with the mir-opt stuff, it's so hard to get them right :(</p>",
        "id": 211140253,
        "sender_full_name": "eddyb",
        "timestamp": 1600958232
    },
    {
        "content": "<p>oh and we beta-backport approved that earlier in the meeting.</p>",
        "id": 211140260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958235
    },
    {
        "content": "<p>so that's under control too</p>",
        "id": 211140298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958253
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211140303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958254
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>",
        "id": 211140320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958263
    },
    {
        "content": "<p>yeah I feel like we're way too lax in our mir-opt efforts.</p>",
        "id": 211140324,
        "sender_full_name": "nagisa",
        "timestamp": 1600958267
    },
    {
        "content": "<p>I guess it's a good idea to throw new MIR optimizations at nightly and disable on beta - maybe we want to automate this?</p>",
        "id": 211140336,
        "sender_full_name": "eddyb",
        "timestamp": 1600958272
    },
    {
        "content": "<p>i.e. we could gate some optimizations on the release channel</p>",
        "id": 211140401,
        "sender_full_name": "eddyb",
        "timestamp": 1600958287
    },
    {
        "content": "<p>(and we still haven't the means to enable developers to write them in an obviously correct ways)</p>",
        "id": 211140424,
        "sender_full_name": "nagisa",
        "timestamp": 1600958293
    },
    {
        "content": "<p>We should take this out of band with this meeting but yeah, I would love to do better in this regard.</p>",
        "id": 211140457,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600958309
    },
    {
        "content": "<p>(PM me if you have updates, at least on this one thing)</p>",
        "id": 211140496,
        "sender_full_name": "eddyb",
        "timestamp": 1600958324
    },
    {
        "content": "<p>I'm not 100% sure I'm on board for having something that's as a matter of course enabled on nightly and disabled on beta</p>",
        "id": 211140593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958363
    },
    {
        "content": "<p>mostly because I would <em>like</em> nightly to be somewhat of a predictor of how the beta will behave...</p>",
        "id": 211140621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958380
    },
    {
        "content": "<p>but at the same time I <em>totally</em> understand the idea, of giving the MIR optimizations a nice space to be deployed without pressure to get it perfect...</p>",
        "id": 211140715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958408
    },
    {
        "content": "<p>maybe there could be a grace period, if nothing breaks, we let it graduate to beta. not the best though</p>",
        "id": 211140743,
        "sender_full_name": "eddyb",
        "timestamp": 1600958423
    },
    {
        "content": "<p>(of course another problem there is how many people are relying on nightly itself, for other reasons, and thus its not such a great idea to be lax in its soundness...)</p>",
        "id": 211140786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958439
    },
    {
        "content": "<p>That's basically what we've been doing but we don't get enough feedback on nightly to catch everything</p>",
        "id": 211140797,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600958443
    },
    {
        "content": "<p>more eyes, formal methods (hard), or better optimization infrastructure, would  all be great but, I assume we're all spread thin atm</p>",
        "id": 211140819,
        "sender_full_name": "eddyb",
        "timestamp": 1600958456
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 211140843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958467
    },
    {
        "content": "<p>We do generally try to make it easy to backport a revert that disables the optimization on beta.</p>",
        "id": 211140850,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600958473
    },
    {
        "content": "<p>so, back to P-high beta regressions</p>",
        "id": 211140875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958486
    },
    {
        "content": "<ul>\n<li>\"Build hang on Linux with nightly and beta toolchains\" <a href=\"https://github.com/rust-lang/rust/issues/76980\">rust#76980</a><ul>\n<li>Unassigned</li>\n<li>It's also nominated</li>\n<li>Build hangs on beta</li>\n<li><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> bisected it to <a href=\"https://github.com/rust-lang/rust/pull/73526\">rust#73526</a></li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-695805807\">is not aware of any LLVM 11 issue like that </a></li>\n<li>Assigned <code>P-high</code> and requested an MCVE, we probably need to get more context about this issue</li>\n</ul>\n</li>\n</ul>",
        "id": 211140900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958497
    },
    {
        "content": "<p>there have been a couple of cycles in various places of DAGCombiner et al. in LLVM</p>",
        "id": 211141017,
        "sender_full_name": "nagisa",
        "timestamp": 1600958535
    },
    {
        "content": "<p>but for these to be at all actionable minimal reproducer is critical.</p>",
        "id": 211141051,
        "sender_full_name": "nagisa",
        "timestamp": 1600958552
    },
    {
        "content": "<p>okay. this hasn't had much time under the ice-breakers tag</p>",
        "id": 211141093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958576
    },
    {
        "content": "<p>so maybe we'll see more progress here</p>",
        "id": 211141113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958582
    },
    {
        "content": "<p>it also feeds into the question of whether to undo the LLVM 11 upgrade. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 211141141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958593
    },
    {
        "content": "<p>FWIW, rc3 just landed and is known to fix some issues</p>",
        "id": 211141265,
        "sender_full_name": "cuviper",
        "timestamp": 1600958640
    },
    {
        "content": "<p>true, maybe this will get magically fixed.</p>",
        "id": 211141327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958651
    },
    {
        "content": "<p>(by that, that is)</p>",
        "id": 211141359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958661
    },
    {
        "content": "<p>anyway I'm willing to let this sit for now</p>",
        "id": 211141391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958670
    },
    {
        "content": "<p>rc3 landed on nightly, right? So IIUC we could test this now, is that correct?</p>",
        "id": 211141442,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958686
    },
    {
        "content": "<p>Yes</p>",
        "id": 211141457,
        "sender_full_name": "cuviper",
        "timestamp": 1600958695
    },
    {
        "content": "<p>it will probably come up in tomorrow's (planned?) discussion of LLVM 11 upgrade before the we get into the actual planning of the planning meeting.</p>",
        "id": 211141463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958696
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> are you willing to take charge on testing this on nightly?</p>",
        "id": 211141504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-24.20.2354818/near/211141504\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> are you willing to take charge on testing this on nightly?</p>\n</blockquote>\n<p>Sure, updating my nightly toolchain now</p>",
        "id": 211141531,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958728
    },
    {
        "content": "<p>(and double-checking that the bug reproduces for you in the first place, that is?)</p>",
        "id": 211141551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958736
    },
    {
        "content": "<p>okay.</p>",
        "id": 211141556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958737
    },
    {
        "content": "<p>next</p>",
        "id": 211141616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958762
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>",
        "id": 211141677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958776
    },
    {
        "content": "<ul>\n<li>\"Linker error with wasm target with spaces in install path\" <a href=\"https://github.com/rust-lang/rust/issues/76466\">rust#76466</a><ul>\n<li>Unassigned</li>\n<li>Reported by <span class=\"user-mention\" data-user-id=\"198951\">@Jordan Miner</span> </li>\n<li>Nightly regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">Probably an LLVM 11 regression</a></li>\n<li>Reporter ran into the issues on a <strong>Win10 64bit</strong> and suggests a possible range of <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">culprit commits</a> </li>\n<li><span class=\"user-mention\" data-user-id=\"218378\">@Mason Stallmo</span> could not reproduce on both Windows or Linux 64bit, therefore suggests a possible <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-693805846\">Windows 32bit only regression</a></li>\n<li><span class=\"user-mention\" data-user-id=\"118022\">@retep007</span> <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-697130900\">suggests that it may be an lld issue</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211141706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958792
    },
    {
        "content": "<p>oh my</p>",
        "id": 211141723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958798
    },
    {
        "content": "<p>does wasm only use LLD or something?</p>",
        "id": 211141829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958847
    },
    {
        "content": "<p>(or is LLD the default on windows?)</p>",
        "id": 211141849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958859
    },
    {
        "content": "<p>/me looks</p>",
        "id": 211141854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958864
    },
    {
        "content": "<p>former.</p>",
        "id": 211141868,
        "sender_full_name": "nagisa",
        "timestamp": 1600958869
    },
    {
        "content": "<p>thanks</p>",
        "id": 211141883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958877
    },
    {
        "content": "<p>hmm I wonder if we have an wasm notification group yet</p>",
        "id": 211141963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958894
    },
    {
        "content": "<p>seems like a good thing to form potentially</p>",
        "id": 211141979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958901
    },
    {
        "content": "<p>I believe we don't</p>",
        "id": 211141992,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958904
    },
    {
        "content": "<p>Wasn't there an MCP about this?</p>",
        "id": 211142004,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958911
    },
    {
        "content": "<p>about a wasm ping group?</p>",
        "id": 211142022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600958919
    },
    {
        "content": "<p>Yes</p>",
        "id": 211142037,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958923
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/issues/337\">https://github.com/rust-lang/compiler-team/issues/337</a></p>",
        "id": 211142079,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600958941
    },
    {
        "content": "<p>okay so the group has been approved but has not been created yet?</p>",
        "id": 211142284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959026
    },
    {
        "content": "<p>Seems so</p>",
        "id": 211142302,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600959036
    },
    {
        "content": "<p>okay</p>",
        "id": 211142332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959049
    },
    {
        "content": "<p>lets fix that. :)</p>",
        "id": 211142343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959053
    },
    {
        "content": "<p>but not right now</p>",
        "id": 211142351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959058
    },
    {
        "content": "<p>anyway this seems like something that we're unlikely to resolve ourselves</p>",
        "id": 211142380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959073
    },
    {
        "content": "<p>the best we can do is properly isolate the bug to LLD itself and file a bug upstream</p>",
        "id": 211142408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959089
    },
    {
        "content": "<p>I'm going to leave this unassigned for now</p>",
        "id": 211142527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959127
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>This was the first week of semi-automated perf triage, and thank goodness:<br>\nThere was a lot going on. Most regressions are either quite small or already<br>\nhave a fix published.</p>",
        "id": 211142566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959144
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/72412\">#72412</a> is probably the most<br>\ninteresting case. It fixes a pathological problem involving nested closures by<br>\nadding cycle detection to what seems to be a relatively hot part of the code.<br>\nAs a result, most users will see a slight <a href=\"https://perf.rust-lang.org/compare.html?start=2c69266c0697b0c0b34abea62cba1a1d3c59c90c&amp;end=fdc3405c20122fd0f077f5a77addabc873f20e4c&amp;stat=task-clock\">compile-time\nregression</a><br>\nfor their crates.</p>",
        "id": 211142587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959157
    },
    {
        "content": "<p>Triage done by <strong>@ecstaticmorse</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=dbb73f8f79ab176a897d5a95e696adb71b957cbe&amp;end=b01326ab033e41986d4a5c8b96ce4f40f3b38e30&amp;absolute=false&amp;stat=instructions%3Au\">dbb73f8f79ab176a897d5a95e696adb71b957cbe..b01326ab033e41986d4a5c8b96ce4f40f3b38e30</a></p>\n<p>2 Regressions, 5 Improvements, 4 Mixed,<br>\n1 of them in rollups</p>",
        "id": 211142611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959171
    },
    {
        "content": "<h3>Regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76575\">#76575</a> compare generic constants using <code>AbstractConst</code>s</p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=fdc3405c20122fd0f077f5a77addabc873f20e4c&amp;end=9f8ac718f44e280edb1a7b3266f2c26106ec11a0&amp;stat=instructions:u\">instruction counts</a><br>\n (up to 2.4% on <code>full</code> builds of <code>inflate-check</code>)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/74040\">#74040</a> fix unification of const variables</p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=956e06c6c85e918524b67503c4d65c7baf539585&amp;end=e0bf356f9e5f6a8cca1eb656e900ffba79340fa1&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to 3.3% on <code>incr-full</code> builds of <code>coercions-debug</code>)</li>\n</ul>",
        "id": 211142626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959181
    },
    {
        "content": "<h3>Improvements</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76656\">#76656</a> Don't query stability data when <code>staged_api</code> is off</p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=f9a322a6fdd1e12fbe30441feaa4402e23efe303&amp;end=1eb00abf35b9bb59825edf81d05c2fa2f17cefca&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -1.5% on <code>incr-unchanged</code> builds of <code>many-assoc-items-check</code>)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76311\">#76311</a> Split <code>core::slice</code> to smaller mods</p>\n<ul>\n<li>\n<p>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=90b1f5ae59291dd69d72fad41a22277df19dc953&amp;end=4c1966f97e192d6282be935baa163fb58f9b8b27&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -1.9% on <code>full</code> builds of <code>html5ever-opt</code>)</p>\n</li>\n<li>\n<p>Very odd, since this just split up a file.</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76880\">#76880</a> Update cc crate to 1.0.60 to understand aarch64-apple-darwin with clang</p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=8e9d5db8392c44a2e94008168fa3506ecddaa357&amp;end=b3aae050cd7e0c9a9eb6085bd49b02f67dc1396f&amp;stat=instructions:u\">instruction counts</a><br>\n(up to -1.0% on <code>incr-patched: Compiler new</code> builds of <code>regex-opt</code>)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76975\">#76975</a> Rollup of 15 pull requests</p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b873fa6d42cf305131d2583d03b84686e5e40f2e&amp;end=81e02708f1f4760244756548981277d5199baa9a&amp;stat=instructions:u\">instruction counts</a><br>\non exactly <code>encoding-check</code> (-2.0% on <code>incr-full</code> builds)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76680\">#76680</a> Make <code>ensure_sufficient_stack()</code> non-generic, using cargo-llvm-lines</p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=4eff9b0b29a8898c839d46f3c66526710afed68a&amp;end=b01326ab033e41986d4a5c8b96ce4f40f3b38e30&amp;stat=instructions:u\">instruction counts</a><br>\n(up to -3.2% on <code>incr-full</code> builds of <code>coercions-debug</code>)</li>\n</ul>",
        "id": 211142651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959197
    },
    {
        "content": "<p>that <code>core::slice</code> one <a href=\"https://github.com/rust-lang/rust/issues/76311\">#76311</a> is interesting</p>",
        "id": 211142712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959227
    },
    {
        "content": "<p>maybe spitting file into mods caused change to LLVM inlining decisions?</p>",
        "id": 211142778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959243
    },
    {
        "content": "<p>weird</p>",
        "id": 211142790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959247
    },
    {
        "content": "<p>Yeah very</p>",
        "id": 211142794,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600959248
    },
    {
        "content": "<p>cc one is similarly weird</p>",
        "id": 211142802,
        "sender_full_name": "nagisa",
        "timestamp": 1600959253
    },
    {
        "content": "<p>maybe the <code>core::slice</code> one interacts with CGU partitioning?</p>",
        "id": 211142838,
        "sender_full_name": "eddyb",
        "timestamp": 1600959272
    },
    {
        "content": "<p>that's another good theory</p>",
        "id": 211142874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959283
    },
    {
        "content": "<p>though that's less of a problem in non-incremental builds I guess</p>",
        "id": 211142895,
        "sender_full_name": "eddyb",
        "timestamp": 1600959290
    },
    {
        "content": "<p>true</p>",
        "id": 211142900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959294
    },
    {
        "content": "<p>still, dumping the CGUs before/after could be useful</p>",
        "id": 211142952,
        "sender_full_name": "eddyb",
        "timestamp": 1600959316
    },
    {
        "content": "<p>Maybe it has something to do with how much metadata we need to load when compiling against <code>core::slice</code> or something?</p>",
        "id": 211142967,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600959321
    },
    {
        "content": "<p>(I <em>can</em> believe that random crate updates could have downstream effects on CGU partitioning, which could explain the CC one <a href=\"https://github.com/rust-lang/rust/issues/76880\">#76880</a>)</p>",
        "id": 211142974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> no, all that is per-crate</p>",
        "id": 211143008,
        "sender_full_name": "eddyb",
        "timestamp": 1600959340
    },
    {
        "content": "<p>(I wish the CGU dump format was easier to deal with but it's workable I guess)</p>",
        "id": 211143039,
        "sender_full_name": "eddyb",
        "timestamp": 1600959354
    },
    {
        "content": "<p>anyway lets keep going</p>",
        "id": 211143124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959376
    },
    {
        "content": "<p>now if only I knew what the difference between <code>-Zprint-mono-items=lazy</code> and <code>-Zprint-mono-items=eager</code> was...</p>",
        "id": 211143127,
        "sender_full_name": "eddyb",
        "timestamp": 1600959377
    },
    {
        "content": "<p>its interesting to ponder but probably not a good use of time right now</p>",
        "id": 211143144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959385
    },
    {
        "content": "<h3>Mixed</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76244\">#76244</a> Removing the <code>def_id</code> field from hot <code>ParamEnv</code> to make it smaller</p>\n<ul>\n<li>\n<p>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a055c5a1bd95e029e9b31891db63b6dc8258b472&amp;end=7402a394471a6738a40fea7d4f1891666e5a80c5&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to 3.3% on <code>full</code> builds of <code>unicode_normalization-check</code>)</p>\n</li>\n<li>\n<p>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=a055c5a1bd95e029e9b31891db63b6dc8258b472&amp;end=7402a394471a6738a40fea7d4f1891666e5a80c5&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -1.8% on <code>full</code> builds of <code>ctfe-stress-4-check</code>)</p>\n</li>\n<li>\n<p>A fix has been published as <a href=\"https://github.com/rust-lang/rust/pull/76913\">#76913</a>.</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/72412\">#72412</a> Issue 72408 nested closures exponential</p>\n<ul>\n<li>\n<p>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=2c69266c0697b0c0b34abea62cba1a1d3c59c90c&amp;end=fdc3405c20122fd0f077f5a77addabc873f20e4c&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -99.9% on <code>incr-unchanged</code> builds of <code>deeply-nested-closures-opt</code>)</p>\n</li>\n<li>\n<p>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2c69266c0697b0c0b34abea62cba1a1d3c59c90c&amp;end=fdc3405c20122fd0f077f5a77addabc873f20e4c&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to 1.5% on <code>full</code> builds of <code>coercions-check</code>)</p>\n</li>\n<li>\n<p>Fixes a pathological case, but slows down normal builds slightly.</p>\n</li>\n<li>Might be worth investigating to see if we can do better, although the author seems to have done a pretty thorough job.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/74949\">#74949</a> Validate constants during <code>const_eval_raw</code></p>\n<ul>\n<li>\n<p>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=10b3595ba6a4c658c9dea105488fc562c815e434&amp;end=5e449b9adff463455743291b0c1f76feec092992&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to 515.8% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</p>\n</li>\n<li>\n<p>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=10b3595ba6a4c658c9dea105488fc562c815e434&amp;end=5e449b9adff463455743291b0c1f76feec092992&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -2.7% on <code>incr-patched: add static arr item</code> builds of <code>coercions-check</code>)</p>\n</li>\n<li>\n<p>A fix has been published as <a href=\"https://github.com/rust-lang/rust/pull/77006\">#77006</a>.</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75119\">#75119</a>  New MIR optimization pass to reduce branches on match of tuples of enums</p>\n<ul>\n<li>\n<p>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=81e02708f1f4760244756548981277d5199baa9a&amp;end=2e0edc0f28c5647141bedba02e7a222d3a5dc9c3&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to -1.6% on <code>full</code> builds of <code>style-servo-opt</code>)</p>\n</li>\n<li>\n<p>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=81e02708f1f4760244756548981277d5199baa9a&amp;end=2e0edc0f28c5647141bedba02e7a222d3a5dc9c3&amp;stat=instructions:u\">instruction counts</a><br>\n  (up to 1.3% on <code>full</code> builds of <code>wf-projection-stress-65510-check</code>)</p>\n</li>\n<li>\n<p>Seems to have been a regression overall. If there's no improvment in the generated code, we should disable this.</p>\n</li>\n</ul>",
        "id": 211143184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959403
    },
    {
        "content": "<p>hmm so regarding <a href=\"https://github.com/rust-lang/rust/issues/75119\">#75119</a></p>",
        "id": 211143298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959446
    },
    {
        "content": "<p>the summary here at least is saying that it had max improvement on ... \"real-world\" code (depending on whether one regards style-servo-opt as \"real-world\")</p>",
        "id": 211143374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959478
    },
    {
        "content": "<p>while the biggest regression was on a stress testing microbenchmawrk</p>",
        "id": 211143437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959490
    },
    {
        "content": "<p>I'm inclined to weight the former as more important than the latter.</p>",
        "id": 211143465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959501
    },
    {
        "content": "<blockquote>\n<p>(up to 515.8% on incr-unchanged builds of ctfe-stress-4-check)</p>\n</blockquote>\n<p>ugh</p>",
        "id": 211143505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600959520
    },
    {
        "content": "<p>but the real question is what did \"been a regression overall\" mean, in terms of how things looked overall</p>",
        "id": 211143513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959524
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-24.20.2354818/near/211143505\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>(up to 515.8% on incr-unchanged builds of ctfe-stress-4-check)</p>\n</blockquote>\n<p>ugh</p>\n</blockquote>\n<p>this one has a fix though, according to the report?</p>",
        "id": 211143565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959550
    },
    {
        "content": "<p>yes</p>",
        "id": 211143586,
        "sender_full_name": "oli",
        "timestamp": 1600959557
    },
    {
        "content": "<p>that has a fix</p>",
        "id": 211143593,
        "sender_full_name": "oli",
        "timestamp": 1600959559
    },
    {
        "content": "<p>ahh I was checking it ok ok</p>",
        "id": 211143601,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600959563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-24.20.2354818/near/211143465\">said</a>:</p>\n<blockquote>\n<p>I'm inclined to weight the former as more important than the latter.</p>\n</blockquote>\n<p>oh, <a href=\"https://github.com/rust-lang/rust/issues/75119\">#75119</a> is still under active discussion by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and others, in terms of whether it should be guarded under mir-opt-level=2 or above</p>",
        "id": 211143759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959611
    },
    {
        "content": "<p>so lets not worry to much about that here then</p>",
        "id": 211143773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959619
    },
    {
        "content": "<p>(it does indeed look like a regression overall when I look at the report here: <a href=\"https://perf.rust-lang.org/compare.html?start=81e02708f1f4760244756548981277d5199baa9a&amp;end=2e0edc0f28c5647141bedba02e7a222d3a5dc9c3&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=81e02708f1f4760244756548981277d5199baa9a&amp;end=2e0edc0f28c5647141bedba02e7a222d3a5dc9c3&amp;stat=instructions:u</a> )</p>",
        "id": 211143907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959686
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75119\">#75119</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76575\">#76575</a></li>\n</ul>",
        "id": 211143926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959700
    },
    {
        "content": "<p>argh we are over the hour and still didn't get to nominated issues. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 211143965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959716
    },
    {
        "content": "<p>let me skim the list quickly and see if there are any that are burning a hole in our ... pocket ...</p>",
        "id": 211144034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959734
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211144050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959742
    },
    {
        "content": "<ul>\n<li>\"Set up CI for aarch64-apple-darwin\" <a href=\"https://github.com/rust-lang/rust/pull/75991\">rust#75991</a><ul>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> for compiler approval</li>\n<li>This PR is promoting the aarch64-apple-darwin target from Tier 3 to a Tier 2 development platform</li>\n</ul>\n</li>\n</ul>",
        "id": 211144091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959760
    },
    {
        "content": "<p>(didn't we talk about this last week?)</p>",
        "id": 211144121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959774
    },
    {
        "content": "<p>(I cannot remember now. Maybe best to put it through FCP checkbox process at this point?)</p>",
        "id": 211144164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959791
    },
    {
        "content": "<p>I think that was some other arm target</p>",
        "id": 211144169,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600959793
    },
    {
        "content": "<p>ah thanks</p>",
        "id": 211144180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959798
    },
    {
        "content": "<p>I can start the FCP process if that helps.</p>",
        "id": 211144203,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600959810
    },
    {
        "content": "<p>everything else here is either not something we can resolve quickly, or is something we already discussed in the meeting</p>",
        "id": 211144253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959833
    },
    {
        "content": "<p>yeah, this is apple silicon</p>",
        "id": 211144257,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600959836
    },
    {
        "content": "<p>(We may need to have a steering meeting regarding <a href=\"https://github.com/rust-lang/rust/issues/76480\">rust#76480</a> and macro stuff in general...)</p>",
        "id": 211144325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959853
    },
    {
        "content": "<p>(at least I feel like we need to have a dedicated wg or something in that space...)</p>",
        "id": 211144398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959883
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 211144413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959891
    },
    {
        "content": "<p>the list of nominated issues <em>is</em> interesting in general: <a href=\"https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?both#Nominated-Issues\">https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?both#Nominated-Issues</a></p>",
        "id": 211144480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959914
    },
    {
        "content": "<p>but we're out of time today</p>",
        "id": 211144500,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959927
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 211144511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600959936
    },
    {
        "content": "<p>next week we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span></p>",
        "id": 211162634,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600968022
    },
    {
        "content": "<p>created next week's agenda from template <a href=\"https://hackmd.io/2HOfYckVTaOHBmLlLvvBXA?both\">https://hackmd.io/2HOfYckVTaOHBmLlLvvBXA?both</a></p>",
        "id": 211162660,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600968039
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> can you fill <code>@WG-rls2.0</code> checkin for next week?</p>",
        "id": 211162717,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600968070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> can you fill it for <code>@WG-self-profile</code>?</p>",
        "id": 211162809,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600968121
    },
    {
        "content": "<p>Yes!</p>",
        "id": 211165090,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600969132
    }
]