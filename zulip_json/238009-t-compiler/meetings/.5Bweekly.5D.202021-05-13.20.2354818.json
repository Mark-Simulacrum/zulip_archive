[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/xKNc5sWeTMW9-rRJBk6LGg?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>  by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> (anything to share from the WG?)</li>\n<li>@<em>WG-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (anything to share?)</li>\n</ul>",
        "id": 238612660,
        "sender_full_name": "apiraino",
        "timestamp": 1620907673
    },
    {
        "content": "<p>(for <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> checkin cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> / <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> )</p>",
        "id": 238618533,
        "sender_full_name": "apiraino",
        "timestamp": 1620911411
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , sorry I’m late!</p>",
        "id": 238625643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914843
    },
    {
        "content": "<p>(add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> above to show you’re here. :) )</p>",
        "id": 238625672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914858
    },
    {
        "content": "<p>lets see if I can zoom through the annoucnements</p>",
        "id": 238625709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914879
    },
    {
        "content": "<ul>\n<li>we had an emergency release on Monday</li>\n</ul>",
        "id": 238625774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914894
    },
    {
        "content": "<p>due to <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a> , which we had not realized was part of last Thursday’s release</p>",
        "id": 238625826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914932
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a> is already on the agenda under P-critical issues. I suspect we <em>might</em> want to allocate tomorrow’s Friday meeting to discuss what else needs to be done for <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a></p>",
        "id": 238625947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620914983
    },
    {
        "content": "<p>but I’m just throwing that out there as an idea. We also could just try to handle things asynchronously. But we probably should set some deadlines for e.g. deciding whether to try to another point release that reenables incremental compilation, and if we do, what Patches would need to go into it.</p>",
        "id": 238626064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915027
    },
    {
        "content": "<p>okay, next up...</p>",
        "id": 238626082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915036
    },
    {
        "content": "<h3>MCPs/FCPs</h3>",
        "id": 238626112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915051
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 238626120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915056
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n</ul>\n</li>\n</ul>",
        "id": 238626141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915064
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 238626157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915070
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Update the existing musl targets to be dynamically linked.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/422\">compiler-team#422</a></li>\n<li>\"A --temps-dir option for specifying where the intermediate files are written\" <a href=\"https://github.com/rust-lang/compiler-team/issues/423\">compiler-team#423</a></li>\n</ul>\n</li>\n</ul>",
        "id": 238626165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915077
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Rename -Cllvm-args to something backend agnostic\" <a href=\"https://github.com/rust-lang/compiler-team/issues/421\">compiler-team#421</a></li>\n<li>\"Split rustc_mir\" <a href=\"https://github.com/rust-lang/compiler-team/issues/426\">compiler-team#426</a></li>\n</ul>\n</li>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"rustdoc: Make \"rust code block is empty\" and \"could not parse code block\" warnings a lint (<code>INVALID_RUST_CODEBLOCKS</code>)\" <a href=\"https://github.com/rust-lang/rust/pull/84587\">rust#84587</a></li>\n</ul>\n</li>\n</ul>",
        "id": 238626186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915087
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 238626208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915101
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> by @<strong>wesleywiser</strong>:</p>\n<blockquote>\n<p>Not much has been merged recently but there are a number of different projects in flight at the moment. A few highlights:<br>\n- Run RemoveZsts pass at mir-opt-level=1 <a href=\"https://github.com/rust-lang/rust/pull/83417\">#83417</a><br>\n- Optimize calls to CopyNonOverlapping <a href=\"https://github.com/rust-lang/rust/pull/83785\">#83785</a><br>\n- Mir-Opt for copying enums with large discrepancies <a href=\"https://github.com/rust-lang/rust/pull/85158\">#85158</a><br>\n- Constant::eq skips spans <a href=\"https://github.com/rust-lang/rust/pull/85208\">#85208</a></p>\n</blockquote>",
        "id": 238626219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915107
    },
    {
        "content": "<p>@*WG-polymorphization by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>:</p>\n<blockquote>\n<p>There's no update from the polymorphization working group. Working group members are focusing their efforts elsewhere currently.</p>\n</blockquote>",
        "id": 238626232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915112
    },
    {
        "content": "<p>any other announcements before I move onto backport nominatins?</p>",
        "id": 238626289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915126
    },
    {
        "content": "<p>One other quick announcement: <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> did want to draw some attention to <a href=\"https://github.com/rust-lang/rust/pull/83813#issuecomment-839591871\">a comment</a> they left yesterday on <a href=\"https://github.com/rust-lang/rust/issues/83813\">#83813</a> but they weren't able to make the meeting today. I believe they were specifically interested in making sure others on the team were aware of points 3 &amp; 4.</p>",
        "id": 238626296,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620915129
    },
    {
        "content": "<p>I don't think anything needs to be done at this time, this is just an FYI.</p>",
        "id": 238626355,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620915159
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 238626424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915199
    },
    {
        "content": "<h2>Backport nominations</h2>",
        "id": 238626438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915206
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 238626444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915211
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Disallows <code>#![feature(no_coverage)]</code> on stable and beta (using standard crate-level gating)\" <a href=\"https://github.com/rust-lang/rust/pull/84871\">rust#84871</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"296355\">@Rich Kadel</span></li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></li>\n<li>fixes P-critical <a href=\"https://github.com/rust-lang/rust/issues/84836\">#84836</a></li>\n</ul>\n</li>\n</ul>",
        "id": 238626451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915217
    },
    {
        "content": "<p>when was <a href=\"https://github.com/rust-lang/rust/issues/84836\">#84836</a> injected?</p>",
        "id": 238626591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915270
    },
    {
        "content": "<p>or let me get what I’m really asking: should PR <a href=\"https://github.com/rust-lang/rust/issues/84871\">#84871</a> be stable-nominated as well?</p>",
        "id": 238626642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915293
    },
    {
        "content": "<p>I don't think it's hit stable yet, but let's make sure</p>",
        "id": 238626732,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620915337
    },
    {
        "content": "<p>okay can someone take an action item to look into that?</p>",
        "id": 238626771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915354
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/84562\">https://github.com/rust-lang/rust/pull/84562</a> landed in 1.53, we're good</p>",
        "id": 238626881,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915386
    },
    {
        "content": "<p>beta-nom is sufficient.</p>",
        "id": 238626898,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915395
    },
    {
        "content": "<p>okay</p>",
        "id": 238626925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915410
    },
    {
        "content": "<p>So it sounds like people are generally in favor, but can someone summarize tmandry’s concerns?</p>",
        "id": 238627137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915500
    },
    {
        "content": "<p>uh</p>",
        "id": 238627195,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915537
    },
    {
        "content": "<p>whcih I guess are channeling … concerns of <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> from. a previous  version of the PR?</p>",
        "id": 238627200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915538
    },
    {
        "content": "<p>not sure I follow</p>",
        "id": 238627205,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915539
    },
    {
        "content": "<p>so they are not relevant to the PR that is under discussion?</p>",
        "id": 238627222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915548
    },
    {
        "content": "<p>I was referring to this: <a href=\"https://github.com/rust-lang/rust/pull/84871#issuecomment-832356971\">https://github.com/rust-lang/rust/pull/84871#issuecomment-832356971</a></p>",
        "id": 238627254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915565
    },
    {
        "content": "<blockquote>\n<p>This will work for now but given <a href=\"https://github.com/rust-lang/rust/issues/84836#issuecomment-832303085\">https://github.com/rust-lang/rust/issues/84836#issuecomment-832303085</a> I don't think we should continue using this mechanism without an MCP.</p>\n</blockquote>",
        "id": 238627276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915574
    },
    {
        "content": "<p>outdated comment, we changed the PR since then I believe</p>",
        "id": 238627284,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915578
    },
    {
        "content": "<p>okay</p>",
        "id": 238627289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915581
    },
    {
        "content": "<p>it now does things \"right\"</p>",
        "id": 238627296,
        "sender_full_name": "simulacrum",
        "timestamp": 1620915584
    },
    {
        "content": "<p>beta-backport approved for <a href=\"https://github.com/rust-lang/rust/issues/84871\">#84871</a></p>",
        "id": 238627335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915599
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 238627462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915633
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-libs-impl</code> this time.</li>\n<li>No stable nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 238627471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915639
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 238627492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915644
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 238627500,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915652
    },
    {
        "content": "<ul>\n<li>\"Remove unstable <code>--pretty</code> flag\" <a href=\"https://github.com/rust-lang/rust/pull/83491\">rust#83491</a><ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-06.20.2354818/near/237667433\">last week</a></li>\n<li>(<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> had some thoughts to be published on the PR)</li>\n</ul>\n</li>\n</ul>",
        "id": 238627513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915657
    },
    {
        "content": "<p>argh I didn’t follow through on this</p>",
        "id": 238627522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915662
    },
    {
        "content": "<p>ugh</p>",
        "id": 238627587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915691
    },
    {
        "content": "<p>Maybe that should be taken as a sign that my concerns here don’t matter enough for me to be blocking this</p>",
        "id": 238627722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915739
    },
    {
        "content": "<p>Okay just in the interest of moving along, here’s what I’ll say: If I don’t engage with teh PR by the time of next week’s meeting, then I can’t object anymore</p>",
        "id": 238627927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915820
    },
    {
        "content": "<p>(I don’t think any other participants have objected.)</p>",
        "id": 238628041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915854
    },
    {
        "content": "<p>next</p>",
        "id": 238628093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915877
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 238628098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915878
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">74 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">50 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 43 P-high, 87 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 238628109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915885
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 238628122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915891
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>issue (and related ones) is being followed</li>\n<li>are there already candidate patches for a stable backport? (ref. <a href=\"#narrow/stream/131828-t-compiler/topic/unstable.20fingerprints.20-.20actually.20in.201.2E52/near/238357575\">this comment</a>)</li>\n<li>anything else to discuss for this tracking issue?</li>\n</ul>\n</li>\n</ul>",
        "id": 238628127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915899
    },
    {
        "content": "<p>We've made progress on several of the sub-issues</p>",
        "id": 238628151,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620915912
    },
    {
        "content": "<p>that’s good</p>",
        "id": 238628169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915919
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/pull/85186\">https://github.com/rust-lang/rust/pull/85186</a> and <a href=\"https://github.com/rust-lang/rust/pull/85211\">https://github.com/rust-lang/rust/pull/85211</a></p>",
        "id": 238628206,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620915932
    },
    {
        "content": "<p>For now</p>",
        "id": 238628244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915949
    },
    {
        "content": "<p>once those PRs are merged, I think the only remaining unfixed issue will be the <code>Err(Overflow)</code> one</p>",
        "id": 238628247,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620915951
    },
    {
        "content": "<p>I think I can/should take ownership of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> itself, unless someone else wants to</p>",
        "id": 238628263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915961
    },
    {
        "content": "<p>which I don't think anyone has actually hit in practice yet</p>",
        "id": 238628277,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620915963
    },
    {
        "content": "<p>i.e. I don’t want a critical bug to have no owner</p>",
        "id": 238628314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620915972
    },
    {
        "content": "<p>but I also want some opinions:</p>",
        "id": 238628417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916017
    },
    {
        "content": "<ol>\n<li>Is this still P-critical w.r.t. stable, as stable stands now? (I think “no”)</li>\n<li>Is the question of whether to try a 2nd point release for stable that renables incr-comp a P-critical issue? (I think “no”)</li>\n<li>Is this still P-critical w.r.t. beta, as beta stands now? (I’m <strong>guessing</strong> “no”, but this is the most interesting Question to me…)</li>\n</ol>",
        "id": 238628538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916083
    },
    {
        "content": "<p>IMO given that beta <strong>does not</strong> currently have incremental disabled, and seems to be in practice pretty stable, we're <em>probably</em> ok to do nothing</p>",
        "id": 238628637,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916130
    },
    {
        "content": "<p>Is <a href=\"https://github.com/rust-lang/rust/pull/84233\">https://github.com/rust-lang/rust/pull/84233</a> in beta?</p>",
        "id": 238628640,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916132
    },
    {
        "content": "<p>We could also decide to have tomorrow’s Friday meeting be dedicated to <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a>, and table answering the above questions tot hat time.</p>",
        "id": 238628643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916132
    },
    {
        "content": "<p>but I think taking tomorrow is a good idea</p>",
        "id": 238628661,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916142
    },
    {
        "content": "<p>If so, then I think beta will be fine, since the <code>predicates_of</code> issues seems to be the one that most people are hitting</p>",
        "id": 238628685,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916153
    },
    {
        "content": "<p>I would rather we not ship another point release and instead make sure we can backport any required fixes into beta in a timely manner so we can get some testing of them before 1.53 ships.</p>",
        "id": 238628714,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620916170
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> have you or others put in regression tests for the cases that been uncovered?</p>",
        "id": 238628723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916174
    },
    {
        "content": "<p>I think most of them do</p>",
        "id": 238628756,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916194
    },
    {
        "content": "<p>I can PR a regression test for the <code>predicates_of</code> issue</p>",
        "id": 238628817,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916204
    },
    {
        "content": "<p>I think I have one lying around from when I was debugging the issue</p>",
        "id": 238628838,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916212
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-13.20.2354818/near/238628714\">said</a>:</p>\n<blockquote>\n<p>I would rather we not ship another point release and instead make sure we can backport any required fixes into beta in a timely manner so we can get some testing of them before 1.53 ships.</p>\n</blockquote>\n<p>Why? Because shipping a point release is too much work?</p>",
        "id": 238628849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916217
    },
    {
        "content": "<p>Or the stable-backports are too much work?</p>",
        "id": 238628880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916231
    },
    {
        "content": "<p>Or the optics?</p>",
        "id": 238628883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916233
    },
    {
        "content": "<p>Heh. Again, maybe better to have this discussion tomorrow. :)</p>",
        "id": 238628930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916248
    },
    {
        "content": "<p>There's 5 weeks until the release<br>\n1 I don't think we should rush to fix this in stable in case we introduce another regression<br>\n2 there's enough time for a second release even taking our time</p>",
        "id": 238628984,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620916277
    },
    {
        "content": "<p>It feels risky to me. Bypassing the release trains means we're shipping code that just got merged into nightly a few days ago (potentially).</p>",
        "id": 238628990,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620916279
    },
    {
        "content": "<p>I think we should discuss tomorrow in more detail, but I generally tend to agree with the sentiment of 'not yet' on a .2 release, and maybe some backports into beta</p>",
        "id": 238629048,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916316
    },
    {
        "content": "<p>Ah. Okay, so I guess its in part a question of what would get backported to stable</p>",
        "id": 238629059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916321
    },
    {
        "content": "<p>I was working on the assumpion that the beta itself was working so well for Carol in particular</p>",
        "id": 238629125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916335
    },
    {
        "content": "<p>At this point, the critical regression has been addressed for 1.52 so I'd rather it just have slow performance than risk us having to ship 1.52.3 to resolve something in one of the fixes</p>",
        "id": 238629138,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620916340
    },
    {
        "content": "<p>that we could have a relatively low-risk .2 by cherry-picking the right things from <em>that</em> beta</p>",
        "id": 238629158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916353
    },
    {
        "content": "<p>So, okay</p>",
        "id": 238629188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916367
    },
    {
        "content": "<p>Lets hash this out tomorrow, okay?</p>",
        "id": 238629203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916375
    },
    {
        "content": "<p>The predicates_of thing was by far the most reported issue and the fix for made the 1.53 beta cut.</p>",
        "id": 238629215,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620916380
    },
    {
        "content": "<p>In the meantime, I will take ownership of <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a> itself</p>",
        "id": 238629249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916387
    },
    {
        "content": "<p>and … leave it at P-critical, at least until tomorrows meeting</p>",
        "id": 238629292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916397
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 238629491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916465
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 238629516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916478
    },
    {
        "content": "<ul>\n<li>\"On nightly rustc, E0599 emits a massive diagnostic to suggest wrapping the receiver in every combination of <code>{Box,Pin,Rc,Arc}::new({,&amp;,&amp;mut} expr)</code>\" <a href=\"https://github.com/rust-lang/rust/issues/84769\">rust#84769</a><ul>\n<li>beta backport of patch <a href=\"https://github.com/rust-lang/rust/issues/84808\">rust#84808</a> has been approved</li>\n<li>issue be closed once lands in 1.53 beta</li>\n</ul>\n</li>\n</ul>",
        "id": 238629526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916485
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 238629539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916494
    },
    {
        "content": "<ul>\n<li>\"Improve diagnostics of <code>evaluation of constant value failed</code> errors\" <a href=\"https://github.com/rust-lang/rust/issues/85155\">rust#85155</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"373265\">@Mike Welsh</span></li>\n<li>misleading diagnostic which could be annoying, potentially impacting other crates</li>\n<li>being tracked in issue <a href=\"https://github.com/rust-lang/rust/issues/85155#issuecomment-838072043\">rust#https://github.com/rust-lang/rust/issues/73961</a></li>\n<li>regressed in <a href=\"https://github.com/rust-lang/rust/pull/83278\">#83278</a></li>\n<li>(unsure if this issue warrants a P-high or lower)</li>\n</ul>\n</li>\n</ul>",
        "id": 238629585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916505
    },
    {
        "content": "<p>(oh, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , how feasible would it be to get other members of the release team present at T-compiler meeting tomorrow? I think their voices would be appreciated when it comes to the .2 question. Should I just open a topic over in the <a class=\"stream\" data-stream-id=\"241545\" href=\"/#narrow/stream/241545-t-release\">#t-release</a> stream?)</p>",
        "id": 238629712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916561
    },
    {
        "content": "<p>(if you think that is unwarranted/unnecessary, feel free to say so. I guess I can just put up an invite and let them make their own decisions.)</p>",
        "id": 238629871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916616
    },
    {
        "content": "<p>I think an invite is reasonable but I don't know on availability</p>",
        "id": 238629923,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916639
    },
    {
        "content": "<p>okay</p>",
        "id": 238629931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916643
    },
    {
        "content": "<p>(it is early for west coast, which a few are)</p>",
        "id": 238629941,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916649
    },
    {
        "content": "<p>okay, back to discussion of <a href=\"https://github.com/rust-lang/rust/issues/85155\">#85155</a></p>",
        "id": 238630087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916711
    },
    {
        "content": "<p>the agenda notes say this regressed in PR <a href=\"https://github.com/rust-lang/rust/issues/83278\">#83278</a>, which was a bump of the stdarch submodule</p>",
        "id": 238630116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916733
    },
    {
        "content": "<p>It doesn't seem <em>critical</em> just inconvenient</p>",
        "id": 238630155,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620916754
    },
    {
        "content": "<p>Oli points out that there is future work that would resolve this, but that isn't close to being done</p>",
        "id": 238630203,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620916778
    },
    {
        "content": "<p>did stdarch start using some expression that can now be const evaluated or something?</p>",
        "id": 238630215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916782
    },
    {
        "content": "<p>I think we could use <code>const-panic</code> to get a marginally better error in the meantime</p>",
        "id": 238630233,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916792
    },
    {
        "content": "<p>I don't think we can get the actual value into the message</p>",
        "id": 238630244,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916799
    },
    {
        "content": "<p>but we can do <code>if !(IMM &gt;= MIN &amp;&amp; IMM &lt;= MAX) { panic!(\"Value of of range\") }</code></p>",
        "id": 238630376,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916840
    },
    {
        "content": "<p>which seems better than \"evaluation of constant value failed\"</p>",
        "id": 238630420,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916859
    },
    {
        "content": "<p>But that would give you the same span, right?</p>",
        "id": 238630452,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620916872
    },
    {
        "content": "<p>yeah</p>",
        "id": 238630468,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916878
    },
    {
        "content": "<p>is the idea that the panic message is on the same line in the compiler output?</p>",
        "id": 238630482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916884
    },
    {
        "content": "<p>but it would at least point people in the right direction</p>",
        "id": 238630490,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916887
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yes</p>",
        "id": 238630503,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916895
    },
    {
        "content": "<p>we would replace <code>let _ = 1 / ((IMM &gt;= MIN &amp;&amp; IMM &lt;= MAX) as usize);</code> with the <code>if</code> block and <code>panic!()</code></p>",
        "id": 238630530,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916909
    },
    {
        "content": "<p>oh oh I see</p>",
        "id": 238630550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916921
    },
    {
        "content": "<p>I overlooked the <code>let  _ =</code> there</p>",
        "id": 238630606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916933
    },
    {
        "content": "<p>getting the actual value in the message would require const traits</p>",
        "id": 238630629,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916942
    },
    {
        "content": "<p>or some kind of hack in the <code>format!</code> machinery</p>",
        "id": 238630645,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620916949
    },
    {
        "content": "<p>const-panic is still pending stabilization, I'll note</p>",
        "id": 238630677,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916965
    },
    {
        "content": "<p>but that doesn't preclude its use necessarily, particularly for nicer error messages, in std</p>",
        "id": 238630709,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916978
    },
    {
        "content": "<p>what did it do in earlier versions of stdarch ?</p>",
        "id": 238630716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620916984
    },
    {
        "content": "<p>I think silently allowed?</p>",
        "id": 238630742,
        "sender_full_name": "simulacrum",
        "timestamp": 1620916992
    },
    {
        "content": "<p>so the problem was caught at runtime?</p>",
        "id": 238630766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917006
    },
    {
        "content": "<blockquote>\n<p>stdarch was changed to reject invalid const operands to intrinsics which were previously accepted. This was done to align with the behavior of these intrinsics in C compilers.</p>\n</blockquote>",
        "id": 238630773,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917008
    },
    {
        "content": "<p>no, I think, like, we masked off extra bits or something? Not confident</p>",
        "id": 238630797,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917021
    },
    {
        "content": "<p>okay</p>",
        "id": 238630807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917025
    },
    {
        "content": "<p>even if it's unstable, it doesn't become part of the public API</p>",
        "id": 238630820,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620917034
    },
    {
        "content": "<p>so there may be a breaking change aspect, beyond the change to diagnostics</p>",
        "id": 238630877,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917052
    },
    {
        "content": "<p>so we won't create another scenario like with <code>rustc_args_required_const</code></p>",
        "id": 238630903,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620917063
    },
    {
        "content": "<p>it's not clear to me who'd be in charge of that evaluation (T-libs-impl?)</p>",
        "id": 238630908,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917065
    },
    {
        "content": "<p>well it depends on what the earlier semantics were. Was it undefined behavior?</p>",
        "id": 238630934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917079
    },
    {
        "content": "<p>(is <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> around ?)</p>",
        "id": 238630943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917085
    },
    {
        "content": "<p>o/</p>",
        "id": 238630991,
        "sender_full_name": "Amanieu",
        "timestamp": 1620917105
    },
    {
        "content": "<p>Hi</p>",
        "id": 238631008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917111
    },
    {
        "content": "<p>re <a href=\"https://github.com/rust-lang/rust/issues/85155\">#85155</a></p>",
        "id": 238631012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917113
    },
    {
        "content": "<p>when  invalid const operands to intrinsics were previously accepted</p>",
        "id": 238631046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917126
    },
    {
        "content": "<p>what was the operational behavior? Was it unspecified?</p>",
        "id": 238631063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917137
    },
    {
        "content": "<p>I grok that this change is to bring us into alignment with what C compilers do</p>",
        "id": 238631156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917169
    },
    {
        "content": "<p>They were either masked off or used one of the <code>match</code> branches that used <code>_</code>, depending on how the intrinsic was implemented. It was quite arbitrary</p>",
        "id": 238631181,
        "sender_full_name": "Amanieu",
        "timestamp": 1620917182
    },
    {
        "content": "<p>okay</p>",
        "id": 238631219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917198
    },
    {
        "content": "<p>but not undefined behavior, most likely</p>",
        "id": 238631234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917208
    },
    {
        "content": "<p>which means this might be classified as a breaking change, I guess...</p>",
        "id": 238631261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917220
    },
    {
        "content": "<p>Do we have crater numbers?</p>",
        "id": 238631318,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1620917246
    },
    {
        "content": "<p>most likely, I think</p>",
        "id": 238631319,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917246
    },
    {
        "content": "<p>but still, seems like a bug fix?</p>",
        "id": 238631329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917251
    },
    {
        "content": "<p>this is still in nightly, so I suspect we don't yet?</p>",
        "id": 238631379,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917269
    },
    {
        "content": "<p>We did run crater, but it seems that particular crate was not caught.</p>",
        "id": 238631395,
        "sender_full_name": "Amanieu",
        "timestamp": 1620917274
    },
    {
        "content": "<p>The only crater failures we observed were due to code passing non-const values to intrinsics that expect constants, and these were all fixed in the crates.</p>",
        "id": 238631531,
        "sender_full_name": "Amanieu",
        "timestamp": 1620917323
    },
    {
        "content": "<p>So, as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> said, I’m not sure our team is in the best position to evaluate the breakage and tradeoffs here</p>",
        "id": 238631568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917348
    },
    {
        "content": "<p>seems more like a T-libs-impl question</p>",
        "id": 238631587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917358
    },
    {
        "content": "<p>or T-libs, or something. Not sure.</p>",
        "id": 238631628,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917379
    },
    {
        "content": "<p>yeah</p>",
        "id": 238631637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917382
    },
    {
        "content": "<p>but in any case</p>",
        "id": 238631644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917385
    },
    {
        "content": "<p>that is <em>separate</em> from the problem being raised in <a href=\"https://github.com/rust-lang/rust/issues/85155\">#85155</a> itself</p>",
        "id": 238631665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917396
    },
    {
        "content": "<p>Yea, that's a libs issue. The problem in that issue is the poor diagnostics.</p>",
        "id": 238631723,
        "sender_full_name": "Amanieu",
        "timestamp": 1620917410
    },
    {
        "content": "<p>okay. Just wanted to get clarity. Thanks</p>",
        "id": 238631772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917430
    },
    {
        "content": "<p>it sounds like there are ideas about small steps we could take to make things slightly better</p>",
        "id": 238631800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917444
    },
    {
        "content": "<p>but no way in short term to e.g. get a stack trace that points to where the call came from?</p>",
        "id": 238631838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917466
    },
    {
        "content": "<p>there might be, depending on when exactly we emit that error?</p>",
        "id": 238631861,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620917484
    },
    {
        "content": "<p>you said it's a post-monomorphization error, right?</p>",
        "id": 238631881,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1620917497
    },
    {
        "content": "<p>that’s what <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> says in the comments, yeah</p>",
        "id": 238631910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917514
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-05-13.20.2354818/near/238631665\">said</a>:</p>\n<blockquote>\n<p>that is <em>separate</em> from the problem being raised in <a href=\"https://github.com/rust-lang/rust/issues/85155\">#85155</a> itself</p>\n</blockquote>\n<p>I'll file another issue I guess to track it, at least for relnotes</p>",
        "id": 238631914,
        "sender_full_name": "simulacrum",
        "timestamp": 1620917515
    },
    {
        "content": "<p>I guess I’m mostly wondering if we could print out whatever Miri uses as its representation of the stack</p>",
        "id": 238632047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917565
    },
    {
        "content": "<p>these are brainstorming things</p>",
        "id": 238632102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917590
    },
    {
        "content": "<p>not really something to resolve now</p>",
        "id": 238632115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917595
    },
    {
        "content": "<p>Anyone want to take ownership of this in the meantime?</p>",
        "id": 238632134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917605
    },
    {
        "content": "<p>I’m going to move along I think, and leave it unowned</p>",
        "id": 238632161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917615
    },
    {
        "content": "<p>wrt to my last point  - is P-high for now  possibly the right priority assessment, right?</p>",
        "id": 238632164,
        "sender_full_name": "apiraino",
        "timestamp": 1620917618
    },
    {
        "content": "<p>(usually we are cautious with wrong diagnostics because they might be misleading/confusing)</p>",
        "id": 238632167,
        "sender_full_name": "apiraino",
        "timestamp": 1620917622
    },
    {
        "content": "<p>(I’m not sure about P-high. But I’m okay leaving it there for now.)</p>",
        "id": 238632188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917632
    },
    {
        "content": "<p>next: perf triage</p>",
        "id": 238632249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917649
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-05-11.md\">triage full logs for 2021-05-11</a></p>\n</blockquote>\n<p>Not much change overall - both regressions and improvements were all minor, apart from the 2x compile-time improvement for libcore from PR <a href=\"https://github.com/rust-lang/rust/issues/83278\">#83278</a>.</p>\n<p>We did see a pretty clear 2% improvement in memory usage (<a href=\"https://perf.rust-lang.org/?start=7a0f1781d04662041db5deaef89598a8edd53717&amp;end=382f748f23979e37e3e012b090e5a0313463f182&amp;absolute=false&amp;stat=max-rss\">max-rss</a>), and that was again due to PR <a href=\"https://github.com/rust-lang/rust/issues/83278\">#83278</a>.</p>\n<p>Triage done by <strong>@pnkfelix</strong>. 2 Regressions, 3 Improvements, 0 Mixed, 0 of them in rollups</p>",
        "id": 238632251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917649
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Integrate attributes as part of the crate hash <a href=\"https://github.com/rust-lang/rust/issues/83901\">#83901</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=770792ff8d1ec542e78e77876ac936f43ffb8e05&amp;end=467253ff6a2aecd008d273286315ac14ff8ad937&amp;stat=instructions:u\">instruction counts</a> (up to 1.6% on <code>full</code> builds of <code>externs-check</code>)</li>\n<li>There was a regression, seems roughly consistent with the results that we got from the perf run on the PR, so this regression was expected outcome.</li>\n</ul>\n<p>Bump stdarch submodule <a href=\"https://github.com/rust-lang/rust/issues/83278\">#83278</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ff34b919075f35a1787659e9c448a34b06bab8de&amp;end=881c1ac408d93bb7adaa3a51dabab9266e82eee8&amp;stat=instructions:u\">instruction counts</a> (up to 3.3% on <code>full</code> builds of <code>keccak-debug</code>)</li>\n<li>There are regressions, but as noted in <a href=\"https://github.com/rust-lang/rust/pull/83278#issuecomment-835570336\">PR comments</a>, they were not as bad as anticipated. And also, we did continue to see the 2x win on compile-time for libcore.</li>\n</ul>",
        "id": 238632279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917657
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Retain data in vectorized registers for longer <a href=\"https://github.com/rust-lang/rust/issues/84915\">#84915</a></li>\n<li>lazify backtrace formatting for delayed diagnostics <a href=\"https://github.com/rust-lang/rust/issues/84965\">#84965</a></li>\n<li>Optimize BufWriter <a href=\"https://github.com/rust-lang/rust/issues/79930\">#79930</a></li>\n</ul>",
        "id": 238632302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917664
    },
    {
        "content": "<h4>Mixed</h4>\n<ul>\n<li>None</li>\n</ul>",
        "id": 238632318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917670
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>No new nags this week, and none leftover from last week.</p>",
        "id": 238632326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917677
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-libs-impl\">T-libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>T-libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 238632334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917682
    },
    {
        "content": "<p>so, yeah, since <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> is here: Thanks for PR <a href=\"https://github.com/rust-lang/rust/issues/83278\">#83278</a>. A 2x win on libcore compiles is nothing to sneeze at. :)</p>",
        "id": 238632475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917745
    },
    {
        "content": "<p>So, I’ll go ahead and add an event to the T-compiler calendar to discuss <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a></p>",
        "id": 238632719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917859
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! See you tomorrow, if you can come.</p>",
        "id": 238632992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620917986
    },
    {
        "content": "<p>Draft for next week's agenda:<br>\n<a href=\"https://hackmd.io/v-I1WY0JSSqpf6KxBhkc9Q?view\">https://hackmd.io/v-I1WY0JSSqpf6KxBhkc9Q?view</a></p>\n<p>Scheduled checkins from <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> and <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span></p>",
        "id": 238640024,
        "sender_full_name": "apiraino",
        "timestamp": 1620921018
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  while doing the followup to today's agenda, i've noticed a beta-nomination that slipped through the cracks (it was not labeled T-compiler).<br>\nThe relevant PR is <a href=\"https://github.com/rust-lang/rust/issues/84409\">#84409</a> and the Zulip thread opened by the proponent is here <br>\n<a href=\"#narrow/stream/241545-t-release/topic/beta.20backports\">https://rust-lang.zulipchat.com/#narrow/stream/241545-t-release/topic/beta.20backports</a></p>",
        "id": 238675064,
        "sender_full_name": "apiraino",
        "timestamp": 1620937204
    },
    {
        "content": "<p>it doesnt look fixing anything urgent, but if you want to have a look (just in case)</p>",
        "id": 238675122,
        "sender_full_name": "apiraino",
        "timestamp": 1620937223
    },
    {
        "content": "<p>p.s. github says the PR was labeled <code>T-compiler</code> 6 days ago but it's a lie, here's a screenshot I took before refreshing the page</p>",
        "id": 238675221,
        "sender_full_name": "apiraino",
        "timestamp": 1620937263
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/cDh-BE7hpiT3uZ8QWS3qn729/screenshot-20210513-221848.png\">screenshot-20210513-221848.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/cDh-BE7hpiT3uZ8QWS3qn729/screenshot-20210513-221848.png\" title=\"screenshot-20210513-221848.png\"><img src=\"/user_uploads/4715/cDh-BE7hpiT3uZ8QWS3qn729/screenshot-20210513-221848.png\"></a></div>",
        "id": 238675239,
        "sender_full_name": "apiraino",
        "timestamp": 1620937271
    },
    {
        "content": "<p>(go figure)</p>",
        "id": 238675243,
        "sender_full_name": "apiraino",
        "timestamp": 1620937275
    },
    {
        "content": "<p>Thanks for catching that! Yeah, it seems like we can decide next week if we should backport it or not.</p>",
        "id": 238700153,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1620951506
    }
]