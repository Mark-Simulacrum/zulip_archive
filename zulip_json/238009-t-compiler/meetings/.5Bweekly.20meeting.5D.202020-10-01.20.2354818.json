[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-10-01T14:00:00Z\">2020-10-01T14:00:00+00:00</time></p>",
        "id": 211849779,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506187
    },
    {
        "content": "<p><strong>WG-prioritization</strong> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 211849786,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506198
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/2HOfYckVTaOHBmLlLvvBXA?view\">meeting agenda</a></p>",
        "id": 211849838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506213
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span></p>",
        "id": 211849852,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506240
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>?</p>",
        "id": 211849864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>?</p>",
        "id": 211849885,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601506282
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in 1 hour and 41 minutes</p>",
        "id": 211900507,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601554749
    },
    {
        "content": "<p><a href=\"https://hackmd.io/2HOfYckVTaOHBmLlLvvBXA?view\">Check out the meeting agenda</a></p>",
        "id": 211900516,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601554762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211849852\">said</a>:</p>\n<blockquote>\n<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> friendly reminder of <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> in case you want to share something <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 211900612,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601554814
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 211914054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560796
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 211914145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560813
    },
    {
        "content": "<ul>\n<li>Rust 1.47 is going to be released next Thursday, October 8th.</li>\n</ul>",
        "id": 211914175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560826
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 211914186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560833
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"<code>ty.kind()</code> -&gt; <code>ty.data()</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211914208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560843
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"Promote aarch64-pc-windows-msvc to Tier 2 Development Platform\" <a href=\"https://github.com/rust-lang/rust/pull/75914\">rust#75914</a></li>\n<li>\"Set up CI for aarch64-apple-darwin\" <a href=\"https://github.com/rust-lang/rust/pull/75991\">rust#75991</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211914244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560859
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 211914268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560868
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Uplift <code>temporary-cstring-as-ptr</code> lint from <code>clippy</code> into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/346\">compiler-team#346</a></li>\n<li>\"Uplift <code>drop-bounds</code> lint from clippy into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a></li>\n<li>\"Add StatementKind::Intrinsic to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/348\">compiler-team#348</a></li>\n<li>\"Make TyKind Copy and change ty.kind() to return TyKind instead of &amp;TyKind\" <a href=\"https://github.com/rust-lang/compiler-team/issues/363\">compiler-team#363</a></li>\n</ul>\n</li>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"might_permit_raw_init: also check aggregate fields\" <a href=\"https://github.com/rust-lang/rust/pull/71274\">rust#71274</a></li>\n<li>[T-lang] \"target-feature 1.1: should closures inherit target-feature annotations?\" <a href=\"https://github.com/rust-lang/rust/issues/73631\">rust#73631</a></li>\n<li>[T-libs] \"Add PartialEq impls for Vec &lt;-&gt; slice\" <a href=\"https://github.com/rust-lang/rust/pull/74194\">rust#74194</a></li>\n<li>[T-lang] \"Explicitly document the size guarantees that Option makes.\" <a href=\"https://github.com/rust-lang/rust/pull/75454\">rust#75454</a></li>\n<li>[T-release] \"Write manifest for MAJOR.MINOR channel to enable rustup convenience\" <a href=\"https://github.com/rust-lang/rust/pull/76107\">rust#76107</a></li>\n<li>[T-lang] \"Stabilize move_ref_pattern\" <a href=\"https://github.com/rust-lang/rust/pull/76119\">rust#76119</a></li>\n<li>[T-lang] \"Permit uninhabited enums to cast into ints\" <a href=\"https://github.com/rust-lang/rust/pull/76199\">rust#76199</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211914308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560884
    },
    {
        "content": "<p>I'd love to hear if this <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> is useful (given that's not T-compiler)</p>",
        "id": 211914354,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601560901
    },
    {
        "content": "<p>(oop's; I meant those to be two separate messages but I overlooked the bulleting. My gut told me that list looked too long!)</p>",
        "id": 211914455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601560929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211914354\">said</a>:</p>\n<blockquote>\n<p>I'd love to hear if this <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> is useful (given that's not T-compiler)</p>\n</blockquote>\n<p>please let us know in <a class=\"stream-topic\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/finalized.20fcps.20for.20other.20teams\">#t-compiler/wg-prioritization &gt; finalized fcps for other teams</a></p>",
        "id": 211914588,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601560974
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/75914\">rust#75914</a> and <a href=\"https://github.com/rust-lang/rust/issues/75991\">rust#75991</a> both only need one more person to check their box before they go into final comment period.</p>",
        "id": 211914637,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601560993
    },
    {
        "content": "<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 211914654,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601561000
    },
    {
        "content": "<ul>\n<li>perf.rlo is benchmarking rustc bootstrapping itself, <a href=\"https://perf.rust-lang.org/bootstrap.html\">https://perf.rust-lang.org/bootstrap.html</a>, with noise as low as 2-3% on smaller crates, with wall-times</li>\n</ul>",
        "id": 211914742,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561032
    },
    {
        "content": "<p>(also on comparison pages in a secondary section, unclear how we'll combine the two as of yet)</p>",
        "id": 211914857,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561060
    },
    {
        "content": "<ul>\n<li>release process is changing a bit: tomorrow we will \"branch\" master to beta, see <a href=\"https://forge.rust-lang.org/release/process.html#bump-the-stable-version-number-t-6-days-friday-the-week-before\">https://forge.rust-lang.org/release/process.html#bump-the-stable-version-number-t-6-days-friday-the-week-before</a></li>\n</ul>",
        "id": 211915029,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561130
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211914742\">said</a>:</p>\n<blockquote>\n<ul>\n<li>perf.rlo is benchmarking rustc bootstrapping itself, <a href=\"https://perf.rust-lang.org/bootstrap.html\">https://perf.rust-lang.org/bootstrap.html</a>, with noise as low as 2-3% on smaller crates, with wall-times</li>\n</ul>\n</blockquote>\n<p>On that chart, the rustc_middle line seems like it settled at ~200 seconds to build. But there is <em>one</em> data point where it took 100 seconds. Do we know why that point was so low?</p>",
        "id": 211915232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561195
    },
    {
        "content": "<p>I would ignore the beginning, that was experimentation with different -jN levels and such</p>",
        "id": 211915307,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561223
    },
    {
        "content": "<p>ah gotcha</p>",
        "id": 211915330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561229
    },
    {
        "content": "<p>would it be worthwhile to remove those data points from the presentation then?</p>",
        "id": 211915406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561261
    },
    {
        "content": "<p>(or will that happen naturally?)</p>",
        "id": 211915426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561268
    },
    {
        "content": "<p>probably, yeah, just haven't gotten around to editing it, but it'll happen naturally in a month or so</p>",
        "id": 211915449,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561276
    },
    {
        "content": "<p>okay then maybe not worth stressing about.</p>",
        "id": 211915523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561292
    },
    {
        "content": "<p>unless you see other people asking the same Q I did. :)</p>",
        "id": 211915551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561302
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 211915597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> if you have checkin info from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> , feel free to post it here or in the <a href=\"https://hackmd.io/2HOfYckVTaOHBmLlLvvBXA?both\">hackmd agenda</a></p>",
        "id": 211915695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561353
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>:</p>\n<blockquote>\n<p>We've had quite a lot of activity recently!<br>\n- We released <code>measureme</code> 0.8 today <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span><br>\n  - Release highlights:<br>\n    - We have a new storage format contributed by <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> that records all of our data in one file instead of three<br>\n    - @_<strong>wesleywiser</strong> made some UI tweaks to the <code>summarize</code> tool so it's a bit nicer to use. The main one is that we no longer show columns for data that isn't applicable like parallel query blocking time if the compiler wasn't built with parallel support. <br>\n    - @_<strong>simulacrum</strong> made it possible to run the analysis tools from perf.rlo without writing profile data to disk.<br>\n    &gt;     - Several contributors (@_<strong>workingjubilee</strong>, @_<strong>Aaron1011</strong>, @_<strong>wesleywiser</strong>) updated and removed unneeded dependencies <span aria-label=\"medal\" class=\"emoji emoji-1f3c5\" role=\"img\" title=\"medal\">:medal:</span> <br>\n- @_<strong>mw</strong> has been working on additional improvements so that we can record query keys when building <code>rustc_middle</code>. Currently, <code>rustc_middle</code> is so large, it exhausts the address space we use for recording string data. <a href=\"https://github.com/rust-lang/measureme/pull/137\">rust-lang/measureme#137</a> will resolve that and allow us to profile even extremely large crates with query keys enabled. This is a breaking change so <code>0.9.0</code> (or perhaps <code>9.0</code>) is likely going to ship soon.<br>\n- @_<strong>eddyb</strong> continues to work on adding support for reading hardware performance counters like <code>perf</code> does instead of using <code>std::time::Instant</code> for much more precise timings.</p>\n</blockquote>",
        "id": 211915723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> (or <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ) Will the HW perf counters also decrease noise in addition to increasing precision?</p>",
        "id": 211915939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561434
    },
    {
        "content": "<p>(perhaps that will depend on which counters are used...)</p>",
        "id": 211916011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561464
    },
    {
        "content": "<p>the additional \"precision\" specifically means less noise</p>",
        "id": 211916015,
        "sender_full_name": "eddyb",
        "timestamp": 1601561465
    },
    {
        "content": "<p>cool, thanks</p>",
        "id": 211916036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561474
    },
    {
        "content": "<p>or rather, 0 noise <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 211916054,
        "sender_full_name": "eddyb",
        "timestamp": 1601561480
    },
    {
        "content": "<p>(at least on some platforms)</p>",
        "id": 211916064,
        "sender_full_name": "eddyb",
        "timestamp": 1601561486
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211916200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561532
    },
    {
        "content": "<ul>\n<li>\"Rename Iterator::get_unchecked\" <a href=\"https://github.com/rust-lang/rust/pull/77201\">rust#77201</a><ul>\n<li>Closes <code>P-critical</code> <a href=\"https://github.com/rust-lang/rust/issues/76479\">rust#76479</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211916216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561539
    },
    {
        "content": "<p>yeah I should have just unilaterally beta-approved this one</p>",
        "id": 211916301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561580
    },
    {
        "content": "<p>beta approved</p>",
        "id": 211916334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561592
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211916356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561602
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211916372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561609
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 211916389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561615
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">54 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">33 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 1 P-high, 5 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 3 P-high, 4 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 20 P-high, 59 P-medium, 6 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 211916406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561623
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211916432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561636
    },
    {
        "content": "<ul>\n<li>\"Optimisation-caused UB during cross-crate compilation\" <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n<li>Is not a regression, this never worked so it was also discussed if this was <code>P-critical</code> or <code>P-high</code></li>\n<li><a href=\"https://bugs.llvm.org/show_bug.cgi?id=47444\">It's an LLVM bug</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> <a href=\"https://github.com/rust-lang/rust/issues/76387#issuecomment-690610859\">left a patch up for review upstream and can be cherry picked if needed</a></li>\n<li><a href=\"https://reviews.llvm.org/D87474#2302407\">A possibly \"nicer\" solution was posted on LLVM issue</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211916484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561645
    },
    {
        "content": "<p>looks like <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> was assigned as a reviewer on the <a href=\"https://reviews.llvm.org/D88529\">nicer solution</a> too</p>",
        "id": 211916629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561707
    },
    {
        "content": "<p>as the last line says a possible better solution was proposed by the person that was going to review <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>'s PR</p>",
        "id": 211916633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601561708
    },
    {
        "content": "<p>this seems like its under control, in any case</p>",
        "id": 211916728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561744
    },
    {
        "content": "<ul>\n<li>\"regression: get_unchecked resolves to unstable feature use\" <a href=\"https://github.com/rust-lang/rust/issues/76479\">rust#76479</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to @<strong>matthewjasper</strong></li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> after hitting the issue on a crater run</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested that is expected breakage (before the MCVE was built)</li>\n<li>Beta regression that started on PR <a href=\"https://github.com/rust-lang/rust/pull/73565\">rust#73565</a> cc <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n<li>This is waiting for <a href=\"https://github.com/rust-lang/rust/pull/77201\">rust#77201</a> backport</li>\n</ul>\n</li>\n</ul>",
        "id": 211916758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561757
    },
    {
        "content": "<p>(we just approved the backport on this one)</p>",
        "id": 211916821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561766
    },
    {
        "content": "<p>with the just approved backport this is solved</p>",
        "id": 211916823,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601561768
    },
    {
        "content": "<p>yep, and backport already happened actually so this is good</p>",
        "id": 211916844,
        "sender_full_name": "simulacrum",
        "timestamp": 1601561776
    },
    {
        "content": "<ul>\n<li>\"Segfaults/corruption when reading an enum in release mode\" <a href=\"https://github.com/rust-lang/rust/issues/77359\">rust#77359</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/77359#issuecomment-701433566\">There's an MCVE</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/77359#issuecomment-701423281\">SimplifyArmIdentity moves an assignment to a local before StorageLive</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/77359#issuecomment-701433566\">@**Wesley Wiser** offered to disable the optimization so this doesn't hit beta</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211916883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561791
    },
    {
        "content": "<p>I have a PR up that does so</p>",
        "id": 211916921,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601561809
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211916844\">said</a>:</p>\n<blockquote>\n<p>yep, and backport already happened actually so this is good</p>\n</blockquote>\n<p>ah okay thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 211916970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561831
    },
    {
        "content": "<p>(see <a href=\"https://github.com/rust-lang/rust/issues/77308\">#77308</a> for aforementioned backport PR, which explicitly notes that two of the patches were not yet approved...)</p>",
        "id": 211917065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211916844\">said</a>:</p>\n<blockquote>\n<p>yep, and backport already happened actually so this is good</p>\n</blockquote>\n<p>then we can close <a href=\"https://github.com/rust-lang/rust/issues/76479\">#76479</a></p>",
        "id": 211917112,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601561884
    },
    {
        "content": "<p>hmm two ... but we only had one PR that we looked at above ...</p>",
        "id": 211917120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561891
    },
    {
        "content": "<p>/me looks at the list of backported PR's on <a href=\"https://github.com/rust-lang/rust/issues/77308\">#77308</a></p>",
        "id": 211917141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561901
    },
    {
        "content": "<p>oh did we approve <a href=\"https://github.com/rust-lang/rust/issues/77063\">#77063</a> last week or something?</p>",
        "id": 211917210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561938
    },
    {
        "content": "<p>I thought we did</p>",
        "id": 211917280,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601561968
    },
    {
        "content": "<p>yes we did. okay sorry for the confusion.</p>",
        "id": 211917284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601561969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211916921\">said</a>:</p>\n<blockquote>\n<p>I have a PR up that does so</p>\n</blockquote>\n<p>thanks for this <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ! Okay so <a href=\"https://github.com/rust-lang/rust/issues/77359\">#77359</a> is also under control then.</p>",
        "id": 211917421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562013
    },
    {
        "content": "<ul>\n<li>\"coreos-installer test segfaults on s390x-unknown-linux-gnu\" <a href=\"https://github.com/rust-lang/rust/issues/77382\">rust#77382</a><br>\n    - Opened by <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span><br>\n    - <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> points to this issue as duplicate of <a href=\"https://github.com/rust-lang/rust/issues/74551\">rust#74551</a><br>\n    - Seems like a mir-opt misoptimization<br>\n    - Crossreferenced in Bugzilla issue <a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1883457\">#1883457</a></li>\n</ul>",
        "id": 211917451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562024
    },
    {
        "content": "<p>Not directly a duplicate, just similar enough that they <em>might</em> have the same root cause</p>",
        "id": 211917731,
        "sender_full_name": "cuviper",
        "timestamp": 1601562151
    },
    {
        "content": "<p>is s390x also a big-endian 64-bit system?</p>",
        "id": 211917747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562158
    },
    {
        "content": "<p>Yes</p>",
        "id": 211917755,
        "sender_full_name": "cuviper",
        "timestamp": 1601562162
    },
    {
        "content": "<p>I wonder if ARM64 is also big-endian.</p>",
        "id": 211917784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562176
    },
    {
        "content": "<p>ISTR that arm can choose, but it's LE in our targets</p>",
        "id": 211917873,
        "sender_full_name": "cuviper",
        "timestamp": 1601562216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> made the excellent point on the comments for <a href=\"https://github.com/rust-lang/rust/issues/77382\">#77382</a> that <em>if</em> this is the same root cause, then <a href=\"https://github.com/rust-lang/rust/issues/77382\">#77382</a> provides us with a better starting point for investigation, since it is failing in a crate test case rather than during Firefox build process.</p>",
        "id": 211917969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562246
    },
    {
        "content": "<p>but of course in the end we still have the problem of trying to reproduce bug for Tier2 platform that not all of us have immediate access to...</p>",
        "id": 211918061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562292
    },
    {
        "content": "<p>I'm going to try and reduce the test case today, and start looking MIR / LLVM IR</p>",
        "id": 211918190,
        "sender_full_name": "cuviper",
        "timestamp": 1601562342
    },
    {
        "content": "<p>You may also want to look at whether applying PR <a href=\"https://github.com/rust-lang/rust/issues/76081\">#76081</a> fixes it for you.</p>",
        "id": 211918240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562361
    },
    {
        "content": "<p>you don't even need to apply the PR, you can try just using <code>-Zmir-opt-level=0</code></p>",
        "id": 211918368,
        "sender_full_name": "oli",
        "timestamp": 1601562412
    },
    {
        "content": "<p>(I know that we want to avoid landing PR <a href=\"https://github.com/rust-lang/rust/issues/76081\">#76081</a> since it does regress things, but maybe you can use it to provide more guidance into what is going wrong in <a href=\"https://github.com/rust-lang/rust/issues/77382\">#77382</a>. Who knows, maybe there was a latent bug in PR <a href=\"https://github.com/rust-lang/rust/issues/68528\">#68528</a> ...)</p>",
        "id": 211918384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but that disables even more mir-opts, right?</p>",
        "id": 211918453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562449
    },
    {
        "content": "<p>yes</p>",
        "id": 211918471,
        "sender_full_name": "oli",
        "timestamp": 1601562461
    },
    {
        "content": "<p>which may make it more difficult to isolate the relevant change to the generated LLVM IR</p>",
        "id": 211918492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562472
    },
    {
        "content": "<p>that's true</p>",
        "id": 211918498,
        "sender_full_name": "oli",
        "timestamp": 1601562476
    },
    {
        "content": "<p>is there a way to toggle individual mir-opts on/off via <code>-Z</code> flags?</p>",
        "id": 211918563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562489
    },
    {
        "content": "<p>or actually, don't we have optimization fuel?</p>",
        "id": 211918625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562515
    },
    {
        "content": "<p>/me looks</p>",
        "id": 211918636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562519
    },
    {
        "content": "<p>Most mir-opts don't use optimization fuel</p>",
        "id": 211918725,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601562551
    },
    {
        "content": "<p>oh. shouldn't they?</p>",
        "id": 211918753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562563
    },
    {
        "content": "<p>I think MIR inlining is the only one that does</p>",
        "id": 211918767,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601562565
    },
    {
        "content": "<p>Probably yeah :)</p>",
        "id": 211918791,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601562573
    },
    {
        "content": "<p>Okay.</p>",
        "id": 211918808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562578
    },
    {
        "content": "<p>also a way to individually enable/disable opts sounds like a good thing, too. I'm opening issues</p>",
        "id": 211918848,
        "sender_full_name": "oli",
        "timestamp": 1601562597
    },
    {
        "content": "<p>anyway, this is off topic for the actual thing we were talking about</p>",
        "id": 211918921,
        "sender_full_name": "oli",
        "timestamp": 1601562608
    },
    {
        "content": "<p>Opt fuel is definitely something I've found useful in other compiler projects for tracking down nice demo's of why somethings wrong</p>",
        "id": 211918952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562619
    },
    {
        "content": "<p>Right</p>",
        "id": 211918964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562622
    },
    {
        "content": "<p>For the actual thing we're talking about, <a href=\"https://github.com/rust-lang/rust/issues/77382\">#77382</a></p>",
        "id": 211918988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562631
    },
    {
        "content": "<p>its currently marked P-critical</p>",
        "id": 211919008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562638
    },
    {
        "content": "<p>this is a Tier2 platform</p>",
        "id": 211919030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562648
    },
    {
        "content": "<p>but the number of different targets that <em>might</em> be getting hit by the same root bug is pretty scary</p>",
        "id": 211919071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562664
    },
    {
        "content": "<p>I'm okay with leaving this P-critical for now</p>",
        "id": 211919134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562686
    },
    {
        "content": "<p>but it should have someone assigned...</p>",
        "id": 211919196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> do you mind if I assign you, since it sounds like you're already actively investigating?</p>",
        "id": 211919301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562739
    },
    {
        "content": "<p>That's fine</p>",
        "id": 211919420,
        "sender_full_name": "cuviper",
        "timestamp": 1601562789
    },
    {
        "content": "<p>great</p>",
        "id": 211919428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562794
    },
    {
        "content": "<p>okay lets move along then</p>",
        "id": 211919434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562797
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 211919467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562816
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>",
        "id": 211919481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562825
    },
    {
        "content": "<ul>\n<li>\"Build hang on Linux with nightly and beta toolchains\" <a href=\"https://github.com/rust-lang/rust/issues/76980\">rust#76980</a><ul>\n<li>Unassigned</li>\n<li>Build hangs on beta</li>\n<li><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> bisected it to <a href=\"https://github.com/rust-lang/rust/pull/73526\">rust#73526</a></li>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> <a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-695805807\">is not aware of any LLVM 11 issue like that </a></li>\n<li>Assigned <code>P-high</code> and requested an MCVE, we probably need to get more context about this issue</li>\n</ul>\n</li>\n</ul>",
        "id": 211919508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562835
    },
    {
        "content": "<p>this <em>does</em> have an MCVE now, by the way</p>",
        "id": 211919709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562907
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76980#issuecomment-698473949\">https://github.com/rust-lang/rust/issues/76980#issuecomment-698473949</a></p>",
        "id": 211919736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601562920
    },
    {
        "content": "<p>this is going to hit stable</p>",
        "id": 211919956,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601562990
    },
    {
        "content": "<p>so the main issue is that <a href=\"https://github.com/KhronosGroup/SPIRV-Tools/blob/9edeeafdb64213453a0b33a8acb33b8418b40d46/source/name_mapper.cpp#L34-L40\">this code</a> is returning an empty string, according to a debugger investigation</p>",
        "id": 211920053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563038
    },
    {
        "content": "<p>and that breaks invariants of some other code</p>",
        "id": 211920079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563051
    },
    {
        "content": "<p>definitely seems goofy</p>",
        "id": 211920122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563075
    },
    {
        "content": "<p>but it also isn't clear if <em>we</em> can do anything about it, based on the claims in the bug report.</p>",
        "id": 211920192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563095
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 211920249,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601563128
    },
    {
        "content": "<p>I recently got <code>rr</code> working on my AMD box. I'd like to step backwards to find out why that code is returning an empty string, since I would think that impossible here.</p>",
        "id": 211920251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563128
    },
    {
        "content": "<p>Reading the issue it seems like a bug in the library they're using?</p>",
        "id": 211920298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601563148
    },
    {
        "content": "<p>As in, the question is how it <em>ever</em> worked, not why it broke</p>",
        "id": 211920299,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601563148
    },
    {
        "content": "<p>well I'd like to know if that <code>os.str()</code> call is <em>allowed</em> to return empty string</p>",
        "id": 211920339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563171
    },
    {
        "content": "<p>if it is, then sure, that's definitely a bug</p>",
        "id": 211920361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563180
    },
    {
        "content": "<p>anyway</p>",
        "id": 211920392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563191
    },
    {
        "content": "<p>we're in the weeds</p>",
        "id": 211920397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563194
    },
    {
        "content": "<p>I don't think we can do anything about this. and I don't think we're going to block the release based on it.</p>",
        "id": 211920477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563217
    },
    {
        "content": "<p>lets move along. I'm not going to assign myself; I'm more vaguely hoping I remember to look at it later.</p>",
        "id": 211920594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563262
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>",
        "id": 211920614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563269
    },
    {
        "content": "<ul>\n<li>\"Linker error with wasm target with spaces in install path\" <a href=\"https://github.com/rust-lang/rust/issues/76466\">rust#76466</a><ul>\n<li>Unassigned</li>\n<li>Reported by <span class=\"user-mention\" data-user-id=\"198951\">@Jordan Miner</span> </li>\n<li>Nightly regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">Probably an LLVM 11 regression</a></li>\n<li>Reporter ran into the issues on a <strong>Win10 64bit</strong> and suggests a possible range of <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">culprit commits</a> </li>\n<li><span class=\"user-mention\" data-user-id=\"218378\">@Mason Stallmo</span> could not reproduce on both Windows or Linux 64bit, therefore suggests a possible <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-693805846\">Windows 32bit only regression</a></li>\n<li><span class=\"user-mention\" data-user-id=\"118022\">@retep007</span> <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-697130900\">suggests that it may be an lld issue</a></li>\n<li><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> points to <a href=\"https://github.com/llvm/llvm-project/commit/928e9e172305752583a75a8174ab5a87b4e09d80\">this commit</a> as possible culprit</li>\n</ul>\n</li>\n</ul>",
        "id": 211920664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563289
    },
    {
        "content": "<p>oh this was a great chat from last week</p>",
        "id": 211920687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563300
    },
    {
        "content": "<p>and I think <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> had some theories on things we could do on our end to mitigate this</p>",
        "id": 211920772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563326
    },
    {
        "content": "<p>oh nothing happened since</p>",
        "id": 211920778,
        "sender_full_name": "eddyb",
        "timestamp": 1601563328
    },
    {
        "content": "<p>yeah there's two solutions: pass a flag to revert behavior, or just do something universal</p>",
        "id": 211920825,
        "sender_full_name": "eddyb",
        "timestamp": 1601563348
    },
    {
        "content": "<p>(universal as in windows and non-windows would both parse it correctly)</p>",
        "id": 211920867,
        "sender_full_name": "eddyb",
        "timestamp": 1601563363
    },
    {
        "content": "<p><a href=\"#narrow/stream/131828-t-compiler/topic/LLD.20breaks.20on.20Windows.20with.20spaces.20in.20filepaths/near/211267603\">last weeks' discussion here</a></p>",
        "id": 211920884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563374
    },
    {
        "content": "<p>It seems to me like we should first land a patch to pass the flag</p>",
        "id": 211920922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563393
    },
    {
        "content": "<p>because that sounds least risky and also relatively little effort</p>",
        "id": 211920963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563412
    },
    {
        "content": "<p>and then maybe follow up with the universal solution if that has benefits</p>",
        "id": 211920989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563427
    },
    {
        "content": "<p>(in terms of having a simpler code base to maintain, uniformity across targets, etc)</p>",
        "id": 211921054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563446
    },
    {
        "content": "<p>it's just removing a few lines I think</p>",
        "id": 211921072,
        "sender_full_name": "eddyb",
        "timestamp": 1601563456
    },
    {
        "content": "<p>the windows escaping should \"just work\" on non-windows</p>",
        "id": 211921096,
        "sender_full_name": "eddyb",
        "timestamp": 1601563466
    },
    {
        "content": "<p>i dunno, famous last words?</p>",
        "id": 211921123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563479
    },
    {
        "content": "<p>anyway</p>",
        "id": 211921129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563481
    },
    {
        "content": "<p>it would be good to fix this, but its not mission critical right now, right?</p>",
        "id": 211921171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563498
    },
    {
        "content": "<p>If this will be a late beta backport, better to not affect other targets</p>",
        "id": 211921255,
        "sender_full_name": "cuviper",
        "timestamp": 1601563527
    },
    {
        "content": "<p>i.e. its only affecting nightly, not beta? (Though why doesn't it affect beta too? I thought beta had the LLVM 11 changes ...)</p>",
        "id": 211921256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563528
    },
    {
        "content": "<p>/me double checks the claim that its nightly only</p>",
        "id": 211921283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563540
    },
    {
        "content": "<p>the risk with passing the flag is older <code>rust-lld</code> not recognizing it, or maybe some users have custom setups</p>",
        "id": 211921332,
        "sender_full_name": "eddyb",
        "timestamp": 1601563562
    },
    {
        "content": "<p>but it seems unlikely to be a problem</p>",
        "id": 211921394,
        "sender_full_name": "eddyb",
        "timestamp": 1601563569
    },
    {
        "content": "<p>(if everyone uses wasm through our distributed <code>rust-lld</code>)</p>",
        "id": 211921434,
        "sender_full_name": "eddyb",
        "timestamp": 1601563585
    },
    {
        "content": "<p>am I complete misremembering <em>where</em> the LLVM upgrade is?</p>",
        "id": 211921515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563613
    },
    {
        "content": "<p>its in beta now too right? Or is it <em>about</em> to be promoted to beta?</p>",
        "id": 211921554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563623
    },
    {
        "content": "<p>It is in beta, yes</p>",
        "id": 211921575,
        "sender_full_name": "cuviper",
        "timestamp": 1601563632
    },
    {
        "content": "<p>so why doesn't <a href=\"https://github.com/rust-lang/rust/issues/76466\">#76466</a> also regress beta?</p>",
        "id": 211921605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563642
    },
    {
        "content": "<p>it... should, right?</p>",
        "id": 211921658,
        "sender_full_name": "eddyb",
        "timestamp": 1601563662
    },
    {
        "content": "<p>is wasm a nightly-only feature?</p>",
        "id": 211921660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563662
    },
    {
        "content": "<p>we need to figure this out</p>",
        "id": 211921684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563672
    },
    {
        "content": "<p>also the escaping thing is almost hilarious in that the comment points out we could be using quotes but we don't for simplicity (and instead escape spaces)</p>",
        "id": 211921696,
        "sender_full_name": "eddyb",
        "timestamp": 1601563678
    },
    {
        "content": "<p>I'll assign myself this ticket</p>",
        "id": 211921700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563679
    },
    {
        "content": "<p>but there's no actual complexity difference, it's just unnecessarily different</p>",
        "id": 211921794,
        "sender_full_name": "eddyb",
        "timestamp": 1601563696
    },
    {
        "content": "<p>to figure out if this is affecting beta too. Amazing we didn't cover that in our big discussion a week ago.</p>",
        "id": 211921806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563703
    },
    {
        "content": "<p>It was bisected to 1.47-nightly exactly where LLVM 11 landed. That's definitely beta now</p>",
        "id": 211921887,
        "sender_full_name": "cuviper",
        "timestamp": 1601563748
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Most significant changes this week came in response to regressions discussed in<br>\nlast week's triage report. Curious readers may be interested in<br>\n<a href=\"https://github.com/rust-lang/rust/issues/77058\">#77058</a>, in which the removal<br>\nof a single field from a struct caused a 25% decrease in wall-times for one<br>\nseemingly unrelated benchmark, or<br>\n<a href=\"https://github.com/rust-lang/rust/issues/76986\">#76986</a>, an ABI change that<br>\nshould be a pretty clear win but seems to have mixed results.</p>",
        "id": 211921893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563753
    },
    {
        "content": "<p>(I'm going to move along, hopefully I will actually follow through on my above promise to investigate and then fix if needed.)</p>",
        "id": 211921929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563776
    },
    {
        "content": "<p>Triage done by <strong>@ecstaticmorse</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=b01326ab033e41986d4a5c8b96ce4f40f3b38e30&amp;end=6369a98ebdee8ce01510f5d4307ddb771c8cb0e5&amp;absolute=false&amp;stat=instructions%3Au\">b01326ab033e41986d4a5c8b96ce4f40f3b38e30..6369a98ebdee8ce01510f5d4307ddb771c8cb0e5</a></p>\n<p>0 Regressions, 1 Improvements, 3 Mixed</p>\n<p>0 of them in rollups</p>",
        "id": 211921946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563787
    },
    {
        "content": "<h3>Improvements</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77041\">#77041</a> perf: move cold path of <code>process_obligations</code> into a separate function</p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=fadf0257235ddb8a464befc02e50b35652174689&amp;end=521d8d8a2236a239e3327336844ed5948857ea31&amp;stat=instructions:u\">instruction counts</a> (up to -4.8% on <code>full</code> builds of <code>inflate-check</code>)</li>\n<li>Fixes a regression introduced in <a href=\"https://github.com/rust-lang/rust/issues/76575\">#76575</a>.</li>\n</ul>",
        "id": 211921967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563796
    },
    {
        "content": "<h3>Mixed</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77006\">#77006</a>  Cache <code>eval_to_allocation_raw</code> on disk</p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=893fadd11a52aa26fc19c67ee1b79f03d6a1bed3&amp;end=87d262acb50200d767baa7115f30c650a13672ee&amp;stat=instructions:u\">instruction counts</a> (up to -83.9% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=893fadd11a52aa26fc19c67ee1b79f03d6a1bed3&amp;end=87d262acb50200d767baa7115f30c650a13672ee&amp;stat=task-clock\">task clock</a> (up to 14.5% on <code>incr-full</code> builds of <code>ctfe-stress-4-check</code>),</li>\n<li>Fixes a regression introduced in <a href=\"https://github.com/rust-lang/rust/issues/74949\">#74949</a>.</li>\n<li><code>incr-full</code> builds of <code>ctfe-stress-4</code> also have significantly increased <a href=\"https://perf.rust-lang.org/?start=b01326ab033e41986d4a5c8b96ce4f40f3b38e30&amp;end=6369a98ebdee8ce01510f5d4307ddb771c8cb0e5&amp;absolute=false&amp;stat=instructions%3Au\"><code>max-rss</code></a>.</li>\n<li>Real-world benchmarks seem to have mostly improved, however.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76913\">#76913</a>  Fixing the performance regression of <a href=\"https://github.com/rust-lang/rust/issues/76244\">#76244</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=f47df31ae5d7d9795399dca3a0003c1856900361&amp;end=45198456be60a6906d24abdc3c67a31b9206188e&amp;stat=instructions:u\">instruction counts</a> (up to -3.1% on <code>full</code> builds of <code>unicode_normalization-check</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=f47df31ae5d7d9795399dca3a0003c1856900361&amp;end=45198456be60a6906d24abdc3c67a31b9206188e&amp;stat=instructions:u\">instruction counts</a> (up to 2.7% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>A temporary revert of <a href=\"https://github.com/rust-lang/rust/issues/76244\">#76244</a> to fix a rather large wall time regression in <code>unicode-normalization</code>.</li>\n<li>Gains will reappear as part of <a href=\"https://github.com/rust-lang/rust/issues/77257\">#77257</a> with the losses mitigated.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76986\">#76986</a> Return values up to 128 bits in registers</p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1ec980d225fff2346a1a631a7ffc88b37e9e18af&amp;end=62fe055aba3ddac5e5d113920cf5fd80522104e2&amp;stat=instructions:u\">instruction counts</a> (up to 2.3% on <code>full</code> builds of <code>deeply-nested-debug</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1ec980d225fff2346a1a631a7ffc88b37e9e18af&amp;end=62fe055aba3ddac5e5d113920cf5fd80522104e2&amp;stat=instructions:u\">instruction counts</a> (up to -1.9% on <code>full</code> builds of <code>piston-image-opt</code>)</li>\n<li>Seems to be a slight regression overall, even looking at <a href=\"https://perf.rust-lang.org/compare.html?start=1ec980d225fff2346a1a631a7ffc88b37e9e18af&amp;end=62fe055aba3ddac5e5d113920cf5fd80522104e2&amp;stat=task-clock\"><code>task-clock</code></a> measurements.</li>\n</ul>",
        "id": 211922037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563821
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76986\">#76986</a></li>\n</ul>",
        "id": 211922129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563867
    },
    {
        "content": "<p>who does the nags?</p>",
        "id": 211922158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563880
    },
    {
        "content": "<p>(perf triagers)</p>",
        "id": 211922191,
        "sender_full_name": "simulacrum",
        "timestamp": 1601563891
    },
    {
        "content": "<p>(or does mentioning it in this meeting <em>act as</em> the nag)</p>",
        "id": 211922200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563895
    },
    {
        "content": "<p>okay.</p>",
        "id": 211922203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563896
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 211922288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563923
    },
    {
        "content": "<ul>\n<li>\"Widen TypeId from 64 bits to 128.\" <a href=\"https://github.com/rust-lang/rust/pull/75923\">rust#75923</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/75923#issuecomment-684051064\">nominated it to talk about <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>'s concern wrt to typeid stabilization; it might be a T-lang question too</a>.</li>\n<li><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <code>KodrAus</code> <a href=\"https://github.com/rust-lang/rust/pull/75923#issuecomment-696696433\">have agreed on reverting <code>TypeId</code> stabilization</a> before it hits stable, <a href=\"https://github.com/rust-lang/rust/pull/75923#issuecomment-696604147\">until we get a chance to settle this entirely</a>.</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75923#issuecomment-699096904\">Changes to <code>TypeId</code> could easily break Firefox</a></li>\n</ul>\n</li>\n</ul>",
        "id": 211922328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563936
    },
    {
        "content": "<p>We've since reverted const typeid on beta/master, so this is not too urgent anymore.</p>",
        "id": 211922385,
        "sender_full_name": "simulacrum",
        "timestamp": 1601563965
    },
    {
        "content": "<p><code>const fn</code> <code>TypeId::of</code> stabilization to be clear</p>",
        "id": 211922390,
        "sender_full_name": "eddyb",
        "timestamp": 1601563966
    },
    {
        "content": "<p>okay</p>",
        "id": 211922406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601563978
    },
    {
        "content": "<p>is there anything to try to discuss here? Or is this worth of an MCP and/or design meeting?</p>",
        "id": 211922456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564001
    },
    {
        "content": "<p>unsure. we should maybe try to push \"users\" of <code>TypeId</code>'s internal representation off of it</p>",
        "id": 211922594,
        "sender_full_name": "eddyb",
        "timestamp": 1601564057
    },
    {
        "content": "<p>hmm</p>",
        "id": 211922605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564063
    },
    {
        "content": "<p>there are alternatives, like going through the <code>Hash</code> interface, that are effectively supported</p>",
        "id": 211922664,
        "sender_full_name": "eddyb",
        "timestamp": 1601564085
    },
    {
        "content": "<p>Maybe a future-incompat warning to people who observe it?</p>",
        "id": 211922678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564088
    },
    {
        "content": "<p>(like passing it to transmute, I guess)</p>",
        "id": 211922716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564104
    },
    {
        "content": "<p>okay well lets see what the other nominations are</p>",
        "id": 211922773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564123
    },
    {
        "content": "<p>it might just be firefox that we care about, given the results of the  crater run</p>",
        "id": 211922777,
        "sender_full_name": "eddyb",
        "timestamp": 1601564126
    },
    {
        "content": "<p>we can probably do something about that</p>",
        "id": 211922797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564139
    },
    {
        "content": "<p>I hope</p>",
        "id": 211922802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564140
    },
    {
        "content": "<ul>\n<li>\"Set up CI for aarch64-apple-darwin\" <a href=\"https://github.com/rust-lang/rust/pull/75991\">rust#75991</a><ul>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> for compiler approval</li>\n<li>This PR is promoting the aarch64-apple-darwin target from Tier 3 to a Tier 2 development platform</li>\n</ul>\n</li>\n</ul>",
        "id": 211922821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564147
    },
    {
        "content": "<p>there's check boxes here, right?</p>",
        "id": 211922850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564161
    },
    {
        "content": "<p>I think we forgot to remove the I-nominated label</p>",
        "id": 211922903,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601564168
    },
    {
        "content": "<p>ah they're all checked, excpet for niko and me</p>",
        "id": 211922939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564181
    },
    {
        "content": "<p>great</p>",
        "id": 211922942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564183
    },
    {
        "content": "<ul>\n<li>\"Macro hygiene change breaks Firefox builds.\" <a href=\"https://github.com/rust-lang/rust/issues/76480\">rust#76480</a><ul>\n<li>Breaking change</li>\n<li>Nominated for discussion about how can we do better here</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n</ul>\n</li>\n</ul>",
        "id": 211922981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564203
    },
    {
        "content": "<p>So at this point both <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> have weighed in on that ticket saying that this was unambiguously a bugfix</p>",
        "id": 211923142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564275
    },
    {
        "content": "<p>and that a warning-cycle is not feasible</p>",
        "id": 211923199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564286
    },
    {
        "content": "<p>The main suggestion is that we doa  \"public announcement' warning about the change</p>",
        "id": 211923231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564304
    },
    {
        "content": "<p>the relevant PR <em>is</em> tagged with relnotes</p>",
        "id": 211923292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564337
    },
    {
        "content": "<p>namely <a href=\"https://github.com/rust-lang/rust/issues/73084\">#73084</a></p>",
        "id": 211923301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564341
    },
    {
        "content": "<p>I'm now curous</p>",
        "id": 211923377,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564378
    },
    {
        "content": "<p>the relnotes, those go out with changes associated with the <em>stable release</em>, right?</p>",
        "id": 211923425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564397
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^</p>",
        "id": 211923432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564400
    },
    {
        "content": "<p>Perhaps part of the problem here is that firefox uses more recent builds than stable, and so they might get blindsided more easily?</p>",
        "id": 211923514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564419
    },
    {
        "content": "<p>yes</p>",
        "id": 211923529,
        "sender_full_name": "simulacrum",
        "timestamp": 1601564422
    },
    {
        "content": "<p>that's something to think about, at least.</p>",
        "id": 211923538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564431
    },
    {
        "content": "<p>anyway this seems like its handled, in the sense that we <em>will</em> have relnotes for this</p>",
        "id": 211923583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564453
    },
    {
        "content": "<p>the only issue I can see is whether we should have beta/nightly relnotes?</p>",
        "id": 211923625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564472
    },
    {
        "content": "<p>(nightly relnotes is probably silly)</p>",
        "id": 211923635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564479
    },
    {
        "content": "<p>beta relnotes seems plausible</p>",
        "id": 211923663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564492
    },
    {
        "content": "<p>but: Our hour is up! and, huzzah, we actually got through the whole agenda this week??? Is it possible?</p>",
        "id": 211923677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564500
    },
    {
        "content": "<p><em>incroyable</em></p>",
        "id": 211923685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564503
    },
    {
        "content": "<p>we usually cannot prepare relnotes fast enough for beta</p>",
        "id": 211923697,
        "sender_full_name": "simulacrum",
        "timestamp": 1601564508
    },
    {
        "content": "<p>another idea:</p>",
        "id": 211923791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564528
    },
    {
        "content": "<p>we could have a notification group</p>",
        "id": 211923800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564533
    },
    {
        "content": "<p>\"relnotes\"</p>",
        "id": 211923809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564535
    },
    {
        "content": "<p>and we just do @rustbot ping relnotes</p>",
        "id": 211923821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564540
    },
    {
        "content": "<p>yeah there's some argument to be made that \"if you're on beta, you need to be keeping track of the deltas\"</p>",
        "id": 211923827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564542
    },
    {
        "content": "<p>and that tags it as relnotes, and pings folks who asked to be pinged</p>",
        "id": 211923845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564549
    },
    {
        "content": "<p>and we suggest that consumers like FF follow that</p>",
        "id": 211923886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564563
    },
    {
        "content": "<p>this is a good point too.</p>",
        "id": 211923928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564580
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the heart of what you're saying, if I understand right,</p>",
        "id": 211923964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564591
    },
    {
        "content": "<p>is that we don't need full release notes for beta</p>",
        "id": 211923984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564597
    },
    {
        "content": "<p>just a summary list of the issues</p>",
        "id": 211923997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564603
    },
    {
        "content": "<p>right?</p>",
        "id": 211924009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564608
    },
    {
        "content": "<p>so if the relevant PR's are already appropriate tagged, that might suffice for beta customers, right?</p>",
        "id": 211924055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564626
    },
    {
        "content": "<p>well</p>",
        "id": 211924080,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564638
    },
    {
        "content": "<p>that was different than what I was saying, but also seems true :)</p>",
        "id": 211924104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601564644
    },
    {
        "content": "<p>(this is arguably something that someone who knows enough github search queries should be able to do as a query)</p>",
        "id": 211924161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> okay. I wasn't sure what pinging relnotes would do besides link people to those issues, which the <code>relnotes</code> label also does</p>",
        "id": 211924264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564703
    },
    {
        "content": "<p>anyway it sounds like we should be able to address this reasonably, as long we don't set the bar so high as \"have full documented relnotes for beta release\"</p>",
        "id": 211924342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564738
    },
    {
        "content": "<p>okay that's all folks, thanks for attending everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> !</p>",
        "id": 211924362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601564750
    },
    {
        "content": "<p>we will be filling next week agenda <a href=\"https://hackmd.io/xvEIq4ShQB6IhPIHZTZa7A?both\">here</a></p>",
        "id": 211924744,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601564888
    },
    {
        "content": "<p>and we will have a checkin from <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span></p>",
        "id": 211924934,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601564973
    },
    {
        "content": "<p>if the group has something that wants to share, feel free to fill it in the corresponding part of the agenda cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 211924978,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1601564997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211917784\">said</a>:</p>\n<blockquote>\n<p>I wonder if ARM64 is also big-endian.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-01.20.2354818/near/211917873\">said</a>:</p>\n<blockquote>\n<p>ISTR that arm can choose, but it's LE in our targets</p>\n</blockquote>\n<p>not a super useful distinction as while the architecture may support this, almost nothing else does in practice.</p>",
        "id": 211992553,
        "sender_full_name": "nagisa",
        "timestamp": 1601598694
    },
    {
        "content": "<p>I double-checked, <code>AArch64TargetMachine</code> does go both ways</p>",
        "id": 211993276,
        "sender_full_name": "cuviper",
        "timestamp": 1601599433
    },
    {
        "content": "<p>Linaro also publishes <code>aarch64_be</code> cross-gcc toolchains</p>",
        "id": 211993461,
        "sender_full_name": "cuviper",
        "timestamp": 1601599624
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 211993468,
        "sender_full_name": "cuviper",
        "timestamp": 1601599638
    },
    {
        "content": "<p>yeah, but what's gonna run them? kernels are predominantly le, userspace is predominantly built for le as well (and its unknown what can of worms it'll open once you start getting those things running on be)</p>",
        "id": 211995359,
        "sender_full_name": "nagisa",
        "timestamp": 1601601888
    },
    {
        "content": "<p>yeah, ARM can switch endian in terms of chip design, but some chips are fused to a specific endian (usually little endian), and of course most software doesn't support switching so in practice that's not a big concern.</p>",
        "id": 212009351,
        "sender_full_name": "Lokathor",
        "timestamp": 1601619571
    }
]