[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/R_-u5cmyQtmcPSL8sNtbuw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_wg-incr-comp_ by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> : anything to share? </li>\n<li>@_WG-llvm_ by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> : anything to share?</li>\n</ul>",
        "id": 263432717,
        "sender_full_name": "apiraino",
        "timestamp": 1638450031
    },
    {
        "content": "<p>There are a couple of things: it is pretty disappointing that our hand is forced to turn off newPM for the time being; LLVM project is undergoing migration of their issue tracker from bugzilla to github, which may serve for a more straightforward experience in contributing issues to the LLVM project.</p>",
        "id": 263446893,
        "sender_full_name": "nagisa",
        "timestamp": 1638456260
    },
    {
        "content": "<p>Ah, there's also 13.0.1-rc1 release candidate out.</p>",
        "id": 263447006,
        "sender_full_name": "nagisa",
        "timestamp": 1638456316
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , triage meeting is starting now! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 263449746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457349
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> and everyone else in <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for preparing the <a href=\"https://hackmd.io/R_-u5cmyQtmcPSL8sNtbuw?view\">agenda</a></p>",
        "id": 263449842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457388
    },
    {
        "content": "<p>We’ll be starting off with ~5 minutes for ... </p>\n<h2>Announcements</h2>",
        "id": 263449862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457404
    },
    {
        "content": "<ul>\n<li><span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> today release of Rust stable 1.57 (the last for 2021 <code>:)</code>)</li>\n</ul>",
        "id": 263449900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457421
    },
    {
        "content": "<p><a href=\"https://blog.rust-lang.org/2021/12/02/Rust-1.57.0.html\">https://blog.rust-lang.org/2021/12/02/Rust-1.57.0.html</a> :)</p>",
        "id": 263450074,
        "sender_full_name": "simulacrum",
        "timestamp": 1638457477
    },
    {
        "content": "<p>(I’ve stopped paying attention to the individual years that aren’t 2015+3x. Its going to be 2021 for the next two years)</p>",
        "id": 263450083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457479
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 263450147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457502
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 263450693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457709
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> </li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a></li>\n</ul>\n</li>\n</ul>",
        "id": 263450715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457717
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: 3 months ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 5 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 2 months ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 263450729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457726
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 263450760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457735
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 263450771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457741
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Unstable lints should be considered unknown\" <a href=\"https://github.com/rust-lang/compiler-team/issues/469\">compiler-team#469</a></li>\n</ul>\n</li>\n</ul>",
        "id": 263450787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457748
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking Issue for cargo report future-incompat\" <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a> </li>\n<li>\"Tracking Issue for inline assembly (<code>asm!</code>)\" <a href=\"https://github.com/rust-lang/rust/issues/72016\">rust#72016</a></li>\n</ul>\n</li>\n</ul>",
        "id": 263450802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457754
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 263450818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263446893\">said</a>:</p>\n<blockquote>\n<p>There are a couple of things: it is pretty disappointing that our hand is forced to turn off newPM for the time being; LLVM project is undergoing migration of their issue tracker from bugzilla to github, which may serve for a more straightforward experience in contributing issues to the LLVM project.</p>\n</blockquote>\n<p>thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> for this checkin from <span class=\"user-group-mention silent\" data-user-group-id=\"1176\">WG-llvm</span></p>",
        "id": 263450893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457795
    },
    {
        "content": "<p>as for <span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> : I don’t think we have anything to report this cycle. There’s been some activiity in the <a class=\"stream\" data-stream-id=\"241847\" href=\"/#narrow/stream/241847-t-compiler.2Fwg-incr-comp\">#t-compiler/wg-incr-comp</a> stream but I don’t have anything to call out from there.</p>",
        "id": 263451162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457889
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-compiler</code> this time.</li>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 263451316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457937
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>no PR waiting on T-compiler</li>\n</ul>",
        "id": 263451350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457952
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<h3>today</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 263451416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457977
    },
    {
        "content": "<p>oh actually</p>",
        "id": 263451431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457984
    },
    {
        "content": "<p>lets skip this section and come back to it</p>",
        "id": 263451454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638457993
    },
    {
        "content": "<p>at least, my memory is that even last week, we failed to get to the nominated issues</p>",
        "id": 263451495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458014
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">77 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 5 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">4 P-critical, 46 P-high, 81 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 263451523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458026
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 263451544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458037
    },
    {
        "content": "<ul>\n<li>\"Miscompilation where binding only some fields leaks the others\" <a href=\"https://github.com/rust-lang/rust/issues/90752\">rust#90752</a> <ul>\n<li><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> authored PR <a href=\"https://github.com/rust-lang/rust/pull/90788\">rust#90788</a> which backport on beta <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-24.20.2354818/near/262604287\">was declined</a></li>\n</ul>\n</li>\n</ul>",
        "id": 263451601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458047
    },
    {
        "content": "<p>(TIL ecstatic-morse’s name!)</p>",
        "id": 263451682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458078
    },
    {
        "content": "<p>since we declined to backport this, and its a stable-to-stable regression… remind me: Is the policy that it just stays open until the fix reaches stable?</p>",
        "id": 263451821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458131
    },
    {
        "content": "<p>because I could imagine closing it, saying its fixed in nightly and we’ve opted to not backport beyond that. I guess at the very least it could use that as a comment</p>",
        "id": 263452018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263451821\">said</a>:</p>\n<blockquote>\n<p>since we declined to backport this, and its a stable-to-stable regression… remind me: Is the policy that it just stays open until the fix reaches stable?</p>\n</blockquote>\n<p>is there a policy written somewhere? I think we've talked about these things before</p>",
        "id": 263452118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1638458253
    },
    {
        "content": "<p>The fix is in the current beta, right?</p>",
        "id": 263452123,
        "sender_full_name": "mw",
        "timestamp": 1638458256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263452123\">said</a>:</p>\n<blockquote>\n<p>The fix is in the current beta, right?</p>\n</blockquote>\n<p>that’s my understanding based on the milestone marker on PR <a href=\"https://github.com/rust-lang/rust/issues/90788\">#90788</a></p>",
        "id": 263452245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458290
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263452118\">said</a>:</p>\n<blockquote>\n<p>is there a policy written somewhere? I think we've talked about these things before</p>\n</blockquote>\n<p>That’s a good question.</p>",
        "id": 263452278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263452118\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263451821\">said</a>:</p>\n<blockquote>\n<p>since we declined to backport this, and its a stable-to-stable regression… remind me: Is the policy that it just stays open until the fix reaches stable?</p>\n</blockquote>\n<p>is there a policy written somewhere? I think we've talked about these things before</p>\n</blockquote>\n<p>to me is a bit confusing what the issue tracker/pull requests tracks, often a PR says closes #xyz and after merged the issue is automatically closed, although the issue may still be present in beta/stable</p>",
        "id": 263452285,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1638458306
    },
    {
        "content": "<p>and in other cases we leave things open so dunno</p>",
        "id": 263452405,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1638458346
    },
    {
        "content": "<p>that's a good point</p>",
        "id": 263452430,
        "sender_full_name": "mw",
        "timestamp": 1638458357
    },
    {
        "content": "<p>yes, <em>that</em> (the autoclosing of issues even when they haven’t been backported) is definitely something we’ve discussed many times.</p>",
        "id": 263452452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458368
    },
    {
        "content": "<p>I don’t know whether this just needs documentation, or if it needs a steering meeting</p>",
        "id": 263452600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458405
    },
    {
        "content": "<p>I’ll review</p>",
        "id": 263452638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458419
    },
    {
        "content": "<p>(after this meeting is over)</p>",
        "id": 263452650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458426
    },
    {
        "content": "<p>as for this specific issue, I’ll leave it open for now</p>",
        "id": 263452758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458464
    },
    {
        "content": "<p>and figure out whether it should be closed or left open fox six weeks after this meeting is over.</p>",
        "id": 263452810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458480
    },
    {
        "content": "<ul>\n<li>\"Unsound drop due to imperfect lifetime checks\" <a href=\"https://github.com/rust-lang/rust/issues/90838\">rust#90838</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> fixed this in PR <a href=\"https://github.com/rust-lang/rust/pull/90840\">#90840</a> which was beta backported</li>\n<li>next steps for this issue? perhaps close it?</li>\n</ul>\n</li>\n</ul>",
        "id": 263452814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458481
    },
    {
        "content": "<p>I didn’t fix. I made more limited version of PR <a href=\"https://github.com/rust-lang/rust/issues/90840\">#90840</a></p>",
        "id": 263452873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458508
    },
    {
        "content": "<p>but I think we ended up backporting <a href=\"https://github.com/rust-lang/rust/issues/90840\">#90840</a> itself</p>",
        "id": 263452908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458521
    },
    {
        "content": "<p>which was put into 1.57 release</p>",
        "id": 263452985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458538
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang/rust/issues/90838\">#90838</a> can indeed be closed now</p>",
        "id": 263453000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458545
    },
    {
        "content": "<p>closed with comment.</p>",
        "id": 263453101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458584
    },
    {
        "content": "<ul>\n<li>\"Implied bounds by associated types as function parameters are inconsistent in an unsound way.\" <a href=\"https://github.com/rust-lang/rust/issues/91068\">rust#91068</a><ul>\n<li>handled by PRs <a href=\"https://github.com/rust-lang/rust/pull/91243\">rust#91243</a> and <a href=\"https://github.com/rust-lang/rust/pull/91242\">rust#91242</a> which partially reverts <a href=\"https://github.com/rust-lang/rust/pull/88312\">rust#88312</a></li>\n</ul>\n</li>\n</ul>",
        "id": 263453135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458599
    },
    {
        "content": "<p>it sounds like <a href=\"https://github.com/rust-lang/rust/issues/91068\">#91068</a> can be closed too, for the same reason? The Pull Request for <a href=\"https://github.com/rust-lang/rust/issues/91242\">#91242</a> itself wasn’t merged into the beta brach, but IIUC <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> adapted it directly into the 1.57 stable release</p>",
        "id": 263453340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458670
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/91242\">#91242</a> should be on all branches, yes</p>",
        "id": 263453376,
        "sender_full_name": "simulacrum",
        "timestamp": 1638458688
    },
    {
        "content": "<p>(or equivalents)</p>",
        "id": 263453392,
        "sender_full_name": "simulacrum",
        "timestamp": 1638458696
    },
    {
        "content": "<p>closed with comment</p>",
        "id": 263453505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458736
    },
    {
        "content": "<ul>\n<li>\"Huge compile-time regression in beta/nightly\" <a href=\"https://github.com/rust-lang/rust/issues/91128\">rust#91128</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <a href=\"https://github.com/rust-lang/rust/issues/91128#issuecomment-978072653\">points out</a> the problematic IR generated by <code>opt -03</code></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/91128#issuecomment-978072653\">previously discussion</a>: the new pass-manager has been disabled in beta pre-1.57 with PR <a href=\"https://github.com/rust-lang/rust/pull/91189\">rust#91189</a> from <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n<li>Next steps for this issue? (still critical)?</li>\n</ul>\n</li>\n</ul>",
        "id": 263453540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458749
    },
    {
        "content": "<p>does <code>—release</code> turn on <code>-O3</code>, not just <code>-O2</code> ?</p>",
        "id": 263453671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458783
    },
    {
        "content": "<p><code>-O3</code></p>",
        "id": 263453735,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638458801
    },
    {
        "content": "<p>hmm</p>",
        "id": 263453750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458806
    },
    {
        "content": "<p>okay. but we’re disabling NewPM</p>",
        "id": 263453803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458823
    },
    {
        "content": "<p>whcih also maeks this go away, right?</p>",
        "id": 263453820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458829
    },
    {
        "content": "<p>which is PR <a href=\"https://github.com/rust-lang/rust/issues/91190\">#91190</a> and PR <a href=\"https://github.com/rust-lang/rust/issues/91189\">#91189</a></p>",
        "id": 263453877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458856
    },
    {
        "content": "<p>the beta backport ended up landing in  PR <a href=\"https://github.com/rust-lang/rust/issues/91263\">#91263</a></p>",
        "id": 263453909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458873
    },
    {
        "content": "<p>so the compile-time regression should be addressed for 1.57</p>",
        "id": 263453985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458890
    },
    {
        "content": "<p>(though we might need confirmation of that.)</p>",
        "id": 263454005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458902
    },
    {
        "content": "<p>I’ll leave a comment asking</p>",
        "id": 263454026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458911
    },
    {
        "content": "<p>We should be ok for 1.57 but it seems like there are a few concerns pointed out on the PR for nightly. <a href=\"https://github.com/rust-lang/rust/pull/91190\">https://github.com/rust-lang/rust/pull/91190</a></p>",
        "id": 263454041,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638458919
    },
    {
        "content": "<p>Okay</p>",
        "id": 263454104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458949
    },
    {
        "content": "<p>I left a comment on <a href=\"https://github.com/rust-lang/rust/issues/91128\">#91128</a> asking for confirmation</p>",
        "id": 263454137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458965
    },
    {
        "content": "<p>as for <a href=\"https://github.com/rust-lang/rust/issues/91190\">#91190</a></p>",
        "id": 263454157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458975
    },
    {
        "content": "<p>I see</p>",
        "id": 263454211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638458998
    },
    {
        "content": "<p>I didn’t know the passes had different names in OldPM vs NewPM<br>\n\\</p>",
        "id": 263454293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459015
    },
    {
        "content": "<p>So okay. My intuition is that we should not leave PR <a href=\"https://github.com/rust-lang/rust/issues/91190\">#91190</a> unlanded for too too long</p>",
        "id": 263454357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459059
    },
    {
        "content": "<p>I understand delaying if we believe the problem will be addressed with a more targetted fix <em>soon</em></p>",
        "id": 263454396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459079
    },
    {
        "content": "<p>And we did see <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> mention all this at the outset of the meeting</p>",
        "id": 263454430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459093
    },
    {
        "content": "<p>But, if the problem <em>isn’t</em> resolved soon: How long do we wait before pulling trigger on <a href=\"https://github.com/rust-lang/rust/issues/91190\">#91190</a>?</p>",
        "id": 263454486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459115
    },
    {
        "content": "<p>I wouldn’t wait more than three weeks</p>",
        "id": 263454542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459125
    },
    {
        "content": "<p>and I’m tempted to say two weeks</p>",
        "id": 263454550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459130
    },
    {
        "content": "<p>so maybe right thing is to plan to revisit this in two weeks, and take stock on what has happened at that time</p>",
        "id": 263454617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459164
    },
    {
        "content": "<p>That seems reasonable to me.</p>",
        "id": 263454647,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638459178
    },
    {
        "content": "<p>to encode that, I’m going to nominate this for T-compiler with a comment with the date of nomination</p>",
        "id": 263454666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459189
    },
    {
        "content": "<p>(so that we’ll know to skip over it next week)</p>",
        "id": 263454690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459201
    },
    {
        "content": "<p>At the very least, I think if we have to backport another revert to OldPM to beta then we need to disable on nightly as well.</p>",
        "id": 263454702,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638459205
    },
    {
        "content": "<p>exactly.</p>",
        "id": 263454826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459257
    },
    {
        "content": "<p>as for prioritization … I’d leave it at P-criticial, I think….</p>",
        "id": 263454877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459289
    },
    {
        "content": "<p>(whicih maybe makes the nomination superfluous,but whatever.)</p>",
        "id": 263454915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459308
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 263454924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459311
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-libs-api+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 263454942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459318
    },
    {
        "content": "<p>these probadbly all need their labels updated ,right?</p>",
        "id": 263454971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459335
    },
    {
        "content": "<p>aren’t these all stable-to-stable regressions now?</p>",
        "id": 263454989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459343
    },
    {
        "content": "<p>lets go through them</p>",
        "id": 263454997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459347
    },
    {
        "content": "<ul>\n<li>\"Compilation appears to loop indefinitely \" <a href=\"https://github.com/rust-lang/rust/issues/89195\">rust#89195</a> <ul>\n<li>already discussed</li>\n<li>assigned to Felix</li>\n</ul>\n</li>\n</ul>",
        "id": 263455047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459361
    },
    {
        "content": "<p>relabelled, stable-to-stable</p>",
        "id": 263455182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459408
    },
    {
        "content": "<ul>\n<li>\"regression: rustc suggests <code>.as_ref()</code> at incorrect location and other spans have regressed\" <a href=\"https://github.com/rust-lang/rust/issues/90286\">rust#90286</a><ul>\n<li>assigned to Felix</li>\n<li><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <a href=\"https://github.com/rust-lang/rust/issues/90286#issuecomment-974534925\">commented</a> about the possibility of authoring a PR</li>\n</ul>\n</li>\n</ul>",
        "id": 263455249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459440
    },
    {
        "content": "<p>relabelled</p>",
        "id": 263455275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459451
    },
    {
        "content": "<p>Didn't arrive to a fix in time.</p>",
        "id": 263455330,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1638459477
    },
    {
        "content": "<ul>\n<li>\"DWARF info for <code>static</code> vars in lib crates has stopped being produced reliably in LTO builds\" <a href=\"https://github.com/rust-lang/rust/issues/90357\">rust#90357</a><ul>\n<li>assigned to Felix</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/90286#issuecomment-974534925\">already discussed</a>, Felix did some investigation on this</li>\n</ul>\n</li>\n</ul>",
        "id": 263455339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459483
    },
    {
        "content": "<p>relabelled</p>",
        "id": 263455434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459508
    },
    {
        "content": "<p>(The “our debugger” in the description, BTW, is proably Oxide’s recently announced <a href=\"https://oxide.computer/blog/hubris-and-humility\">Humility debugger</a>)</p>",
        "id": 263455545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459550
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-libs-api+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core+\">Unassigned P-high nightly regressions</a></p>",
        "id": 263455595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459576
    },
    {
        "content": "<ul>\n<li>\"Undefined reference to <code>getauxval</code> in function <code>init_have_lse_atomics</code>  when compiling to nightly <code>aarch64-unknown-linux-musl</code>\" <a href=\"https://github.com/rust-lang/rust/issues/89626\">rust#89626</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-24.20.2354818/near/262607266\">Already discussed</a></li>\n<li>Issue is fixed by <a href=\"https://github.com/rust-lang/rust/pull/90527\">rust#90527</a> + <a href=\"https://github.com/rust-lang/libc/pull/2272\">libc#2272</a> and as soon as the fixed <code>libc 0.2.107</code> is merged, see <a href=\"https://github.com/rust-lang/rust/pull/90681\">rust#90681</a></li>\n<li>Can this be closed?</li>\n</ul>\n</li>\n</ul>",
        "id": 263455609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459584
    },
    {
        "content": "<p>(the three mentioned PRs are all merged)</p>",
        "id": 263455724,
        "sender_full_name": "apiraino",
        "timestamp": 1638459624
    },
    {
        "content": "<p>I’ll ask for confirmation that this is fixed in 1.57</p>",
        "id": 263455728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459626
    },
    {
        "content": "<p>left comment</p>",
        "id": 263455787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459660
    },
    {
        "content": "<p>Next</p>",
        "id": 263455793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459662
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-11-30.md\">triage logs for 2021-11-30</a></p>\n</blockquote>",
        "id": 263455850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459681
    },
    {
        "content": "<p>Overall, many changes this week, but overall an improvement on multiple benchmarks over<br>\nthe week from a number of pull requests dedicated to optimizations of certain<br>\npatterns. We are still seeing a large number of spurious changes due to<br>\n<a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a>, which has yet to be addressed.</p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=22c2d9ddbf356bcdb718e88ca6ee3665e1e42690&amp;end=1c0287830e0fb3c4007afea2819ba03766da6e9c&amp;absolute=false&amp;stat=instructions%3Au\">22c2d9ddbf356bcdb718e88ca6ee3665e1e42690..1c0287830e0fb3c4007afea2819ba03766da6e9c</a></p>\n<p>4 Regressions, 4 Improvements, 9 Mixed; 5 of them in rollups<br>\n41 comparisons made in total</p>",
        "id": 263455869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459689
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Mark places as initialized when mutably borrowed <a href=\"https://github.com/rust-lang/rust/issues/90788\">#90788</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=311fa1f14dd8ffbbe83b229a94b17f7f1ecaf33b&amp;end=7b3cd075bbe309031b418650a9c32baf0b4a3276&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>match-stress-enum</code>)</li>\n<li>Fix for a miscompilation, so necessary regression.</li>\n</ul>\n<p>Visit <code>param_env</code> field in Obligation's <code>TypeFoldable</code> impl <a href=\"https://github.com/rust-lang/rust/issues/91205\">#91205</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a7836bf885e70aaf1a2e0d4669406b183a79acaa&amp;end=1e79d79dac11ce121b972fbaa0db9b0d1756b991&amp;stat=instructions:u\">instruction counts</a> (up to 6.6% on <code>full</code> builds of <code>hyper-2</code>)</li>\n<li>Fix for incorrect code, regressions unfortunately unavoidable.</li>\n</ul>",
        "id": 263455890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459699
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91159\">#91159</a></li>\n<li>Optimize live point computation <a href=\"https://github.com/rust-lang/rust/issues/90491\">#90491</a></li>\n<li>Remove eval_always from upvars. <a href=\"https://github.com/rust-lang/rust/issues/90580\">#90580</a></li>\n<li>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91388\">#91388</a></li>\n</ul>",
        "id": 263455906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> (did you deliberately remove the info about degree of improvement from the report in latter section? why?)</p>",
        "id": 263456020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459742
    },
    {
        "content": "<p>uh, no?</p>",
        "id": 263456061,
        "sender_full_name": "simulacrum",
        "timestamp": 1638459759
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Avoid generating empty closures for fieldless enum variants <a href=\"https://github.com/rust-lang/rust/issues/89881\">#89881</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=22c2d9ddbf356bcdb718e88ca6ee3665e1e42690&amp;end=311fa1f14dd8ffbbe83b229a94b17f7f1ecaf33b&amp;stat=instructions:u\">instruction counts</a> (up to -1.6% on <code>incr-patched: add static arr item</code> builds of <code>coercions</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=22c2d9ddbf356bcdb718e88ca6ee3665e1e42690&amp;end=311fa1f14dd8ffbbe83b229a94b17f7f1ecaf33b&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>Primarily benefits bootstrap time (-5.4 seconds, -0.7%), instruction count<br>\n  changes largely real but not avoidable (differences in LLVM decision making).</li>\n</ul>\n<p>Remove eval_always for inherent_impls. <a href=\"https://github.com/rust-lang/rust/issues/90579\">#90579</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=982c552c908d179eaa38b6ef152ad3fa30268778&amp;end=c6a7ca196a707acd65e6cce1d337cd11786c59a5&amp;stat=instructions:u\">instruction counts</a> (up to -5.6% on <code>incr-unchanged</code> builds of <code>stm32f4</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=982c552c908d179eaa38b6ef152ad3fa30268778&amp;end=c6a7ca196a707acd65e6cce1d337cd11786c59a5&amp;stat=instructions:u\">instruction counts</a> (up to 0.2% on <code>incr-full</code> builds of <code>stm32f4</code>)</li>\n</ul>\n<p>Faster <code>Layout::array</code> <a href=\"https://github.com/rust-lang/rust/issues/91246\">#91246</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=6d246f0c8d3063fea86abbb65a824362709541ba&amp;end=ccce98535bd51687554be8a209b3a529ef84f7e1&amp;stat=instructions:u\">instruction counts</a> (up to -4.2% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=6d246f0c8d3063fea86abbb65a824362709541ba&amp;end=ccce98535bd51687554be8a209b3a529ef84f7e1&amp;stat=instructions:u\">instruction counts</a> (up to 5.0% on <code>incr-unchanged</code> builds of <code>inflate</code>)</li>\n<li>Most prominent regression is spurious, and overall this looks like<br>\n  improvements outweighing regressions.</li>\n</ul>\n<p>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91269\">#91269</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=ccce98535bd51687554be8a209b3a529ef84f7e1&amp;end=bbad745a688c933a43d1bd977756bd6fc7f034f2&amp;stat=instructions:u\">instruction counts</a> (up to -5.1% on <code>incr-unchanged</code> builds of <code>inflate</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ccce98535bd51687554be8a209b3a529ef84f7e1&amp;end=bbad745a688c933a43d1bd977756bd6fc7f034f2&amp;stat=instructions:u\">instruction counts</a> (up to 18.3% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>Regressions seem potentially real, but may also be related to<br>\n<a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a>.<br>\n  Locally this seems to not be the case, though, so it seems probable that the<br>\n  regression is real.</li>\n</ul>\n<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91288\">#91288</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5fd3a5c7c175f228afaf5fc6ff00c177b83d8055&amp;end=686e313a9aa14107c8631ffe48fa09110a7692db&amp;stat=instructions:u\">instruction counts</a> (up to -1.0% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5fd3a5c7c175f228afaf5fc6ff00c177b83d8055&amp;end=686e313a9aa14107c8631ffe48fa09110a7692db&amp;stat=instructions:u\">instruction counts</a> (up to 1.7% on <code>full</code> builds of <code>externs</code>)</li>\n<li>Seems to be a genuine regression. Unclear what the cause is.</li>\n</ul>\n<p>Make <code>TypeFolder::fold_*</code> return <code>Result</code> <a href=\"https://github.com/rust-lang/rust/issues/91230\">#91230</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=58f9efd36de5669ab731ec7ebf565999ff17b159&amp;end=e6d2de9483a27f846f003fc745713339a9122473&amp;stat=instructions:u\">instruction counts</a> (up to -1.0% on <code>incr-full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=58f9efd36de5669ab731ec7ebf565999ff17b159&amp;end=e6d2de9483a27f846f003fc745713339a9122473&amp;stat=instructions:u\">instruction counts</a> (up to 4.0% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n<li>Regressions seem genuine, but are likely to be shuffling of instruction<br>\n  sequences rather than something directly addressable.</li>\n</ul>\n<p>Update libc to 0.2.108 <a href=\"https://github.com/rust-lang/rust/issues/90681\">#90681</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=db9d361a4731ca0bb48533fab6297a8fea75696f&amp;end=350158dd6d7ba840666999efa9a19c6ae403eed1&amp;stat=instructions:u\">instruction counts</a> (up to -15.3% on <code>incr-unchanged</code> builds of <code>clap-rs</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=db9d361a4731ca0bb48533fab6297a8fea75696f&amp;end=350158dd6d7ba840666999efa9a19c6ae403eed1&amp;stat=instructions:u\">instruction counts</a> (up to 3.0% on <code>incr-unchanged</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Looks like a genuine regression, potentially slightly more work at crate loading time.</li>\n</ul>\n<p>Tokenize emoji as if they were valid identifiers  <a href=\"https://github.com/rust-lang/rust/issues/88781\">#88781</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=c6eda7d8a7af3ef51311d3106874a7d8de994edc&amp;end=23a436606b118bd2fbb12f64fce21e7f9d355349&amp;stat=instructions:u\">instruction counts</a> (up to -0.8% on <code>full</code> builds of <code>deeply-nested</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c6eda7d8a7af3ef51311d3106874a7d8de994edc&amp;end=23a436606b118bd2fbb12f64fce21e7f9d355349&amp;stat=instructions:u\">instruction counts</a> (up to 0.3% on <code>incr-full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Genuine regression; more expensive logic in tokenization.</li>\n</ul>\n<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/91221\">#91221</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=862962b90e59c5c1e217df74de80d3a81eee42f4&amp;end=37a49713cb256f4033a3c2fab4810c5a61e89dd9&amp;stat=instructions:u\">instruction counts</a> (up to -1.3% on <code>incr-unchanged</code> builds of <code>wg-grammar</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=862962b90e59c5c1e217df74de80d3a81eee42f4&amp;end=37a49713cb256f4033a3c2fab4810c5a61e89dd9&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Regression seems genuine, though cause is unclear.</li>\n</ul>",
        "id": 263456063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263456061\">said</a>:</p>\n<blockquote>\n<p>uh, no?</p>\n</blockquote>\n<p>hmm</p>",
        "id": 263456096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459771
    },
    {
        "content": "<p>okay. for some reason its not in the agenda., maybe transcription error then.</p>",
        "id": 263456126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459784
    },
    {
        "content": "<p>the original report has the full contents, I think someone else(?) edited</p>",
        "id": 263456132,
        "sender_full_name": "simulacrum",
        "timestamp": 1638459786
    },
    {
        "content": "<p>okay, thanks</p>",
        "id": 263456148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459791
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Amerged+label%3Aperf-regression+-label%3Aperf-regression-triaged+sort%3Acreated-asc\">60 untriaged pull requests</a>.</p>",
        "id": 263456349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459854
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-compiler-nominated\">T-compiler</a></p>",
        "id": 263456383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459870
    },
    {
        "content": "<p>huh</p>",
        "id": 263456430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459896
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/labels/I-compiler-nominated\">T-compiler</a></p>",
        "id": 263456466,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459908
    },
    {
        "content": "<p>(agenda has two links. I think second is intended one. oddity in template maybe.)</p>",
        "id": 263456509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459925
    },
    {
        "content": "<p>oh they end up being same thing maybe</p>",
        "id": 263456561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459946
    },
    {
        "content": "<p>yes sorry (typo )</p>",
        "id": 263456610,
        "sender_full_name": "apiraino",
        "timestamp": 1638459963
    },
    {
        "content": "<ul>\n<li>\"Change <code>char</code> type in debuginfo to DW_ATE_UTF\" <a href=\"https://github.com/rust-lang/rust/pull/89887\">rust#89887</a></li>\n</ul>",
        "id": 263456664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638459974
    },
    {
        "content": "<p>Basically, this is a question of when we should merge the PR.</p>",
        "id": 263456758,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460004
    },
    {
        "content": "<p>discussion starts <a href=\"https://github.com/rust-lang/rust/pull/89887#issuecomment-965530540\">here</a> I think, with wesley’s summary</p>",
        "id": 263456791,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129503\">@Tom Tromey</span> <a href=\"https://github.com/rust-lang/rust/pull/89887#issuecomment-981893564\">says</a> \"I think it's better to simply ship it. Distros that are concerned with this, and that don't want to wait for GDB 11.2, can just apply the upstream patch.\"</p>",
        "id": 263457005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460087
    },
    {
        "content": "<p>I’m cool with that, myself.</p>",
        "id": 263457022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460093
    },
    {
        "content": "<p>The current state (ie before PR) is that gdb shows Rust <code>char</code> values correctly, lldb shows the numerical value but not the character and WinDbg does not show <code>char</code>s at all. </p>\n<p>After the PR lldb and WinDbg work correctly but gdb only shows the numerical value. <span class=\"user-mention\" data-user-id=\"129503\">@Tom Tromey</span> fixed this for gdb but it's not released yet.</p>",
        "id": 263457032,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460098
    },
    {
        "content": "<p>Before breaking gdb slightly in the short term, we wanted to make sure there were no objections from others. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 263457177,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460159
    },
    {
        "content": "<p>right. So, does anyone here object?</p>",
        "id": 263457207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460171
    },
    {
        "content": "<p>I'm a little uncertain about the logic here</p>",
        "id": 263457239,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460182
    },
    {
        "content": "<p>(I will admit that I will be sad to see numbers from my gdb usage, aka my <code>rr</code> usage)</p>",
        "id": 263457257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460188
    },
    {
        "content": "<p>Can we proactively reach out to packagers?</p>",
        "id": 263457259,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1638460189
    },
    {
        "content": "<p>but I'm not strictly opposed</p>",
        "id": 263457260,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460189
    },
    {
        "content": "<p>They might want to patch this out until they update gdb</p>",
        "id": 263457324,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1638460204
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263457239\">said</a>:</p>\n<blockquote>\n<p>I'm a little uncertain about the logic here</p>\n</blockquote>\n<p>the logic of “just shipping” ratehr tahn applying a more targetted change (e.g. to just windows targets)? Or some other logic?</p>",
        "id": 263457364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460214
    },
    {
        "content": "<p>mostly not waiting for <em>a</em> release to be out that folks can at least locally upgrade to</p>",
        "id": 263457422,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460238
    },
    {
        "content": "<p>We might want to continue moving forward, but they are likely to want control over this</p>",
        "id": 263457447,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1638460248
    },
    {
        "content": "<p>(rather than building master or whatever)</p>",
        "id": 263457463,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460254
    },
    {
        "content": "<p>its true, locally building <code>gdb</code> can be a nightmare, especially on platforms like mac</p>",
        "id": 263457526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460274
    },
    {
        "content": "<p>I don't personally have any objection to waiting until 11.2 ships (with the understanding that is supposed to be soon-ish).</p>",
        "id": 263457632,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460320
    },
    {
        "content": "<p>I do wonder whether long term, we should have a flag to let someone indicate “this is the debugger I am intending to use my debug info with\"</p>",
        "id": 263457696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460332
    },
    {
        "content": "<p>and then for problems like this, we would let that flag dictate policy</p>",
        "id": 263457745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460348
    },
    {
        "content": "<p>okay. I’m also fine with waiting until gdb 11.2 ships</p>",
        "id": 263457819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460378
    },
    {
        "content": "<p>lets plan on that for now</p>",
        "id": 263457823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460380
    },
    {
        "content": "<p>next</p>",
        "id": 263457866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460396
    },
    {
        "content": "<ul>\n<li>\"sess: default to v0 symbol mangling\" <a href=\"https://github.com/rust-lang/rust/pull/89917\">rust#89917</a> <br>\n    - this is <code>s-blocked</code> (<a href=\"https://github.com/rust-lang/rust/pull/89917#issuecomment-946731268\">see comment</a>)</li>\n</ul>",
        "id": 263457880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460402
    },
    {
        "content": "<p>Turning on v0 mangling for the compiler itself has generated some very useful feedback already</p>",
        "id": 263457981,
        "sender_full_name": "mw",
        "timestamp": 1638460441
    },
    {
        "content": "<p>we'll want to address that before making it the default, I think</p>",
        "id": 263458047,
        "sender_full_name": "mw",
        "timestamp": 1638460456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> had <a href=\"https://github.com/rust-lang/rust/pull/89917#issuecomment-945888574\">written</a> \"Timeline wise, I don't know whether we expect much breakage or issues filed, but I'll note that shipping in early January probably means most of the beta/nightly cycles will be during holidays and generally we don't have as much speed. So maybe delaying 1 releases (to ~1.59 or 1.60) would be of benefit regardless.\"</p>",
        "id": 263458069,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460467
    },
    {
        "content": "<p>of course, its now much later.</p>",
        "id": 263458135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460496
    },
    {
        "content": "<p>i.e. if we landed it today, it would indeed be in the 1.59 release</p>",
        "id": 263458178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460513
    },
    {
        "content": "<p>there are some usability issues with the demanglers out there currently</p>",
        "id": 263458266,
        "sender_full_name": "mw",
        "timestamp": 1638460555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263458047\">said</a>:</p>\n<blockquote>\n<p>we'll want to address that before making it the default, I think</p>\n</blockquote>\n<p>does that imply this is no longer solely/primarily blocked on team, but rather on addressing the provided feedback?</p>",
        "id": 263458336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460568
    },
    {
        "content": "<p>I'm in favor of waiting until we have those issues more ironed out, personally</p>",
        "id": 263458341,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460571
    },
    {
        "content": "<p>that’s fine with me too, I think.</p>",
        "id": 263458359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460579
    },
    {
        "content": "<p>so lets just fix the S-blocked label then?</p>",
        "id": 263458379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460588
    },
    {
        "content": "<p>okay, next</p>",
        "id": 263458397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460595
    },
    {
        "content": "<p>it's still blocked, I'd say</p>",
        "id": 263458415,
        "sender_full_name": "mw",
        "timestamp": 1638460602
    },
    {
        "content": "<p>but not waiting on a decision from the team</p>",
        "id": 263458441,
        "sender_full_name": "mw",
        "timestamp": 1638460611
    },
    {
        "content": "<ul>\n<li>\"Stabilize <code>-Z instrument-coverage</code> as <code>-C instrument-coverage</code>\" <a href=\"https://github.com/rust-lang/rust/pull/90132\">rust#90132</a> <br>\n    - <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> nominated</li>\n</ul>",
        "id": 263458442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460611
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> addressed all your concerns here?</p>",
        "id": 263458583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460666
    },
    {
        "content": "<p>I'm looking into <a href=\"https://github.com/rust-lang/rust/issues/85461\">the reported issue</a> on Windows but I think I'll have that fixed this week. After that, I'm all for starting an FCP.</p>",
        "id": 263458587,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460668
    },
    {
        "content": "<p>I can look -- I think we had at least moved in that direction</p>",
        "id": 263458675,
        "sender_full_name": "simulacrum",
        "timestamp": 1638460691
    },
    {
        "content": "<p>okay. lets tentatively plan to fire off an FCP. <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> can you own that?</p>",
        "id": 263458739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460719
    },
    {
        "content": "<p>Absolutely!</p>",
        "id": 263458757,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1638460727
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 263458786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460739
    },
    {
        "content": "<p>next</p>",
        "id": 263458791,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460740
    },
    {
        "content": "<ul>\n<li>\"implement aspect-oriented programming (AOP) for Rust\" <a href=\"https://github.com/rust-lang/rust/pull/90721\">rust#90721</a> <br>\n    - nominated by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> (<a href=\"https://github.com/rust-lang/rust/pull/90721#issuecomment-966078438\">see comment</a>)<br>\n    - suggested to open an RFC</li>\n</ul>",
        "id": 263458793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460740
    },
    {
        "content": "<p>i gotta admit, I had a bit of a “what the…?” moment seeing that title</p>",
        "id": 263458845,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460761
    },
    {
        "content": "<p>Yes, that definitely needs either an MCP or an RFC</p>",
        "id": 263458998,
        "sender_full_name": "mw",
        "timestamp": 1638460805
    },
    {
        "content": "<p>this absolutely needs to go through either MCP or RFC</p>",
        "id": 263459008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460808
    },
    {
        "content": "<p>At which level: Lang team?</p>",
        "id": 263459103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460827
    },
    {
        "content": "<p>seems like it might be solely T-compiler</p>",
        "id": 263459163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460844
    },
    {
        "content": "<p>maybe T-cargo too</p>",
        "id": 263459182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460852
    },
    {
        "content": "<p>I don't think the implementation is worth focusing on here, there's interest in having some mechanism for injecting logic at certain points (identified by some pattern) to implement AOP from folks within Huawei, this is the hacky-ish implementation that has worked so far for those folks, but it's not suitable for upstreaming. Mostly interested in working out which team this needs to go through so we can flesh out a proper approach that might be acceptable.</p>",
        "id": 263459276,
        "sender_full_name": "davidtwco",
        "timestamp": 1638460888
    },
    {
        "content": "<p>Anyway, we neeed to figure out the right kind of feedback delivered to the authors</p>",
        "id": 263459312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460900
    },
    {
        "content": "<p>right</p>",
        "id": 263459330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460907
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> . To me, the primary question is: Does this need lang team investment ?</p>",
        "id": 263459402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460926
    },
    {
        "content": "<p>or can it be solely a T-compiler question.</p>",
        "id": 263459451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460945
    },
    {
        "content": "<p>I think best to let lang team answer that</p>",
        "id": 263459482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460959
    },
    {
        "content": "<p>I can own leaving a comment about this</p>",
        "id": 263459531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460977
    },
    {
        "content": "<p>(and about the broader protocol for such changes.)</p>",
        "id": 263459564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638460989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you want me to take it off your hands?</p>",
        "id": 263459630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461015
    },
    {
        "content": "<p>most certainly</p>",
        "id": 263459671,
        "sender_full_name": "mw",
        "timestamp": 1638461026
    },
    {
        "content": "<p>okay. reassigned</p>",
        "id": 263459700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461036
    },
    {
        "content": "<ul>\n<li>\"Miscompilation where binding only some fields leaks the others\" <a href=\"https://github.com/rust-lang/rust/issues/90752\">rust#90752</a><br>\n    - discussed in <a href=\"https://hackmd.io/R_-u5cmyQtmcPSL8sNtbuw?view#P-critical\">P-critical</a><br>\n    - perhaps nomination can be removed?</li>\n</ul>",
        "id": 263459763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461048
    },
    {
        "content": "<p>discussed earlier</p>",
        "id": 263459781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461056
    },
    {
        "content": "<p>I can take point on coordinating with the author too, I work with the relevant people.</p>",
        "id": 263459784,
        "sender_full_name": "davidtwco",
        "timestamp": 1638461058
    },
    {
        "content": "<p>nomination on <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a> can be removed at this point, yes, I Think so.</p>",
        "id": 263459876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461095
    },
    {
        "content": "<p>okay, and we are 5 minutes over time</p>",
        "id": 263459914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461112
    },
    {
        "content": "<p>sorry that we didn’t loop back around to the “unreview issued\"</p>",
        "id": 263459940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461122
    },
    {
        "content": "<p>We’ll get to them next week (i.e. we shouldn't need to skip them again.)</p>",
        "id": 263459980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461138
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!!!</p>",
        "id": 263460000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1638461145
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/kDUJQbY8SGqPMTTecCl9hg?view\">https://hackmd.io/kDUJQbY8SGqPMTTecCl9hg?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@<em>WG-mir-optimization</em> checkin by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>@<em>WG-polymorphization</em> checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></li>\n</ul>",
        "id": 263462511,
        "sender_full_name": "apiraino",
        "timestamp": 1638462089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-02.20.2354818/near/263459402\">said</a>:</p>\n<blockquote>\n<p>I agree with <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> . To me, the primary question is: Does this need lang team investment ?</p>\n</blockquote>\n<p>I would personally suggest that this needs to be a lang MCP and proposal for what the programming model looks like.</p>",
        "id": 263615957,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638554611
    }
]