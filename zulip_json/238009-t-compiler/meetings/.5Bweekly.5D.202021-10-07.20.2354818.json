[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h50<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/IGePuIQTQqGzdwqVrN1IlA?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_WG-async-foundations_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> : anything to share?</li>\n<li>@_WG-traits_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>: anything to share?</li>\n</ul>",
        "id": 256566295,
        "sender_full_name": "apiraino",
        "timestamp": 1633608635
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , its time for the weekly triage meeting! Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 256582200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615322
    },
    {
        "content": "<p>Lets start off with ~6 minutes for </p>\n<h2>Announcements</h2>",
        "id": 256582274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615341
    },
    {
        "content": "<ul>\n<li><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> has proposed adding a blanket note each week advising you all: If you see anything potentially concerning from a <em>legal</em> standpoint, you can and should reach out to the Rust foundations legal team.</li>\n</ul>",
        "id": 256582411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615391
    },
    {
        "content": "<ul>\n<li>(you can see more discussion of the above at <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/Meeting.20section.20on.20legal.20questions\">#t-compiler/meetings &gt; Meeting section on legal questions</a> )</li>\n</ul>",
        "id": 256582604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615459
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 256582680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615489
    },
    {
        "content": "<ul>\n<li>I'm starting to have more time to contribute to the compiler :), I'm now being sponsored by Futurewei to work on Rustc. Going to start focusing on async fns in traits MVP.</li>\n</ul>",
        "id": 256582682,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1633615490
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip +3 months ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip about 1 month ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: GH none, Zulip about 1 week ago)</li>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a> (last review activity: GH none, Zulip 1 week ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: GH none, Zulip about 2 weeks ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 256582745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615515
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 256582836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615549
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"lint internal hashmap iteration\" <a href=\"https://github.com/rust-lang/compiler-team/issues/465\">compiler-team#465</a></li>\n</ul>\n</li>\n</ul>",
        "id": 256583061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615628
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 256583136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615663
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Perform type inference in range pattern\" <a href=\"https://github.com/rust-lang/rust/pull/88090\">rust#88090</a></li>\n<li>\"Stabilize RFC 2345: Allow panicking in constants\" <a href=\"https://github.com/rust-lang/rust/issues/89006\">rust#89006</a></li>\n</ul>\n</li>\n</ul>",
        "id": 256583167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615672
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 256583250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615689
    },
    {
        "content": "<p>There’s a section here for WG-async-foundations, but I actually saw a nice little web page they all put up</p>",
        "id": 256583307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615716
    },
    {
        "content": "<p>as an update for the lang team</p>",
        "id": 256583430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615762
    },
    {
        "content": "<p>but I think it probably applies just as well to T-compiler</p>",
        "id": 256583454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615771
    },
    {
        "content": "<p><a href=\"https://rust-lang.github.io/async-fundamentals-initiative/updates/2021-oct.html\">https://rust-lang.github.io/async-fundamentals-initiative/updates/2021-oct.html</a></p>",
        "id": 256583456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615773
    },
    {
        "content": "<p>I’ll cut and paste the best snippets</p>",
        "id": 256583477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615784
    },
    {
        "content": "<blockquote>\n<p>Our overall charter: Make it possible to write async fn in traits, as well as enabling key language features that bring async more into parity with sync:</p>\n<ul>\n<li>Async functions in traits<ul>\n<li>in both static and dyn contexts</li>\n</ul>\n</li>\n<li>Async drop</li>\n<li>Async closures</li>\n</ul>\n</blockquote>",
        "id": 256583600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615824
    },
    {
        "content": "<blockquote>\n<p>We have identified an MVP, which aims to support async fn in traits in static contexts by desugaring to an (anonymous) associated GAT plus (on the impl side) a TAIT. We are preparing an RFC describing this MVP and talking to various folks about doing the implementation work.</p>\n</blockquote>",
        "id": 256583618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615832
    },
    {
        "content": "<p>I got this translated yesterday: The MVP corresponds to the first half of the first bullet in the list above. :)</p>",
        "id": 256583665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615854
    },
    {
        "content": "<p>Next</p>",
        "id": 256583718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615880
    },
    {
        "content": "<ul>\n<li>@_WG-traits_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> (<a href=\"https://hackmd.io/9aTxrdTQSaS_Fx55dEW1hA\">previous checkin</a>)<blockquote>\n<p>In general, work continues on GATs, TAITs, dyn upcasting, and followup for normalization under binders and incremental projection cache PRs.<br>\n  * For GATs, a few blockers remain for stabilization, <a href=\"https://rust-lang.github.io/generic-associated-types-initiative/updates/2021-oct.html\">found here</a>. Feedback/thoughts request on the <a href=\"https://github.com/rust-lang/rust/issues/89122\">placement of where clauses</a>.<br>\n  * Oli-obk continues to work on refactoring the inference for TAITs. Some diagnostic PRs have been opened that need review.<br>\n  * Dyn upcasting recently had a <a href=\"#narrow/stream/144729-wg-traits/topic/Dyn.20upcasting.20vs.20deref.20coercion\">question</a> come up regarding Deref impls on dyn types; specfically, these impls mimic upcasting. The current plan is to emit a future compat lint and just accept the breakage - which really just ends up without the deref impl being called.<br>\n  * There has been a bit a followup to do after <a href=\"https://github.com/rust-lang/rust/pull/85499\">#85499</a> landed. In particular, more eagerly normalizing opaque types resulted in a severe perf regression; this has been reverted with the only current fallout being related to TAITs. Some other issues popped up that show that there is still code that won't compile even though it should - but compiliation does get further (not emitting an ICE). Most of the remaining issues are probably blocked on lazy norm.<br>\n  * Finally, some of the changes Aaron Hill made to the way projection caching works to fix incremental bugs seems to have a <a href=\"https://github.com/rust-lang/rust/issues/89195\">perf regression</a>. Not clear what a correct fix would look like yet.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 256583721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615881
    },
    {
        "content": "<p>Any other announcements?</p>",
        "id": 256583977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615978
    },
    {
        "content": "<p>Lets move along, actually, its already 12 minutes past</p>",
        "id": 256584008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615986
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 256584023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633615992
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"2229: Consume IfLet expr\" <a href=\"https://github.com/rust-lang/rust/pull/89282\">rust#89282</a><ul>\n<li>Another one for RFC 2229 that affects Rust 2021</li>\n</ul>\n</li>\n</ul>",
        "id": 256584042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616000
    },
    {
        "content": "<p>Looks like this brings <code>if let</code> into parity with <code>if</code> on match arms</p>",
        "id": 256584211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616062
    },
    {
        "content": "<p>I guess it <em>technically</em> doesn't need a backport modulo compiler usage and such -- if let match arms are still unstable</p>",
        "id": 256584422,
        "sender_full_name": "simulacrum",
        "timestamp": 1633616138
    },
    {
        "content": "<p>but it seems pretty minimal</p>",
        "id": 256584431,
        "sender_full_name": "simulacrum",
        "timestamp": 1633616142
    },
    {
        "content": "<p>just an ICE fix with a small diff, seems good to me?</p>",
        "id": 256584442,
        "sender_full_name": "oli",
        "timestamp": 1633616145
    },
    {
        "content": "<p>(That test is not ideal; the fact that it has a warning leads me to wonder, when reading it: Is this a test <em>of</em> that warning? or did someone just not feel like writing code that didn’t hit the warning?)</p>",
        "id": 256584451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616148
    },
    {
        "content": "<p>Yeah the backport itself I’m okay with, it seems pretty low irsk.</p>",
        "id": 256584497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616162
    },
    {
        "content": "<p>but the detail that <code>if let</code> match arms are still unstable is a good point too</p>",
        "id": 256584594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616179
    },
    {
        "content": "<p>why would we backport this?</p>",
        "id": 256584609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616183
    },
    {
        "content": "<p>Does the ICE happen even without the feature gate turned on?</p>",
        "id": 256584691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616217
    },
    {
        "content": "<p>I’m kind of meh on approving the backport</p>",
        "id": 256584798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616258
    },
    {
        "content": "<p>I know the 2021 migration in the compiler had to revert several if let usages, fwiw</p>",
        "id": 256584800,
        "sender_full_name": "simulacrum",
        "timestamp": 1633616259
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what does that mean? you mean because of this ICE?</p>",
        "id": 256584852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616279
    },
    {
        "content": "<p>Yeah</p>",
        "id": 256584880,
        "sender_full_name": "simulacrum",
        "timestamp": 1633616282
    },
    {
        "content": "<p>oh</p>",
        "id": 256584901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616284
    },
    {
        "content": "<p>okay then</p>",
        "id": 256584907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616286
    },
    {
        "content": "<p>Looks like the original issue was reported without the use of feature flags (other than the RFC 2229 one) but that has already been resolved.</p>",
        "id": 256584913,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616287
    },
    {
        "content": "<p>the low risk combined with the fact that rustc bootstraps itself on the beta</p>",
        "id": 256584953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616302
    },
    {
        "content": "<p>The issue was reopened when the same thing was discovered for if let match arms.</p>",
        "id": 256584974,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616309
    },
    {
        "content": "<p>I guess that’s enough to put me back over edge to “its okay to backport this.\"</p>",
        "id": 256584987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616313
    },
    {
        "content": "<p>(so that the compiler can resume making use of <code>if let</code> guards)</p>",
        "id": 256585022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616331
    },
    {
        "content": "<p>but in case you cannot tell, I could be <em>very</em> easily convinced otherwise. :)</p>",
        "id": 256585061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616347
    },
    {
        "content": "<p>anyway lets go with backport approved</p>",
        "id": 256585087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616358
    },
    {
        "content": "<p>and move along</p>",
        "id": 256585092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616360
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix unsound optimization with explicit variant discriminants\" <a href=\"https://github.com/rust-lang/rust/pull/89489\">rust#89489</a><ul>\n<li>Fixes P-critical unsoundness <a href=\"https://github.com/rust-lang/rust/issues/89485\">rust#89485</a></li>\n<li>maybe stable backport not necessary, as we are closing to the next stable (<span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <a href=\"https://github.com/rust-lang/rust/pull/89489#issuecomment-933506404\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 256585153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616382
    },
    {
        "content": "<blockquote>\n<p>Beta nominating so we can get this fix out sooner. The most important change is that we've disabled the pass by default which is safe and should be very easy to backport.</p>\n</blockquote>",
        "id": 256585294,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616427
    },
    {
        "content": "<p>so are we only nominating the part that disables the pass? or the whole change?</p>",
        "id": 256585415,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616471
    },
    {
        "content": "<p>I assumed we would backport the whole change.</p>",
        "id": 256585462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616487
    },
    {
        "content": "<p>My comment was just to point out that the net effect on a stable compiler is that the pass is now disabled.</p>",
        "id": 256585517,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616507
    },
    {
        "content": "<p>What is value of backporting the whole change when the pass can now only be enabled via a <code>-Z</code> flag?</p>",
        "id": 256585622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616538
    },
    {
        "content": "<p>I don't feel strongly. My assumption was that we normally backport the entire change.</p>",
        "id": 256585719,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616575
    },
    {
        "content": "<p>okay</p>",
        "id": 256585732,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616580
    },
    {
        "content": "<p>If we only want to take that part of the change, that's fine too.</p>",
        "id": 256585769,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616597
    },
    {
        "content": "<p>(I think it might be good to try to structure things to separate out truly minimal things to backport)</p>",
        "id": 256585792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616606
    },
    {
        "content": "<p>here’s my suggestion here: I’m fine with approving the backport</p>",
        "id": 256585819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616617
    },
    {
        "content": "<p>but lets include a note, that if there’s any issue at all, its also fine to <em>just</em> backport solely the bit that disables the pass</p>",
        "id": 256585887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616642
    },
    {
        "content": "<p>sound good?</p>",
        "id": 256585947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616649
    },
    {
        "content": "<p>and what about stable backport? At this point we’re so close to next release, it is assumed not worth it?</p>",
        "id": 256586034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616692
    },
    {
        "content": "<p>yeah oaky 1.5 weeks</p>",
        "id": 256586072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616706
    },
    {
        "content": "<p>fine</p>",
        "id": 256586090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616713
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix stabilization version for <code>bindings_after_at</code>\" <a href=\"https://github.com/rust-lang/rust/pull/89605\">rust#89605</a><ul>\n<li>PR opened by <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span>, not yet merged, suggests beta-backport</li>\n<li><code>bindings_after_at</code> was stabilized in 1.56</li>\n</ul>\n</li>\n</ul>",
        "id": 256586115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616725
    },
    {
        "content": "<p>can these sorts of changes ever break anything?</p>",
        "id": 256586276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616785
    },
    {
        "content": "<p>(I mean other than pathological cases like someone parsing output from lint diagnostics)</p>",
        "id": 256586329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616801
    },
    {
        "content": "<p>not really, but also it doesn't seem super high impact either.</p>",
        "id": 256586346,
        "sender_full_name": "nagisa",
        "timestamp": 1633616805
    },
    {
        "content": "<p>yeah</p>",
        "id": 256586366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616810
    },
    {
        "content": "<p>its fine. lets just go ahead with approving it.</p>",
        "id": 256586425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616831
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Turn vtable_allocation() into a query\" <a href=\"https://github.com/rust-lang/rust/pull/89619\">rust#89619</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></li>\n<li>Fixes P-critical unsoundness <a href=\"https://github.com/rust-lang/rust/issues/89598\">rust#89598</a></li>\n</ul>\n</li>\n</ul>",
        "id": 256586463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616853
    },
    {
        "content": "<p>oh yeah we definitely need this</p>",
        "id": 256586594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616889
    },
    {
        "content": "<p>I'm not quite sure this is actually in stable too</p>",
        "id": 256586626,
        "sender_full_name": "mw",
        "timestamp": 1633616904
    },
    {
        "content": "<p>I'll paste this comment from <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  from 15 minutes ago<br>\n<a href=\"https://github.com/rust-lang/rust/pull/89619#issuecomment-937835308\">https://github.com/rust-lang/rust/pull/89619#issuecomment-937835308</a></p>",
        "id": 256586664,
        "sender_full_name": "apiraino",
        "timestamp": 1633616918
    },
    {
        "content": "<blockquote>\n<p>I just realized that the test case does not actually do what I expected it to do. It does work -- but only by accident. I'll rewrite it to be more robust.</p>\n</blockquote>\n<p>(if relevant to the backport decision)</p>",
        "id": 256586678,
        "sender_full_name": "apiraino",
        "timestamp": 1633616926
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/86475\">#86475</a> claims it was in Rust 1.55</p>",
        "id": 256586697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616932
    },
    {
        "content": "<p>(aka stable)</p>",
        "id": 256586743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616950
    },
    {
        "content": "<p>but we’re also very close to stable release</p>",
        "id": 256586811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616972
    },
    {
        "content": "<p>I'm also hesitant to backport to stable since we haven't merged to nightly yet.</p>",
        "id": 256586850,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633616988
    },
    {
        "content": "<p>like, do I think we’re going to put out a point release for this?</p>",
        "id": 256586858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616990
    },
    {
        "content": "<p>Oh true</p>",
        "id": 256586865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633616994
    },
    {
        "content": "<p>The original test case (as currently in the PR) does trigger the miscompilation</p>",
        "id": 256586919,
        "sender_full_name": "mw",
        "timestamp": 1633617005
    },
    {
        "content": "<p>(not because the code is bad or anything just as a general rule)</p>",
        "id": 256586949,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617016
    },
    {
        "content": "<p>yes, it should land before we decide</p>",
        "id": 256586989,
        "sender_full_name": "mw",
        "timestamp": 1633617032
    },
    {
        "content": "<p>okay well it seems like beta backport approval is reasonable here</p>",
        "id": 256587059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617057
    },
    {
        "content": "<p>I suspect stable won’t happen, especially if we wait until next week to discuss it</p>",
        "id": 256587115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617080
    },
    {
        "content": "<p>the implementation seems good to me to the point where I'm comfortable with r=meing the PR if that changes anything.</p>",
        "id": 256587138,
        "sender_full_name": "nagisa",
        "timestamp": 1633617090
    },
    {
        "content": "<p>I say beta backport approved; just wait until after it has merged to nightly before trying to land to beta</p>",
        "id": 256587259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617125
    },
    {
        "content": "<p>(and I’m skipping the stable backport question)</p>",
        "id": 256587311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617146
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 256587335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617158
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 256587346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617164
    },
    {
        "content": "<ul>\n<li>\"On macOS, make strip=\"symbols\" not pass any options to strip\" <a href=\"https://github.com/rust-lang/rust/pull/88137\">rust#88137</a><ul>\n<li>mentioned last week, was waiting on Alex Crichton</li>\n<li>Alex Crichton replied <a href=\"https://github.com/rust-lang/rust/pull/88137#issuecomment-933531347\">he doesn't have much insights on macOS</a></li>\n<li><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> comments <a href=\"https://github.com/rust-lang/rust/pull/88137#issuecomment-936463641\">about stabilizing <code>strip</code> in rustc before in cargo</a></li>\n</ul>\n</li>\n</ul>",
        "id": 256587378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you still on board to review this?</p>",
        "id": 256587482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617221
    },
    {
        "content": "<p>I’m going to assume so for now</p>",
        "id": 256587575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617250
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 256587609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617264
    },
    {
        "content": "<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last review activity: 4 months ago)</li>\n</ul>",
        "id": 256587630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617271
    },
    {
        "content": "<p>I’m still too busy to look at this now</p>",
        "id": 256587734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617313
    },
    {
        "content": "<p>I've been working though it slowly but still not done reviewing. Sorry <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 256587748,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617318
    },
    {
        "content": "<ul>\n<li>\"Account for incorrect <code>impl Foo&lt;const N: ty&gt; {}</code> syntax\" <a href=\"https://github.com/rust-lang/rust/pull/85346\">rust#85346</a> (last review activity: 3 months ago)</li>\n</ul>",
        "id": 256587783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617327
    },
    {
        "content": "<p>No worries :)</p>",
        "id": 256587785,
        "sender_full_name": "simulacrum",
        "timestamp": 1633617328
    },
    {
        "content": "<p>I can grab this.</p>",
        "id": 256587862,
        "sender_full_name": "nagisa",
        "timestamp": 1633617357
    },
    {
        "content": "<p>Well I looked at this with <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> recently</p>",
        "id": 256587930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617369
    },
    {
        "content": "<p>it was the basis of a <a href=\"http://pernos.co\">pernos.co</a> demo I posted</p>",
        "id": 256587959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617380
    },
    {
        "content": "<p>Yes, blocked on landing a fix to rustfmt</p>",
        "id": 256587985,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1633617388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> is that indeed the answer? To revise rustfmt?</p>",
        "id": 256588034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617409
    },
    {
        "content": "<p>A-ha. I recall seeing the video you posted on twitter ^^</p>",
        "id": 256588071,
        "sender_full_name": "nagisa",
        "timestamp": 1633617425
    },
    {
        "content": "<p>I guess it probably makes the most sense, versus trying to make <code>rustc</code> work around its bugs/idiosyncracies</p>",
        "id": 256588098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617436
    },
    {
        "content": "<p>anyway its definitely not blocked anymore, I think</p>",
        "id": 256588151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617453
    },
    {
        "content": "<p>Yep. The only annoying thing is how long it might take us to update rustfmt, but it's no longer blocked on team</p>",
        "id": 256588174,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1633617462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> FWIW, I think the manual page for macos strip would help with that issue.</p>",
        "id": 256588177,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1633617463
    },
    {
        "content": "<ul>\n<li>\"When recovering from a <code>:</code> in a pattern, use adequate AST pattern\" <a href=\"https://github.com/rust-lang/rust/pull/87160\">rust#87160</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 256588191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617469
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256588177\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> FWIW, I think the manual page for macos strip would help with that issue.</p>\n</blockquote>\n<p>as in, you want one of us to cut-and-paste that man page somewhere?</p>",
        "id": 256588233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617482
    },
    {
        "content": "<p>I think I would have time to look at this as well.</p>",
        "id": 256588350,
        "sender_full_name": "nagisa",
        "timestamp": 1633617520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>. yes, I tried reading that but it still isn't quite clear to me what the desired behavior of the compiler flag is</p>",
        "id": 256588505,
        "sender_full_name": "mw",
        "timestamp": 1633617577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256588350\">said</a>:</p>\n<blockquote>\n<p>I think I would have time to look at this as well.</p>\n</blockquote>\n<p>Okay, yeah, I think focus on <a href=\"https://github.com/rust-lang/rust/issues/87160\">rust#87160</a> would be great, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> ; The other PR is not in distress anymore</p>",
        "id": 256588643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617615
    },
    {
        "content": "<ul>\n<li>\"Mir-Opt for copying enums with large discrepancies\" <a href=\"https://github.com/rust-lang/rust/pull/85158\">rust#85158</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 256588688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617636
    },
    {
        "content": "<p>I thought I reviewed this the other day ... oh it's waiting on a final review from me.</p>",
        "id": 256588799,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> No, was just mentioning it as a useful reference.</p>",
        "id": 256588802,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1633617680
    },
    {
        "content": "<p>I can do that.</p>",
        "id": 256588804,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617681
    },
    {
        "content": "<p>Yeah it certainly seems like there was activity more recently than 2 months ago</p>",
        "id": 256588861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617705
    },
    {
        "content": "<p>but maybe this is artifact of when agenda was constructed, last week?</p>",
        "id": 256588888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> okay thanks</p>",
        "id": 256588907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617720
    },
    {
        "content": "<p>last up</p>",
        "id": 256588945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617723
    },
    {
        "content": "<ul>\n<li>\"Abort in panic_abort eh_personality\" <a href=\"https://github.com/rust-lang/rust/pull/86801\">rust#86801</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 256588953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617723
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256588888\">said</a>:</p>\n<blockquote>\n<p>but maybe this is artifact of when agenda was constructed, last week?</p>\n</blockquote>\n<p>yeah...weird</p>",
        "id": 256589043,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633617758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256588953\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Abort in panic_abort eh_personality\" <a href=\"https://github.com/rust-lang/rust/pull/86801\">rust#86801</a> (last review activity: 2 months ago)</li>\n</ul>\n</blockquote>\n<p>I think the main thing this is missing is windows expertis3e</p>",
        "id": 256589139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you think you might be able to find a Windows expert to help with reviewing those parts of this change?</p>",
        "id": 256589177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617826
    },
    {
        "content": "<p>or rather, its not 100% clear to me what the status of this PR is. At one point, it was claimed that it didn’t fix the issue on windows, and thus Alex Crichton pointed out that doing this would <em>not</em> unblock stablization of C-unwind</p>",
        "id": 256589350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617877
    },
    {
        "content": "<p>Are we just looking for someone to review the Windows impl?</p>",
        "id": 256589430,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617912
    },
    {
        "content": "<p>This is <a href=\"https://github.com/rust-lang/rust/pull/86801#issuecomment-884951978\">what we need</a>: </p>\n<blockquote>\n<p>I think it would be good to confirm that the name matching still happens though and it would probably be good to consult with an MSVC expert before committing to this pattern, though.</p>\n</blockquote>",
        "id": 256589442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617914
    },
    {
        "content": "<p>Ok. I think <span class=\"user-mention\" data-user-id=\"274417\">@Daniel Frampton</span> has some knowledge of SEH unwinding so I'll talk to him.</p>",
        "id": 256589481,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633617929
    },
    {
        "content": "<p>so if we can get our hands on an MSVC expert, tht would be good first step</p>",
        "id": 256589491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617933
    },
    {
        "content": "<p>okay great</p>",
        "id": 256589497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617934
    },
    {
        "content": "<p>moving on</p>",
        "id": 256589533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617945
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">79 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">52 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 3 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 2 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 47 P-high, 83 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 256589549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617954
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 256589591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617962
    },
    {
        "content": "<ul>\n<li>\"VTable-related miscompilation with incremental compilation\" <a href=\"https://github.com/rust-lang/rust/issues/89598\">rust#89598</a><ul>\n<li>reported by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, currently unassigned</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> comments this should probably be fixed by the next stable</li>\n<li><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> tested a fix in PR <a href=\"https://github.com/rust-lang/rust/pull/89602\">rust#89602</a> and checked the perf impact</li>\n</ul>\n</li>\n</ul>",
        "id": 256589633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617970
    },
    {
        "content": "<p>We discussed this above. Really great work, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 256589658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617980
    },
    {
        "content": "<ul>\n<li>\"Internal compiler error: \"entered unreachable code: we captured two identical projections\"\" <a href=\"https://github.com/rust-lang/rust/issues/89606\">rust#89606</a><ul>\n<li>stable-to-beta regression</li>\n<li>introduced by <a href=\"https://github.com/rust-lang/rust/issues/89208\">#89208</a> (<a href=\"https://github.com/rust-lang/rust/issues/89606#issuecomment-937083496\">see comment</a>)</li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>\n</li>\n</ul>",
        "id": 256589693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633617991
    },
    {
        "content": "<p>I'm going to be working on a fix after this meeting.</p>",
        "id": 256589732,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you think we should try to delegate that elsewhere?</p>",
        "id": 256589735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618006
    },
    {
        "content": "<p>okay</p>",
        "id": 256589744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618008
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 256589766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618017
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 256589800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618029
    },
    {
        "content": "<ul>\n<li>\"no errors encountered even though <code>delay_span_bug</code> issued\" <a href=\"https://github.com/rust-lang/rust/issues/87757\">rust#87757</a><ul>\n<li>Should be fixed by beta-backport of <a href=\"https://github.com/rust-lang/rust/pull/88996\">rust#88996</a> (beta-accepted)</li>\n</ul>\n</li>\n</ul>",
        "id": 256589818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618036
    },
    {
        "content": "<ul>\n<li>\"regression: cycle in MIR opts\" <a href=\"https://github.com/rust-lang/rust/issues/88972\">rust#88972</a><ul>\n<li>Should be fixed by <a href=\"https://github.com/rust-lang/rust/pull/88979\">rust#88979</a> (beta-accepted)</li>\n</ul>\n</li>\n</ul>",
        "id": 256589839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618045
    },
    {
        "content": "<ul>\n<li>\"Trait upcasting shadows (trait object) deref coercion\" <a href=\"https://github.com/rust-lang/rust/issues/89190\">rust#89190</a><ul>\n<li><a href=\"#narrow/stream/144729-wg-traits/topic/Dyn.20upcasting.20vs.20deref.20coercion\">Zulip topic</a>, involves also <code>T-lang</code></li>\n<li><span class=\"user-mention\" data-user-id=\"116458\">@Charles Lew</span> provides PR <a href=\"https://github.com/rust-lang/rust/pull/89461\">rust#89461</a>, reviewed and approved by Niko</li>\n</ul>\n</li>\n</ul>",
        "id": 256589862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618055
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 256589982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618090
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-10-05.md\">triage logs for 2021-10-05</a></p>\n</blockquote>\n<p>A fairly busy week, with a relatively high percentage of PRs landing with regressions and improvements. The overall trajectory is fairly neutral for this week though.</p>\n<p>Triage done by <strong>@simulacrum</strong>. Revision range: <a href=\"https://perf.rust-lang.org/?start=83f147b3baf21acfc367a6da1045d212cd3957e4&amp;end=25ec8273855fde2d72ae877b397e054de5300e10&amp;absolute=false&amp;stat=instructions%3Au\">83f147b3baf21acfc367a6da1045d212cd3957e4..25ec8273855fde2d72ae877b397e054de5300e10</a></p>\n<p>5 Regressions, 5 Improvements, 5 Mixed; 1 of them in rollups, 43 comparisons made in total</p>",
        "id": 256590007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618100
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Don't anonymize bound region names during typeck <a href=\"https://github.com/rust-lang/rust/issues/89250\">#89250</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=30acf6def32a340b4bfce6e1e2638f1b05ac2cd9&amp;end=69c1c6a173dcae20c245348f6c7d19074b6109b7&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>full</code> builds of <code>coercions</code>)</li>\n<li>Regression seems to be real, though no regressions in cycle counts are<br>\n  reported, so this is likely an acceptable hit.</li>\n</ul>\n<p>Constify ?-operator for Result and Option <a href=\"https://github.com/rust-lang/rust/issues/86853\">#86853</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=69c1c6a173dcae20c245348f6c7d19074b6109b7&amp;end=c6007fdc7059c677a6c089e8d2915b264c0d1326&amp;stat=instructions:u\">instruction counts</a> (up to 0.5% on <code>incr-full</code> builds of <code>stm32f4</code>)</li>\n<li>\n<p>This is a small regression on the stm32f4 crate, due to a number of extra<br>\n  obligations that are created, presumably due to the checks for whether ?<br>\n  operators in this crate can be const. It is likely an acceptable change for<br>\n  the time being, particularly as the const-impls functionality is still in<br>\n  nascent stages and optimizations may come down the line.</p>\n</li>\n<li>\n<p>The PR ended up temporarily reverted by<br>\n<a href=\"https://github.com/rust-lang/rust/issues/89450\">#89450</a>, though not due to<br>\n  performance reasons.</p>\n</li>\n</ul>\n<p>Fix read_to_end to not grow an exact size buffer <a href=\"https://github.com/rust-lang/rust/issues/89165\">#89165</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e737694a4d66b01308b73d4559a35b43e414faf9&amp;end=d25de31a0eeb14ab0c8c4613496fe2d3d9a085dd&amp;stat=instructions:u\">instruction counts</a> (up to 0.7% on <code>full</code> builds of <code>piston-image</code>)</li>\n<li>This regression is unclear in cause, and investigation on the PR did not lead<br>\n  to a conclusion. However, the regression is fairly small and the change is<br>\n  expected to have impacts on more I/O heavy benchmarks than rustc is.<br>\n  Syscall counts were shown to improve on the PR, including for rustc, so the<br>\n  optimization seems to work in general.</li>\n</ul>\n<p>Fix unsound optimization with explicit variant discriminants <a href=\"https://github.com/rust-lang/rust/issues/89489\">#89489</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=44593aeb1387b1be355aeaf0040d5927bd80f060&amp;end=a4797664ba9c7d71e586122853858eeb6c153bb9&amp;stat=instructions:u\">instruction counts</a> (up to 2.3% on <code>full</code> builds of <code>style-servo</code>)</li>\n<li>This is an expected regression, but is clearly justified by the fix for an<br>\n  unsound optimization. We expect to reland it with appropriate changes in the<br>\n  future.</li>\n</ul>\n<p>Fix clippy lints <a href=\"https://github.com/rust-lang/rust/issues/89405\">#89405</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a8387aef8c378a771686878062e544af4d5e2245&amp;end=b27661eb33c74cb514dba059b47d86b6582ac1c2&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Likely to be painful to investigate -- changes are widely scattered across the<br>\n  codebase and in theory \"no-ops\".</li>\n</ul>",
        "id": 256590054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618118
    },
    {
        "content": "<h4>Improvements</h4>\n<p>Note: improvements reports are trimmed down for brevity, but this week <code>rustc-perf</code> reports large improvements, therefore: <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<ul>\n<li>Restructure std::rt <a href=\"https://github.com/rust-lang/rust/issues/89011\">#89011</a></li>\n<li>Remove visible path calculation from allowed deprecation lint <a href=\"https://github.com/rust-lang/rust/issues/89395\">#89395</a></li>\n<li>Avoid nondeterminism in trimmed_def_paths <a href=\"https://github.com/rust-lang/rust/issues/89408\">#89408</a></li>\n<li>Rollup of 14 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89512\">#89512</a></li>\n<li>Deriving: Include bound generic params in type parameters for where clause <a href=\"https://github.com/rust-lang/rust/issues/89341\">#89341</a></li>\n</ul>",
        "id": 256590155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618160
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Add more tracing instrumentation <a href=\"https://github.com/rust-lang/rust/issues/89048\">#89048</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1d71ba862309d59df710078a845c8772ffb22aba&amp;end=8f8092cc32ec171becef8ceacec7dbb06c5d7d7e&amp;stat=instructions:u\">instruction counts</a> (up to -1.6% on <code>full</code> builds of <code>keccak</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1d71ba862309d59df710078a845c8772ffb22aba&amp;end=8f8092cc32ec171becef8ceacec7dbb06c5d7d7e&amp;stat=instructions:u\">instruction counts</a> (up to 12.0% on <code>full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Regression is mitigated by<br>\n<a href=\"https://github.com/rust-lang/rust/pull/89363\">#89363</a>, which just barely<br>\n  missed being included in this report.</li>\n</ul>\n<p>Add an intermediate representation to exhaustiveness checking <a href=\"https://github.com/rust-lang/rust/issues/88950\">#88950</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=8f8092cc32ec171becef8ceacec7dbb06c5d7d7e&amp;end=6df1d82869d06b88ff413e63a1e8efbb311e3b5c&amp;stat=instructions:u\">instruction counts</a> (up to -2.6% on <code>full</code> builds of <code>unicode_normalization</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=8f8092cc32ec171becef8ceacec7dbb06c5d7d7e&amp;end=6df1d82869d06b88ff413e63a1e8efbb311e3b5c&amp;stat=instructions:u\">instruction counts</a> (up to 2.9% on <code>full</code> builds of <code>match-stress-enum</code>)</li>\n<li>Code quality improvements mitigate the regressions, which are largely limited<br>\n  to a stress test.</li>\n</ul>\n<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89435\">#89435</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=ed937594d3912ced11f6f35a90bb8bf591909d2a&amp;end=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2&amp;stat=instructions:u\">instruction counts</a> (up to -0.3% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ed937594d3912ced11f6f35a90bb8bf591909d2a&amp;end=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>incr-unchanged</code> builds of <code>externs</code>)</li>\n<li>Unclear cause for the regression. Hasn't been investigated yet.</li>\n</ul>\n<p>Rework HIR API to make invocations of the hir_crate query harder. <a href=\"https://github.com/rust-lang/rust/issues/88880\">#88880</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2&amp;end=c02371c442f811878ab3a0f5a813402b6dfd45d2&amp;stat=instructions:u\">instruction counts</a> (up to -0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2&amp;end=c02371c442f811878ab3a0f5a813402b6dfd45d2&amp;stat=instructions:u\">instruction counts</a> (up to 0.2% on <code>full</code> builds of <code>many-assoc-items</code>)</li>\n<li>Regressions are smaller than improvements. Original perf run didn't return<br>\n  regressions at all. Tagged for investigation.</li>\n</ul>\n<p>resolve: Cache module loading for all foreign modules <a href=\"https://github.com/rust-lang/rust/issues/89239\">#89239</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=edebf77e0090195bf80c0d8cda821e1bf9d03053&amp;end=d14731cb3ced8318d7fc83cbe838f0e7f2fb3b40&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>incr-unchanged</code> builds of <code>tokio-webpush-simple</code>)</li>\n<li>From the PR: This corrects behaviour for macros 2.0 and avoids an ICE, so a<br>\n  0.8% regression seems acceptable.</li>\n</ul>",
        "id": 256590219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618189
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<p>Investigation work continues, and we're down to 22 from 28 untriaged PRs week<br>\nover week.</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89435\">#89435 Rollup of 6 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89363\">#89363 Fix performance regression with #[instrument]</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89263\">#89263 Suggest both of immutable and mutable trait implementations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89165\">#89165 Fix read_to_end to not grow an exact size buffer</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89125\">#89125 Don't use projection cache or candidate cache in intercrate mode</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89103\">#89103 Migrate in-tree crates to 2021</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89047\">#89047 Rollup of 10 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89030\">#89030 Introduce <code>Rvalue::ShallowInitBox</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88945\">#88945 Remove concept of 'completion' from the projection cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88824\">#88824 Rollup of 15 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88804\">#88804 Revise never type fallback algorithm</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88719\">#88719 Point at argument instead of call for their obligations</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88703\">#88703 Gather module items after lowering.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88627\">#88627 Do not preallocate HirIds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88575\">#88575 Querify <code>FnAbi::of_{fn_ptr,instance}</code> as <code>fn_abi_of_{fn_ptr,instance}</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88308\">#88308 Morph <code>layout_raw</code> query into <code>layout_of</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87688\">#87688 Introduce <code>let...else</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87064\">#87064 Support <code>#[track_caller]</code> on closures and generators</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83698\">#83698 Use undef for uninitialized bytes in constants</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/80522\">#80522 Split rustc_mir</a></li>\n</ul>",
        "id": 256590359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618230
    },
    {
        "content": "<p>okay, 9 minutes left. 2 nominations, plus a topic that <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> posted at end of agenda. I think we’re in good shape.</p>",
        "id": 256590468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618282
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 256590482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618288
    },
    {
        "content": "<ul>\n<li>\"On macOS, make strip=\"symbols\" not pass any options to strip\" <a href=\"https://github.com/rust-lang/rust/pull/88137\">rust#88137</a><ul>\n<li>mentioned in PR waiting-on-team</li>\n</ul>\n</li>\n</ul>",
        "id": 256590493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618293
    },
    {
        "content": "<p>ah brilliant, we already talked about this.</p>",
        "id": 256590515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618300
    },
    {
        "content": "<ul>\n<li>\"Rust can't infer appropriate generics for function when it should\" <a href=\"https://github.com/rust-lang/rust/issues/89242\">rust#89242</a><ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-30.20.2354818/near/255587805\">discussed last week</a></li>\n<li>the general mood was to let this slip and no nothing as the sample seems to be about uncallable code, just tested on the playground</li>\n<li><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> mentioned he would discuss this with Niko on Monday</li>\n<li>anything new to add?</li>\n</ul>\n</li>\n</ul>",
        "id": 256590533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618308
    },
    {
        "content": "<p>uh let me remember</p>",
        "id": 256590634,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633618333
    },
    {
        "content": "<p>:)</p>",
        "id": 256590652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618339
    },
    {
        "content": "<p>did you end up discussing it with Niko?</p>",
        "id": 256590670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618346
    },
    {
        "content": "<p>I did discuss it with Niko</p>",
        "id": 256590674,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633618348
    },
    {
        "content": "<p>Any reason to not let this slip?</p>",
        "id": 256590704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618362
    },
    {
        "content": "<p>I don't remember if we made a conclusion</p>",
        "id": 256590721,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633618367
    },
    {
        "content": "<p>But I think it can slip</p>",
        "id": 256590746,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633618378
    },
    {
        "content": "<p>okay</p>",
        "id": 256590795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618394
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 256590820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618406
    },
    {
        "content": "<h2>Misc</h2>\n<ul>\n<li>Handling RLS 1.0 issue during T-compiler meeting (<a href=\"#narrow/stream/131828-t-compiler/topic/Handling.20RLS.20issues.20during.20the.20meeting.3F\">Zulip topic</a>)<ul>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <a href=\"https://github.com/rust-lang/rust/issues/58858#issuecomment-927108585\">comment on github</a></li>\n<li>Can that issue be closed and perhaps remove RLS from <a href=\"https://github.com/rust-lang/rust/issues/54818\">rust#54818</a>?</li>\n</ul>\n</li>\n</ul>",
        "id": 256590843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618414
    },
    {
        "content": "<p>I think he was saying there might be some precendent for \"breaking\" code that isnt actually usable</p>",
        "id": 256590893,
        "sender_full_name": "Jack Huey",
        "timestamp": 1633618428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256590843\">said</a>:</p>\n<blockquote>\n<h2>Misc</h2>\n<ul>\n<li>Handling RLS 1.0 issue during T-compiler meeting (<a href=\"#narrow/stream/131828-t-compiler/topic/Handling.20RLS.20issues.20during.20the.20meeting.3F\">Zulip topic</a>)<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"https://github.com/rust-lang/rust/issues/58858#issuecomment-927108585\">comment on github</a></li>\n<li>Can that issue be closed and perhaps remove RLS from <a href=\"https://github.com/rust-lang/rust/issues/54818\">rust#54818</a>?</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>realistically, we cannot expand our scope under the current meeting constraints</p>",
        "id": 256591115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618503
    },
    {
        "content": "<p>there is perhaps a question of what “RLS” denotes</p>",
        "id": 256591206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618537
    },
    {
        "content": "<p>are there any real-world users of RLS 1.0 at this point?</p>",
        "id": 256591265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618561
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rls\">https://github.com/rust-lang/rls</a> saw activity on August 24th</p>",
        "id": 256591453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618610
    },
    {
        "content": "<p>IMO yes but they should probably be transitioned to ra/rls2.0</p>",
        "id": 256591481,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618617
    },
    {
        "content": "<p>I think there is a broader desire to still merge these things</p>",
        "id": 256591568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618644
    },
    {
        "content": "<p>or rather, refactor the compiler architecture into components that can be more readily re-used by other parties</p>",
        "id": 256591648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618669
    },
    {
        "content": "<p>At least every week or two, somebody shows up with a question on /r/rust asking why something doesn't work right in RLS.</p>",
        "id": 256591649,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618670
    },
    {
        "content": "<p>interesting. okay</p>",
        "id": 256591678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618681
    },
    {
        "content": "<p>(I'm not advocating that we should be putting time into RLS just saying there are people out there using it)</p>",
        "id": 256591772,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618702
    },
    {
        "content": "<p>Doesn’t rust-analyzer have support in rustup now?</p>",
        "id": 256591779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618704
    },
    {
        "content": "<p>okay, well, lets leave this topic unresolved for now</p>",
        "id": 256591925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256591779\">said</a>:</p>\n<blockquote>\n<p>Doesn’t rust-analyzer have support in rustup now?</p>\n</blockquote>\n<p>I think not yet (I always download the tarball from github)</p>",
        "id": 256591992,
        "sender_full_name": "apiraino",
        "timestamp": 1633618778
    },
    {
        "content": "<p>(I think the answer is going to be multi-faceted, including: 1. a migration path away from RLS 1.0, and 2. a broader plan for librarification)</p>",
        "id": 256592007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618785
    },
    {
        "content": "<p>anyway, the question was simply : do we want to remove rls 1.0 from <a href=\"https://github.com/rust-lang/rust/issues/58858\">#58858</a>?</p>",
        "id": 256592057,
        "sender_full_name": "apiraino",
        "timestamp": 1633618801
    },
    {
        "content": "<p>(but I don’t think either of these things are going to be part of the weekly triage in the near future._)</p>",
        "id": 256592061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256591925\">said</a>:</p>\n<blockquote>\n<p>okay, well, lets leave this topic unresolved for now</p>\n</blockquote>\n<p>Perhaps we should have a steering meeting on this.</p>",
        "id": 256592063,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-10-07.20.2354818/near/256592057\">said</a>:</p>\n<blockquote>\n<p>anyway, the question was simply : do we want to remove rls 1.0 from <a href=\"https://github.com/rust-lang/rust/issues/58858\">#58858</a>?</p>\n</blockquote>\n<p>We probably should strike it out, with a note saying that the triage meeting doesn’t have capacity for it.</p>",
        "id": 256592247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1633618833
    },
    {
        "content": "<p>makes sense <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 256592312,
        "sender_full_name": "apiraino",
        "timestamp": 1633618856
    },
    {
        "content": "<p>And close the issue, I assume?</p>",
        "id": 256592372,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1633618871
    },
    {
        "content": "<p>indeed</p>",
        "id": 256592429,
        "sender_full_name": "apiraino",
        "timestamp": 1633618890
    },
    {
        "content": "<p>I think the meeting's over :-) thanks to <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  for participating <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 256593485,
        "sender_full_name": "apiraino",
        "timestamp": 1633619221
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/czhRhn0rSaib7Pnr5ZvDUg?view\">https://hackmd.io/czhRhn0rSaib7Pnr5ZvDUg?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span>by  <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span></li>\n</ul>",
        "id": 256598887,
        "sender_full_name": "apiraino",
        "timestamp": 1633621057
    }
]