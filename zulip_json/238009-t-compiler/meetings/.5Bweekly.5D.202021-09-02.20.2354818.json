[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h45<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/3r_D-3ElQ-WR_VVzx4g2Pw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span>  from <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>  </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span></li>\n</ul>",
        "id": 251705251,
        "sender_full_name": "apiraino",
        "timestamp": 1630585028
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Felix is on vacation this week so I'll be running the meeting. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here.</p>",
        "id": 251719765,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591315
    },
    {
        "content": "<p>We'll start with our announcements as usual.</p>",
        "id": 251719907,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591351
    },
    {
        "content": "<h2>Announcements</h2>\n<ul>\n<li><span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> Next week, September, 9th release Rust stable 1.55 <span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span></li>\n</ul>",
        "id": 251719934,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591362
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<p>Note: <a href=\"https://hackmd.io/yQ8jefI0Q0mBwFMAjGKfQw\">2021-08-27 MCP review</a></p>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comment: GH none, Zulip 2m ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comment: GH +2m ago, Zulip yesterday)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comment: GH none, Zulip +2m ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last comment: GH none, Zulip 40d ago)</li>\n<li>\"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a> (last comment: GH none, Zulip 15d ago)</li>\n<li>\"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a> (last comment: GH none, Zulip today)</li>\n</ul>\n</li>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a> </li>\n</ul>\n</li>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Transfer <code>rustc-demangle</code> to the @rust-lang GitHub org.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/456\">compiler-team#456</a> </li>\n<li>\"Add the <code>-Z randomize-layout</code> flag\" <a href=\"https://github.com/rust-lang/compiler-team/issues/457\">compiler-team#457</a> </li>\n<li>\"Add <code>m68k-unknown-linux-gnu</code> as new Tier 3 backend\" <a href=\"https://github.com/rust-lang/compiler-team/issues/458\">compiler-team#458</a> </li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>\"Make <code>resolve_instance</code> fallible\" <a href=\"https://github.com/rust-lang/compiler-team/issues/449\">compiler-team#449</a> </li>\n<li>\"Reproducible command line + determinism\" <a href=\"https://github.com/rust-lang/compiler-team/issues/450\">compiler-team#450</a> </li>\n<li>\"Make AST-&gt;HIR lowering incremental\" <a href=\"https://github.com/rust-lang/compiler-team/issues/452\">compiler-team#452</a> </li>\n</ul>\n</li>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Extend <code>-Cdebuginfo</code> with new options and named aliases\" <a href=\"https://github.com/rust-lang/rust/pull/83947\">rust#83947</a> </li>\n<li>\"Stabilize \"force warn\" option \" <a href=\"https://github.com/rust-lang/rust/issues/86516\">rust#86516</a></li>\n</ul>\n</li>\n</ul>",
        "id": 251719988,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591388
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 251720081,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591420
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span> (<a href=\"https://hackmd.io/1NeIcqXERkug9KItmB1TwQ\">previous checkin</a>):<blockquote>\n<h4>Most notable changes</h4>\n<ul>\n<li>Documenting diagnostic items with their usage and naming conventions <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1192\">#1192</a></li>\n<li>Expand THIR section with more details <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1183\">#1183</a></li>\n<li>Add description of -opt-bisect-limit LLVM option <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1182\">#1182</a></li>\n</ul>\n<h4>Most notable WIPs</h4>\n<ul>\n<li><code>ty::Unevaluated</code>: dealing with unused substs <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1190\">#1190</a></li>\n<li>Update build instructions for rustdoc <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1117\">#1117</a></li>\n<li>Move \"ctags\" section into \"Suggested Workflow\" <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1115\">#1115</a></li>\n<li>Document inert vs active attributes <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1110\">#1110</a></li>\n<li>Explain the new valtree system for type level constants. <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1097\">#1097</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>",
        "id": 251720114,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591434
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you have anything from wg-diagnostics you'd like to report?</p>",
        "id": 251720250,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591476
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span>: nothing major since last checkin: multiple small improvements and the landing of a new structured suggestion output that mimics diff patches with coloring</p>",
        "id": 251720314,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1630591505
    },
    {
        "content": "<p>The patch output style is really cool! <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></p>",
        "id": 251720389,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591538
    },
    {
        "content": "<p>Ok, I guess if there's no other announcements we'll roll into backports.</p>",
        "id": 251720556,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591594
    },
    {
        "content": "<h2>Backport nominations</h2>",
        "id": 251720577,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591601
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 251720594,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591610
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Always preserve sub-obligations in the projection cache\" <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a> <ul>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85868#issuecomment-907458600\">perf results</a>: large improvements and large regressions</li>\n<li>still needs to land on nightly?</li>\n</ul>\n</li>\n</ul>",
        "id": 251720604,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591617
    },
    {
        "content": "<p>So, Aaron has made some changes since I reviewed</p>",
        "id": 251720629,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630591629
    },
    {
        "content": "<p>I just quickly went over them</p>",
        "id": 251720661,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630591641
    },
    {
        "content": "<p>I think they look fine to me</p>",
        "id": 251720704,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630591661
    },
    {
        "content": "<p>I'm inclined to just r+</p>",
        "id": 251720715,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630591665
    },
    {
        "content": "<p>but code needs a comment</p>",
        "id": 251720812,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630591690
    },
    {
        "content": "<p>I haven't looked at the patch but it sounds like performance is better in most cases than the previous version and we were willing to accept that version so that seems reasonable to me.</p>",
        "id": 251720888,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591715
    },
    {
        "content": "<p>I'll move on to the next one as we do really need to land this before we can think about a backport.</p>",
        "id": 251720935,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591734
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Tracking issue for <code>UNSUPPORTED_CALLING_CONVENTIONS</code>\" <a href=\"https://github.com/rust-lang/rust/pull/88397\">rust#88397</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n<li>approved by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>nominated to make this lint into stable 1.55</li>\n</ul>\n</li>\n</ul>",
        "id": 251720970,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591747
    },
    {
        "content": "<p>Seems like an obvious backport to me. Accepted.</p>",
        "id": 251721106,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591801
    },
    {
        "content": "<p>also for stable</p>",
        "id": 251721163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630591813
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 251721214,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591833
    },
    {
        "content": "<p>No, no stable backport is suggested here?</p>",
        "id": 251721238,
        "sender_full_name": "simulacrum",
        "timestamp": 1630591843
    },
    {
        "content": "<p>sorry was confused</p>",
        "id": 251721273,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630591857
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 251721302,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591868
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 251721312,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251721273\">said</a>:</p>\n<blockquote>\n<p>sorry was confused</p>\n</blockquote>\n<p>the lint is nominated, unsure if I understood the comment <code>nominated to make this lint into stable 1.55</code>, anyway</p>",
        "id": 251721354,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630591890
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>None at this time</li>\n</ul>",
        "id": 251721366,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591895
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>",
        "id": 251721382,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591902
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 251721399,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591910
    },
    {
        "content": "<ul>\n<li>\"Make *const (), *mut () okay for FFI\" <a href=\"https://github.com/rust-lang/rust/pull/84267\">rust#84267</a> (last comment: 4 months ago)<ul>\n<li>rust-five bot assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n</ul>\n</li>\n</ul>",
        "id": 251721420,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591919
    },
    {
        "content": "<p>I think we just need a new reviewer here. Rerolling...</p>",
        "id": 251721578,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591968
    },
    {
        "content": "<p>Moving on.</p>",
        "id": 251721639,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630591991
    },
    {
        "content": "<ul>\n<li>\"move obligation dedup from <code>impl_or_trait_obligations</code> to project caching\" <a href=\"https://github.com/rust-lang/rust/pull/84944\">rust#84944</a> (last comment: now)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></li>\n<li>discussed last week (see <a href=\"https://github.com/rust-lang/rust/pull/84944#issuecomment-906810332\">Wesley's comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 251721659,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592000
    },
    {
        "content": "<p>I'll review, this week I think</p>",
        "id": 251721726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630592024
    },
    {
        "content": "<p>Great! Sounds like this is under control then. Thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 251721816,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592046
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/issues/84944\">#84944</a> is blocked now on a test</p>",
        "id": 251721829,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592052
    },
    {
        "content": "<ul>\n<li>\n<p>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last comment: 3 months ago)<br>\nrustc_query_impl compile time.</p>\n</li>\n<li>\n<p>\"Refactor query forcing\" <a href=\"https://github.com/rust-lang/rust/pull/78780\">rust#78780</a> (last comment: 8 days ago)</p>\n<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/78780#issuecomment-905701857\">Perf run results</a>: no runtime modification, and -8% on   -</li>\n</ul>\n</li>\n</ul>",
        "id": 251721875,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592072
    },
    {
        "content": "<p>For the issue <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a> fixes</p>",
        "id": 251721888,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592074
    },
    {
        "content": "<p>Heh, this is waiting on me. I will make some time within the next week to review this.</p>",
        "id": 251721944,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592098
    },
    {
        "content": "<ul>\n<li>\"Replace Copy/Clone compiler magic on arrays with library impls\" <a href=\"https://github.com/rust-lang/rust/pull/86041\">rust#86041</a> (last comment: about +2 months ago)<ul>\n<li>also labeled <code>T-libs</code></li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></li>\n</ul>\n</li>\n</ul>",
        "id": 251722036,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592134
    },
    {
        "content": "<p>From a compiler POV, <a href=\"https://github.com/rust-lang/rust/issues/86041\">#86041</a> looks good to me</p>",
        "id": 251722200,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592177
    },
    {
        "content": "<p>(from a wg-traits/Chalk POV, also looks good :))</p>",
        "id": 251722234,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592195
    },
    {
        "content": "<p>Yeah, a quick skim at the diff looks reasonable.</p>",
        "id": 251722296,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592219
    },
    {
        "content": "<p>probably deserves a perf run</p>",
        "id": 251722431,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592272
    },
    {
        "content": "<p>I'll leave a comment asking the PR author to resolve the merge conflict so we can do a perf run and signoff on it.</p>",
        "id": 251722551,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592306
    },
    {
        "content": "<p>Done.</p>",
        "id": 251722743,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592387
    },
    {
        "content": "<p>Nice, we got through all 5 PRs!</p>",
        "id": 251722784,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592402
    },
    {
        "content": "<h2>Issues of Note</h2>",
        "id": 251722840,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592409
    },
    {
        "content": "<h3>Short Summary</h3>",
        "id": 251722852,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592414
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">82 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">56 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 2 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 1 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 47 P-high, 82 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 251722862,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592420
    },
    {
        "content": "<h3>P-critical</h3>",
        "id": 251722909,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592443
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 251722923,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592449
    },
    {
        "content": "<ul>\n<li>\"LLVM crash: Basic Block does not have terminator!\" <a href=\"https://github.com/rust-lang/rust/issues/88043\">rust#88043</a> <ul>\n<li>Fix in PR <a href=\"https://github.com/rust-lang/rust/pull/88124\">#88124</a> is beta- and stable- backport accepted, PR is merged</li>\n<li>tracking the stable-to-stable regression (Wesley's <a href=\"https://github.com/rust-lang/rust/issues/88043#issuecomment-902126551\">comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 251722941,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592455
    },
    {
        "content": "<p>Ok, that backport has been merged so we can close this now.</p>",
        "id": 251722999,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592480
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 251723065,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592507
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 251723101,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592521
    },
    {
        "content": "<ul>\n<li>\"ICE: unexpected concrete region in borrowck: ReStatic\" <a href=\"https://github.com/rust-lang/rust/issues/87455\">rust#87455</a> <ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> provided backport in PR <a href=\"https://github.com/rust-lang/rust/pull/88190\">rust#88190</a> (approved by  <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>)</li>\n<li>Backport landing in 1.55</li>\n</ul>\n</li>\n</ul>",
        "id": 251723161,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592529
    },
    {
        "content": "<p>Seems under control.</p>",
        "id": 251723216,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592553
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 251723232,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592559
    },
    {
        "content": "<ul>\n<li>\"Regression ICE - broken MIR under <code>-C opt-level=s</code> on <code>if let Some(v) = None as Option&lt;...&gt;</code>\" <a href=\"https://github.com/rust-lang/rust/issues/88307\">rust#88307</a> <ul>\n<li>should be resolved by PR <a href=\"https://github.com/rust-lang/rust/pull/88572\">rust#88572</a>, PR is waiting for review (rust-high-five assigned to Wesley)</li>\n</ul>\n</li>\n</ul>",
        "id": 251723249,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251723161\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"ICE: unexpected concrete region in borrowck: ReStatic\" <a href=\"https://github.com/rust-lang/rust/issues/87455\">rust#87455</a> <ul>\n<li><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> provided backport in PR <a href=\"https://github.com/rust-lang/rust/pull/88190\">rust#88190</a> (approved by  <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span>)</li>\n<li>Backport landing in 1.55</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>The backport happened, right? Can this be closed?</p>",
        "id": 251723321,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think is going to test and verify that it is fixed</p>",
        "id": 251723376,
        "sender_full_name": "simulacrum",
        "timestamp": 1630592619
    },
    {
        "content": "<p>it's already done</p>",
        "id": 251723399,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630592632
    },
    {
        "content": "<p>everything is ready, unsure if the backport is in</p>",
        "id": 251723417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630592641
    },
    {
        "content": "<p>we also added a regression test, which is already r+ed, but that gone to master</p>",
        "id": 251723473,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630592648
    },
    {
        "content": "<p>Yeah, the backport was merged.</p>",
        "id": 251723501,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592659
    },
    {
        "content": "<p>so can be closed</p>",
        "id": 251723521,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630592667
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 251723605,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251723249\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Regression ICE - broken MIR under <code>-C opt-level=s</code> on <code>if let Some(v) = None as Option&lt;...&gt;</code>\" <a href=\"https://github.com/rust-lang/rust/issues/88307\">rust#88307</a> <ul>\n<li>should be resolved by PR <a href=\"https://github.com/rust-lang/rust/pull/88572\">rust#88572</a>, PR is waiting for review (rust-high-five assigned to Wesley)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>I believe this should say assigned to mw.</p>",
        "id": 251723637,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592717
    },
    {
        "content": "<p>But that's fine.</p>",
        "id": 251723698,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592743
    },
    {
        "content": "<h2>Performance logs</h2>",
        "id": 251723714,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251723249\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Regression ICE - broken MIR under <code>-C opt-level=s</code> on <code>if let Some(v) = None as Option&lt;...&gt;</code>\" <a href=\"https://github.com/rust-lang/rust/issues/88307\">rust#88307</a> <ul>\n<li>should be resolved by PR <a href=\"https://github.com/rust-lang/rust/pull/88572\">rust#88572</a>, PR is waiting for review (rust-high-five assigned to Wesley)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>It's kind of a non-trivial PR, but I think we want to try to merge it soon?</p>",
        "id": 251723823,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592782
    },
    {
        "content": "<p>Agreed! It seems likely we'll need to beta-backport by the time the PR is merged. Most of the diff looks like it comes from spans changing in the mir-opt tests so hopefully that won't be too bad.</p>",
        "id": 251724276,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251723714\">said</a>:</p>\n<blockquote>\n<h2>Performance logs</h2>\n</blockquote>\n<p>A very busy week with relatively even amounts of regressions and improvements (albeit with improvements outweighing regressions). The largest win was the use of profile-guided optimization (PGO) builds on x86_64 linux builds which brings fairly large improvements in real-world crates. There were 2 regressions that caused fairly large (~3.5%) regressions in real-world crates which need to be investigated.</p>\n<p>Triage done by <strong>@rylev</strong>. 5 Regressions, 4 Improvements, 5 Mixed; 0 of them in rollups<br>\n56 comparisons made in total</p>",
        "id": 251724312,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592967
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Get piece unchecked in <code>write</code> <a href=\"https://github.com/rust-lang/rust/issues/83302\">#83302</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a49e38e672c60da788360e088f00ad12353e3913&amp;end=de42550d0ac525f44ec79300a1cb349ade181c1a&amp;stat=instructions:u\">instruction counts</a> (up to 3.5% on <code>incr-patched: b9b3e592dd cherry picked</code> builds of <code>style-servo</code>)</li>\n<li>This is a largely a change in std lib code, and we don't really have a good process for dealing with how std lib changes effect performance.</li>\n<li>This seems to be primarily affecting debug and check builds, but there doesn't seem to be a query that is clearly to blame here. Given the motivation of this PR is primarily performance, I think it deserves a closer look.</li>\n<li>Added a comment on the PR <a href=\"https://github.com/rust-lang/rust/pull/83302#issuecomment-910058149\">here</a>.</li>\n</ul>\n<p>Warn about unreachable code following an expression with an uninhabited type <a href=\"https://github.com/rust-lang/rust/issues/85556\">#85556</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=de42550d0ac525f44ec79300a1cb349ade181c1a&amp;end=5ca596f486707ac1362edad717ad0e9f5b71d0a3&amp;stat=instructions:u\">instruction counts</a> (up to 9.0% on <code>incr-unchanged</code> builds of <code>webrender-wrench</code>)</li>\n<li>\n<p>This regression seems to only be happening in one benchmark <code>webrender-wrench</code> and is consistently affecting the <code>extern_crate</code>, <br>\n<code>incr_comp_intern_dep_graph_node</code>, and <code>metadata_decode_entry_extern_crate</code> queries. </p>\n</li>\n<li>\n<p>Given the nature of the change which only impacts liveness checking, I'm unsure why this might be the case. However, given that the regressions are fairly large, I do think additional investigation is worth looking into.</p>\n</li>\n<li>Left a comment on the PR <a href=\"https://github.com/rust-lang/rust/pull/85556#issuecomment-910064890\">here</a>.</li>\n</ul>\n<p>lazily \"compute\" anon const default substs <a href=\"https://github.com/rust-lang/rust/issues/87280\">#87280</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ad02dc46badee510bd3a2c093edf80fcaade91b1&amp;end=517c28e421b0d601c6f8eb07ea6aafb8e16975ad&amp;stat=instructions:u\">instruction counts</a> (up to 4.8% on <code>full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>This is an important change for const generics, and the const generics team discussed whether the performance hit seemed worth it, and they reached this conclusion <a href=\"https://github.com/rust-lang/rust/pull/87280#issuecomment-906288243\">that it was</a>.</li>\n</ul>\n<p>Treat types in unnormalized function signatures as well-formed <a href=\"https://github.com/rust-lang/rust/issues/88312\">#88312</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=66acdee9f7822ff2427f2b967e537215421eeb16&amp;end=59ce76548484806ac4970c57c0bb6ad9e53b80f6&amp;stat=instructions:u\">instruction counts</a> (up to 3.4% on <code>full</code> builds of <code>serde</code>)</li>\n<li>This regression affects many real world crates in significant ways. The query affected by this seems to be additional calls to <code>implied_outlives_bounds</code> which I believe would be impacted by this change. </li>\n<li>Left a comment on the PR <a href=\"https://github.com/rust-lang/rust/pull/88312#issuecomment-910073037\">here</a>.</li>\n</ul>\n<p>build llvm libunwind.a in rustbuild <a href=\"https://github.com/rust-lang/rust/issues/85600\">#85600</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=42a2a53ec13b0e6e915acd09a2a9a963e5fa3b92&amp;end=926f069950d7211a87fbd81778b420de420daad7&amp;stat=instructions:u\">instruction counts</a> (up to 0.3% on <code>incr-patched: println</code> builds of <code>regression-31157</code>)</li>\n<li>The performance change is rather small, but quite surprising since the change is just in how linunwind is being build which (presumably?) should mean that this is a perf noop. </li>\n<li>Left a comment on the PR <a href=\"https://github.com/rust-lang/rust/pull/85600#issuecomment-910075406\">here</a>, but noted that it didn't seem strictly necessary to investigate due to the rather small impact of the performance change.</li>\n</ul>",
        "id": 251724332,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592980
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251724276\">said</a>:</p>\n<blockquote>\n<p>Agreed! It seems likely we'll need to beta-backport by the time the PR is merged. Most of the diff looks like it comes from spans changing in the mir-opt tests so hopefully that won't be too bad.</p>\n</blockquote>\n<p>scary backport lol</p>",
        "id": 251724340,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630592983
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>PGO for LLVM builds on x86_64-unknown-linux-gnu in CI <a href=\"https://github.com/rust-lang/rust/issues/88069\">#88069</a></li>\n<li>Morph <code>layout_raw</code> query into <code>layout_of</code>. <a href=\"https://github.com/rust-lang/rust/issues/88308\">#88308</a></li>\n<li>Introduce <code>~const</code> <a href=\"https://github.com/rust-lang/rust/issues/88328\">#88328</a></li>\n<li>Cow'ify some pprust methods <a href=\"https://github.com/rust-lang/rust/issues/88262\">#88262</a></li>\n<li>Don't use <code>guess_head_span</code> in <code>predicates_of</code> for foreign span <a href=\"https://github.com/rust-lang/rust/issues/88414\">#88414</a></li>\n</ul>",
        "id": 251724352,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592989
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Normalize projections under binders <a href=\"https://github.com/rust-lang/rust/issues/85499\">#85499</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=7b0e554ee2c94e9b3865a8c2d24d720224512dec&amp;end=0afc20860eb98a29d9bbeea80f2acc5be38c6bf3&amp;stat=instructions:u\">instruction counts</a> (up to -36.8% on <code>incr-unchanged</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=7b0e554ee2c94e9b3865a8c2d24d720224512dec&amp;end=0afc20860eb98a29d9bbeea80f2acc5be38c6bf3&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>incr-patched: add static arr item</code> builds of <code>coercions</code>)</li>\n<li>The large wins are in the <code>deeply-nested-async</code> benchmark which due to being a stress test can often have big swings in performance.</li>\n<li>A perf run was run on the PR, and it was not labeled as a mixed result because of slightly different thresholds that were used back then. </li>\n<li>The PR is a pretty important one and the perf results are largely neutral so need to ping the authors here.</li>\n</ul>\n<p>Use undef for uninitialized bytes in constants <a href=\"https://github.com/rust-lang/rust/issues/83698\">#83698</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3b3ce374d203445eb1d0dce50f4211f4aceb7db6&amp;end=20997f6ad81721542e9ef97bb2f58190903a34d8&amp;stat=instructions:u\">instruction counts</a> (up to -10.3% on <code>full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3b3ce374d203445eb1d0dce50f4211f4aceb7db6&amp;end=20997f6ad81721542e9ef97bb2f58190903a34d8&amp;stat=instructions:u\">instruction counts</a> (up to 0.6% on <code>incr-patched: println</code> builds of <code>coercions</code>)</li>\n<li>Largely a performance win albeit in ctf-stress-test which being a stress test can yield large changes in certain cases. </li>\n<li>The regressions here are all very small, and overall despite this being technically a mixed result, the improvements outweigh the regressions.</li>\n</ul>\n<p><code>#[inline]</code> non-generic <code>pub fn</code>s in <code>rustc_target::abi</code> and <code>ty::layout</code>. <a href=\"https://github.com/rust-lang/rust/issues/88326\">#88326</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=720a1b23c1eda3c78e28126362238a500eaa20d4&amp;end=dfd6306d26af1a163aaaa1456b4594244ddd182f&amp;stat=instructions:u\">instruction counts</a> (up to -1.5% on <code>incr-patched: add static arr item</code> builds of <code>coercions</code>)</li>\n<li>Very small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=720a1b23c1eda3c78e28126362238a500eaa20d4&amp;end=dfd6306d26af1a163aaaa1456b4594244ddd182f&amp;stat=instructions:u\">instruction counts</a> (up to 0.3% on <code>full</code> builds of <code>ripgrep</code>)</li>\n<li>The PR author already noticed that this ended up being a bit of a wash in terms of <a href=\"https://github.com/rust-lang/rust/pull/88326#issuecomment-907122343\">performance</a>. Given that improvements still outweigh regressions, there's no need to look into this (though I imagine the author will continue to do so).</li>\n</ul>\n<p>Treat macros as HIR items <a href=\"https://github.com/rust-lang/rust/issues/88019\">#88019</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=2031fd6e46fbe4da271bb23d55c211b2e16dd91f&amp;end=05cccdc9b321e6565b3e62e8b52aec53d106ef2f&amp;stat=instructions:u\">instruction counts</a> (up to -3.2% on <code>incr-unchanged</code> builds of <code>tuple-stress</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=2031fd6e46fbe4da271bb23d55c211b2e16dd91f&amp;end=05cccdc9b321e6565b3e62e8b52aec53d106ef2f&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>incr-unchanged</code> builds of <code>wg-grammar</code>)</li>\n<li>The improvements here outweigh the regressions considerably, and this is a fairly important bug fix. This PR has already had its performance <a href=\"https://github.com/rust-lang/rust/pull/88019#issuecomment-901585864\">justified</a>.</li>\n</ul>",
        "id": 251724372,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630592998
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87815\">#87815 encode <code>generics_of</code> for fields and ty params</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87640\">#87640 Rollup of 9 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87587\">#87587 Various refactorings of the TAIT infrastructure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87570\">#87570 Upgrade to LLVM 13</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87244\">#87244 Better diagnostics with mismatched types due to implicit static lifetime</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86898\">#86898 Add fast path for Path::cmp that skips over long shared prefixes</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86698\">#86698 Move OnDiskCache to rustc_query_impl.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to 🛡️ against 💥 💥-payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/80357\">#80357 Introduce <code>hir::ExprKind::Let</code> - Take 2</a></li>\n</ul>",
        "id": 251724426,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593005
    },
    {
        "content": "<p>Wow, thanks <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> for the work you put into preparing this summary!</p>",
        "id": 251724495,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593029
    },
    {
        "content": "<h2>Nominated Issues</h2>",
        "id": 251724597,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593074
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 251724641,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593079
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 251724653,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593084
    },
    {
        "content": "<p>Well, that's it for the agenda!</p>",
        "id": 251724699,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593104
    },
    {
        "content": "<p>Next time more PRs waiting for review :-)</p>",
        "id": 251724825,
        "sender_full_name": "apiraino",
        "timestamp": 1630593134
    },
    {
        "content": "<p>We do not have a steering meeting tomorrow either.</p>",
        "id": 251724834,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593137
    },
    {
        "content": "<p>That felt like a like</p>",
        "id": 251724842,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630593142
    },
    {
        "content": "<p>We'll call the meeting there and give everyone back a half-hour.</p>",
        "id": 251724948,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593181
    },
    {
        "content": "<p>Thanks <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending. See you next week! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 251724996,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593197
    },
    {
        "content": "<p>Oh and a huge thanks to <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> for preparing the agenda so this ran smoothly!</p>",
        "id": 251725067,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630593227
    },
    {
        "content": "<blockquote>\n<p>\"Add m68k-unknown-linux-gnu as new Tier 3 backend\" <a href=\"https://github.com/rust-lang/compiler-team/issues/458\">compiler-team#458</a> </p>\n</blockquote>\n<p>Since the meeting agenda went so fast, a personal note about this MCP:) </p>\n<p>It's incredible what these people can accomplish :D<br>\n<a href=\"https://nitter.eu/rickytaylor26/status/1361305806164144128\">https://nitter.eu/rickytaylor26/status/1361305806164144128</a></p>",
        "id": 251725166,
        "sender_full_name": "apiraino",
        "timestamp": 1630593250
    },
    {
        "content": "<p>nifty</p>",
        "id": 251725250,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630593285
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/c-I7gxx4SK2eudQgwruuJw?view\">https://hackmd.io/c-I7gxx4SK2eudQgwruuJw?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>",
        "id": 251725585,
        "sender_full_name": "apiraino",
        "timestamp": 1630593399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251721354\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251721273\">said</a>:</p>\n<blockquote>\n<p>sorry was confused</p>\n</blockquote>\n<p>the lint is nominated, unsure if I understood the comment <code>nominated to make this lint into stable 1.55</code>, anyway</p>\n</blockquote>\n<p>We release cut a stable 1.55 this week, hence the comment.</p>",
        "id": 251730300,
        "sender_full_name": "nagisa",
        "timestamp": 1630595143
    },
    {
        "content": "<p>No point in backporting this to beta if this doesn't make its way before the release cut ^^</p>",
        "id": 251730350,
        "sender_full_name": "nagisa",
        "timestamp": 1630595162
    },
    {
        "content": "<p>hope that makes sense.</p>",
        "id": 251730412,
        "sender_full_name": "nagisa",
        "timestamp": 1630595172
    },
    {
        "content": "<p>yeah, after seeing your comment on github I understood what was going on, but was confused by reading the agenda summary</p>",
        "id": 251730449,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1630595186
    }
]