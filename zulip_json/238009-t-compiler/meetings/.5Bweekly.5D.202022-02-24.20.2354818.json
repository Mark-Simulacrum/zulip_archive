[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/BPMSYX1CRfeNLSHir93R8Q?view\">meeting agenda</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1162\">WG-mir-opt</span>  by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"5288\">WG-polymorphization</span>  by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></li>\n</ul>",
        "id": 273086922,
        "sender_full_name": "apiraino",
        "timestamp": 1645708329
    },
    {
        "content": "<p>I think today Felix won't be at the meeting so I have silenced all mentions pointing to him (to spare him a bit of background noise <span aria-label=\"trumpet\" class=\"emoji emoji-1f3ba\" role=\"img\" title=\"trumpet\">:trumpet:</span> )</p>",
        "id": 273087504,
        "sender_full_name": "apiraino",
        "timestamp": 1645708725
    },
    {
        "content": "<p>wasn't the <span class=\"user-group-mention\" data-user-group-id=\"5288\">@WG-polymorphization</span> checkin fairly recently? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> still the exact state as the last time. Am stuck on dealing with higher ranked lifetimes, once that is figured out we may get close to merging my impl</p>",
        "id": 273087714,
        "sender_full_name": "lcnr",
        "timestamp": 1645708865
    },
    {
        "content": "<p>good point. WG checkins rotation is getting a bit more frequent recently since the wg-rfc2229 winded down, in average each Wg is scheduled for a checkin once per month.</p>",
        "id": 273089300,
        "sender_full_name": "apiraino",
        "timestamp": 1645709759
    },
    {
        "content": "<p>I don't have the pulse of the work of WGs so I don't know how often they have anything to report. If we think that we can \"relax\" the timespan for checkins, totally fine for me, otherwise we can increase the number of \"nothing to report at this time\".</p>",
        "id": 273089477,
        "sender_full_name": "apiraino",
        "timestamp": 1645709838
    },
    {
        "content": "<p>it all depends on what works better for the WGs :)</p>",
        "id": 273089503,
        "sender_full_name": "apiraino",
        "timestamp": 1645709851
    },
    {
        "content": "<p>i think generally having 1 month per update is fine, though wg polymorphization is only david and I and we both don't spend a lot of time on it.</p>",
        "id": 273089515,
        "sender_full_name": "lcnr",
        "timestamp": 1645709857
    },
    {
        "content": "<p>so there will probably just be a lot of \"nothing new to say here\", which might be fine</p>",
        "id": 273089621,
        "sender_full_name": "lcnr",
        "timestamp": 1645709889
    },
    {
        "content": "<p>i think it's fine to keep the time span as is rn</p>",
        "id": 273089681,
        "sender_full_name": "lcnr",
        "timestamp": 1645709933
    },
    {
        "content": "<p>it might be interesting to do these updates for some project groups as well</p>",
        "id": 273089711,
        "sender_full_name": "lcnr",
        "timestamp": 1645709952
    },
    {
        "content": "<p><span class=\"user-group-mention silent\" data-user-group-id=\"3805\">project-const-generics</span> should have some relevant implementation updates every 4 weeks</p>",
        "id": 273089772,
        "sender_full_name": "lcnr",
        "timestamp": 1645709990
    },
    {
        "content": "<p>even if it is official a part of lang, it also includes quite a lot compiler work</p>",
        "id": 273089853,
        "sender_full_name": "lcnr",
        "timestamp": 1645710020
    },
    {
        "content": "<p>that would be interesting!  <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> feel free to share your suggestions and I'll add new groups to the rotation</p>",
        "id": 273089935,
        "sender_full_name": "apiraino",
        "timestamp": 1645710070
    },
    {
        "content": "<p>Where is the list of current checkins?</p>",
        "id": 273092259,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645711175
    },
    {
        "content": "<p>Is wg-async on the list?</p>",
        "id": 273092269,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645711182
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/blob/24b3a41b2c0271bddcbccba431aefc6fa2bfd6a5/layouts/shortcodes/checkin-schedule.html#L29-L70\">here</a>, and yes</p>",
        "id": 273092513,
        "sender_full_name": "lqd",
        "timestamp": 1645711269
    },
    {
        "content": "<p>could add const generics and const eval i think</p>",
        "id": 273092941,
        "sender_full_name": "lcnr",
        "timestamp": 1645711473
    },
    {
        "content": "<p>(and ofc <a href=\"https://rust-lang.github.io/compiler-team/about/triage-meeting/\">https://rust-lang.github.io/compiler-team/about/triage-meeting/</a> for the more readable schedule site)</p>",
        "id": 273093018,
        "sender_full_name": "lqd",
        "timestamp": 1645711515
    },
    {
        "content": "<p>Maybe incr comp?</p>",
        "id": 273093170,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645711577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-24.20.2354818/near/273093018\">said</a>:</p>\n<blockquote>\n<p>(and ofc <a href=\"https://rust-lang.github.io/compiler-team/about/triage-meeting/\">https://rust-lang.github.io/compiler-team/about/triage-meeting/</a> for the more readable schedule site)</p>\n</blockquote>\n<p>though not yet updated (uhm ... self-note: update it)</p>",
        "id": 273093205,
        "sender_full_name": "apiraino",
        "timestamp": 1645711603
    },
    {
        "content": "<p>incr comp is in there</p>",
        "id": 273093297,
        "sender_full_name": "lqd",
        "timestamp": 1645711651
    },
    {
        "content": "<p>oh whoops</p>",
        "id": 273093471,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645711729
    },
    {
        "content": "<p>Looking through <code>rust-lang/team</code>, it might be a good idea in general to go through the working groups and figure which are \"active\"</p>",
        "id": 273093568,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645711799
    },
    {
        "content": "<p>the checkins in the agenda are (afaik) connected in some way to the works of T-compiler, so there's probably a bit of subteams pruning to do before adding them to the checkins rotation. But I can parse that list and in case you can help me choose which are relevant</p>",
        "id": 273094138,
        "sender_full_name": "apiraino",
        "timestamp": 1645712070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-24.20.2354818/near/273093568\">said</a>:</p>\n<blockquote>\n<p>Looking through <code>rust-lang/team</code>, it might be a good idea in general to go through the working groups and figure which are \"active\"</p>\n</blockquote>\n<p>This was kind of orthogonal. I think the additions we settled on (const generics, const eval) is good for now</p>",
        "id": 273094723,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645712378
    },
    {
        "content": "<p>Longer term, I think switching from having a wg-traits checkin to GATs, TAITs, dyn upcasting, etc. is a better model - but this is I think better to wait until after Niko and I work on our \"traits team\" planning</p>",
        "id": 273094903,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645712462
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Felix is out so I'm running the meeting today. Please leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show who's here.</p>",
        "id": 273100099,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714817
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 273100313,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714908
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Today, February 24th, release Rust stable 1.59 <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> (<a href=\"https://github.com/rust-lang/blog.rust-lang.org/blob/964c894c5ca71014501e2f4409b0cf1f38fe3417/posts/2022-02-24-Rust-1.59.0.md\">blog post</a>)</li>\n</ul>",
        "id": 273100321,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714916
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 273100381,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714927
    },
    {
        "content": "<ul>\n<li>pnkfelix note: the bootstrap process is probably <em>the</em> biggest tester of incremental compilation on beta channel (because beta otherwise is not commonly used for incremental development). If you are seeing any problem there <em>atop the beta compiler</em>, please do file a bug; it represents something that's on the path to hitting stable.</li>\n</ul>",
        "id": 273100390,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714933
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 273100433,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714959
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 273100436,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714964
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 7 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 4 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: 2 months ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: 2 months ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: about 59 days ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: about 34 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 273100479,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714984
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901#issuecomment-1043124526\">rust#93901</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273100504,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645714995
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Round-tripping hygienic ident serialization\" <a href=\"https://github.com/rust-lang/compiler-team/issues/485\">compiler-team#485</a> </li>\n<li>\"Remove the everybody loops pass\" <a href=\"https://github.com/rust-lang/rust/pull/93913\">rust#93913</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273100517,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715003
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Simplify rustc_codegen_llvm::debuginfo::metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/482\">compiler-team#482</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273100531,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715011
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Check if enum from foreign crate has any non exhaustive variants when attempting a cast\" <a href=\"https://github.com/rust-lang/rust/pull/92744\">rust#92744</a> </li>\n<li>\"Stabilize <code>#[cfg(panic = \"...\")]</code>\" <a href=\"https://github.com/rust-lang/rust/pull/93658\">rust#93658</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273100542,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715018
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 273100705,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715081
    },
    {
        "content": "<ul>\n<li>@_<em>wg-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (<a href=\"https://hackmd.io/PPMtXP7hSqmyqD30CUw_cQ#WG-checkins\">previous checkin</a>)<blockquote>\n<p>No major updates since last time, lcnr is working on a fix for <a href=\"https://github.com/rust-lang/rust/issues/75325\">#75325</a>, the primary remaining blocker for polymorphization, hopefully resolved after current issues related to higher-ranked lifetimes are resolved.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 273100722,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715090
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> anything you want to report from wg-mir-opt?</p>",
        "id": 273100765,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715113
    },
    {
        "content": "<p>no, nothing interesting happened since the last report</p>",
        "id": 273101108,
        "sender_full_name": "oli",
        "timestamp": 1645715257
    },
    {
        "content": "<p>I think I'm on the hook for a few reviews related to MIR opts but finding time to review them carefully is always tricky.</p>",
        "id": 273101319,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715338
    },
    {
        "content": "<h2>Backport nominations</h2>",
        "id": 273101340,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715349
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler stable</a></p>",
        "id": 273101351,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715357
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"No branch protection metadata unless enabled\" <a href=\"https://github.com/rust-lang/rust/pull/93516\">rust#93516</a><ul>\n<li>PR authored by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> </li>\n<li>PR is open, reviewer is <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span>, didnt yet r+'d </li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> since missed the beta cut-off</li>\n</ul>\n</li>\n</ul>",
        "id": 273101367,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715363
    },
    {
        "content": "<p>Seems like we need to land this in nightly first.</p>",
        "id": 273101589,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715457
    },
    {
        "content": "<p>Probably makes sense to backport but maybe we wait, yes</p>",
        "id": 273101603,
        "sender_full_name": "mw",
        "timestamp": 1645715465
    },
    {
        "content": "<p>But it seems like an obvious candidate to backport.</p>",
        "id": 273101632,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715477
    },
    {
        "content": "<p>Unless anyone objects, I'd move to approve the backport pending merge on nightly.</p>",
        "id": 273101784,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715547
    },
    {
        "content": "<p>Ok. Backport approved.</p>",
        "id": 273101875,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715596
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"update auto trait lint for <code>PhantomData</code>\" <a href=\"https://github.com/rust-lang/rust/pull/94315\">rust#94315</a><ul>\n<li>PR authored by <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </li>\n<li>PR is open, r+'d by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> <a href=\"https://github.com/rust-lang/rust/pull/94315#issuecomment-1049576223\">for backport</a>, seems a small safe change</li>\n</ul>\n</li>\n</ul>",
        "id": 273101888,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715602
    },
    {
        "content": "<p>Yeah, it would be good to have this fixed with the first version of that lint hitting stable.</p>",
        "id": 273102286,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715797
    },
    {
        "content": "<p>Backport approved.</p>",
        "id": 273102293,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715801
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc beta</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc stable</a></p>\n<ul>\n<li>No backport nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 273102311,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715813
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>",
        "id": 273102335,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715825
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 273102347,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715830
    },
    {
        "content": "<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a><ul>\n<li>perhaps waiting on more :heavy_check_mark: from T-compiler (<a href=\"https://github.com/rust-lang/rust/pull/93901#issuecomment-1043124526\">see comment</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 273102355,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715836
    },
    {
        "content": "<p>sorry, <a href=\"https://github.com/rust-lang/rust/pull/93901#issuecomment-1043124228\">this</a> comment</p>",
        "id": 273102404,
        "sender_full_name": "apiraino",
        "timestamp": 1645715859
    },
    {
        "content": "<p>I think we probably just need to let T-compiler members read the report and decide if they think this is ready for stabilization. The reminder to go review this is very helpful though!</p>",
        "id": 273102735,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645715999
    },
    {
        "content": "<p>Unless someone wants to discuss it now (we do have some time I think), I'm going to continue on.</p>",
        "id": 273102825,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716023
    },
    {
        "content": "<h2>Oldest PRs waiting for review</h2>",
        "id": 273102860,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716041
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler+-label%3AT-lang+-label%3AT-infra+-label%3AT-release+-label%3AT-libs+-label%3AT-libs-api\">T-compiler</a></p>",
        "id": 273102870,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716049
    },
    {
        "content": "<ul>\n<li>\"When encountering a binding that could be a const or unit variant, suggest the right path\" <a href=\"https://github.com/rust-lang/rust/pull/90988\">rust#90988</a> (last review activity: 3 months ago)<ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-27.20.2354818/near/269591228\">previously discussed</a>, currenly assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></li>\n</ul>\n</li>\n</ul>",
        "id": 273102893,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716059
    },
    {
        "content": "<p>Should we re-roll for a new reviewer?</p>",
        "id": 273103014,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716115
    },
    {
        "content": "<p>I think that we got something mixed up? This is a different PR?</p>",
        "id": 273103062,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1645716123
    },
    {
        "content": "<p>(<em>authored</em> by me)</p>",
        "id": 273103087,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1645716135
    },
    {
        "content": "<p>oh sorry: this probably /needs/ a reviewer</p>",
        "id": 273103182,
        "sender_full_name": "apiraino",
        "timestamp": 1645716184
    },
    {
        "content": "<p>Yeah, \"currently assigned to Matthew Jasper\" is the correct label.</p>",
        "id": 273103212,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716202
    },
    {
        "content": "<p>I'm thinking we should just re-roll for a reviewer at this point.</p>",
        "id": 273103272,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> if you can't/don't have time to do the review, feel free to roll again <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 273103443,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716291
    },
    {
        "content": "<p>next</p>",
        "id": 273103455,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716298
    },
    {
        "content": "<ul>\n<li>\"Fix exposing fields marked unstable or doc hidden\" <a href=\"https://github.com/rust-lang/rust/pull/90358\">rust#90358</a> (last review activity: 2 months ago)<ul>\n<li>PR is now waiting for review</li>\n<li>rustbot assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> (but first round of review was done by others)</li>\n<li>maybe reassign?</li>\n</ul>\n</li>\n</ul>",
        "id": 273103475,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716306
    },
    {
        "content": "<p>Looks like there was some back and forth with the author but it's ready for review again.</p>",
        "id": 273103758,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716409
    },
    {
        "content": "<p>my side thought here is: an assignee choosen by the bot /is/ the actual assignee for a review? even if they never comment on that PR? I'm afraid of shooting false positives here</p>",
        "id": 273103805,
        "sender_full_name": "apiraino",
        "timestamp": 1645716433
    },
    {
        "content": "<p>Hmm. It's an interesting thought. If the randomly chosen reviewer doesn't ack the PR, perhaps we should be more aggressive about re-assigning?</p>",
        "id": 273104037,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716529
    },
    {
        "content": "<blockquote>\n<p>an assignee choosen by the bot /is/ the actual assignee for a review? even if they never comment on that PR</p>\n</blockquote>\n<p>I think for the purposes of this conversation, we should assume this is true.</p>",
        "id": 273104150,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you think you'll have time <em>soon-ish</em> to review this?</p>",
        "id": 273104228,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716607
    },
    {
        "content": "<p>I think we should be quite aggressive about reassignments... Also on this one, I think I had assumed that camelid had taken it over <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 273104256,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1645716620
    },
    {
        "content": "<p>I'm swamped currently, don't think I have enough context and spare cycles for that PR at the moment</p>",
        "id": 273104303,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1645716643
    },
    {
        "content": "<p>Ah, that's a reasonable assumption. Let's reassign and they can re-roll if they can't/don't have time to sign off on it.</p>",
        "id": 273104345,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716664
    },
    {
        "content": "<p>So for the purposes if of the \"oldest PRs waiting on review\" it's <em>any</em> review, or any review or comment by the reviewer</p>",
        "id": 273104364,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645716672
    },
    {
        "content": "<ul>\n<li>\"Improve suggestion when casting usize to (possibly) wide pointer\" <a href=\"https://github.com/rust-lang/rust/pull/92150\">rust#92150</a> (last review activity: 2 months ago)<ul>\n<li>reviewer was assigned by the rustbot</li>\n<li>PR author <span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span> asks if assignee is confirmed or can be reassigned</li>\n</ul>\n</li>\n</ul>",
        "id": 273104613,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716780
    },
    {
        "content": "<p>Is it possible for PR authors to re-roll the dice?</p>",
        "id": 273104698,
        "sender_full_name": "mw",
        "timestamp": 1645716825
    },
    {
        "content": "<p>I can do that, just didn't know how long to wait...</p>",
        "id": 273104730,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645716841
    },
    {
        "content": "<p>is there a general rule</p>",
        "id": 273104788,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645716856
    },
    {
        "content": "<p>In theory I can take this</p>",
        "id": 273104791,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645716859
    },
    {
        "content": "<p>but yeah, r? rust-lang/compiler-team works for non-members too, ive done it before i think</p>",
        "id": 273104833,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645716885
    },
    {
        "content": "<p>I think 1-2 months is reasonable time to reroll</p>",
        "id": 273104905,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645716926
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"426609\">Michael Goulet (compiler-errors)</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-24.20.2354818/near/273104730\">said</a>:</p>\n<blockquote>\n<p>I can do that, just didn't know how long to wait...</p>\n</blockquote>\n<p>I don't think we really have anything written down currently but typically I would try to avoid pinging a reviewer more than once a week if they haven't responded.</p>",
        "id": 273104923,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716935
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"426609\">Michael Goulet (compiler-errors)</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-24.20.2354818/near/273104788\">said</a>:</p>\n<blockquote>\n<p>is there a general rule</p>\n</blockquote>\n<p>No, I don't think so. But I don't think anybody would mind after a week of silcence or so</p>",
        "id": 273104927,
        "sender_full_name": "mw",
        "timestamp": 1645716937
    },
    {
        "content": "<p>Ideally shorter, but I know I've definitely had reviews sitting for like 2 weeks (especially lately <span aria-label=\"sleepy\" class=\"emoji emoji-1f62a\" role=\"img\" title=\"sleepy\">:sleepy:</span>)</p>",
        "id": 273105026,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645716970
    },
    {
        "content": "<p>In general, I don't see an issue with changing the reviewer if there's a reason to (for example, the PR changes a bit and someone else is better qualified to review or the reviewer goes on vacation etc)</p>",
        "id": 273105065,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645716990
    },
    {
        "content": "<p>I think in general it'd be great if we had a really easy to update page of something like 'expected latency' -- e.g., I know I've had things sitting forever in my queue, but it's because they were marked as waiting-on-author and I don't have the time typically to go through that stack of PRs</p>",
        "id": 273105121,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717023
    },
    {
        "content": "<p>Yeah, I think if there's a reason other than \"the reviewer just hasn't gotten to this for a couple weeks\", switching reviewers is fine</p>",
        "id": 273105133,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645717029
    },
    {
        "content": "<p>I have a few PRs that have been waiting for longer than a week, hehe. Good to know, and I'll try to err on the side of not being annoying. A month definitely seems long enough.</p>",
        "id": 273105153,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1645717038
    },
    {
        "content": "<p>I know for me, I feel really bad when I'm the reviewer but the PR goes a long time without review because I'm juggling other things. When someone else steps in and does a review, that's very welcome but it can also feel like a failure.</p>",
        "id": 273105414,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717139
    },
    {
        "content": "<p><em>goes to check PRs waiting on me</em> <em>15</em> <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 273105452,
        "sender_full_name": "Jack Huey",
        "timestamp": 1645717156
    },
    {
        "content": "<p>my empirical rule of thumb is to bring the PR here on \"Oldest PRs waiting for review\" after ~4weeks of silence from reviewer</p>",
        "id": 273105461,
        "sender_full_name": "apiraino",
        "timestamp": 1645717160
    },
    {
        "content": "<ul>\n<li>\"Initial implementation of transmutability trait.\" <a href=\"https://github.com/rust-lang/rust/pull/92268\">rust#92268</a> (last review activity: about 60 days ago)<ul>\n<li>First round of review by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span></li>\n<li>PR seems a bit in flux, perhaps the actual status is not ready for review?</li>\n</ul>\n</li>\n</ul>",
        "id": 273105521,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717187
    },
    {
        "content": "<p>My read on this PR was that it's still kind of WIP but I could be wrong</p>",
        "id": 273105676,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717232
    },
    {
        "content": "<p>(my thought too)</p>",
        "id": 273105717,
        "sender_full_name": "apiraino",
        "timestamp": 1645717250
    },
    {
        "content": "<p>maybe the list of items in the first comment can be split into different patches?</p>",
        "id": 273105821,
        "sender_full_name": "apiraino",
        "timestamp": 1645717291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you know if <span class=\"user-mention\" data-user-id=\"219211\">@Jack Wrenn</span> hopes to merge this as-is or is this actually ready for review?</p>",
        "id": 273106003,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717358
    },
    {
        "content": "<p>I think we can leave this assigned to Oli for now.</p>",
        "id": 273106270,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717460
    },
    {
        "content": "<h2>Issues of Note</h2>",
        "id": 273106300,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717468
    },
    {
        "content": "<p>FWIW, I usually ping reviewers after 3 weeks of silence.<br>\nWaiting for longer than that without at least providing an estimated date for review is just impolite, from my point of view.</p>",
        "id": 273106307,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1645717469
    },
    {
        "content": "<p>(Also I'm finally at a time zone where the meetings are not deep at night.)</p>",
        "id": 273106370,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1645717501
    },
    {
        "content": "<p>Great to see you here <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 273106450,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717544
    },
    {
        "content": "<h3>Short Summary</h3>",
        "id": 273106469,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717553
    },
    {
        "content": "<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+lab\nel%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">69 T-compiler P-high issues</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">47 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 0 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 44 P-high, 82 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 273106537,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717565
    },
    {
        "content": "<h3>P-critical</h3>",
        "id": 273106570,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717578
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 273106588,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717584
    },
    {
        "content": "<ul>\n<li>\"Nested mutex guards with dropping and re-assigning confuse the borrow checker\" <a href=\"https://github.com/rust-lang/rust/issues/93770\">rust#93770</a><ul>\n<li>not a regression but probably worth mentioning in this meeting</li>\n</ul>\n</li>\n</ul>",
        "id": 273106652,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717612
    },
    {
        "content": "<p>Hmm this isn't tagged P-critical</p>",
        "id": 273106714,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> Should that be in a different section?</p>",
        "id": 273106766,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717663
    },
    {
        "content": "<p>well, it's not labelled as such, but it /looks/ like a potential P-critical</p>",
        "id": 273106881,
        "sender_full_name": "apiraino",
        "timestamp": 1645717708
    },
    {
        "content": "<ul>\n<li>\"optimized i686 fails primal-sieve tests\" [#94032(<a href=\"https://github.com/rust-lang/rust/issues/94032\">https://github.com/rust-lang/rust/issues/94032</a>)<ul>\n<li><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/94032#issuecomment-1047878307\">suggests</a> that it can be downgraded to <code>P-high</code></li>\n</ul>\n</li>\n</ul>",
        "id": 273106882,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717708
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-24.20.2354818/near/273106714\">said</a>:</p>\n<blockquote>\n<p>Hmm this isn't tagged P-critical</p>\n</blockquote>\n<p>I've meant to ask if this is critical enough</p>",
        "id": 273106947,
        "sender_full_name": "apiraino",
        "timestamp": 1645717735
    },
    {
        "content": "<p>[rust#93770] I don't think any kind of memory safety issue at play here, it looks like an ergonomics issue to me.</p>",
        "id": 273107252,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717855
    },
    {
        "content": "<p>It's miscompilations on a tier 1 target, right?</p>",
        "id": 273107296,
        "sender_full_name": "mw",
        "timestamp": 1645717875
    },
    {
        "content": "<p>seems so, yes</p>",
        "id": 273107356,
        "sender_full_name": "apiraino",
        "timestamp": 1645717901
    },
    {
        "content": "<p>I think that qualifies as P-critical</p>",
        "id": 273107404,
        "sender_full_name": "mw",
        "timestamp": 1645717922
    },
    {
        "content": "<p>(well, depending on what P-critical means exactly)</p>",
        "id": 273107515,
        "sender_full_name": "mw",
        "timestamp": 1645717952
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> was asking about <a href=\"https://github.com/rust-lang/rust/issues/93770\">rust#93770</a> not <a href=\"https://github.com/rust-lang/rust/issues/94032\">rust#94032</a></p>",
        "id": 273107548,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645717964
    },
    {
        "content": "<p>Ah, sorry, my bad</p>",
        "id": 273107610,
        "sender_full_name": "mw",
        "timestamp": 1645717995
    },
    {
        "content": "<p>this isnt strictly a regression but I guess the question is \"do we want or /can/ fix it by 1.60?\"</p>",
        "id": 273107671,
        "sender_full_name": "apiraino",
        "timestamp": 1645718019
    },
    {
        "content": "<p>Which \"it\"? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 273107770,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718044
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/93770\">#93770</a></p>",
        "id": 273107807,
        "sender_full_name": "apiraino",
        "timestamp": 1645718059
    },
    {
        "content": "<p>I could articulate this question at the beginning and spare a lot of time (sorry)</p>",
        "id": 273107840,
        "sender_full_name": "apiraino",
        "timestamp": 1645718075
    },
    {
        "content": "<p>It's fine. I confused the conversation by moving on to the next item.</p>",
        "id": 273107875,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718094
    },
    {
        "content": "<p>It doesn't seem like there's any reason this would be prioritized? It's not a regression?</p>",
        "id": 273107912,
        "sender_full_name": "simulacrum",
        "timestamp": 1645718115
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/93770\">#93770</a>, this feels like a usability improvement to me rather than any kind of bug we need to fix on a specific timeframe.</p>",
        "id": 273107930,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718123
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/93770\">#93770</a> repros back to at least Rust 1.30.</p>",
        "id": 273107950,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718136
    },
    {
        "content": "<p>I'm going to move to <a href=\"https://github.com/rust-lang/rust/issues/94032\">#94032</a>.</p>",
        "id": 273108141,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718207
    },
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/issues/94032\">#94032</a>, I agree that this is not a release blocker (as we are releasing today with the issue) especially since we find similar issues in prior releases.</p>",
        "id": 273108216,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718246
    },
    {
        "content": "<p>But since Felix has been looking into this, I'd like to have him in this meeting before we change the priority level.</p>",
        "id": 273108261,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718272
    },
    {
        "content": "<p>Unless anyone objects, I think we should let this be until next week and then we can decide if we should lower to P-high.</p>",
        "id": 273108337,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718291
    },
    {
        "content": "<p>I think there's no harm in keeping this on our radar</p>",
        "id": 273108341,
        "sender_full_name": "mw",
        "timestamp": 1645718294
    },
    {
        "content": "<p>Ok, let's see if we can push through the rest of the agenda in the time left.</p>",
        "id": 273108414,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718338
    },
    {
        "content": "<p>Please stop me if you think we should discuss something.</p>",
        "id": 273108436,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718346
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 273108459,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718357
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 273108469,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718362
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/c8b6238851526b7e8ebd86b3f1488f8949426bef/triage/2022-02-24.md\">triage logs for 2022-02-24</a></p>\n</blockquote>\n<p>A relatively quiet week with improvements largely outweighing regressions. On the regressions side, doc performance has worsened somewhat significantly most likely introduced by adding more docs to blanket impls. On the improvement side, LLVM 14 allowed for an optimization the significantly improves codegen performance.</p>\n<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=a240ccd81c74c105b6f5fe84c46f8d36edb7e306&amp;end=1204400ab8da9830f6f77a5e40e7ad3ea459676a&amp;absolute=false&amp;stat=instructions%3Au\">a240ccd81c74c105b6f5fe84c46f8d36edb7e306..1204400ab8da9830f6f77a5e40e7ad3ea459676a</a></p>\n<p>3 Regressions, 2 Improvements, 7 Mixed; 3 of them in rollups<br>\n27 Untriaged Pull Requests<br>\n38 comparisons made in total</p>",
        "id": 273108489,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718370
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/94072\">#94072</a></p>\n<ul>\n<li>Average relevant regression: 11.3%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=930fc4f59ddeb9f26d554a2c75c5355989189540&amp;end=582b6964a8868c9714881d9821d08415a8f4f13b&amp;stat=instructions:u\">instruction counts</a>: 157.0% on <code>full</code> builds of <code>stm32f4 doc</code></li>\n<li>The regressions are all in doc runs but the largest are quite severe.</li>\n<li>The most likely culprit is <a href=\"https://github.com/rust-lang/rust/pull/89869\">#89869</a> which adds documentation to many different blanket impls.</li>\n<li>Left a comment to <a href=\"https://github.com/rust-lang/rust/pull/94072#issuecomment-1049807469\">investigate</a>.</li>\n</ul>\n<p>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/94103\">#94103</a></p>\n<ul>\n<li>Average relevant regression: 1.1%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=30b3f35c420694a4f24e5a4df00f06073f4f3a37&amp;end=73a7423e77b49a99e270531fbadda5b8899df3f6&amp;stat=instructions:u\">instruction counts</a>: 2.1% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>Almost all of the regressions are in stress tests so the actual impact on users is likely not that large</li>\n<li>None of the rolled up PRs seem to be suspicious so it's hard to know where to begin</li>\n</ul>\n<p>Fix a layout possible miscalculation in <code>alloc::RawVec</code> <a href=\"https://github.com/rust-lang/rust/issues/83706\">#83706</a></p>\n<ul>\n<li>Average relevant regression: 0.5%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=68369a041cea809a87e5bd80701da90e0e0a4799&amp;end=5bd1ec3283874b97b27da4539b2950fbd01c4b0e&amp;stat=instructions:u\">instruction counts</a>: 1.2% on <code>incr-unchanged</code> builds of <code>deeply-nested-async debug</code></li>\n<li>A small regression would seem likely after this change since more work (e.g., checked multiplication) is being done in RawVec which is used quite a lot. I am, however, unsure whether the actual regression we're seeing here is expected</li>\n<li>Left a comment for <a href=\"https://github.com/rust-lang/rust/pull/83706#issuecomment-1049820205\">investigation</a>.</li>\n</ul>",
        "id": 273108512,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718380
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Rollup of 7 pull requests <a href=\"https://github.com/rust-lang/rust/issues/94254\">#94254</a></li>\n<li>Reapply cg_llvm: <code>fewer_names</code> in <code>uncached_llvm_type</code> <a href=\"https://github.com/rust-lang/rust/issues/94107\">#94107</a></li>\n</ul>",
        "id": 273108524,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718389
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Upgrade to LLVM 14 <a href=\"https://github.com/rust-lang/rust/issues/93577\">#93577</a></p>\n<ul>\n<li>Average relevant regression: 0.7%</li>\n<li>Average relevant improvement: -1.3%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=582b6964a8868c9714881d9821d08415a8f4f13b&amp;end=30b3f35c420694a4f24e5a4df00f06073f4f3a37&amp;stat=instructions:u\">instruction counts</a>: -3.8% on <code>full</code> builds of <code>projection-caching check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=582b6964a8868c9714881d9821d08415a8f4f13b&amp;end=30b3f35c420694a4f24e5a4df00f06073f4f3a37&amp;stat=instructions:u\">instruction counts</a>: 3.0% on <code>incr-patched: add static arr item</code> builds of <code>coercions debug</code></li>\n<li>Upgrading LLVM is always likely to produce performance changes. Luckily the perf improvements seem to outweigh the perf regressions considerably both in number and magnitude.</li>\n</ul>",
        "id": 273108540,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718399
    },
    {
        "content": "<p>Revert <a href=\"https://github.com/rust-lang/rust/issues/91403\">#91403</a> <a href=\"https://github.com/rust-lang/rust/issues/94088\">#94088</a></p>\n<ul>\n<li>Average relevant regression: 1.1%</li>\n<li>Average relevant improvement: -1.5%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=f838a425e3134d036a7d9632935111a569ac7446&amp;end=feac2ecf1cae1dd0f56bed1cecc6e109c64b3d4f&amp;stat=instructions:u\">instruction counts</a>: -1.7% on <code>full</code> builds of <code>issue-88862 check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=f838a425e3134d036a7d9632935111a569ac7446&amp;end=feac2ecf1cae1dd0f56bed1cecc6e109c64b3d4f&amp;stat=instructions:u\">instruction counts</a>: 1.7% on <code>incr-unchanged</code> builds of <code>clap-rs check</code></li>\n<li>The perf regressions here are relatively minor, and this change fixes a correctness issue, so I think it's fine to let it through.</li>\n</ul>",
        "id": 273108586,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718404
    },
    {
        "content": "<p>Guard against unwinding in cleanup code <a href=\"https://github.com/rust-lang/rust/issues/92911\">#92911</a></p>\n<ul>\n<li>Average relevant regression: 0.9%</li>\n<li>Average relevant improvement: -1.6%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3b348d932aa5c9884310d025cf7c516023fd0d9a&amp;end=26904687275a55864f32f3a7ba87b7711d063fd5&amp;stat=instructions:u\">instruction counts</a>: -3.4% on <code>incr-full</code> builds of <code>syn opt</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3b348d932aa5c9884310d025cf7c516023fd0d9a&amp;end=26904687275a55864f32f3a7ba87b7711d063fd5&amp;stat=instructions:u\">instruction counts</a>: 3.7% on <code>full</code> builds of <code>ripgrep opt</code></li>\n<li>A relatively large regression considering the change is meant to protect against a rare occurrence (double unwind).</li>\n<li>Left a comment asking for <a href=\"https://github.com/rust-lang/rust/pull/92911#issuecomment-1049838729\">justification</a>.</li>\n</ul>",
        "id": 273108604,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718409
    },
    {
        "content": "<p>Allow inlining of <code>ensure_sufficient_stack()</code> <a href=\"https://github.com/rust-lang/rust/issues/93934\">#93934</a></p>\n<ul>\n<li>Average relevant regression: 0.9%</li>\n<li>Average relevant improvement: -0.8%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3b186511f62b0ce20e72ede0e8e13f8787155f02&amp;end=c1aa85475cf5623caf50f7ef3b62903bb084e518&amp;stat=instructions:u\">instruction counts</a>: -1.0% on <code>incr-patched: add vec item</code> builds of <code>deep-vector opt</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3b186511f62b0ce20e72ede0e8e13f8787155f02&amp;end=c1aa85475cf5623caf50f7ef3b62903bb084e518&amp;stat=instructions:u\">instruction counts</a>: 0.9% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4 check</code></li>\n<li>This was an attempt at an optimization that proved fruitful before LLVM 14 was merged. <a href=\"https://github.com/rust-lang/rust/pull/93934#issuecomment-1048629651\">Now</a> the regressions and improvements weigh each other out.</li>\n</ul>",
        "id": 273108634,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718414
    },
    {
        "content": "<p>safely <code>transmute&lt;&amp;List&lt;Ty&lt;'tcx&gt;&gt;, &amp;List&lt;GenericArg&lt;'tcx&gt;&gt;&gt;</code> <a href=\"https://github.com/rust-lang/rust/issues/93505\">#93505</a></p>\n<ul>\n<li>Average relevant regression: 1.2%</li>\n<li>Average relevant improvement: -0.6%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1103d2e914b67c18b0deb86073c26c6aefda761d&amp;end=03a8cc7df1d65554a4d40825b0490c93ac0f0236&amp;stat=instructions:u\">instruction counts</a>: -0.8% on <code>incr-full</code> builds of <code>ucd check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1103d2e914b67c18b0deb86073c26c6aefda761d&amp;end=03a8cc7df1d65554a4d40825b0490c93ac0f0236&amp;stat=instructions:u\">instruction counts</a>: 2.7% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>This led to a larger regression than was seen before the PR was merged. </li>\n<li>The author is now <a href=\"https://github.com/rust-lang/rust/pull/93505#issuecomment-1047538798\">looking into the perf</a></li>\n</ul>",
        "id": 273108687,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718423
    },
    {
        "content": "<p>Simplify rustc_serialize by dropping support for decoding into JSON <a href=\"https://github.com/rust-lang/rust/issues/93839\">#93839</a></p>\n<ul>\n<li>Average relevant regression: 0.8%</li>\n<li>Average relevant improvement: -0.5%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b8967b0d52a2ba5f0c9da0da03e78ccba5534e4a&amp;end=58a721af9f818bdf57f86448557b45c5ae19a3ef&amp;stat=instructions:u\">instruction counts</a>: -0.5% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4 check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b8967b0d52a2ba5f0c9da0da03e78ccba5534e4a&amp;end=58a721af9f818bdf57f86448557b45c5ae19a3ef&amp;stat=instructions:u\">instruction counts</a>: 1.0% on <code>full</code> builds of <code>externs opt</code></li>\n<li>This change was <a href=\"https://github.com/rust-lang/rust/pull/93839#issuecomment-1035359841\">justified</a>: The performance changes to the compiler are pretty much a wash, but this does have a good impact on compiler bootstrapping (~6 seconds).</li>\n</ul>",
        "id": 273108720,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718430
    },
    {
        "content": "<p>Introduce <code>ChunkedBitSet</code> and use it for some dataflow analyses. <a href=\"https://github.com/rust-lang/rust/issues/93984\">#93984</a></p>\n<ul>\n<li>Average relevant regression: 1.0%</li>\n<li>Average relevant improvement: -3.8%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5bd1ec3283874b97b27da4539b2950fbd01c4b0e&amp;end=bafe8d06e015eb00724d3d497516191d6681943f&amp;stat=instructions:u\">instruction counts</a>: -5.3% on <code>full</code> builds of <code>keccak debug</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5bd1ec3283874b97b27da4539b2950fbd01c4b0e&amp;end=bafe8d06e015eb00724d3d497516191d6681943f&amp;stat=instructions:u\">instruction counts</a>: 6.0% on <code>full</code> builds of <code>clap-rs check</code></li>\n<li>While the regressions look minor they are likely even less of an issue due to this particular optimization likely helping wall-time and definitely helping max RSS while hurting instruction counts.</li>\n<li>For more detail see the <a href=\"https://github.com/rust-lang/rust/pull/93984#issuecomment-1043994374\">justification</a>.</li>\n</ul>",
        "id": 273108735,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718435
    },
    {
        "content": "<h2>Nominated Issues</h2>",
        "id": 273108763,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718443
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 273108774,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718449
    },
    {
        "content": "<ul>\n<li>\"Stabilize guaranteed compile time evaluation of unnamed constant items\" <a href=\"https://github.com/rust-lang/rust/issues/93838\">rust#93838</a></li>\n</ul>",
        "id": 273108785,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718454
    },
    {
        "content": "<ul>\n<li>\"Stabilize native library modifier syntax and the <code>whole-archive</code> modifier specifically\" <a href=\"https://github.com/rust-lang/rust/pull/93901\">rust#93901</a> <ul>\n<li>nominated by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/93838#issuecomment-1048104622\">for review</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273108800,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718461
    },
    {
        "content": "<ul>\n<li>\"process: release procedure only runs crater on nightly-&gt;beta cut\" <a href=\"https://github.com/rust-lang/rust/issues/94266\">rust#94266</a><ul>\n<li>nominated by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/94266\">for T-compiler discussion</a></li>\n</ul>\n</li>\n</ul>",
        "id": 273108818,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718469
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-compiler-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 273108839,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718478
    },
    {
        "content": "<p>I would like to note that we've had quite a bit of discussion on <a href=\"https://github.com/rust-lang/rfcs/pull/3191\">https://github.com/rust-lang/rfcs/pull/3191</a> which has coalesced into the current iteration of the RFC. Now would be a good time for other compiler team members to take a look before we start an FCP to merge.</p>",
        "id": 273109048,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718561
    },
    {
        "content": "<p>And with that, we're done!</p>",
        "id": 273109074,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718579
    },
    {
        "content": "<p>Thanks <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! See you all next week <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 273109109,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645718596
    },
    {
        "content": "<p>Thanks for driving, Wesley!</p>",
        "id": 273109190,
        "sender_full_name": "oli",
        "timestamp": 1645718632
    },
    {
        "content": "<p>Draft for next weeks' agenda available at:<br>\n<a href=\"https://hackmd.io/FdqBRFiPTmqBl3Eq8sOjOQ?view\">https://hackmd.io/FdqBRFiPTmqBl3Eq8sOjOQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> </li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1123\">WG-self-profile</span>  by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 273115952,
        "sender_full_name": "apiraino",
        "timestamp": 1645721279
    }
]