[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in ~ 19 hours</p>",
        "id": 198937031,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606241
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> will be doing pre-triage in <a class=\"stream-topic\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-05-28.20.2354818\">#t-compiler/wg-prioritization &gt; pre-meeting triage 2020-05-28 #54818</a></p>",
        "id": 198937236,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606301
    },
    {
        "content": "<p>During pre-triage we will be preparing the <a href=\"https://hackmd.io/YId0E8pKS26g6dx1-JGn7Q?view\">meeting agenda</a></p>",
        "id": 198937307,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606337
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span>  and <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span></p>",
        "id": 198937357,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606358
    },
    {
        "content": "<p>I'm going to share some progress we had on <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span></p>",
        "id": 198937461,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> ?</p>",
        "id": 198937504,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590606419
    },
    {
        "content": "<p>we should maybe talk a bit about the llvm update (I known <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span> had thoughts, at least, seems like maybe Niko did too). If we do want to revert then we have around a week until beta branches.</p>",
        "id": 198937715,
        "sender_full_name": "simulacrum",
        "timestamp": 1590606507
    },
    {
        "content": "<p>well, actually, just a few days - Monday?</p>",
        "id": 198937727,
        "sender_full_name": "simulacrum",
        "timestamp": 1590606517
    },
    {
        "content": "<p>yep I have that as todo add llvm stuff in the agenda</p>",
        "id": 198939243,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590607220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> once I build the agenda I will let you know in case you want to check we cover all that stuff</p>",
        "id": 198939292,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590607248
    },
    {
        "content": "<p>thanks! I don't personally have any particular concerns</p>",
        "id": 198939306,
        "sender_full_name": "simulacrum",
        "timestamp": 1590607262
    },
    {
        "content": "<p>Don’t have much to say past the fact that there has been a bump, there are concerns about perf impact and that <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> wrote a stellar post on tracking perf.</p>",
        "id": 199014041,
        "sender_full_name": "nagisa",
        "timestamp": 1590668518
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 199026100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> link to post?</p>",
        "id": 199026118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590674556
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>",
        "id": 199026124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674558
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 199026134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674562
    },
    {
        "content": "<p>first from <a href=\"https://hackmd.io/YId0E8pKS26g6dx1-JGn7Q?both\">agenda</a> ...</p>",
        "id": 199026189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674589
    },
    {
        "content": "<ul>\n<li>Tomorrow (Friday 29th) we have a <a href=\"https://github.com/rust-lang/compiler-team/issues/287\">design meeting: Compiler team 2020-2021 roadmap</a></li>\n</ul>",
        "id": 199026197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674595
    },
    {
        "content": "<ul>\n<li>Major Changes Proposals:<ul>\n<li>Seconded proposals (in FCP)<ul>\n<li>\"Reintegrate chalk into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/289\">#289</a></li>\n<li>\"RFC 2229 implementation plan\" <a href=\"https://github.com/rust-lang/compiler-team/issues/292\">#292</a></li>\n<li>\"create windows working group\" <a href=\"https://github.com/rust-lang/compiler-team/issues/293\">#293</a></li>\n<li>\"Remove Spans from HIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/294\">#294</a></li>\n<li>\"move leak-check to during coherence, candidate eval\" <a href=\"https://github.com/rust-lang/compiler-team/issues/295\">#295</a></li>\n<li>\"Introduce <code>ty_error</code>/<code>ty_error_with_message</code>/<code>ty_error_const</code> to construct error type or const\" <a href=\"https://github.com/rust-lang/compiler-team/issues/297\">#297</a> (NEW)</li>\n</ul>\n</li>\n<li>New proposals (not seconded)<ul>\n<li>\"Make <code>CONTRIBUTING.md</code> into a series of tutorials\" <a href=\"https://github.com/rust-lang/compiler-team/issues/296\">#296</a></li>\n</ul>\n</li>\n<li>Old proposals (not seconded)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">#277</a></li>\n<li>\"illumos toolchain builds\" <a href=\"https://github.com/rust-lang/compiler-team/issues/279\">#279</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "id": 199026235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674614
    },
    {
        "content": "<p>note especially that we have a <em>lot</em> of seconded proposals this week</p>",
        "id": 199026272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199026118\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> link to post?</p>\n</blockquote>\n<p>isn't it <a href=\"https://github.com/rust-lang/rust/issues/67759\">#67759</a> ?</p>",
        "id": 199026337,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590674648
    },
    {
        "content": "<ul>\n<li>We started the code contributor survey</li>\n</ul>",
        "id": 199026351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590674656
    },
    {
        "content": "<ul>\n<li>release is in one week</li>\n</ul>",
        "id": 199026369,
        "sender_full_name": "simulacrum",
        "timestamp": 1590674670
    },
    {
        "content": "<p><a href=\"https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html\">https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html</a> for the llvm post</p>",
        "id": 199026379,
        "sender_full_name": "simulacrum",
        "timestamp": 1590674673
    },
    {
        "content": "<p>Not sure if announcement worthy: I'm very inactive right now due to thesis stuff. I can only promise to do reviews, but discussions and any work assigned to me will suffer and I'll likely miss a lot of pings and notifications that I may never be able to catch up to.</p>",
        "id": 199026413,
        "sender_full_name": "oli",
        "timestamp": 1590674687
    },
    {
        "content": "<p>yeah we'll be talking more about LLVM stuff later in meeting, I think, as part of a new \"performance review\" section that wg-prioritization added based on the work done by <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span></p>",
        "id": 199026485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199026351\">said</a>:</p>\n<blockquote>\n<ul>\n<li>We started the code contributor survey</li>\n</ul>\n</blockquote>\n<p>link?</p>",
        "id": 199026555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674751
    },
    {
        "content": "<p><a href=\"https://blog.rust-lang.org/inside-rust/2020/05/27/contributor-survey.html\">https://blog.rust-lang.org/inside-rust/2020/05/27/contributor-survey.html</a></p>",
        "id": 199026629,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590674776
    },
    {
        "content": "<p>also I just want to re-iterate: We have a lot of seconded MCP's this week. More than I think we ever have (for this new MCP system, I mean)</p>",
        "id": 199026713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199026629\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://blog.rust-lang.org/inside-rust/2020/05/27/contributor-survey.html\">https://blog.rust-lang.org/inside-rust/2020/05/27/contributor-survey.html</a></p>\n</blockquote>\n<p>125 responses by yesterday night</p>",
        "id": 199026730,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590674831
    },
    {
        "content": "<p>and since this is a \"assume good until proven otherwise\", its up to each of us to make sure we at least skim the list of MCPs</p>",
        "id": 199026746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674846
    },
    {
        "content": "<p>okay, what's next on the agenda ...</p>",
        "id": 199026850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674890
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p>No beta nominations this time for <code>T-compiler</code> and <code>libs-impl</code>.</p>\n<h2>Stable-nominations</h2>\n<p>No stable nominations this time for <code>T-compiler</code> and <code>libs-impl</code>.</p>",
        "id": 199026873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674901
    },
    {
        "content": "<h2>PR's S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler S-waiting-on-team</a></p>\n<ul>\n<li>\"Print environment variables accessed by rustc as special comments into depinfo files\" <a href=\"https://github.com/rust-lang/rust/pull/71858\">#71858</a><ul>\n<li>In FCP, disposition to merge.</li>\n</ul>\n</li>\n</ul>\n<p>No PR’s waiting on <code>libs-impl</code> this time.</p>",
        "id": 199026892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674913
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\">5 P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">40 P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">17 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-high, 3 P-medium, 0 P-low regression-from-stable-to-beta</a><ul>\n<li>Both P-high are assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">3 P-critical, 1 P-high, 3 P-medium, 1 P-low regression-from-stable-to-nightly</a><ul>\n<li>There is only 1 P-critical assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">73 regression-from-stable-to-stable</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\">21 of those are not prioritized</a>.</li>\n</ul>\n</li>\n</ul>\n<p>There are 3 more <code>P-critical</code> issues and 1 less <code>P-high</code> issues in comparison with last week.</p>",
        "id": 199027014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590674986
    },
    {
        "content": "<h3>P-critical</h3>",
        "id": 199027085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675005
    },
    {
        "content": "<p>(we'll go through these one by one)</p>",
        "id": 199027097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675010
    },
    {
        "content": "<ul>\n<li>\"Unsoundness due to variance of trait objects WRT associated types\" <a href=\"https://github.com/rust-lang/rust/issues/71550\">#71550</a><ul>\n<li>This issue is assigned to <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  and has an <a href=\"https://github.com/rust-lang/rust/pull/71896\">PR open</a>.</li>\n<li>Crater run from the fix suggested 16 non-spurious regressions.</li>\n<li>Niko suspects we should land the PR, at the start of a release cycle.</li>\n</ul>\n</li>\n</ul>",
        "id": 199027153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675033
    },
    {
        "content": "<ul>\n<li>\"Trait object with non-static lifetime is accepted where static lifetime is expected and required\" <a href=\"https://github.com/rust-lang/rust/issues/72315\">#72315</a><ul>\n<li>This issue is related to the previous one, and fixed by the same PR.</li>\n</ul>\n</li>\n</ul>",
        "id": 199027208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675066
    },
    {
        "content": "<ul>\n<li>\"LLVM error: \"Instruction does not dominate all uses!\" on Windows\" <a href=\"https://github.com/rust-lang/rust/issues/72470\">#72470</a><ul>\n<li>It is also a regression<br>\n    - supposedly injected by <a href=\"https://github.com/rust-lang/rust/pull/71840\">PR #71840</a><br>\n    - (assign to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> ?)</li>\n<li>Rejects valid code.</li>\n<li>It's windows only.</li>\n<li>This seems to indicate incorrect MIR being generated.</li>\n</ul>\n</li>\n</ul>",
        "id": 199027242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675089
    },
    {
        "content": "<p>(I personally find it super weird that a bug supposedly caused by invalid MIR for generators is only occurring on Windows ...?)</p>",
        "id": 199027347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675128
    },
    {
        "content": "<p>well, unwinding is platform-dependent</p>",
        "id": 199027379,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675147
    },
    {
        "content": "<p>Do we know if <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> will be able to investigate? I guess not</p>",
        "id": 199027425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675182
    },
    {
        "content": "<p>that is in part why I haven't assigned it to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> outright</p>",
        "id": 199027442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675198
    },
    {
        "content": "<p>it sounds like we should maybe revert the PR? It'll hit beta on tuesday</p>",
        "id": 199027450,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675202
    },
    {
        "content": "<p>oh. I hadn't considered that option</p>",
        "id": 199027482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675219
    },
    {
        "content": "<p>otherwise we'll be backporting mir changes which just feels scary</p>",
        "id": 199027483,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675219
    },
    {
        "content": "<p>(we can also wait and revert the PR on beta, for example)</p>",
        "id": 199027566,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675248
    },
    {
        "content": "<p>lets see, the injecting PR says its fixing <a href=\"https://github.com/rust-lang/rust/issues/47949\">#47949</a> ...</p>",
        "id": 199027572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675255
    },
    {
        "content": "<p>which can cause some destructors to be skipped ...</p>",
        "id": 199027604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675279
    },
    {
        "content": "<p>a very old bug</p>",
        "id": 199027610,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590675281
    },
    {
        "content": "<p>but it is indeed also ancient</p>",
        "id": 199027615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675286
    },
    {
        "content": "<p><code>Heh, this even happens on Rust 1.0</code></p>",
        "id": 199027624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590675290
    },
    {
        "content": "<p>okay</p>",
        "id": 199027665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675313
    },
    {
        "content": "<p>well, I'm okay waiting till <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> can take a look, too</p>",
        "id": 199027675,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675317
    },
    {
        "content": "<p>I'll take this bug</p>",
        "id": 199027679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675318
    },
    {
        "content": "<p>and handle reverting</p>",
        "id": 199027691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675324
    },
    {
        "content": "<p>the injecting PR</p>",
        "id": 199027696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675329
    },
    {
        "content": "<p>okay, thanks!</p>",
        "id": 199027702,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675332
    },
    {
        "content": "<p>obviously if we just fix it before tuesday that's fine too (or revert just on future beta, w/e)</p>",
        "id": 199027718,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675349
    },
    {
        "content": "<p>sure</p>",
        "id": 199027728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675357
    },
    {
        "content": "<p>I would be good with reverting</p>",
        "id": 199027729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675358
    },
    {
        "content": "<p>(presuming we don't have a fix)</p>",
        "id": 199027779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675370
    },
    {
        "content": "<p>I just doubt i'll have time to do more than revert before tuesday</p>",
        "id": 199027781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675370
    },
    {
        "content": "<p>especially given that it only replicates on windows</p>",
        "id": 199027792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675377
    },
    {
        "content": "<p>which i am ... not an expert dev on ...</p>",
        "id": 199027811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675388
    },
    {
        "content": "<p>next up</p>",
        "id": 199027853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675412
    },
    {
        "content": "<ul>\n<li>\"Incorrect non-exhaustive pattern error\" <a href=\"https://github.com/rust-lang/rust/issues/72476\">#72476</a><ul>\n<li>It is also a regression.<br>\n    - supposedly injected by <a href=\"https://github.com/rust-lang/rust/pull/71930\">PR #71930</a><br>\n    - (assign to Nadrieril?)<br>\n    - Has <a href=\"https://github.com/rust-lang/rust/pull/72506\">an open PR</a> that likely will fix the issue.</li>\n<li>Rejects valid code.</li>\n<li>Really quickly detected (2 days).</li>\n<li>Seems to be a problem when pattern matching on structs/enums which contain a projection.</li>\n</ul>\n</li>\n</ul>",
        "id": 199027858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I were just discussing this one; the P-critical aspect of it is in hand, we think/hope</p>",
        "id": 199027901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675439
    },
    {
        "content": "<ul>\n<li>\"error: expected identifier when building time-macros-impl v0.1.1\" <a href=\"https://github.com/rust-lang/rust/issues/72545\">#72545</a><ul>\n<li>It is also a regression.</li>\n<li>Detected on day one.</li>\n<li>Affects at least time, wasm-bindgen and syn.</li>\n<li>It was also reported as <a href=\"https://github.com/rust-lang/rust/issues/72608\">https://github.com/rust-lang/rust/issues/72608</a></li>\n</ul>\n</li>\n</ul>",
        "id": 199027920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675451
    },
    {
        "content": "<p>there is very active recent discussion on the issue</p>",
        "id": 199028012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675487
    },
    {
        "content": "<p>this seems like it was a bug fix</p>",
        "id": 199028065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675519
    },
    {
        "content": "<p>do we have results of crater run ?</p>",
        "id": 199028101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675536
    },
    {
        "content": "<p>but it's affecting key crates in ecosystem</p>",
        "id": 199028103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675537
    },
    {
        "content": "<p>wasm-bindgen, syn, and proc-macro-hack is ... a mighty list</p>",
        "id": 199028125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675548
    },
    {
        "content": "<p>okay according to crater run linked on <a href=\"https://github.com/rust-lang/rust/issues/72622\">#72622</a> , the crater run is not done yet.</p>",
        "id": 199028212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675591
    },
    {
        "content": "<p>there seems to be a kind of loose consensus towards a crater run, but I'm wondering if we have time for before next release</p>",
        "id": 199028233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675600
    },
    {
        "content": "<p>or if we should revert and do the crater run for a \"pending PR\" instead</p>",
        "id": 199028284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675613
    },
    {
        "content": "<p>in any case, it does seem like <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is on top of it</p>",
        "id": 199028285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675614
    },
    {
        "content": "<p>crater will be done tonight</p>",
        "id": 199028307,
        "sender_full_name": "simulacrum",
        "timestamp": 1590675628
    },
    {
        "content": "<p>/me realizes he had not read all the comments yet</p>",
        "id": 199028312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675631
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/72388\">#72388</a> is turning out to have an unexpectedly large amount of fallout. While I believe the change itself is definitely correct (the alternative is to pass the unspanned re-parsed tokens to proc-macros), several crates seem to be running into problems due to differences in the captured vs reparsed tokens.</p>\n</blockquote>",
        "id": 199028313,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590675631
    },
    {
        "content": "<p>lets maybe plan to discuss this again tomorrow after the crater run is done?</p>",
        "id": 199028381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675676
    },
    {
        "content": "<p>at start of steering meeting?</p>",
        "id": 199028406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675690
    },
    {
        "content": "<p>sounds plausible</p>",
        "id": 199028454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675717
    },
    {
        "content": "<p>it seems like some comments from <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> were somewhat disputing the new behavior, but I can't quite tell what they are suggesting --</p>",
        "id": 199028567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675755
    },
    {
        "content": "<p>( <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is there a hackmd for  tomorrow's meeting? The issue at <a href=\"https://github.com/rust-lang/compiler-team/issues/287\">compiler-team#287</a> doesn't have one )</p>",
        "id": 199028569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675756
    },
    {
        "content": "<p><a href=\"https://hackmd.io/JNRvANhJSwm6Zggq7CY0Vw?view\">hackmd is here</a></p>",
        "id": 199028628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199028567\">said</a>:</p>\n<blockquote>\n<p>it seems like some comments from <span class=\"user-mention silent\" data-user-id=\"119235\">David Tolnay</span> were somewhat disputing the new behavior, but I can't quite tell what they are suggesting --</p>\n</blockquote>\n<p>in particular I am wondering if this change ought to be written up as an MCP at minimum</p>",
        "id": 199028650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675813
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199028569\">said</a>:</p>\n<blockquote>\n<p>( <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> is there a hackmd for  tomorrow's meeting? The issue at <a href=\"https://github.com/rust-lang/compiler-team/issues/287\">compiler-team#287</a> doesn't have one )</p>\n</blockquote>\n<p>(we can also discuss details of meeting tomorrow in its dedicated channel: <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bproposal.5D.20roadmap.202020-2021.20compiler-team.23287/near/196911664\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bproposal.5D.20roadmap.202020-2021.20compiler-team.23287/near/196911664</a> , yay!  )</p>",
        "id": 199028667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675820
    },
    {
        "content": "<p>it feels like we should have some docs for proc macro authors to refer to</p>",
        "id": 199028674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675823
    },
    {
        "content": "<p>but i guess I will comment on the tracking issue to that effect</p>",
        "id": 199028692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590675834
    },
    {
        "content": "<p>Okay. That's all the P-critical issues</p>",
        "id": 199028870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675893
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<ul>\n<li>\"ICE in _match.rs:1184:21 when building \"gfx-backend-metal\" on Nightly\" <a href=\"https://github.com/rust-lang/rust/issues/72467\">#72467</a><ul>\n<li>There's <a href=\"https://github.com/rust-lang/rust/pull/72506\">a PR</a> that may fix this issue.</li>\n</ul>\n</li>\n</ul>",
        "id": 199028904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675908
    },
    {
        "content": "<p>(too bad that we don't know if PR <a href=\"https://github.com/rust-lang/rust/issues/72506\">#72506</a> indeed fixes it )</p>",
        "id": 199028965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675939
    },
    {
        "content": "<p>but hopefully it will</p>",
        "id": 199029068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675968
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Triage done by njn.</p>\n<p>Regressions</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/67759\">Update to LLVM 10</a> (<a href=\"https://perf.rust-lang.org/compare.html?start=0aa6751c19d3ba80df5b0b02c00bf44e13c97e80&amp;end=82911b3bba76e73afe2881b732fe6b0edb35d5d3&amp;stat=instructions:u\">instructions</a>):<br>\n  Lots of grumbling about this. wg-prioritization will consider at their next meeting?</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/pull/72055\">Intern predicates</a> (<a href=\"https://perf.rust-lang.org/compare.html?start=9310e3bd4f425f84fc27878ebf2bda1f30935a63&amp;end=d9417b385145af1cabd0be8a95c65075d2fc30ff&amp;stat=instructions:u\">instructions</a>):<br>\n  @lcnr has promised a follow-up to at least partly fix it, currently in<br>\n<a href=\"https://github.com/rust-lang/rust/pull/72494\">#72494</a>.</p>\n</li>\n</ul>\n<p>Improvements</p>\n<ul>\n<li>[Remove ReScope](<a href=\"https://github.com/rust-lang/rust/pull/72362\">https://github.com/rust-lang/rust/pull/72362</a> (<a href=\"https://perf.rust-lang.org/compare.html?start=3137f8e2d141d7d7c65040a718a9193f50e1282e&amp;end=52b605c8cb2f730e607de0777a694cd1b9bb3e15&amp;stat=instructions:u\">instructions</a>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/72205\">Dumb NRVO</a> (<a href=\"https://perf.rust-lang.org/compare.html?start=963bf528292d8f97104515e32908e30c2467b6a8&amp;end=7f79e98c0356642db62e5113327e436c951e843d&amp;stat=instructions:u\">instructions</a>)</li>\n</ul>",
        "id": 199029088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590675980
    },
    {
        "content": "<p>Is it worth having someone test (<a href=\"https://github.com/rust-lang/rust/issues/72467\">#72467</a> after applying <a href=\"https://github.com/rust-lang/rust/issues/72506\">#72506</a>)?</p>",
        "id": 199029091,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590675982
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199029091\">said</a>:</p>\n<blockquote>\n<p>Is it worth having someone test?</p>\n</blockquote>\n<p>I don't know if we need to task someone with that</p>",
        "id": 199029125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676003
    },
    {
        "content": "<p>worst case scenario, it will come up again at next week's prioiritization (I think)</p>",
        "id": 199029159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676024
    },
    {
        "content": "<p>(we can just @bors try and install the toolchain, right?)</p>",
        "id": 199029172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I thought about testing that one and also the <code>P-critical</code> but these things will land maybe before I can do that?</p>",
        "id": 199029199,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676044
    },
    {
        "content": "<p>but if we have a release it may make sense to try this out</p>",
        "id": 199029229,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676054
    },
    {
        "content": "<p>I was mentioning Felix if it worth prioritizing in the queue PRs that fix p-critical issues and maybe also regressions</p>",
        "id": 199029319,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676091
    },
    {
        "content": "<p>as a general practice</p>",
        "id": 199029385,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676118
    },
    {
        "content": "<p>my current attitude is that, close to a release, it would definitely make sense to prioritize PR's that fix P-critical things</p>",
        "id": 199029420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676134
    },
    {
        "content": "<p>I'm not as sure about other times</p>",
        "id": 199029433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676141
    },
    {
        "content": "<p>its unfortunate how long our bors cycle time is</p>",
        "id": 199029463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676152
    },
    {
        "content": "<p>but with it as long as it is, I am adverse to finding more ways to further delay existing PR's from landing</p>",
        "id": 199029520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676182
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199029420\">said</a>:</p>\n<blockquote>\n<p>my current attitude is that, close to a release, it would definitely make sense to prioritize PR's that fix P-critical things</p>\n</blockquote>\n<p>yeah this case for sure, but also as soon as this things get merged, as soon as they are tested and also the less stuff there is for this meeting</p>",
        "id": 199029526,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676186
    },
    {
        "content": "<p>the current system at least tries to be \"fair\" in the sense that an old PR gets inherent priority in the sort order</p>",
        "id": 199029611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676219
    },
    {
        "content": "<p>(now, is that actually \"fair\",  compared to say sorting by when the r+ was added? Probably not)</p>",
        "id": 199029637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676237
    },
    {
        "content": "<p>(but it is easy to understand!)</p>",
        "id": 199029647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676243
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199026118\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> link to post?</p>\n</blockquote>\n<p><a href=\"https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html\">https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html</a></p>",
        "id": 199029682,
        "sender_full_name": "nagisa",
        "timestamp": 1590676259
    },
    {
        "content": "<p>oh thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 199029716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676273
    },
    {
        "content": "<p>if for no other reason than that acts as a <em>great</em> segue back to the topic of <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span> 's performance review</p>",
        "id": 199029763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676296
    },
    {
        "content": "<p>which they discussed in much more detail over here: <a href=\"#narrow/stream/131828-t-compiler/topic/Weekly.20perf.20check/near/198708926\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Weekly.20perf.20check/near/198708926</a></p>",
        "id": 199029855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676331
    },
    {
        "content": "<p>so the <a href=\"https://hackmd.io/YId0E8pKS26g6dx1-JGn7Q?both#Performance-logs\">improvements</a> I am happy to see, of course.</p>",
        "id": 199029971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676387
    },
    {
        "content": "<p>I was especially tickled by the dumb NRVO one</p>",
        "id": 199030003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676404
    },
    {
        "content": "<p>(thanks <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> !)</p>",
        "id": 199030021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676410
    },
    {
        "content": "<p>As far as LLVM performance regressions are concerned, I don’t think we can do much about them for this version of LLVM. They might improve for LLVM 11 or future releases (or they might regress even further), and its mostly up to ourselves to make sure they don”t go by undetected (which is what <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> is working on)</p>",
        "id": 199030084,
        "sender_full_name": "nagisa",
        "timestamp": 1590676439
    },
    {
        "content": "<p>and the regressions are, as expected, troubling</p>",
        "id": 199030086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676440
    },
    {
        "content": "<p>yeah, so lets talk about LLVM 10, since that's the next topic on Nominated Issues</p>",
        "id": 199030167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676460
    },
    {
        "content": "<ul>\n<li>Should we backout LLVM 10?<ul>\n<li>Update to LLVM 10 <a href=\"https://github.com/rust-lang/rust/pull/67759\">#67759</a></li>\n<li>It's generating slower code.</li>\n</ul>\n</li>\n</ul>",
        "id": 199030192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676469
    },
    {
        "content": "<p>So I nominated this because I thought it was worth talking about</p>",
        "id": 199030246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676492
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> did I get that right? Its both slowing down the compiler <strong>and</strong> generating slower code in its output???)</p>",
        "id": 199030273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676506
    },
    {
        "content": "<p>I think in general I am of the opinion that we ought to closely track LLVM, for good or ill, but it'd be good to discuss some of the reasons why and/or alternatives</p>",
        "id": 199030292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199030273\">said</a>:</p>\n<blockquote>\n<p>(<span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> did I get that right? Its both slowing down the compiler <strong>and</strong> generating slower code in its output???)</p>\n</blockquote>\n<p>I was expecting the former but not the latter</p>",
        "id": 199030324,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676526
    },
    {
        "content": "<p>I believe that was based on <span class=\"user-mention\" data-user-id=\"222480\">@Eric Rahm</span>'s assertion that they have to back out using clang</p>",
        "id": 199030356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676538
    },
    {
        "content": "<p>oh sorry, I wrote that in a confusing way</p>",
        "id": 199030365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590676541
    },
    {
        "content": "<p>Do we anticipate fixing these regressions somehow? If we back-out we effectively position ourselves to having much more trouble when we want to start tracking again.</p>",
        "id": 199030394,
        "sender_full_name": "nagisa",
        "timestamp": 1590676553
    },
    {
        "content": "<p>there are indeed \"optimization regressions\" noted in <a href=\"https://github.com/rust-lang/rust/issues/67759\">#67759</a></p>",
        "id": 199030409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676558
    },
    {
        "content": "<blockquote>\n<p>For what it's worth, we ended up backing out our clang-10 upgrade on the Firefox side due to the severity of the compile time (14%) and runtime performance (11%) regressions.</p>\n</blockquote>",
        "id": 199030457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676565
    },
    {
        "content": "<p>Note the 11% runtime perf regression</p>",
        "id": 199030469,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676573
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/67759#issuecomment-632417328\">link to Eric's comment</a></p>",
        "id": 199030490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676584
    },
    {
        "content": "<p>would it be worth considering backing it out from the <em>beta</em> ?</p>",
        "id": 199030533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676606
    },
    {
        "content": "<p>It seems to me that we will not fix the regressions -- the only real option would be to wait and stay with LLVM 9 and skip to LLVM 11 or something</p>",
        "id": 199030541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676611
    },
    {
        "content": "<p>so that we actually have six weeks to see if we can cherry-pick LLVM performance  tweaks to nightly in the meantime?</p>",
        "id": 199030575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676630
    },
    {
        "content": "<p>At least, I don't know how we would fix them apart from landing code upstream and then incorporating it</p>",
        "id": 199030579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199030579\">said</a>:</p>\n<blockquote>\n<p>At least, I don't know how we would fix them apart from landing code upstream and then incorporating it</p>\n</blockquote>\n<p>(yeah, I was here hoping that either we or someone else would identify performance fixes in LLVM upstream that we could cherry-pick)</p>",
        "id": 199030615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676660
    },
    {
        "content": "<p>Are there even such fixes available?</p>",
        "id": 199030655,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676679
    },
    {
        "content": "<p>I got impression that there might be pending PR's on LLVM's side?</p>",
        "id": 199030712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676693
    },
    {
        "content": "<p>/me skims back</p>",
        "id": 199030724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676698
    },
    {
        "content": "<p>The blog posts mentions some of those, but they won’t be awfully pleasant to backport.</p>",
        "id": 199030729,
        "sender_full_name": "nagisa",
        "timestamp": 1590676701
    },
    {
        "content": "<p>So from the conclusion of <a href=\"https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html\">https://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html</a>, it sounds like LLVM 11 is currently 10% faster than LLVM 10. Would it be reasonable to say we're going to skip 10 and go to 11 when it ships?</p>",
        "id": 199030737,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590676706
    },
    {
        "content": "<p>Or perhaps use LLVM <code>master</code> now?</p>",
        "id": 199030771,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590676730
    },
    {
        "content": "<p>oh I see, the fixes in question may be on LLVM 11, but not on LLVM 10 ?</p>",
        "id": 199030772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676730
    },
    {
        "content": "<p>most likely. We could try to petition for upstream to backport those into a patch release of 10-series.</p>",
        "id": 199030836,
        "sender_full_name": "nagisa",
        "timestamp": 1590676760
    },
    {
        "content": "<p>okay. it would be interesting to consider jumping straight to 11</p>",
        "id": 199030872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676780
    },
    {
        "content": "<p>Are there any stakeholders that <em>need</em> 10?</p>",
        "id": 199030875,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590676781
    },
    {
        "content": "<p>Other than more work for us</p>",
        "id": 199030895,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590676788
    },
    {
        "content": "<p>Is there any feature or user that will be blocked by us not upgrading?</p>",
        "id": 199030991,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590676814
    },
    {
        "content": "<p>I remember there being some blurbs about people asking when 10 will be in rust so that they could do their own work that depends on features available in 10</p>",
        "id": 199031025,
        "sender_full_name": "nagisa",
        "timestamp": 1590676832
    },
    {
        "content": "<p>there's the LVI injection stuff that is nice for intel sgx I think?</p>",
        "id": 199031035,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676835
    },
    {
        "content": "<p>/me tries to skim <a href=\"https://github.com/rust-lang/rust/issues/67759\">#67759</a> to see if any bugs say they were fixed by it</p>",
        "id": 199031043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676840
    },
    {
        "content": "<p>I guess another question is: how much work/pain is involved in trying to back out 10 and land 10.5, versus incrementally upgrading from 10 to 10.5</p>",
        "id": 199031049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676846
    },
    {
        "content": "<p>but yeah, there's a few things in the pipeline and we've closed a few codegen bugs etc</p>",
        "id": 199031063,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676850
    },
    {
        "content": "<p>I don't think 10.5 is happening as a performance fix</p>",
        "id": 199031083,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676860
    },
    {
        "content": "<p>/me did not know there was a 10.5</p>",
        "id": 199031098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676863
    },
    {
        "content": "<p>Sorry, that was a shorthand</p>",
        "id": 199031109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676867
    },
    {
        "content": "<p>I meant \"either 11 or cherry-picked fixes\"</p>",
        "id": 199031132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676874
    },
    {
        "content": "<p>Not meant as an actual version number :)</p>",
        "id": 199031157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676884
    },
    {
        "content": "<p>like, we can back out, but then we're waiting until 11, I don't personally get the impression cherry-picking is viable</p>",
        "id": 199031163,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676887
    },
    {
        "content": "<p>I guess I feel like</p>",
        "id": 199031178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676895
    },
    {
        "content": "<p>upgrading LLVM tends to be pretty disruptive</p>",
        "id": 199031191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676899
    },
    {
        "content": "<p>I am worried that trying to do a \"big jump\" from 9 to 11 would be \"even more disruptive\"</p>",
        "id": 199031218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676915
    },
    {
        "content": "<p>but maybe that's not true</p>",
        "id": 199031229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676920
    },
    {
        "content": "<p>I still think we should back this out from beta</p>",
        "id": 199031281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676926
    },
    {
        "content": "<p>that seems reasonable, to give us a bit more time to consider</p>",
        "id": 199031298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590676937
    },
    {
        "content": "<p>The main problem is that if we don't upgrade LLVM is that we get an increasing large number of increasingly large (many kloc) backports from newer versions.</p>",
        "id": 199031303,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590676938
    },
    {
        "content": "<p>LIke, this upgrade only landed 8 days ago</p>",
        "id": 199031372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590676971
    },
    {
        "content": "<p>I am okay backing out of beta</p>",
        "id": 199031401,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676984
    },
    {
        "content": "<p>(well, not putting it into beta)</p>",
        "id": 199031420,
        "sender_full_name": "simulacrum",
        "timestamp": 1590676994
    },
    {
        "content": "<p>By the way, as far as I'm aware the issues with LLVM 10 are exclusively related to compile-time performance, not run-time performance. (IIRC check builds improved a couple percent, which is a proxy for run-time performance.)</p>",
        "id": 199031440,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677001
    },
    {
        "content": "<p>I wanted to ask whether we meant backing out on nightly and re-introducing</p>",
        "id": 199031454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677008
    },
    {
        "content": "<p>or something else</p>",
        "id": 199031457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677009
    },
    {
        "content": "<p>I think landing the revert direct to beta</p>",
        "id": 199031494,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677028
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133224\">Nikita Popov</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199031440\">said</a>:</p>\n<blockquote>\n<p>By the way, as far as I'm aware the issues with LLVM 10 are exclusively related to compile-time performance, not run-time performance.</p>\n</blockquote>\n<p>but I thought even your PR said there were optimization regressions ?</p>",
        "id": 199031506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677036
    },
    {
        "content": "<p>I would not change nightly, we want to maximize testing</p>",
        "id": 199031509,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677041
    },
    {
        "content": "<p>it also just seems like more work</p>",
        "id": 199031568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677053
    },
    {
        "content": "<p>hmm</p>",
        "id": 199031572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677054
    },
    {
        "content": "<p>okay</p>",
        "id": 199031574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677055
    },
    {
        "content": "<p>I'm going to try to draw up a few notes</p>",
        "id": 199031603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677068
    },
    {
        "content": "<p>I don't object to a revert direct to beta, if <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thinks that is best</p>",
        "id": 199031606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677069
    },
    {
        "content": "<p>from this conversation</p>",
        "id": 199031620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677074
    },
    {
        "content": "<p>Bifurcating nightly and beta for too long is a recipe for trouble</p>",
        "id": 199031626,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590677077
    },
    {
        "content": "<p><a href=\"https://hackmd.io/3ReZTxSTQ8-inezb7IBwLg\">in this hackmd</a></p>",
        "id": 199031636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> well to be clear this would be a one cycle thing</p>",
        "id": 199031642,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199031626\">said</a>:</p>\n<blockquote>\n<p>Bifurcating nightly and beta for too long is a recipe for trouble</p>\n</blockquote>\n<p>this is why I said \"hmmm\"</p>",
        "id": 199031658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677095
    },
    {
        "content": "<p>and it's just making beta be nightly - 13 days or so</p>",
        "id": 199031662,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677098
    },
    {
        "content": "<p>(in terms of just LLVM)</p>",
        "id": 199031682,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199031506\">said</a>:</p>\n<blockquote>\n<p>but I thought even your PR said there were optimization regressions ?</p>\n</blockquote>\n<p>There were some regressions, but they became non-visible for us due to stdlib changes. It's the usual issue with RangeInclusive in rust being broken by design.</p>",
        "id": 199031685,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677106
    },
    {
        "content": "<p>is it worth considering bracnhing beta from 13 days ago?</p>",
        "id": 199031699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677113
    },
    {
        "content": "<p>I don't think we need to be that harsh, there's really not that much point imo</p>",
        "id": 199031726,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677125
    },
    {
        "content": "<p>and cherry-picking actually fixes to regressions?</p>",
        "id": 199031728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677127
    },
    {
        "content": "<p>okay</p>",
        "id": 199031731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677128
    },
    {
        "content": "<p>Buying ourselves one cycle is good, but I can see us having the same conversation in 6 weeks and delaying again, and again</p>",
        "id": 199031782,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590677149
    },
    {
        "content": "<p>We should revisit this topic again</p>",
        "id": 199031812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677160
    },
    {
        "content": "<p>maybe in a Friday meeting</p>",
        "id": 199031857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677164
    },
    {
        "content": "<p>But yeah, agree that buying time now is very useful</p>",
        "id": 199031862,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1590677167
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199031782\">said</a>:</p>\n<blockquote>\n<p>Buying ourselves one cycle is good, but I can see us having the same conversation in 6 weeks and delaying again, and again</p>\n</blockquote>\n<p>There will be significantly more pushback to the idea of backporting a revert as time goes on</p>",
        "id": 199031878,
        "sender_full_name": "nagisa",
        "timestamp": 1590677177
    },
    {
        "content": "<p>to be clear the only reason why I'm okay reverting on beta is because we just haven't had that much testing</p>",
        "id": 199031944,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677202
    },
    {
        "content": "<p>At the moment my opinion remains that we have to eventually track LLVM</p>",
        "id": 199031955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677210
    },
    {
        "content": "<p>we just can't \"stall\" on some older version for very long</p>",
        "id": 199031966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677216
    },
    {
        "content": "<p>holding off a cycle seems fine; I don't know what it buys us, but maybe something</p>",
        "id": 199032004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677230
    },
    {
        "content": "<p>okay</p>",
        "id": 199032018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677236
    },
    {
        "content": "<p>I guess I'm confused why we're talking about reverting this on beta then</p>",
        "id": 199032024,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677238
    },
    {
        "content": "<p>can we move along then?</p>",
        "id": 199032028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677240
    },
    {
        "content": "<p>I don't think we really buy anything by waiting another 6 weeks, unless we specifically decide to track LLVM master instead. (I'd be really happy to bump to master, but there are people who want to use released versions due to cross-language LTO concerns.)</p>",
        "id": 199032033,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677242
    },
    {
        "content": "<p>okay wait then</p>",
        "id": 199032055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677252
    },
    {
        "content": "<p>if there's objections to this plan then lets keep discussing</p>",
        "id": 199032069,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677262
    },
    {
        "content": "<p>Is it just so we have more time to try the change out before it hits stable?</p>",
        "id": 199032070,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677262
    },
    {
        "content": "<p>Or are we trying to delay the performance implications?</p>",
        "id": 199032093,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677272
    },
    {
        "content": "<p>well, my current plan is:</p>\n<ul>\n<li>do beta crater run</li>\n<li>if no regressions, let's talk about it again</li>\n<li>if regressions, revert llvm</li>\n</ul>",
        "id": 199032097,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677274
    },
    {
        "content": "<p>(e.g. LLVM asserts or w/e)</p>",
        "id": 199032145,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677283
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 199032171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> when you say regressions, you're <strong>not</strong> talking about performance regressions, just correctness ones?</p>",
        "id": 199032218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677315
    },
    {
        "content": "<p>yes</p>",
        "id": 199032223,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677317
    },
    {
        "content": "<p>wow that was not how I interpreted the plan</p>",
        "id": 199032243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677328
    },
    {
        "content": "<p>me either :)</p>",
        "id": 199032295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677346
    },
    {
        "content": "<p>but it seems like a sensible one</p>",
        "id": 199032327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677359
    },
    {
        "content": "<p>do we have any reason to expect regressions of that kind?</p>",
        "id": 199032338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677365
    },
    {
        "content": "<p>so my thought was: Revert to LLVM 9 (either on beta alone after branching, or on nightly before beta branch)</p>",
        "id": 199032354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677371
    },
    {
        "content": "<p>we usually hit similar regressions after llvm upgrades</p>",
        "id": 199032372,
        "sender_full_name": "simulacrum",
        "timestamp": 1590677381
    },
    {
        "content": "<p>ok</p>",
        "id": 199032383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677386
    },
    {
        "content": "<p>ps, <a href=\"https://hackmd.io/3ReZTxSTQ8-inezb7IBwLg\">still tracking</a> the conversation here</p>",
        "id": 199032392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677392
    },
    {
        "content": "<p>let me know if you see points that are missing, or feel free to add</p>",
        "id": 199032403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677400
    },
    {
        "content": "<p>Yes, miscompiles are somewhat common after LLVM upgrades. This time we'll probably see less than usual, because we did the update much later (we're nearly on 10.0.1 now).</p>",
        "id": 199032506,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677426
    },
    {
        "content": "<p>btw are we aware of any efforts on LLVM's side to release a \"point release\" to address perf problems in 10.x series</p>",
        "id": 199032575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677458
    },
    {
        "content": "<p>slash what is the schedule around LLVM 11?</p>",
        "id": 199032604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677469
    },
    {
        "content": "<p>(I think they do train releases every 6 months? I forget.)</p>",
        "id": 199032623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677478
    },
    {
        "content": "<p>(Part of my thinking was that other changes we make to the compiler in nightly could be deliberately targeted to lessen the compile-time impact that LLVM 10 upgrade has caused.)</p>",
        "id": 199032642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677490
    },
    {
        "content": "<p>No, as far as I'm aware there are no performance related fixes on the 10.x branch. And yes, it's every 6 months.</p>",
        "id": 199032664,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677496
    },
    {
        "content": "<p>Seems like a release every 6 months or so</p>",
        "id": 199032665,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677496
    },
    {
        "content": "<p>10 was released in March</p>",
        "id": 199032675,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677500
    },
    {
        "content": "<p>So 11 should be around September?</p>",
        "id": 199032714,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677513
    },
    {
        "content": "<p>(but that only works if we give ourselves the time to make such follow-on changes, and if we actually have the work resources to make such changes)</p>",
        "id": 199032716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677514
    },
    {
        "content": "<p>I guess any such follow-on changes could be backported to beta if they are truly amazing</p>",
        "id": 199032833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> Just out of curiosity, \"how much\" harder do you think it would be to upgrade directly from LLVM 9 to LLVM 11, in terms of tracking down and handling regressions and the like? Do you have any sense for that?</p>",
        "id": 199032869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677572
    },
    {
        "content": "<p>I guess I'm trying to figure out if that is at all a viable option -- it of course assumes LLVM 11 will be better, which isn't entirely clear or known.</p>",
        "id": 199032927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677599
    },
    {
        "content": "<p>we're going to run out of time at this rate, so I'm struggling to decide whether to cut this conversation off or not</p>",
        "id": 199033003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'd skip the rest of the nominations and continue with this</p>",
        "id": 199033097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590677656
    },
    {
        "content": "<p>I want to at least point at the <a href=\"https://hackmd.io/YId0E8pKS26g6dx1-JGn7Q?both#WG-checkins\">WG checkins</a> on the agenda</p>",
        "id": 199033119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677664
    },
    {
        "content": "<p>Maybe it's worth scoping the conversation to just what we want to do about a possible revert on the <code>beta</code> branch?</p>",
        "id": 199033140,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590677681
    },
    {
        "content": "<p>the other nominated issues can wait until next week, hopefully</p>",
        "id": 199033141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199033097\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> I'd skip the rest of the nominations and continue with this</p>\n</blockquote>\n<p>the rest are not urgent, and can wait</p>",
        "id": 199033159,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1590677692
    },
    {
        "content": "<p>I guess we can probably cut off the conversation and see what the results of the beta crater run are</p>",
        "id": 199033217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677720
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  In terms of technical effort, going directly to LLVM 11 should not cause particular problems. This does mean that any regressions (to run-time performance, or miscompiles) will come from a twice as large time range. In that case I'd prefer to instead do an upgrade to current LLVM master and let people who want cross language LTO use their own toolchain.</p>",
        "id": 199033274,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677747
    },
    {
        "content": "<p>To be clear, <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span>, do you mean to do an upgrade to LLVM master <strong>now</strong>?</p>",
        "id": 199033379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677776
    },
    {
        "content": "<p>(or, perhaps, post-release?)</p>",
        "id": 199033386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677782
    },
    {
        "content": "<p>In case we want to revert the LLVM 10 upgrade now, I'd go for an LLVM master upgrade post-release.</p>",
        "id": 199033436,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133224\">Nikita Popov</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199033274\">said</a>:</p>\n<blockquote>\n<p>In that case I'd prefer to instead do an upgrade to current LLVM master and let people who want cross language LTO use their own toolchain.</p>\n</blockquote>\n<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 199033444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677808
    },
    {
        "content": "<p>that somewhat undermines our \"adopt Rust piecewise as you need it\" story</p>",
        "id": 199033552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677864
    },
    {
        "content": "<p>but I guess everything's a tradeoff; no one's going to adopt it if compiles never finish</p>",
        "id": 199033631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677883
    },
    {
        "content": "<p>I don't know who is using cross-lang LTO, the only consumer I know of is FF, and <em>they</em> at least are sticking with LLVM 9, so I guess they need their own toolchain anyhow?</p>",
        "id": 199033646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677884
    },
    {
        "content": "<p>(Not sure how that works...)</p>",
        "id": 199033687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590677899
    },
    {
        "content": "<p>oh jeez I hadn't even thought of that</p>",
        "id": 199033696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677902
    },
    {
        "content": "<p>Me neither...</p>",
        "id": 199033720,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677911
    },
    {
        "content": "<p>in terms of the implication of them not upgrading their version of clang</p>",
        "id": 199033729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590677915
    },
    {
        "content": "<p>(Ideally we'd fix our LTO model to be linker plugin based and avoid the whole problem, but that's not a short term thing)</p>",
        "id": 199033790,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1590677944
    },
    {
        "content": "<p>So here are the options I have seen </p>\n<ul>\n<li>Backout from nightly and upgrade directly to LLVM 11 when it is released</li>\n<li>Backout from beta and upgrade nightly to LLVM master post -release</li>\n<li>Backout from beta if crater run shows regressions related to LLVM upgrade</li>\n<li>Do nothing</li>\n</ul>",
        "id": 199033938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590678001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> so if we wait until the beta crater run, that will only start after the beta branch, which will be ... Monday? Is that right? So the beta crater run <em>might</em> be done by next Thursday's meeting?</p>",
        "id": 199033941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678002
    },
    {
        "content": "<p>no</p>",
        "id": 199034004,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678012
    },
    {
        "content": "<p>beta crater is probably something like 2 weeks out</p>",
        "id": 199034031,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678021
    },
    {
        "content": "<p>so nice to have clear definite answers. :)</p>",
        "id": 199034043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678026
    },
    {
        "content": "<p>it seems like we're deciding mostly between \"backout from beta\" and \"do nothing\"</p>",
        "id": 199034057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590678031
    },
    {
        "content": "<p>(even if they're not the ones I wanted)</p>",
        "id": 199034072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678038
    },
    {
        "content": "<p>(I guess that deciding whether to backout from beta or to upgrade nightly to LLVM master are orthogonal, really)</p>",
        "id": 199034148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590678066
    },
    {
        "content": "<p>otoh beta crater run will be faster because we have 4 crater machines vs 3 -- <a href=\"https://crater.rust-lang.org/agents\">https://crater.rust-lang.org/agents</a> -- so who knows.</p>",
        "id": 199034155,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678069
    },
    {
        "content": "<p>but it does seem like we don't want to backout altogether</p>",
        "id": 199034239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590678097
    },
    {
        "content": "<p>which is probably the only thing we had to decide <strong>now</strong></p>",
        "id": 199034255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590678102
    },
    {
        "content": "<p>okay</p>",
        "id": 199034383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678132
    },
    {
        "content": "<p>maybe we leave this topic on the nominated issues list</p>",
        "id": 199034397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678139
    },
    {
        "content": "<p>so that we can circle back to it next week?</p>",
        "id": 199034419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678147
    },
    {
        "content": "<p>Or would it be better to allocate a Friday meeting to discuss in more depth?</p>",
        "id": 199034462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678164
    },
    {
        "content": "<p>(when is our next planning meeting ...)</p>",
        "id": 199034523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678184
    },
    {
        "content": "<p>/me is not really sure we'll have any data by next week's meeting</p>",
        "id": 199034563,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678201
    },
    {
        "content": "<p>but we can briefly discuss next week and then decide if it runs long if we should allocate a friday meeting perhaps?</p>",
        "id": 199034611,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678220
    },
    {
        "content": "<p>next planning meeting will be June 5th</p>",
        "id": 199034660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678241
    },
    {
        "content": "<p>so maybe I'll try to write up a meeting proposal doc before then</p>",
        "id": 199034727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678255
    },
    {
        "content": "<p>we'll see</p>",
        "id": 199034739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678260
    },
    {
        "content": "<p>If I'm reading this right, beta releases the day before on June 4 <a href=\"https://forge.rust-lang.org/\">https://forge.rust-lang.org/</a></p>",
        "id": 199034781,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590678279
    },
    {
        "content": "<p>okay we're out of time. <strong>But</strong>, this was an awesome meeting you all, Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 199034790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678283
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-05-28.20.2354818/near/199034781\">said</a>:</p>\n<blockquote>\n<p>If I'm reading this right, beta releases the day before on June 4 <a href=\"https://forge.rust-lang.org/\">https://forge.rust-lang.org/</a></p>\n</blockquote>\n<p>yeah my take is that if we decide to revert on beta, we can do that on the beta branch after June 4th)</p>",
        "id": 199034851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1590678315
    },
    {
        "content": "<p>Ah ok <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 199034871,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590678328
    },
    {
        "content": "<p>yep!</p>",
        "id": 199034890,
        "sender_full_name": "simulacrum",
        "timestamp": 1590678338
    }
]