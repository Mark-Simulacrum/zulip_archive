[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will start in about 50 minutes</p>",
        "id": 221945563,
        "sender_full_name": "apiraino",
        "timestamp": 1610028775
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/B6aLubrrREClEhok_2WAsA?view\">meeting agenda</a></p>",
        "id": 221945571,
        "sender_full_name": "apiraino",
        "timestamp": 1610028781
    },
    {
        "content": "<p>We will have a checkin from <em>@WG-rfc-2229</em></p>",
        "id": 221945612,
        "sender_full_name": "apiraino",
        "timestamp": 1610028802
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 221951563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031677
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 221951605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031696
    },
    {
        "content": "<ul>\n<li>Happy 2021 y'all!</li>\n</ul>",
        "id": 221951624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031707
    },
    {
        "content": "<ul>\n<li>On a semi-personal note: I was pretty shocked by what went on in the USA capital yesterday. Many of you, even if you don't reside in the USA, may be shaken up as well.  I just want to say that if you need some personal time, I don't think anyone's going to judge.</li>\n</ul>",
        "id": 221951936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031822
    },
    {
        "content": "<p>(of course if compiler hacking is your favorite way to heal/distract yourself, by all means lets fix some bugs)</p>",
        "id": 221952026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031854
    },
    {
        "content": "<p>anyway, back to meeting</p>",
        "id": 221952110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031900
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"Remove PredicateKind in favor of only Binder&lt;PredicateAtom&gt;\" <a href=\"https://github.com/rust-lang/compiler-team/issues/397\">compiler-team#397</a></li>\n</ul>\n</li>\n</ul>",
        "id": 221952147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031919
    },
    {
        "content": "<p>the latter is in FCP now</p>",
        "id": 221952178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610031935
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n<li>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></li>\n<li>\"MCP: More Cranelift-friendly portable SIMD intrinsics\" <a href=\"https://github.com/rust-lang/compiler-team/issues/381\">compiler-team#381</a></li>\n<li>\"Debuggable Macro Expansions\" <a href=\"https://github.com/rust-lang/compiler-team/issues/386\">compiler-team#386</a></li>\n<li>\"Move query implementation outside rustc_middle\" <a href=\"https://github.com/rust-lang/compiler-team/issues/388\">compiler-team#388</a></li>\n<li>\"Uplift the <code>invalid_atomic_ordering</code> lint from clippy to rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/390\">compiler-team#390</a></li>\n<li>\"Staged queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/391\">compiler-team#391</a></li>\n<li>\"Do not traverse the HIR to generate metadata\" <a href=\"https://github.com/rust-lang/compiler-team/issues/392\">compiler-team#392</a></li>\n<li>\"Embed version numbers in backport nominations and regression labels\" <a href=\"https://github.com/rust-lang/compiler-team/issues/393\">compiler-team#393</a></li>\n</ul>\n</li>\n</ul>",
        "id": 221952270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031964
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"rustc: Stabilize <code>-Zrun-dsymutil</code> as <code>-Csplit-debuginfo</code>\" <a href=\"https://github.com/rust-lang/rust/pull/79570\">rust#79570</a></li>\n</ul>\n</li>\n</ul>",
        "id": 221952309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031986
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Make it easier to build the standard library\" <a href=\"https://github.com/rust-lang/compiler-team/issues/394\">compiler-team#394</a></li>\n<li>\"Add a scheme to register functions from other crates with TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/395\">compiler-team#395</a></li>\n</ul>\n</li>\n</ul>",
        "id": 221952328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610031995
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 221952360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032007
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>No new finished FCP (disposition merge) this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 221952380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032016
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 221952397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032026
    },
    {
        "content": "<p>@wg-polymorphization checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>:</p>\n<blockquote>\n<p>Happy new year everyone! There's no news from the polymorphization working group. Working group members have been focusing their efforts elsewhere in the compiler recently.</p>\n</blockquote>",
        "id": 221952407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032030
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>:</p>\n<ul>\n<li><code>capture_disjoint_fields</code> kind of works now and is available on the nightly.</li>\n<li>PRs for fixing some of the bugs and improving diagnostics are open and more fixes/improvements are currently in the works.</li>\n<li>Parts of the migration (lint) analaysis for handling change in Drop ordering have been implemented, PR is open and will posting follow ups after that.</li>\n<li>Need to discuss with T-lang about edge cases that we realized during the implementation phase of the RFC and an <a href=\"https://github.com/rust-lang/lang-team/issues/73\">issue</a> is open for scheduling a meeting.</li>\n<li><a href=\"https://perf.rust-lang.org/compare.html?start=0f6f2d681b39c5f95459cd09cb936b6ceb27cd82&amp;end=aee064ad665521e03371fbb810437a813fbdd365\">Perf results</a> after hacking around some of the bugs and enabling the feature by default didn't seem bad. Incremental compile seems to be affected but that is speculated because of duplicate information currently in TypeckResults (requiring more information to hashed). Work is being done to get rid of the duplicate information.</li>\n</ul>",
        "id": 221952424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032040
    },
    {
        "content": "<p>(credit where credit is due: really written by <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> et al.)</p>",
        "id": 221952456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032061
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No beta nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 221952561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032107
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>",
        "id": 221952575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032118
    },
    {
        "content": "<blockquote>\n<p>\"Drop official support for Windows XP\" <a href=\"https://github.com/rust-lang/compiler-team/issues/378\">compiler-team#378</a></p>\n</blockquote>\n<p>This has been undergoing FCP merge without being seconded.</p>",
        "id": 221952580,
        "sender_full_name": "nagisa",
        "timestamp": 1610032121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> didn't it get team approval?</p>",
        "id": 221952593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032135
    },
    {
        "content": "<p>I think it did, I just wanted to point out its in the list of not-seconded proposals</p>",
        "id": 221952634,
        "sender_full_name": "nagisa",
        "timestamp": 1610032157
    },
    {
        "content": "<p>oh oh oh</p>",
        "id": 221952643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032163
    },
    {
        "content": "<p>rather than under-FCP proposals.</p>",
        "id": 221952649,
        "sender_full_name": "nagisa",
        "timestamp": 1610032165
    },
    {
        "content": "<p>we gotta streamline that system</p>",
        "id": 221952679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032184
    },
    {
        "content": "<p>Right, okay. So we need to tweak that in the agenda construction. cc <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span></p>",
        "id": 221952680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032185
    },
    {
        "content": "<p>we had some good thoughts in a design meeting at some point, but have to push them over the finish line</p>",
        "id": 221952702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032198
    },
    {
        "content": "<p>T-rustdoc backports:</p>",
        "id": 221952758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032209
    },
    {
        "content": "<ul>\n<li>\"Revert \"Cleanup markdown span handling\"\" <a href=\"https://github.com/rust-lang/rust/pull/80381\">rust#80381</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> approves the backport</li>\n</ul>\n</li>\n</ul>",
        "id": 221952764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032214
    },
    {
        "content": "<p>This seems like a pretty clear backport choice. Backport approved.</p>",
        "id": 221952953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032307
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 221952969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032315
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">58 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">37 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 2 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 2 P-high, 6 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 34 P-high, 82 P-medium, 9 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 221953022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032325
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 221953039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032333
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions at this time.</li>\n</ul>",
        "id": 221953091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032358
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee\">Unassigned P-high nightly regressions</a></p>",
        "id": 221953122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032366
    },
    {
        "content": "<ul>\n<li>\"Panic with 'Missing tokens for nt \";\"' when passing statement to proc macro from declarative macro\" <a href=\"https://github.com/rust-lang/rust/issues/80760\">rust#80760</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"360486\">@Koxiaet</span> </li>\n<li>looks like a regression on latest 1.51.0-nightly parsing the token <code>;</code> in a proc_macro</li>\n<li><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> points to pr <a href=\"https://github.com/rust-lang/rust/pull/79812\">79812</a></li>\n<li>no bisecting yet, but probably needs some attention</li>\n</ul>\n</li>\n</ul>",
        "id": 221953134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032372
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>, author of <a href=\"https://github.com/rust-lang/rust/issues/79812\">#79812</a>)</p>",
        "id": 221953232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032428
    },
    {
        "content": "<p>(wasn't there talk at some point about providing cargo-bisect-rustc as a service at some point?)</p>",
        "id": 221953303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032445
    },
    {
        "content": "<p>that'd be so cool</p>",
        "id": 221953321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032455
    },
    {
        "content": "<p>seems like we could revert <a href=\"https://github.com/rust-lang/rust/issues/79812\">#79812</a> if necessary</p>",
        "id": 221953340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032464
    },
    {
        "content": "<p>(and re-apply with fixes)</p>",
        "id": 221953348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032469
    },
    {
        "content": "<p>assuming <a href=\"https://github.com/rust-lang/rust/issues/79812\">#79812</a> is the culprit, that does sound like the best approach</p>",
        "id": 221953432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032517
    },
    {
        "content": "<p>assuming we don't see a direct patch in the near term</p>",
        "id": 221953452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032525
    },
    {
        "content": "<p>I can take on that task, it sounds like an easy background job.</p>",
        "id": 221953510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032552
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953303\">said</a>:</p>\n<blockquote>\n<p>(wasn't there talk at some point about providing cargo-bisect-rustc as a service at some point?)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> had this working at some point if I'm not wrong but unsure what else was needed to fully deploy it</p>",
        "id": 221953512,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1610032552
    },
    {
        "content": "<p>It should still be active on any issue of it's repo.</p>",
        "id": 221953636,
        "sender_full_name": "bjorn3",
        "timestamp": 1610032603
    },
    {
        "content": "<p>Okay lets keep moving</p>",
        "id": 221953642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032605
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3/cargo-bisect-rustc-bot\">https://github.com/bjorn3/cargo-bisect-rustc-bot</a></p>",
        "id": 221953671,
        "sender_full_name": "bjorn3",
        "timestamp": 1610032619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953636\">said</a>:</p>\n<blockquote>\n<p>It should still be active on any issue of it's repo.</p>\n</blockquote>\n<p>do we have docs for how to use it on rustc-dev-guide?</p>",
        "id": 221953698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032631
    },
    {
        "content": "<p>(Related: I feel like it'd be great to have rustbot be a meta-bot that is always the right bot...)</p>",
        "id": 221953753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032652
    },
    {
        "content": "<p>(not that <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> is responsible for creating such docs. Just want to know if there's visibility into the tool's use)</p>",
        "id": 221953763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032656
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Happy New Year! A slow week to start off the new year, with by far the most exciting development being the large gains in the <code>ctfe</code> benchmark caused by changes in serialization and deserialization.</p>",
        "id": 221953833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032683
    },
    {
        "content": "<p>Triage done by <strong>@rylev</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=e2a2592885539ca97bfb1232669e7519a0c0703b&amp;end=f4b9d32ef53c0629732ee131b640920ae12d1edb&amp;absolute=false&amp;stat=instructions%3Au\">e2a2592885539ca97bfb1232669e7519a0c0703b..f4b9d32ef53c0629732ee131b640920ae12d1edb</a></p>\n<p>0 Regressions, 2 Improvements, 2 Mixed<br>\n2 of them in rollups</p>",
        "id": 221953872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953698\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953636\">said</a>:</p>\n<blockquote>\n<p>It should still be active on any issue of it's repo.</p>\n</blockquote>\n<p>do we have docs for how to use it on rustc-dev-guide?</p>\n</blockquote>\n<p>No. I believe it was planned to be integrated into triagebot, but I didn't have much time at that point and forgot afterwards.</p>",
        "id": 221953879,
        "sender_full_name": "bjorn3",
        "timestamp": 1610032693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953833\">said</a>:</p>\n<blockquote>\n<p>by far the most exciting development being the large gains in the <code>ctfe</code> benchmark caused by changes in serialization and deserialization.</p>\n</blockquote>\n<p>(which changes are those, for my edification?)</p>",
        "id": 221953909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610032711
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/80115\">https://github.com/rust-lang/rust/pull/80115</a></p>",
        "id": 221953955,
        "sender_full_name": "simulacrum",
        "timestamp": 1610032741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I am breaking down the wall of text</p>",
        "id": 221953960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032744
    },
    {
        "content": "<p>into parts</p>",
        "id": 221953963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032747
    },
    {
        "content": "<h4>Improvements</h4>\n<p>Implement edition-based macro :pat feature <a href=\"https://github.com/rust-lang/rust/issues/80459\">#80459</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b33e234155b33ab6bce280fb2445b62b68622b61&amp;end=44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e&amp;stat=instructions:u\">instruction counts</a> (up to -1.7% on <code>incr-unchanged</code> builds of <code>deep-vector-check</code>)</li>\n<li>Fixes the perf regression from <a href=\"https://github.com/rust-lang/rust/pull/80100#issuecomment-750893149\">#80100</a></li>\n</ul>\n<p>rustc_serialize: specialize opaque encoding and decoding of some u8 sequences <a href=\"https://github.com/rust-lang/rust/issues/80115\">#80115</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5986dd878f3e432025eb1946149e3241d3998b1b&amp;end=929f66af9bf587383ed6010403e738e79dfac0d6&amp;stat=instructions:u\">instruction counts</a> (up to -85.1% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</li>\n<li>In rustc-serialize, specialize encoding and decoding of some contiguous u8 sequences to use a more efficient implementation.</li>\n</ul>",
        "id": 221953990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032761
    },
    {
        "content": "<p>so yeah, <a href=\"https://github.com/rust-lang/rust/issues/80115\">#80115</a> as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> saide</p>",
        "id": 221954027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032780
    },
    {
        "content": "<p>This dialogue illustrates one problem with the way we currently have the Performance Triage reports embedded in the agenda</p>",
        "id": 221954154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032829
    },
    {
        "content": "<p>(Maybe in a near term performance-triage session I will try to join in and we can try to figure out a more effective structure for the report.)</p>",
        "id": 221954257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032894
    },
    {
        "content": "<p>anyway, back to the performance report</p>",
        "id": 221954286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032913
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Rollup of 9 pull requests <a href=\"https://github.com/rust-lang/rust/issues/80530\">#80530</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e2267046859c9ceb932abc983561d53a117089f6&amp;end=9775ffef2a4c3a36cadb58b72ea60cefb92c86ae&amp;stat=instructions:u\">instruction counts</a> (up to 2.6% on <code>full</code> builds of <code>ripgrep-opt</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e2267046859c9ceb932abc983561d53a117089f6&amp;end=9775ffef2a4c3a36cadb58b72ea60cefb92c86ae&amp;stat=instructions:u\">instruction counts</a> (up to -1.5% on <code>incr-patched: println</code> builds of <code>cargo-debug</code>)</li>\n<li>Unsure which PRs were responsible for the performance impact, but we suspect <a href=\"https://github.com/rust-lang/rust/pull/80458\">#80458</a>. </li>\n</ul>\n<p>Rollup of 12 pull requests <a href=\"https://github.com/rust-lang/rust/issues/80708\">#80708</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=9919ad6e9ed113557c68c430de2e0f434e4f5b6e&amp;end=f412fb56b8d11c168e7ee49ee74e79c4ab2e5637&amp;stat=instructions:u\">instruction counts</a> (up to 5.9% on <code>incr-unchanged</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=9919ad6e9ed113557c68c430de2e0f434e4f5b6e&amp;end=f412fb56b8d11c168e7ee49ee74e79c4ab2e5637&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>full</code> builds of <code>coercions-debug</code>)</li>\n<li>The regression outweighs the improvement</li>\n<li>Unsure which PR is the cause of the regression, but <a href=\"https://github.com/rust-lang/rust/pull/80637\">#80637</a> is our best guess.</li>\n</ul>",
        "id": 221954290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032914
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>stdarch is still a major contributor to libcore compile times.</li>\n<li>Investigate the two rollups that had perf impacts <a href=\"https://github.com/rust-lang/rust/issues/80530\">#80530</a> and <a href=\"https://github.com/rust-lang/rust/pull/80708\">#80708</a>.</li>\n</ul>",
        "id": 221954343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032923
    },
    {
        "content": "<p>Since for once we've gotten through the performance report and aren't rushing to try to get through agenda, I'd like to ask about the running item of \"stdarch is still a major contributor to libcore compile times.\"</p>",
        "id": 221954419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032967
    },
    {
        "content": "<p>is there any plan for actually trying to dissect how we might resolve that?</p>",
        "id": 221954484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610032994
    },
    {
        "content": "<p>The related stdarch issue is <a href=\"https://github.com/rust-lang/stdarch/issues/248\">https://github.com/rust-lang/stdarch/issues/248</a></p>",
        "id": 221954500,
        "sender_full_name": "tm",
        "timestamp": 1610033001
    },
    {
        "content": "<p>or forget a plan, even; is there someone who is at least planning to look at it?</p>",
        "id": 221954526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221954500\">said</a>:</p>\n<blockquote>\n<p>The related stdarch issue is <a href=\"https://github.com/rust-lang/stdarch/issues/248\">https://github.com/rust-lang/stdarch/issues/248</a></p>\n</blockquote>\n<p>The handling of immmediate mode arguments is the major cause of build time issues?</p>",
        "id": 221954631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033057
    },
    {
        "content": "<p>I think it's likely but unclear - there's just also a lot of functions in stdarch</p>",
        "id": 221954700,
        "sender_full_name": "simulacrum",
        "timestamp": 1610033093
    },
    {
        "content": "<p>I guess that is what <span class=\"user-mention\" data-user-id=\"352985\">@tm</span> asserted in this comment : <a href=\"https://github.com/rust-lang/stdarch/issues/248#issuecomment-748986848\">https://github.com/rust-lang/stdarch/issues/248#issuecomment-748986848</a></p>",
        "id": 221954713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033102
    },
    {
        "content": "<p>I see discussion of trying to switch to new API's with const generics and deprecate the old API's. If we deprecate, does that make it easier to move these things <em>out</em> of libcore? Would that even help at all?</p>",
        "id": 221954971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033205
    },
    {
        "content": "<p>the discussion of const generics is interesting</p>",
        "id": 221954987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033211
    },
    {
        "content": "<p>Arguments to some intrinsics need to be consts, but at the time there were not const generics available, so implementation contains calls with all valid const values.</p>",
        "id": 221955012,
        "sender_full_name": "tm",
        "timestamp": 1610033220
    },
    {
        "content": "<p>the requirement that the arguments be consts arises due to LLVM, I assume?</p>",
        "id": 221955077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033257
    },
    {
        "content": "<p>Sometimes even the underlying architecture</p>",
        "id": 221955172,
        "sender_full_name": "nagisa",
        "timestamp": 1610033284
    },
    {
        "content": "<p>(often it's stuff that is needed to select the proper opcode)</p>",
        "id": 221955189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033293
    },
    {
        "content": "<p>right, I'm just trying to establish that its not something that we could fix in the rustc itself, not easily</p>",
        "id": 221955213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033303
    },
    {
        "content": "<p>okay. Well I think I now have my answer that people <em>have</em> been discussing this, recently</p>",
        "id": 221955287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033339
    },
    {
        "content": "<p>so I'm satisfied with that</p>",
        "id": 221955299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033344
    },
    {
        "content": "<p>We don't need to make a plan today</p>",
        "id": 221955307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033348
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 221955332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033364
    },
    {
        "content": "<ul>\n<li>\"Unsoundness in type checking of trait impls. Differences in implied lifetime bounds are not considered.\" <a href=\"https://github.com/rust-lang/rust/issues/80176\">rust#80176</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span> </li>\n<li>here's a <a href=\"https://github.com/rust-lang/rust/issues/80176#issuecomment-748466836\">repro</a></li>\n<li>seems related to <a href=\"https://github.com/rust-lang/rust/issues/25860\">rust#25860</a></li>\n<li>waiting for a discussion when <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818/near/221297919\">also Niko can be there</a></li>\n</ul>\n</li>\n</ul>",
        "id": 221955336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033365
    },
    {
        "content": "<p>ah, yes, I deliberately left this nominated so that we would eventually discuss it at a meeting with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> present</p>",
        "id": 221955474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033412
    },
    {
        "content": "<p>(reading)</p>",
        "id": 221955548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033463
    },
    {
        "content": "<p>And I'm re-reading <a href=\"https://github.com/rust-lang/rust/issues/25860\">#25860</a></p>",
        "id": 221955613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033494
    },
    {
        "content": "<p>I don't have an immediate comment except to say that I've been thinking about \"close unsoundness bugs\" as a possible focus area for myself this year :)</p>",
        "id": 221955618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033496
    },
    {
        "content": "<p>and this plus <a href=\"https://github.com/rust-lang/rust/issues/25860\">rust#25860</a> would be high on my list</p>",
        "id": 221955631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033506
    },
    {
        "content": "<p>I see the problem for sure</p>",
        "id": 221955659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033519
    },
    {
        "content": "<p>okay</p>",
        "id": 221955744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033541
    },
    {
        "content": "<p>I think that the fundamental fix would probably build on similar \"machinery\" as a good fix for <a href=\"https://github.com/rust-lang/rust/issues/25860\">rust#25860</a></p>",
        "id": 221955749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033543
    },
    {
        "content": "<p>and quite possible fall out from that</p>",
        "id": 221955756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033547
    },
    {
        "content": "<p>right</p>",
        "id": 221955762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033550
    },
    {
        "content": "<p>do you suspect it will depend on chalk?</p>",
        "id": 221955775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033559
    },
    {
        "content": "<p>in particular, we need to check that the set of \"implied bound predicates\" in the impl follows from the implied bounds of the trait</p>",
        "id": 221955780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033561
    },
    {
        "content": "<p>I am pondering that</p>",
        "id": 221955793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033567
    },
    {
        "content": "<p>not .. necessarily</p>",
        "id": 221955800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033572
    },
    {
        "content": "<p>okay</p>",
        "id": 221955807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033573
    },
    {
        "content": "<p>but some of the work <em>around</em> chalk would be helpful</p>",
        "id": 221955822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033581
    },
    {
        "content": "<p>thanks for bringing this to my attention</p>",
        "id": 221955871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033595
    },
    {
        "content": "<p>I'm satisfied with that. This particular issue doesn't need to be any more pressing than <a href=\"https://github.com/rust-lang/rust/issues/25860\">#25860</a> is.</p>",
        "id": 221955881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033599
    },
    {
        "content": "<p>I will add it to my list and ponder a bit</p>",
        "id": 221955882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033599
    },
    {
        "content": "<p>Should we consider downgrading <a href=\"https://github.com/rust-lang/rust/issues/80176\">#80176</a> to P-medium? It seems at least like <a href=\"https://github.com/rust-lang/rust/issues/25860\">#25860</a> and <a href=\"https://github.com/rust-lang/rust/issues/80176\">#80176</a> should have the <em>same</em> priority</p>",
        "id": 221956024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033644
    },
    {
        "content": "<blockquote>\n<p>It seems at least like <a href=\"https://github.com/rust-lang/rust/issues/25860\">#25860</a> and <a href=\"https://github.com/rust-lang/rust/issues/80176\">#80176</a> should have the same priority</p>\n</blockquote>\n<p>That makes sense to me <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 221956080,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1610033680
    },
    {
        "content": "<p>I'm personally okay with downgrading it to P-medium. But I know that it also puts a knot in my stomach every time a soundness issue is classified lower than P-high priority</p>",
        "id": 221956127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033702
    },
    {
        "content": "<p>I'll downgrade <a href=\"https://github.com/rust-lang/rust/issues/80176\">#80176</a> to P-medium with a comment saying I'm doing so it make it consistent with <a href=\"https://github.com/rust-lang/rust/issues/25860\">#25860</a>, and remove nomination label.</p>",
        "id": 221956311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033774
    },
    {
        "content": "<p>I'm ok with it, but I feel like we should be tracking unsoundness in a slightly different way</p>",
        "id": 221956328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033780
    },
    {
        "content": "<p>(in particular, I was thinking about an initiative to reduce them to zero this year, or something like that)</p>",
        "id": 221956350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033792
    },
    {
        "content": "<p>*targeting</p>",
        "id": 221956381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033807
    },
    {
        "content": "<p>but I'd rather discuss that \"holistically\"</p>",
        "id": 221956410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033819
    },
    {
        "content": "<p>You want to bring all the I-unsound bugs to zero?</p>",
        "id": 221956412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033820
    },
    {
        "content": "<p>not necessarily :)</p>",
        "id": 221956421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033825
    },
    {
        "content": "<p>I'm floating it as a thought, I've not reviewed the set of bugs</p>",
        "id": 221956446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033840
    },
    {
        "content": "<p>there are 62 I-unsound issues. But I bet a bunch are LLVM</p>",
        "id": 221956476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033854
    },
    {
        "content": "<p>yeah, I would want to read through them first</p>",
        "id": 221956497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610033865
    },
    {
        "content": "<p>which we should not include in the set you're enumerating</p>",
        "id": 221956503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033869
    },
    {
        "content": "<p>and we'd also want to filter out the mir-opt's that are only on at \"high\" optimization levels</p>",
        "id": 221956659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221956659\">said</a>:</p>\n<blockquote>\n<p>and we'd also want to filter out the mir-opt's that are only on at \"high\" optimization levels</p>\n</blockquote>\n<p>Any mir-opts doing this should already be gated under <code>-Zunsound-mir-opts</code> regardless of optimization level. If they're not, that's a separate bug.</p>",
        "id": 221956741,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1610033971
    },
    {
        "content": "<p>right,I'm just saying its not easy for me to idenitfy those via github labels, I think</p>",
        "id": 221956790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610033992
    },
    {
        "content": "<p>the current search I'm doing is this: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3A%22I-unsound+%F0%9F%92%A5%22+-label%3AA-LLVM+-label%3AA-mir-opt+-label%3AO-AVR\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3A%22I-unsound+%F0%9F%92%A5%22+-label%3AA-LLVM+-label%3AA-mir-opt+-label%3AO-AVR</a></p>",
        "id": 221956807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034000
    },
    {
        "content": "<p>which yields 40 bugs</p>",
        "id": 221956864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034006
    },
    {
        "content": "<p>but even that includes things like <a href=\"https://github.com/rust-lang/rust/issues/64609\">#64609</a> \"-C target-feature/-C target-cpu are unsound\"</p>",
        "id": 221956925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034037
    },
    {
        "content": "<p>(although maybe niko would want to include that in their list?)</p>",
        "id": 221956977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034062
    },
    {
        "content": "<p>ANYWAY</p>",
        "id": 221957006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034076
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>\"RFC: Checking conditional compilation at compile time\" <a href=\"https://github.com/rust-lang/rfcs/pull/3013\">rfcs#3013</a></li>\n</ul>",
        "id": 221957259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034188
    },
    {
        "content": "<p>oh, look at that, we have an RFC</p>",
        "id": 221957301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034211
    },
    {
        "content": "<p>(^^ FYI the author of the RFC is new to Rust and made a comment a few days back asking for help pushing the RFC forward)</p>",
        "id": 221957544,
        "sender_full_name": "rylev",
        "timestamp": 1610034312
    },
    {
        "content": "<p>The RFC goes into a fair amount of detail regarding what looks to me like a mini-DSL for describing what the full set of features are, so that you can verify in the source if a feature name shouldn't be there or is otherwise misused.</p>",
        "id": 221957737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> do you know if the author already prototyped the work? Or did they just figure out the design without prototyping it?</p>",
        "id": 221957828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034429
    },
    {
        "content": "<p>I believe there is a small prototype</p>",
        "id": 221957968,
        "sender_full_name": "rylev",
        "timestamp": 1610034483
    },
    {
        "content": "<p>I don't recall offhand; does the key-value system for features <em>solely</em> use identifiers for the keys and string literals for the values?</p>",
        "id": 221958044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034519
    },
    {
        "content": "<p>I'm basically double checking that there's no need to worry about other types of data in the values, e.g. integers</p>",
        "id": 221958097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034542
    },
    {
        "content": "<p>(even if there are, it seems like that could be handled by future work. Its not really a reason to block this proposall.)</p>",
        "id": 221958154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034569
    },
    {
        "content": "<p>I am not 100% sure, but I believe the values are always strings</p>",
        "id": 221958190,
        "sender_full_name": "rylev",
        "timestamp": 1610034590
    },
    {
        "content": "<p>Looks like it has to be strings <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\">https://doc.rust-lang.org/reference/conditional-compilation.html</a></p>",
        "id": 221958215,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1610034602
    },
    {
        "content": "<p>okay. Well, go look at it, y'all.</p>",
        "id": 221958297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034624
    },
    {
        "content": "<p>I've probably looked at it enough that I should just go all-in and figure out whether to FCP it or not. :)</p>",
        "id": 221958354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034648
    },
    {
        "content": "<p>with that, that's our whole agenda for today</p>",
        "id": 221958382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034661
    },
    {
        "content": "<p>helps to have weeks when all the bugs have been downgraded away</p>",
        "id": 221958411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034673
    },
    {
        "content": "<p>Oh, hold on</p>",
        "id": 221958445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034697
    },
    {
        "content": "<p>do we have a steering meeting tomorrow... ?</p>",
        "id": 221958463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034705
    },
    {
        "content": "<p>nothing is scheduled for tomorrow</p>",
        "id": 221958535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034723
    },
    {
        "content": "<p>but we <em>do</em> have our <strong>planning</strong> meeting next week</p>",
        "id": 221958562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034739
    },
    {
        "content": "<p>Nothing on the calendar but if we want to do that work week at the end of the month, we should start planning for that.</p>",
        "id": 221958588,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1610034750
    },
    {
        "content": "<p>So maybe we can end the meeting 8 minutes early, and we all spend the next 8 minutes thinking about proposals for the planning meeting.</p>",
        "id": 221958631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034773
    },
    {
        "content": "<p>it may be worth considering trying to fit in a meeting that tries to work out our sprints, at least for feb - but I admit I do not have the capacity to prepare/lead that discussion this month for sure.</p>",
        "id": 221958639,
        "sender_full_name": "simulacrum",
        "timestamp": 1610034776
    },
    {
        "content": "<p>Yeah, so we should do one or both of: Figure out the sprint for <em>this</em> month, and/or figure out the series of sprints we want</p>",
        "id": 221958819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034847
    },
    {
        "content": "<p>That said, I'm ending the meeting early, as noted above. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221958902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034884
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending. And I want to repeat again: Stay safe y'all, and if you need time for yourself, you should figure out a way to take that time.</p>",
        "id": 221958995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1610034933
    },
    {
        "content": "<p>Next week's agenda is online at<br>\n<a href=\"https://hackmd.io/A9zA4TFaQ9eJQ6aPqClU8Q?view\">https://hackmd.io/A9zA4TFaQ9eJQ6aPqClU8Q?view</a></p>\n<p>Scheduled checkins:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>  checkin by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>  checkin by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 221969503,
        "sender_full_name": "apiraino",
        "timestamp": 1610039075
    },
    {
        "content": "<p>Update on <a href=\"https://github.com/rust-lang/rust/issues/80760\">#80760</a>: <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> has a fix in progress in <a href=\"https://github.com/rust-lang/rust/issues/80789\">#80789</a>.</p>",
        "id": 222004047,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610055186
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202021-01-07.20.2354818/near/221953671\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bjorn3/cargo-bisect-rustc-bot\">https://github.com/bjorn3/cargo-bisect-rustc-bot</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> Does it still work? <a href=\"https://github.com/bjorn3/cargo-bisect-rustc-bot/issues/1#issuecomment-756401120\">I tried using it</a>, but nothing has happened. It looks really great by the way!</p>",
        "id": 222004948,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610055592
    },
    {
        "content": "<blockquote>\n<p>error: missing end range</p>\n</blockquote>",
        "id": 222005315,
        "sender_full_name": "bjorn3",
        "timestamp": 1610055767
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 222005339,
        "sender_full_name": "bjorn3",
        "timestamp": 1610055779
    },
    {
        "content": "<p>^ from the bot logs</p>",
        "id": 222005340,
        "sender_full_name": "bjorn3",
        "timestamp": 1610055779
    },
    {
        "content": "<p>should probably report an error to the user</p>",
        "id": 222005766,
        "sender_full_name": "bjorn3",
        "timestamp": 1610055988
    },
    {
        "content": "<p>Ah, okay. Thanks!</p>",
        "id": 222005796,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610056014
    },
    {
        "content": "<p>the bot still works</p>",
        "id": 222007005,
        "sender_full_name": "bjorn3",
        "timestamp": 1610056572
    }
]