[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , our planning meeting for the September cycle is starting now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here.</p>",
        "id": 250936104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630072949
    },
    {
        "content": "<p>So, it looks to me like we have no new meeting proposals.</p>",
        "id": 250936347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073051
    },
    {
        "content": "<p>In hindsight, I should have looked at that yesterday during the triage meeting. :)</p>",
        "id": 250936370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073062
    },
    {
        "content": "<p>But, we also had some people noting that our MCP backlog has grown quite a bit</p>",
        "id": 250936409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073080
    },
    {
        "content": "<p>So I suggest we do one of two things:</p>",
        "id": 250936427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073089
    },
    {
        "content": "<p>Either we: 1. use this hour to go over the MCP list, and see if we can find obvious candidates to close or second, or ...</p>",
        "id": 250936481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073116
    },
    {
        "content": "<ol start=\"2\">\n<li>alternatively, we schedule a Friday meeting in the future to do the above</li>\n</ol>",
        "id": 250936504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073130
    },
    {
        "content": "<p>I’m personally inclined to just do 1.</p>",
        "id": 250936544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073151
    },
    {
        "content": "<p>Option 1 seems good to me.</p>",
        "id": 250936547,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630073154
    },
    {
        "content": "<p>Oh, actually, before we just in: Any announcements?</p>",
        "id": 250936690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073213
    },
    {
        "content": "<p>I’ll be on vacation next week. That’s my announcement. :)</p>",
        "id": 250936707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073221
    },
    {
        "content": "<p>I’m going to create a hackmd as a shared space for us to take notes</p>",
        "id": 250936815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073278
    },
    {
        "content": "<p>Here’s the hackmd, adapted from <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> ’s great agenda construction system</p>",
        "id": 250937359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073540
    },
    {
        "content": "<p><a href=\"https://hackmd.io/yQ8jefI0Q0mBwFMAjGKfQw\">https://hackmd.io/yQ8jefI0Q0mBwFMAjGKfQw</a></p>",
        "id": 250937368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073545
    },
    {
        "content": "<p>or if you prefer, here is the <a href=\"https://github.com/rust-lang/compiler-team/issues?q=is%3Aissue+is%3Aopen+label%3Amajor-change+-label%3Afinal-comment-period+-label%3Aproposed-final-comment-period+sort%3Acreated-asc\">same list via github</a></p>",
        "id": 250937402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073569
    },
    {
        "content": "<p>There are eight unseconded MCPs. Lets go through them oldest first. Here’s the whole list:</p>",
        "id": 250937479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073609
    },
    {
        "content": "<p>- \"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a><br>\n  - \"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a><br>\n  - \"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a><br>\n  - \"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a><br>\n  - \"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a><br>\n  - \"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a><br>\n  - \"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a><br>\n  - \"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a></p>",
        "id": 250937494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073616
    },
    {
        "content": "<p>So, first up:</p>",
        "id": 250937529,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073633
    },
    {
        "content": "<h1>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></h1>",
        "id": 250937533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073635
    },
    {
        "content": "<p>It seems like conversation about this has been somewhat ongoing, with activity in the <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Add.20different.20entry.20points.20for.20x.2Epy.20compiler-team.23396\">#t-compiler/major changes &gt; Add different entry points for x.py compiler-team#396</a> topic up until August 7th</p>",
        "id": 250937698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073708
    },
    {
        "content": "<p>I feel like it's difficult for me to judge if this is a good idea or not because it doesn't solve any problems I have with the build system. However, it sounds like this just calls the existing script, modifying the defaults so it shouldn't really add additional complexity to bootstrap.</p>",
        "id": 250937763,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630073741
    },
    {
        "content": "<p>I think the main worry was that we end up with random unclearly-maintained scripts lying around everywhere</p>",
        "id": 250937882,
        "sender_full_name": "oli",
        "timestamp": 1630073782
    },
    {
        "content": "<p>So as a concrete example, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> made a great point that people end up maintaining their own local random script <em>locally</em></p>",
        "id": 250937963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073827
    },
    {
        "content": "<p>I know I certainly do</p>",
        "id": 250937971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073830
    },
    {
        "content": "<p>But: Do I think I’m going to <em>stop</em> doing that? Probably not.</p>",
        "id": 250937993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073843
    },
    {
        "content": "<p>I don't... I just remember random invocations and forget them. If it's not commited to the repo, I will not use it (not as a choice, but because I lose/forget the script)</p>",
        "id": 250938056,
        "sender_full_name": "oli",
        "timestamp": 1630073881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you said this will make things complex because it will add more modes of use of <code>x.py</code></p>",
        "id": 250938108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073889
    },
    {
        "content": "<p>solution <code>y.py</code> for per-dir <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 250938149,
        "sender_full_name": "oli",
        "timestamp": 1630073911
    },
    {
        "content": "<p>is the proposal to actually <em>extend</em> the functionality of <code>x.py</code> itself? I was under impression that <code>x.py</code> would largely be unchanged by it; you’re just selecting certain option combinations</p>",
        "id": 250938160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073914
    },
    {
        "content": "<p>and giving them highlighted status</p>",
        "id": 250938177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073919
    },
    {
        "content": "<p>no?</p>",
        "id": 250938178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073920
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> MCP author here</p>",
        "id": 250938184,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630073924
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 250938201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630073932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> kind of convinced me that this is not super helpful, because you have to remember to use the wrappers</p>",
        "id": 250938245,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630073951
    },
    {
        "content": "<p>Let me go reread the discussion</p>",
        "id": 250938320,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630073985
    },
    {
        "content": "<p>I think complexity comes not just from what can literally be done but also when there's different interfaces to the same thing, and x.py I think already suffers from that problem (e.g., which stage do you need to use, etc.)</p>\n<p>If we were <em>replacing</em> x.py's rather complex interface with something simpler, it's possible this would help, but as is I think it doesn't really</p>",
        "id": 250938346,
        "sender_full_name": "simulacrum",
        "timestamp": 1630073999
    },
    {
        "content": "<p>I think there is some value in having just x.py and just in one place. making it's invocation context dependent seems quite confusing to me</p>",
        "id": 250938347,
        "sender_full_name": "mw",
        "timestamp": 1630073999
    },
    {
        "content": "<p>I will admit one thing: the fact that they are all python scripts worry me</p>",
        "id": 250938358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074002
    },
    {
        "content": "<p>if they were shell scripts, and all like one line</p>",
        "id": 250938404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074011
    },
    {
        "content": "<p>(that each invokes <code>x.py</code>)</p>",
        "id": 250938418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074018
    },
    {
        "content": "<p>then I’d be more comfortable</p>",
        "id": 250938424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074022
    },
    {
        "content": "<p>about that preventing feature creep</p>",
        "id": 250938448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074028
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250938149\">said</a>:</p>\n<blockquote>\n<p>solution <code>y.py</code> for per-dir <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>\n</blockquote>\n<p>nooooo. <code>y.py</code> is already reserved for cg_clif :P</p>",
        "id": 250938462,
        "sender_full_name": "bjorn3",
        "timestamp": 1630074033
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250938404\">said</a>:</p>\n<blockquote>\n<p>if they were shell scripts, and all like one line</p>\n</blockquote>\n<p>sure, this seems fine</p>",
        "id": 250938493,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074049
    },
    {
        "content": "<p><code>z.py</code></p>",
        "id": 250938497,
        "sender_full_name": "oli",
        "timestamp": 1630074052
    },
    {
        "content": "<p>Anyway, maybe we should close this. The proposal as written is probably a no go</p>",
        "id": 250938517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074064
    },
    {
        "content": "<p>Yeah?</p>",
        "id": 250938525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074067
    },
    {
        "content": "<p>Though it wuold be good to collect <em>why</em> we’re not seconding it</p>",
        "id": 250938547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> do you think you’d be willing to write a comment capturing the heart of the feedback about why its being closed?</p>",
        "id": 250938589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074102
    },
    {
        "content": "<p>I think we should make <em>some</em> improvement here, but I agree as-written this is probably not the best approach</p>",
        "id": 250938594,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250938589\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> do you think you’d be willing to write a comment capturing the heart of the feedback about why its being closed?</p>\n</blockquote>\n<p>sure</p>",
        "id": 250938611,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074112
    },
    {
        "content": "<p>Okay great</p>",
        "id": 250938618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074115
    },
    {
        "content": "<p>so lets plan to close that. I’ll assume <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> will take action there.</p>",
        "id": 250938629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074119
    },
    {
        "content": "<p>yes, writing up a comment now</p>",
        "id": 250938712,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074140
    },
    {
        "content": "<p>next</p>",
        "id": 250938722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074145
    },
    {
        "content": "<h1>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></h1>",
        "id": 250938726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074146
    },
    {
        "content": "<p>I really like the idea of using rustfmt as a library instead that came up</p>",
        "id": 250938797,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074176
    },
    {
        "content": "<p>but rustfmt only supports per-item formatting right now</p>",
        "id": 250938815,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074183
    },
    {
        "content": "<p>(so e.g. you can't format a single expression)</p>",
        "id": 250938860,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074204
    },
    {
        "content": "<p>the ##<strong>t-compiler/major changes&gt;rustdoc is using rustc_ast_pretty, would … <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></strong>  zulip stream specifically said the use-case is to display attributes and macros</p>",
        "id": 250938978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074245
    },
    {
        "content": "<p>I'm not sure I understand what  \"somewhat 'stabilize' it so that no unexpected and potentially breaking changes come up\" is asking for. Is this about the rustc_ast_pretty api or the output?</p>",
        "id": 250938994,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630074253
    },
    {
        "content": "<p>the output</p>",
        "id": 250939004,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074258
    },
    {
        "content": "<p>the API is fine to break since rustdoc is in-tree</p>",
        "id": 250939033,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074268
    },
    {
        "content": "<p>Also what does it mean to \"somewhat stabilize\"? Is the output currently unstable in some way?</p>",
        "id": 250939073,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630074287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250938978\">said</a>:</p>\n<blockquote>\n<p>the ##<strong>t-compiler/major changes&gt;rustdoc is using rustc_ast_pretty, would … <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></strong>  zulip stream specifically said the use-case is to display attributes and macros</p>\n</blockquote>\n<p>we've since added code to format macros ourselves I believe</p>",
        "id": 250939090,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074297
    },
    {
        "content": "<p>Since the number of use cases seems … somewhat limited (attributes and macros), would it make sense to prioritize adding API to rustfmt for just those use cases?</p>",
        "id": 250939117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074311
    },
    {
        "content": "<p>but there's a weird combination of \"rewrite it from scratch\" and \"depend on rustc_ast_pretty\" which is not ... great</p>",
        "id": 250939128,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074315
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250939073\">said</a>:</p>\n<blockquote>\n<p>Also what does it mean to \"somewhat stabilize\"? Is the output currently unstable in some way?</p>\n</blockquote>\n<p>I think this came up from <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> actually - <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> didn't link the PR unfortunately so I can't find it</p>",
        "id": 250939192,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074343
    },
    {
        "content": "<p>but the gist was \"some changes to rustc_ast_pretty break rustdoc tests, which is not expected and adds a barrier to changing it for compiler contributors\"</p>",
        "id": 250939283,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074367
    },
    {
        "content": "<p>can we instead make rustdoc tests blessable?</p>",
        "id": 250939352,
        "sender_full_name": "oli",
        "timestamp": 1630074399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250939352\">said</a>:</p>\n<blockquote>\n<p>can we instead make rustdoc tests blessable?</p>\n</blockquote>\n<p>like src/test/rustdoc?</p>",
        "id": 250939377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074413
    },
    {
        "content": "<p>rustdoc-ui is already blessable</p>",
        "id": 250939403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074424
    },
    {
        "content": "<p>I think it would be very hard to make src/test/rustdoc blessable because there's no reference output</p>",
        "id": 250939439,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074441
    },
    {
        "content": "<p>ok</p>",
        "id": 250939451,
        "sender_full_name": "oli",
        "timestamp": 1630074446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250939439\">said</a>:</p>\n<blockquote>\n<p>I think it would be very hard to make src/test/rustdoc blessable because there's no reference output</p>\n</blockquote>\n<p>It's the least to be told...</p>",
        "id": 250939493,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074465
    },
    {
        "content": "<p>So, if we accepted this MCP, what action would we take based on that? Adding new tests earlier in the pipeline to catch changes during development? Or is this just a pinky-promise that it's \"stable\"?</p>",
        "id": 250939494,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630074465
    },
    {
        "content": "<p>Pinky-promise doesn’t seem like it accomplishes much</p>",
        "id": 250939539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074483
    },
    {
        "content": "<p>So yeah, maybe <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> makes a good point here</p>",
        "id": 250939595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074501
    },
    {
        "content": "<p>Right, I'm just not sure what changes if we accept this.</p>",
        "id": 250939599,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630074502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250939192\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250939073\">said</a>:</p>\n<blockquote>\n<p>Also what does it mean to \"somewhat stabilize\"? Is the output currently unstable in some way?</p>\n</blockquote>\n<p>I think this came up from <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> actually - <span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> didn't link the PR unfortunately so I can't find it</p>\n</blockquote>\n<p>There was no PR iirc, an attempt at something that didn't end up in a PR, only started the discussion.</p>",
        "id": 250939628,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074516
    },
    {
        "content": "<p>(I'm kind of in favor of seconding it but I want to know what we expect will change)</p>",
        "id": 250939657,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630074527
    },
    {
        "content": "<p>Lets close this and say that the focus should be on the concrete mechanisms that we’ll use to enforce pseudo-stability?</p>",
        "id": 250939662,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074528
    },
    {
        "content": "<p>I’m fine with the <em>idea</em> of trying to ensure that the output remains stable</p>",
        "id": 250939718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074552
    },
    {
        "content": "<p>Oh hi <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span></p>",
        "id": 250939758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074570
    },
    {
        "content": "<p>We have tests of the pretty print output already.</p>",
        "id": 250939766,
        "sender_full_name": "bjorn3",
        "timestamp": 1630074579
    },
    {
        "content": "<p>another related thing is it would be great to have a procedure for when it's ok to change rustc_ast_pretty for rustdoc</p>",
        "id": 250939849,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074604
    },
    {
        "content": "<p>yeah but people just bless them, right <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> ?</p>",
        "id": 250939872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074612
    },
    {
        "content": "<p>Probably</p>",
        "id": 250939906,
        "sender_full_name": "bjorn3",
        "timestamp": 1630074626
    },
    {
        "content": "<p>e.g. <a href=\"https://github.com/rust-lang/rust/pull/86282/files#diff-1e815311d4f7eb352f335f0b8f5eb6533af70640631d75c5f985dd6af58b4d42R143\">https://github.com/rust-lang/rust/pull/86282/files#diff-1e815311d4f7eb352f335f0b8f5eb6533af70640631d75c5f985dd6af58b4d42R143</a> kind of just slid in because I didn't know who to ask about it</p>",
        "id": 250939925,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074631
    },
    {
        "content": "<p>i.e. it sounds to me like part of the problem is that we have a culture of “just bless it”, but that technique doesn’t work for the rustdoc cases</p>",
        "id": 250939936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074635
    },
    {
        "content": "<p>So maybe we have a subset of teh pretty-print tests that are <em>not</em> blessable, and they focus just on the rustdoc needs: attributes and macros alone?</p>",
        "id": 250940010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074666
    },
    {
        "content": "<p>Depends which part, for rustdoc output itself, it's fine, for rustdoc generated content, it works less</p>",
        "id": 250940025,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074674
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250940010\">said</a>:</p>\n<blockquote>\n<p>So maybe we have a subset of teh pretty-print tests that are <em>not</em> blessable, and they focus just on the rustdoc needs: attributes and macros alone?</p>\n</blockquote>\n<p>rustdoc uses a lot more than attributes and macros</p>",
        "id": 250940087,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074699
    },
    {
        "content": "<p>those were just the ones that happened to be broken at the time the MCP was opened</p>",
        "id": 250940105,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074708
    },
    {
        "content": "<p>Oh, the number of uses for ast_pretty has grown beyond attributes and macros?</p>",
        "id": 250940175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074726
    },
    {
        "content": "<p>that wasn’t reflected in zulip conversation</p>",
        "id": 250940197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074736
    },
    {
        "content": "<p>oh hmm, maybe I'm just confused</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>&gt; rg rustc_ast_pretty src/librustdoc/\nsrc/librustdoc/json/conversions.rs\n42:            .map(rustc_ast_pretty::pprust::attribute_to_string)\n\nsrc/librustdoc/lib.rs\n33:extern crate rustc_ast_pretty;\n\nsrc/librustdoc/doctest.rs\n227:    use rustc_ast_pretty::pprust;\n\nsrc/librustdoc/clean/utils.rs\n575:    rustc_ast_pretty::pprust::tt_to_string(matcher)\n\nsrc/librustdoc/html/render/mod.rs\n46:use rustc_ast_pretty::pprust;\n(bash@pop-os) ~/src/rust [09:32:05]\n&gt; rg rustc_ast_pretty src/^C\n(bash@pop-os) ~/src/rust [09:32:12]\n&gt; rg pprust src/librustdoc/\nsrc/librustdoc/json/conversions.rs\n42:            .map(rustc_ast_pretty::pprust::attribute_to_string)\n\nsrc/librustdoc/doctest.rs\n227:    use rustc_ast_pretty::pprust;\n247:                    opts.attrs.push(pprust::meta_list_item_to_string(item));\n\nsrc/librustdoc/clean/utils.rs\n575:    rustc_ast_pretty::pprust::tt_to_string(matcher)\n\nsrc/librustdoc/html/render/mod.rs\n46:use rustc_ast_pretty::pprust;\n968:                Some(pprust::attribute_to_string(&amp;attr).replace(&quot;\\n&quot;, &quot;&quot;).replace(&quot;  &quot;, &quot; &quot;))\n</code></pre></div>\n<p>&lt;/details&gt;</p>",
        "id": 250940223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074748
    },
    {
        "content": "<p>I remember trying to use it for something a while back, but maybe <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> succeeded in talking me out of it</p>",
        "id": 250940255,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074763
    },
    {
        "content": "<p>Okay, well, what are teh right next steps here?</p>",
        "id": 250940304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074784
    },
    {
        "content": "<p>I think its clear that we aren’t seconding this MCP as written: Not because we dislike the idea</p>",
        "id": 250940327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074795
    },
    {
        "content": "<p>but because we think we need more detail about the reality of what’s going to happen</p>",
        "id": 250940348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074808
    },
    {
        "content": "<p>Does that sound right?</p>",
        "id": 250940359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> how do you feel about taking another shot at identifying <em>how</em> you’d accomplish enforcement of the stability you want?</p>",
        "id": 250940412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074840
    },
    {
        "content": "<p>I would like to have</p>\n<ul>\n<li>procedures for when it's ok to change ast_pretty for rustdoc</li>\n<li>for compiler contributors to not \"bless away\" changes to ast_pretty without asking the rustdoc team</li>\n</ul>",
        "id": 250940437,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074844
    },
    {
        "content": "<p>for the second, we could probably do that with an automatic ping, the same way subtrees get pinged</p>",
        "id": 250940490,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074860
    },
    {
        "content": "<p>That all sounds reasonable to me</p>",
        "id": 250940519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074876
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250940412\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"210316\">GuillaumeGomez</span> how do you feel about taking another shot at identifying <em>how</em> you’d accomplish enforcement of the stability you want?</p>\n</blockquote>\n<p>You mean besides relying on \"text display\"?</p>",
        "id": 250940551,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074888
    },
    {
        "content": "<p>I don’t know what you mean by “relying on text display\"</p>",
        "id": 250940605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074907
    },
    {
        "content": "<p>we print it and then compare the generated content with what we expect</p>",
        "id": 250940645,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074927
    },
    {
        "content": "<p>(this is how it's done currently)</p>",
        "id": 250940691,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074946
    },
    {
        "content": "<p>that sounds a lot like it could be blessable?</p>",
        "id": 250940722,
        "sender_full_name": "oli",
        "timestamp": 1630074960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> no, we don't have the full .html file</p>",
        "id": 250940792,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074972
    },
    {
        "content": "<p>if moved outside of <code>test/rustdoc</code>, yes</p>",
        "id": 250940819,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630074981
    },
    {
        "content": "<p>we can't make it blessable, it means it doesn't test anything at all</p>",
        "id": 250940829,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074984
    },
    {
        "content": "<p>there'd be no point to the test</p>",
        "id": 250940836,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630074988
    },
    {
        "content": "<p>I’m personally getting confused about what we’re saying we do today, and how we test it, and what is affected by bless.</p>",
        "id": 250940837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630074988
    },
    {
        "content": "<p>and I would kind of like to discuss the other MCPs</p>",
        "id": 250940884,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075007
    },
    {
        "content": "<p>Okay. Maybe <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> you and <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> can have private chat later about ideas here</p>",
        "id": 250940925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075025
    },
    {
        "content": "<p>(or it doesn’t need to be private)</p>",
        "id": 250940944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075033
    },
    {
        "content": "<p>Sure</p>",
        "id": 250940963,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630075040
    },
    {
        "content": "<p>(just, not now. We don’t need to resolve these questions here.)</p>",
        "id": 250940968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075043
    },
    {
        "content": "<p>and for now, we’ll close this MCP</p>",
        "id": 250941016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075062
    },
    {
        "content": "<p>next</p>",
        "id": 250941056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075081
    },
    {
        "content": "<h1>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a></h1>",
        "id": 250941064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075082
    },
    {
        "content": "<p>rustdoc really needs <em>something</em> to happen in this area. It doesn't need to be specifically this, but I know at least 5 different regressions related to this.</p>",
        "id": 250941234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075148
    },
    {
        "content": "<p>It seems from the <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Don.27t.20steal.20the.20resolver.20when.20lowering.20HI.E2.80.A6.20compiler-team.23437\">#t-compiler/major changes &gt; Don't steal the resolver when lowering HI… compiler-team#437</a> zulip topic that <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> has pretty strong feelings on this subject.</p>",
        "id": 250941320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075189
    },
    {
        "content": "<p>I think I’d like for <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> and <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> to resolve the questions about the problems with the alternative implementation strategy before we second or close this</p>",
        "id": 250941508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075259
    },
    {
        "content": "<p>Ok. <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> would you have time for a video/audio call in the next few weeks?</p>",
        "id": 250941551,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075281
    },
    {
        "content": "<p>(I need a few days to figure out where my code went, but after that it will be faster to talk live)</p>",
        "id": 250941575,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075295
    },
    {
        "content": "<p>i.e. my gut feeling is that <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> is probably right, that the correct choice is indeed a lot of work, but its better than incurring more tech debt here.</p>",
        "id": 250941590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075301
    },
    {
        "content": "<p>I do not consider this tech debt. My understanding is we want to the resolver to be involved in incremental at some point <em>anyway</em></p>",
        "id": 250941635,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075322
    },
    {
        "content": "<p>Though <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> makes good points about the different constraints that rustdoc has to deal with.</p>",
        "id": 250941649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075323
    },
    {
        "content": "<p>I'm just suggesting we do it sooner rather than later</p>",
        "id": 250941707,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075340
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Don't.20steal.20the.20resolver.20when.20lowering.20HI.E2.80.A6.20compiler-team.23437/near/243791243\">said</a>:</p>\n<blockquote>\n<p>another possible alternative is to do this in the opposite order: store <em>only</em> a read-only resolver on TyCtxt, start tracking changes to it in the query system, and only then allow rustdoc to mutate it. That's a lot more time and effort, but it seems more correct and inline with the compiler's long-term goals</p>\n</blockquote>",
        "id": 250941898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075438
    },
    {
        "content": "<p>are there more thoughts on this approach?</p>",
        "id": 250941945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075445
    },
    {
        "content": "<p>I didn’t see any feedback from <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> on that idea</p>",
        "id": 250941994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075470
    },
    {
        "content": "<p>Okay well the point is, I don’t think we can make a decision about this MCP right now</p>",
        "id": 250942036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075491
    },
    {
        "content": "<p>and I think <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> knows whom they need to talk to. :)</p>",
        "id": 250942066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075503
    },
    {
        "content": "<p>lets move along then</p>",
        "id": 250942106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075515
    },
    {
        "content": "<h1>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a></h1>",
        "id": 250942125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075525
    },
    {
        "content": "<p>Okay, lay it on me everyone: Why isn’t this seconded?</p>",
        "id": 250942194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075556
    },
    {
        "content": "<p>I don't think this is a _bad_ idea, but I do think approving different outputs in the first place was a bad idea</p>",
        "id": 250942259,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075568
    },
    {
        "content": "<p>but that's harder to prevent automatically</p>",
        "id": 250942273,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075574
    },
    {
        "content": "<p>“approving different outputs\"</p>",
        "id": 250942335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075598
    },
    {
        "content": "<p>what do you mean by that? Allowing stage1 and stage2 codegen to differ?</p>",
        "id": 250942351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250942351\">said</a>:</p>\n<blockquote>\n<p>what do you mean by that? Allowing stage1 and stage2 codegen to differ?</p>\n</blockquote>\n<p>the original reason you opened the issue is that rustdoc's stderr for a doctest was different for stage1 and stage2</p>",
        "id": 250942420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075634
    },
    {
        "content": "<p>and it caused you to get confused, because you'd never explicitly run rustdoc tests and you thought they weren't being run in CI</p>",
        "id": 250942467,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075651
    },
    {
        "content": "<p>I'm saying that when I approved that change I made a mistake</p>",
        "id": 250942505,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075667
    },
    {
        "content": "<p>okay I see</p>",
        "id": 250942519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075673
    },
    {
        "content": "<p>If we <em>did</em> do stage1 tests in CI</p>",
        "id": 250942663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075717
    },
    {
        "content": "<p>then that should have caught what you did, right <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> ?</p>",
        "id": 250942682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075724
    },
    {
        "content": "<p>or no</p>",
        "id": 250942721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075738
    },
    {
        "content": "<p>or yes?</p>",
        "id": 250942744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075747
    },
    {
        "content": "<p>/me has a lot of context to reload here</p>",
        "id": 250942759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075755
    },
    {
        "content": "<p>yes, I think so</p>",
        "id": 250942776,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075761
    },
    {
        "content": "<p>I think we should discuss exactly <em>what</em> subset to run</p>",
        "id": 250942797,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075769
    },
    {
        "content": "<p>but once we do that I'd be happy to second :)</p>",
        "id": 250942813,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630075776
    },
    {
        "content": "<p>That sounds fair</p>",
        "id": 250942824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075782
    },
    {
        "content": "<p>much like the “stablize ast_pretty”, I can believe this MCP is too light on detail for us to take action on it immediately</p>",
        "id": 250942869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075801
    },
    {
        "content": "<p>that’s the kind of feedback I need to make forward motion on it</p>",
        "id": 250942943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075816
    },
    {
        "content": "<p>Okay then, I know what I need to do then. Lets move along</p>",
        "id": 250942966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075825
    },
    {
        "content": "<h1>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a></h1>",
        "id": 250943021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075846
    },
    {
        "content": "<p>There is some important feedback in <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Accept.20.02klzzwxh.3A0000.03.20in.20place.20of.20.02klzzwxh.3A0001.03.20and.20.60un.E2.80.A6.20compiler-team.23441\">#t-compiler/major changes &gt; Accept <code>pc</code> in place of <code>unknown</code> and `un… compiler-team#441</a></p>",
        "id": 250943172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075898
    },
    {
        "content": "<p>in particular, I thought <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> ’s note that \" I really appreciate that rustc only uses a single canonical string for a target. “ is worthwhile</p>",
        "id": 250943449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630075987
    },
    {
        "content": "<p>at the same time, I think it can make sense to be liberal in what we accpet, and still normalize to the current canonical forms...</p>",
        "id": 250943523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076018
    },
    {
        "content": "<p>How good are our error diagnostics here? Do we at least <em>suggest</em> the right thing when someone writes <code>pc</code> instead of <code>unknown</code> or vice versa?</p>",
        "id": 250943617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076044
    },
    {
        "content": "<p>Good diagnostics only help humans, I suppose; they may not help GNU autotools all that much</p>",
        "id": 250943714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076085
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250943617\">said</a>:</p>\n<blockquote>\n<p>How good are our error diagnostics here? Do we at least <em>suggest</em> the right thing when someone writes <code>pc</code> instead of <code>unknown</code> or vice versa?</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>error: Error loading target specification: Could not find specification for target &quot;x86_64-pc-linux-gnu&quot;. Run `rustc --print target-list` for a list of built-in targets\n</code></pre></div>",
        "id": 250943822,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630076133
    },
    {
        "content": "<p>See, we could do a lot better there</p>",
        "id": 250943858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076147
    },
    {
        "content": "<p>I’d be more inclined to spend our effort on something that, upon getting no hits for <code>x86_64-pc-linux-gnu</code>, did a fallback after <code>sed -s s/-pc-/-unknown-/</code> and then suggested the appropriate change</p>",
        "id": 250943981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076194
    },
    {
        "content": "<p>reading further along in the zulip discussion, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> indicated that an RFC might be warranted here</p>",
        "id": 250944072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076236
    },
    {
        "content": "<p>I’m certainly not prepared to second this as written</p>",
        "id": 250944145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076272
    },
    {
        "content": "<p>The only question is whether to close it</p>",
        "id": 250944162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076278
    },
    {
        "content": "<p>From reading the IRLO thread this feels like it's potentially also a lang-team concern.</p>",
        "id": 250944174,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630076281
    },
    {
        "content": "<p>I have a vague recollection that lang team may have discussed and then punted back to compiler team. But that might have been about something else (maybe the vendor thing)</p>",
        "id": 250944288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076313
    },
    {
        "content": "<p>I guess I’m not prepared to close it yet either</p>",
        "id": 250944453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076381
    },
    {
        "content": "<p>I think I need to talk to someone with more experience with autotools</p>",
        "id": 250944581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076414
    },
    {
        "content": "<p>to better understand the reality of how hard we are making life there</p>",
        "id": 250944617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076423
    },
    {
        "content": "<p>So okay, lets not take any action there yet</p>",
        "id": 250944692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076447
    },
    {
        "content": "<p>And with that, the hour is up</p>",
        "id": 250944713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076454
    },
    {
        "content": "<p>Hey, thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for coming. This was super useful and fun</p>",
        "id": 250944757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076468
    },
    {
        "content": "<p>(we got through 5 out of the 8 open MCP’s. That’s not bad!)</p>",
        "id": 250944842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1630076502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/250940490\">said</a>:</p>\n<blockquote>\n<p>for the second, we could probably do that with an automatic ping, the same way subtrees get pinged</p>\n</blockquote>\n<p>But doesn't highfive only ping if the diff contained a change when the PR was opened? Often people don't bless until after the PR is open, because CI fails, and I think in that case we wouldn't get a ping.</p>",
        "id": 251082916,
        "sender_full_name": "Noah Lev",
        "timestamp": 1630185436
    },
    {
        "content": "<p>Then we should fix that bug, I've been meaning to do it for rustfmt anyway</p>",
        "id": 251091373,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630195075
    },
    {
        "content": "<p>I haven't had as much time for open source as I'd like lately :(</p>",
        "id": 251091418,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630195093
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-08-27/near/251091373\">said</a>:</p>\n<blockquote>\n<p>Then we should fix that bug, I've been meaning to do it for rustfmt anyway</p>\n</blockquote>\n<p>What do you mean by \"for rustfmt\"?</p>",
        "id": 251095869,
        "sender_full_name": "Noah Lev",
        "timestamp": 1630200550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> <a href=\"https://github.com/rust-lang/highfive/issues/337\">https://github.com/rust-lang/highfive/issues/337</a></p>",
        "id": 251102063,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630208159
    }
]