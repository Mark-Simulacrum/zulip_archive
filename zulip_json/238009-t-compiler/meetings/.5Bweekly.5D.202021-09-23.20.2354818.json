[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/GtwX44b4QwOSG-G5ZRMqRA\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@_WG-rls2.0_ by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>, anything to share?</li>\n<li>@_WG-rfc-2229_ by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>, anything to share?</li>\n</ul>",
        "id": 254523547,
        "sender_full_name": "apiraino",
        "timestamp": 1632398926
    },
    {
        "content": "<p>Checkin from <span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>:</p>\n<p>Steering issue covered by this checkin:</p>\n<ul>\n<li><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/9925\">https://github.com/rust-analyzer/rust-analyzer/issues/9925</a></li>\n</ul>\n<p>This sprint has seen a lot of improvements and fixes for experimental attribute support bringing the feature closer to being enabled by default.<br>\nWe fixed a memory leak in our <a href=\"https://github.com/rust-analyzer/rowan/pull/112\">syntax tree library</a> as well as improving <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/10069\">compile times a bunch</a>.<br>\nOur parser has seen some cleanups and we started implementing IDE support for macros reusing spans for multiple output tokens.</p>",
        "id": 254537075,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1632404629
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>. Felix is out today so I'm running the meeting. Leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here.</p>",
        "id": 254539605,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405666
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 254539669,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405697
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2021-09-24T14:00:00Z\">2021-09-24T10:00:00-04:00</time>, <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Compiler Team Planning meeting</a></li>\n</ul>",
        "id": 254539685,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405707
    },
    {
        "content": "<ul>\n<li>Tomorrow <time datetime=\"2021-09-24T14:00:00Z\">2021-09-24T10:00:00-04:00</time>, Polonius Hackaton (is there a link for this topic?)</li>\n</ul>",
        "id": 254539697,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405713
    },
    {
        "content": "<p>I assume that's probably happening over in <a class=\"stream\" data-stream-id=\"186049\" href=\"/#narrow/stream/186049-t-compiler.2Fwg-polonius\">#t-compiler/wg-polonius</a></p>",
        "id": 254539803,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405742
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 254539822,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405751
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/462\">compiler-team#462</a></li>\n</ul>\n</li>\n</ul>",
        "id": 254539843,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405763
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last review activity: GH none, Zulip: +2months ago)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last review activity: GH none, Zulip: about 1 month ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: GH none, Zulip: about 3 months ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last review activity: GH none, Zulip: about 2 months ago)</li>\n<li>\"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a> (last review activity: GH none, Zulip: about 1 month ago)</li>\n<li>\"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a> (last review activity: GH none, Zulip: about 15 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 254539882,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405779
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 254539944,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405803
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 254539960,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405808
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Add <code>pie</code> relocation-model\" <a href=\"https://github.com/rust-lang/compiler-team/issues/461\">compiler-team#461</a></li>\n</ul>\n</li>\n</ul>",
        "id": 254539964,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405810
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>No new finished FCP (disposition merge) this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 254539975,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405816
    },
    {
        "content": "<p>I see the checkin from wg-rls2.0 above, thanks <span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span>!</p>",
        "id": 254540153,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405872
    },
    {
        "content": "<p>Do we have anything to report from wg-rfc-2229? cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> or <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 254540219,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632405898
    },
    {
        "content": "<p>Well</p>",
        "id": 254540274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405918
    },
    {
        "content": "<p>Short version: this is shipping with Rust 2021, but there are some backports for a few bugs</p>",
        "id": 254540310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405933
    },
    {
        "content": "<p>I have to prepare a patch today for one of those :)</p>",
        "id": 254540348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405945
    },
    {
        "content": "<p>I'm trying to remember the details ...</p>",
        "id": 254540437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405964
    },
    {
        "content": "<p>Ah, yes:</p>",
        "id": 254540502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405991
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/89144\">https://github.com/rust-lang/rust/pull/89144</a></p>",
        "id": 254540505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632405992
    },
    {
        "content": "<p>So one thing is this code that helps the migration by skipping \"insignificant destructors\"</p>",
        "id": 254540544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406006
    },
    {
        "content": "<p>and the other is an edge case in destructor ordering</p>",
        "id": 254540559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406012
    },
    {
        "content": "<p>(if you capture all the fields of a struct, then we will drop them in the order of use, but we used to drop them in the order in which they appeared in the struct)</p>",
        "id": 254540607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406032
    },
    {
        "content": "<p>(this is because the closure now has a separate variable for each field)</p>",
        "id": 254540630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406038
    },
    {
        "content": "<p>(I'll probably add some sorting to preserve the old order \"just because\", but there is an interesting question of what guarantees (if any) we give around this sort of thing -- I am thinking \"none\")</p>",
        "id": 254540676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406060
    },
    {
        "content": "<p>I guess that's a lang question but perhaps people here have an opinion :)</p>",
        "id": 254540695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406069
    },
    {
        "content": "<p>that's all!</p>",
        "id": 254540698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406071
    },
    {
        "content": "<p>Do you think that's under control or should we coordinate some help with backports/bug fixes?</p>",
        "id": 254540707,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406076
    },
    {
        "content": "<p>Hmm, good question! I think it's under control, but if somebody is interested in preparing that PR, it might be good, to get more global expertise in this code</p>",
        "id": 254540816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406107
    },
    {
        "content": "<p>I think I have an hour to do it, I'm hoping that will be enough</p>",
        "id": 254540833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406114
    },
    {
        "content": "<p>Ok, let me know if you need to hand it off and I will find some time to work on it.</p>",
        "id": 254540943,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406156
    },
    {
        "content": "<p>one thing we could do, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, is just \"pair program\" it</p>",
        "id": 254540978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406173
    },
    {
        "content": "<p>if that works for you :)</p>",
        "id": 254540996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632406178
    },
    {
        "content": "<p>Yeah, that sounds good! I'll message you after and we can set that up.</p>",
        "id": 254541056,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406202
    },
    {
        "content": "<h2>Backport nominations</h2>",
        "id": 254541136,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406222
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 254541160,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406230
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Disable RemoveZsts in generators to avoid query cycles\" <a href=\"https://github.com/rust-lang/rust/pull/88979\">rust#88979</a><ul>\n<li>fixes regression <a href=\"https://github.com/rust-lang/rust/issues/88972\">rust#88972</a> on stable-to-beta for 1.56</li>\n</ul>\n</li>\n</ul>",
        "id": 254541189,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406238
    },
    {
        "content": "<p>I think we should backport unless there are objections.</p>",
        "id": 254541335,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406296
    },
    {
        "content": "<p>I'm ok with backporting, but why are we backporting something that needs a nightly feature to trigger? async fns?<br>\nEdit: nevermind, saw the test</p>",
        "id": 254541430,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632406325
    },
    {
        "content": "<p>Looks small and low risk</p>",
        "id": 254541496,
        "sender_full_name": "mw",
        "timestamp": 1632406345
    },
    {
        "content": "<p>It's also consistent with what we do in other MIR opts.</p>",
        "id": 254541631,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406389
    },
    {
        "content": "<p>Ok, backport approved.</p>",
        "id": 254541644,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406394
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix linting when trailing macro expands to a trailing semi\" <a href=\"https://github.com/rust-lang/rust/pull/88996\">rust#88996</a><ul>\n<li>fixes regression <a href=\"https://github.com/rust-lang/rust/issues/87757\">rust#87757</a> on stable-to-beta for 1.56</li>\n</ul>\n</li>\n</ul>",
        "id": 254541680,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406405
    },
    {
        "content": "<p>Ok, backport approved as well.</p>",
        "id": 254542025,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406531
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 254542041,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406538
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 254542060,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406545
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>",
        "id": 254542088,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406555
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 254542107,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406560
    },
    {
        "content": "<ul>\n<li>\"On macOS, make strip=\"symbols\" not pass any options to strip\" <a href=\"https://github.com/rust-lang/rust/pull/88137\">rust#88137</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></li>\n<li>Also <code>I-nominated</code></li>\n</ul>\n</li>\n</ul>",
        "id": 254542156,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406564
    },
    {
        "content": "<p>I nominated for discussion 1) because although the changes look reasonable, I'm not an expert on macOS, and 2) because of this ping in the referenced tracking issue <a href=\"https://github.com/rust-lang/rust/issues/72110#issuecomment-912909231\">https://github.com/rust-lang/rust/issues/72110#issuecomment-912909231</a></p>",
        "id": 254542174,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632406570
    },
    {
        "content": "<blockquote>\n<p>Could someone on <code>@rust-lang/compiler</code> familiar with macOS review <a href=\"https://github.com/rust-lang/rust/issues/88137\">#88137</a> , please? I think that may be the last blocker to stabilizing strip support in rust and then in cargo.</p>\n</blockquote>",
        "id": 254542235,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632406592
    },
    {
        "content": "<p>Thanks for the context <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>!</p>",
        "id": 254542245,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406596
    },
    {
        "content": "<p>do we have any macOS experts in any of the teams?</p>",
        "id": 254542270,
        "sender_full_name": "mw",
        "timestamp": 1632406606
    },
    {
        "content": "<p>I recall mildly Felix using a mac.</p>",
        "id": 254542325,
        "sender_full_name": "nagisa",
        "timestamp": 1632406628
    },
    {
        "content": "<p>Felix and I use macs, but we ssh for developing.</p>",
        "id": 254542418,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632406667
    },
    {
        "content": "<p>I use a Mac. I’m hardly an expert but I can try and take a look.</p>",
        "id": 254542434,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1632406674
    },
    {
        "content": "<p>More eyes are always appreciated!</p>",
        "id": 254542521,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406695
    },
    {
        "content": "<p>My take on this issue is while the flag is unstable, _any_ minimum viable implementation is okay.</p>",
        "id": 254542524,
        "sender_full_name": "nagisa",
        "timestamp": 1632406696
    },
    {
        "content": "<p>Perhaps we could run this by Alex Crichton? I think he has some knowledge of macos.</p>",
        "id": 254542644,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406750
    },
    {
        "content": "<p>But we should not stabilize the option without extensive vetting of all the implementations of this option.</p>",
        "id": 254542700,
        "sender_full_name": "nagisa",
        "timestamp": 1632406771
    },
    {
        "content": "<p>(I personally consider that a better implementation might likely involve using something like the <code>object</code> crate or somesuch and not shelling out to a cli tool)</p>",
        "id": 254542846,
        "sender_full_name": "nagisa",
        "timestamp": 1632406811
    },
    {
        "content": "<p>I will send Alex a message and see if he has any insight. If we can't find someone, I think we can still review and sign off and then reach out to the wider Rust community to get testing before moving to stablize.</p>",
        "id": 254542994,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406868
    },
    {
        "content": "<h2>Most recent PRs waiting for review</h2>",
        "id": 254543111,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406912
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 254543120,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406917
    },
    {
        "content": "<ul>\n<li>\"Distribute cg_clif as rustup component on the nightly channel\" <a href=\"https://github.com/rust-lang/rust/pull/81746\">rust#81746</a> (last review activity: 7 months ago)</li>\n</ul>",
        "id": 254543174,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406924
    },
    {
        "content": "<p>IIRC this was also blocked on another PR to rust-installer?</p>",
        "id": 254543251,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632406956
    },
    {
        "content": "<p>that rust-installer PR has seen some activity recently</p>",
        "id": 254543346,
        "sender_full_name": "lqd",
        "timestamp": 1632407000
    },
    {
        "content": "<p>Found it <a href=\"https://github.com/rust-lang/rust-installer/pull/112\">https://github.com/rust-lang/rust-installer/pull/112</a></p>",
        "id": 254543398,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407024
    },
    {
        "content": "<p>I don't see an urgent need to review while there's open upstream work happening as we can't merge yet anyway. Since that other PR has been getting some attention, I think we can leave this alone for now.</p>",
        "id": 254543724,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407140
    },
    {
        "content": "<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last review activity: 3 months ago)</li>\n</ul>",
        "id": 254543739,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407148
    },
    {
        "content": "<p>This is still waiting on me to finish reviewing. I made some good progress this past week clearing out my review queue but haven't gotten to this yet. Still planning to review though.</p>",
        "id": 254543878,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407194
    },
    {
        "content": "<ul>\n<li>\"Add basic checks for well-formedness of <code>fn</code>/<code>fn_mut</code> lang items\" <a href=\"https://github.com/rust-lang/rust/pull/86246\">rust#86246</a> (last review activity: 3 months ago)</li>\n</ul>",
        "id": 254543905,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407204
    },
    {
        "content": "<p>I see Felix assigned this to himself a few weeks ago to review.</p>",
        "id": 254544016,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407248
    },
    {
        "content": "<p>I believe there was also a question if the lang team felt they needed to sign off on this but I <em>think</em> that has been answered and this is firmly in T-compiler's prevue.</p>",
        "id": 254544141,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407287
    },
    {
        "content": "<p>I'll just leave a note for Felix reminding him to please review.</p>",
        "id": 254544300,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407353
    },
    {
        "content": "<ul>\n<li>\"Account for incorrect <code>impl Foo&lt;const N: ty&gt; {}</code> syntax\" <a href=\"https://github.com/rust-lang/rust/pull/85346\">rust#85346</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 254544471,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407412
    },
    {
        "content": "<p>I was supposed to ping Felix about this one after last monday, failed to do so (busy with other things)</p>",
        "id": 254544650,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632407475
    },
    {
        "content": "<p>I'll try to do that today/tomorrow</p>",
        "id": 254544696,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632407483
    },
    {
        "content": "<p>Well that is interesting.</p>",
        "id": 254544735,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407497
    },
    {
        "content": "<p>(I'm breaking rustfmt _somehow_, no idea what's going on there)</p>",
        "id": 254544778,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1632407514
    },
    {
        "content": "<p>Is there a <code>span</code> fn from a trait that is no longer resolving to the trait method and is instead now resolving to the inherent method or something?</p>",
        "id": 254544899,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407544
    },
    {
        "content": "<p>Hmm. I guess we should not try to resolve in this meeting <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 254545163,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407637
    },
    {
        "content": "<p>It sounds like this under control though.</p>",
        "id": 254545228,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407648
    },
    {
        "content": "<ul>\n<li>\"Diagnostic tweaks\" <a href=\"https://github.com/rust-lang/rust/pull/85102\">rust#85102</a> (last review activity: 2 months ago)</li>\n</ul>",
        "id": 254545249,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407656
    },
    {
        "content": "<p>Ok, we just need a new reviewer. Done.</p>",
        "id": 254545434,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407713
    },
    {
        "content": "<h2>Issues of Note</h2>",
        "id": 254545452,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407723
    },
    {
        "content": "<h3>Short Summary</h3>",
        "id": 254545463,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407728
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">0 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">80 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">54 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 5 P-high, 4 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 46 P-high, 83 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 254545488,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407736
    },
    {
        "content": "<h3>P-critical</h3>",
        "id": 254545505,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407744
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 254545520,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407750
    },
    {
        "content": "<p>Excellent!</p>",
        "id": 254545534,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407754
    },
    {
        "content": "<h3>P-high regressions</h3>",
        "id": 254545565,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407761
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>",
        "id": 254545616,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407767
    },
    {
        "content": "<ul>\n<li>\"regression: int_roundings conflicts with existing APIs\" <a href=\"https://github.com/rust-lang/rust/issues/88971\">rust#88971</a></li>\n</ul>",
        "id": 254545628,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407773
    },
    {
        "content": "<p>Libs issue and under control <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 254545729,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407795
    },
    {
        "content": "<p>interestings comments for this<br>\n<a href=\"https://github.com/rust-lang/rust/issues/88971#issuecomment-925254090\">https://github.com/rust-lang/rust/issues/88971#issuecomment-925254090</a><br>\nand<br>\n<a href=\"https://github.com/rust-lang/rust/issues/88971#issuecomment-925267835\">https://github.com/rust-lang/rust/issues/88971#issuecomment-925267835</a></p>",
        "id": 254545736,
        "sender_full_name": "apiraino",
        "timestamp": 1632407797
    },
    {
        "content": "<p>ah right it's t-libs ballpark</p>",
        "id": 254545787,
        "sender_full_name": "apiraino",
        "timestamp": 1632407818
    },
    {
        "content": "<p>This has come up quite a few times before.</p>",
        "id": 254545876,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407853
    },
    {
        "content": "<p>The same kind of issue I mean.</p>",
        "id": 254545940,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407876
    },
    {
        "content": "<p>Let's keep moving :)</p>",
        "id": 254545949,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407880
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 254546010,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407886
    },
    {
        "content": "<ul>\n<li>\"<code>zvariant</code> fails to compile on latest nightly: size cannot be statically determined\" <a href=\"https://github.com/rust-lang/rust/issues/89119\">rust#89119</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> opened PR <a href=\"https://github.com/rust-lang/rust/pull/89125\">rust#89125</a> (already merged in master)</li>\n</ul>\n</li>\n</ul>",
        "id": 254546025,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407892
    },
    {
        "content": "<p>Great work <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> as usual! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 254546139,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407928
    },
    {
        "content": "<h2>Performance logs</h2>",
        "id": 254546160,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407935
    },
    {
        "content": "<p>Well, I caused that issue in the first place :)</p>",
        "id": 254546178,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1632407942
    },
    {
        "content": "<p>Still <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 254546230,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407956
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-21.md\">triage logs for 2021-09-21</a></p>\n</blockquote>\n<p>A nice week: more improvements than regressions.</p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=9f85cd6f2ab2769c16e89dcdddb3e11d9736b351&amp;end=7743c9fadd64886d537966ba224b9c20e6014a59&amp;absolute=false&amp;stat=instructions%3Au\">9f85cd6f2ab2769c16e89dcdddb3e11d9736b351..7743c9fadd64886d537966ba224b9c20e6014a59</a></p>\n<p>2 Regressions, 4 Improvements, 8 Mixed; ??? of them in rollups<br>\n44 comparisons made in total</p>",
        "id": 254546240,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407959
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Point at argument instead of call for their obligations <a href=\"https://github.com/rust-lang/rust/issues/88719\">#88719</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e4828d5b7f745a9e867a9b0cc7f080f287bcf55d&amp;end=e36621057d9f497c822eb800934b5933c10510cf&amp;stat=instructions:u\">instruction counts</a> (up to 1.9% on <code>full</code> builds of <code>diesel</code>)</li>\n</ul>\n<p>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/89047\">#89047</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e0c38af27cb5f6f961809601b717d6afc3b190ee&amp;end=207d9558d00dd5cc438a6418ba96912d396e2155&amp;stat=instructions:u\">instruction counts</a> (up to 1.9% on <code>incr-unchanged</code> builds of <code>webrender-wrench</code>)</li>\n</ul>",
        "id": 254546280,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407969
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Avoid unnecessary formatting when trace log level is disabled <a href=\"https://github.com/rust-lang/rust/issues/88934\">#88934</a></li>\n<li>Fast reject for NeedsNonConstDrop <a href=\"https://github.com/rust-lang/rust/issues/88965\">#88965</a></li>\n<li>Avoid codegen for Result::into_ok in lang_start <a href=\"https://github.com/rust-lang/rust/issues/88988\">#88988</a></li>\n<li>Don't inline OnceCell initialization closures <a href=\"https://github.com/rust-lang/rust/issues/89031\">#89031</a></li>\n</ul>",
        "id": 254546290,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407975
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Const drop <a href=\"https://github.com/rust-lang/rust/issues/88558\">#88558</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=c3c0f80d6081092faff801542dd82f0e2420152b&amp;end=cdeba02ff71416e014f7130f75166890688be986&amp;stat=instructions:u\">instruction counts</a> (up to -1.7% on <code>full</code> builds of <code>externs</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c3c0f80d6081092faff801542dd82f0e2420152b&amp;end=cdeba02ff71416e014f7130f75166890688be986&amp;stat=instructions:u\">instruction counts</a> (up to 2.7% on <code>full</code> builds of <code>html5ever</code>)</li>\n<li>Regression addressed by followup PRs <a href=\"https://github.com/rust-lang/rust/issues/88965\">#88965</a> (which has landed) and <a href=\"https://github.com/rust-lang/rust/issues/88963\">#88963</a> (which has not yet landed).</li>\n</ul>\n<p>Introduce a fast path that avoids the <code>debug_tuple</code> abstraction when deriving Debug for unit-like enum variants. <a href=\"https://github.com/rust-lang/rust/issues/88832\">#88832</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e36621057d9f497c822eb800934b5933c10510cf&amp;end=78a46efff06558674b51c10d8d81758285746ab5&amp;stat=instructions:u\">instruction counts</a> (up to -4.5% on <code>full</code> builds of <code>stm32f4</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e36621057d9f497c822eb800934b5933c10510cf&amp;end=78a46efff06558674b51c10d8d81758285746ab5&amp;stat=instructions:u\">instruction counts</a> (up to 1.3% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Already <a href=\"https://github.com/rust-lang/rust/pull/88832#issuecomment-919967148\">triaged by simulacrum</a>, noting that the instruction count regressions are justified because the same benchmarks do not regress in cycles.</li>\n</ul>\n<p>Remove concept of 'completion' from the projection cache <a href=\"https://github.com/rust-lang/rust/issues/88945\">#88945</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=1c03f0d0ba4fee54b7aa458f4d3ad989d8bf7b34&amp;end=e0c38af27cb5f6f961809601b717d6afc3b190ee&amp;stat=instructions:u\">instruction counts</a> (up to -0.3% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=1c03f0d0ba4fee54b7aa458f4d3ad989d8bf7b34&amp;end=e0c38af27cb5f6f961809601b717d6afc3b190ee&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>full</code> builds of <code>wg-grammar</code>)</li>\n<li>Wrote <a href=\"https://github.com/rust-lang/rust/pull/88945#issuecomment-924384164\">comment</a> noting that scope of regression was limited but might still be worth investigating, at least briefly.</li>\n</ul>\n<p>Simplify lazy DefPathHash decoding by using an on-disk hash table. <a href=\"https://github.com/rust-lang/rust/issues/82183\">#82183</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=23afad6e7f0ff17320411a274f3a3beb92452235&amp;end=d6cd2c6c877110748296760aefddc21a0ea1d316&amp;stat=instructions:u\">instruction counts</a> (up to -7.7% on <code>incr-unchanged</code> builds of <code>deeply-nested</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=23afad6e7f0ff17320411a274f3a3beb92452235&amp;end=d6cd2c6c877110748296760aefddc21a0ea1d316&amp;stat=instructions:u\">instruction counts</a> (up to 1.9% on <code>incr-full</code> builds of <code>coercions</code>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/82183#issuecomment-924367405\">Triaged</a>: the wins here massively outweigh the few slight losses.</li>\n</ul>\n<p>Gather module items after lowering. <a href=\"https://github.com/rust-lang/rust/issues/88703\">#88703</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=697118d23eaa5d59940befabedcafbaceaf61a1c&amp;end=7b5f95270f1ef7118ef4d3b47428054d23113ad5&amp;stat=instructions:u\">instruction counts</a> (up to -1.3% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>\n<p>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=697118d23eaa5d59940befabedcafbaceaf61a1c&amp;end=7b5f95270f1ef7118ef4d3b47428054d23113ad5&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>incr-unchanged</code> builds of <code>tuple-stress</code>)<br>\n<a href=\"https://github.com/rust-lang/rust/issues/88703\">https://github.com/rust-lang/rust/issues/88703</a></p>\n</li>\n<li>\n<p>Wrote <a href=\"https://github.com/rust-lang/rust/pull/88703#issuecomment-924388131\">wishy-washy comment</a> noting that this is indeed a mixed result and it may not be worth investigating, but didn't pull trigger on adding triaged label.</p>\n</li>\n</ul>\n<p>Querify <code>FnAbi::of_{fn_ptr,instance}</code> as <code>fn_abi_of_{fn_ptr,instance}</code>. <a href=\"https://github.com/rust-lang/rust/issues/88575\">#88575</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=5ecc8ad8462574354a55162a0c16b10eb95e3e70&amp;end=91198820d7e697def79177c022b5e98b3d482ddc&amp;stat=instructions:u\">instruction counts</a> (up to -1.0% on <code>full</code> builds of <code>regression-31157</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=5ecc8ad8462574354a55162a0c16b10eb95e3e70&amp;end=91198820d7e697def79177c022b5e98b3d482ddc&amp;stat=instructions:u\">instruction counts</a> (up to 1.4% on <code>incr-unchanged</code> builds of <code>regression-31157</code>)</li>\n<li>Left <a href=\"https://github.com/rust-lang/rust/pull/88575#issuecomment-924402503\">comment</a> that didn't even bother to take time to be wishy-washy.</li>\n</ul>\n<p>Use &lt;[T; N]&gt;::map in Sharded instead of SmallVec and unsafe code <a href=\"https://github.com/rust-lang/rust/issues/89069\">#89069</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=db1fb85cff63ad5fffe435e17128f99f9e1d970c&amp;end=3bb9eecf07630be796c587a4bba70c49ae6a1bae&amp;stat=instructions:u\">instruction counts</a> (up to -0.3% on <code>incr-unchanged</code> builds of <code>ucd</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=db1fb85cff63ad5fffe435e17128f99f9e1d970c&amp;end=3bb9eecf07630be796c587a4bba70c49ae6a1bae&amp;stat=instructions:u\">instruction counts</a> (up to 2.8% on <code>incr-full</code> builds of <code>ctfe-stress-4</code>)</li>\n<li>Left <a href=\"https://github.com/rust-lang/rust/pull/89069#issuecomment-924405935\">comment</a>; the estimated effect looks pretty different from when the PR was filed vs when it landed, but either way it is probably noise.</li>\n</ul>\n<p>Lower only one HIR owner at a time <a href=\"https://github.com/rust-lang/rust/issues/87234\">#87234</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e7958d35ca2c898a223efe402481e0ecb854310a&amp;end=49c0861ed0fa1d95186d88df0cd4310103e70957&amp;stat=instructions:u\">instruction counts</a> (up to -1.3% on <code>full</code> builds of <code>unused-warnings</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e7958d35ca2c898a223efe402481e0ecb854310a&amp;end=49c0861ed0fa1d95186d88df0cd4310103e70957&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87234#issuecomment-924407705\">Triaged</a></li>\n</ul>",
        "id": 254546337,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632407998
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89125\">#89125 Don't use projection cache or candidate cache in intercrate mode</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/89031\">#89031 Don't inline OnceCell initialization closures</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88945\">#88945 Remove concept of 'completion' from the projection cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88881\">#88881 Rollup of 7 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88824\">#88824 Rollup of 15 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88710\">#88710 Use index newtyping for TyVid</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88703\">#88703 Gather module items after lowering.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88627\">#88627 Do not preallocate HirIds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88597\">#88597 Move global analyses from lowering to resolution</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88575\">#88575 Querify <code>FnAbi::of_{fn_ptr,instance}</code> as <code>fn_abi_of_{fn_ptr,instance}</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88552\">#88552 Stop allocating vtable entries for non-object-safe methods</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88533\">#88533 Concrete regions can show up in mir borrowck if the originated from there</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88530\">#88530 Shrink Session a bit</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88435\">#88435 Avoid invoking the hir_crate query to traverse the HIR</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88308\">#88308 Morph <code>layout_raw</code> query into <code>layout_of</code>.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87815\">#87815 encode <code>generics_of</code> for fields and ty params</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87688\">#87688 Introduce <code>let...else</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87234\">#87234 Lower only one HIR owner at a time</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84373\">#84373 Encode spans relative to the enclosing item</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83698\">#83698 Use undef for uninitialized bytes in constants</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/82183\">#82183 Simplify lazy DefPathHash decoding by using an on-disk hash table.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/80522\">#80522 Split rustc_mir</a></li>\n</ul>",
        "id": 254546423,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408015
    },
    {
        "content": "<p>Wow, great work perf triage team! I'm consistently impressed with the quality of these reports <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span></p>",
        "id": 254546533,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408057
    },
    {
        "content": "<h2>Nominated Issues</h2>",
        "id": 254546668,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408105
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 254546689,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408111
    },
    {
        "content": "<ul>\n<li>\"On macOS, make strip=\"symbols\" not pass any options to strip\" <a href=\"https://github.com/rust-lang/rust/pull/88137\">rust#88137</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></li>\n<li>nominated for T-compiler by @<strong>estebank</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 254546698,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408115
    },
    {
        "content": "<p>We talked about this already. I have an action item to follow up on.</p>",
        "id": 254546790,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408135
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 254546834,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408158
    },
    {
        "content": "<p>And that's the agenda</p>",
        "id": 254546904,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408187
    },
    {
        "content": "<p>well since we are before schedule ... :)</p>",
        "id": 254546977,
        "sender_full_name": "apiraino",
        "timestamp": 1632408218
    },
    {
        "content": "<p>I have a second buffer of PR waiting on review :-)</p>",
        "id": 254547029,
        "sender_full_name": "apiraino",
        "timestamp": 1632408236
    },
    {
        "content": "<p><a href=\"https://hackmd.io/enCQtJ6ZTOO8ty6O2zZIRw?view\">https://hackmd.io/enCQtJ6ZTOO8ty6O2zZIRw?view</a></p>",
        "id": 254547035,
        "sender_full_name": "apiraino",
        "timestamp": 1632408239
    },
    {
        "content": "<p>just in case ;-)</p>",
        "id": 254547090,
        "sender_full_name": "apiraino",
        "timestamp": 1632408245
    },
    {
        "content": "<p>Oh, great idea!</p>",
        "id": 254547111,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408250
    },
    {
        "content": "<p>Ah excellent, we get to the part of my review queue I'm behind on <span aria-label=\"embarrassed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"embarrassed\">:embarrassed:</span></p>",
        "id": 254547245,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408299
    },
    {
        "content": "<ul>\n<li>\"Mir-Opt for copying enums with large discrepancies\" <a href=\"https://github.com/rust-lang/rust/pull/85158\">rust#85158</a></li>\n</ul>",
        "id": 254547277,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408310
    },
    {
        "content": "<p>This strikes me as exactly the kind of thing we should be optimizing in MIR and yet at the same time, it's very time consuming to give a thorough review.</p>",
        "id": 254547687,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408446
    },
    {
        "content": "<p>Also, large perf regression</p>",
        "id": 254547755,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408472
    },
    {
        "content": "<p>We already have a number of MIR opts in tree that are marked unsound and disabled by default. Perhaps we should apply the same treatment here and allow it to land so at least it keeps building.</p>",
        "id": 254547824,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408484
    },
    {
        "content": "<p>We can then build up tests for it over time until we want to enable it in some scenario.</p>",
        "id": 254547862,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408499
    },
    {
        "content": "<p>Yeah, that's the other thing. It feels hard to spend so much time on it when the perf results aren't very good.</p>",
        "id": 254547967,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408530
    },
    {
        "content": "<p>But again, that's true of many of the other disabled MIR opts as well. With better tuning of the heuristic, perhaps we can get some small wins out of it.</p>",
        "id": 254548060,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408560
    },
    {
        "content": "<p>I will leave some feedback asking for the pass to be marked experimental/unsound and do a review.</p>",
        "id": 254548313,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408637
    },
    {
        "content": "<ul>\n<li>\"Account for incorrect impl Foo&lt;const N: ty&gt; {} syntax\" <a href=\"https://github.com/rust-lang/rust/pull/85346\">rust#85346</a></li>\n</ul>",
        "id": 254548401,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408664
    },
    {
        "content": "<p>I guess, the question is: how much might we want to land as experimental/unsound when there are perf regressions, with removing experimental status being blocked on perf</p>",
        "id": 254548458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408690
    },
    {
        "content": "<p>Didn't we already cover <a href=\"https://github.com/rust-lang/rust/issues/85346\">#85346</a>?</p>",
        "id": 254548710,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408765
    },
    {
        "content": "<p>To my mind, experimental status is gated on having a decent test suite, having the code reviewed more thoroughly and spending some time enabled on nightly (with intent to disable in beta or just before beta) without issue.</p>",
        "id": 254548774,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408791
    },
    {
        "content": "<p>The perf question is really \"what opt-level should we run this at?\"</p>",
        "id": 254548811,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408804
    },
    {
        "content": "<p>If this improves code quality or code size, then perhaps it's worth doing at mir-opt-level=2.</p>",
        "id": 254548864,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408823
    },
    {
        "content": "<p>Yes, we covered <a href=\"https://github.com/rust-lang/rust/issues/85346\">#85346</a> already.</p>",
        "id": 254549002,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408859
    },
    {
        "content": "<ul>\n<li>\"Diverging tyvars\" <a href=\"https://github.com/rust-lang/rust/pull/85558\">rust#85558</a></li>\n</ul>",
        "id": 254549022,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408865
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> on this</p>",
        "id": 254549088,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408890
    },
    {
        "content": "<p>not sure how it fits into the never type work</p>",
        "id": 254549189,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408918
    },
    {
        "content": "<p>Yeah, there's no linked issues or anything.</p>",
        "id": 254549276,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632408944
    },
    {
        "content": "<p>Hm</p>",
        "id": 254549304,
        "sender_full_name": "simulacrum",
        "timestamp": 1632408953
    },
    {
        "content": "<p>So I can take a look (I think I missed Niko's ping)</p>",
        "id": 254549371,
        "sender_full_name": "simulacrum",
        "timestamp": 1632408964
    },
    {
        "content": "<p>There was a PR that this is essentially derived from</p>",
        "id": 254549441,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408989
    },
    {
        "content": "<p>basically just a rebase</p>",
        "id": 254549457,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632408993
    },
    {
        "content": "<p>but I suspect that this is the alternative solution to never type fallback, based on inference variables?</p>",
        "id": 254549466,
        "sender_full_name": "simulacrum",
        "timestamp": 1632408996
    },
    {
        "content": "<p>IIRC, there was discussion on the <a class=\"stream\" data-stream-id=\"259160\" href=\"/#narrow/stream/259160-t-lang.2Fproject-never-type\">#t-lang/project-never-type</a> stream about it</p>",
        "id": 254549522,
        "sender_full_name": "simulacrum",
        "timestamp": 1632409018
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/85021\">#85021</a></p>",
        "id": 254549560,
        "sender_full_name": "Jack Huey",
        "timestamp": 1632409030
    },
    {
        "content": "<p><a href=\"#narrow/stream/259160-t-lang.2Fproject-never-type/topic/Never.20type.20in.20tuple\">https://rust-lang.zulipchat.com/#narrow/stream/259160-t-lang.2Fproject-never-type/topic/Never.20type.20in.20tuple</a></p>",
        "id": 254549573,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632409034
    },
    {
        "content": "<p>I'm going to go-ahead and call the meeting here.</p>",
        "id": 254549943,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632409159
    },
    {
        "content": "<p>If <a href=\"https://github.com/rust-lang/rust/issues/85558\">#85558</a> gets reviewed this week, great! Otherwise we'll return to it again next week.</p>",
        "id": 254550012,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632409188
    },
    {
        "content": "<p>Thanks for attending <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Have a great rest of your week <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 254550090,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1632409204
    },
    {
        "content": "<p>Draft for next week's agenda available at:<br>\n<a href=\"https://hackmd.io/eviBs_qISRC9mlDve0cSRQ?view\">https://hackmd.io/eviBs_qISRC9mlDve0cSRQ?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>  by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 254550928,
        "sender_full_name": "apiraino",
        "timestamp": 1632409480
    }
]