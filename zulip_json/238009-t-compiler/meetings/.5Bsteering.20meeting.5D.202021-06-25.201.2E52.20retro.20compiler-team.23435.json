[
    {
        "content": "<p>Just a reminder to <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  : We’ll be starting our meeting for the 1.52 fingerprint retrospective in about 25 minutes.</p>",
        "id": 243916010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624628106
    },
    {
        "content": "<p>This is the document we’ll be reviewing: <a href=\"https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view\">https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view</a> ; I am currently planning to allocate 20 minutes at the outset for everyone to read it.</p>",
        "id": 243916105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624628162
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; steering meeting starting now. Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here</p>",
        "id": 243919962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624629824
    },
    {
        "content": "<p>As I noted above, we’ll be reading <a href=\"https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view\">https://hackmd.io/DhKzaRUgTVGSmhW8Mj0c8A?view</a> . Lets all put <span aria-label=\"book\" class=\"emoji emoji-1f4d6\" role=\"img\" title=\"book\">:book:</span> when we start reading, and <span aria-label=\"checkered flag\" class=\"emoji emoji-1f3c1\" role=\"img\" title=\"checkered flag\">:checkered_flag:</span> when we’re done reading. I’m currently thinking 20min should do.</p>",
        "id": 243920075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624629864
    },
    {
        "content": "<p>(I debated about opening with a description of the COE process as used at AWS, but I’ve tried to make the document open with some self-motivating descriptions to that effect, so I figure we can just start reading.)</p>",
        "id": 243920319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624629993
    },
    {
        "content": "<p>If you want to put comments onto the document itself as you read, that is fine; I recommend doing it in the View interface of hackmd, by either highlighting text and choosing “Comment”.</p>",
        "id": 243920414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> btw, would you mind keeping the <span aria-label=\"book\" class=\"emoji emoji-1f4d6\" role=\"img\" title=\"book\">:book:</span> emoji checked? That way, I can tell when everyone has read by looking to when the numbers are equal.</p>",
        "id": 243921599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630591
    },
    {
        "content": "<p>(Side note, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and I spent some time yesterday and developed a plan around <a href=\"https://github.com/rust-lang/rust/pull/85868\">https://github.com/rust-lang/rust/pull/85868</a>, which is one of the last -- maybe the last? -- remaining instances of this ICE that we know of)</p>",
        "id": 243921963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624630762
    },
    {
        "content": "<p>Okay I think everyone has indicated they are done reading</p>",
        "id": 243922017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630792
    },
    {
        "content": "<p>So great, maybe 15 minutes would have been a better estimate</p>",
        "id": 243922062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630803
    },
    {
        "content": "<p>Lets start by saying: Are there any questions about the intentions of writing and publicizing a document like this in the first place?</p>",
        "id": 243922147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630831
    },
    {
        "content": "<p>Assuming there are no questions on that front, then my next question will be: Are there any questions about the overall content of this particular document, starting from the description of the “facts” of the event?</p>",
        "id": 243922261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630896
    },
    {
        "content": "<p>I left several comments/questions, but I guess they are mostly about the \"Five Whys\" and whether they are asking the right questions</p>",
        "id": 243922371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624630946
    },
    {
        "content": "<p>Not sure if that's what you're looking for right now</p>",
        "id": 243922378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624630954
    },
    {
        "content": "<p>Right, that is not exactly what I’m looking for, not yet</p>",
        "id": 243922402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630965
    },
    {
        "content": "<p>I think before disseminating to a wider audience we might want to clean up the introduction a bit.</p>",
        "id": 243922458,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624630991
    },
    {
        "content": "<p>I agree with that</p>",
        "id": 243922465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624630996
    },
    {
        "content": "<p>But overall, the content looks good to me!</p>",
        "id": 243922473,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624631000
    },
    {
        "content": "<p>I guess I do have one meta-question: the timeline intentionally runs from the point that the incident was detected and resolved</p>",
        "id": 243922479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631003
    },
    {
        "content": "<p>is the intent that events that led up to <em>causing</em> the incident in the first place are to covered under other sections?</p>",
        "id": 243922527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631029
    },
    {
        "content": "<p>Well, the timeline section technically includes one event that was prior to the start point</p>",
        "id": 243922543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631039
    },
    {
        "content": "<p>namely, it includes the filing of issue <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a></p>",
        "id": 243922587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631046
    },
    {
        "content": "<p>which was, from my memory, the first formal point where the team acknowledged that we needed to start thinking about proactive work to ensure the fingerprint ICEs would be resolved before they hit stable.</p>",
        "id": 243922654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631080
    },
    {
        "content": "<p>I don't see that in the Summary or Timeline of Issue Arrival</p>",
        "id": 243922682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631095
    },
    {
        "content": "<p>I know</p>",
        "id": 243922720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631110
    },
    {
        "content": "<p>oh, I see</p>",
        "id": 243922738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631121
    },
    {
        "content": "<p>So lets address this</p>",
        "id": 243922742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631123
    },
    {
        "content": "<p>Timleline section, ok</p>",
        "id": 243922744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631125
    },
    {
        "content": "<p>because I think it dovetails well with Niko’s first question on the doc</p>",
        "id": 243922774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631136
    },
    {
        "content": "<p>anyway, I'm not saying how it should be, just trying to understand the intended content of each section</p>",
        "id": 243922776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631137
    },
    {
        "content": "<p>Niko asked via inline comment: </p>\n<blockquote>\n<p>Something missing from this graph, and perhaps this narrative: the lead-up.</p>\n</blockquote>",
        "id": 243922878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631175
    },
    {
        "content": "<p>I originally wrote the Summary in the manner that you see in the Appendix</p>",
        "id": 243922910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631192
    },
    {
        "content": "<p>but it was far more than three paragraphs</p>",
        "id": 243922951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631213
    },
    {
        "content": "<p>and in any case, I wanted to figure out whether this kind of document is meant to focus on the <em>event</em> itself, not the development missteps that led to the event being possible</p>",
        "id": 243923031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631250
    },
    {
        "content": "<p>my experience so far at AWS is that the summaries don’t tend to talk about the leadup, at least not in terms of internal development processes. The only lead-up’s in summaries I’ve seen tend to be about external contextual stuff, e.g. “It got really hot in this area of the world, so this data center started having issues.\"</p>",
        "id": 243923167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631311
    },
    {
        "content": "<p>but we don’t have to follow that pattern if we don’t want to. This is our document.</p>",
        "id": 243923234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631337
    },
    {
        "content": "<p>So the question is: What <em>would</em> be best here?</p>",
        "id": 243923248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631344
    },
    {
        "content": "<p>As a general remark: I really like having a structured document like that</p>",
        "id": 243923301,
        "sender_full_name": "mw",
        "timestamp": 1624631368
    },
    {
        "content": "<p>Like what?</p>",
        "id": 243923334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631384
    },
    {
        "content": "<p>like the one you wrote</p>",
        "id": 243923426,
        "sender_full_name": "mw",
        "timestamp": 1624631405
    },
    {
        "content": "<p>Ah. But can you tell whehter you would have liked it more if the Appendix had been the Summary at the start?</p>",
        "id": 243923477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631425
    },
    {
        "content": "<p>Personally, I think I would want to discuss <em>both</em></p>",
        "id": 243923486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631427
    },
    {
        "content": "<ol>\n<li>How could we have responded to the incident better?</li>\n<li>How could we have prevented the incident in the first place?</li>\n</ol>",
        "id": 243923516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631442
    },
    {
        "content": "<p>it seems important to also look at our response mechanisms</p>",
        "id": 243923551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631455
    },
    {
        "content": "<p>because there will always be fresh problems</p>",
        "id": 243923565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631463
    },
    {
        "content": "<p>but I think we should also add \"regression tests\" around preventing <em>this particular sort of problem</em> from occurring again</p>",
        "id": 243923591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243923477\">said</a>:</p>\n<blockquote>\n<p>Ah. But can you tell whehter you would have liked it more if the Appendix had been the Summary at the start?</p>\n</blockquote>\n<p>I don't think so. Keeping the summary short is a good.</p>",
        "id": 243923597,
        "sender_full_name": "mw",
        "timestamp": 1624631478
    },
    {
        "content": "<p>That said, I think that having the summary focus on user impact is fine. I might just like a separate section about \"What caused the incident\"</p>",
        "id": 243923744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631525
    },
    {
        "content": "<p>Okay</p>",
        "id": 243923764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631532
    },
    {
        "content": "<p>I think I agree that we should include that, and not just in an appendix</p>",
        "id": 243923811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631553
    },
    {
        "content": "<p>more sections with tighter focus seems good to me</p>",
        "id": 243923836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631563
    },
    {
        "content": "<p>but I don’t think we need to spend synchronous meeting time word smithing that.</p>",
        "id": 243923839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631566
    },
    {
        "content": "<p>Actually, on the subject of word-smithing</p>",
        "id": 243923863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631577
    },
    {
        "content": "<p>I’m likely to be revising this</p>",
        "id": 243923901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631591
    },
    {
        "content": "<p>after all, part of the idea is that it <em>will</em> be published somewhere</p>",
        "id": 243923915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631599
    },
    {
        "content": "<blockquote>\n<p>Are most rustc developers not opting into incremental=1?</p>\n</blockquote>\n<p>Maybe a survey would help?</p>",
        "id": 243923935,
        "sender_full_name": "The 8472",
        "timestamp": 1624631609
    },
    {
        "content": "<p>Would anyone be interested in helping co-author revisions?</p>",
        "id": 243923947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631613
    },
    {
        "content": "<p>I am</p>",
        "id": 243924045,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624631646
    },
    {
        "content": "<p>Okay, that’d be great. (And if anyone wants to volunteer to read future drafts, let us know that too)</p>",
        "id": 243924080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631664
    },
    {
        "content": "<p>(Happy to read)</p>",
        "id": 243924098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631676
    },
    {
        "content": "<p>Okay, so I think we’ve covered the question of “What was the lead-up and where is it documented.\"</p>",
        "id": 243924146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631703
    },
    {
        "content": "<p>(we can fine-tune how to better present it async)</p>",
        "id": 243924191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631722
    },
    {
        "content": "<blockquote>\n<p>Proposal: Make list of all ICE’s beyond some age (six months?) that are still open and still reproduce on nightly. </p>\n</blockquote>\n<p>Some ICEs are only triggered by unstable features. Since this is about impact on stable those could be excluded.</p>",
        "id": 243924221,
        "sender_full_name": "The 8472",
        "timestamp": 1624631737
    },
    {
        "content": "<p>(true)</p>",
        "id": 243924246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631745
    },
    {
        "content": "<p>Let me just go down the right-hand column of inline comments</p>",
        "id": 243924267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631755
    },
    {
        "content": "<p>first</p>",
        "id": 243924268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631757
    },
    {
        "content": "<p>(maybe we need a raise hand queue or some kind, hmm)</p>",
        "id": 243924340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631774
    },
    {
        "content": "<p>Niko noted: </p>\n<blockquote>\n<p>I definitely was encountering regular ICEs from incremental when working on rustc and I presume I am not alone.</p>\n</blockquote>",
        "id": 243924378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631790
    },
    {
        "content": "<p>ends with </p>\n<blockquote>\n<p>I believe that part of the reason for inaction was that the urgency and timeline weren't clear to me. There was a sense of \"somebody else is on this or will tell me if it's a problem\".</p>\n</blockquote>",
        "id": 243924422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631811
    },
    {
        "content": "<p>I think this captures the heart of our issue here</p>",
        "id": 243924453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631829
    },
    {
        "content": "<p>none of us had a true notion of the urgency here</p>",
        "id": 243924479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631840
    },
    {
        "content": "<p>I think that comes down to the difficulty of testing incremental compilation</p>",
        "id": 243924527,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624631865
    },
    {
        "content": "<p>Yes, but: I do believe <code>rustc</code> was firing off incremental bugs</p>",
        "id": 243924577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631883
    },
    {
        "content": "<p>if they were firing off against the beta</p>",
        "id": 243924632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631893
    },
    {
        "content": "<p>that’s a red flag</p>",
        "id": 243924638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631896
    },
    {
        "content": "<p>That's true - I meant that we didn't know how widespread the ices would be</p>",
        "id": 243924691,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624631919
    },
    {
        "content": "<p>At least for me, <code>x.py</code> has had issues with incremental builds for a long time. Needing to <code>x.py clean &amp;&amp; x.py build</code> after a rebase, for example, has been something I've had to do periodically for at least a few years now.</p>",
        "id": 243924713,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624631926
    },
    {
        "content": "<p>Until people started using the stable releaae</p>",
        "id": 243924718,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624631929
    },
    {
        "content": "<p>I'm curious about that point--how we could we have had a more accurate impression?</p>",
        "id": 243924744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624631950
    },
    {
        "content": "<p>I know I've hit incremental bugs when running the test suite when switching git branches. I always just cleaned the build...</p>",
        "id": 243924747,
        "sender_full_name": "Jack Huey",
        "timestamp": 1624631951
    },
    {
        "content": "<p>I had assumed that our <code>x.py</code> issues with incremental were, for some reason, not representative of typical user scenarios</p>",
        "id": 243924810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624631985
    },
    {
        "content": "<p>I turned off incremental compilation after hitting test errors a few times and realizing that it also affected benchmarks</p>",
        "id": 243924830,
        "sender_full_name": "The 8472",
        "timestamp": 1624631996
    },
    {
        "content": "<p>i.e. that it might somehow be linked to stale artifacts from the <em>built</em> compiler, or <em>built</em> stdlib</p>",
        "id": 243924841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632002
    },
    {
        "content": "<p>but that reasoning is just wrong when it comes to the beta bootstrap, right?</p>",
        "id": 243924906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632018
    },
    {
        "content": "<p>that is what is leading to my claim that maybe <code>x.py</code> should somehow be signalling more strongly in response to a beta rustc ICE</p>",
        "id": 243924940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632041
    },
    {
        "content": "<p>AIUI, most of the historic issues with x.py &amp; incremental are because we intentionally break the compiler version tracking that is done.</p>",
        "id": 243924958,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632052
    },
    {
        "content": "<p>dev channel builds through <code>./x.py</code> default to omitting git hashes, which as i understand is one part of the heuristic for invalidating incremental caches? so it kind of makes sense that rebases, etc. would trip over this</p>",
        "id": 243924976,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624632060
    },
    {
        "content": "<p>Yeah, that's what I mean.</p>",
        "id": 243925005,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632072
    },
    {
        "content": "<p>that's also hard to get around</p>",
        "id": 243925014,
        "sender_full_name": "mw",
        "timestamp": 1624632081
    },
    {
        "content": "<p>so ./x.py seems to give lots of potential false positives when it comes to incr. comp. bugs</p>",
        "id": 243925074,
        "sender_full_name": "mw",
        "timestamp": 1624632116
    },
    {
        "content": "<p>I want to better understand this. I had thought the omitted git hashes were about ignoring the specific git version that a <code>rustc</code> is built from</p>",
        "id": 243925113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632124
    },
    {
        "content": "<p>which is one reason people disregard them</p>",
        "id": 243925144,
        "sender_full_name": "mw",
        "timestamp": 1624632130
    },
    {
        "content": "<p>(Which I continue to assert should have nothing to do with the bootstrap runs of the beta rustc)</p>",
        "id": 243925191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632150
    },
    {
        "content": "<p>Am I misunderstanding what you all mean by the “omitted git hashes” ?</p>",
        "id": 243925212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632161
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code># Flag indicating whether git info will be retrieved from .git automatically.\n# Having the git information can cause a lot of rebuilds during development.\n# Note: If this attribute is not explicitly set (e.g. if left commented out) it\n# will default to true if channel = &quot;dev&quot;, but will default to false otherwise.\n#ignore-git = if channel == &quot;dev&quot; { true } else { false }\n</code></pre></div>",
        "id": 243925274,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624632194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925191\">said</a>:</p>\n<blockquote>\n<p>(Which I continue to assert should have nothing to do with the bootstrap runs of the beta rustc)</p>\n</blockquote>\n<p>that's what I'm wondering too now</p>",
        "id": 243925280,
        "sender_full_name": "mw",
        "timestamp": 1624632199
    },
    {
        "content": "<p>So, if I'm understanding correctly, you're saying the stage 1 build using the beta compiler should be validating the git hash as usual since it's a fixed version for the release cycle?</p>",
        "id": 243925325,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632227
    },
    {
        "content": "<p>I think that’s what I'm saying, yeah.</p>",
        "id": 243925347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632240
    },
    {
        "content": "<p>That makes sense</p>",
        "id": 243925405,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632248
    },
    {
        "content": "<p>That makes sense to me but, experientially, that doesn't seem to be what's happening.</p>",
        "id": 243925410,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632249
    },
    {
        "content": "<p>Maybe it should include the git tree hash instead of commit?</p>",
        "id": 243925422,
        "sender_full_name": "bjorn3",
        "timestamp": 1624632257
    },
    {
        "content": "<p>Okay. Maybe that would be good thing to look into</p>",
        "id": 243925427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632259
    },
    {
        "content": "<p>Lets maybe make an action item to dive into this</p>",
        "id": 243925436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632264
    },
    {
        "content": "<p>However, I don't think that will affect this issue</p>",
        "id": 243925449,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925449\">said</a>:</p>\n<blockquote>\n<p>However, I don't think that will affect this issue</p>\n</blockquote>\n<p>as in, you don’t think it would lead to people noticing ICE’s from the beta rustc?</p>",
        "id": 243925481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632292
    },
    {
        "content": "<p>Since we can still get false positives when rebuilding libstd or the compiler with our stage1 compiler</p>",
        "id": 243925485,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632294
    },
    {
        "content": "<p>Okay, right, that aligns with my other suggestion</p>",
        "id": 243925517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632311
    },
    {
        "content": "<p>that x.py knows which compiler its running</p>",
        "id": 243925531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632316
    },
    {
        "content": "<p>and could tell you “hey, buddy, this ICE is serious.\"</p>",
        "id": 243925546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632325
    },
    {
        "content": "<p>“this ICE has nothing to do with whatever nonsense you have going on in your branch\"</p>",
        "id": 243925577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632344
    },
    {
        "content": "<p>yes, that sounds good</p>",
        "id": 243925609,
        "sender_full_name": "mw",
        "timestamp": 1624632362
    },
    {
        "content": "<p>okay. But it sounds like, to make that work, we’ll need to address this git hash thing you all brought up above. Sounds good.</p>",
        "id": 243925675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925577\">said</a>:</p>\n<blockquote>\n<p>“this ICE has nothing to do with whatever nonsense you have going on in your branch\"</p>\n</blockquote>\n<p>What if you changed if libstd in such a way that a lang item is incorrect?</p>",
        "id": 243925685,
        "sender_full_name": "bjorn3",
        "timestamp": 1624632389
    },
    {
        "content": "<p>Hmm. Maybe my assertion is that that should not ICE</p>",
        "id": 243925726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632411
    },
    {
        "content": "<p>atop the beta</p>",
        "id": 243925734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632414
    },
    {
        "content": "<p>I think that will produce a much more obvious and 'local' error</p>",
        "id": 243925804,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632453
    },
    {
        "content": "<p>an internal compiler error is an internal compiler error. If someone is trying to build a libstd that has an error in its own source code, the beta compiler should not ICE.</p>",
        "id": 243925809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632456
    },
    {
        "content": "<p>So it won't be a big deal in practice</p>",
        "id": 243925820,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632462
    },
    {
        "content": "<p>I think I agree with that too. :)</p>",
        "id": 243925830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632470
    },
    {
        "content": "<p>next inline comment</p>",
        "id": 243925897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632493
    },
    {
        "content": "<p>You might accidentally change some struct that gets serialized as part of incr comp, but it's hard to accidentally change a lang item</p>",
        "id": 243925907,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632497
    },
    {
        "content": "<p>One sec...</p>",
        "id": 243925908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632499
    },
    {
        "content": "<p>I wanted to circle back to something. I felt like, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>, that you were somewhat 'beating the drum' on this issue for some time. Are you saying that you didn't realize how important it was?</p>",
        "id": 243925924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632506
    },
    {
        "content": "<p>I was assuming that <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> , like <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , didn’t realize it was landing in 1.52.0</p>",
        "id": 243925969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632534
    },
    {
        "content": "<p>I didn't realize until all of the user ICE reports started coming in</p>",
        "id": 243925982,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632541
    },
    {
        "content": "<p>but you are right, its possible <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> knew it was landing in 1.52.0, but didn’t realize how widespread its impact would be?</p>",
        "id": 243925996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632550
    },
    {
        "content": "<p>I guess my feeling is like-- it'd be great to have more data -- but I also wonder about the <em>introduction</em> of this check, and whether it should've been accompanied with a more dedicated campaign to detect and resolve instances of it</p>",
        "id": 243926001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632551
    },
    {
        "content": "<p>No, I'm not saying anything about knowing when it was landing</p>",
        "id": 243926027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632567
    },
    {
        "content": "<p>I'm saying that <em>even if</em> it was landing in 1.53.0</p>",
        "id": 243926039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632573
    },
    {
        "content": "<p>I wasn't paying close attention to the release process, and thought we had more time</p>",
        "id": 243926041,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632574
    },
    {
        "content": "<p>I think that in an ideal world, we would have been starting earlier</p>",
        "id": 243926058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632583
    },
    {
        "content": "<p>Okay. My point is that we did realize we needed a campaign</p>",
        "id": 243926075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632592
    },
    {
        "content": "<p>and also, I only expected 'a few' ices total</p>",
        "id": 243926088,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632600
    },
    {
        "content": "<p>I seem to recall, at the time, that we thought it was landing in the next release and there was consistent progress at resolving the ICEs being reported so it felt like it was being handled and there was nothing to worry about.</p>",
        "id": 243926143,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632610
    },
    {
        "content": "<p>but your point, Niko, is that we should be planning out such campaigns at the time we land such checks? Rather than waiting to see what the fallout is?</p>",
        "id": 243926161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632619
    },
    {
        "content": "<p>Yes, and also I think maybe we were a bit optimistic about how rapid the progress was</p>",
        "id": 243926184,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632632
    },
    {
        "content": "<p>well certainly some of these bugs ended up taking longer than expected</p>",
        "id": 243926213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632649
    },
    {
        "content": "<p>Yeah</p>",
        "id": 243926221,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632653
    },
    {
        "content": "<p>I also mentioned in a comment that the most common issue was resolved very quickly after the check was enabled but it missed the 1.52 cutoff and no one seemed to realize.</p>",
        "id": 243926225,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624632656
    },
    {
        "content": "<p>Some were very obvious - there were queries that were short, and needed to be eval_always</p>",
        "id": 243926264,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632676
    },
    {
        "content": "<p>So we have ten minutes left</p>",
        "id": 243926273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632680
    },
    {
        "content": "<p>I would like to skip ahead</p>",
        "id": 243926283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632684
    },
    {
        "content": "<p>It's also possible that, as I haven't been following triage meetings that closely, I may have missed some of the comments</p>",
        "id": 243926284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632684
    },
    {
        "content": "<p>to the Five Why’s section</p>",
        "id": 243926286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632688
    },
    {
        "content": "<p>which is another point worth highlighting :)</p>",
        "id": 243926290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632691
    },
    {
        "content": "<p>because I suspect there is (rightfully) contention about the directions it takes</p>",
        "id": 243926299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632699
    },
    {
        "content": "<p>(first off, I’ll entirely agree that the word “fragile” w.r.t fingerprint check was unnecessary)</p>",
        "id": 243926330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632719
    },
    {
        "content": "<p>(or at least, poorly chosen.)</p>",
        "id": 243926413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> pointed out:</p>\n<blockquote>\n<p>one of the main issues here: keeping track of potential problems already riding the train</p>\n</blockquote>",
        "id": 243926484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632778
    },
    {
        "content": "<p>does anyone have ideas about concrete action items to take on that front?</p>",
        "id": 243926502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632789
    },
    {
        "content": "<p>Perhaps a tracking issue for each release?</p>",
        "id": 243926544,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632806
    },
    {
        "content": "<p>I was musing about a “user-impact” label, and regularly reviewing all PR’s milestones for next release with that label</p>",
        "id": 243926566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632814
    },
    {
        "content": "<p>Listing any known ICEs were introducing</p>",
        "id": 243926567,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632815
    },
    {
        "content": "<p>we have milestones, right?</p>",
        "id": 243926570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632817
    },
    {
        "content": "<p>I think they are more appropriate than a tracking issue</p>",
        "id": 243926583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632826
    },
    {
        "content": "<p>I think milestone-centric is good. But we need some way to filter down</p>",
        "id": 243926654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632844
    },
    {
        "content": "<p>don’t want to be regularly reviewing <em>all</em> <del>closed</del> merged PRs for a milestone</p>",
        "id": 243926676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632853
    },
    {
        "content": "<p>wait, what? :)</p>",
        "id": 243926709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632872
    },
    {
        "content": "<p>I think we should have proactively flagged this PR</p>",
        "id": 243926725,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632877
    },
    {
        "content": "<p>I agree we don't want to do that :)</p>",
        "id": 243926741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632886
    },
    {
        "content": "<p>when I wrote it, I knew that it had the potential to introduce ICEs</p>",
        "id": 243926749,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632893
    },
    {
        "content": "<p>Side note that it seems like we regularly have problems determining whether a given PR is part of a relase or not</p>",
        "id": 243926768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632902
    },
    {
        "content": "<p>Which is different from a PR which inadvertantly causes ICEs</p>",
        "id": 243926778,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624632907
    },
    {
        "content": "<p>the milestone metadata was correct for this PR</p>",
        "id": 243926790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632912
    },
    {
        "content": "<p>but your point is about backports and whatnot, I assume, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ?</p>",
        "id": 243926829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632930
    },
    {
        "content": "<p>I think I just misunderstood what was being said</p>",
        "id": 243926837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632938
    },
    {
        "content": "<p>I thought the idea was \"tracking issues we really want to resolve before a release\"</p>",
        "id": 243926846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632947
    },
    {
        "content": "<p>oh. I thought the idea was tracking actual changes that have landed</p>",
        "id": 243926919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632967
    },
    {
        "content": "<p>that may have ill effect that needs to be addressed</p>",
        "id": 243926938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624632978
    },
    {
        "content": "<p>I am not convinced that a review there will be a good use of time</p>",
        "id": 243926952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624632988
    },
    {
        "content": "<p>I think I agree with <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> (and you) that a more proactive approach would be better</p>",
        "id": 243926981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633002
    },
    {
        "content": "<p>I wonder though</p>",
        "id": 243926991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633007
    },
    {
        "content": "<p>like, we have an issue tracker. We track issues. So what was missing here — just that we didn’t file an issue up front?</p>",
        "id": 243926994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633008
    },
    {
        "content": "<p>I don't know that anything was mising as far as issues goes</p>",
        "id": 243927011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633019
    },
    {
        "content": "<p>It seems like the biggest problem was that we didn't know about some of these bugs</p>",
        "id": 243927028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633032
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243926981\">said</a>:</p>\n<blockquote>\n<p>I think I agree with <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> (and you) that a more proactive approach would be better</p>\n</blockquote>\n<p>regarding this:</p>",
        "id": 243927048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633045
    },
    {
        "content": "<p>it feels similar to \"relnotes\"</p>",
        "id": 243927052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633047
    },
    {
        "content": "<p>it makes me wonder if \"bors r+\" could have a little checklist</p>",
        "id": 243927066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633054
    },
    {
        "content": "<p>Ah, as in some of these <del>ICEs</del> incr-comp bugs did need to have the fingerprint check get actually get released into the 1.52.0 release</p>",
        "id": 243927067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633055
    },
    {
        "content": "<p>in order for us to even know about the bugs?</p>",
        "id": 243927075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633062
    },
    {
        "content": "<p>and similar to \"perf impact\", rollup, etc</p>",
        "id": 243927087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633069
    },
    {
        "content": "<p>sorry if this is already covered, but i'm not seeing it in any obvious place: did the consistency check make it to nightly before making it to beta? and if so, did anyone using nightly run into the ICEs?</p>",
        "id": 243927167,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624633088
    },
    {
        "content": "<p>Perhaps we should have some kind of \"follow up\" tag and when beta is cut, we look at all the merged PRs with that tag in the milestone during a triage meeting or something and see why they were marked as such.</p>",
        "id": 243927170,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624633089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"411291\">Taylor Yu [they/she]</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243927167\">said</a>:</p>\n<blockquote>\n<p>sorry if this is already covered, but i'm not seeing it in any obvious place: did the consistency check make it to nightly before making it to beta? and if so, did anyone using nightly run into the ICEs?</p>\n</blockquote>\n<p>Yes, it was in nightly before beta (and beta before stable). We just didn’t have good idea of scope of impact, I think.</p>",
        "id": 243927216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633113
    },
    {
        "content": "<p>and also, bugs <em>were</em> fixed on nightly</p>",
        "id": 243927258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633137
    },
    {
        "content": "<p>I'd kind of like it if bots r+ was like \"Got it! Before I test this, please help me out with some metadata\"</p>\n<ul>\n<li>[ ] Believe to have impact on performance</li>\n<li>[ ] Affects end users in a noteworthy way </li>\n<li>[ ] Introduces major assertions or other consistency checks that may affect users</li>\n<li>[ ] Is fixing a regression and hence should be backported</li>\n</ul>",
        "id": 243927269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1624633142
    },
    {
        "content": "<p>and just needed to be backported</p>",
        "id": 243927270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633143
    },
    {
        "content": "<p>I think it would be great to have some kind of dashboard that keeps track all issues that need to be resolved by a certain time.</p>",
        "id": 243927279,
        "sender_full_name": "mw",
        "timestamp": 1624633145
    },
    {
        "content": "<blockquote>\n<p>the milestone metadata was correct for this PR</p>\n</blockquote>\n<p>The milestone doesn't let one immediately know when something will hit beta and release though. If you don't keep track of the release schedule it's just some number in the future.</p>",
        "id": 243927308,
        "sender_full_name": "The 8472",
        "timestamp": 1624633158
    },
    {
        "content": "<p>(I suppose that part of teh story, about which things were fixed on nightly and not backported, is not currently reflected at all on this COE document.)</p>",
        "id": 243927343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633172
    },
    {
        "content": "<p>Um I know we’re almost out of time</p>",
        "id": 243927456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633205
    },
    {
        "content": "<p>or really, we <em>are</em> out of time</p>",
        "id": 243927468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633210
    },
    {
        "content": "<p>but I reallyw anted feedback</p>",
        "id": 243927485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633215
    },
    {
        "content": "<p>about the Why that ends with</p>",
        "id": 243927497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633219
    },
    {
        "content": "<p>“Why aren’t people using Beta\"</p>",
        "id": 243927507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633225
    },
    {
        "content": "<p>I think this has been valuable so I would suggest we continue this on another Friday meeting slot.</p>",
        "id": 243927528,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624633233
    },
    {
        "content": "<p>what are peoples’ thoughts about trying to offer carrots that will motivate people to use Beta?</p>",
        "id": 243927546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633244
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243927528\">said</a>:</p>\n<blockquote>\n<p>I think this has been valuable so I would suggest we continue this on another Friday meeting slot.</p>\n</blockquote>\n<p>That’s .. not a bad idea. Maybe Wesley and I could work on revisions over this week</p>",
        "id": 243927593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633268
    },
    {
        "content": "<p>and we do a meeting in a week to discuss?</p>",
        "id": 243927609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633274
    },
    {
        "content": "<p>alterantively</p>",
        "id": 243927627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633283
    },
    {
        "content": "<p>we could wait until planning meeting</p>",
        "id": 243927642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633287
    },
    {
        "content": "<p>The testing channel as a beta + features idea makes sense to me.</p>",
        "id": 243927643,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1624633288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243927546\">said</a>:</p>\n<blockquote>\n<p>what are peoples’ thoughts about trying to offer carrots that will motivate people to use Beta?</p>\n</blockquote>\n<p>I left a comment in the doc that I'll copy here:</p>\n<blockquote>\n<p>Perhaps we can organize a working group/project group/etc of people who are committed to using the beta instead of stable. Those people can then get a shoutout on the website, release notes, etc.</p>\n</blockquote>",
        "id": 243927671,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624633303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243927642\">said</a>:</p>\n<blockquote>\n<p>we could wait until planning meeting</p>\n</blockquote>\n<p>(to figure out when to do the follow-up, that is)</p>",
        "id": 243927675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633306
    },
    {
        "content": "<p><del>maybe using nightly needs to be less attractive :P</del> I'm only joking of course</p>",
        "id": 243927762,
        "sender_full_name": "mw",
        "timestamp": 1624633336
    },
    {
        "content": "<p>Can I maybe get a show of hands: “If a steering meeting is held to discuss this again in a week, on <time datetime=\"2021-07-02T14:00:00Z\">2021-07-02T10:00:00-04:00</time> , then I will attend\"</p>",
        "id": 243927898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633403
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243927762\">said</a>:</p>\n<blockquote>\n<p>maybe using nightly needs to be less attractive :P</p>\n</blockquote>\n<p>Instead of <code>RUSTC_BOOTSTRAP=1</code>, you have to ICE the compiler 5 times in a row to prove you know what you're doing. /s</p>",
        "id": 243927905,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624633405
    },
    {
        "content": "<p>Okay. Lets go ahead and plan to have a followup in a week.</p>",
        "id": 243927977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633443
    },
    {
        "content": "<p>Thanks you all, this has been super duper helpful!</p>",
        "id": 243928023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633452
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 243928057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633468
    },
    {
        "content": "<p>One thing I wanted to point out that I thought was pretty interesting, and only was visible after I made the \"Timeline of Issue Arrival\" gantt chart: the rate of incoming issues was pretty steady, starting from the start point up until the mitigation point. In particular, the github pinned issue did <em>not</em> seem to cause a decrease in the number of filed issues (but then again, I think we told people in that issue that they should continue to file their ICEs, because we wanted to know about them in case they covered new scenarios).</p>",
        "id": 243928534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624633687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243924810\">said</a>:</p>\n<blockquote>\n<p>I had assumed that our <code>x.py</code> issues with incremental were, for some reason, not representative of typical user scenarios</p>\n</blockquote>\n<p>This is only true for <code>--stage 1</code> builds. Stage 0 should be normal incremental builds.</p>\n<p>I've been considering forcing incremental off for --stage 1 for a while, I will try to get around to that this weekend.</p>",
        "id": 243984718,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624667702
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925809\">said</a>:</p>\n<blockquote>\n<p>an internal compiler error is an internal compiler error. If someone is trying to build a libstd that has an error in its own source code, the beta compiler should not ICE.</p>\n</blockquote>\n<p>This is not true in practice. The compiler ICEs a lot on invalid lang_items.</p>",
        "id": 243984746,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624667740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925969\">said</a>:</p>\n<blockquote>\n<p>I was assuming that <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> , like <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> , didn’t realize it was landing in 1.52.0</p>\n</blockquote>\n<p>I knew it was in 1.52.0, but it wasn't in my area of responsibility, and it was such a <em>large</em> bug I kind of couldn't imagine anyone not saying anything. So I assumed it had to be less severe than I thought. I guess in retrospect that was a bad take :/</p>",
        "id": 243984839,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624667832
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243926994\">said</a>:</p>\n<blockquote>\n<p>like, we have an issue tracker. We track issues. So what was missing here — just that we didn’t file an issue up front?</p>\n</blockquote>\n<p>I agree with this at least - there were individual issues by end-users \"I ran into an incremental bug\", but no one triaging the issues, and no one filed a \"meta\" issue until <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> opened <a href=\"https://github.com/rust-lang/rust/issues/84970\">https://github.com/rust-lang/rust/issues/84970</a>.</p>",
        "id": 243984939,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624667922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243984839\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243925969\">said</a>:</p>\n<blockquote>\n<p>I was assuming that <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> , like <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> , didn’t realize it was landing in 1.52.0</p>\n</blockquote>\n<p>I knew it was in 1.52.0, but it wasn't in my area of responsibility, and it was such a <em>large</em> bug I kind of couldn't imagine anyone not saying anything. So I assumed it had to be less severe than I thought. I guess in retrospect that was a bad take :/</p>\n</blockquote>\n<p>(also, <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> was very insistent than reverting was <em>not</em> a fix, and I didn't feel qualified to actually fix the underlying issues)</p>",
        "id": 243985098,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624668078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243984939\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243926994\">said</a>:</p>\n<blockquote>\n<p>like, we have an issue tracker. We track issues. So what was missing here — just that we didn’t file an issue up front?</p>\n</blockquote>\n<p>I agree with this at least - there were individual issues by end-users \"I ran into an incremental bug\", but no one triaging the issues, and no one filed a \"meta\" issue until <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> opened <a href=\"https://github.com/rust-lang/rust/issues/84970\">https://github.com/rust-lang/rust/issues/84970</a>.</p>\n</blockquote>\n<p>I know <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has mentioned rust-lang/rust being a \"black hole\" of issues in the past - maybe we could ask the triage team to also look at issues? right now they <em>solely</em> look at PRs</p>",
        "id": 243985203,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624668166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243984718\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243924810\">said</a>:</p>\n<blockquote>\n<p>I had assumed that our <code>x.py</code> issues with incremental were, for some reason, not representative of typical user scenarios</p>\n</blockquote>\n<p>This is only true for <code>--stage 1</code> builds. Stage 0 should be normal incremental builds.</p>\n<p>I've been considering forcing incremental off for --stage 1 for a while, I will try to get around to that this weekend.</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/86641\">https://github.com/rust-lang/rust/pull/86641</a></p>",
        "id": 243986947,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624670143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243986947\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bsteering.20meeting.5D.202021-06-25.201.2E52.20retro.20compiler-team.23435/near/243984718\">said</a>:</p>\n<blockquote>\n<p>I've been considering forcing incremental off for --stage 1 for a while, I will try to get around to that this weekend.</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/86641\">https://github.com/rust-lang/rust/pull/86641</a></p>\n</blockquote>\n<p>(My gut reaction was that forcing incremental off for stage1 sounds “not 100% right”, and it seems from the dialogue on PR <a href=\"https://github.com/rust-lang/rust/issues/86641\">#86641</a> that others, including <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> , agree with that. <a href=\"https://github.com/rust-lang/rust/pull/86641#issuecomment-869799196\">Wiping the cache</a> in response to changes to the binary sounds right.)</p>",
        "id": 244209652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624917482
    }
]