[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; triage meeting will take place in  2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/PptGbL8US52Ct07t6vuB5A?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> : any progress to share?</li>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1123\">WG-self-profile</span>  by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> : any progress to share?</li>\n</ul>",
        "id": 269568195,
        "sender_full_name": "apiraino",
        "timestamp": 1643288451
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Weekly triage meeting starts now; add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 269585035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295801
    },
    {
        "content": "<p>We’ll start out with ~6 minutes for</p>\n<h2>Announcements</h2>",
        "id": 269585208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295852
    },
    {
        "content": "<ul>\n<li>Tomorrow (Friday at <time datetime=\"2022-01-28T15:00:00Z\">2022-01-28T10:00:00-05:00</time>) we have our <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Steering Meeting</a><ul>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/479\">Meeting proposal</a>: Run down <code>P-high</code> issues list</li>\n<li>Related blog post: <a href=\"https://blog.rust-lang.org/inside-rust/2022/01/18/jan-steering-cycle.html\">https://blog.rust-lang.org/inside-rust/2022/01/18/jan-steering-cycle.html</a> </li>\n<li>Document prepared by Felix: <a href=\"https://hackmd.io/YY3u0dkURtiQHDVX0hEImA?view\">https://hackmd.io/YY3u0dkURtiQHDVX0hEImA?view</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269585246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295865
    },
    {
        "content": "<p>(I’m planning to try to flesh out that document more, but even with what’s there now, I think there’s some important pieces of that picture that we will be discussing in that meeting.)</p>",
        "id": 269585376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295910
    },
    {
        "content": "<ul>\n<li>Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> or <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> so we can pass it along).</li>\n</ul>",
        "id": 269585427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295928
    },
    {
        "content": "<ul>\n<li>(TIP) strive to include a <em>reason</em> when you do <code>@bors retry</code>, even if you think its obvious from context. Why? Because the context absent on <a href=\"https://bors.rust-lang.org/retry_log/rust\">https://bors.rust-lang.org/retry_log/rust</a>, but it <em>will</em> show your comment. (<a href=\"https://zulip-archive.rust-lang.org/stream/131828-t-compiler/topic/bors.3A.20stop.20prioritizing.20old.20PRs.20over.20new.20PRs.html#267617921\">related zulip discussion</a>)</li>\n</ul>",
        "id": 269585454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295939
    },
    {
        "content": "<p>(I was unaware that there was a meaningful “reason” field on <code>@bors retry</code> before I saw that conversation, so thanks to all who participated in that conversation)</p>",
        "id": 269585590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643295979
    },
    {
        "content": "<p>another tip I’ll throw out there: For all the reviewers out there: if a PR seems like it could affect compiler performance, please do request a performance run. It makes things a lot easier, in terms of teasing out what performance changes were anticipated and which were not (and it can help inform about whether a PR should be included in a rollup)</p>",
        "id": 269585797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296054
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 269585891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296084
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 269585902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296091
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last review activity: 6 months ago)</li>\n<li>\"Make <code>-Z binary-dep-depinfo</code> the default behavior\" <a href=\"https://github.com/rust-lang/compiler-team/issues/464\">compiler-team#464</a> (last review activity: 3 months ago)</li>\n<li>\"Tier 3 target proposal: riscv64gc-linux-android (Android target for <code>riscv64gc</code>)\" <a href=\"https://github.com/rust-lang/compiler-team/issues/472\">compiler-team#472</a> (last review activity: about 48 days ago)</li>\n<li>\"<code>-Dwarnings</code> to cover all warnings\" <a href=\"https://github.com/rust-lang/compiler-team/issues/473\">compiler-team#473</a> (last review activity: about 48 days ago)</li>\n<li>\"Build-time execution sandboxing\" <a href=\"https://github.com/rust-lang/compiler-team/issues/475\">compiler-team#475</a> (last review activity: about 31 days ago)</li>\n<li>\"Dealing with type/const ambiguities\" <a href=\"https://github.com/rust-lang/compiler-team/issues/480\">compiler-team#480</a> (last review activity: about 6 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 269585918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296103
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>No pending FCP requests this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 269585941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296115
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Stabilize <code>-Z instrument-coverage</code> as <code>-C instrument-coverage</code>\" <a href=\"https://github.com/rust-lang/rust/pull/90132\">rust#90132</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269585962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296129
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> </li>\n<li>\"Adding known bugs to test cases\" <a href=\"https://github.com/rust-lang/compiler-team/issues/476\">compiler-team#476</a> </li>\n<li>\"Introduce a new linter for diagnostic meesages\" <a href=\"https://github.com/rust-lang/compiler-team/issues/478\">compiler-team#478</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269586009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296145
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Change location of where clause on GATs\" <a href=\"https://github.com/rust-lang/rust/pull/90076\">rust#90076</a> </li>\n<li>\"Stabilize <code>-Z print-link-args</code> as <code>--print link-args</code>\" <a href=\"https://github.com/rust-lang/rust/pull/91606\">rust#91606</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269586032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296153
    },
    {
        "content": "<h3>WG checkins</h3>\n<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1060\">WG-rls2.0</span> by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> (<a href=\"https://hackmd.io/N_WW5tZqTLWouaed6cCjxg#WG-checkins\">previous checkin</a>)</li>\n</ul>",
        "id": 269586141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296197
    },
    {
        "content": "<p>(if <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> or anyone else from WG-rls2.0 have anything to report (<span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> ?), feel free to chime in sometime in the next 50minutes)</p>",
        "id": 269586366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296271
    },
    {
        "content": "<ul>\n<li><span class=\"user-group-mention silent\" data-user-group-id=\"1123\">WG-self-profile</span> by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> (<a href=\"https://hackmd.io/HYT7NJFwS8q8Xp1h_CmfTQ#WG-checkins\">previous checkin</a>)<blockquote>\n<p>Nothing to report this cycle.</p>\n</blockquote>\n</li>\n</ul>",
        "id": 269586409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296293
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 269586439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296304
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Update LLVM submodule\" <a href=\"https://github.com/rust-lang/rust/pull/93081\">rust#93081</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> (see <a href=\"https://github.com/rust-lang/rust/pull/93081#issuecomment-1018684296\">comment</a>) as it fixes a mis-compilation on aarch64-unknown-linux-gnu introduced in 1.57 </li>\n<li>also nominated for stable backport</li>\n</ul>\n</li>\n</ul>",
        "id": 269586470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296318
    },
    {
        "content": "<p>if we’re going to be backporting stuff for LLVM bugs, I’d like to also make sure we look the patch that is supposed to fix <a href=\"https://github.com/rust-lang/rust/issues/91671\">#91671</a></p>",
        "id": 269586839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296454
    },
    {
        "content": "<p>I'm a bit confused which commits are actually relevant.</p>",
        "id": 269586841,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296455
    },
    {
        "content": "<p>Is it just <a href=\"https://github.com/rust-lang/rust/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">221a195b62f4373a8893f4d022e4ce981b09a857</a>?</p>",
        "id": 269586861,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296465
    },
    {
        "content": "<p>Since it looks like <a href=\"https://github.com/rust-lang/rust/commit/ce65262d7ce251555ed386bca9691636b6fdcf77\">ce65262d7ce251555ed386bca9691636b6fdcf77</a> was reverted?</p>",
        "id": 269586893,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-27.20.2354818/near/269586861\">said</a>:</p>\n<blockquote>\n<p>Is it just <a href=\"https://github.com/rust-lang/rust/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">221a195b62f4373a8893f4d022e4ce981b09a857</a>?</p>\n</blockquote>\n<p>(this link didn’t work)</p>",
        "id": 269586942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296504
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857</a></p>",
        "id": 269587056,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296544
    },
    {
        "content": "<p>thanks</p>",
        "id": 269587089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296560
    },
    {
        "content": "<p>From <a href=\"https://github.com/rust-lang/rust/issues/93081\">#93081</a>, I clicked the \"9 files\" link under \"Files changed\" and got this list of commits <a href=\"https://github.com/rust-lang/llvm-project/compare/6b3dbcc81a470e5da84576d63fcfc19e3b1154cd...221a195b62f4373a8893f4d022e4ce981b09a857\">https://github.com/rust-lang/llvm-project/compare/6b3dbcc81a470e5da84576d63fcfc19e3b1154cd...221a195b62f4373a8893f4d022e4ce981b09a857</a></p>",
        "id": 269587244,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296615
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and I can follow up with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> outside this meeting to resolve these questions</p>",
        "id": 269587319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296649
    },
    {
        "content": "<p>it was reverted but re-added wasn't it?</p>",
        "id": 269587361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296667
    },
    {
        "content": "<p>(No objection to backporting, just trying to understand what's in the backport <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 269587378,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296678
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/llvm-project/commit/6c32ce82db36e443b7011a1db8fb100da567c4ab\">https://github.com/rust-lang/llvm-project/commit/6c32ce82db36e443b7011a1db8fb100da567c4ab</a></p>",
        "id": 269587427,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296684
    },
    {
        "content": "<p>and then <a href=\"https://github.com/rust-lang/llvm-project/commit/ce65262d7ce251555ed386bca9691636b6fdcf77\">https://github.com/rust-lang/llvm-project/commit/ce65262d7ce251555ed386bca9691636b6fdcf77</a></p>",
        "id": 269587437,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296688
    },
    {
        "content": "<p>so the actual important ones are <a href=\"https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857</a> and <a href=\"https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac\">https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac</a></p>",
        "id": 269587484,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296710
    },
    {
        "content": "<p>important in the sense, being backported</p>",
        "id": 269587531,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296732
    },
    {
        "content": "<p>Well 6c32ce82db says \"This reverts commit ce65262\" so I think they cancel each other out.</p>",
        "id": 269587552,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296739
    },
    {
        "content": "<p>right, that's what I'm saying</p>",
        "id": 269587582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643296750
    },
    {
        "content": "<p>so lets see: the backport thats being suggested will include <a href=\"https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac\">https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac</a> , which doesn’t seem like  its resolving something that we’d normally <em>wouldn't</em> backport. But its also just extra complication to <em>avoid</em> backporting that, right?</p>",
        "id": 269587770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296814
    },
    {
        "content": "<p>Anyway I’m fine with approving these backports</p>",
        "id": 269587948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296887
    },
    {
        "content": "<p>(I am kicking myself for not pushing harder to get the fix for <a href=\"https://github.com/rust-lang/rust/issues/91671\">#91671</a> in there, but so be it.)</p>",
        "id": 269588084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296938
    },
    {
        "content": "<p>I think ideally we would just backport <a href=\"https://github.com/rust-lang/rust/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">221a195b62f4373a8893f4d022e4ce981b09a857</a> to beta but if that's complicated, I don't have an issue with taking all four commits.</p>",
        "id": 269588129,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643296959
    },
    {
        "content": "<p>lets move along</p>",
        "id": 269588130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296959
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-27.20.2354818/near/269588129\">said</a>:</p>\n<blockquote>\n<p>I think ideally we would just backport <a href=\"https://github.com/rust-lang/rust/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">221a195b62f4373a8893f4d022e4ce981b09a857</a> to beta but if that's complicated, I don't have an issue with taking all four commits.</p>\n</blockquote>\n<p>yeah, I don’t know if having the beta history for llvm wildly deviate from its normal path is a good idea</p>",
        "id": 269588201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643296996
    },
    {
        "content": "<p>but I can definitely see both sides of that debate</p>",
        "id": 269588239,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297017
    },
    {
        "content": "<p>(mostly I’m just concerned with how hard it might be to understand how the beta and nightly submodule settings differ.)</p>",
        "id": 269588345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297048
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Use error-on-mismatch policy for PAuth module flags.\" <a href=\"https://github.com/rust-lang/rust/pull/93269\">rust#93269</a> <ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/92885\">rust#92885</a>, a <code>P-high</code> regression affecting building on arm64</li>\n<li>Nominated by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> since this fixes a beta-to-stable regression</li>\n</ul>\n</li>\n</ul>",
        "id": 269588396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297070
    },
    {
        "content": "<p>Yeah, that's a good point as well. I'm fine with whatever we normally do in this situation.</p>",
        "id": 269588406,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643297076
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> any thoughts on PR <a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a> ?</p>",
        "id": 269588543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297146
    },
    {
        "content": "<p>I would remove pauth support entirely from beta.</p>",
        "id": 269588643,
        "sender_full_name": "nagisa",
        "timestamp": 1643297191
    },
    {
        "content": "<p>also, should we be worried about the CI situation described in the description of <a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a> ?</p>",
        "id": 269588647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297196
    },
    {
        "content": "<p>i.e. revert the PR which added the functionality.</p>",
        "id": 269588654,
        "sender_full_name": "nagisa",
        "timestamp": 1643297198
    },
    {
        "content": "<p>ah well that’s certainly another path, and one we should consider</p>",
        "id": 269588679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> it was added in PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a>, right?</p>",
        "id": 269588766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297255
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 269588853,
        "sender_full_name": "nagisa",
        "timestamp": 1643297283
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/88354/files\">https://github.com/rust-lang/rust/pull/88354/files</a> looks quite self-contained so a revert should be pretty easy.</p>",
        "id": 269588881,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643297298
    },
    {
        "content": "<p>Was PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a> supposed to be guarded by a <code>-Z</code> flag and it wasn’t?</p>",
        "id": 269588916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297314
    },
    {
        "content": "<p>Overall, I'm somewhat reluctant to say that clang is the only other toolchain we should look to interoperate for lto purposes.</p>",
        "id": 269588944,
        "sender_full_name": "nagisa",
        "timestamp": 1643297328
    },
    {
        "content": "<p>Okay, well, does anyone object to reverting PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a> on beta? because I agree with <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  that seems like a better path for now</p>",
        "id": 269589124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297403
    },
    {
        "content": "<p>lets plan on that unless someone speaks up.</p>",
        "id": 269589162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297416
    },
    {
        "content": "<p>it sorta is, what I didn't consider is that it adds metadata even if the <code>-Z</code> flags enabling specific protection types is not specified.</p>",
        "id": 269589164,
        "sender_full_name": "nagisa",
        "timestamp": 1643297416
    },
    {
        "content": "<p>sgtm</p>",
        "id": 269589165,
        "sender_full_name": "oli",
        "timestamp": 1643297416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-27.20.2354818/near/269589164\">said</a>:</p>\n<blockquote>\n<p>it sorta is, what I didn't consider is that it adds metadata even if the <code>-Z</code> flags enabling specific protection types is not specified.</p>\n</blockquote>\n<p>is that metadata unavoidable, or could it <em>also</em> be guarded by <code>-Z</code> flags?</p>",
        "id": 269589243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297449
    },
    {
        "content": "<p>well you and I can follow up about that outside of this meeting.</p>",
        "id": 269589301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297475
    },
    {
        "content": "<p>We could make sure the metadata isn't added without the -Z flag, yes.</p>",
        "id": 269589309,
        "sender_full_name": "nagisa",
        "timestamp": 1643297477
    },
    {
        "content": "<p>okay. I think I’d like that.</p>",
        "id": 269589319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297485
    },
    {
        "content": "<p>next</p>\n<ul>\n<li><img alt=\":stable:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20716.png\" title=\"stable\"> \"Update LLVM submodule\" <a href=\"https://github.com/rust-lang/rust/pull/93081\">rust#93081</a></li>\n</ul>",
        "id": 269589359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297505
    },
    {
        "content": "<p>let me go look at those commits again quickly. :)</p>",
        "id": 269589510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297558
    },
    {
        "content": "<p>ff<br>\n<span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-01-27.20.2354818/near/269587484\">said</a>:</p>\n<blockquote>\n<p>so the actual important ones are <a href=\"https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857</a> and <a href=\"https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac\">https://github.com/rust-lang/llvm-project/commit/2abffbf977a9e8c6ca4174a08fe5c4d7781f0aac</a></p>\n</blockquote>\n<p>namely these ^ (assuming the others do indeed cancel each other out)</p>",
        "id": 269589558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297582
    },
    {
        "content": "<p>I would argue that the codeview one is not all that important – unlikely to cause problems and does not introduce much of an interesting behaviour on its own either.</p>",
        "id": 269589921,
        "sender_full_name": "nagisa",
        "timestamp": 1643297731
    },
    {
        "content": "<p>okay. after you get rid of the <code>#if 0</code> code, and the alpha rename, and the parameter-type change, it seems like the only real effect of  <a href=\"https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857\">https://github.com/rust-lang/llvm-project/commit/221a195b62f4373a8893f4d022e4ce981b09a857</a>  is this</p>",
        "id": 269589959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297747
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+  // Is this store a truncating one?</span><span class=\"w\"></span>\n<span class=\"gi\">+  if (StoreSrcTy.getSizeInBits() != StoreMI.getMemSizeInBits())</span><span class=\"w\"></span>\n<span class=\"gi\">+    return false;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 269590030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297764
    },
    {
        "content": "<p>based on what I’ve seen, I’m comfortable back-porting this to stable</p>",
        "id": 269590124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297809
    },
    {
        "content": "<p>Whatever we end up doing, let's make sure this is clearly communicated in the release notes: I know some Linux distros don't use our LLVM instead relying on their packaged version.</p>",
        "id": 269590137,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1643297814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> you want us to emphasize that we haven’t changed anything about how we interface to the underlying LLVM ?</p>",
        "id": 269590249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297860
    },
    {
        "content": "<p>i.e. I don’t expect distros to change their policy here based on these kinds of issues</p>",
        "id": 269590273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297874
    },
    {
        "content": "<p>or, oh, do some distro’s also patch their packaged LLVM in analogous ways?</p>",
        "id": 269590360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297899
    },
    {
        "content": "<p>(I would be surprised if they do, but what do I know)</p>",
        "id": 269590384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297910
    },
    {
        "content": "<p>I think it's also a good idea to emphasize this is us backporting an LLVM commit to fix an LLVM regression on a Tier 1 platform.</p>",
        "id": 269590394,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643297915
    },
    {
        "content": "<p>Anyway, its not like we’re saying there has to be a point release</p>",
        "id": 269590442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297941
    },
    {
        "content": "<p>we’re just saying we would approve this being part of a hypotheical future point release</p>",
        "id": 269590481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297960
    },
    {
        "content": "<p>anyway, seems like there aren’t objections to approving a stable backport here.</p>",
        "id": 269590538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297984
    },
    {
        "content": "<p>so lets move along</p>",
        "id": 269590548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643297988
    },
    {
        "content": "<p>so, let me recap the backports:</p>",
        "id": 269590568,
        "sender_full_name": "apiraino",
        "timestamp": 1643297997
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a> is approved and supersedes <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a> (will be reverted on beta)</li>\n</ul>",
        "id": 269590595,
        "sender_full_name": "apiraino",
        "timestamp": 1643298003
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/93081\">#93081</a> ok'd for both beta and stable backport</li>\n</ul>",
        "id": 269590622,
        "sender_full_name": "apiraino",
        "timestamp": 1643298005
    },
    {
        "content": "<p>correct?</p>",
        "id": 269590632,
        "sender_full_name": "apiraino",
        "timestamp": 1643298009
    },
    {
        "content": "<p>uh, more like: we decided not to backport PR <a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a>, and instead we will revert PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a> on beta</p>",
        "id": 269590729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298046
    },
    {
        "content": "<p>ok thanks, I didnt clearly understand :)</p>",
        "id": 269590783,
        "sender_full_name": "apiraino",
        "timestamp": 1643298070
    },
    {
        "content": "<p>(though if there is some <em>problem</em> with reverting PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a>, then I guess we would fallback on backporting PR <a href=\"https://github.com/rust-lang/rust/issues/93269\">#93269</a>. So, sure.)</p>",
        "id": 269590789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298072
    },
    {
        "content": "<p>(but so far, no one is expecting a problem with reverting PR <a href=\"https://github.com/rust-lang/rust/issues/88354\">#88354</a>)</p>",
        "id": 269590812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298084
    },
    {
        "content": "<p>I don’t see any rustdoc stuff in the agenda. Did you elide that section this week, <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> ?</p>",
        "id": 269590866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298118
    },
    {
        "content": "<p>(which I am totally cool with)</p>",
        "id": 269590928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298132
    },
    {
        "content": "<p>uh yes (was a mistake, but ... yeah)</p>",
        "id": 269590954,
        "sender_full_name": "apiraino",
        "timestamp": 1643298142
    },
    {
        "content": "<p>okay</p>",
        "id": 269590964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298147
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No PRs waiting on <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 269590971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298153
    },
    {
        "content": "<p>ing for review</p>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler+-label%3AT-lang+-label%3AT-infra+-label%3AT-release+-label%3AT-libs+-label%3AT-libs-api\">List of PRs <code>s-waiting-for-review</code></a></p>",
        "id": 269590994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298164
    },
    {
        "content": "<ul>\n<li>\"might_permit_raw_init: also check arrays (take two)\" <a href=\"https://github.com/rust-lang/rust/pull/87041\">rust#87041</a> (last review activity: 6 months ago)<ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n<li>PR now seems ready again for review</li>\n<li>seems interesting for <a href=\"https://github.com/rust-lang/rust/issues/66151\">rust#66151</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269591011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298172
    },
    {
        "content": "<p>I’ll assume <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> will get around to this. Let us know if you need this redistributed, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 269591099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298225
    },
    {
        "content": "<ul>\n<li>\"When encountering a binding that could be a const or unit variant, suggest the right path\" <a href=\"https://github.com/rust-lang/rust/pull/90988\">rust#90988</a> (last review activity: 2 months ago)<ul>\n<li>PR author @<strong>estebank</strong></li>\n<li>rust-highfive assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></li>\n<li>PR now shows conflicts due to upstream changes</li>\n</ul>\n</li>\n</ul>",
        "id": 269591135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> , I’ll trust you’ll reach out if you’re not getting review support that you need</p>",
        "id": 269591228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298270
    },
    {
        "content": "<ul>\n<li>\"More informative error message for E0015\" <a href=\"https://github.com/rust-lang/rust/pull/90532\">rust#90532</a> (last review activity: 2 months ago)<ul>\n<li>pr improves diagnostics (see <a href=\"https://github.com/rust-lang/rust/issues/92380\">rust#92380</a>)</li>\n<li>pr author <span class=\"user-mention\" data-user-id=\"361356\">@fee1-dead</span>  </li>\n<li>review assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n</ul>\n</li>\n</ul>",
        "id": 269591250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298281
    },
    {
        "content": "<p>same deal as the PR two steps up; I’m assuming <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> will be getting around to this soon.</p>",
        "id": 269591304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298305
    },
    {
        "content": "<ul>\n<li>\"Try to normalize associated types before processing obligations\" <a href=\"https://github.com/rust-lang/rust/pull/90887\">rust#90887</a> (last review activity: 2 months ago)<ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> </li>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/90887#issuecomment-973164844\">last comment</a> from author hints that perf regressions are triaged</li>\n</ul>\n</li>\n</ul>",
        "id": 269591331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298318
    },
    {
        "content": "<p>(i have a bunch of languishing PRs that I need to get back to, just haven't had the time to dedicate myself to them)</p>",
        "id": 269591393,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1643298339
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/90887\">#90887</a> is just waiting for <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 269591433,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> same as <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> : just let me know if you aren’t getting the review support you need.</p>",
        "id": 269591509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298373
    },
    {
        "content": "<p>It's been brought up a bunch, he just hasn't gotten to it</p>",
        "id": 269591510,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298373
    },
    {
        "content": "<p>Okay, sounds good.</p>",
        "id": 269591524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298380
    },
    {
        "content": "<ul>\n<li>\"Store hir_id_to_def_id in OwnerNodes.\" <a href=\"https://github.com/rust-lang/rust/pull/91112\">rust#91112</a> (last review activity: 2 months ago)<ul>\n<li>pr author <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span></li>\n<li>seems to be part of <a href=\"https://github.com/rust-lang/rust/pull/88186\">rust#88186</a></li>\n<li>no assignee to far</li>\n<li>latest <a href=\"https://github.com/rust-lang/rust/pull/91112#issuecomment-986269024\">perf run</a> shows mixed results with significant increase in instruction count. Does this perf benchmark needs triaging?</li>\n</ul>\n</li>\n</ul>",
        "id": 269591562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298399
    },
    {
        "content": "<p>oh, its been closed. :)</p>",
        "id": 269591632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298427
    },
    {
        "content": "<p>pr is closed now</p>",
        "id": 269591635,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298428
    },
    {
        "content": "<p>great great great</p>",
        "id": 269591680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298441
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">2 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">76 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">48 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">0 P-critical, 0 P-high, 0 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 1 P-high, 1 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 50 P-high, 81 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 269591707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298453
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 269591750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298464
    },
    {
        "content": "<ul>\n<li>\"Miscompilation where binding only some fields leaks the others\" <a href=\"https://github.com/rust-lang/rust/issues/90752\">rust#90752</a><ul>\n<li>Should be fixed in 1.58.x (see following note)</li>\n</ul>\n</li>\n</ul>",
        "id": 269591771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298471
    },
    {
        "content": "<ul>\n<li>\"Compile-time regression between 1.56.1 and 1.57.0 for deeply nested decorator types\" <a href=\"https://github.com/rust-lang/rust/issues/91598\">rust#91598</a><ul>\n<li>Should be fixed in 1.58.x (see following note), commenter reports to see it fixed in 1.59</li>\n</ul>\n</li>\n</ul>",
        "id": 269591823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298482
    },
    {
        "content": "<ul>\n<li>A note about <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a> and <a href=\"https://github.com/rust-lang/rust/issues/91598\">#91598</a>: I (<span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> ) tried to gather input from issue authors (and other people affected) if these issues are solved on their end, so we can move to closing them. Latest comments seems to indicate that in general people are happy, though not always clear if they can still reproduce the original situation. How to best handle this? Can we close them or should we wait for a little bit more?</li>\n</ul>",
        "id": 269591870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298493
    },
    {
        "content": "<p><code>S-probably-fixed</code>? /s</p>",
        "id": 269592017,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298550
    },
    {
        "content": "<p>it sounds to me like in both these cases, the problem no longer duplicates in the minimized versions that were supplied, right?</p>",
        "id": 269592025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298554
    },
    {
        "content": "<p>I'm in favor of closing if we're \"reasonably\" confident the issue is actually resolved. We can always reopen if the author comes back and says it isn't fixed.</p>",
        "id": 269592127,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643298598
    },
    {
        "content": "<p>yes. I am in favor of closing both these</p>",
        "id": 269592188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298609
    },
    {
        "content": "<p>in some cases, other people piled on in the comments, with bugs they thought were related</p>",
        "id": 269592212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298621
    },
    {
        "content": "<p>and in some cases, those related bugs won’t actually be fixed</p>",
        "id": 269592243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298635
    },
    {
        "content": "<p>in theory, the right thing to do there is to go through those comments and identify those cases and file separate issues for them</p>",
        "id": 269592267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298651
    },
    {
        "content": "<p>but I don’t want to block closing these issues on that task, which might never happen</p>",
        "id": 269592300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298664
    },
    {
        "content": "<p>Plus, for <a href=\"https://github.com/rust-lang/rust/issues/91598\">#91598</a>, we have a benchmark now to cover this case</p>",
        "id": 269592326,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298673
    },
    {
        "content": "<p>There's a couple PRs open that might improve it</p>",
        "id": 269592353,
        "sender_full_name": "Jack Huey",
        "timestamp": 1643298687
    },
    {
        "content": "<p>I’m trusting the commenters to do that if it matters, the same way I ‘m trusting the issue authors to file a new issue if the original unminimized thing isn’t actually resolved.</p>",
        "id": 269592383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298697
    },
    {
        "content": "<p>so lets close these. Thanks so much for following up with the issue filers here, <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> !</p>",
        "id": 269592482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298723
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 269592510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298735
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 269592525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298743
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>\"Regression in async generator and fmt internals: loss of <code>Send</code>\" <a href=\"https://github.com/rust-lang/rust/issues/93274\">rust#93274</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> </li>\n<li><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> provides some analysis (see <a href=\"https://github.com/rust-lang/rust/issues/93274#issuecomment-1020710662\">comment</a>), seems to have regressed in <a href=\"https://github.com/rust-lang/rust/pull/91359\">rust#91359</a></li>\n</ul>\n</li>\n</ul>",
        "id": 269592548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298753
    },
    {
        "content": "<p>lets tag with with the async labels, the <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> group should be looking at it, I think.</p>",
        "id": 269592636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298786
    },
    {
        "content": "<p>(probably dtolnay as well)</p>",
        "id": 269592690,
        "sender_full_name": "lqd",
        "timestamp": 1643298812
    },
    {
        "content": "<h2>Performance logs</h2>\n<h3><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-25.md\">2022-01-26 Triage Log</a></h3>\n<p>An awesome week. There was some bits of noise from PR <a href=\"https://github.com/rust-lang/rust/issues/91032\">#91032</a> that landed and then had to be backed out (and may soon land again), and we continue to wrestle with how to classify which things to include in rollup PR's. But overall there were some very real wins to the compiler's performance, and it is definitely reflected in the <a href=\"https://perf.rust-lang.org/bootstrap.html\">total bootstrap time graph</a>. Great job!</p>\n<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=7bc7be860f99f4a40d45b0f74e2d01b02e072357&amp;end=c54dfee65126a0ac385d55389a316e89095a0713&amp;absolute=false&amp;stat=instructions%3Au\">7bc7be860f99f4a40d45b0f74e2d01b02e072357..c54dfee65126a0ac385d55389a316e89095a0713</a></p>\n<p>4 Regressions, 5 Improvements, 4 Mixed; 3 of them in rollups</p>\n<p>29 comparisons made in total<br>\n30 Untriaged Pull Requests</p>",
        "id": 269592696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298815
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Update some rustc dependencies to deduplicate them <a href=\"https://github.com/rust-lang/rust/issues/92896\">#92896</a></p>\n<ul>\n<li>Average relevant regression: 0.5%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=0bcacb391b28460f5a50fd627f01f670dfcfc7cc&amp;end=84e918971d643c6a33067d5125214ab800ce5307&amp;stat=instructions:u\">instruction counts</a>: 0.6% on <code>full</code> builds of <code>match-stress-enum check</code></li>\n<li>6 of the 7 significant relevant regresions were to variants of <code>match-stress-enum</code>.</li>\n<li>PR author guesses that it could be noise injected via one of the dependency updates, specifically hashbrown 0.11.0 to 0.11.2.</li>\n<li>Left it untriaged for now (I would like to circle back and check whether there's any way to check that hypothesis; but if it goes untouched for a week, then we might just rubber-stamp it as triaged).</li>\n</ul>\n<p>Disable drop range tracking in generators <a href=\"https://github.com/rust-lang/rust/issues/93165\">#93165</a></p>\n<ul>\n<li>Average relevant regression: 284.5%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=10c4c4afec6dfc483af6efb7019941bab9a51a29&amp;end=d13e8dd41d44a73664943169d5b7fe39b22c449f&amp;stat=instructions:u\">instruction counts</a>: 879.2% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>This regression was expected; it is a result of backing out PR <a href=\"https://github.com/rust-lang/rust/issues/91032\">#91032</a>, which was included in rollup PR <a href=\"https://github.com/rust-lang/rust/issues/93138\">#93138</a>, but was reverted due to correctness concerns (discussed under \"Mixed\" section below).</li>\n</ul>\n<p>Revert \"Do not hash leading zero bytes of i64 numbers in Sip128 hasher\" <a href=\"https://github.com/rust-lang/rust/issues/93014\">#93014</a></p>\n<ul>\n<li>Average relevant regression: 1.5%</li>\n<li>Average relevant improvement: -0.7%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ef119d704d87a05435ea97ef4161529142313a9b&amp;end=d2dc425721554348d4ed427f7eb89cdb49efefdb&amp;stat=instructions:u\">instruction counts</a>: 7.9% on <code>incr-full</code> builds of <code>clap-rs check</code></li>\n<li>This regression was expected; this PR reverts a perf optimization to restore correctness.</li>\n</ul>\n<p>Store a <code>Symbol</code> instead of an <code>Ident</code> in <code>AssocItem</code> <a href=\"https://github.com/rust-lang/rust/issues/93095\">#93095</a></p>\n<ul>\n<li>Average relevant regression: 0.8%</li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=92ed8747f255b2695c33b64982e6959711a72cb9&amp;end=8cdb3cd94efece1e17cbd8f6edb1dc1a482779a0&amp;stat=instructions:u\">instruction counts</a>: 2.1% on <code>incr-patched: compile one</code> builds of <code>regex check</code></li>\n<li>This PR was already triaged: it is a correctness fix for incremental compilation, and the lesser of two evils (when compared to PR <a href=\"https://github.com/rust-lang/rust/pull/92837\">#92837</a>).</li>\n</ul>",
        "id": 269592747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298837
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Improve capacity estimation in Vec::from_iter <a href=\"https://github.com/rust-lang/rust/issues/92138\">#92138</a></li>\n<li>Make <code>Decodable</code> and <code>Decoder</code> infallible. <a href=\"https://github.com/rust-lang/rust/issues/93066\">#93066</a></li>\n<li>Use <code>indexmap</code> to avoid sorting <code>LocalDefId</code>s <a href=\"https://github.com/rust-lang/rust/issues/90842\">#90842</a></li>\n<li>Rustdoc: remove ListAttributesIter and use impl Iterator instead <a href=\"https://github.com/rust-lang/rust/issues/92353\">#92353</a></li>\n<li>Rollup of 10 pull requests <a href=\"https://github.com/rust-lang/rust/issues/93069\">#93069</a></li>\n</ul>",
        "id": 269592862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298876
    },
    {
        "content": "<p>by the way, I did have specific notes on the Improvements, <a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-25.md#improvements\">https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-25.md#improvements</a></p>",
        "id": 269592999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298932
    },
    {
        "content": "<p>in particular I wanted to give a shout out to <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> for the work on PR <a href=\"https://github.com/rust-lang/rust/issues/93066\">#93066</a></p>",
        "id": 269593034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298947
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Rollup of 17 pull requests <a href=\"https://github.com/rust-lang/rust/issues/93138\">#93138</a></p>\n<ul>\n<li>Average relevant regression: 1.6%</li>\n<li>Average relevant improvement: -57.9%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b&amp;end=523be2e05da322daaecf1ecc8f2c0d625f5f46e3&amp;stat=instructions:u\">instruction counts</a>: -89.5% on <code>full</code> builds of <code>deeply-nested-async check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b&amp;end=523be2e05da322daaecf1ecc8f2c0d625f5f46e3&amp;stat=instructions:u\">instruction counts</a>: 2.6% on <code>full</code> builds of <code>await-call-tree check</code></li>\n<li>The noted improvement from this roll-up was due to the inclusion of PR <a href=\"https://github.com/rust-lang/rust/pull/91032\">#91032</a>, \"Introduce drop range tracking to generator interior analysis\".</li>\n<li>PR <a href=\"https://github.com/rust-lang/rust/pull/91032\">#91032</a> injected a family of ICEs, such as issue <a href=\"https://github.com/rust-lang/rust/issues/93161\">#93161</a>, so the feature it added is being disabled.</li>\n<li>As for the improvement: The PR author, <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span>, made a <a href=\"https://github.com/rust-lang/rust/pull/93138#issuecomment-1019567349\">note</a> hypothesizing that the improvement to deeply-nested-async may be an artifact of how much is pruned from the generator type. (This may be a sign of a overly artificial benchmark; I wrote a <a href=\"https://github.com/rust-lang/rust/pull/93138#issuecomment-1021820785\">comment</a> asking for more clarification there.)</li>\n</ul>\n<p>Emit simpler code from format_args <a href=\"https://github.com/rust-lang/rust/issues/91359\">#91359</a></p>\n<ul>\n<li>Average relevant regression: 1.2%</li>\n<li>Average relevant improvement: -0.7%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=523be2e05da322daaecf1ecc8f2c0d625f5f46e3&amp;end=0bcacb391b28460f5a50fd627f01f670dfcfc7cc&amp;stat=instructions:u\">instruction counts</a>: -2.2% on <code>full</code> builds of <code>cranelift-codegen check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=523be2e05da322daaecf1ecc8f2c0d625f5f46e3&amp;end=0bcacb391b28460f5a50fd627f01f670dfcfc7cc&amp;stat=instructions:u\">instruction counts</a>: 3.0% on <code>full</code> builds of <code>html5ever opt</code></li>\n<li>These performance differences were anticipated ahead of time. <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> posted a <a href=\"https://github.com/rust-lang/rust/pull/91359#issuecomment-1013525074\">nice analysis</a> explaining the probable root cause.</li>\n<li>Notably, \"with <code>-Csymbol-mangling-version=v0</code> the hashes (changes to which cause LLVM's workload to change) go away; [...] this patch is pretty much an improvement in terms of emitted IR (as roughly expected).\"</li>\n</ul>\n<p>Update hashbrown to 0.12.0 <a href=\"https://github.com/rust-lang/rust/issues/92998\">#92998</a></p>\n<ul>\n<li>Average relevant regression: 1.0%</li>\n<li>Average relevant improvement: -0.9%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=bfe15646761a75f0259e204cab071565eed2b1e5&amp;end=10c4c4afec6dfc483af6efb7019941bab9a51a29&amp;stat=instructions:u\">instruction counts</a>: -9.4% on <code>incr-patched: println</code> builds of <code>webrender opt</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=bfe15646761a75f0259e204cab071565eed2b1e5&amp;end=10c4c4afec6dfc483af6efb7019941bab9a51a29&amp;stat=instructions:u\">instruction counts</a>: 2.5% on <code>incr-unchanged</code> builds of <code>externs debug</code></li>\n<li>\"an overall win but with a bit of noise since this code is extremely sensitive to inlining.\"</li>\n</ul>\n<p>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/93288\">#93288</a></p>\n<ul>\n<li>Average relevant regression: 1.5%</li>\n<li>Average relevant improvement: -0.7%</li>\n<li>Largest improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e7825f2b690c9a0d21b6f6d84c404bb53b151b38&amp;end=df368ae457c54fb95d3e64f9986a5f171a6370f0&amp;stat=instructions:u\">instruction counts</a>: -0.8% on <code>incr-full</code> builds of <code>keccak check</code></li>\n<li>Largest regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e7825f2b690c9a0d21b6f6d84c404bb53b151b38&amp;end=df368ae457c54fb95d3e64f9986a5f171a6370f0&amp;stat=instructions:u\">instruction counts</a>: 2.0% on <code>incr-full</code> builds of <code>stm32f4 check</code></li>\n<li>stm32f4 regressed on many axes (check/debug/opt/doc, full and incremental); inflate check for both full and incremental. keccak improved slightly.</li>\n<li>It is not obvious what caused the changes here in this rollup.</li>\n<li>stm32f4 was added in part to test compiler trait machinery.</li>\n<li>After looking at each of 8 PR's in the rollup, most likely causes are either PR <a href=\"https://github.com/rust-lang/rust/pull/93064/\">#93064</a> (\"Properly track DepNodes in trait evaluation provisional cache\") or PR <a href=\"https://github.com/rust-lang/rust/pull/93175/\">#93175</a> (\"Implement stable overlap check considering negative traits\"). Left comments on each PR asking if they should have had perf runs.</li>\n<li>I am leaving this unmarked (i.e. untriaged) for now.</li>\n</ul>",
        "id": 269593187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643298988
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No nominated issues for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 269593259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299019
    },
    {
        "content": "<p>I would like to call out \"New Cargo and Rust options to support embedding Natvis into a PDB\" - <a href=\"https://github.com/rust-lang/rfcs/pull/3191\">https://github.com/rust-lang/rfcs/pull/3191</a></p>",
        "id": 269593344,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643299058
    },
    {
        "content": "<p>Oh cool</p>",
        "id": 269593390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299076
    },
    {
        "content": "<p>That reminds me!</p>",
        "id": 269593401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299079
    },
    {
        "content": "<p>we have an ongoing conversation in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/roadmap.20for.202022.20discussion\">#t-compiler &gt; roadmap for 2022 discussion</a></p>",
        "id": 269593472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299092
    },
    {
        "content": "<p>Discussion is winding down so once that happens, I'm planning on starting an FCP to merge.</p>",
        "id": 269593478,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643299094
    },
    {
        "content": "<p>so if you care about where energy is spent this year on the compiler, you should join in that discussion</p>",
        "id": 269593519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299111
    },
    {
        "content": "<p>and I want to specifically call out: <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> are thinking that we finally have enough interest (and resources) to spin up a WG-debugging</p>",
        "id": 269593580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299141
    },
    {
        "content": "<p>So if you’re interested in helping out there (with implementation <em>or</em> with project management type stuff), please do reach out.</p>",
        "id": 269593639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299167
    },
    {
        "content": "<p>like, you don’t have to be an expert in DWARF to be a huge help here.</p>",
        "id": 269593684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299192
    },
    {
        "content": "<p>We should share this widely</p>",
        "id": 269593812,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1643299221
    },
    {
        "content": "<p>I’m hoping I’ll have more to say on that subject in the next few weeks</p>",
        "id": 269593822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299224
    },
    {
        "content": "<p>Yes. I am thinking I would like a structure somewhat inspired by what the Async Vision doc did</p>",
        "id": 269593923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299263
    },
    {
        "content": "<p>in particular, I want people to share their “Status Quo” stories of what debugging is like for them.</p>",
        "id": 269593963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299279
    },
    {
        "content": "<p>(but before I kick off any effort there, I want to circle ‘round with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and try to figure out if there’s a more lightweight structure we could use. and/or one that lets people have more agency with how they choose to relay their Status Quo stories to us…)</p>",
        "id": 269594139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299335
    },
    {
        "content": "<p>It would also be useful to identify experts for particular debuggers we can lean on when asking questions or deciding what the particular behavior of something should be.</p>",
        "id": 269594160,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1643299341
    },
    {
        "content": "<p>I may be able to occasionally help out. I've read a decent part of the dwarf spec to add debugging support to cg_clif, though I am by no means an expert.</p>",
        "id": 269594210,
        "sender_full_name": "bjorn3",
        "timestamp": 1643299361
    },
    {
        "content": "<p>Yes. As I mentioned in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/roadmap.20for.202022.20discussion\">#t-compiler &gt; roadmap for 2022 discussion</a> I have gotten engagement from one of the original authors of LLDB</p>",
        "id": 269594248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299376
    },
    {
        "content": "<p>so we definitely have resources we can tap here</p>",
        "id": 269594291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299396
    },
    {
        "content": "<p>anyway, our hour is up! Thank all of you in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  for coming!</p>",
        "id": 269594397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643299439
    }
]