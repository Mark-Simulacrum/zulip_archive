[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 209784769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833215
    },
    {
        "content": "<p>here is where I'll have my <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-10.20.2354818/near/209660554\">previously mentioned</a> \"open discussion time\"</p>",
        "id": 209784813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833246
    },
    {
        "content": "<p>My most immediate goal is to finish going through <a href=\"https://hackmd.io/Vvi4ngVfQneJLDzw6pz5Fg?view#Performance-logs\">yesterday's agenda items</a></p>",
        "id": 209785004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833351
    },
    {
        "content": "<p>but given the informal nature, feel free to inject digressions or post links to other Zulip topics that you think would be of general interest. :)</p>",
        "id": 209785073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833392
    },
    {
        "content": "<p>In the performance logs for the last week, there were some small compile-time regressions injected</p>",
        "id": 209785154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833416
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>A few small compile-time regressions this week. The first was <a href=\"https://github.com/rust-lang/rust/pull/70793\">#70793</a>, which added some specializations to the standard library in order to increase runtime performance. The second was <a href=\"https://github.com/rust-lang/rust/pull/73996\">#73996</a>, which adds an option to the diagnostics code to print only the names of types and traits when they are unique instead of the whole path. The third was <a href=\"https://github.com/rust-lang/rust/pull/75200\">#75200</a>, which refactored part of <code>BTreeMap</code> to avoid aliasing mutable references.</p>",
        "id": 209785190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833437
    },
    {
        "content": "<p>Triage done by <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> <br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=d927e5a655809b6b20501889e093c085d6ffe6f7&amp;end=35fc8359868e65a0970094f648ba87fce634e8c7&amp;absolute=false&amp;stat=instructions%3Au\">d927e5a655809b6b20501889e093c085d6ffe6f7..35fc8359868e65a0970094f648ba87fce634e8c7</a></p>\n<p>3 Regressions, 0 Improvements, 0 of them in rollups.</p>",
        "id": 209785205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833444
    },
    {
        "content": "<h4>Regressions</h4>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75200\">#75200</a></p>\n<ul>\n<li>A small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c59199efca5856cdf810919fbf9b5bce32dc4523&amp;end=70c5f6efc445963bbfa5dd53f81c245741eac8cb&amp;stat=instructions:u\">instruction counts</a></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73996\">#73996</a></p>\n<ul>\n<li>A small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=0d0f6b113047b2cf9afbde990cee30fd5b866469&amp;end=af3c6e733a40e671550e0f0f5aeecaa13772ba56&amp;stat=instructions:u\">instruction counts</a></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/70793\">#70793</a></p>\n<ul>\n<li>A small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=62dad457bc73804891c6ac9a31f90de19cbb59a3&amp;end=0d0f6b113047b2cf9afbde990cee30fd5b866469&amp;stat=instructions:u\">instruction counts</a> for <code>check</code>, <code>debug</code> and <code>opt</code> benchmarks.</li>\n<li>However, an improvement in <code>doc</code> benchmarks, likely due to better optimized standard library.</li>\n</ul>",
        "id": 209785226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833455
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>None</li>\n</ul>",
        "id": 209785234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833463
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/75200\">#75200</a></li>\n</ul>",
        "id": 209785243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833468
    },
    {
        "content": "<p>let me see what that nag was about.</p>",
        "id": 209785255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.20followup.5D.202020-09-11.20.2354818/near/209785255\">said</a>:</p>\n<blockquote>\n<p>let me see what that nag was about.</p>\n</blockquote>\n<p><a href=\"#narrow/stream/247081-t-compiler.2Fperformance/topic/Triage.20nags.20and.20.2375200\">https://rust-lang.zulipchat.com/#narrow/stream/247081-t-compiler.2Fperformance/topic/Triage.20nags.20and.20.2375200</a></p>",
        "id": 209785285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599833506
    },
    {
        "content": "<p><code>@ssomers</code> is not very happy with the review process</p>",
        "id": 209785342,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599833527
    },
    {
        "content": "<p>so I posted some followup thoughts in <a class=\"stream-topic\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance/topic/Triage.20nags.20and.20.2375200\">#t-compiler/performance &gt; Triage nags and #75200</a></p>",
        "id": 209785687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833714
    },
    {
        "content": "<p>I don't think this nag needs too much follow-up</p>",
        "id": 209785847,
        "sender_full_name": "simulacrum",
        "timestamp": 1599833787
    },
    {
        "content": "<p>nor do I</p>",
        "id": 209785859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833795
    },
    {
        "content": "<p>the btreemap code seems to be just very unstable</p>",
        "id": 209785863,
        "sender_full_name": "simulacrum",
        "timestamp": 1599833797
    },
    {
        "content": "<p>in the \"slight adjustment\" produces relatively strong effect. My current theory is it's very sensitive to inlining decisions or similar.</p>",
        "id": 209785899,
        "sender_full_name": "simulacrum",
        "timestamp": 1599833823
    },
    {
        "content": "<p>gotcha</p>",
        "id": 209786005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833879
    },
    {
        "content": "<p>/me is now skimming over the other metrics captures by perf here <em>besides</em> instruction counts</p>",
        "id": 209786139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833924
    },
    {
        "content": "<p>the max-rss and the #faults both went up quite a bit on a few benchmarks</p>",
        "id": 209786272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599833987
    },
    {
        "content": "<p>max-rss is <em>really</em> unstable</p>",
        "id": 209786365,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834018
    },
    {
        "content": "<p>but I think all of the significantly affected benchmarks are not representative of \"real code\" in the wild</p>",
        "id": 209786376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834024
    },
    {
        "content": "<p>hmm</p>",
        "id": 209786390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> in general, I assume you mean?</p>",
        "id": 209786410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834045
    },
    {
        "content": "<p>yes</p>",
        "id": 209786422,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834050
    },
    {
        "content": "<p>we see variability of +/- 20% easily on comment changes</p>",
        "id": 209786472,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834068
    },
    {
        "content": "<p>I wonder if its worth consider changing the allocator just to make that number more stable</p>",
        "id": 209786474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834068
    },
    {
        "content": "<p>tough to say</p>",
        "id": 209786483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834073
    },
    {
        "content": "<p>maybe, not sure. I've long wanted to figure out why there's such wide variability in the first place, I'd personally not expect it</p>",
        "id": 209786532,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834098
    },
    {
        "content": "<p>I've been on this ride before, in terms of the utility of specializing the benchmark host in such ways; doing so makes it diverge from the \"real system\", but if the measurements you're getting are too noisy to be useful ...</p>",
        "id": 209786629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834138
    },
    {
        "content": "<p>we've not historically worried too much about max-rss</p>",
        "id": 209786726,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834195
    },
    {
        "content": "<p>we probably should be more worried about it</p>",
        "id": 209786753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834208
    },
    {
        "content": "<p>if there's a consistent jump then maybe but usually it's not too interesting</p>",
        "id": 209786754,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834208
    },
    {
        "content": "<p>yes, for sure</p>",
        "id": 209786772,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834217
    },
    {
        "content": "<p>in that we <em>know</em> that the memory use of the compiler makes development untenable for some people</p>",
        "id": 209786806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834230
    },
    {
        "content": "<p>anyway, something to keep in mind for the future</p>",
        "id": 209786876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834246
    },
    {
        "content": "<p>lets move along to the nominated issues for this week, see if there are any we can take care of even in an \"unofficial\" meeting like this</p>",
        "id": 209786918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834269
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 209786945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834282
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pulls?q=is%3Apr+is%3Aopen+label%3AT-compiler+sort%3Aupdated-asc\">T-compiler RFC backlog</a><ul>\n<li>13 total RFCs tagged with T-compiler</li>\n<li>6 have not had any activity since last year</li>\n<li>@<strong>wesleywiser</strong> suggests \"Perhaps we should try to triage these during the weekly compiler team meetings?\"</li>\n</ul>\n</li>\n</ul>",
        "id": 209786965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834291
    },
    {
        "content": "<p>I had added this item</p>",
        "id": 209786980,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834300
    },
    {
        "content": "<p>I think we definitely don't have time for weekly triage</p>",
        "id": 209786998,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834307
    },
    {
        "content": "<p>in that we're already over-extended for each agenda each week?</p>",
        "id": 209787039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834326
    },
    {
        "content": "<p>right, yes</p>",
        "id": 209787050,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834330
    },
    {
        "content": "<p>its true</p>",
        "id": 209787061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834335
    },
    {
        "content": "<p>Yeah, I agree.</p>",
        "id": 209787071,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834340
    },
    {
        "content": "<p>we could probably allocate one of teh Friday meeting slots to it though</p>",
        "id": 209787079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834344
    },
    {
        "content": "<p>I think it would be valuable to maybe just to decide if this is something we even want to tackle.</p>",
        "id": 209787115,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834360
    },
    {
        "content": "<p>some of these predate the MCP process, right?</p>",
        "id": 209787217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834390
    },
    {
        "content": "<p>Given the lack of activity on ~50% of these, arguably we could just close them as deferred.</p>",
        "id": 209787239,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834401
    },
    {
        "content": "<p>like, one step we could take is just review them and see how many could be turned into MCP'S</p>",
        "id": 209787246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834407
    },
    {
        "content": "<p>I think nearly all of them do</p>",
        "id": 209787250,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834408
    },
    {
        "content": "<p>But some are cross-team and not necessarily appropriate for the MCP process (IMO)</p>",
        "id": 209787292,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834430
    },
    {
        "content": "<p>ah, sure</p>",
        "id": 209787307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834436
    },
    {
        "content": "<p>those cases can stay as RFCs</p>",
        "id": 209787322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834446
    },
    {
        "content": "<p>lets take a quick look now at the list, see if we can bucket them accordingly</p>",
        "id": 209787361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834465
    },
    {
        "content": "<p>But before we spam a bunch of RFC authors with requests to use the MCP process, it might be good to decide if we even have interest in tackling these</p>",
        "id": 209787399,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834480
    },
    {
        "content": "<p>true</p>",
        "id": 209787463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834491
    },
    {
        "content": "<p>I don't want to ask people to do work we're ultimately going to reject</p>",
        "id": 209787476,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834497
    },
    {
        "content": "<p>I'm going to try to review them <a href=\"https://hackmd.io/Z2nbt_FdRCWlypaPQ_iW1g\">here</a></p>",
        "id": 209787508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834511
    },
    {
        "content": "<p>are you thinking of inline commenting in that doc, or discussing one-by-one here?</p>",
        "id": 209787826,
        "sender_full_name": "simulacrum",
        "timestamp": 1599834640
    },
    {
        "content": "<p>my plan is to first reorganize them</p>",
        "id": 209788033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834731
    },
    {
        "content": "<p>ones with multiple team labels will go into a separate section</p>",
        "id": 209788056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834741
    },
    {
        "content": "<p>the ones that are just tagged with us I feel a higher priority to address</p>",
        "id": 209788226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834830
    },
    {
        "content": "<p>since they really are our sole responsibility to deal with</p>",
        "id": 209788298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834851
    },
    {
        "content": "<p>so, now that I've bucketed them in the above manner</p>",
        "id": 209788325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834863
    },
    {
        "content": "<p>I'm not sure it makes sense to go through them all one by one here</p>",
        "id": 209788368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834881
    },
    {
        "content": "<p>but it may be possible to quickly identify things we can take action on</p>",
        "id": 209788378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834896
    },
    {
        "content": "<p>I know I have thoughts about most of ours</p>",
        "id": 209788386,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834902
    },
    {
        "content": "<p>Should we maybe jot that stuff down in the doc and then see if there's any common feelings?</p>",
        "id": 209788420,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599834918
    },
    {
        "content": "<p>sure, I'm happy to handle it that way</p>",
        "id": 209788437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599834927
    },
    {
        "content": "<p>so there's a lot of content to catch up on if one really wants to read each RFC before commenting on its content</p>",
        "id": 209789370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835399
    },
    {
        "content": "<p>one detail I'm reflecting on, is that if you read the content of <a href=\"https://github.com/rust-lang/rfcs/pull/2400\">RFC PR #2400</a>, there are some pretty strong claims made about whether what rustc currently does is valid in general</p>",
        "id": 209789543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835481
    },
    {
        "content": "<p>I don't have any more comments to add about that set of RFCs</p>",
        "id": 209789554,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835490
    },
    {
        "content": "<p>and I think that its important to see that the comment feedback on <a href=\"https://github.com/rust-lang/rfcs/pull/2400\">RFC PR #2400</a> gives pretty good counter-arguments to those aforementioned claims</p>",
        "id": 209789623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835525
    },
    {
        "content": "<p>I would fine with closing 2400 because it doesn't sound high priority for the compiler team at this time and it needs more design work.</p>",
        "id": 209789831,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835623
    },
    {
        "content": "<p>yes I think that is probably the right call</p>",
        "id": 209789853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835635
    },
    {
        "content": "<p>actually, okay</p>",
        "id": 209789859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835639
    },
    {
        "content": "<p>maybe <em>now</em> is the right time to just quickly go through the list here</p>",
        "id": 209789878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835649
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2154\">RFC#2154</a>: \"Debuginfo-based panic locations\"<br>\n    * wesleywiser: Likely a good candiate for MCP.<br>\n    * simulacrum: seems like \"just an optimization\" for the most part, if possible we should do it. MCP seems like a good fit.</li>\n</ul>",
        "id": 209789896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835660
    },
    {
        "content": "<p>So: Do you all think we should suggest to the author that they propose an MCP, or should we attempt to port the RFC to an MCP ourselves?</p>",
        "id": 209789994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835695
    },
    {
        "content": "<p>I think the right answer is to ask the author to do it</p>",
        "id": 209790006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835704
    },
    {
        "content": "<p>Yes, I think so. In particular I would only want to accept this if someone's willing to drive the impl work as well</p>",
        "id": 209790020,
        "sender_full_name": "simulacrum",
        "timestamp": 1599835719
    },
    {
        "content": "<p>(no need to create debt)</p>",
        "id": 209790034,
        "sender_full_name": "simulacrum",
        "timestamp": 1599835727
    },
    {
        "content": "<p>the main reason I balk at that is that I feel bad waiting all this time and then having the response be \"oh sorry, use this other system we came up with in the meantime\"</p>",
        "id": 209790043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835731
    },
    {
        "content": "<p>The author doesn't appear to be very active on GitHub.</p>",
        "id": 209790045,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835733
    },
    {
        "content": "<p>but yes, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> 's point is crucial: We need someone willing to drive the work</p>",
        "id": 209790073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835747
    },
    {
        "content": "<p>so the only RFC that I would really consider porting oursevles</p>",
        "id": 209790081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835755
    },
    {
        "content": "<p>But it does sound like there are other interested parties who participated in the comments that might be willing to drive this forward.</p>",
        "id": 209790088,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835758
    },
    {
        "content": "<p>is one that we ourselves see as such a clear benefit that we ourselves would be willing to drive the work during our own time</p>",
        "id": 209790126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835777
    },
    {
        "content": "<p>I am okay fcp merging, but like, I don't want this to end up as an open issue that we end up needing to reconsider from scratch in a year because it's so far out of cache for everyone</p>",
        "id": 209790137,
        "sender_full_name": "simulacrum",
        "timestamp": 1599835782
    },
    {
        "content": "<p>Yeah. Lets post a comment saying that we recommend this (<a href=\"https://github.com/rust-lang/rfcs/issues/2154\">RFC#2154</a>) be converted to an MCP, either by the PR author or another interested volunteer.</p>",
        "id": 209790232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835820
    },
    {
        "content": "<p>next</p>",
        "id": 209790267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835844
    },
    {
        "content": "<p>I can write that comment</p>",
        "id": 209790281,
        "sender_full_name": "simulacrum",
        "timestamp": 1599835854
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2400\">RFC#2400</a>: \"Zero Page Optimization\"<br>\n    * wesleywiser: Having skimmed the comments, it sounds like there's open design work here. I'm not sure this is a good candidate for MCP.<br>\n    * simulacrum: agreed on open design work. Needs lang feedback if we're guaranteeing any optimizations. Individual, smaller, opts can likely be proposed via MCP, though.<br>\n    * pnkfelix: there are some pretty strong arguments against the proposal in the github comments, for example <a href=\"https://github.com/rust-lang/rfcs/pull/2400#issuecomment-386805881\">pythonesque here</a> and <a href=\"https://github.com/rust-lang/rfcs/pull/2400#issuecomment-386812112\">here</a></li>\n</ul>",
        "id": 209790302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835864
    },
    {
        "content": "<p>as previously discussed here, I think we should just close this, as described by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 209790332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835880
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2705\">RFC#2705</a>: \"Amend RFC2603 to allow mangled identifiers to start with a digit\"<br>\n    * wesleywiser: I think we should just accept this.<br>\n    * simulacrum: accepting seems good</li>\n</ul>",
        "id": 209790373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835901
    },
    {
        "content": "<p>by \"accept\", that means propose an FCP merge?</p>",
        "id": 209790381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835911
    },
    {
        "content": "<p>Yeah</p>",
        "id": 209790457,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835931
    },
    {
        "content": "<p>the MCP process may itself be lighter weight</p>",
        "id": 209790460,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835932
    },
    {
        "content": "<p>Or even potentially just merge it</p>",
        "id": 209790473,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835939
    },
    {
        "content": "<p>oh yes</p>",
        "id": 209790483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835942
    },
    {
        "content": "<p>well, I would be fine just merging it</p>",
        "id": 209790492,
        "sender_full_name": "simulacrum",
        "timestamp": 1599835943
    },
    {
        "content": "<p>its just an amendment</p>",
        "id": 209790495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835944
    },
    {
        "content": "<p>As niko said:</p>\n<blockquote>\n<p>We often do an FCP for amendments, but I also think it's ok to \"just do it\" if it is small and not controversial amongst the folks who were active in the RFC itself. I am fine with this change (but I've not been following the RFC closely).</p>\n</blockquote>",
        "id": 209790512,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599835951
    },
    {
        "content": "<p>okay yeah its just an amendment</p>",
        "id": 209790520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835954
    },
    {
        "content": "<p>lets just merge it then</p>",
        "id": 209790527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835959
    },
    {
        "content": "<p>next</p>",
        "id": 209790536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835966
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2794\">RFC#2794</a>: \"Environment variable sandboxing\"<br>\n    * seems like MCP for an unstable feature</li>\n</ul>",
        "id": 209790556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599835976
    },
    {
        "content": "<p>Seems like a good candidate for MCP especially as the author is quite active in the project.</p>",
        "id": 209790621,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599836013
    },
    {
        "content": "<p>here again I think we can take the same approach that was suggested for <a href=\"https://github.com/rust-lang/rfcs/issues/2154\">rfc#2154</a>: suggest it be converted to MCP, either by PR author or by another interested contributor</p>",
        "id": 209790681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836041
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2777\">RFC#2777</a>: \"Scope prints in diagnostics\"<br>\n    * simulacrum: does not seem like RFC-worthy, should be an internal detail. Maybe an MCP.<br>\n    * wesleywiser: This feels like something we could just FCP a PR for.</li>\n</ul>",
        "id": 209790742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836058
    },
    {
        "content": "<p>so based on the comments here</p>",
        "id": 209790801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836090
    },
    {
        "content": "<p>(It was unclear to me why this was an RFC, to be honest)</p>",
        "id": 209790815,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836097
    },
    {
        "content": "<p>the main reason why this might not be \"just\" a PR</p>",
        "id": 209790833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836102
    },
    {
        "content": "<p>is that the implementation is \"hard\"</p>",
        "id": 209790850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836108
    },
    {
        "content": "<p>at least doing it well</p>",
        "id": 209790854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836111
    },
    {
        "content": "<p>The author may have also been trying to get feedback from diagnostics people if this would be accepted or not before doing the work.</p>",
        "id": 209790921,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599836142
    },
    {
        "content": "<p>I think that's a good candidate for MCP today -- to get buy-in on idea before working on impl</p>",
        "id": 209790934,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836145
    },
    {
        "content": "<p>right, and then maybe it requires a project group, maybe not</p>",
        "id": 209791001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836165
    },
    {
        "content": "<p>but it also seems like the kind of thing where we usually have \"just\" a diagnostics issue on rust-lang/rust for</p>",
        "id": 209791007,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836167
    },
    {
        "content": "<p>(or, half a dozen targeting different instances of this)</p>",
        "id": 209791026,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.20followup.5D.202020-09-11.20.2354818/near/209786806\">said</a>:</p>\n<blockquote>\n<p>in that we <em>know</em> that the memory use of the compiler makes development untenable for some people</p>\n</blockquote>\n<p>for context, I regularly run out of ram compiling <a href=\"http://docs.rs\">docs.rs</a></p>",
        "id": 209791094,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599836219
    },
    {
        "content": "<p>and just have to restart my whole laptop because of thrashing</p>",
        "id": 209791114,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599836228
    },
    {
        "content": "<p>yeah back in the day <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> had the same problem, <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 209791144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836242
    },
    {
        "content": "<p>it led them to invest substantial effort in getting rustc's peak memory usage down</p>",
        "id": 209791166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836259
    },
    {
        "content": "<p>anyway, regarding <a href=\"https://github.com/rust-lang/rfcs/issues/2777\">rfc#2777</a></p>",
        "id": 209791339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836327
    },
    {
        "content": "<p>lets write a comment suggesting that the RFC be converted to an MCP</p>",
        "id": 209791369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836342
    },
    {
        "content": "<p>oh, we didn't actually say wehther we were going to <em>close</em> such RFCs</p>",
        "id": 209791396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836353
    },
    {
        "content": "<p>I ... think the right thing would be a label</p>",
        "id": 209791431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836368
    },
    {
        "content": "<p>something like \"convert-to-mcp\" or \"should-be-mcp\"</p>",
        "id": 209791469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836393
    },
    {
        "content": "<p>I would be inclined to close, personally</p>",
        "id": 209791530,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836405
    },
    {
        "content": "<p>and we leave the RFC open until an MCP is created, <em>or</em> until some amount of time has passed</p>",
        "id": 209791541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836412
    },
    {
        "content": "<p>But maybe, say, in a month</p>",
        "id": 209791546,
        "sender_full_name": "simulacrum",
        "timestamp": 1599836414
    },
    {
        "content": "<p>yeah, lets give it a month (or maybe six weeks, heh)</p>",
        "id": 209791568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836428
    },
    {
        "content": "<p>That seems good to me</p>",
        "id": 209791623,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599836462
    },
    {
        "content": "<p>I just want to make sure that 1. good ideas don't get lost in the shuffle and 2. contributors don't get too discouraged , which I think closing can cause, even with really nice comments tacked on</p>",
        "id": 209791655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836475
    },
    {
        "content": "<p>so okay, next</p>",
        "id": 209791676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836485
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2256\">RFC#2256</a>: \"libsyntax2.0\"<br>\n    * simulacrum: not entirely clear what exactly is proposed, but seems like a prime candidate for MCP. We also have a parselib working group, I think, just started.<br>\n    * wesleywiser: I feel like this is closely related to the parselib/rls2.0 working group. MCP seems like a good fit for this.</li>\n</ul>",
        "id": 209791699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836498
    },
    {
        "content": "<p>is the parselib WG also dealing with macros?</p>",
        "id": 209791801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836534
    },
    {
        "content": "<p>oh I guess tat detail doesn't matter</p>",
        "id": 209791822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836543
    },
    {
        "content": "<p>I mean, it does matter</p>",
        "id": 209791836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836552
    },
    {
        "content": "<p>but the point is more that this RFC is clearly subsumed by the parselib WG, right?</p>",
        "id": 209791857,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836564
    },
    {
        "content": "<p>That's my feeling yeah</p>",
        "id": 209791960,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599836608
    },
    {
        "content": "<p>Not that WGs can't submit RFCs but I feel like the project has already signed off on this work at least to some extent.</p>",
        "id": 209792002,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599836632
    },
    {
        "content": "<p>lets close this and say that active work is going on with parselib WG, and link to the appropriate pages describing the WG and/or MCPs</p>",
        "id": 209792011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836635
    },
    {
        "content": "<p>well, that, or</p>",
        "id": 209792100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836659
    },
    {
        "content": "<p>parselib will come up with something and propose a new RFC</p>",
        "id": 209792114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836672
    },
    {
        "content": "<p>but yeah, I think it would be weird to keep this open when I think the most important step has been taken</p>",
        "id": 209792170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836703
    },
    {
        "content": "<p>in terms of telling these contributors \"yes, we want something here; go figure out what to do.\"</p>",
        "id": 209792208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836721
    },
    {
        "content": "<p>so okay, close this with links to places tracking ongoing work</p>",
        "id": 209792247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836740
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/2951\">RFC#2951</a>: \"Linking modifiers for native libraries\"<br>\n    * simulacrum: feels more T-lang for RFC side, not T-compiler. Adding it unstably seems MCP/PR.</li>\n</ul>",
        "id": 209792280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836760
    },
    {
        "content": "<p>I'm skimming over the RFC text now</p>",
        "id": 209792528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836870
    },
    {
        "content": "<p>I don't currently understand exactly how the modifiers here translate into what changes to the linker invocation</p>",
        "id": 209792614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836907
    },
    {
        "content": "<p>ah okay</p>",
        "id": 209792712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836956
    },
    {
        "content": "<p>each modifier has a specific flag (or set of flags) it translates to, and that may be linker-dependant</p>",
        "id": 209792752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599836980
    },
    {
        "content": "<p>(and the spec for each modifier states its behavior on linkers that don't support it ... which I think in all given cases is \"no op if unsupported\", right?)</p>",
        "id": 209792878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837034
    },
    {
        "content": "<p>the reason I'm digging into this level of detail is that I'm trying to figure out if this is indeed something that needs to loop in T-lang as well</p>",
        "id": 209792913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837064
    },
    {
        "content": "<p>I think overall I'm in favor of moving forward with it unstably</p>",
        "id": 209793117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837161
    },
    {
        "content": "<p>we can resolve the T-lang part concurrently</p>",
        "id": 209793137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837174
    },
    {
        "content": "<p>i.e. the main thing I can imagine T-lang having an opinion on is whether its simply a bad idea to stuff this into into the <code>#[link]</code> attribute</p>",
        "id": 209793191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837201
    },
    {
        "content": "<p>and that's a discussion that doesn't need to block unstable development of the feature</p>",
        "id": 209793232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837216
    },
    {
        "content": "<p>lets go ahead and suggest it be posted as an MCP</p>",
        "id": 209793264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837239
    },
    {
        "content": "<p>same as other cases above</p>",
        "id": 209793313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837245
    },
    {
        "content": "<p>okay, we're well past the hour</p>",
        "id": 209793322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837253
    },
    {
        "content": "<p>thanks to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> for helping out here</p>",
        "id": 209793340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837265
    },
    {
        "content": "<p>Sorry for my topic dominating the hour but it feels like we made a huge amount of progress!</p>",
        "id": 209793370,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599837281
    },
    {
        "content": "<p>I honestly didn't expect we'd get that far.</p>",
        "id": 209793385,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1599837289
    },
    {
        "content": "<p>(and to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending)</p>",
        "id": 209793419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837306
    },
    {
        "content": "<p>yeah this was a good use of time I think</p>",
        "id": 209793468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> are you planning to follow-up and post these comments? I volunteered to do 2154 and can do 2256 as well if you'd like</p>",
        "id": 209793514,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837345
    },
    {
        "content": "<p>well</p>",
        "id": 209793588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837361
    },
    {
        "content": "<p>my current plan is to go back through yesterday's meeting</p>",
        "id": 209793674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837369
    },
    {
        "content": "<p>and make sure comments got posted where appropriate for that</p>",
        "id": 209793720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837378
    },
    {
        "content": "<p>when I'm done with that, I'll do the same for this meeting</p>",
        "id": 209793753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837386
    },
    {
        "content": "<p>anyone who wants to take one of the RFC's listed above, feel free. :)</p>",
        "id": 209793820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837400
    },
    {
        "content": "<p>(I suppose it would be good to use some common template for the common pattern of \"port this to MCP\")</p>",
        "id": 209793961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837459
    },
    {
        "content": "<p>okay. I'll take 2256 and 2154. Probably won't have a chance to type those up until later today, but there's no real rush I guess :)</p>",
        "id": 209794139,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837549
    },
    {
        "content": "<p>by the way, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , do you indeed think you'll have a chance to make a PR for <a href=\"https://github.com/rust-lang/rust/issues/74753\">#74753</a> that disables the check locally?</p>",
        "id": 209794577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837746
    },
    {
        "content": "<p>yes it's on my todo list</p>",
        "id": 209794672,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837788
    },
    {
        "content": "<p>(and now I'm wondering what that meant? as in, the check will never run on people's local machines, just on CI alone?)</p>",
        "id": 209794674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837788
    },
    {
        "content": "<p>that is my plan yes</p>",
        "id": 209794692,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837796
    },
    {
        "content": "<p>it is a bit unfortunate but ultimately CI is the only place I know of where we can assume things about the filesystem, and I don't want to try to write logic that detects filesystem properties</p>",
        "id": 209794763,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837836
    },
    {
        "content": "<p>hmm. Just because that's less fragile than this logic to disable it on certain hosts based on inspecting the <code>/proc/version</code> ?</p>",
        "id": 209794771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837840
    },
    {
        "content": "<p>/proc/version tells you nothing about the filesystem afaict, which is what you really want</p>",
        "id": 209794881,
        "sender_full_name": "simulacrum",
        "timestamp": 1599837880
    },
    {
        "content": "<p>Right,</p>",
        "id": 209794901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837888
    },
    {
        "content": "<p>yeah \"fragile\" was probably not the right word</p>",
        "id": 209794926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837896
    },
    {
        "content": "<p>or at least, its not the <em>only</em> thing that concerns us about the logic here</p>",
        "id": 209794959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837909
    },
    {
        "content": "<p>okay</p>",
        "id": 209794963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837910
    },
    {
        "content": "<p>I guess thats' fine</p>",
        "id": 209794972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599837914
    },
    {
        "content": "<p>though I'm now musing about filesystem inspection</p>",
        "id": 209795184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838013
    },
    {
        "content": "<p>wouldn't it suffice to touch a fresh file and then inspect <em>its</em> exec bit?</p>",
        "id": 209795218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838030
    },
    {
        "content": "<p>hm, maybe</p>",
        "id": 209795274,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838055
    },
    {
        "content": "<p>but then I wonder ... why haven't we already done that?</p>",
        "id": 209795299,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838064
    },
    {
        "content": "<p>maybe because we don't want to write into the source directory</p>",
        "id": 209795320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838078
    },
    {
        "content": "<p>its <em>possible</em> that someone might actually have it read-only</p>",
        "id": 209795394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838097
    },
    {
        "content": "<p>hm, maybe</p>",
        "id": 209795398,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838099
    },
    {
        "content": "<p>(though arguably if so we can just say \"well probably you're not editing it either\")</p>",
        "id": 209795443,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838124
    },
    {
        "content": "<p>(and is doing the build elsewhere ... not that I've ever done a build in a directory that isn't the root directory nor a subdirectory of the root)</p>",
        "id": 209795455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838129
    },
    {
        "content": "<p>sure, but the tidy run doesn't know whether you've tried to <del>exit</del> edit</p>",
        "id": 209795501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838146
    },
    {
        "content": "<p>that would be funny, actually</p>",
        "id": 209795532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838167
    },
    {
        "content": "<p>I guess I added it to fix <a href=\"https://github.com/rust-lang/rust/issues/36706\">https://github.com/rust-lang/rust/issues/36706</a></p>",
        "id": 209795569,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838187
    },
    {
        "content": "<p>e.g. first do git status or somesuch, and then only if git status reports unclean, then touch a file and inpsect its exec bit</p>",
        "id": 209795573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838189
    },
    {
        "content": "<p>it = /proc/version check</p>",
        "id": 209795587,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838193
    },
    {
        "content": "<p>I might try the touch a file strategy</p>",
        "id": 209795735,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838239
    },
    {
        "content": "<p>I have to admit, I would prefer some way to avoid a check living <em>solely</em> in CI</p>",
        "id": 209795772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838258
    },
    {
        "content": "<p>and we can just skip the bins check if it's not possible to touch a file</p>",
        "id": 209795805,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838268
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 209795818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838274
    },
    {
        "content": "<p>I like that</p>",
        "id": 209795821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838276
    },
    {
        "content": "<p>that seems very likely to cover the cases of interest</p>",
        "id": 209795876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838302
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 209795897,
        "sender_full_name": "simulacrum",
        "timestamp": 1599838316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> RFC 2951 has an MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">https://github.com/rust-lang/compiler-team/issues/356</a></p>",
        "id": 209796753,
        "sender_full_name": "pachi",
        "timestamp": 1599838661
    },
    {
        "content": "<p>MCP</p>",
        "id": 209796781,
        "sender_full_name": "pachi",
        "timestamp": 1599838674
    },
    {
        "content": "<p>doh</p>",
        "id": 209796832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838686
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"125416\">@pachi</span></p>",
        "id": 209796921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838735
    },
    {
        "content": "<p>hmm</p>",
        "id": 209796955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838762
    },
    {
        "content": "<p>actually</p>",
        "id": 209796958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838764
    },
    {
        "content": "<p>this is a public facing feature, isn't it</p>",
        "id": 209796973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838769
    },
    {
        "content": "<p>And I think libsyntax2.0 was some @matklad 's proposal that I feel should be now subsumed by some joint rustc / rust-analyzer librarifycation and the new parser work</p>",
        "id": 209796985,
        "sender_full_name": "pachi",
        "timestamp": 1599838774
    },
    {
        "content": "<p>right, I think we reached the same conclusion in this discussion</p>",
        "id": 209797229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838886
    },
    {
        "content": "<p>Ok, sorry, I was just skimming through it</p>",
        "id": 209797273,
        "sender_full_name": "pachi",
        "timestamp": 1599838916
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> or <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , I don't know if I screwed something up over here: <a href=\"https://github.com/rust-lang/compiler-team/issues/356#issuecomment-691169524\">https://github.com/rust-lang/compiler-team/issues/356#issuecomment-691169524</a></p>",
        "id": 209797400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838966
    },
    {
        "content": "<p>is there a way to undo a second so that I can make it a proper \"fcp merge\" instead?</p>",
        "id": 209797444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838990
    },
    {
        "content": "<p>(do I need to close and reopen the issue or something?)</p>",
        "id": 209797464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599838999
    },
    {
        "content": "<p>they're to different bots</p>",
        "id": 209797470,
        "sender_full_name": "simulacrum",
        "timestamp": 1599839002
    },
    {
        "content": "<p>oh sorry</p>",
        "id": 209797487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839009
    },
    {
        "content": "<p>you should put <code>rfcbot fcp merge</code></p>",
        "id": 209797490,
        "sender_full_name": "simulacrum",
        "timestamp": 1599839011
    },
    {
        "content": "<p>I think rustbot links to triagebot's doc</p>",
        "id": 209797501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839016
    },
    {
        "content": "<p>oh <em>that's</em> the other bot you mean</p>",
        "id": 209797531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839033
    },
    {
        "content": "<p>hmm</p>",
        "id": 209797540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839040
    },
    {
        "content": "<p>(maybe rustbot should say so when you ask it to fcp merge something)</p>",
        "id": 209797618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839068
    },
    {
        "content": "<p>(I think you wrote <code>rfc</code> instead of <code>fcp</code>)</p>",
        "id": 209797642,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1599839084
    },
    {
        "content": "<p>I think it should too. I would've expected an unknown command comment</p>",
        "id": 209797652,
        "sender_full_name": "simulacrum",
        "timestamp": 1599839087
    },
    {
        "content": "<p>omg</p>",
        "id": 209797654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839088
    },
    {
        "content": "<p>/me needs to learn to cut-and-paste</p>",
        "id": 209797703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1599839114
    },
    {
        "content": "<p>are there docs for this somewhere?</p>",
        "id": 209798060,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599839282
    },
    {
        "content": "<p>I don't think there is any doc about <code>@rfcbot</code>, probably should go in Forge</p>",
        "id": 209798233,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1599839344
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-forge/issues/437\">https://github.com/rust-lang/rust-forge/issues/437</a></p>",
        "id": 209798458,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599839443
    },
    {
        "content": "<p>does anyone mind if I add <code>A-contributor-roadblock</code>?</p>",
        "id": 209888617,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599927768
    },
    {
        "content": "<p>like <code>D-newcomer-roadblock</code> but for people working on rustc itself</p>",
        "id": 209888622,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599927788
    },
    {
        "content": "<p>Seems fine to me</p>",
        "id": 209936485,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600011362
    },
    {
        "content": "<p>added, thanks</p>",
        "id": 209938275,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600013902
    }
]