[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , time for our monthly planning meeting!</p>",
        "id": 262078085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334475
    },
    {
        "content": "<p>(add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> up top to show you’re here)</p>",
        "id": 262078196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334499
    },
    {
        "content": "<p>we have no new meeting proposals</p>",
        "id": 262078304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334539
    },
    {
        "content": "<p>a month ago, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> drove a review of the MCP's</p>",
        "id": 262078352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334558
    },
    {
        "content": "<p>I’m not sure if we need to do another one of those right now</p>",
        "id": 262078429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334595
    },
    {
        "content": "<p>We didn't get through the complete agenda yesterday so we could take some time to do that.</p>",
        "id": 262078484,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637334607
    },
    {
        "content": "<p>I would perhaps like to spend a moment talking about something that <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> raised with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and I yesterday</p>",
        "id": 262078524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334618
    },
    {
        "content": "<p>We haven't really had a chance to talk about compiler-nominated issues for several weeks now so it would be especially good to attend to those.</p>",
        "id": 262078562,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637334639
    },
    {
        "content": "<p>namely, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> noted our difficulty in getting through the agenda yesterday and was brainstorming about how we could address that.</p>",
        "id": 262078584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334648
    },
    {
        "content": "<p>but yeah, I’m okay with us starting off by finishing off yesterday’s meeting topics</p>",
        "id": 262078609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334664
    },
    {
        "content": "<p>I'm fine with whatever order, just wanted to bring it up <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 262078657,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637334681
    },
    {
        "content": "<p>(I think the most important idea that came out of the brainstorming, was <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ’s suggestion that we set aside a separate meeting, timed about 2 or maybe 2.5 weeks before release, dedicated solely to beta backports)</p>",
        "id": 262078725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334711
    },
    {
        "content": "<p>(because the cadence of our meetings often tends to be that the triage meeting 2 weeks before release is overwhelmed by beta backport nominatinos)</p>",
        "id": 262078816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334735
    },
    {
        "content": "<p>anyway,</p>",
        "id": 262078872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334758
    },
    {
        "content": "<p>how much time is between the beta cut and the release?</p>",
        "id": 262078887,
        "sender_full_name": "mw",
        "timestamp": 1637334766
    },
    {
        "content": "<p>1 week?</p>",
        "id": 262078897,
        "sender_full_name": "mw",
        "timestamp": 1637334771
    },
    {
        "content": "<p>Uh, I’m not sure I understand the question</p>",
        "id": 262078942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334788
    },
    {
        "content": "<p>I guess you are asking how long before the release we say “this is the beta we will be releasing” ?</p>",
        "id": 262079031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334824
    },
    {
        "content": "<p>oh, I think think I'm mixing things up :)</p>",
        "id": 262079039,
        "sender_full_name": "mw",
        "timestamp": 1637334830
    },
    {
        "content": "<p>(and then feed it into crater, etc)?</p>",
        "id": 262079054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334834
    },
    {
        "content": "<p>Are you asking when the deadline is to get backports in before release? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 262079111,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637334845
    },
    {
        "content": "<p>the beta cut is for the \"new\" beta, but we are releasing the current beta</p>",
        "id": 262079136,
        "sender_full_name": "mw",
        "timestamp": 1637334859
    },
    {
        "content": "<ul>\n<li>Friday: master -&gt; beta-next</li>\n<li>Monday: beta -&gt; stable (dev-static), beta-next -&gt; beta</li>\n<li>Tuesday: master bootstrap bump</li>\n<li>Thursday: stable releases, from Monday artifacts</li>\n</ul>",
        "id": 262079139,
        "sender_full_name": "simulacrum",
        "timestamp": 1637334861
    },
    {
        "content": "<p>so nevermind</p>",
        "id": 262079145,
        "sender_full_name": "mw",
        "timestamp": 1637334863
    },
    {
        "content": "<p>yeah, okay. Right, they are different things.</p>",
        "id": 262079201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334877
    },
    {
        "content": "<p>Before we dig into continuation of yesterday’s triage meeting, Does anyone have anything for </p>\n<h2>Announcements</h2>",
        "id": 262079331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334926
    },
    {
        "content": "<p>(and while you all think of things to say, I’ll check on where we left off yesterday)</p>",
        "id": 262079457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637334964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262079111\">said</a>:</p>\n<blockquote>\n<p>Are you asking when the deadline is to get backports in before release? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>yes</p>",
        "id": 262079482,
        "sender_full_name": "mw",
        "timestamp": 1637334973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261946094\">said</a>:</p>\n<blockquote>\n<p>I'm going to skip the PRs waiting for reviews this week.</p>\n</blockquote>\n<p>I think the above basically marks where we should start today’s continuation</p>",
        "id": 262079584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335017
    },
    {
        "content": "<p><a href=\"https://hackmd.io/uQjEgFIiRpy04QXxKDnRjA?view#Oldest-PRs-waiting-for-review\">Oldest PR’s waiting for review</a></p>",
        "id": 262079869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335118
    },
    {
        "content": "<ul>\n<li>\"Add codegen option for branch protection and pointer authentication on AArch64\" <a href=\"https://github.com/rust-lang/rust/pull/88354\">rust#88354</a> (last review activity: 2 months ago)<ul>\n<li><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> will <a href=\"https://github.com/rust-lang/rust/pull/88354#issuecomment-966435875\">try to have a look at this</a></li>\n</ul>\n</li>\n</ul>",
        "id": 262079901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335133
    },
    {
        "content": "<p>If anyone has experience working in the drop elaboration code, I would appreciate a second review of <a href=\"https://github.com/rust-lang/rust/pull/90788\">https://github.com/rust-lang/rust/pull/90788</a> before I r+.</p>",
        "id": 262079933,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637335148
    },
    {
        "content": "<ul>\n<li>\"Suggest <code>i += 1</code> when we see <code>i++</code> or <code>++i</code>\" <a href=\"https://github.com/rust-lang/rust/pull/88672\">rust#88672</a> (last review activity: 2 months ago)<ul>\n<li>has been reviewed in September by @<strong>estebank</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 262079984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335185
    },
    {
        "content": "<p>it seems to me like the PR author has asked for advice on how to resolve certain things</p>",
        "id": 262080117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335235
    },
    {
        "content": "<p>also: has the PR been updated to incorporate <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ’s <a href=\"https://github.com/rust-lang/rust/pull/88672#discussion_r702776614\">suggestion</a> to put the code into <code>parse_lit_expr</code> instead?</p>",
        "id": 262080193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335272
    },
    {
        "content": "<p>seems like no</p>",
        "id": 262080222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335287
    },
    {
        "content": "<p>So there is a need for more dialogue here</p>",
        "id": 262080248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335301
    },
    {
        "content": "<p>(its also not a high priority, though.)</p>",
        "id": 262080271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335313
    },
    {
        "content": "<p>maybe ping the author and ask what the status is?</p>",
        "id": 262080350,
        "sender_full_name": "mw",
        "timestamp": 1637335336
    },
    {
        "content": "<p>that sounds good</p>",
        "id": 262080369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335346
    },
    {
        "content": "<p>(Oh, wait, I overlooked that the PR author <em>did</em> respond to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ’s suggestion, and I think they took the advice but had to tweak it somewhat…)</p>",
        "id": 262080700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335510
    },
    {
        "content": "<p>Yeah, I think this is basically just waiting for reviewer feedback and help with a few of the questions.</p>",
        "id": 262080764,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637335537
    },
    {
        "content": "<p>yeah</p>",
        "id": 262080776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335542
    },
    {
        "content": "<p>I’m just debating whether its worth changing the label</p>",
        "id": 262080801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335550
    },
    {
        "content": "<p>because in my gut it looks like its mostly waiting on reviewer feedback, as you said</p>",
        "id": 262080860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335563
    },
    {
        "content": "<p>I’ll leave the label as it is</p>",
        "id": 262080873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335567
    },
    {
        "content": "<ul>\n<li>\"asm/arm: allow r9 when usable, make diagnostics more specific\" <a href=\"https://github.com/rust-lang/rust/pull/88879\">rust#88879</a> (last review activity: 2 months ago)<ul>\n<li>last comment is paging <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span></li>\n</ul>\n</li>\n</ul>",
        "id": 262080890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335576
    },
    {
        "content": "<p>I'll try the changes locally, I think there were two options and i want happy with either <span aria-label=\"open mouth\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"open mouth\">:open_mouth:</span>‍💨</p>",
        "id": 262080949,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1637335609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262080890\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"asm/arm: allow r9 when usable, make diagnostics more specific\" <a href=\"https://github.com/rust-lang/rust/pull/88879\">rust#88879</a> (last review activity: 2 months ago)<ul>\n<li>last comment is paging <span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>Hmm. So I infer that the current situation is that you are not allowed to use <code>r9</code> in <code>asm!</code> blocks at all on ARM ?</p>",
        "id": 262081025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335645
    },
    {
        "content": "<p>Yes, that's my understanding.</p>",
        "id": 262081064,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637335668
    },
    {
        "content": "<p>okay. I definitely want to wait on <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> here</p>",
        "id": 262081146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335691
    },
    {
        "content": "<p>I’ll ping them in a comment</p>",
        "id": 262081190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335716
    },
    {
        "content": "<ul>\n<li>\"[experiment] remove diverge_from in box expr building\" <a href=\"https://github.com/rust-lang/rust/pull/89332\">rust#89332</a> (last review activity: about 50 days ago)<ul>\n<li>PR author <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> <a href=\"https://github.com/rust-lang/rust/pull/89332#issuecomment-964545540\">asks for a feedback</a> before deciding to turn it into a real PR</li>\n</ul>\n</li>\n</ul>",
        "id": 262081259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335757
    },
    {
        "content": "<p>hmm</p>",
        "id": 262081435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335831
    },
    {
        "content": "<p>50 days is kind of misleading since it's an experiment, it's only 10 days since a reviewer was assigned</p>",
        "id": 262081447,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637335836
    },
    {
        "content": "<p>it will have to be reverted when/if <code>oom=panic</code> is implemented. Is there a timeline for that?</p>",
        "id": 262081493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335865
    },
    {
        "content": "<p><code>-Z oom=panic</code> is PR <a href=\"https://github.com/rust-lang/rust/issues/88098\">#88098</a></p>",
        "id": 262081560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335899
    },
    {
        "content": "<p>if it needs to be reverted \"eventually\" or at least potentially, I'd probably argue for not doing it / closing this PR</p>",
        "id": 262081610,
        "sender_full_name": "simulacrum",
        "timestamp": 1637335923
    },
    {
        "content": "<p>Yeah, I think our trajectory here is that this would not be our long-term approach</p>",
        "id": 262081678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335945
    },
    {
        "content": "<p>So we’re not going to land this PR. It is potentially useful to know the performance results</p>",
        "id": 262081717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637335965
    },
    {
        "content": "<p>(particularly given lack of strong review capacity in this area, AFAIK)</p>",
        "id": 262081718,
        "sender_full_name": "simulacrum",
        "timestamp": 1637335966
    },
    {
        "content": "<p>The perf improvements are not really significant enough to warrant the extra effort here IMO.</p>",
        "id": 262081780,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637335999
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=d7539a6af09e5889ed9bcb8b49571b7a59c32e65&amp;end=d0848a1101a9caed97f1276d4326bfe2e6bdbc42\">https://perf.rust-lang.org/compare.html?start=d7539a6af09e5889ed9bcb8b49571b7a59c32e65&amp;end=d0848a1101a9caed97f1276d4326bfe2e6bdbc42</a></p>",
        "id": 262081801,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336007
    },
    {
        "content": "<p>yeah okay. I left a comment saying that we don’t think we’d land this, since the plan is to support oom=panic)</p>",
        "id": 262082097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336147
    },
    {
        "content": "<p>so I guess we just close it then?</p>",
        "id": 262082107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336153
    },
    {
        "content": "<p>or do we let the PR author do that?</p>",
        "id": 262082127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336162
    },
    {
        "content": "<p>I would just close. Reopening is easy, it's an experiment too.</p>",
        "id": 262082183,
        "sender_full_name": "simulacrum",
        "timestamp": 1637336177
    },
    {
        "content": "<p>I can certainly remove the waiting-on-review tag</p>",
        "id": 262082184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336177
    },
    {
        "content": "<p>okay</p>",
        "id": 262082193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336188
    },
    {
        "content": "<p>closing</p>",
        "id": 262082206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336195
    },
    {
        "content": "<ul>\n<li>\"Makes docs for references a little less confusing\" <a href=\"https://github.com/rust-lang/rust/pull/88361\">rust#88361</a> (last review activity: none)<ul>\n<li>rust-highfive assigned to <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></li>\n</ul>\n</li>\n</ul>",
        "id": 262082225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336207
    },
    {
        "content": "<p>(is this really T-compiler ?)</p>",
        "id": 262082244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336218
    },
    {
        "content": "<p>(reviewing that now ^ )</p>",
        "id": 262082246,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336220
    },
    {
        "content": "<p>Looks like T-library to me</p>",
        "id": 262082299,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336240
    },
    {
        "content": "<p>I see, no T tag at all on the PR</p>",
        "id": 262082313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336247
    },
    {
        "content": "<p>it has T-compiler, apirano added it</p>",
        "id": 262082347,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336267
    },
    {
        "content": "<p>but yeah that seems incorrect</p>",
        "id": 262082356,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336272
    },
    {
        "content": "<p>whoops</p>",
        "id": 262082357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336272
    },
    {
        "content": "<p>last review activity: none is also a little misleading (it was r+d in <a href=\"https://github.com/rust-lang/rust/pull/88361#issuecomment-933096370\">https://github.com/rust-lang/rust/pull/88361#issuecomment-933096370</a>)</p>",
        "id": 262082360,
        "sender_full_name": "simulacrum",
        "timestamp": 1637336273
    },
    {
        "content": "<p>my mistake</p>",
        "id": 262082362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336274
    },
    {
        "content": "<p>flipped the labels</p>",
        "id": 262082425,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336285
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 262082440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336294
    },
    {
        "content": "<p>okay then, that’s the whole list for this week. Next section</p>",
        "id": 262082459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336304
    },
    {
        "content": "<p>we did cover issues yesterday, right? Let me double check quickl</p>",
        "id": 262082518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336336
    },
    {
        "content": "<p>Yeah, I believe the next section up is <a href=\"https://hackmd.io/uQjEgFIiRpy04QXxKDnRjA?view#P-high-regressions\">https://hackmd.io/uQjEgFIiRpy04QXxKDnRjA?view#P-high-regressions</a></p>",
        "id": 262082568,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336364
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-11-18.20.2354818/near/261946839\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n</blockquote>",
        "id": 262082588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336377
    },
    {
        "content": "<p>okay</p>",
        "id": 262082592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336379
    },
    {
        "content": "<ul>\n<li>\"Compilation appears to loop indefinitely \" <a href=\"https://github.com/rust-lang/rust/issues/89195\">rust#89195</a></li>\n</ul>",
        "id": 262082635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336396
    },
    {
        "content": "<p>hmm. comment thread is somewhat confusing, since some of the reductions yield examples that are not regressions (or at least, do not regress at the same point in the version history)</p>",
        "id": 262082911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336493
    },
    {
        "content": "<p>I suspect people are reporting \"anything that causes the compiler to loop\" even if it doesn't have the same root cause</p>",
        "id": 262083021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336529
    },
    {
        "content": "<p>but it sounds like its something with polymorphic type recursion in many of these cases</p>",
        "id": 262083054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336543
    },
    {
        "content": "<p>This would be a good time to mention <a href=\"https://github.com/rust-lang/rust/pull/89831\">https://github.com/rust-lang/rust/pull/89831</a></p>",
        "id": 262083128,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336572
    },
    {
        "content": "<p>by <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> which solves some of these issues.</p>",
        "id": 262083153,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336582
    },
    {
        "content": "<p>for reference: <a href=\"https://en.wikipedia.org/wiki/Polymorphic_recursion\">https://en.wikipedia.org/wiki/Polymorphic_recursion</a></p>",
        "id": 262083155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336582
    },
    {
        "content": "<p>(well, wait, that reference actually looks unhelpful for novices…)</p>",
        "id": 262083192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336607
    },
    {
        "content": "<p>We're hitting this at work with a project where compile times have gone from 45 seconds to 12 minutes.</p>",
        "id": 262083313,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> have you tried PR <a href=\"https://github.com/rust-lang/rust/issues/89831\">#89831</a> on your example project?</p>",
        "id": 262083374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262083192\">said</a>:</p>\n<blockquote>\n<p>(well, wait, that reference actually looks unhelpful for novices…)</p>\n</blockquote>\n<p>my understanding of this is \"a set of mutually recursive functions that differ only by their generic parameters\" (as opposed to the function name or something)</p>",
        "id": 262083396,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637336687
    },
    {
        "content": "<p>Yeah, compile times go down to about 90 seconds.</p>",
        "id": 262083398,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637336688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262083396\">said</a>:</p>\n<blockquote>\n<p>my understanding of this is \"a set of mutually recursive functions that differ only by their generic parameters\" (as opposed to the function name or something)</p>\n</blockquote>\n<p>yes, its usually something along the lines of <code>struct Rose&lt;T&gt; { recur: Box&lt;Rose&lt;(T, T)&gt;&gt; }</code>. Basically, you’re not allowed to vary the recursive occurrences of <code>Self</code>, and you especially aren’t allowed to let them grow.</p>",
        "id": 262083540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336760
    },
    {
        "content": "<p>anyway, the comment thread brings up a couple distinct topics</p>",
        "id": 262083631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336795
    },
    {
        "content": "<ol>\n<li>Potentially many different examples are getting lumped together under this ticket. That is potentially problematic.</li>\n</ol>",
        "id": 262083691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336821
    },
    {
        "content": "<ol start=\"2\">\n<li>At least one of the examples cannot share their source code.</li>\n</ol>",
        "id": 262083723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336834
    },
    {
        "content": "<p>Does anyone know if <span class=\"user-mention\" data-user-id=\"452469\">@Kyle Huey</span> tried out PR <a href=\"https://github.com/rust-lang/rust/issues/89831\">#89831</a> ?</p>",
        "id": 262083804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336870
    },
    {
        "content": "<p>I can reach out to them</p>",
        "id": 262083877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262083723\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>At least one of the examples cannot share their source code.</li>\n</ol>\n</blockquote>\n<p>(This led <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> to suggest on thread that perhaps we could have contractors who would be willing to sign NDA’s. I guess there’s nothing stopping people from advertising their service as rustc experts in this space…)</p>",
        "id": 262084023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637336937
    },
    {
        "content": "<p>heh I think I got some mixed reactions to that (though not on thread IIRC)</p>",
        "id": 262084376,
        "sender_full_name": "eddyb",
        "timestamp": 1637337068
    },
    {
        "content": "<p>I think before signing an NDA like that, you'd probably want independent legal counsel to look over it. Retaining a lawyer to review an NDA so you can look at private commercial code is probably not high up on a lot of contributors TODO lists <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 262084378,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337068
    },
    {
        "content": "<p>I'm not sure I have a <em>good</em> solution, it just feels like <em>there could</em> be more infrastructure here</p>",
        "id": 262084413,
        "sender_full_name": "eddyb",
        "timestamp": 1637337085
    },
    {
        "content": "<p>Perhaps we could get a well understood NDA from the Foundation that standardizes that.</p>",
        "id": 262084466,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337111
    },
    {
        "content": "<p>I'm not sure that's the most important thing for them to work on at the moment though ...</p>",
        "id": 262084523,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337125
    },
    {
        "content": "<p>like it's not unsolvable, and it can often be relatively little work, even if somewhat intense</p>",
        "id": 262084529,
        "sender_full_name": "eddyb",
        "timestamp": 1637337126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262084378\">said</a>:</p>\n<blockquote>\n<p>I think before signing an NDA like that, you'd probably want independent legal counsel to look over it. Retaining a lawyer to review an NDA so you can look at private commercial code is probably not high up on a lot of contributors TODO lists <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>yeah, definitely. Sorry, I didn’t mean to say that people should jump in without doing due diligence. (The question of whether the Foundation could assist here is important.)</p>",
        "id": 262084555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337138
    },
    {
        "content": "<p>I also suspect the number of <em>volunteer</em> contributers willing to sign an NDA is very low</p>",
        "id": 262084581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637337149
    },
    {
        "content": "<p>(I certainly wouldn't be willing to)</p>",
        "id": 262084593,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637337154
    },
    {
        "content": "<p>Not suggesting you were. Just pointing out some of the complexity.</p>",
        "id": 262084595,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337155
    },
    {
        "content": "<p>I ended up trying out automated tools for a few days just to see how good they would be, and the results weren't <em>that</em> impressive</p>",
        "id": 262084609,
        "sender_full_name": "eddyb",
        "timestamp": 1637337160
    },
    {
        "content": "<p>Hmm. <a href=\"https://github.com/rust-lang/rust/issues/89195#issuecomment-950205114\">Camelid’s comment</a> I think says that Kyle huey’s issue won’t be resolved by PR <a href=\"https://github.com/rust-lang/rust/issues/89831\">#89831</a></p>",
        "id": 262084687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337191
    },
    {
        "content": "<p>anyway</p>",
        "id": 262084755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337223
    },
    {
        "content": "<p>what to do about this?</p>",
        "id": 262084774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262084593\">said</a>:</p>\n<blockquote>\n<p>(I certainly wouldn't be willing to)</p>\n</blockquote>\n<p>we've avoided it except for one case where it's highly likely that the codebases covered would eventually be opensourced, but also they're only incidental to the rest of the contract, as opposed to being the focus of it, so I definitely sympathize with that</p>",
        "id": 262084859,
        "sender_full_name": "eddyb",
        "timestamp": 1637337246
    },
    {
        "content": "<p>I was hoping to avoid the performance regression from re-adding cache completion</p>",
        "id": 262084882,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337258
    },
    {
        "content": "<p>However, that requires landing one of the open de-duplocation PRs</p>",
        "id": 262084927,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262084687\">said</a>:</p>\n<blockquote>\n<p>Hmm. <a href=\"https://github.com/rust-lang/rust/issues/89195#issuecomment-950205114\">Camelid’s comment</a> I think says that Kyle huey’s issue won’t be resolved by PR <a href=\"https://github.com/rust-lang/rust/issues/89831\">#89831</a></p>\n</blockquote>\n<p>(no, that doesn’t make sense to me. kyle huey <a href=\"https://github.com/rust-lang/rust/issues/89195#issuecomment-926292380\">explicitly reported</a> that cargo-bisect-rustc points to the cache completion removal. So ignore that comment from me.)x</p>",
        "id": 262084962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337294
    },
    {
        "content": "<p>e.g. <a href=\"https://github.com/rust-lang/rust/pull/84944\">https://github.com/rust-lang/rust/pull/84944</a></p>",
        "id": 262084994,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262084927\">said</a>:</p>\n<blockquote>\n<p>However, that requires landing one of the open de-duplocation PRs</p>\n</blockquote>\n<p>Are there multiple PRs? I only remember seeing one.</p>",
        "id": 262085001,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337308
    },
    {
        "content": "<p>I had another one</p>",
        "id": 262085018,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337316
    },
    {
        "content": "<p>oh <a href=\"https://github.com/rust-lang/rust/issues/90423\">#90423</a>?</p>",
        "id": 262085038,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337329
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/90423\">https://github.com/rust-lang/rust/pull/90423</a></p>",
        "id": 262085048,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337334
    },
    {
        "content": "<p>Yeah</p>",
        "id": 262085054,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337339
    },
    {
        "content": "<p>I tried that one and it only made things about 5% better in our case.</p>",
        "id": 262085068,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337347
    },
    {
        "content": "<p>And I think there was even a third pr that did something similar</p>",
        "id": 262085082,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337353
    },
    {
        "content": "<p>Hmm</p>",
        "id": 262085084,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337355
    },
    {
        "content": "<p>Vs the 85% improvement for <a href=\"https://github.com/rust-lang/rust/issues/89831\">#89831</a></p>",
        "id": 262085094,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337360
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I had thought <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ’s point was that you’d want both PR’s in tandem?</p>",
        "id": 262085179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337387
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/pull/90913\">https://github.com/rust-lang/rust/pull/90913</a> is also relates</p>",
        "id": 262085191,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337392
    },
    {
        "content": "<p>I was initially thinking that we wanted both at once</p>",
        "id": 262085228,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337409
    },
    {
        "content": "<p>(i.e. you want the de-duplication PR in order to avoid regressions that the cache-completion one would otherwise introduce)</p>",
        "id": 262085242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337416
    },
    {
        "content": "<p>Right</p>",
        "id": 262085247,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337422
    },
    {
        "content": "<p>Ah ok.</p>",
        "id": 262085253,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337424
    },
    {
        "content": "<p>But since the cache-completion hit is so large</p>",
        "id": 262085268,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337431
    },
    {
        "content": "<p>We might just want to land it, and eat the smaller perf regression it causes for now</p>",
        "id": 262085316,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337452
    },
    {
        "content": "<p>I’m sympathetic to <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> ’s point <a href=\"https://github.com/rust-lang/rust/pull/90423#issuecomment-955880231\">here</a> that we may want more regression tests in place before we make major changes to this code</p>",
        "id": 262085328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337455
    },
    {
        "content": "<p>Yeah, that's my main concern as well.</p>",
        "id": 262085361,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337470
    },
    {
        "content": "<p>I can try to come up with <em>something</em></p>",
        "id": 262085363,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337471
    },
    {
        "content": "<p>what would be involved in generating that regression test? Maybe that work could be moved off of <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> ’s plate?</p>",
        "id": 262085384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337480
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> added in some support for asserting the evaluation status</p>",
        "id": 262085447,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337490
    },
    {
        "content": "<p>The perf hit hurts a lot but at the same time, I don't want to re-introduce the kinds of issues that led us to remove the caching in the first place.</p>",
        "id": 262085495,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337510
    },
    {
        "content": "<p>E.g checking that something is EvaluatedToOk vs EvaluatedToOkModuloRefions</p>",
        "id": 262085502,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337515
    },
    {
        "content": "<p>our time is, heh, almost up</p>",
        "id": 262085553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337536
    },
    {
        "content": "<p>(I had privately said to Wesley nearer start of meeting “hey we’ve got 43 minutes, lets start from way up at the top)</p>",
        "id": 262085598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337555
    },
    {
        "content": "<p>famous last words</p>",
        "id": 262085613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337565
    },
    {
        "content": "<p>The agenda will expand to fit the available time</p>",
        "id": 262085642,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337578
    },
    {
        "content": "<p>the regressions will continue until morale improves</p>",
        "id": 262085742,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637337606
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> what is your schedule like; would you have time to maybe video chat and code walk with me?</p>",
        "id": 262085840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262085384\">said</a>:</p>\n<blockquote>\n<p>what would be involved in generating that regression test? Maybe that work could be moved off of <span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> ’s plate?</p>\n</blockquote>\n<p>I'd be happy to work on that <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> if you have some pointers to reported issues I can start with. I believe this was related to the fingerprint ICEs but I don't recall the details.</p>",
        "id": 262085852,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337632
    },
    {
        "content": "<p>this coming Monday?</p>",
        "id": 262085859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337634
    },
    {
        "content": "<p>Sure!</p>",
        "id": 262085876,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337641
    },
    {
        "content": "<p>okay. lets plan on that.</p>",
        "id": 262085914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> yeah - however, I don't think we ever got a minimal reproduction</p>",
        "id": 262085989,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337685
    },
    {
        "content": "<p>I’m assigning self to <a href=\"https://github.com/rust-lang/rust/issues/89195\">#89195</a> as reminder to reach out to Kyle Huey and schedule chat with Aaron Hill.</p>",
        "id": 262086001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337688
    },
    {
        "content": "<p>And since this is incremental related, it's very hard to make one</p>",
        "id": 262086024,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1637337699
    },
    {
        "content": "<p>we have four more P-high beta-regressions on the list</p>",
        "id": 262086072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337719
    },
    {
        "content": "<p>how worried should I be about that?</p>",
        "id": 262086131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337728
    },
    {
        "content": "<p>I’m okay with us shipping with <a href=\"https://github.com/rust-lang/rust/issues/90357\">rust#90357</a> still persisting. Its not ideal but I’m not dropping everything to deal with it, clearly.</p>",
        "id": 262086232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337780
    },
    {
        "content": "<p>I think we've talked about all of these previously.</p>",
        "id": 262086234,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337781
    },
    {
        "content": "<p>yeah they all look like things we can live with, though I’m not sure I’m familiar with <a href=\"https://github.com/rust-lang/rust/issues/90459\">rust#90459</a></p>",
        "id": 262086305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337810
    },
    {
        "content": "<p>ah lint is becoming allow-by-default</p>",
        "id": 262086371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337836
    },
    {
        "content": "<p>in PR <a href=\"https://github.com/rust-lang/rust/issues/89826\">#89826</a></p>",
        "id": 262086426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337845
    },
    {
        "content": "<p>Closing <a href=\"https://github.com/rust-lang/rust/issues/90123\">#90123</a> since the fix has been beta-backported.</p>",
        "id": 262086434,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337849
    },
    {
        "content": "<p>okay and PR <a href=\"https://github.com/rust-lang/rust/issues/89826\">#89826</a> has been beta-backported I think</p>",
        "id": 262086488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337869
    },
    {
        "content": "<p>which means I think <a href=\"https://github.com/rust-lang/rust/issues/90459\">rust#90459</a> can be closed too, then?</p>",
        "id": 262086531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337885
    },
    {
        "content": "<p>Yes.</p>",
        "id": 262086624,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637337914
    },
    {
        "content": "<p>or at least downgraded</p>",
        "id": 262086663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637337933
    },
    {
        "content": "<p>Closing as fixed.</p>",
        "id": 262086970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338037
    },
    {
        "content": "<p>great! I feel better now</p>",
        "id": 262087012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338052
    },
    {
        "content": "<p>We are over time, so everyone should feel free to go</p>",
        "id": 262087119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338083
    },
    {
        "content": "<p>I’m going to go ahead and transcribe the performance report.</p>",
        "id": 262087150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338094
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-11-16.md\">triage logs for 2021-11-16</a></p>\n</blockquote>\n<p>A large amount of noise in the comparisons this week, likely due to new<br>\nprobabilistic query hash verification increasing likelihood of changes in each<br>\nbenchmark; solutions are being tracked in [rustc-perf#1105].</p>\n<p>Otherwise, though, the week largely amounted to a neutral one for performance.<br>\nThere were some regressions, particularly in doc builds, as a result of the<br>\naddition of portable SIMD. These are relatively speaking minor and primarily<br>\nimpact small crates.</p>\n<p>[rustc-perf#1105]: <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">https://github.com/rust-lang/rustc-perf/issues/1105</a></p>\n<p>Triage done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=eee8b9c7bafade55981d155dae71657f1cc55a22&amp;end=934624fe5f66ce3fb8abf0597a6deb079783335f&amp;absolute=false&amp;stat=instructions%3Au\">eee8b9c7bafade55981d155dae71657f1cc55a22..934624fe5f66ce3fb8abf0597a6deb079783335f</a></p>\n<p>5 Regressions, 2 Improvements, 6 Mixed; 2 of them in rollups</p>\n<p>41 comparisons made in total<br>\n30 Untriaged Pull Requests</p>",
        "id": 262087201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338120
    },
    {
        "content": "<h4>Regressions</h4>\n<p>pub use core::simd; <a href=\"https://github.com/rust-lang/rust/issues/89167\">#89167</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e90c5fbbc5df5c81267747daeb937d4e955ce6ad&amp;end=032dfe43605f4324966933078ffe6f717b77c7c8&amp;stat=instructions:u\">instruction counts</a> (up to 11.8% on <code>full</code> builds of <code>helloworld</code>)</li>\n<li>Expected regression due to expansion of libcore size; this continues to be a<br>\n  pain point as we add features to the standard library. Largest regressions are<br>\n  in rustdoc builds as it's more sensitive to the addition of new traits and<br>\n  impls.</li>\n</ul>\n<p>proc_macro: Add an expand_expr method to TokenStream <a href=\"https://github.com/rust-lang/rust/issues/87264\">#87264</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=7594067b69eac2395f7b3b42d519a559dae2d9d9&amp;end=3e018ce194ab16125747220676dd8a20aecd5196&amp;stat=instructions:u\">instruction counts</a> (up to 5.3% on <code>incr-unchanged</code> builds of <code>inflate</code>)</li>\n<li>Incremental regressions are likely to be due to random hashing added for<br>\n  incr-comp verification (which we may decide to disable during perf collection<br>\n  to avoid this). Otherwise, the regression is minimal to TokenStream<br>\n  processing.</li>\n</ul>\n<p>MIRI says <code>reverse</code> is UB, so replace it with something LLVM can vectorize <a href=\"https://github.com/rust-lang/rust/issues/90821\">#90821</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=c26746af5a925bad66b7ed4f9e7c3018f00d4010&amp;end=891ca5f63c3b3cfe3939710a728671243e881ed6&amp;stat=instructions:u\">instruction counts</a> (up to 0.8% on <code>full</code> builds of <code>deeply-nested</code>)</li>\n<li>Unclear cause to these regressions, but they seem to larely be in doc builds.</li>\n</ul>\n<p>Rollup of 5 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90769\">#90769</a></p>\n<ul>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=68ca579406f2fa9ec62710e4a4d5d3e07a168d3c&amp;end=82af160c2cb9c349a0373cba98d8ad7f911f0d34&amp;stat=instructions:u\">instruction counts</a> (up to 84.9% on <code>full</code> builds of <code>webrender-wrench</code>)</li>\n<li>Also has a small improvement, but that is likely to be the incremental<br>\n  verification noise.</li>\n</ul>\n<p>Added the --temps-dir option <a href=\"https://github.com/rust-lang/rust/issues/83846\">#83846</a></p>\n<ul>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=8e0293137f895a417fa043b9817c455150769406&amp;end=9dbbbb12c0b796f35cbf5a518ac12846c969a214&amp;stat=instructions:u\">instruction counts</a> (up to 0.5% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>Unclear what the cause of this is; we would not generally expect a regression<br>\n  from such an introduction.</li>\n</ul>",
        "id": 262087227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338134
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Use Vec extend and collect instead of repeatedly calling push <a href=\"https://github.com/rust-lang/rust/issues/90813\">#90813</a></li>\n<li>Address performance regression introduced by <a href=\"https://github.com/rust-lang/rust/issues/90218\">#90218</a> <a href=\"https://github.com/rust-lang/rust/issues/90845\">#90845</a></li>\n</ul>",
        "id": 262087302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262087302\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Use Vec extend and collect instead of repeatedly calling push <a href=\"https://github.com/rust-lang/rust/issues/90813\">#90813</a></li>\n</ul>\n</blockquote>\n<p>Huh. how much does this help...</p>",
        "id": 262087409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338200
    },
    {
        "content": "<p>I see, big impact on very narrow set of benchmarks: <a href=\"https://perf.rust-lang.org/compare.html?start=e4c23daeb461ac02413eb36c8cefcc5530638a05&amp;end=f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5\">https://perf.rust-lang.org/compare.html?start=e4c23daeb461ac02413eb36c8cefcc5530638a05&amp;end=f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5</a></p>",
        "id": 262087590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338254
    },
    {
        "content": "<p>Wow, that's crazy.</p>",
        "id": 262087757,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637338318
    },
    {
        "content": "<p>and 42 minutes ago, someone else was inspired by it:  \"Use Vec extend instead of repeated pushes on several places\" <a href=\"https://github.com/rust-lang/rust/issues/91042\">#91042</a></p>",
        "id": 262087837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338337
    },
    {
        "content": "<p>(still waiting on perf results there, though)</p>",
        "id": 262087892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338358
    },
    {
        "content": "<p>Not sure the doc change was worth it. I don't see any doc related benchmarks as being changed.</p>",
        "id": 262087950,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637338380
    },
    {
        "content": "<p>Once there is a regression test for <a href=\"https://github.com/rust-lang/rust/issues/85360\">#85360</a> in place, I'm more than happy to review/land changes to projection caching!</p>",
        "id": 262087951,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637338380
    },
    {
        "content": "<p>(makes me wonder if there’s mir-opt we could do here or something.)</p>",
        "id": 262087965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338384
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Replace Copy/Clone compiler magic on arrays with library impls <a href=\"https://github.com/rust-lang/rust/issues/86041\">#86041</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=07acdb48a0e0b22d08a45e3ced0378e0027b40eb&amp;end=d6082292a6f3207cbdacd6633a5b9d1476bb6772&amp;stat=instructions:u\">instruction counts</a> (up to -1.2% on <code>incr-unchanged</code> builds of <code>deeply-nested</code>)</li>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=07acdb48a0e0b22d08a45e3ced0378e0027b40eb&amp;end=d6082292a6f3207cbdacd6633a5b9d1476bb6772&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>full</code> builds of <code>cranelift-codegen</code>)</li>\n<li>Limited regressions in codegen, mostly due to more complicated MIR for these<br>\n  impls when done in library code vs. directly generated.</li>\n</ul>\n<p>Optimize pattern matching <a href=\"https://github.com/rust-lang/rust/issues/90746\">#90746</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3d29b6807740db74aeb9c2f626115e519dee4a62&amp;end=936238a92b2f9d6e7afe7dda69b4afd903f96399&amp;stat=instructions:u\">instruction counts</a> (up to -5.3% on <code>full</code> builds of <code>match-stress-enum</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3d29b6807740db74aeb9c2f626115e519dee4a62&amp;end=936238a92b2f9d6e7afe7dda69b4afd903f96399&amp;stat=instructions:u\">instruction counts</a> (up to 4.0% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n</ul>\n<p>rustdoc: Go back to loading all external crates unconditionally <a href=\"https://github.com/rust-lang/rust/issues/90489\">#90489</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=936238a92b2f9d6e7afe7dda69b4afd903f96399&amp;end=14a2fd640e0df9ee8cc1e04280b0c3aff93c42da&amp;stat=instructions:u\">instruction counts</a> (up to -3.9% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=936238a92b2f9d6e7afe7dda69b4afd903f96399&amp;end=14a2fd640e0df9ee8cc1e04280b0c3aff93c42da&amp;stat=instructions:u\">instruction counts</a> (up to 2.8% on <code>full</code> builds of <code>cargo</code>)</li>\n</ul>\n<p>Make RawVec private to alloc <a href=\"https://github.com/rust-lang/rust/issues/90542\">#90542</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3e018ce194ab16125747220676dd8a20aecd5196&amp;end=1b12d01903293453dd94aa170c82caf94415629f&amp;stat=instructions:u\">instruction counts</a> (up to -5.1% on <code>incr-unchanged</code> builds of <code>inflate</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3e018ce194ab16125747220676dd8a20aecd5196&amp;end=1b12d01903293453dd94aa170c82caf94415629f&amp;stat=instructions:u\">instruction counts</a> (up to 4.0% on <code>incr-unchanged</code> builds of <code>deep-vector</code>)</li>\n</ul>\n<p>Optimize Eq and Hash for Path/PathBuf <a href=\"https://github.com/rust-lang/rust/issues/90596\">#90596</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=3b2c45441d7eefed63f6658ff8becd5a51eaeae1&amp;end=c8e94975a6541e947a1bd4971e084c8ba637f2b6&amp;stat=instructions:u\">instruction counts</a> (up to -6.0% on <code>incr-unchanged</code> builds of <code>coercions</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3b2c45441d7eefed63f6658ff8becd5a51eaeae1&amp;end=c8e94975a6541e947a1bd4971e084c8ba637f2b6&amp;stat=instructions:u\">instruction counts</a> (up to 12.9% on <code>incr-unchanged</code> builds of <code>tuple-stress</code>)</li>\n</ul>\n<p>Rollup of 8 pull requests <a href=\"https://github.com/rust-lang/rust/issues/90945\">#90945</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=a2a7683e8f321e3c0b9d648ae480827b5ab70e1d&amp;end=934624fe5f66ce3fb8abf0597a6deb079783335f&amp;stat=instructions:u\">instruction counts</a> (up to -0.4% on <code>full</code> builds of <code>deeply-nested-async</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a2a7683e8f321e3c0b9d648ae480827b5ab70e1d&amp;end=934624fe5f66ce3fb8abf0597a6deb079783335f&amp;stat=instructions:u\">instruction counts</a> (up to 0.3% on <code>incr-patched: println</code> builds of <code>clap-rs</code>)</li>\n</ul>",
        "id": 262087979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338390
    },
    {
        "content": "<p>(sigh) its so hard to interpret these</p>",
        "id": 262088079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338430
    },
    {
        "content": "<p>Some of these are down to <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a>, as mentioned (probabilistic query verification), so they're not particularly notable in many cases.</p>",
        "id": 262088101,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338441
    },
    {
        "content": "<p>I’ve been idly thinking about this problem lately. Like, how we could better normalize our metrics, something like “compilation time divided by AST size” or something</p>",
        "id": 262088213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262088101\">said</a>:</p>\n<blockquote>\n<p>Some of these are down to <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a>, as mentioned (probabilistic query verification), so they're not particularly notable in many cases.</p>\n</blockquote>\n<p>If that's adding a lot of noise to our perf runs, should we consider disabling it on perf.rlo?</p>",
        "id": 262088284,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637338494
    },
    {
        "content": "<p>Yeah, as that issue notes, it's potentially the right step</p>",
        "id": 262088319,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338508
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262088213\">said</a>:</p>\n<blockquote>\n<p>I’ve been idly thinking about this problem lately. Like, how we could better normalize our metrics, something like “compilation time divided by AST size” or something</p>\n</blockquote>\n<p>(which would still be imperfect; you really want to weight things according to their importance in real  code)</p>",
        "id": 262088352,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338521
    },
    {
        "content": "<p>I guess we could always miss a regression that introduces though... Balancing \"real world\" workloads vs getting noise free data is so complex.</p>",
        "id": 262088427,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637338550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a> , would it be bad to add a <code>-Z</code> flag that changed the hashing so that instead of the commit hash, we used some set of values that we could keep stable over time?</p>",
        "id": 262088695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338662
    },
    {
        "content": "<p>eh, it's not really ... possible I think -- this is hashing strings and such as part of the debuginfo remapping</p>",
        "id": 262088773,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338688
    },
    {
        "content": "<p>we probably need a -Zquery-verification=no or something, though, to fix this.</p>",
        "id": 262088802,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338705
    },
    {
        "content": "<p>I’m not understanding why the commit hash would be relevant to debuginfo remapping</p>",
        "id": 262088913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338775
    },
    {
        "content": "<p>we ship rustc's with --debuginfo-remap=/checkout=/rustc/&lt;hash&gt;/...</p>",
        "id": 262088950,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338795
    },
    {
        "content": "<p>(obviously getting exact syntax wrong there)</p>",
        "id": 262089016,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338809
    },
    {
        "content": "<p>hmm</p>",
        "id": 262089071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338833
    },
    {
        "content": "<p>Okay I think I understand now</p>",
        "id": 262089088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338838
    },
    {
        "content": "<p>but that embeds the rustc commit hash into a bunch of strings inside the standard library, rustc, etc. and leads to them being hashed as part of various things in the compiler, AFAIK.</p>",
        "id": 262089098,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338845
    },
    {
        "content": "<p>As in: 1. rustc-perf, by design, is evaluating the artifacts we ship. 2. The artifacts we ship have the commit hash embedded into them.</p>",
        "id": 262089145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338864
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 262089161,
        "sender_full_name": "simulacrum",
        "timestamp": 1637338871
    },
    {
        "content": "<p>so a suggestion like mine would involve making entirely different build artifacts (and thus break 1.)</p>",
        "id": 262089195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338888
    },
    {
        "content": "<p>I’m still not certain I understand the exact value of embedding the commit hash into the artifacts we ship, i.e. I don’t know where the debuginfo and/or debuggers are leveraging that.</p>",
        "id": 262089391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338971
    },
    {
        "content": "<p>but I’ll dig into that myself, no need to spend further time on it now.</p>",
        "id": 262089421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637338985
    },
    {
        "content": "<p>(I’ve been thinking a lot lately about how many places our instruction counts have measurement bias due to issues like this.)</p>",
        "id": 262089519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637339020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262089391\">said</a>:</p>\n<blockquote>\n<p>I’m still not certain I understand the exact value of embedding the commit hash into the artifacts we ship, i.e. I don’t know where the debuginfo and/or debuggers are leveraging that.</p>\n</blockquote>\n<p>I've found this useful if for no other reason than figuring out which commit a nightly was built from.</p>",
        "id": 262089628,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637339054
    },
    {
        "content": "<p>oh,. sure. Having it in the version string is great</p>",
        "id": 262089695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637339082
    },
    {
        "content": "<p>but that doesn’t imply the same level of invasiveness that <a href=\"https://github.com/rust-lang/rustc-perf/issues/1105\">rustc-perf#1105</a> is describing, right?</p>",
        "id": 262089748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1637339099
    },
    {
        "content": "<p>Yeah, that's fair.</p>",
        "id": 262089830,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637339140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202021-11-19/near/262087950\">said</a>:</p>\n<blockquote>\n<p>Not sure the doc change was worth it. I don't see any doc related benchmarks as being changed.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> which change are you referring to here?</p>",
        "id": 262090155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637339269
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/90813\">https://github.com/rust-lang/rust/pull/90813</a></p>",
        "id": 262090242,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637339291
    },
    {
        "content": "<p>oh oh I see you mean within that PR it modified rustdoc</p>",
        "id": 262090307,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637339321
    },
    {
        "content": "<p>Yeah. I just find the <code>for</code> version slightly clearer.</p>",
        "id": 262090361,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637339342
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I find rustdoc's search index code impossible to understand either way lol</p>",
        "id": 262090397,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637339358
    },
    {
        "content": "<p>Just an idle observation the bulk of the lines changed in the PR didn't seem to affect perf either way.</p>",
        "id": 262090444,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1637339378
    },
    {
        "content": "<p>also since we're discussing perf I want to call out that <a href=\"https://perf.rust-lang.org/compare.html?start=e8423e6c449ad3f4b0dab442175462004554e499&amp;end=18fa4342fc215fe9e714307db694eaa8f5dc4a0d\">https://perf.rust-lang.org/compare.html?start=e8423e6c449ad3f4b0dab442175462004554e499&amp;end=18fa4342fc215fe9e714307db694eaa8f5dc4a0d</a> is <em>fantastic</em>, <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> you're doing the lord's work</p>",
        "id": 262090665,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637339458
    },
    {
        "content": "<p>W.r.t <a href=\"https://github.com/rust-lang/rust/issues/90813\">#90813</a>, the two benchmarks (enum-match-stress and unicode_normalization) are both dominated by enormous <code>match</code>es.</p>",
        "id": 262262564,
        "sender_full_name": "nnethercote",
        "timestamp": 1637531498
    }
]