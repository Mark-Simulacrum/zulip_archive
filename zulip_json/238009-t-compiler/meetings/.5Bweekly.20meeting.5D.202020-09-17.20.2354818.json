[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-09-17T14:00:00Z\">2020-09-17T14:00:00+00:00</time></p>",
        "id": 210310021,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600285108
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 210310032,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600285115
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> have prepared the <a href=\"https://hackmd.io/KZa0E7ltRASGRFZrx67szw?view\">meeting agenda</a></p>",
        "id": 210310053,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600285128
    },
    {
        "content": "<p>We will have checkins from @WG-polymorphization and <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> which both were pre-filled by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 210310253,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600285230
    },
    {
        "content": "<p>they've also followed the pre-set formatting, well done <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 210310372,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600285309
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 45 minutes, exactly at <time datetime=\"2020-09-17T14:00:00Z\">2020-09-17T14:00:00+00:00</time></p>",
        "id": 210387254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600348519
    },
    {
        "content": "<p><a href=\"https://hackmd.io/KZa0E7ltRASGRFZrx67szw?view\">Check out the meeting agenda</a></p>",
        "id": 210387324,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600348555
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 210393736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351261
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 210394056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351400
    },
    {
        "content": "<ul>\n<li><a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.20followup.5D.202020-09-11.20.2354818\">There was a meeting followup from last weekly meeting where a bunch of T-compiler RFC backlog things were discussed.</a></li>\n</ul>",
        "id": 210394100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351417
    },
    {
        "content": "<ul>\n<li>Tomorrow we will have the <a href=\"https://github.com/rust-lang/compiler-team/issues/314\">MCP retrospective</a> at <time datetime=\"2020-09-18T14:00:00Z\">2020-09-18T14:00:00+00:00</time></li>\n</ul>",
        "id": 210394297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351499
    },
    {
        "content": "<p>Reminder that there is a survey</p>",
        "id": 210394323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351508
    },
    {
        "content": "<p>Also, I think I will spend some time going over the data the hour before</p>",
        "id": 210394337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351516
    },
    {
        "content": "<p>Probably in a public zulip stream :)</p>",
        "id": 210394349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351521
    },
    {
        "content": "<p><a href=\"https://docs.google.com/forms/d/19cnk-JtD0wEtIbkny4KN6XPgq3_oL07JPQJN2hHvRek/edit?usp=drive_web\">survey link</a></p>",
        "id": 210394409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351548
    },
    {
        "content": "<p>we've had 7 responses so far</p>",
        "id": 210394434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351555
    },
    {
        "content": "<ul>\n<li>wg-incr-comp will have its third meeting next Tuesday at <time datetime=\"2020-09-22T12:00:00Z\">2020-09-22T08:00:00-04:00</time></li>\n</ul>",
        "id": 210394456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351563
    },
    {
        "content": "<p>I realize I never responded :)</p>",
        "id": 210394462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351563
    },
    {
        "content": "<ul>\n<li>Oh, re wg-incr-comp meeting<br>\n    - Ping wesleywiser or pnkfelix if you're interested in helping out with wg-incr-comp</li>\n</ul>",
        "id": 210394574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351609
    },
    {
        "content": "<p>(some members had to leave the WG for various reasons, so I figured I'd mention we're happy to have more help)</p>",
        "id": 210394711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351663
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"<code>ty.kind()</code> -&gt; <code>ty.data()</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210394722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351673
    },
    {
        "content": "<p>/me wonders if the \"move compiler/crates to stable Rust\" is worthy of being promoted to a Friday steering meeting...</p>",
        "id": 210394835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351713
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Integration of the Cranelift backend with rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></li>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Infer hidden types without replacing with an inference variable\" <a href=\"https://github.com/rust-lang/compiler-team/issues/325\">compiler-team#325</a></li>\n<li>\"Uplift <code>temporary-cstring-as-ptr</code> lint from <code>clippy</code> into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/346\">compiler-team#346</a></li>\n<li>\"Uplift <code>drop-bounds</code> lint from clippy into rustc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">compiler-team#347</a></li>\n<li>\"Add StatementKind::Intrinsic to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/348\">compiler-team#348</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210394898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351743
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"Promote aarch64-pc-windows-msvc to Tier 2 Development Platform\" <a href=\"https://github.com/rust-lang/rust/pull/75914\">rust#75914</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210394935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351762
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>No FCP requests this time.</li>\n</ul>\n</li>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 210394953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351772
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-libs] \"Implement <code>Index</code> and <code>IndexMut</code> for arrays\" <a href=\"https://github.com/rust-lang/rust/pull/74989\">rust#74989</a></li>\n<li>[T-lang] \"Use implicit (not explicit) rules for promotability by default in <code>const fn</code>\" <a href=\"https://github.com/rust-lang/rust/pull/75502\">rust#75502</a></li>\n<li>[T-libs] \"Make some Ordering methods const\" <a href=\"https://github.com/rust-lang/rust/pull/76198\">rust#76198</a></li>\n<li>[T-libs] \"Stabilize some Option methods as const\" <a href=\"https://github.com/rust-lang/rust/pull/76135\">rust#76135</a></li>\n<li>[T-libs] \"Stabilize some Result methods as const\" <a href=\"https://github.com/rust-lang/rust/pull/76136\">rust#76136</a></li>\n<li>[T-libs] \"Add <code>[T; N]: TryFrom&lt;Vec&lt;T&gt;&gt;</code> (insta-stable)\" <a href=\"https://github.com/rust-lang/rust/pull/76310\">rust#76310</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210394988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210394835\">said</a>:</p>\n<blockquote>\n<p>/me wonders if the \"move compiler/crates to stable Rust\" is worthy of being promoted to a Friday steering meeting...</p>\n</blockquote>\n<p>I was just looking at the thread and there are certainly a lot of comments; it feels ripe for a \"summary\"</p>",
        "id": 210395087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600351835
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210394988\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-libs] \"Implement <code>Index</code> and <code>IndexMut</code> for arrays\" <a href=\"https://github.com/rust-lang/rust/pull/74989\">rust#74989</a></li>\n<li>[T-lang] \"Use implicit (not explicit) rules for promotability by default in <code>const fn</code>\" <a href=\"https://github.com/rust-lang/rust/pull/75502\">rust#75502</a></li>\n<li>[T-libs] \"Make some Ordering methods const\" <a href=\"https://github.com/rust-lang/rust/pull/76198\">rust#76198</a></li>\n<li>[T-libs] \"Stabilize some Option methods as const\" <a href=\"https://github.com/rust-lang/rust/pull/76135\">rust#76135</a></li>\n<li>[T-libs] \"Stabilize some Result methods as const\" <a href=\"https://github.com/rust-lang/rust/pull/76136\">rust#76136</a></li>\n<li>[T-libs] \"Add <code>[T; N]: TryFrom&lt;Vec&lt;T&gt;&gt;</code> (insta-stable)\" <a href=\"https://github.com/rust-lang/rust/pull/76310\">rust#76310</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>we've added other's teams Finalized FCPs, let us know after the meeting if this is interesting to be informed or if we should stick just to <code>T-compiler</code></p>",
        "id": 210395202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600351894
    },
    {
        "content": "<p>in general there are not that many, unsure what happened that we had 6 :)</p>",
        "id": 210395226,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600351906
    },
    {
        "content": "<p>maybe T-libs had a meeting</p>",
        "id": 210395248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351917
    },
    {
        "content": "<h3>WG checkins</h3>\n<p>Polymorphization working group checkin by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> </p>\n<blockquote>\n<p>I think the initial goal ought to be getting polymorphization enabled by default:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75185\">#75185</a> was opened to perform a crater run on polymorphization enabled-by-default. This was rebased after some other PRs broke polymorphization and we didn't notice, and we've yet to rebase and re-queue it.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 210395334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> and <span class=\"user-mention\" data-user-id=\"232825\">@Christiaan Dirkx</span> are working on making lots of functions <code>const</code></p>",
        "id": 210395359,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600351959
    },
    {
        "content": "<blockquote>\n<p>We've currently got the following open PRs:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75675\">#75675</a> (assigned to <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span>) was opened to adjust the new symbol mangling scheme to encode impl parameters - this is an alternative fix for <a href=\"https://github.com/rust-lang/rust/issues/75326\">#75326</a> (which was originally resolved by <a href=\"https://github.com/rust-lang/rust/issues/75518\">#75518</a> and then <a href=\"https://github.com/rust-lang/rust/issues/75595\">#75595</a> - which changed polymorphization's analysis to mark more parameters are used). It's works but one of the tests required normalization that didn't differ based on bitness, which was unexpected and we've yet to decide how to proceed.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75737\">#75737</a> (blocked, but approved by <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span>)  was opened to remove the predicate logic in polymorphization's analysis. This logic was added during the original polymorphization PR (and then extended in <a href=\"https://github.com/rust-lang/rust/issues/75518\">#75518</a> and <a href=\"https://github.com/rust-lang/rust/issues/75595\">#75595</a>) and isn't necessary after <a href=\"https://github.com/rust-lang/rust/issues/75675\">#75675</a> (which is why it is blocked). Other changes to polymorphization must have affected the necessity of this logic, since I'm confident that the new symbol mangling scheme wasn't the original impetus for it, but I'm not sure which changes those would have been.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75414\">#75414</a> (assigned to <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span>) changes polymorphization's analysis to take an <code>InstanceDef</code>, which enables the MIR of shims to be polymorphized. I'm not sure if it is exactly what we want.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75346\">#75346</a> (assigned to <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span>) changes how <code>FnPtrShim</code>s are constructed so that they don't require substitution during codegen - this will help avoid double substitution from polymorphization changes.<br>\n</p>\n</li>\n</ul>\n</blockquote>",
        "id": 210395365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351963
    },
    {
        "content": "<p>That's what all the T-libs FCPs are</p>",
        "id": 210395378,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600351970
    },
    {
        "content": "<blockquote>\n<p>We've also got the following issues open:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75327\">#75327</a> would remove <code>ParamEnv::reveal_all()</code> from codegen, a necessary next step so that we can construct <code>ParamEnv</code>s that constrain generic parameters by their size (eventually) - this is the first step towards polymorphization by size/alignment.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75336\">#75336</a> suggests re-applying some changes from <a href=\"https://github.com/rust-lang/rust/issues/75255\">#75255</a> that we reverted (in <a href=\"https://github.com/rust-lang/rust/issues/75337\">#75337</a>) because it caused regressions (the crux of this issue is fixing those regressions). <a href=\"https://github.com/rust-lang/rust/issues/75255\">#75255</a> modified the closure upvar tuple so that if it contained closures, those would be polymorphized - this was necessary to avoid issues that were revealed when the new symbol mangling scheme was used (<a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/symbol.20mangling.20v0.20.E2.9C.95.20polymorphisation\">#t-compiler/wg-polymorphization&gt;symbol mangling v0 ✕ polymorphisation</a> discussed this issue initially). After chatting with eddy, I'm not sure that approach <a href=\"https://github.com/rust-lang/rust/issues/75255\">#75255</a> implemented is desirable - we've experimented with changing how the polymorphization analysis treats closures, and with attempts to reveal other issues that this could be a symptom of - we haven't had any luck with that though. Anyway, the changes that <a href=\"https://github.com/rust-lang/rust/issues/75336\">#75336</a> suggests polymorphizing closures anywhere in a <code>Instance</code>'s substs, not just in the upvar tuple because that would reduce duplication of more functions (see the example in the issue).</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/69925\">#69925</a> is fixed by <a href=\"https://github.com/rust-lang/rust/issues/75346\">#75346</a> above.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75325\">#75325</a> is probably the biggest unknown facing polymorphization right now and relates to how we handle the <code>type_id</code> and <code>type_name</code> intrinsics - which would make polymorphization observable. The issue contains some examples which were failing at one point with polymorphization enabled (I'm not sure if that's still the case). This issue requires a lot of investigation.</p>\n</li>\n</ul>\n<p>I think that's everything. I think that landing the current PRs and addressing <a href=\"https://github.com/rust-lang/rust/issues/75325\">#75325</a> are the most important tasks right now, we can crater after that and hopefully try enabling polymorphization by default.</p>\n</blockquote>",
        "id": 210395447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600351993
    },
    {
        "content": "<p>(we probably need checkins to be a little more succinct, somehow)</p>",
        "id": 210395515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352028
    },
    {
        "content": "<p>This is really awesome, great work <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span>!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 210395534,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600352035
    },
    {
        "content": "<p>great summary, too</p>",
        "id": 210395550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352041
    },
    {
        "content": "<p>I didn’t write that intended for a meeting checkin, just happened to reuse it as one.</p>",
        "id": 210395654,
        "sender_full_name": "davidtwco",
        "timestamp": 1600352067
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span> checkin by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> </p>\n<blockquote>\n<p>The polonius WG (Niko, Albin, and Rémy) had a sprint at the beginning of August, where:<br>\n- we continued the work on move errors: both in rustc to prepare the data needed to do the analysis and actually emit the errors computed by polonius, and in polonius itself, to fix potential false positives, and current efficiency issues in this part of the computation. Some new rules have been written but not yet fully implemented or tested, so this is something we'll continue to look at in the next sprint.<br>\n- we were able to prototype our different lifetime analysis, and evaluate it: there was an open question whether it'd be better to track subset relations or equality relations, and we were able to find some subtle flaws in our current thoughts about tracking equality. There's some interesting theoretical core that could be useful in the future, but also has foundational issues, so we decided to keep tracking subset relations for now and not change our existing lifetime analysis rules.<br>\n- we continued the work on universal region errors / illegal subset errors: we settled a tiny open question on whether we should compute these errors using subset relations or by looking for unexpected loans in universal regions. We decided to switch to using subset relations because it works everywhere: the polonius analysis is currently split into different parts for validation and efficiency reasons. Our existing subset errors computation had only been added to the main rules used for validation, and it used the \"looking at unexpected loans\" approach. We did the work necessary to update this, and also to compute the errors in the other parts dedicated to efficiency.<br>\n- we were able to work on a fix for the current OOMs in fact generation we see in a couple rustc UI tests: we have prototyped a fix in rustc and polonius. It is, however, quite invasive and requires subtle duplication of rules. So we also started looking at a different fix which could avoid that, and is something we'll continue to look at in the next sprint.<br>\n- we did our periodic reevaluation of rustc UI tests using the polonius compare mode: find which tests might have changed .stderr files, add the ones missing for the tests added recently, etc; since the compare mode is not run on CI yet, we do this manually every few months to keep up to date with diagnostics changes and the likes. This time, a new test OOMs for move errors and will be fixed as part of this work mentioned earlier.<br>\n- finally, we also looked at supporting profiling polonius' internals from rustc's -Zself-profile, and also when using the tracy profiler.</p>\n</blockquote>",
        "id": 210395759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352115
    },
    {
        "content": "<p>\"current OOMs in fact generation we see\" ?</p>",
        "id": 210395851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352163
    },
    {
        "content": "<p>(can you fix that in the <a href=\"https://hackmd.io/KZa0E7ltRASGRFZrx67szw?both\">agenda hackmd</a>, niko?)</p>",
        "id": 210395931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352187
    },
    {
        "content": "<p>anyway lets move along</p>",
        "id": 210395981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352213
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No beta nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>",
        "id": 210396002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352223
    },
    {
        "content": "<ul>\n<li>\"Ignore rustc_private items from std docs\" <a href=\"https://github.com/rust-lang/rust/pull/76571\">rust#76571</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> and assigned to <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></li>\n<li>Potentially fixes the following issues <a href=\"https://github.com/rust-lang/rust/issues/74672\">rust#74672</a>, <a href=\"https://github.com/rust-lang/rust/issues/75588\">rust#75588</a> and <a href=\"https://github.com/rust-lang/rust/issues/76529\">rust#76529</a></li>\n<li><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> is in favor of the backport</li>\n</ul>\n</li>\n</ul>",
        "id": 210396043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352237
    },
    {
        "content": "<p>Note: <a href=\"https://github.com/rust-lang/rust/issues/76529\">#76529</a> is not a bug, its a PR</p>",
        "id": 210396202,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352296
    },
    {
        "content": "<p>do we <em>know</em> it fixes those issues?</p>",
        "id": 210396241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352310
    },
    {
        "content": "<p>it has landed, so presumably we could look at the generated docs of today...?</p>",
        "id": 210396316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352340
    },
    {
        "content": "<p>in any case, the diff looks a bit larger than it really is because it cleaned up the code a bit</p>",
        "id": 210396370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352360
    },
    {
        "content": "<p>it seems pretty <em>safe</em></p>",
        "id": 210396389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352369
    },
    {
        "content": "<p>i.e., from what I can tell the only real addition is the final hunk</p>",
        "id": 210396425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352383
    },
    {
        "content": "<p>Theres another if condition that changed slightly.</p>",
        "id": 210396724,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600352496
    },
    {
        "content": "<p>funny that it got rid of a comment</p>",
        "id": 210396744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352504
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210396724\">said</a>:</p>\n<blockquote>\n<p>Theres another if condition that changed slightly.</p>\n</blockquote>\n<p>oh I guess that's true</p>",
        "id": 210396842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352534
    },
    {
        "content": "<p>anyway it seems fine to me</p>",
        "id": 210396866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352550
    },
    {
        "content": "<p>it only applies to unstable rustc_private features now, not all unstable features</p>",
        "id": 210396867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352550
    },
    {
        "content": "<p>I wrote a summary of this on the PR, one sec</p>",
        "id": 210396894,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352567
    },
    {
        "content": "<p>in any case yeah I'm just judging on \"likely to cause surprising breakage\", I guess I'm assuming the \"intent\" is good from the original r+</p>",
        "id": 210396900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352570
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/76571#issuecomment-690855610\">https://github.com/rust-lang/rust/pull/76571#issuecomment-690855610</a></p>",
        "id": 210396930,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352582
    },
    {
        "content": "<p>(although maybe this should be a T-rustdoc discussion? I don't know the process)</p>",
        "id": 210396970,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352600
    },
    {
        "content": "<p>T-rustdoc has basically delegated beta-nomination handling to T-compiler</p>",
        "id": 210397006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352619
    },
    {
        "content": "<p>that summary from <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> gives the option of just backporting PR <a href=\"https://github.com/rust-lang/rust/issues/76529\">#76529</a></p>",
        "id": 210397128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352671
    },
    {
        "content": "<p>That last pr is smaller...</p>",
        "id": 210397165,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600352690
    },
    {
        "content": "<p>note that PR is <em>not</em> on nightly</p>",
        "id": 210397166,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352693
    },
    {
        "content": "<p>I vote for \"just backport\" :) seems like <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> and <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> were both inclined to do so, and I judge the risk relatively low. At <em>worst</em> we get too many docs or a few are missing, right?</p>",
        "id": 210397183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352702
    },
    {
        "content": "<p>correct</p>",
        "id": 210397201,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352715
    },
    {
        "content": "<p>(In particular around unstable things)</p>",
        "id": 210397203,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352718
    },
    {
        "content": "<p>Fair enough</p>",
        "id": 210397236,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600352733
    },
    {
        "content": "<p>Is there any risk of it claiming a trait is implemented that is in fact not?</p>",
        "id": 210397255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352746
    },
    {
        "content": "<p>seems impossible</p>",
        "id": 210397267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352749
    },
    {
        "content": "<p>no, this is just determining whether to <em>show</em> the trait impl</p>",
        "id": 210397280,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352759
    },
    {
        "content": "<p>I don't think so, esp. since trait impls are stable</p>",
        "id": 210397281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352761
    },
    {
        "content": "<p>the implementation already has to exist</p>",
        "id": 210397295,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352766
    },
    {
        "content": "<p>(the trait may of course be unstable)</p>",
        "id": 210397346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600352773
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 210397403,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352799
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 210397426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352810
    },
    {
        "content": "<ul>\n<li>\"Don't run tidy exec check on WSL2\" <a href=\"https://github.com/rust-lang/rust/pull/74753\">rust#74753</a><ul>\n<li>This was discussed last week</li>\n<li><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> approved the changes</li>\n<li><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> is not convinced this is the right solution</li>\n<li>Windows WG was just pinged</li>\n</ul>\n</li>\n</ul>",
        "id": 210397454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352822
    },
    {
        "content": "<p>wasn't <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> going to do something here...?</p>",
        "id": 210397511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352850
    },
    {
        "content": "<p>yes there's a PR assigned to you</p>",
        "id": 210397533,
        "sender_full_name": "simulacrum",
        "timestamp": 1600352861
    },
    {
        "content": "<p>yes, see PR <a href=\"https://github.com/rust-lang/rust/issues/76607\">#76607</a></p>",
        "id": 210397552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352870
    },
    {
        "content": "<p>ah ha</p>",
        "id": 210397555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352872
    },
    {
        "content": "<p>btw, it seemed to me that this is not waiting on team anymore and incorrectly labelled?</p>",
        "id": 210397569,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600352876
    },
    {
        "content": "<p>yeah I agree with <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 210397606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352887
    },
    {
        "content": "<p>okay lets move along then</p>",
        "id": 210397617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352892
    },
    {
        "content": "<ul>\n<li>\"Uplift drop-bounds lint from clippy\" <a href=\"https://github.com/rust-lang/rust/pull/75699\">rust#75699</a><ul>\n<li>This is the implementation of <a href=\"https://github.com/rust-lang/compiler-team/issues/347\">MCP #347</a> to move the lint warning from clippy into the compiler, which needs a second</li>\n<li>Reviewed by <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> and <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n</ul>\n</li>\n</ul>",
        "id": 210397742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352933
    },
    {
        "content": "<p>(deleted) (got this confused with <a href=\"https://github.com/rust-lang/rust/pull/75671\">https://github.com/rust-lang/rust/pull/75671</a>)</p>",
        "id": 210397768,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600352946
    },
    {
        "content": "<p>I'd say this is blocked on the aforementioned MCP</p>",
        "id": 210397795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600352961
    },
    {
        "content": "<p>I'll just second it, I think I agree with the intent here (of MCP#347 that is)</p>",
        "id": 210397934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353013
    },
    {
        "content": "<p>so we can move on</p>",
        "id": 210397991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353048
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 210397993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353048
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">4 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">2 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">54 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">33 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">3 P-critical, 0 P-high, 4 P-medium, 1 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 2 P-high, 5 P-medium, 1 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">0 P-critical, 20 P-high, 58 P-medium, 6 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 210398014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353060
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 210398040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353070
    },
    {
        "content": "<ul>\n<li>\"incorrect code generation for i686 release build for 1.47 beta and nightly\" <a href=\"https://github.com/rust-lang/rust/issues/76042\">rust#76042</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></li>\n<li><code>I-unsound</code> issue and beta regression</li>\n<li>It seems to be <a href=\"https://bugs.llvm.org/show_bug.cgi?id=47278\">a bug in LLVM</a>, introduced in the LLVM 11 upgrade and triggered by compiler flag <code>-Copt-level=0</code></li>\n<li>The <a href=\"https://bugs.llvm.org/show_bug.cgi?id=47278\">LLVM bug</a> was fixed and included in the 11.x branch of LLVM</li>\n</ul>\n</li>\n</ul>",
        "id": 210398061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353085
    },
    {
        "content": "<p>one important thing to note, there have been like 5 <code>P-critical</code> issues related to LLVM 11</p>",
        "id": 210398109,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353111
    },
    {
        "content": "<p>so do we just need to cherry-pick the fix to our LLVM?</p>",
        "id": 210398116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353117
    },
    {
        "content": "<p>some were fixed and some are still up</p>",
        "id": 210398140,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353123
    },
    {
        "content": "<p>sounds doable.</p>",
        "id": 210398201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353139
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210398116\">said</a>:</p>\n<blockquote>\n<p>so do we just need to cherry-pick the fix to our LLVM?</p>\n</blockquote>\n<p>it seems that it will be included in 11.0</p>",
        "id": 210398203,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353141
    },
    {
        "content": "<p>when will 11.0 be released?</p>",
        "id": 210398242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353160
    },
    {
        "content": "<p>saw some comments saying that they were a bit delayed already</p>",
        "id": 210398281,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353176
    },
    {
        "content": "<p>in another P-critical we will see next :)</p>",
        "id": 210398323,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353195
    },
    {
        "content": "<p>but I'm not 100% sure when they will release or when they're supposed to release</p>",
        "id": 210398354,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353216
    },
    {
        "content": "<ul>\n<li>\"Optimisation-caused UB during cross-crate compilation\" <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a><ul>\n<li>This was discussed last week</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n<li>Also nominated for discussion</li>\n<li>Is not a regression, this never worked so it was also discussed if this was <code>P-critical</code> or <code>P-high</code></li>\n<li><a href=\"https://bugs.llvm.org/show_bug.cgi?id=47444\">It's an LLVM bug</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> is <a href=\"https://github.com/rust-lang/rust/issues/76387#issuecomment-690610859\">left a patch up for review upstream and can be cherry picked if needed</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210398359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353220
    },
    {
        "content": "<p>that one yeah, we would want to cherry-pick to our llvm branch</p>",
        "id": 210398445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353248
    },
    {
        "content": "<p>unless they approve and include in 11.0</p>",
        "id": 210398470,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353257
    },
    {
        "content": "<p>all this seems a bit risky</p>",
        "id": 210398499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353277
    },
    {
        "content": "<p>it seems like cherry picking would be good</p>",
        "id": 210398538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353298
    },
    {
        "content": "<p>I mean in general</p>",
        "id": 210398545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353302
    },
    {
        "content": "<p>both for the previous and this one, potentially</p>",
        "id": 210398566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353312
    },
    {
        "content": "<p>there are a bunch of <code>P-critical</code> and I'd say, we're just seeing the ones that were found, there may be more undiscovered yet</p>",
        "id": 210398568,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353313
    },
    {
        "content": "<p>I guess I can't quite judge how risky an LLVM PR is</p>",
        "id": 210398592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353322
    },
    {
        "content": "<p>but waiting for LLVM 11 could be a long wait</p>",
        "id": 210398606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353328
    },
    {
        "content": "<p>we've often cherry-picked things in advance in the past, afaik</p>",
        "id": 210398631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353339
    },
    {
        "content": "<p>LLVM upgrades with just cherry-picks are usually pretty safe, I think</p>",
        "id": 210398645,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353344
    },
    {
        "content": "<p>but LLVM 11 is always going to fix (and not fix) some bugs</p>",
        "id": 210398667,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353358
    },
    {
        "content": "<p>what I'm referring about risky is that after LLVM 11 upgrade there were a lot of P-critical issues</p>",
        "id": 210398671,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353360
    },
    {
        "content": "<p>and probably more to discover</p>",
        "id": 210398719,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353370
    },
    {
        "content": "<p>ok, I see. I think that's also not unusual. :)</p>",
        "id": 210398722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353372
    },
    {
        "content": "<p>yeah, that's my point</p>",
        "id": 210398736,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353379
    },
    {
        "content": "<p>like we can delay it for a cycle but I don't personally expect that to \"stop\"</p>",
        "id": 210398762,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353395
    },
    {
        "content": "<p>I would like to just point out that there's a difference between cherry-picking something that has landed on LLVM upstream, vs cherry-picking something one of our volunteers wrote that has not yet landed on LLVM upstream</p>",
        "id": 210398763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353396
    },
    {
        "content": "<p>I personally feel pretty confident about landing code that LLVM itself has signed off on</p>",
        "id": 210398804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353418
    },
    {
        "content": "<p>is it skipping one stable cycle an option, so we don't have to bake LLVM out? :P</p>",
        "id": 210398806,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353420
    },
    {
        "content": "<p>I'm not very familiar with LLVM, so it's certainly possible that I missed something</p>",
        "id": 210398822,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600353426
    },
    {
        "content": "<p>we can revert the upgrade in beta, I suppose</p>",
        "id": 210398844,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353438
    },
    {
        "content": "<p>but I personally do not feel like that's an obvious win</p>",
        "id": 210398863,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353446
    },
    {
        "content": "<p>can/should we decide this here?</p>",
        "id": 210398866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353448
    },
    {
        "content": "<p>If we do cherry-pick before meeting, I'd like someone more familiar with LLVM to review it first</p>",
        "id": 210398867,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600353448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we've never had a good process for these decisions tbh</p>",
        "id": 210398909,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> when would you say is deadline for deciding on whether to revert LLVM 11 from beta?</p>",
        "id": 210398913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353466
    },
    {
        "content": "<p>I would probably say roughly 1.5 weeks would be good</p>",
        "id": 210399009,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353489
    },
    {
        "content": "<p>1.5 weeks from today?</p>",
        "id": 210399040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353497
    },
    {
        "content": "<p>yeah</p>",
        "id": 210399055,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353500
    },
    {
        "content": "<p>okay</p>",
        "id": 210399067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353504
    },
    {
        "content": "<p>Yeah, so -- I think we should only cherry-pick things that LLVM has reviewed unless very urgent</p>",
        "id": 210399110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353521
    },
    {
        "content": "<p>(that's very just \"glanced at a calendar and subtracted a bit over a week from release day)</p>",
        "id": 210399118,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353525
    },
    {
        "content": "<p>That to me means that we should make sure we discuss this again, at next week's meeting <em>at lhe latest.</em></p>",
        "id": 210399122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353527
    },
    {
        "content": "<p>(or next friday maybe; I don't remember if we have a steering meeting already scheduled for next friday...)</p>",
        "id": 210399169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353549
    },
    {
        "content": "<p>my personal opinion is that discussing seems very vague -- at least, for me, I don't have any basis on which to make this call either way</p>",
        "id": 210399173,
        "sender_full_name": "simulacrum",
        "timestamp": 1600353551
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210399169\">said</a>:</p>\n<blockquote>\n<p>(or next friday maybe; I don't remember if we have a steering meeting already scheduled for next friday...)</p>\n</blockquote>\n<p>was thinking the same but there's a planning meeting yeah</p>",
        "id": 210399225,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353578
    },
    {
        "content": "<p>oh next friday is a planning meeting, right</p>",
        "id": 210399235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353583
    },
    {
        "content": "<p>okay we might be able to steal from time from that if necessary</p>",
        "id": 210399268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353599
    },
    {
        "content": "<blockquote>\n<p>Is not a regression, this never worked so it was also discussed if this was P-critical or P-high</p>\n</blockquote>\n<p>If this never worked, I'm not sure this is critical enough to revert the LLVM 11 upgrade.</p>",
        "id": 210399337,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600353613
    },
    {
        "content": "<p>the job <em>in the meantime</em>  should be to brainstorm if we can figure out what data we would need to gather to make the decision</p>",
        "id": 210399369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353628
    },
    {
        "content": "<p>Also, I <em>think</em> this may only affect fat pointers</p>",
        "id": 210399374,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600353629
    },
    {
        "content": "<p>I don't know the details of how we lower things to LLVM types/return values, but this bug only affects things that LLVM considers to be 'multiple return values'</p>",
        "id": 210399426,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600353656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210399337\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Is not a regression, this never worked so it was also discussed if this was P-critical or P-high</p>\n</blockquote>\n<p>If this never worked, I'm not sure this is critical enough to revert the LLVM 11 upgrade.</p>\n</blockquote>\n<p>yeah, my musings about backing out LLVM upgrade is more about <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> 's concerns about how many critical bugs have shown up</p>",
        "id": 210399452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353670
    },
    {
        "content": "<p>which I believe does not include named structs. I don't know how it relates to our tuple types</p>",
        "id": 210399478,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600353681
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> yeah, maybe this is not the best example, but there are more issues</p>",
        "id": 210399479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353681
    },
    {
        "content": "<p>I do actually think that <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a> seems like its \"under control\"</p>",
        "id": 210399513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353698
    },
    {
        "content": "<p>Ok, that makes sense</p>",
        "id": 210399524,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1600353703
    },
    {
        "content": "<p>we may want to see if we can prod the LLVM-devs to review the patch upstream</p>",
        "id": 210399541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353710
    },
    {
        "content": "<p>if only to give us confidence about a backport here.</p>",
        "id": 210399569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353723
    },
    {
        "content": "<p>lets move along</p>",
        "id": 210399604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353731
    },
    {
        "content": "<p>my fear is that if in 2 months 5 critical issues were discovered, how many more there really are that we may hit live</p>",
        "id": 210399620,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353732
    },
    {
        "content": "<p>but I'm just guessing and being conservative in this case</p>",
        "id": 210399671,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353754
    },
    {
        "content": "<p>I guess I feel wary of a big change like backing out LLVM upgrade</p>",
        "id": 210399730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353780
    },
    {
        "content": "<p>that it will cause more disruption than it fixes</p>",
        "id": 210399738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600353785
    },
    {
        "content": "<p>I suspect something we <em>must</em> do before making a decision about a revert is to make a summary of every known bug that we know a revert would <strong>re-inject</strong></p>",
        "id": 210399755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353796
    },
    {
        "content": "<p>(which sort of gets at <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> 's point)</p>",
        "id": 210399779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353811
    },
    {
        "content": "<p>hopefully including performance issues as well as soundness ones...</p>",
        "id": 210399841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353837
    },
    {
        "content": "<p>but okay, lets move along</p>",
        "id": 210399903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353850
    },
    {
        "content": "<ul>\n<li>\"regression: get_unchecked resolves to unstable feature use\" <a href=\"https://github.com/rust-lang/rust/issues/76479\">rust#76479</a><ul>\n<li>This was discussed last week</li>\n<li>Unassigned</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> after hitting the issue on a crater run</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested that is expected breakage (before the MCVE was built)</li>\n<li>Beta regression that started on PR <a href=\"https://github.com/rust-lang/rust/pull/73565\">rust#73565</a> cc <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></li>\n</ul>\n</li>\n</ul>",
        "id": 210399925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210399755\">said</a>:</p>\n<blockquote>\n<p>I suspect something we <em>must</em> do before making a decision about a revert is to make a summary of every known bug that we know a revert would <strong>re-inject</strong></p>\n</blockquote>\n<p>and also a list of the issues that've just shown up as <code>P-critical</code> after release</p>",
        "id": 210399948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353874
    },
    {
        "content": "<p>we did decide what to do about <a href=\"https://github.com/rust-lang/rust/issues/76479\">#76479</a> last week, didn't we?</p>",
        "id": 210399972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353886
    },
    {
        "content": "<p>what I can clearly tell is that after last meeting nothing new has happened</p>",
        "id": 210400062,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353932
    },
    {
        "content": "<p>to at least alpha-rename the new method?</p>",
        "id": 210400067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353935
    },
    {
        "content": "<p>(to something harder to hit)</p>",
        "id": 210400094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353950
    },
    {
        "content": "<p>I'm trying to remember if we were proposing something more robust than that in the end ...</p>",
        "id": 210400119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600353963
    },
    {
        "content": "<p>yes, I remember that</p>",
        "id": 210400120,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210400062\">said</a>:</p>\n<blockquote>\n<p>what I can clearly tell is that after last meeting nothing new has happened</p>\n</blockquote>\n<p>I meant, that I don't think there's much to discuss given there are no news</p>",
        "id": 210400192,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600353983
    },
    {
        "content": "<p>found it: <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-10.20.2354818/near/209659769\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-10.20.2354818/near/209659769</a></p>",
        "id": 210400265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354020
    },
    {
        "content": "<p>I know I've skipped lang team meetings ( dealing with child care and job search stuff at moment)</p>",
        "id": 210400310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354045
    },
    {
        "content": "<p>so I myself didn't bring it up there</p>",
        "id": 210400322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354051
    },
    {
        "content": "<p>but renaming method to something more obscure was what we settled on as short term fix</p>",
        "id": 210400368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354071
    },
    {
        "content": "<p>I'll assume <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> doesn't have time. It seems like something straight-forward, i.e. good for mentorship</p>",
        "id": 210400457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354102
    },
    {
        "content": "<p>So I'll see about writing up an issue with mentorship instructions, see if that gets us anywhere?</p>",
        "id": 210400531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354139
    },
    {
        "content": "<p>lets keep going thnen</p>",
        "id": 210400550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354147
    },
    {
        "content": "<p>(oh and I'll self-assign to do those instructions)</p>",
        "id": 210400573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354160
    },
    {
        "content": "<ul>\n<li>\"starting from nightly-2020-08-18 rustls can't connect to some websites\" <a href=\"https://github.com/rust-lang/rust/issues/76803\">rust#76803</a><ul>\n<li>Unassigned</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"321021\">@Paolo Barbolini</span></li>\n<li>Beta regression that started on PR <a href=\"https://github.com/rust-lang/rust/pull/74748\">rust#74748</a> cc <span class=\"user-mention\" data-user-id=\"139182\">@Simon Vandel Sillesen</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76803#issuecomment-693999586\">Mir optimization bug</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/76837\">Has a PR to disable the optimization</a> by @<strong>wesleywiser</strong></li>\n</ul>\n</li>\n</ul>",
        "id": 210400635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354190
    },
    {
        "content": "<p>wow</p>",
        "id": 210400673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354203
    },
    {
        "content": "<p>well sounds like its being handled by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 210400732,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354217
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>\"btree_map::OccupiedEntry: Send regression\" <a href=\"https://github.com/rust-lang/rust/issues/76686\">rust#76686</a><ul>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></li>\n<li>Nightly regression</li>\n<li>Regressed on <a href=\"https://github.com/rust-lang/rust/pull/74437\">rust#74437</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/76722\">Has a PR</a> opened by <span class=\"user-mention\" data-user-id=\"257813\">@Stein Somers</span></li>\n</ul>\n</li>\n</ul>",
        "id": 210400752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354227
    },
    {
        "content": "<p>sounds under control too</p>",
        "id": 210400764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354236
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 210400775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354241
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+P-high+no%3Aassignee\">Beta regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 210400789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354250
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly+P-high+no%3Aassignee\">Nightly regressions</a></p>",
        "id": 210400808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354259
    },
    {
        "content": "<ul>\n<li>\"Linker error with wasm target with spaces in install path\" <a href=\"https://github.com/rust-lang/rust/issues/76466\">rust#76466</a><ul>\n<li>Unassigned</li>\n<li>Reported by <span class=\"user-mention\" data-user-id=\"198951\">@Jordan Miner</span> </li>\n<li>Nightly regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">Probably an LLVM 11 regression</a></li>\n<li>Reporter ran into the issues on a <strong>Win10 64bit</strong> and suggests a possible range of <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-688686973\">culprit commits</a> </li>\n<li><span class=\"user-mention\" data-user-id=\"218378\">@Mason Stallmo</span> could not reproduce on both Windows or Linux 64bit, therefore suggests a possible <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-693805846\">Windows 32bit only regression</a></li>\n</ul>\n</li>\n</ul>",
        "id": 210400837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354271
    },
    {
        "content": "<p>hmm yet another LLVM 11 issue (maybe)</p>",
        "id": 210400875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354291
    },
    {
        "content": "<p>not tagged with the LLVM ice breakers though?</p>",
        "id": 210401009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354330
    },
    {
        "content": "<p>(because windows ice breakers is more focused? not sure.)</p>",
        "id": 210401061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354356
    },
    {
        "content": "<p>lets keep going</p>",
        "id": 210401083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354363
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>Triage done by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> .<br>\nRevision range: <a href=\"https://perf.rust-lang.org/index.html?start=35fc8359868e65a0970094f648ba87fce634e8c7&amp;end=a53f449516f23486d2dfd4e5685d4e869e8591d9&amp;absolute=false&amp;stat=instructions%3Au\">35fc8359868e65a0970094f648ba87fce634e8c7..a53f449516f23486d2dfd4e5685d4e869e8591d9</a></p>\n<p>0 Regressions, 2 Improvements, 0 of them in rollups.</p>",
        "id": 210401107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354371
    },
    {
        "content": "<h4>Regressions</h4>\n<p>No regressions noted.</p>",
        "id": 210401121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354379
    },
    {
        "content": "<p>I've pinged windows first but yeah, may worth at some point to ping llvm crew too</p>",
        "id": 210401122,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600354379
    },
    {
        "content": "<h4>Improvements</h4>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73971\">BTreeMap mutable iterators should not take any reference to visited nodes during iteration #73971</a></p>\n<ul>\n<li>A ~1.4% improvement on token-stream-stress check in <a href=\"https://perf.rust-lang.org/compare.html?start=b4bdc07ff5a70175dbcdff7331c557245ddb012f&amp;end=d92155bf6ae0b7d79fc83cbeeb0cc0c765353471\">instruction counts</a></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/pull/74595\">make <code>ConstEvaluatable</code> more strict #74595</a></p>\n<ul>\n<li>Improvement of up to 2% in <a href=\"https://perf.rust-lang.org/compare.html?start=d92155bf6ae0b7d79fc83cbeeb0cc0c765353471&amp;end=e2be5f568d1f60365b825530f5b5cb722460591b\">instruction counts</a></li>\n</ul>",
        "id": 210401144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354389
    },
    {
        "content": "<p>wow</p>",
        "id": 210401156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354395
    },
    {
        "content": "<p>very cool</p>",
        "id": 210401164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354399
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>None</p>",
        "id": 210401184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354407
    },
    {
        "content": "<p>we noted last night that there's actually a regression, <a href=\"https://perf.rust-lang.org/compare.html?start=a055c5a1bd95e029e9b31891db63b6dc8258b472&amp;end=7402a394471a6738a40fea7d4f1891666e5a80c5&amp;stat=wall-time\">https://perf.rust-lang.org/compare.html?start=a055c5a1bd95e029e9b31891db63b6dc8258b472&amp;end=7402a394471a6738a40fea7d4f1891666e5a80c5&amp;stat=wall-time</a></p>",
        "id": 210401192,
        "sender_full_name": "simulacrum",
        "timestamp": 1600354411
    },
    {
        "content": "<p>I've yet to follow-up, been busy this morning</p>",
        "id": 210401213,
        "sender_full_name": "simulacrum",
        "timestamp": 1600354421
    },
    {
        "content": "<p>hmm</p>",
        "id": 210401215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354421
    },
    {
        "content": "<p>okay</p>",
        "id": 210401219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354423
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 210401226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354427
    },
    {
        "content": "<p>but an interesting case of \"wall times are not matching instructions\"</p>",
        "id": 210401231,
        "sender_full_name": "simulacrum",
        "timestamp": 1600354430
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/2959\">RFC #2959</a> almost ready for approval<ul>\n<li><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> <a href=\"https://github.com/rust-lang/rfcs/pull/2959#issuecomment-693293223\">suggests</a> only one unresolved question (about stack probes) doesn't need to block the bump to FCP and can be later added to the RFC process policy</li>\n</ul>\n</li>\n</ul>",
        "id": 210401255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354440
    },
    {
        "content": "<p>(this is \" RFC: Promote aarch64-unknown-linux-gnu to a Tier-1 Rust target\" <a href=\"https://github.com/rust-lang/rust/issues/2959\">#2959</a> )</p>",
        "id": 210401327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354460
    },
    {
        "content": "<p>this is nominated because we need to keep our eye on it, decide what to do?</p>",
        "id": 210401416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354511
    },
    {
        "content": "<p>i.e. decide when to actually suggest fcp merge?</p>",
        "id": 210401446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354526
    },
    {
        "content": "<p>hey</p>",
        "id": 210401573,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600354565
    },
    {
        "content": "<p>like, whether to block the FCP or not is something y'all should decide</p>",
        "id": 210401636,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600354596
    },
    {
        "content": "<p>I guess we could just open the FCP and any of you can add a concern</p>",
        "id": 210401657,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600354606
    },
    {
        "content": "<p>yes I think that is best</p>",
        "id": 210401673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354613
    },
    {
        "content": "<p>I would be ready to move to FCP</p>",
        "id": 210401681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1600354614
    },
    {
        "content": "<p>lets keep going</p>",
        "id": 210401682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354614
    },
    {
        "content": "<ul>\n<li>\"Re-enable debug and LLVM assertions\" <a href=\"https://github.com/rust-lang/rust/pull/75199\">rust#75199</a><br>\n    - Opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and assigned to <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span><br>\n    - Helps with <a href=\"https://github.com/rust-lang/rust/issues/59637\">rust#59637</a> but doesn't close it, macOS still has asserts off<br>\n    - \"We hit a similar looking bug in <a href=\"https://github.com/rust-lang/rust/pull/75380\">rust#75380</a></li>\n</ul>",
        "id": 210401723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354630
    },
    {
        "content": "<p>this is looking for help from t-compiler, doesn't need discussion sync though</p>",
        "id": 210401759,
        "sender_full_name": "simulacrum",
        "timestamp": 1600354646
    },
    {
        "content": "<p>okay. so just looking for help</p>",
        "id": 210401781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354655
    },
    {
        "content": "<p>lets keep going</p>",
        "id": 210401797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354663
    },
    {
        "content": "<p>(probably need a decidated section for \"looking for help!!!\")</p>",
        "id": 210401817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354674
    },
    {
        "content": "<ul>\n<li>\"diagnostics: \"one type is more general\" for two identical types?\" <a href=\"https://github.com/rust-lang/rust/issues/75791\">rust#75791</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span> and assigned to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> </li>\n<li>Confusing diagnostics suggestion</li>\n<li><code>P-high</code> stable regression, duplicate of <a href=\"https://github.com/rust-lang/rust/issues/74400\">rust#74400</a></li>\n<li>Nominated to ensure we circle back around to it this week if progress isn't made</li>\n</ul>\n</li>\n</ul>",
        "id": 210401890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354689
    },
    {
        "content": "<p>I take it progress wasn't made?</p>",
        "id": 210401937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354710
    },
    {
        "content": "<p>I had a mitigation change, but didn't post the pr</p>",
        "id": 210401988,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600354728
    },
    {
        "content": "<p>Wanted to make something better but lacked the time</p>",
        "id": 210402033,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600354742
    },
    {
        "content": "<p>okay</p>",
        "id": 210402071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354759
    },
    {
        "content": "<p>but you do have something?</p>",
        "id": 210402130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354779
    },
    {
        "content": "<p>I'm happy to move along in that case</p>",
        "id": 210402160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354797
    },
    {
        "content": "<p>If we're ok with something along the lines of this <a href=\"https://github.com/rust-lang/rust/issues/75791#issuecomment-686842188\">https://github.com/rust-lang/rust/issues/75791#issuecomment-686842188</a> in stable, I can get that up quickly</p>",
        "id": 210402162,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600354798
    },
    {
        "content": "<p>hmm</p>",
        "id": 210402238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354816
    },
    {
        "content": "<p>It's not ideal, but again, a mitigation that mentions the lifetimes</p>",
        "id": 210402239,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600354816
    },
    {
        "content": "<p>The ticket would remain open, imo</p>",
        "id": 210402254,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600354825
    },
    {
        "content": "<p>yeah, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> any thoughts on thaT?</p>",
        "id": 210402276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354835
    },
    {
        "content": "<p>I think we're willing to live with <code>'1</code> and <code>'2</code> in the output</p>",
        "id": 210402340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354857
    },
    {
        "content": "<p>if it helps people get some <em>hint</em> as to what's going on</p>",
        "id": 210402360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354865
    },
    {
        "content": "<ul>\n<li>\"Widen TypeId from 64 bits to 128.\" <a href=\"https://github.com/rust-lang/rust/pull/75923\">rust#75923</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/75923#issuecomment-684051064\">nominated it to talk about <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>'s concern wrt to typeid stabilization; it might be a T-lang question too</a>.</li>\n</ul>\n</li>\n</ul>",
        "id": 210402417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354896
    },
    {
        "content": "<p>(actually lets leave this for another meeting, we're already over time)</p>",
        "id": 210402453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354913
    },
    {
        "content": "<p>we already discussed <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a> above I think</p>",
        "id": 210402564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354949
    },
    {
        "content": "<p>finally</p>",
        "id": 210402596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354967
    },
    {
        "content": "<ul>\n<li>\"Macro hygiene change breaks Firefox builds.\" <a href=\"https://github.com/rust-lang/rust/issues/76480\">rust#76480</a><ul>\n<li>Breaking change</li>\n<li>Nominated for discussion about how can we do better here</li>\n<li>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n</ul>\n</li>\n</ul>",
        "id": 210402600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354968
    },
    {
        "content": "<p>hmm</p>",
        "id": 210402614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354974
    },
    {
        "content": "<p>don't really have time for that either I think</p>",
        "id": 210402643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354984
    },
    {
        "content": "<p>but maybe another \"need help\" case anyway, not ready for sync discussion?</p>",
        "id": 210402672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600354998
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No nominated issues for <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 210402714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355016
    },
    {
        "content": "<p>okay so that's everything</p>",
        "id": 210402722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355020
    },
    {
        "content": "<p>Yeah, the position is \"this is expected regression\", but we should have team sign off on that</p>",
        "id": 210402754,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1600355032
    },
    {
        "content": "<p>We obviously left a few nominated issues undiscussed</p>",
        "id": 210402757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355034
    },
    {
        "content": "<p>seems like a notice regarding <a href=\"https://github.com/rust-lang/rust/issues/76480\">#76480</a> is most realistic outcome?</p>",
        "id": 210402925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355117
    },
    {
        "content": "<p>ah but its already in release notes? Need to check that</p>",
        "id": 210403210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355233
    },
    {
        "content": "<p>i.e. look if its solely that PR is mentioned, or if known expected breakage is also mentioned.</p>",
        "id": 210403255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355253
    },
    {
        "content": "<p>(release notes are <a href=\"https://github.com/rust-lang/rust/issues/76101\">#76101</a>)</p>",
        "id": 210403289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355269
    },
    {
        "content": "<p>Unfortunately, a compiler warning would be extremely difficult to implement</p>",
        "id": 210403302,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600355274
    },
    {
        "content": "<p>if you mean a mention in the release notes, that sounds like a good idea</p>",
        "id": 210403321,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1600355282
    },
    {
        "content": "<p>yeah, that's all I meant by notice</p>",
        "id": 210403376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355296
    },
    {
        "content": "<p>I understand a warning cycle is not tenable here</p>",
        "id": 210403384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355301
    },
    {
        "content": "<p>okay I need to go. THank  you to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 210403447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1600355327
    },
    {
        "content": "<p>next week we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> and <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span></p>",
        "id": 210403624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600355405
    },
    {
        "content": "<p>I can provide the one about prioritization, would like to discuss with <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if it's worth to continue doing a checkin given that things has settled</p>",
        "id": 210403722,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600355437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> can any of you provide a checkin for <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> ?</p>",
        "id": 210403790,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600355463
    },
    {
        "content": "<p>next week's agenda will live here <a href=\"https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?both\">https://hackmd.io/rtJNgRt3Sz2N5jX8c2-m3A?both</a></p>",
        "id": 210403834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600355483
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ,</p>\n<p>I am no longer working on rfc-2229. But the work is carried on by others. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> would be able to update.</p>",
        "id": 210404114,
        "sender_full_name": "blitzerr",
        "timestamp": 1600355606
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210403790\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <span class=\"user-mention silent\" data-user-id=\"128294\">blitzerr</span> can any of you provide a checkin for <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> ?</p>\n</blockquote>\n<p>Feel free to ping me for 2229, going forward :)</p>",
        "id": 210418946,
        "sender_full_name": "Aman Arora",
        "timestamp": 1600362220
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281950\">Aman Arora</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210418946\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210403790\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <span class=\"user-mention silent\" data-user-id=\"128294\">blitzerr</span> can any of you provide a checkin for <span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span> ?</p>\n</blockquote>\n<p>Feel free to ping me for 2229, going forward :)</p>\n</blockquote>\n<p>do you want to provide a PR for compiler-team adding you and maybe removing <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> ?</p>",
        "id": 210419095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600362274
    },
    {
        "content": "<p>or a PR in general updating the group would be nice</p>",
        "id": 210419116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600362289
    },
    {
        "content": "<p>Can you point me to where this is, I can do that. I thought when we started the project , the rust-lang/team repo was updated<br>\n<a href=\"https://github.com/rust-lang/team/pull/354/files\">https://github.com/rust-lang/team/pull/354/files</a></p>",
        "id": 210419337,
        "sender_full_name": "Aman Arora",
        "timestamp": 1600362382
    },
    {
        "content": "<p>in the <a href=\"https://github.com/rust-lang/compiler-team/blob/master/content/working-groups/rfc-2229/_index.md\">compiler-team repo, here</a></p>",
        "id": 210419922,
        "sender_full_name": "lqd",
        "timestamp": 1600362627
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 210420638,
        "sender_full_name": "Aman Arora",
        "timestamp": 1600362931
    },
    {
        "content": "<p>there are some groups that are pointing directly to the corresponding file on the team repo</p>",
        "id": 210420965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600363075
    },
    {
        "content": "<p>maybe we should make a PR that modifies all the groups to do that</p>",
        "id": 210421022,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1600363087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-09-17.20.2354818/near/210421022\">said</a>:</p>\n<blockquote>\n<p>maybe we should make a PR that modifies all the groups to do that</p>\n</blockquote>\n<p>From what I understand the governance page for compiler team renders the team repo, might just be easier to point there</p>\n<p>nvm, they don't have labels to each grp to hyperlink there.</p>",
        "id": 210421199,
        "sender_full_name": "Aman Arora",
        "timestamp": 1600363166
    },
    {
        "content": "<p>apropos, one more small thing. when we prepare the compiler team agenda we look at the WG checkins of the week and ping people in various WG groups.<br>\nSometimes I get the feeling that some of these pages might not be updated<br>\n<a href=\"https://rust-lang.github.io/compiler-team/#meeting-calendar\">https://rust-lang.github.io/compiler-team/#meeting-calendar</a></p>",
        "id": 210422927,
        "sender_full_name": "apiraino",
        "timestamp": 1600363923
    },
    {
        "content": "<p>I'm offering a bit of my time to help update them (in case this is something useful)</p>",
        "id": 210423018,
        "sender_full_name": "apiraino",
        "timestamp": 1600363952
    }
]