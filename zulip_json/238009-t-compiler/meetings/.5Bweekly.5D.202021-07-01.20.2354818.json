[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h50<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/zhv96UdPQI-HI9BlW0XuTw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>  by <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span>  , <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 244555412,
        "sender_full_name": "apiraino",
        "timestamp": 1625141324
    },
    {
        "content": "<p>Added wg-rls2.0 checkin. I won't participate in the meeting proper -- have another meeting at the same time!</p>",
        "id": 244567682,
        "sender_full_name": "matklad",
        "timestamp": 1625146998
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! We’re starting the triage meeting now; add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re present.</p>",
        "id": 244570644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148089
    },
    {
        "content": "<p>Oh nuts, looking at the schedule, I must have been confused last week</p>",
        "id": 244570776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148141
    },
    {
        "content": "<p>our first announcement is that tomorrow is our planning meeting, but I had planned for us to have a follow-up to last week’s retrospective</p>",
        "id": 244570835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148166
    },
    {
        "content": "<p>Well, you know what: This is for the best! We don’t need the full hour for either of those topics (especially if there aren’t many/any steering meeting proposals).</p>",
        "id": 244570920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148194
    },
    {
        "content": "<p>So, yeah: Steering meeting tomorrow. If there are any new proposals by tomorrow, we’ll schedule them. And either way, after any such scheduling, we’ll do followup to last week’s meeting.</p>",
        "id": 244571075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148250
    },
    {
        "content": "<h2>MCPs/FCP</h2>",
        "id": 244571112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148264
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a></li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a></li>\n<li>\"Encode spans relative to the enclosing item\" <a href=\"https://github.com/rust-lang/compiler-team/issues/443\">compiler-team#443</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244571150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148283
    },
    {
        "content": "<p>Are we done with announcements? I had one</p>",
        "id": 244571164,
        "sender_full_name": "rylev",
        "timestamp": 1625148293
    },
    {
        "content": "<p>We aren’t done with announcements; I just mix in the MCPs/FCPs</p>",
        "id": 244571217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148313
    },
    {
        "content": "<p>since they are in the announcements section</p>",
        "id": 244571239,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148320
    },
    {
        "content": "<p>Oh, but teh point is, Go ahead and make your announcement, <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span></p>",
        "id": 244571282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148336
    },
    {
        "content": "<p>(its not a big deal for the MCPs/FCP to be fragmented)</p>",
        "id": 244571332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148357
    },
    {
        "content": "<p>The perf team is changing the compiler perf process to help make tracking compiler performance regressions easier. These are the changes made so far, and how they might impact you:</p>\n<ul>\n<li>The perf bot now attempts to categorize perf runs as \"improvement\", \"regression\", \"mixed\", or no category at all (i.e., perf did not significantly change), and it includes this in the summary section of the comment posted to the PR. <ul>\n<li><strong>What you should do</strong>: This is meant as an _aid_ when analyzing perf runs. Please continue to check the perf output and see if your interpretation matches the categorization. If it does not, file an issue in rust-lang/rustc-perf.</li>\n</ul>\n</li>\n<li>The perf bot also adds the GitHub label <code>perf-regression</code> if the run is categorized as a regression or mixed. It removes this label if the performance run yields no changes or perf improvements. This means if you make changes that improve the perf of your PR, it will automatically remove the regression label.<ul>\n<li><strong>What you should do</strong>: Not all PRs labeled as <code>perf-regressions</code> need to have their performance regressions fixed. Regressions can be acceptable (e.g., for bug fixes). However, if you believe the regression is justified, please leave a short comment as to why and add the label <code>perf-regression-justified</code>. (note: <a href=\"https://github.com/rust-lang/rust/pull/86779\">https://github.com/rust-lang/rust/pull/86779</a> must land first before this is possible for everyone)</li>\n</ul>\n</li>\n<li>Soon the perf team will change the perf triage process to include tracking of these labels to ensure that every performance regression is either fixed or has a written justification. </li>\n</ul>\n<p>This is just the beginning of perf process improvements. If you'd like to discuss the future of the compiler performance process, drop by <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> .</p>",
        "id": 244571370,
        "sender_full_name": "rylev",
        "timestamp": 1625148363
    },
    {
        "content": "<p>This is really awesome! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 244571501,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1625148408
    },
    {
        "content": "<p>I assume the bot’s actions on the labels is driven by the most recent performance run, and pushing new commits does not invalidate the results?</p>",
        "id": 244571566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148431
    },
    {
        "content": "<p>(One can easily debate whether pushing new commits <em>should</em> invalidate the results)</p>",
        "id": 244571616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148450
    },
    {
        "content": "<blockquote>\n<p>[the bot] removes this label if the performance run yields no changes or perf improvements. This means if you make changes that improve the perf of your PR, it will automatically remove the regression label.</p>\n</blockquote>",
        "id": 244571662,
        "sender_full_name": "rylev",
        "timestamp": 1625148473
    },
    {
        "content": "<p>Right, but we don’t do perf runs automatically, right?</p>",
        "id": 244571742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148488
    },
    {
        "content": "<p>No, they are still manually enqueued like before</p>",
        "id": 244571778,
        "sender_full_name": "rylev",
        "timestamp": 1625148504
    },
    {
        "content": "<p>so if I push more commits, but don’t request a follow up run, then the most recent label stays, right?</p>",
        "id": 244571784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148506
    },
    {
        "content": "<p>Correct</p>",
        "id": 244571802,
        "sender_full_name": "rylev",
        "timestamp": 1625148514
    },
    {
        "content": "<p>Okay. I’m not terribly worried about the labels going stale</p>",
        "id": 244571826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148526
    },
    {
        "content": "<p>But someone will come knocking and ask for a justification for the regression.</p>",
        "id": 244571848,
        "sender_full_name": "rylev",
        "timestamp": 1625148538
    },
    {
        "content": "<p>Right. Humans will always be in the loop</p>",
        "id": 244571874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148548
    },
    {
        "content": "<p>This is super cool, great exciting work</p>",
        "id": 244571897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148555
    },
    {
        "content": "<h2>MCPs/FCP continued</h2>",
        "id": 244571950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148574
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look <span aria-label=\"point right\" class=\"emoji emoji-1f449\" role=\"img\" title=\"point right\">:point_right:</span> <strong>NEW</strong>: testing age timestamps)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a> (last comment: 6 months ago)</li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comment: 5 months ago)</li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a> (last comment: +3 months ago)</li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a> (last comment: 20 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 244571967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148583
    },
    {
        "content": "<p>(Thank you <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> for the new “last comment” info)</p>",
        "id": 244572021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148600
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244571370\">said</a>:</p>\n<blockquote>\n<p>The perf team is changing the compiler perf process to help make tracking compiler performance regressions easier. These are the changes made so far, and how they might impact you:</p>\n<ul>\n<li>The perf bot now attempts to categorize perf runs as \"improvement\", \"regression\", \"mixed\", or no category at all (i.e., perf did not significantly change), and it includes this in the summary section of the comment posted to the PR. <ul>\n<li><strong>What you should do</strong>: This is meant as an _aid_ when analyzing perf runs. Please continue to check the perf output and see if your interpretation matches the categorization. If it does not, file an issue in rust-lang/rustc-perf.</li>\n</ul>\n</li>\n<li>The perf bot also adds the GitHub label <code>perf-regression</code> if the run is categorized as a regression or mixed. It removes this label if the performance run yields no changes or perf improvements. This means if you make changes that improve the perf of your PR, it will automatically remove the regression label.<ul>\n<li><strong>What you should do</strong>: Not all PRs labeled as <code>perf-regressions</code> need to have their performance regressions fixed. Regressions can be acceptable (e.g., for bug fixes). However, if you believe the regression is justified, please leave a short comment as to why and add the label <code>perf-regression-justified</code>. (note: <a href=\"https://github.com/rust-lang/rust/pull/86779\">https://github.com/rust-lang/rust/pull/86779</a> must land first before this is possible for everyone)</li>\n</ul>\n</li>\n<li>Soon the perf team will change the perf triage process to include tracking of these labels to ensure that every performance regression is either fixed or has a written justification. </li>\n</ul>\n<p>This is just the beginning of perf process improvements. If you'd like to discuss the future of the compiler performance process, drop by <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> .</p>\n</blockquote>\n<p>how does the bot attempt to categorize things? based on what exactly?</p>",
        "id": 244572075,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148607
    },
    {
        "content": "<p>I meant, wondering about is there is some heuristic or just everything is better then perf-improvement, everything is worser then perf-regression otherwise mixed or there's some kind of threshold or something</p>",
        "id": 244572247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> are you asking e.g. if the category is based solely on the latest summary value?</p>",
        "id": 244572278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148688
    },
    {
        "content": "<p>not sure what is the latest summary value :)</p>",
        "id": 244572346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148722
    },
    {
        "content": "<p>(no that cannot be  right; for “mixed” you need to observe multiple values)</p>",
        "id": 244572394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148726
    },
    {
        "content": "<p>we look at individual metrics</p>",
        "id": 244572425,
        "sender_full_name": "simulacrum",
        "timestamp": 1625148735
    },
    {
        "content": "<p>By “latest summary value” I meant the right-most point on the “summary” graphs on <a href=\"https://perf.rust-lang.org/\">https://perf.rust-lang.org/</a></p>",
        "id": 244572454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148746
    },
    {
        "content": "<p>e.g., if one benchmark improved, and a different one regressed, then it's mixed</p>",
        "id": 244572462,
        "sender_full_name": "simulacrum",
        "timestamp": 1625148752
    },
    {
        "content": "<p>It's the same \"algorithm\" used for triage reports.</p>",
        "id": 244572478,
        "sender_full_name": "rylev",
        "timestamp": 1625148760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244572394\">said</a>:</p>\n<blockquote>\n<p>(no that cannot be  right; for “mixed” you need to observe multiple values)</p>\n</blockquote>\n<p>right, I was guessing that it looks at all the benchmarks that we have</p>",
        "id": 244572502,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148768
    },
    {
        "content": "<p>I'd love to improve this as well. We might find it useful to be more fine grained. I'm unsure...</p>",
        "id": 244572580,
        "sender_full_name": "rylev",
        "timestamp": 1625148802
    },
    {
        "content": "<p>Right, with some threshold for when a change is considered significant.</p>",
        "id": 244572598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244572462\">said</a>:</p>\n<blockquote>\n<p>e.g., if one benchmark improved, and a different one regressed, then it's mixed</p>\n</blockquote>\n<p>yeah, this is what I was thinking about + I guess you use some kind of threshold, like 0.001 improvement is not an improvement</p>",
        "id": 244572630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148822
    },
    {
        "content": "<p>(I’ve been reading benchmarking methodology papers recently)</p>",
        "id": 244572637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148826
    },
    {
        "content": "<p>anyway, didn't want to disturb the flow of the meeting, we can continue on a different topic</p>",
        "id": 244572669,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625148839
    },
    {
        "content": "<p>we're definitely looking to see folks opinions -- file issues eagerly if it looks wrong</p>",
        "id": 244572719,
        "sender_full_name": "simulacrum",
        "timestamp": 1625148847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244572637\">said</a>:</p>\n<blockquote>\n<p>(I’ve been reading benchmarking methodology papers recently)</p>\n</blockquote>\n<p>Feel free to share anything that you've found to be useful <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 244572725,
        "sender_full_name": "rylev",
        "timestamp": 1625148853
    },
    {
        "content": "<p>There’s definitely a lot of prior art in this space, and in case it isn’t clear, we definitely haven’t developed something state of the art yet</p>",
        "id": 244572762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">rylev</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244572725\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244572637\">said</a>:</p>\n<blockquote>\n<p>(I’ve been reading benchmarking methodology papers recently)</p>\n</blockquote>\n<p>Feel free to share anything that you've found to be useful <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>\n</blockquote>\n<p>I’ve been working my way through the list given here: <a href=\"https://felleisen.org/matthias/7480-s21/lectures.html#(part._21)\">https://felleisen.org/matthias/7480-s21/lectures.html#(part._21)</a></p>",
        "id": 244572998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148962
    },
    {
        "content": "<p>I’ll share more when I think I’m in a better space to evaluate</p>",
        "id": 244573110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625148990
    },
    {
        "content": "<p>okay so</p>\n<h2>MCPs/FCP continued</h2>",
        "id": 244573142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149001
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244573166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149015
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n<li>\"Merge rustc_codegen_gcc backend as compiler/rustc_codegen_gcc\" <a href=\"https://github.com/rust-lang/compiler-team/issues/442\">compiler-team#442</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244573178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149021
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Allow changing the bug report url for the ice hook\" <a href=\"https://github.com/rust-lang/compiler-team/issues/436\">compiler-team#436</a></li>\n<li>\"Transfer on-disk hash table implementation (odht crate) to rust-lang org\" <a href=\"https://github.com/rust-lang/compiler-team/issues/438\">compiler-team#438</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244573199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149029
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Tracking issue for <code>ops::Bound::cloned()</code>\" <a href=\"https://github.com/rust-lang/rust/issues/61356\">rust#61356</a></li>\n<li>\"Support forwarding caller location through trait object method call\" <a href=\"https://github.com/rust-lang/rust/pull/81360\">rust#81360</a></li>\n<li>\"Ignore derived Clone and Debug implementations during dead code analysis\" <a href=\"https://github.com/rust-lang/rust/pull/85200\">rust#85200</a></li>\n<li>\"When using <code>process::Command</code> on Windows, environment variable names must be case-preserving but case-insensitive\" <a href=\"https://github.com/rust-lang/rust/pull/85270\">rust#85270</a></li>\n<li>\"Redefine <code>ErrorKind::Other</code> and stop using it in std.\" <a href=\"https://github.com/rust-lang/rust/pull/85746\">rust#85746</a></li>\n<li>\"Stabilize span_open() and span_close().\" <a href=\"https://github.com/rust-lang/rust/pull/86136\">rust#86136</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244573212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149038
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 244573248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149059
    },
    {
        "content": "<p>@<em>wg-rfc-2229</em> by @nikomatsakis, @matthewjasper</p>\n<blockquote>\n<ul>\n<li>Feature is now enabled by default and lint is now part of the edition lint</li>\n<li>PR approved for -Zprofile-closures which dumps the closure size before and after the feature. This would generate a CSV which can be imported in the <a href=\"https://docs.google.com/spreadsheets/d/1WUKERwkpJkYhQ-rt0aTQqg-7kcupC7pwKsgxk8v54qc/edit?usp=sharing\">first sheet here</a></li>\n<li>Based on profile of rustc we made an optimization to reduce the sizes of closures which seems to be effective. PR <a href=\"https://github.com/rust-lang/rust/pull/86701\">#86701</a> is open right now and has more details.</li>\n</ul>\n</blockquote>",
        "id": 244573262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149065
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>:</p>\n<blockquote>\n<p>Steering issues covered by this checkin: </p>\n<ul>\n<li><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8486\">https://github.com/rust-analyzer/rust-analyzer/issues/8486</a></li>\n<li><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8972\">https://github.com/rust-analyzer/rust-analyzer/issues/8972</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Highlights:</p>\n<ul>\n<li>rust-analyzer now expands attribute-like proc macros.</li>\n<li>We started a conversation with the core team about moving rust-analyzer to the rust-lang project.<br>\n  Theres little actual progress though, still waiting for the kickoff meeting to get scheduled. </li>\n<li>We started groundwork to improve code completion quality: added reliable preformance tests, fixed three O(N^2) algorithms, added regression tests for irrelevant completion.</li>\n<li>We are making good progress on fixing all false errors: <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8961\">https://github.com/rust-analyzer/rust-analyzer/issues/8961</a><br>\n  In general, rust-analyzer now supports most of Rust.</li>\n<li>We are tentatively thinking about designing the \"final\" API that the compiler exposes for the IDE:<br>\n<a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/8713\">https://github.com/rust-analyzer/rust-analyzer/issues/8713</a></li>\n</ul>\n</blockquote>",
        "id": 244573290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149075
    },
    {
        "content": "<p>Okay lets move along to </p>\n<h2>Backport Nominations</h2>",
        "id": 244573462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149134
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 244573478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149141
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>",
        "id": 244573499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149153
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>",
        "id": 244573543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149168
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Revert \"List trait impls before methods from deref in the sidebar ...\"\" <a href=\"https://github.com/rust-lang/rust/pull/86564\">rust#86564</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"315412\">@jsha</span> </li>\n<li>beta-backport since it affects the sidebar display of methods in stdlib docs, substantial impact on people's doc-reading experience if it lands in stable.</li>\n<li>reverts commit <a href=\"https://github.com/rust-lang/rust/commit/8a058926ecd6d0988714f8f7a5a31293c533f8c6\">8a05892</a> and fixes <a href=\"https://github.com/rust-lang/rust/issues/85618\">#85618</a></li>\n<li>r'ed by <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></li>\n</ul>\n</li>\n</ul>",
        "id": 244573568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244573499\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs-impl\">T-libs-impl stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs-impl\">T-libs-impl beta</a></p>\n<ul>\n<li>No backport nominations for <code>T-libs-impl</code> this time.</li>\n</ul>\n</blockquote>\n<p><code>T-libs-impl</code> no longer exists, so you can probably drop this part of the procedure</p>",
        "id": 244573643,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625149204
    },
    {
        "content": "<p>Ah yes, and the new <code>T-libs</code> is going to be owning backports going forward, yes?</p>",
        "id": 244573720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149232
    },
    {
        "content": "<p>yes <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span> there's a PR on triagebot for that update :)<br>\nedit: <a href=\"https://github.com/rust-lang/triagebot/pull/1405\">merged</a></p>",
        "id": 244573723,
        "sender_full_name": "apiraino",
        "timestamp": 1625149234
    },
    {
        "content": "<p>I guess all these sections about T-libs should be removed from the agenda</p>",
        "id": 244573872,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625149302
    },
    {
        "content": "<p>but I guess we need to check with T-libs team</p>",
        "id": 244573893,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1625149311
    },
    {
        "content": "<p>regarding <a href=\"https://github.com/rust-lang/rust/issues/86564\">rust#86564</a></p>",
        "id": 244573900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149314
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244573720\">said</a>:</p>\n<blockquote>\n<p>Ah yes, and the new <code>T-libs</code> is going to be owning backports going forward, yes?</p>\n</blockquote>\n<p>I'm not entirely sure, but that's my impression, yes</p>",
        "id": 244573906,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625149316
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86564\">rust#86564</a> said it was to close <a href=\"https://github.com/rust-lang/rust/issues/83133\">#83133</a></p>",
        "id": 244574000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149336
    },
    {
        "content": "<p>from my skimming of the situation, it seems like <a href=\"https://github.com/rust-lang/rust/issues/86564\">rust#86564</a> went too far, in terms of what <a href=\"https://github.com/rust-lang/rust/issues/83133\">#83133</a> was asking for. Is that correct?</p>",
        "id": 244574057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149362
    },
    {
        "content": "<p>namely: <a href=\"https://github.com/rust-lang/rust/issues/86564\">rust#86564</a> reordered the presentation of distinct lists of methods, while all <a href=\"https://github.com/rust-lang/rust/issues/83133\">#83133</a> was saying was that we could/should go back to dropping a certain section when it is empty.</p>",
        "id": 244574129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149393
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> here? Can they, or someone else from <span class=\"user-group-mention\" data-user-group-id=\"3925\">@T-rustdoc</span> confirm that?</p>",
        "id": 244574215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149430
    },
    {
        "content": "<p>I suppose it doesn’t terribly matter. I mostly want to know if we should reopen <a href=\"https://github.com/rust-lang/rust/issues/83133\">#83133</a></p>",
        "id": 244574342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149461
    },
    {
        "content": "<p>but that question can be resolved asynchronously</p>",
        "id": 244574367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149469
    },
    {
        "content": "<p>overall, this seems like an easy backport approval</p>",
        "id": 244574400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149484
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86564\">rust#86564</a> backport approved.</p>",
        "id": 244574420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149492
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 244574438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149502
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 244574459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149509
    },
    {
        "content": "<ul>\n<li>\"Build aarch64-apple-ios-sim as part of the full macOS build\" <a href=\"https://github.com/rust-lang/rust/pull/85782\">rust#85782</a><ul>\n<li>MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a> was seconded, anything else to do from <code>T-compiler</code>?</li>\n</ul>\n</li>\n</ul>",
        "id": 244574472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149517
    },
    {
        "content": "<p>is this really a T-compiler issue at this point?</p>",
        "id": 244574558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149545
    },
    {
        "content": "<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> if not I can now remove the label and the S-waiting</p>",
        "id": 244574713,
        "sender_full_name": "apiraino",
        "timestamp": 1625149583
    },
    {
        "content": "<p>oh the final-comment-period on <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a> only started 21 hours ago</p>",
        "id": 244574715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244574215\">said</a>:</p>\n<blockquote>\n<p>is <span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> here? Can they, or someone else from <span class=\"user-group-mention silent\" data-user-group-id=\"3925\">T-rustdoc</span> confirm that?</p>\n</blockquote>\n<p>checking the backlog</p>",
        "id": 244574746,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625149594
    },
    {
        "content": "<p>(did I do something wrong in my <code>@rustbot second</code> command on <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a>? Why didn’t rustbot catch it?)</p>",
        "id": 244574783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149606
    },
    {
        "content": "<p>no, but last week the bot had some issues and didnt respond to commands</p>",
        "id": 244574832,
        "sender_full_name": "apiraino",
        "timestamp": 1625149625
    },
    {
        "content": "<p>so your <code>second</code> didnt trigger the FCP</p>",
        "id": 244574862,
        "sender_full_name": "apiraino",
        "timestamp": 1625149637
    },
    {
        "content": "<p>oh, was this the same thing that made perf.rlo miss some commits?</p>",
        "id": 244574889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149648
    },
    {
        "content": "<p>maybe (but not sure )</p>",
        "id": 244574920,
        "sender_full_name": "apiraino",
        "timestamp": 1625149664
    },
    {
        "content": "<p>anyway, everything seems fine here. We should still wait for the FCP to finish</p>",
        "id": 244574928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149667
    },
    {
        "content": "<p>No, you got it right, we went a bit too far, weren't satisfied with the result and reverted</p>",
        "id": 244574942,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1625149670
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/85782\">rust#85782</a> is fine where it is, I think</p>",
        "id": 244575036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149694
    },
    {
        "content": "<p>I’ll go through teh T-libs stuff quickly. It sounds like we might be removing it from our agendas going forward. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 244575097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149721
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs\">T-libs</a></p>",
        "id": 244575105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149726
    },
    {
        "content": "<ul>\n<li>\"Show type for docs slice Chunks\" <a href=\"https://github.com/rust-lang/rust/pull/77938\">rust#77938</a><ul>\n<li>being reviewed by T-libs</li>\n</ul>\n</li>\n</ul>",
        "id": 244575118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149733
    },
    {
        "content": "<ul>\n<li>\"Fix linker error\" <a href=\"https://github.com/rust-lang/rust/pull/85953\">rust#85953</a><ul>\n<li>PR is being followed on <a href=\"#narrow/stream/219381-t-libs/topic/Using.20weak!.20in.20fs.3A.3Ahard_link\">Zulip T-libs</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244575138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149741
    },
    {
        "content": "<p>/me did a double-take: but <a href=\"https://github.com/rust-lang/rust/issues/85953\">#85953</a> is taling about “link” as in file system linkage, not object file linkage.</p>",
        "id": 244575214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149772
    },
    {
        "content": "<ul>\n<li>\"core: add unstable no_floating_point to disable float formatting code\" <a href=\"https://github.com/rust-lang/rust/pull/86048\">rust#86048</a><ul>\n<li>(pr is being reviewed and discussed by T-libs)</li>\n</ul>\n</li>\n</ul>",
        "id": 244575363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244575214\">said</a>:</p>\n<blockquote>\n<p>/me did a double-take: but <a href=\"https://github.com/rust-lang/rust/issues/85953\">#85953</a> is taling about “link” as in file system linkage, not object file linkage.</p>\n</blockquote>\n<p>both meanings, kinda ^^'  dynamic linkage of the <code>link</code> and <code>linkat</code> functions</p>",
        "id": 244575446,
        "sender_full_name": "Mara",
        "timestamp": 1625149844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244573720\">said</a>:</p>\n<blockquote>\n<p>Ah yes, and the new <code>T-libs</code> is going to be owning backports going forward, yes?</p>\n</blockquote>\n<p>yes! we just got started last week. we now handle all the critical issues, backports, etc. in our meeting every wednesday.</p>",
        "id": 244575459,
        "sender_full_name": "Mara",
        "timestamp": 1625149849
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244575446\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244575214\">said</a>:</p>\n<blockquote>\n<p>/me did a double-take: but <a href=\"https://github.com/rust-lang/rust/issues/85953\">#85953</a> is taling about “link” as in file system linkage, not object file linkage.</p>\n</blockquote>\n<p>both meanings, kinda ^^'  dynamic linkage of the <code>link</code> and <code>linkat</code> functions</p>\n</blockquote>\n<p>oh, was I wrong? Let me look again</p>",
        "id": 244575520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149875
    },
    {
        "content": "<p>I see, I over looked the stuff about <code>libc::link</code> in there</p>",
        "id": 244575675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149939
    },
    {
        "content": "<p>or rather</p>",
        "id": 244575718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149964
    },
    {
        "content": "<p>or rather</p>",
        "id": 244575754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149980
    },
    {
        "content": "<p>/me scratches head</p>",
        "id": 244575765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149984
    },
    {
        "content": "<p>okay</p>",
        "id": 244575801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625149997
    },
    {
        "content": "<p><code>weak!</code> is the part where the object linkage gets involved</p>",
        "id": 244575862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150025
    },
    {
        "content": "<p>(it fixes <code> Undefined symbols for architecture x86_64: \"_linkat\",</code>.)</p>",
        "id": 244575868,
        "sender_full_name": "Mara",
        "timestamp": 1625150027
    },
    {
        "content": "<p>linkat linker error</p>",
        "id": 244575895,
        "sender_full_name": "Mara",
        "timestamp": 1625150034
    },
    {
        "content": "<p>okay</p>",
        "id": 244576002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244575363\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"core: add unstable no_floating_point to disable float formatting code\" <a href=\"https://github.com/rust-lang/rust/pull/86048\">rust#86048</a><ul>\n<li>(pr is being reviewed and discussed by T-libs)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>as for this one: It seems like debate is still going on</p>",
        "id": 244576104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150103
    },
    {
        "content": "<p>healthy debate, that is, I think</p>",
        "id": 244576125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150110
    },
    {
        "content": "<p>so that seems okay</p>",
        "id": 244576147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150121
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">5 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">4 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">81 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 3 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 49 P-high, 83 P-medium, 11 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 244576175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150130
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 244576199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150140
    },
    {
        "content": "<ul>\n<li>\"run-make-fulldeps/pgo-branch-weights fails on AArch64 Linux\" <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a><ul>\n<li>only fails on aarch64 arm</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/78226#issuecomment-866299280\">comments</a> that tests for this are disabled but a fix for 1.54 would be good</li>\n<li>being investigated by <span class=\"user-mention\" data-user-id=\"309977\">@Jamie Cunliffe</span> <a href=\"https://github.com/rust-lang/rust/issues/78226#issuecomment-868570487\">see comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244576218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150149
    },
    {
        "content": "<p>seems under control, i think. Hopefully <span class=\"user-mention\" data-user-id=\"309977\">@Jamie Cunliffe</span> has sufficient time to look into this</p>",
        "id": 244576473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150232
    },
    {
        "content": "<ul>\n<li>\"add back support for inner attributes on non-block expressions?\" <a href=\"https://github.com/rust-lang/rust/issues/84879\">rust#84879</a><ul>\n<li>will be closed after <a href=\"https://github.com/rust-lang/rust/pull/85193\">rust#85193</a> is beta backported (<a href=\"https://github.com/rust-lang/rust/issues/85193\">#85193</a> is merged and <code>beta-accepted</code>)</li>\n</ul>\n</li>\n</ul>",
        "id": 244576508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150247
    },
    {
        "content": "<p>so that’s under control, i think</p>",
        "id": 244576519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150253
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243797032\">last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> comments about addressing the <a href=\"https://github.com/rust-lang/rust/issues/85360\">sub-obligation</a> and <a href=\"https://github.com/rust-lang/rust/issues/84963\">the overflow</a> issues, other than those all known issues are fixed</li>\n<li>@<strong>estebank</strong> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243025573\">offered to have a look</a></li>\n<li>general feeling is to re-enable incr-comp again in 1.54</li>\n</ul>\n</li>\n</ul>",
        "id": 244576546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150267
    },
    {
        "content": "<p>the current state of incr-comp, does the ICE text currently advise someone to clear their incremental cache? Does it specifically suggest <code>cargo clean</code>?</p>",
        "id": 244576678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150322
    },
    {
        "content": "<p>Yes</p>",
        "id": 244576694,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625150329
    },
    {
        "content": "<p>Okay. Someone on twitter mentioned the fingerprint ICE</p>",
        "id": 244576724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150346
    },
    {
        "content": "<p>but I don’t know what version they were on. (I am currently assuming nightly.)</p>",
        "id": 244576769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150361
    },
    {
        "content": "<p>anyway I think we are in an okay place to renable incr-comp in 1.54.</p>",
        "id": 244576836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150395
    },
    {
        "content": "<p>There's been a couple comments of issues on nightly, I think</p>",
        "id": 244576855,
        "sender_full_name": "simulacrum",
        "timestamp": 1625150403
    },
    {
        "content": "<p>but we've never had a good picture of <em>just</em> how widespread this is</p>",
        "id": 244576916,
        "sender_full_name": "simulacrum",
        "timestamp": 1625150415
    },
    {
        "content": "<p>right</p>",
        "id": 244576952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Can you link the twitter thread?</p>",
        "id": 244576998,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625150458
    },
    {
        "content": "<p><a href=\"https://twitter.com/jacobrothstein/status/1410091371755573249\">https://twitter.com/jacobrothstein/status/1410091371755573249</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/jacobrothstein/status/1410091371755573249\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/d13888cec2ad2dac575d3d4557d400c1378ab050/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313339353934393832343637313833383231342f43734e45686e42555f6e6f726d616c2e6a7067\"></a><p><a href=\"https://twitter.com/pnkfelix\">@pnkfelix</a> The latter. Just working on a straightforward pure-rust project, occasionally get ICEs that are resolved with cargo clean. Something about fingerprint mismatch? I’ll file next time it happens, it’s clearly the right thing to do</p><span>- send_tweet.py (@jacobrothstein)</span></div></div>",
        "id": 244577059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150481
    },
    {
        "content": "<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> (<a href=\"https://github.com/rust-lang/rust/issues/85863#issuecomment-871797016\">comment</a>) opened pr <a href=\"https://github.com/rust-lang/rust/pull/86765\">rust#86765</a> and <a href=\"https://github.com/rust-lang/rust/pull/86766\">rust#86766</a></li>\n</ul>\n</li>\n</ul>",
        "id": 244577138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150514
    },
    {
        "content": "<p>oh, hmm, there's no error message</p>",
        "id": 244577155,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625150517
    },
    {
        "content": "<p>right, so its not actionable at the moment</p>",
        "id": 244577246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150541
    },
    {
        "content": "<p>and I don’t know whether they were told <em>by</em> the error message that <code>cargo clean</code> would fix it, or if they figured that out independently.</p>",
        "id": 244577306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244577138\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> (<a href=\"https://github.com/rust-lang/rust/issues/85863#issuecomment-871797016\">comment</a>) opened pr <a href=\"https://github.com/rust-lang/rust/pull/86765\">rust#86765</a> and <a href=\"https://github.com/rust-lang/rust/pull/86766\">rust#86766</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>I think the intention of <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> was that these PR’s would be used as the basis for a performance comparison</p>",
        "id": 244577409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150620
    },
    {
        "content": "<p>unfortunately I worry that just using a perf.rlo run will be misleading</p>",
        "id": 244577434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150632
    },
    {
        "content": "<p>we need something more like lolbench don't we?</p>",
        "id": 244577539,
        "sender_full_name": "eddyb",
        "timestamp": 1625150659
    },
    {
        "content": "<p>yeah I think so</p>",
        "id": 244577547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150664
    },
    {
        "content": "<p>if this is runtime perf</p>",
        "id": 244577554,
        "sender_full_name": "eddyb",
        "timestamp": 1625150666
    },
    {
        "content": "<p>I was just bemoaning our situation here to niko earlier this week</p>",
        "id": 244577628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150689
    },
    {
        "content": "<p>yeah we talked about this one in the libs meeting yesterday. we also want to check if we can make Fuse&lt;T&gt; invariant over T without breaking much</p>",
        "id": 244577649,
        "sender_full_name": "Mara",
        "timestamp": 1625150696
    },
    {
        "content": "<p>maybe setting up an lolbench type thing should be higher priority item</p>",
        "id": 244577676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150709
    },
    {
        "content": "<p>there are two kinds of effort involved there: 1. The server infrastructure itself, and 2. choosing the set of benchmarks</p>",
        "id": 244577724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150732
    },
    {
        "content": "<p>good benchmarking tools would be nice. would help a lot with decisions like this</p>",
        "id": 244577743,
        "sender_full_name": "Mara",
        "timestamp": 1625150741
    },
    {
        "content": "<p>(Sounds like a potential topic for a steering meeting!)</p>",
        "id": 244577758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150748
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"130111\">@anp</span> just so they see this</p>",
        "id": 244577876,
        "sender_full_name": "eddyb",
        "timestamp": 1625150774
    },
    {
        "content": "<p>but really, we need someone to own the initiative itself.</p>",
        "id": 244577884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150776
    },
    {
        "content": "<p>anyway</p>",
        "id": 244577940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150800
    },
    {
        "content": "<p>I <em>am</em> happy to see forward progress on  <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a></p>",
        "id": 244577964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150813
    },
    {
        "content": "<p>I'm encouraged that the perf run did show some difference to evaluate</p>",
        "id": 244578028,
        "sender_full_name": "cuviper",
        "timestamp": 1625150834
    },
    {
        "content": "<p>i.e. not a null result</p>",
        "id": 244578076,
        "sender_full_name": "cuviper",
        "timestamp": 1625150849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> its a good point: Even if perf.rlo is not an <em>ideal</em> set of metrics, it is <em>something</em> to look at</p>",
        "id": 244578091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150855
    },
    {
        "content": "<p>next</p>",
        "id": 244578224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150898
    },
    {
        "content": "<ul>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li><span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span> authored pr <a href=\"https://github.com/rust-lang/rust/pull/85874\">rust#85874</a> that should close this issue</li>\n</ul>\n</li>\n</ul>",
        "id": 244578243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150905
    },
    {
        "content": "<p>I see <span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span> noted 3 hours ago that either PR <a href=\"https://github.com/rust-lang/rust/issues/85874\">#85874</a> or  <a href=\"https://github.com/rust-lang/rust/issues/86222\">#86222</a> needs beta backport to 1.54-beta</p>",
        "id": 244578406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625150971
    },
    {
        "content": "<p>I’d like to have a concrete proposal for <em>which</em> option is best before next week’s meeting</p>",
        "id": 244578513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151004
    },
    {
        "content": "<p>I’ll make a note of that on <a href=\"https://github.com/rust-lang/rust/issues/85874\">#85874</a></p>",
        "id": 244578562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151016
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/85874\">rust#85874</a> failed in CI on <code>src/test/codegen/vec-in-place.rs</code>, which is a test that checks that <code>vec.into_iter().map(|e| e as usize).collect::&lt;Vec&lt;usize&gt;&gt;()</code> is a no-op.</p>",
        "id": 244578614,
        "sender_full_name": "Mara",
        "timestamp": 1625151037
    },
    {
        "content": "<p>interesting</p>",
        "id": 244578943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151135
    },
    {
        "content": "<p>okay well I threw a beta-nom label on <a href=\"https://github.com/rust-lang/rust/issues/85874\">#85874</a></p>",
        "id": 244578970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151144
    },
    {
        "content": "<p>i presume T-libs will resolve the questions there when it meets next week</p>",
        "id": 244579003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151156
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs\">T-libs</a></p>\n<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>see above (does T-libs need to be tagged?)</li>\n</ul>\n</li>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>see above (does T-libs need to be tagged?)</li>\n</ul>\n</li>\n</ul>",
        "id": 244579068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151182
    },
    {
        "content": "<p>(we just discussed all these. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 244579086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151190
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 244579106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151196
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 244579119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151202
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-06-30.md\">triage logs for 2021-06-30</a></p>\n</blockquote>\n<p>We only have partial results this week (more details below). From the results we have collected, we have one small regression and several improvements.<br>\nAlso, there was a broad <a href=\"https://perf.rust-lang.org/compare.html?start=29cd70d40722930e66a8b726fe58a7bd1d64a22b&amp;end=6b354a13820a444f834a33365ae4a8d97d7d27ce&amp;stat=max-rss\">max-rss regression</a> from 11 days ago and narrower <a href=\"https://perf.rust-lang.org/compare.html?start=406d4a9cc3b9601cf98a07c6c83e0227d64f5d48&amp;end=4573a4a879a8e1f773944a8859e4dcd136138af8&amp;stat=max-rss\">max-rss regression</a> from 9 days ago.</p>",
        "id": 244579140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151213
    },
    {
        "content": "<p>This week we had some problems with missing benchmark results for some of the commits (we believe this is due to triagebot being out of service for a while). Thus, there is a gap from<br>\n<a href=\"https://github.com/rust-lang/rust/commit/5a7834050f3a0ebcd117b4ddf0bc1e8459594309\">5a7834050f3a0ebcd117b4ddf0bc1e8459594309</a> to <a href=\"https://github.com/rust-lang/rust/commit/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547\">7c3872e6bfd555d2ad753ac1f871db3bd7f2a547</a>.</p>\n<p>The following PR's from that gap were omitted from this analysis.</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86467\">#86467</a> - ChrisDenton:win-env-clear, r=JohnTitor</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/85427\">#85427</a> - ehuss:fix-use-placement, r=jackh726</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86279\">#86279</a> - JohnTitor:transparent-zero-size-fields, r=nikomatsakis</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86588\">#86588</a> - JohnTitor:rollup-ibgjbkf, r=JohnTitor</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86138\">#86138</a> - FabianWolff:issue-85871, r=nikomatsakis</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86573\">#86573</a> - Mark-Simulacrum:expat-bump, r=pietroalbini</li>\n</ul>\n<p>We have manually enqueued the missing commits for benchmarking on perf.rlo.</p>",
        "id": 244579168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151224
    },
    {
        "content": "<p>Triage done by <strong>@pnkfelix</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=406d4a9cc3b9601cf98a07c6c83e0227d64f5d48&amp;end=5a7834050f3a0ebcd117b4ddf0bc1e8459594309&amp;absolute=false&amp;stat=instructions%3Au\">406d4a9cc3b9601cf98a07c6c83e0227d64f5d48..5a7834050f3a0ebcd117b4ddf0bc1e8459594309</a><br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547&amp;end=7ede6e2a2359c1bb9032baffa4fdafe5633749e3&amp;absolute=false&amp;stat=instructions%3Au\">7c3872e6bfd555d2ad753ac1f871db3bd7f2a547..7ede6e2a2359c1bb9032baffa4fdafe5633749e3</a></p>\n<p>1 Regressions, 5 Improvements, 0 Mixed, 1 of them in rollups</p>",
        "id": 244579189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151234
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Disambiguate between SourceFiles from different crates even if they have the same path <a href=\"https://github.com/rust-lang/rust/issues/86368\">#86368</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=3487be11d5f3c9afc4d8e44438cdd2af1e98c859&amp;end=80926fc409d671e7da13f08c90642b1e71f800d9&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>incr-unchanged</code> builds of <code>ctfe-stress-4-check</code>)</li>\n</ul>",
        "id": 244579208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151242
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Add MIR pass to lower call to <code>core::slice::len</code> into <code>Len</code> operand <a href=\"https://github.com/rust-lang/rust/issues/86383\">#86383</a></li>\n<li>Rollup of 11 pull requests <a href=\"https://github.com/rust-lang/rust/issues/86527\">#86527</a></li>\n<li>Derive <code>Copy</code> for <code>VarianceDiagInfo</code> <a href=\"https://github.com/rust-lang/rust/issues/86670\">#86670</a></li>\n<li>Add inflate to pgo <a href=\"https://github.com/rust-lang/rust/issues/86697\">#86697</a></li>\n<li>Change vtable memory representation to use tcx allocated allocations. <a href=\"https://github.com/rust-lang/rust/issues/86475\">#86475</a></li>\n</ul>",
        "id": 244579278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151259
    },
    {
        "content": "<h4>Mixed</h4>\n<ul>\n<li>None</li>\n</ul>",
        "id": 244579308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151274
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<ul>\n<li>Follow up on max-rss regression in <a href=\"https://github.com/rust-lang/rust/pull/86034#issuecomment-871488586\">#86034</a></li>\n</ul>",
        "id": 244579328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151280
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> did respond on thread there. We don’t know what caused the max-rss regressions from <a href=\"https://github.com/rust-lang/rust/issues/86034\">#86034</a>. I guess my follow-up question is: Do we need to investigate it more…)</p>",
        "id": 244579439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151335
    },
    {
        "content": "<p>Isn't a 1.2% fluctuation normal for ctfe-stress-4-check?</p>",
        "id": 244579456,
        "sender_full_name": "mw",
        "timestamp": 1625151343
    },
    {
        "content": "<p>Maybe?</p>",
        "id": 244579519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151363
    },
    {
        "content": "<p>oh wow something went in that PR that's quite interesting</p>",
        "id": 244579722,
        "sender_full_name": "eddyb",
        "timestamp": 1625151430
    },
    {
        "content": "<p>hmm I don’t know about it being that noisy, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , from staring at the graphs on <a href=\"https://perf.rust-lang.org/index.html\">https://perf.rust-lang.org/index.html</a></p>",
        "id": 244579746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151442
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/86383/files#r654937015\">https://github.com/rust-lang/rust/pull/86383/files#r654937015</a></p>",
        "id": 244579755,
        "sender_full_name": "eddyb",
        "timestamp": 1625151445
    },
    {
        "content": "<p>It's certainly within the margin of what I consider acceptable to r+</p>",
        "id": 244579760,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1625151448
    },
    {
        "content": "<p>it flew under the radar but it includes a kind of rogue optimization :P</p>",
        "id": 244579801,
        "sender_full_name": "eddyb",
        "timestamp": 1625151462
    },
    {
        "content": "<p>that we may want to separately consider</p>",
        "id": 244579822,
        "sender_full_name": "eddyb",
        "timestamp": 1625151473
    },
    {
        "content": "<p>namely pre-interning commonly-used identifiers even if the compiler doesn't need them</p>",
        "id": 244579898,
        "sender_full_name": "eddyb",
        "timestamp": 1625151486
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244579746\">said</a>:</p>\n<blockquote>\n<p>hmm I don’t know about it being that noisy, <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> , from staring at the graphs on <a href=\"https://perf.rust-lang.org/index.html\">https://perf.rust-lang.org/index.html</a></p>\n</blockquote>\n<p>Yes, you're right.</p>",
        "id": 244579941,
        "sender_full_name": "mw",
        "timestamp": 1625151505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244579898\">said</a>:</p>\n<blockquote>\n<p>namely pre-interning commonly-used identifiers even if the compiler doesn't need them</p>\n</blockquote>\n<p>that’s pretty interesting</p>",
        "id": 244579969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151518
    },
    {
        "content": "<p>maybe all the 1,2, and 3 letter identifiers. :)</p>",
        "id": 244580014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151536
    },
    {
        "content": "<p>shoot</p>",
        "id": 244580077,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151558
    },
    {
        "content": "<p>or find the 10k most commonly used identifiers on <a href=\"http://crates.io\">crates.io</a> ^^'</p>",
        "id": 244580084,
        "sender_full_name": "Mara",
        "timestamp": 1625151560
    },
    {
        "content": "<p>hour is up</p>",
        "id": 244580086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151561
    },
    {
        "content": "<p>someone should file an issue, perhaps <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 244580087,
        "sender_full_name": "eddyb",
        "timestamp": 1625151561
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244574342\">said</a>:</p>\n<blockquote>\n<p>I suppose it doesn’t terribly matter. I mostly want to know if we should reopen <a href=\"https://github.com/rust-lang/rust/issues/83133\">#83133</a></p>\n</blockquote>\n<p>We only need to reopen if we reland the recursive deref PR</p>",
        "id": 244580156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625151584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> my <a href=\"https://github.com/rust-lang/rust/issues/86699\">#86699</a> I-nominated didn't come up at all, right? (that's why I attended this meeting tbh)</p>",
        "id": 244580174,
        "sender_full_name": "eddyb",
        "timestamp": 1625151592
    },
    {
        "content": "<p>would be nice to find some other time to discuss it. maybe async on the existing Zulip thread</p>",
        "id": 244580264,
        "sender_full_name": "eddyb",
        "timestamp": 1625151609
    },
    {
        "content": "<p>Yeah I was going to say we have five nominated issues</p>",
        "id": 244580288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151618
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244580264\">said</a>:</p>\n<blockquote>\n<p>would be nice to find some other time to discuss it. maybe async on the existing Zulip thread</p>\n</blockquote>\n<p>which thread, this one? <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/reifying.20function.20ptrs.20for.20intrinsics.20.2384297\">#t-compiler &gt; reifying function ptrs for intrinsics #84297</a>  ?</p>",
        "id": 244580492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151690
    },
    {
        "content": "<p>yupp</p>",
        "id": 244580514,
        "sender_full_name": "eddyb",
        "timestamp": 1625151700
    },
    {
        "content": "<p>okay.</p>",
        "id": 244580531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151709
    },
    {
        "content": "<p>People: consider yourself funneled. :)</p>",
        "id": 244580543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151717
    },
    {
        "content": "<p>Thanks to everyone for showing up. Sorry we didn’t get to the nominations</p>",
        "id": 244580605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151729
    },
    {
        "content": "<p>but I was happy with the discussions</p>",
        "id": 244580630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151737
    },
    {
        "content": "<p>Bye <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  Stay safe you all!</p>",
        "id": 244580673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625151754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244580174\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> my <a href=\"https://github.com/rust-lang/rust/issues/86699\">#86699</a> I-nominated didn't come up at all, right? (that's why I attended this meeting tbh)</p>\n</blockquote>\n<p>This brings up a very good point, actually. In the past, I’ve treated the nominated issues as “nice to get to if we can, but delayable if necessary.” But that is disrespectful to the time of the stakeholders who might have otherwise thought that their pet issue was going to get a dedicated time allotment.</p>",
        "id": 244595003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625157826
    },
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> : I apologize for that. I’m currently thinking that I might need to set up some sort of alarm or something to try to force us to keep moving along through the agenda, because this of course is not a new problem.</p>",
        "id": 244595151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625157893
    },
    {
        "content": "<p>(the problem with that of course is that a blind alarm may lead us to incorrectly allocate time, as in prematurely terminate an otherwise productive conversation…)</p>",
        "id": 244595225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625157933
    },
    {
        "content": "<p>well, to be clear about <em>this</em> case, no worries, just trying to get some kind of awareness out of it. with everyone else with some stake in Rust-GPU going on vacation for the next few weeks, there's even less pressure than usual to get anything unblocked :P</p>",
        "id": 244595310,
        "sender_full_name": "eddyb",
        "timestamp": 1625157966
    },
    {
        "content": "<p>Another way to go would be to ensure we always get to at least one or two of the nominated issues, every week. Perhaps by moving them earlier in the queue. And then leaving the rest of the nominations at the end.</p>",
        "id": 244595323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625157972
    },
    {
        "content": "<p>And then tell the stakeholders for those prioritized issues that they should be guaranteed some discussion time.</p>",
        "id": 244595348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625157992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244579898\">said</a>:</p>\n<blockquote>\n<p>namely pre-interning commonly-used identifiers even if the compiler doesn't need them</p>\n</blockquote>\n<p>I believe there was a PR for this in the past. I can't remember if it landed though.</p>",
        "id": 244600515,
        "sender_full_name": "bjorn3",
        "timestamp": 1625160381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244595323\">said</a>:</p>\n<blockquote>\n<p>Another way to go would be to ensure we always get to at least one or two of the nominated issues, every week. Perhaps by moving them earlier in the queue. And then leaving the rest of the nominations at the end.</p>\n</blockquote>\n<p>Perhaps we could move up the <code>I-nominated</code> section right after the\"P-high regression\" in the agenda and also underline each <code>P-*</code> label (if any).<br>\nWould that help <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ? You already suggested something along this a while ago (like, last year...)<br>\nI also think that by removing all no T-compiler entries from the agenda, from now on we should be able to tackle the whole of it more easily</p>",
        "id": 244600757,
        "sender_full_name": "apiraino",
        "timestamp": 1625160528
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/tuLB5d6ETKCZGS3cpzzRiA\">https://hackmd.io/tuLB5d6ETKCZGS3cpzzRiA</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>  checkin by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  &amp;&amp; <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n</ul>",
        "id": 244601109,
        "sender_full_name": "apiraino",
        "timestamp": 1625160707
    },
    {
        "content": "<blockquote>\n<p>pre-interning commonly-used identifiers even if the compiler doesn't need them<br>\nor find the 10k most commonly used identifiers on <a href=\"http://crates.io\">crates.io</a> ^^'</p>\n</blockquote>\n<p>This was kind of tried in <a href=\"https://github.com/rust-lang/rust/pull/79425\">https://github.com/rust-lang/rust/pull/79425</a></p>",
        "id": 244610018,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1625165144
    },
    {
        "content": "<p>The final version of the PR didn't contain it though.</p>",
        "id": 244610329,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1625165271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244600757\">said</a>:</p>\n<blockquote>\n<p>Perhaps we could move up the <code>I-nominated</code> section right after the\"P-high regression\" in the agenda and also underline each <code>P-*</code> label (if any).</p>\n</blockquote>\n<p>I don't want to put <em>all</em> the nominated stuff up front, because that will end up meaning that another section of the agenda gets put aside week after week (e.g. performance triage).</p>\n<p>My feeling here is that in the past, rate of nominations is somewhat bursty. Some weeks there's nothing, some weeks there's a bunch. If that assumption holds true, then we don't need to try to get through all of the nominations every week. We just need to go through a few (i.e. two at minimum) each week in an incremental FIFO manner. That will hopefully be enough for us to keep up with the overall incoming nomination rate</p>",
        "id": 244623816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1625172006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-07-01.20.2354818/near/244577676\">said</a>:</p>\n<blockquote>\n<p>maybe setting up an lolbench type thing should be higher priority item</p>\n</blockquote>\n<p>i chatted with my manager and they're interested in me spending some time to revive lolbench if it means we have a place to send performance regression benchmarks in the future</p>",
        "id": 245186313,
        "sender_full_name": "anp",
        "timestamp": 1625667217
    },
    {
        "content": "<p>dont have a <em>ton</em> of time to spend on it but i figure over the coming months i should be able to at least get it back alive and explore paths to perf.rlo or other integrations</p>",
        "id": 245186459,
        "sender_full_name": "anp",
        "timestamp": 1625667272
    },
    {
        "content": "<p>(i don't know how to fork zulip threads)</p>",
        "id": 245186482,
        "sender_full_name": "anp",
        "timestamp": 1625667285
    },
    {
        "content": "<p>i think my equinix metal account for lolbench is still sponsored, but the data storage needs to be rewritten from \"json files in git\" and the CI un-bitrotted. there's longer term stuff like \"run each benchmark pass once with and without perf sampling enabled to show flamegraphs on the website\" but that's all pie in the sky</p>",
        "id": 245186766,
        "sender_full_name": "anp",
        "timestamp": 1625667403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@anp</span> we'd love to discuss this (perhaps over in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> ). <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and I both agreed we personally don't want to dedicate too much time to it right now because compilation performance still needs attention, but if we have someone else able to dedicate time to it, maybe we can make it work.</p>",
        "id": 245187892,
        "sender_full_name": "rylev",
        "timestamp": 1625667774
    }
]