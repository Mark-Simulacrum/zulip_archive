[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 1h30<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/vQr9mk6zSdib5vg9OlHuOQ?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li>@WG-polymorphization by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span>  by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></li>\n</ul>",
        "id": 243777172,
        "sender_full_name": "apiraino",
        "timestamp": 1624537675
    },
    {
        "content": "<p>Hi everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Triage meeting starting now; leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you’re here!</p>",
        "id": 243790304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543287
    },
    {
        "content": "<p>We’ll start off with ~8 minutes for </p>\n<h2>Announcements</h2>",
        "id": 243790360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543314
    },
    {
        "content": "<ul>\n<li>June 25th, at <time datetime=\"2021-06-25T14:00:00Z\">2021-06-25T10:00:00-04:00</time> 1.52 Fingerprint retrospective <a href=\"https://github.com/rust-lang/compiler-team/issues/435\">compiler-team#435</a></li>\n</ul>",
        "id": 243790438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543332
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 243790475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543346
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a></li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243790490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543352
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Add different entry points for x.py\" <a href=\"https://github.com/rust-lang/compiler-team/issues/396\">compiler-team#396</a></li>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a></li>\n<li>\"LLVM plugin support in Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/419\">compiler-team#419</a></li>\n<li>\"Promote <code>aarch64-apple-ios-sim</code> to Tier 2\" <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a></li>\n<li>\"Don't steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt\" <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243790511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543365
    },
    {
        "content": "<p>(after reading some of the discussion on <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a>, I am wondering if that one warrants a design meeting. It certainly seems like there are some strong differences of opinion with respect to technical direction there…)</p>",
        "id": 243790635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543420
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243790647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543428
    },
    {
        "content": "<p>(I just nominated FCP for that one, in case you all are wondering.)</p>",
        "id": 243790693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543442
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Allow changing the bug report url for the ice hook\" <a href=\"https://github.com/rust-lang/compiler-team/issues/436\">compiler-team#436</a></li>\n<li>\"Transfer on-disk hash table implementation (odht crate) to rust-lang org\" <a href=\"https://github.com/rust-lang/compiler-team/issues/438\">compiler-team#438</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243790770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543468
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 243790793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543478
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Ignore derived Clone and Debug implementations during dead code analysis\" <a href=\"https://github.com/rust-lang/rust/pull/85200\">rust#85200</a></li>\n<li>\"Stabilize span_open() and span_close().\" <a href=\"https://github.com/rust-lang/rust/pull/86136\">rust#86136</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243790805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243790635\">said</a>:</p>\n<blockquote>\n<p>(after reading some of the discussion on <a href=\"https://github.com/rust-lang/compiler-team/issues/437\">compiler-team#437</a>, I am wondering if that one warrants a design meeting. It certainly seems like there are some strong differences of opinion with respect to technical direction there…)</p>\n</blockquote>\n<p>I am not tied to my particular solution, but I would really like to have <em>some</em> solution, this is causing a lot of trouble for rustdoc. Happy to hear other ideas.</p>",
        "id": 243790844,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1624543501
    },
    {
        "content": "<h3>WG checkins</h3>\n<p>@<em>WG-polymorphization</em> by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></p>\n<blockquote>\n<p>There's no update from the polymorphization working group. Everyone involved is working on other things.</p>\n</blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<blockquote>\n<p>no update (oli is on leave)</p>\n</blockquote>",
        "id": 243790846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> The idea of keeping around a read-only resolver, on its face, sounds totally reasonable to me. The part that gets tricky is that I don’t understand the details about when it <em>stops</em> being read-only. :)</p>",
        "id": 243790972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543550
    },
    {
        "content": "<p>(Which is why I’m thinking a design-meeting could be warranted.)</p>",
        "id": 243791062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543568
    },
    {
        "content": "<p>Any more announcements from you all?</p>",
        "id": 243791509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543752
    },
    {
        "content": "<p>okay lets move to ...</p>\n<h2>Backport nominations</h2>",
        "id": 243791659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543805
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 243791668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543811
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"Disambiguate between SourceFiles from different crates even if they have the same path\" <a href=\"https://github.com/rust-lang/rust/pull/86368\">rust#86368</a></li>\n</ul>",
        "id": 243791684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543816
    },
    {
        "content": "<p>wow whattabug</p>",
        "id": 243791773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543871
    },
    {
        "content": "<p>Useful info: \"This can happen, for example, when there is some auto-generated code that is part of both a library and an accompanying integration test.\"</p>",
        "id": 243791821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543897
    },
    {
        "content": "<p>Yeah think this is an easy “beta backport approve\"</p>",
        "id": 243791926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543937
    },
    {
        "content": "<p>Lets keep going</p>",
        "id": 243791935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543941
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://uploads.zulipusercontent.net/281681cc2061954ec1285786f6c55d81e6530445/68747470733a2f2f7a756c69702d617661746172732e73332e616d617a6f6e6177732e636f6d2f343731352f656d6f6a692f696d616765732f32303731372e706e67\" title=\"beta\"> \"rustfmt: load nested out-of-line mods correctly\" <a href=\"https://github.com/rust-lang/rust/pull/86424\">rust#86424</a><ul>\n<li>opened by @<strong>caleb</strong></li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, <a href=\"https://github.com/rust-lang/rust/pull/86424#issuecomment-867140034\">seems safe for beta backport</a>, stable backport maybe needs more testing</li>\n<li>fixes <a href=\"https://github.com/rust-lang/rustfmt/issues/4874\">rustfmt#4874</a> - rustfmt to no longer processed modules referenced in an inline mod</li>\n</ul>\n</li>\n</ul>",
        "id": 243791960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624543953
    },
    {
        "content": "<p>So I had a question about this one. I think I’ve been ignoring a potential issue: We are managing the source code for several tools: rustfmt, clippy, etc, where those tools are tracking issues in a separate issue tracker, right?</p>",
        "id": 243792129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544028
    },
    {
        "content": "<p>On the one hand, I like the idea of keeping things partitioned in some manner</p>",
        "id": 243792191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544043
    },
    {
        "content": "<p>Re: previous back port, we didn't run perf on it and touching spans can have compounding effects</p>",
        "id": 243792193,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1624544043
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243792193\">said</a>:</p>\n<blockquote>\n<p>Re: previous back port, we didn't run perf on it and touching spans can have compounding effects</p>\n</blockquote>\n<p>You’re talking about <a href=\"https://github.com/rust-lang/rust/issues/86368\">rust#86368</a> ?</p>",
        "id": 243792256,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544064
    },
    {
        "content": "<p>Can we get a perf run on it now, after its been merged?</p>",
        "id": 243792302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544092
    },
    {
        "content": "<p>It's probably already run</p>",
        "id": 243792318,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544098
    },
    {
        "content": "<p>I can get the compare up</p>",
        "id": 243792336,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544103
    },
    {
        "content": "<p>Okay. I was assuming it had been part of a rollup or something</p>",
        "id": 243792368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544114
    },
    {
        "content": "<p>looks like some deltas but nothing major - <a href=\"https://perf.rust-lang.org/compare.html?start=3487be11d5f3c9afc4d8e44438cdd2af1e98c859&amp;end=80926fc409d671e7da13f08c90642b1e71f800d9&amp;stat=instructions%3Au\">https://perf.rust-lang.org/compare.html?start=3487be11d5f3c9afc4d8e44438cdd2af1e98c859&amp;end=80926fc409d671e7da13f08c90642b1e71f800d9&amp;stat=instructions%3Au</a></p>",
        "id": 243792423,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243792129\">said</a>:</p>\n<blockquote>\n<p>So I had a question about this one. I think I’ve been ignoring a potential issue: We are managing the source code for several tools: rustfmt, clippy, etc, where those tools are tracking issues in a separate issue tracker, right?</p>\n</blockquote>\n<p>Just to finish my thought here: A concern I have is that different repos are likely to have different issue management policies: Different labels, different protocols for when to close an issue, etc</p>",
        "id": 243792506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544171
    },
    {
        "content": "<p>Is this a risk we need to worry about?</p>",
        "id": 243792545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544189
    },
    {
        "content": "<p>And if so, what is best way to mitigate that risk? Maybe to open parallel issues in rust-lang/rust when something is “important” enough that we would want to track it ourselves?</p>",
        "id": 243792593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544223
    },
    {
        "content": "<p>I’m thinking e.g. that if something warrants a beta backport, then it probably also warrants an issue in rust-lang/rust ?</p>",
        "id": 243792634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544242
    },
    {
        "content": "<p>Does this make sense? Or am I just making extra work for ourselves?</p>",
        "id": 243792675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544264
    },
    {
        "content": "<p>sounds reasonable to me</p>",
        "id": 243792700,
        "sender_full_name": "mw",
        "timestamp": 1624544275
    },
    {
        "content": "<p>Parallel issues seem like a not bad idea</p>",
        "id": 243792705,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544277
    },
    {
        "content": "<p>overhead, certainly</p>",
        "id": 243792755,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544286
    },
    {
        "content": "<p>do we have all of this written down somewhere?</p>",
        "id": 243792772,
        "sender_full_name": "mw",
        "timestamp": 1624544295
    },
    {
        "content": "<p>All of what?</p>",
        "id": 243792796,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544304
    },
    {
        "content": "<p>the protocols for what issues should be filed where?</p>",
        "id": 243792829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544318
    },
    {
        "content": "<p>\"processes\" like the one you proposed</p>",
        "id": 243792838,
        "sender_full_name": "mw",
        "timestamp": 1624544323
    },
    {
        "content": "<p>yup</p>",
        "id": 243792851,
        "sender_full_name": "mw",
        "timestamp": 1624544328
    },
    {
        "content": "<p>Oh I see</p>",
        "id": 243792856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544331
    },
    {
        "content": "<p>e.g. like how the prioritization team and/or rustbot manages labels</p>",
        "id": 243792878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544347
    },
    {
        "content": "<p>I suspect the info is probably spread out between forge and the rustc-dev guide</p>",
        "id": 243792913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544364
    },
    {
        "content": "<p>but I don’t know off top of head where “canonical” info is</p>",
        "id": 243792949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544377
    },
    {
        "content": "<p>anyway</p>",
        "id": 243792961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544387
    },
    {
        "content": "<p>maybe I’ll file an MCP for it or something</p>",
        "id": 243792983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544398
    },
    {
        "content": "<p>I just wanted to take peoples’ temperature on the matter</p>",
        "id": 243793042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544409
    },
    {
        "content": "<p>back to the specific backport nomination for <a href=\"https://github.com/rust-lang/rust/issues/86424\">rust#86424</a></p>",
        "id": 243793073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544423
    },
    {
        "content": "<p>what release was that injected in?</p>",
        "id": 243793103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243792705\">said</a>:</p>\n<blockquote>\n<p>Parallel issues seem like a not bad idea</p>\n</blockquote>\n<p>Oh, i see <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  actually transferred <a href=\"https://github.com/rust-lang/rustfmt/issues/4874\">rustfmt#4874</a> <em>from</em> rust-lang/cargo</p>",
        "id": 243793226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544497
    },
    {
        "content": "<p>1.53 I believe</p>",
        "id": 243793262,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544511
    },
    {
        "content": "<p>Okay</p>",
        "id": 243793339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544527
    },
    {
        "content": "<p>(it was filed &lt;24 hours before release)</p>",
        "id": 243793370,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544537
    },
    {
        "content": "<p>for now yeah lets say beta-approved</p>",
        "id": 243793372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544538
    },
    {
        "content": "<p>and we’ll leave the stable-backport question unaddressed for now, while it bakes more. Yes?</p>",
        "id": 243793455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544565
    },
    {
        "content": "<p>(Do we <em>put</em> a stable-backport nomination it, and just deign to not answer the Q yet? Or do we just leave the stable backport nomination un-filed?)</p>",
        "id": 243793538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544607
    },
    {
        "content": "<p>I'd just not bother</p>",
        "id": 243793565,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544615
    },
    {
        "content": "<p>Okay</p>",
        "id": 243793675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544656
    },
    {
        "content": "<p>(I’ll plan to open a rust-lang/rust issue for the bug itself, and tag it with 1.53. That way, the lack of a stable-nom won’t mean that we totally lose sight of the bug here itself.)</p>",
        "id": 243793743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544692
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 243793757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544702
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-libs\">T-libs stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-libs\">T-libs beta</a></p>\n<ul>\n<li>No nominations for <code>T-libs</code> this time.</li>\n</ul>",
        "id": 243793769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544708
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 243793792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544719
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 243793811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544731
    },
    {
        "content": "<ul>\n<li>\"Build aarch64-apple-ios-sim as part of the full macOS build\" <a href=\"https://github.com/rust-lang/rust/pull/85782\">rust#85782</a><ul>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> to indicate that MCP <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a> is waiting to be seconded</li>\n</ul>\n</li>\n</ul>",
        "id": 243793822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544738
    },
    {
        "content": "<p>mm, <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a> has been waiting since May 3rd</p>",
        "id": 243793875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544762
    },
    {
        "content": "<p>to be clear, I don't have any particular feeling of urgency here, the waiting-on-team is just the 'accurate' status</p>",
        "id": 243793943,
        "sender_full_name": "simulacrum",
        "timestamp": 1624544781
    },
    {
        "content": "<p>(which makes me realized: We should put dates on those summaries at the top. or ages in #days)</p>",
        "id": 243793945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544782
    },
    {
        "content": "<p>Its good to be reminded of it</p>",
        "id": 243793994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544813
    },
    {
        "content": "<p>I think I’ll just second <a href=\"https://github.com/rust-lang/compiler-team/issues/428\">compiler-team#428</a> now</p>",
        "id": 243794058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544846
    },
    {
        "content": "<p>promotion from Tier 3 to Tier 2 seems appropriate here.</p>",
        "id": 243794088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544862
    },
    {
        "content": "<p>the only issue I can imagine</p>",
        "id": 243794199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544896
    },
    {
        "content": "<p>is that MacOS is currently already our bottleneck, right?</p>",
        "id": 243794217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544905
    },
    {
        "content": "<p>is this going to make our existing bottleneck even longer?</p>",
        "id": 243794228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544915
    },
    {
        "content": "<p>(I know that’s probably more a question for the T-infra than T-compiler)</p>",
        "id": 243794252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544925
    },
    {
        "content": "<p>(but it still seems important to ask)</p>",
        "id": 243794264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544935
    },
    {
        "content": "<p>anyway I’m going to second</p>",
        "id": 243794319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624544953
    },
    {
        "content": "<p>or wait, do tier promotions require full team check off?</p>",
        "id": 243794477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545009
    },
    {
        "content": "<p>tier 3 to tier 2 does not, I believe</p>",
        "id": 243794528,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545033
    },
    {
        "content": "<blockquote>\n<p>A proposed new tier 2 target must be reviewed and approved by the compiler team based on these requirements. Such review and approval may occur via a Major Change Proposal (MCP).</p>\n</blockquote>",
        "id": 243794561,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545045
    },
    {
        "content": "<p>I don’t see a clearanswer in <a href=\"https://doc.rust-lang.org/nightly/rustc/target-tier-policy.html#tier-2-target-policy\">the RFC</a></p>",
        "id": 243794570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545048
    },
    {
        "content": "<p>an MCP can require full team checkoff though</p>",
        "id": 243794593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545057
    },
    {
        "content": "<p>ah, well, I think we can clarify that -- I believe the intent is that tier 2/3 is just a single team member</p>",
        "id": 243794650,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545088
    },
    {
        "content": "<p>okay</p>",
        "id": 243794656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545092
    },
    {
        "content": "<p>I'll put it on my todo to open an amendment PR</p>",
        "id": 243794670,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545101
    },
    {
        "content": "<p>next</p>",
        "id": 243794748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545124
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-libs\">T-libs</a></p>",
        "id": 243794762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545130
    },
    {
        "content": "<ul>\n<li>\"Show type for docs slice Chunks\" <a href=\"https://github.com/rust-lang/rust/pull/77938\">rust#77938</a><ul>\n<li>seems safe to merge?</li>\n<li>mentioning T-libs to get their attention on this (cc: <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span>)</li>\n</ul>\n</li>\n</ul>",
        "id": 243794773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545137
    },
    {
        "content": "<p>hmm, are docs changes an implementation detail, or an API one</p>",
        "id": 243794840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545172
    },
    {
        "content": "<p>this particular docs change seems truly innocuous</p>",
        "id": 243794873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545187
    },
    {
        "content": "<p>(and also not really something we need to spend time on here.)</p>",
        "id": 243794915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545202
    },
    {
        "content": "<ul>\n<li>\"core: add unstable no_floating_point to disable float formatting code\" <a href=\"https://github.com/rust-lang/rust/pull/86048\">rust#86048</a><ul>\n<li>A review from T-libs is in progress</li>\n</ul>\n</li>\n</ul>",
        "id": 243794931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545210
    },
    {
        "content": "<p>okay</p>",
        "id": 243795020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545243
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">5 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">4 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">81 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">54 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 0 P-high, 1 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-critical, 3 P-high, 2 P-medium, 0 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">2 P-critical, 49 P-high, 83 P-medium, 12 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 243795035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545252
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 243795052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545264
    },
    {
        "content": "<ul>\n<li>\"run-make-fulldeps/pgo-branch-weights fails on AArch64 Linux\" <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a><ul>\n<li>only fails on aarch64 arm</li>\n<li><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/78226#issuecomment-866299280\">comments</a> that tests for this are disabled but a fix for 1.54 would be good</li>\n</ul>\n</li>\n</ul>",
        "id": 243795071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545274
    },
    {
        "content": "<p>(Arguably as a tier 1 target, necessary)</p>",
        "id": 243795158,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545316
    },
    {
        "content": "<p>Can we assign this to jacobbramely ?</p>",
        "id": 243795172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545322
    },
    {
        "content": "<p>I don't think we have a clear line in the sand for yes/no</p>",
        "id": 243795178,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545324
    },
    {
        "content": "<p>I think that issue above deserves a longer discussion on the direction we'd like to take with desires like these. It seems to me that we've been doing a lot of ad-hoc \"this implementation makes most sense right now, any long term direction begone\" lately.</p>",
        "id": 243795205,
        "sender_full_name": "nagisa",
        "timestamp": 1624545341
    },
    {
        "content": "<p>(the no_floating_point one)</p>",
        "id": 243795225,
        "sender_full_name": "nagisa",
        "timestamp": 1624545351
    },
    {
        "content": "<p>Which seems in contradiction with our goal to make Rust a product (or whatever we called it) and less a research playground.</p>",
        "id": 243795398,
        "sender_full_name": "nagisa",
        "timestamp": 1624545417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> is there an easy way to collect the related changes that have been made?</p>",
        "id": 243795407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545423
    },
    {
        "content": "<p>or proposed?</p>",
        "id": 243795426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545429
    },
    {
        "content": "<p>I haven't been collecting these, but I do recall thinking this to myself at least twice this week.</p>",
        "id": 243795497,
        "sender_full_name": "nagisa",
        "timestamp": 1624545457
    },
    {
        "content": "<p>okay</p>",
        "id": 243795512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545466
    },
    {
        "content": "<p>Probably not the right place to discuss this right now.</p>",
        "id": 243795644,
        "sender_full_name": "nagisa",
        "timestamp": 1624545512
    },
    {
        "content": "<p>yeah, I was just wondering about how best to try to push forward a discussion</p>",
        "id": 243795671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545530
    },
    {
        "content": "<p>if someone wanted to own the topic, they could propose a steering meeting about it</p>",
        "id": 243795693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545540
    },
    {
        "content": "<p>but they’d have to e.g. prepare a doc</p>",
        "id": 243795703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545545
    },
    {
        "content": "<p>to drive the meeting</p>",
        "id": 243795711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545549
    },
    {
        "content": "<p>so I was privately wondering if a better first step</p>",
        "id": 243795731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545561
    },
    {
        "content": "<p>would be a way for people to collect instances of this phenonmenon as they encounter them</p>",
        "id": 243795765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545578
    },
    {
        "content": "<p>maybe a dedicated topic under #t-compiler ?</p>",
        "id": 243795776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545585
    },
    {
        "content": "<p>I think having a meeting about this is a great idea but we should also make sure the libs team is involved.</p>",
        "id": 243795793,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624545602
    },
    {
        "content": "<p>A zulip topic is the best idea I have at the moment. That, or a github meta-issue.</p>",
        "id": 243795864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545616
    },
    {
        "content": "<p>Either one risks being ignored/drowned out in noise of parallel activity</p>",
        "id": 243795905,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545638
    },
    {
        "content": "<p>but I don’t know how to address that</p>",
        "id": 243795917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545643
    },
    {
        "content": "<p>I do think on this specific issue, <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> makes a good point by asking \"I don't understand why this is needed: if you don't use f32/f64 in your code then the linker will see that the float formatting code is unreachable and will not link it in.\"</p>",
        "id": 243795980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545667
    },
    {
        "content": "<p>Anyway, lets bring discussion back to the P-critical bugs</p>",
        "id": 243796033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545694
    },
    {
        "content": "<p>i.e.  \"run-make-fulldeps/pgo-branch-weights fails on AArch64 Linux\" <a href=\"https://github.com/rust-lang/rust/issues/78226\">rust#78226</a></p>",
        "id": 243796050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545704
    },
    {
        "content": "<p>It needs an owner</p>",
        "id": 243796066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545712
    },
    {
        "content": "<p>I’ll ask jacobbramely on issue if they can own it</p>",
        "id": 243796120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545723
    },
    {
        "content": "<p>Sounds good</p>",
        "id": 243796127,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545728
    },
    {
        "content": "<p>from the description it seems to me that this kind of test is extremely arch specific and we'll need a copy for each architecture we have (and/or adjust the test for each arch, accordingly)</p>",
        "id": 243796183,
        "sender_full_name": "nagisa",
        "timestamp": 1624545758
    },
    {
        "content": "<p>no?</p>",
        "id": 243796206,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545768
    },
    {
        "content": "<p>this test should be pretty universal</p>",
        "id": 243796222,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545774
    },
    {
        "content": "<p>there's some linker bugs it sounds like, though</p>",
        "id": 243796236,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545781
    },
    {
        "content": "<p>okay lets keep moving</p>",
        "id": 243796461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545874
    },
    {
        "content": "<ul>\n<li>\"add back support for inner attributes on non-block expressions?\" <a href=\"https://github.com/rust-lang/rust/issues/84879\">rust#84879</a><ul>\n<li>addressed by PR <a href=\"https://github.com/rust-lang/rust/pull/85193\">#85193</a>, can be closed as it is merged</li>\n<li>so, can be closed now?</li>\n</ul>\n</li>\n</ul>",
        "id": 243796475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545883
    },
    {
        "content": "<p>oh this should be closed indeed, I think</p>",
        "id": 243796492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545890
    },
    {
        "content": "<p>unless we might add it back for more than just match ?</p>",
        "id": 243796526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545903
    },
    {
        "content": "<p>actually I think that is the point of the issue</p>",
        "id": 243796557,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545914
    },
    {
        "content": "<p>that we might want to re-add support</p>",
        "id": 243796567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545920
    },
    {
        "content": "<p>for broader class of blocks than what we re-added when we re-added match (which was just done to avoid 4 cases hit by crater run)</p>",
        "id": 243796630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545943
    },
    {
        "content": "<p>but then again, <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> said close <a href=\"https://github.com/rust-lang/rust/issues/84879\">#84879</a></p>",
        "id": 243796696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545963
    },
    {
        "content": "<p>heh</p>",
        "id": 243796709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545965
    },
    {
        "content": "<p>I guess I misremembered the outcome of that lang team meeting</p>",
        "id": 243796724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545975
    },
    {
        "content": "<p>okay yeah close it</p>",
        "id": 243796751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545984
    },
    {
        "content": "<p>closing</p>",
        "id": 243796754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545986
    },
    {
        "content": "<p>still needs a backport though?</p>",
        "id": 243796765,
        "sender_full_name": "simulacrum",
        "timestamp": 1624545990
    },
    {
        "content": "<p>Oh whoops</p>",
        "id": 243796781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624545995
    },
    {
        "content": "<p>thought that happened?</p>",
        "id": 243796786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546000
    },
    {
        "content": "<p>I guess it's accepted</p>",
        "id": 243796787,
        "sender_full_name": "simulacrum",
        "timestamp": 1624546001
    },
    {
        "content": "<p>No actual backport quite yet though</p>",
        "id": 243796822,
        "sender_full_name": "simulacrum",
        "timestamp": 1624546016
    },
    {
        "content": "<p>left a comment</p>",
        "id": 243796846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546025
    },
    {
        "content": "<p>good catch <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 243796854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546029
    },
    {
        "content": "<p>(probably need better procedure here. Some sort of rustbot automation, to signal intent and/or planned action once backport happens? hmm.)</p>",
        "id": 243796912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546058
    },
    {
        "content": "<ul>\n<li>\"Unstable fingerprints - what to do on beta (and stable)\" <a href=\"https://github.com/rust-lang/rust/issues/84970\">rust#84970</a><ul>\n<li>discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243024615\">last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> comments about addressing the <a href=\"https://github.com/rust-lang/rust/issues/85360\">sub-obligation</a> and <a href=\"https://github.com/rust-lang/rust/issues/84963\">the overflow</a> issues, other than those all known issues are fixed</li>\n<li>@<strong>estebank</strong> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243025573\">offered to have a look</a></li>\n</ul>\n</li>\n</ul>",
        "id": 243797032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546091
    },
    {
        "content": "<p>Question on this</p>",
        "id": 243797104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546122
    },
    {
        "content": "<p>with things as they stand <em>right now</em>, i.e. with the still remaining issues with sub-obligation and overflow</p>",
        "id": 243797140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546135
    },
    {
        "content": "<p>I'm working on a fix for the overflow issue (query-ifying the various 'limits')</p>",
        "id": 243797150,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624546140
    },
    {
        "content": "<p>would we ship 1.54 ...</p>",
        "id": 243797162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546143
    },
    {
        "content": "<p>… with incr-comp turned back on by default?</p>",
        "id": 243797179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546150
    },
    {
        "content": "<p>from what I understand about the sub-obligation and overflow issues</p>",
        "id": 243797272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546191
    },
    {
        "content": "<p>I would say we would turn incr-comp back on</p>",
        "id": 243797284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546198
    },
    {
        "content": "<p>(And I want to know about strong objections to that viewpoint)</p>",
        "id": 243797442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546246
    },
    {
        "content": "<p>having said that</p>",
        "id": 243797481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546258
    },
    {
        "content": "<p>lets plan on getting fixes in and maybe even backported</p>",
        "id": 243797510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546268
    },
    {
        "content": "<p>:)</p>",
        "id": 243797515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546270
    },
    {
        "content": "<p>I'm also in favor of turning it back on but I would like to point to a user report I saw earlier this week that said they are still running into issues consistently on nightly <a href=\"https://www.reddit.com/r/rust/comments/o5k3p2/should_fixing_incremental_compilation_be_our_1/h2n0f08?utm_source=share&amp;utm_medium=web2x&amp;context=3\">https://www.reddit.com/r/rust/comments/o5k3p2/should_fixing_incremental_compilation_be_our_1/h2n0f08?utm_source=share&amp;utm_medium=web2x&amp;context=3</a></p>",
        "id": 243797560,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624546292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you want <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> to try to assist?</p>",
        "id": 243797563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546293
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-24.20.2354818/near/243797560\">said</a>:</p>\n<blockquote>\n<p>I'm also in favor of turning it back on but I would like to point to a user report I saw earlier this week that said they are still running into issues consistently on nightly <a href=\"https://www.reddit.com/r/rust/comments/o5k3p2/should_fixing_incremental_compilation_be_our_1/h2n0f08?utm_source=share&amp;utm_medium=web2x&amp;context=3\">https://www.reddit.com/r/rust/comments/o5k3p2/should_fixing_incremental_compilation_be_our_1/h2n0f08?utm_source=share&amp;utm_medium=web2x&amp;context=3</a></p>\n</blockquote>\n<p>that is useful</p>",
        "id": 243797592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546311
    },
    {
        "content": "<p>gilescope still needs to get back to you with an example, right?</p>",
        "id": 243797711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546347
    },
    {
        "content": "<p>Yeah</p>",
        "id": 243797723,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624546351
    },
    {
        "content": "<p>okay</p>",
        "id": 243797729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546354
    },
    {
        "content": "<p>we should try to get them to give us a macro-example too</p>",
        "id": 243797736,
        "sender_full_name": "simulacrum",
        "timestamp": 1624546359
    },
    {
        "content": "<p>like, without minifying</p>",
        "id": 243797755,
        "sender_full_name": "simulacrum",
        "timestamp": 1624546367
    },
    {
        "content": "<p>I can follow-up on that</p>",
        "id": 243797770,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624546375
    },
    {
        "content": "<p>Maybe follow-up with gilescope early next week if they haven’t responded by that time.</p>",
        "id": 243797780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546380
    },
    {
        "content": "<p>(or just ask for a macro-example now, that’s a good option too.)</p>",
        "id": 243797802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546393
    },
    {
        "content": "<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>updates about this one and the following one discussed <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-06-17.20.2354818/near/243024615\">last week</a></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> mentioned updating these issues</li>\n</ul>\n</li>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>see previous one</li>\n</ul>\n</li>\n</ul>",
        "id": 243797831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546413
    },
    {
        "content": "<p>I keep forgetting about these two</p>",
        "id": 243797875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546437
    },
    {
        "content": "<p>I don’t know their current status</p>",
        "id": 243798024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546487
    },
    {
        "content": "<p>and it will take too long to reconstruct it now</p>",
        "id": 243798050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546496
    },
    {
        "content": "<p>so I’m going to move on</p>",
        "id": 243798059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546501
    },
    {
        "content": "<p>(with sadness)</p>",
        "id": 243798071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546506
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-libs\">T-libs</a></p>\n<ul>\n<li>\"iter::Fuse is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85863\">rust#85863</a><ul>\n<li>see above</li>\n</ul>\n</li>\n<li>\"TrustedRandomAccess optimization for Zip containing vec::IntoIter is unsound with how specialization currently behaves around HRTB fn pointers\" <a href=\"https://github.com/rust-lang/rust/issues/85873\">rust#85873</a><ul>\n<li>see above</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 243798093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546513
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 243798112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546520
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>",
        "id": 243798134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546526
    },
    {
        "content": "<ul>\n<li>\"Apple platforms: Disabled frame pointer elimination causes perf issues and is not in line with what clang does\" <a href=\"https://github.com/rust-lang/rust/issues/86196\">rust#86196</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"407656\">@Hans Kratz</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/86196#issuecomment-860443448\">mild perf regression</a> on target Apple with disabled frame pointer elimination (clang default on macOS: <code>frame-pointer=\"no-leaf\"\"</code>, in Rust nightly became <code>frame-pointer=\"all\"</code>) along with an increase in binary size</li>\n<li>needs an owner but not so a pressing issue (see <a href=\"https://github.com/rust-lang/rust/issues/86196#issuecomment-860443448\">comment</a>: \"while using <code>\"frame-pointer\"=\"non-leaf\"</code> on Macos is generally a good idea since it has the potential to affect performance in rare cases it is not as urgent.\")</li>\n</ul>\n</li>\n</ul>",
        "id": 243798146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546534
    },
    {
        "content": "<p>This is probably pretty easy to fix.</p>",
        "id": 243798271,
        "sender_full_name": "nagisa",
        "timestamp": 1624546574
    },
    {
        "content": "<p>(I’d like this to have an owner but I’d ratehr keep moving right now)</p>",
        "id": 243798288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546576
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">triage logs for 2021-06-23</a></p>\n</blockquote>\n<p>A few small regressions on smaller benchmarks (e.g., helloworld), likely centered around more IR being generated in a few cases.</p>\n<p>Triage done by <strong>@simulacrum</strong>. 2 Regressions, 1 Improvements, 0 Mixed, 1 of them in rollups</p>",
        "id": 243798305,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546583
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Rollup of 6 pull requests <a href=\"https://github.com/rust-lang/rust/issues/86417\">#86417</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=149f4836dd6d9e789a26dca16dc034588866894e&amp;end=a6bc43ea846ee568ef4e890d4ac2a4cc03475bfc&amp;stat=instructions:u\">instruction counts</a> (up to 2.0% on <code>incr-unchanged</code> builds of <code>helloworld-opt</code>)</li>\n<li>Not really clear what the cause here is, but the regression is concentrated on<br>\n  small benchmarks.</li>\n</ul>\n<p>Change entry point to <span aria-label=\"shield\" class=\"emoji emoji-1f6e1\" role=\"img\" title=\"shield\">:shield:</span>️ against <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span> <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span>-payloads <a href=\"https://github.com/rust-lang/rust/issues/86034\">#86034</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=29cd70d40722930e66a8b726fe58a7bd1d64a22b&amp;end=6b354a13820a444f834a33365ae4a8d97d7d27ce&amp;stat=instructions:u\">instruction counts</a> (up to 4.5% on <code>incr-full</code> builds of <code>helloworld-opt</code>)</li>\n<li>Seems to be more code getting generated into binaries, leading to<br>\n  regressions on the smaller benchmarks.</li>\n</ul>",
        "id": 243798328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546593
    },
    {
        "content": "<p>my eyes those emojis</p>",
        "id": 243798359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546605
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>optimize Eq implementation for paths <a href=\"https://github.com/rust-lang/rust/issues/86179\">#86179</a></li>\n</ul>",
        "id": 243798372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546612
    },
    {
        "content": "<h4>Nags requiring follow up</h4>\n<p>Backlog:</p>\n<ul>\n<li>Follow up on regression in <a href=\"https://github.com/rust-lang/rust/pull/85343#issuecomment-856819536\">#85343</a></li>\n</ul>",
        "id": 243798384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you have anything to add re: <a href=\"https://github.com/rust-lang/rust/issues/85343\">#85343</a> ?</p>",
        "id": 243798518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546666
    },
    {
        "content": "<p>I haven't had time to look at that yet - I can do so this weekend</p>",
        "id": 243798642,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1624546695
    },
    {
        "content": "<p>I’m inclined to assume \"It looks like this is just tracking more information, so presumably the regression is mostly unavoidable?” is true.</p>",
        "id": 243798670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546709
    },
    {
        "content": "<p>But if you have time to double check, it would be good.</p>",
        "id": 243798709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546716
    },
    {
        "content": "<h2>Nominated Issues</h2>",
        "id": 243798744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546731
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>No <code>I-nominated</code> for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 243798753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546736
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+label%3AI-nominated+-label%3AT-compiler+-label%3AT-lang+-label%3AT-rustdoc\">T-libs</a></p>",
        "id": 243798780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546743
    },
    {
        "content": "<ul>\n<li>\"Remove P: Unpin bound on impl Future for Pin\" <a href=\"https://github.com/rust-lang/rust/pull/81363\">rust#81363</a><ul>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> </li>\n<li>nominated by <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby</span></li>\n</ul>\n</li>\n</ul>",
        "id": 243798792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546750
    },
    {
        "content": "<p>(I think at this point giving this visibility is most important thing)</p>",
        "id": 243798895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546788
    },
    {
        "content": "<ul>\n<li>\"core: add unstable no_floating_point to disable float formatting code\" <a href=\"https://github.com/rust-lang/rust/pull/86048\">rust#86048</a><ul>\n<li>see <code>S-waiting-on-team</code></li>\n</ul>\n</li>\n</ul>",
        "id": 243798913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546793
    },
    {
        "content": "<p>(we already discussed, and as <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> noted, there may be a meta-topic here worth broad discussion.)</p>",
        "id": 243799011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546815
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 243799023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546819
    },
    {
        "content": "<p>Just under the wire</p>",
        "id": 243799028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546822
    },
    {
        "content": "<p>Okay thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!!!</p>",
        "id": 243799048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546831
    },
    {
        "content": "<p>O(h oh oh!</p>",
        "id": 243799097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546851
    },
    {
        "content": "<p>One last thing!!!!</p>",
        "id": 243799110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and  I wanted to let you all know</p>",
        "id": 243799166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546876
    },
    {
        "content": "<p>that <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> has told us that they need to withdraw from T-compiler, in order to focus on their PhD studies</p>",
        "id": 243799203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546892
    },
    {
        "content": "<p>and we want to give <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>  a <strong>huge</strong> \"thank you” for their contributions to the compiler and to the team</p>",
        "id": 243799272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546920
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> does plan to continue contributing, and so we are moving them to compiler-contributors (as well as T-compiler alum)</p>",
        "id": 243799340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1624546938
    },
    {
        "content": "<p>while the meeting credits roll -  thanks <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> for driving the meeting - as you always do :-)</p>",
        "id": 243799721,
        "sender_full_name": "apiraino",
        "timestamp": 1624547085
    },
    {
        "content": "<p>Yeah, as Felix said, they've been a really great contributor to the compiler and the project as a whole, so <strong>thank you</strong> and best wishes with the PhD <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>!</p>",
        "id": 243799762,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1624547102
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/zhv96UdPQI-HI9BlW0XuTw?view\">https://hackmd.io/zhv96UdPQI-HI9BlW0XuTw?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1175\">@WG-rfc-2229</span>  by <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>  by <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></li>\n</ul>",
        "id": 243808543,
        "sender_full_name": "apiraino",
        "timestamp": 1624550791
    }
]