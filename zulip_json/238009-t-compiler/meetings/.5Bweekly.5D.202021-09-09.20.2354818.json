[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will take place in about 2h<br>\n<em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a> and prepared the <a href=\"https://hackmd.io/c-I7gxx4SK2eudQgwruuJw?view\">meeting agenda</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span>  by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>: anything to share?</li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>  by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>: anything to share?</li>\n</ul>",
        "id": 252613359,
        "sender_full_name": "apiraino",
        "timestamp": 1631189122
    },
    {
        "content": "<p>There was recently a bump to <a href=\"https://github.com/rust-lang/rust/pull/87570\">LLVM 13</a>, with all of the associated fallout and fixes. There's also an effort to enable the <a href=\"https://github.com/rust-lang/rust/pull/88243\">new pass manager by default</a>. This pass manager takes a different tradeoff between space and time, and as a result rustc would use more memory but also optimize code faster.</p>\n<p>In some other news:</p>\n<ul>\n<li>we're considering using the <code>object</code> crate in more places to replace some artifact writing functionality we currently use from LLVM.</li>\n<li>The work towards type-less pointer support has largely happened to the extent it is enabled by LLVM 13.</li>\n<li>Support for LLVM 10 will likely be dropped in the near future, making LLVM 11 the oldest supported version.</li>\n</ul>",
        "id": 252616491,
        "sender_full_name": "nagisa",
        "timestamp": 1631190520
    },
    {
        "content": "<blockquote>\n<p>Support for LLVM 10 will likely be dropped in the near future, making LLVM 11 the oldest supported version.</p>\n</blockquote>\n<p>curious to hear why? I don't have a stake in the game, just curious what makes old versions hard to support</p>",
        "id": 252616628,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631190594
    },
    {
        "content": "<p>We generally tend to not spend unnecessary effort on maintaining LLVM versions older than what was requested of us. The requests generally tend to come from downstream distributions and is typically 2 or 3 past versions.</p>",
        "id": 252616926,
        "sender_full_name": "nagisa",
        "timestamp": 1631190717
    },
    {
        "content": "<p>If there's a motivating use-case for us to keep maintaining LLVM 10 support, we probably wouldn't mind too much doing so, but only as long as there's an understanding that such support is not indefinite and will still get dropped sometime down the line.</p>",
        "id": 252617088,
        "sender_full_name": "nagisa",
        "timestamp": 1631190792
    },
    {
        "content": "<p>From my perspective, the pass manager stuff is probably going to be the primary motivator for dropping versions below 13 in the future.</p>",
        "id": 252617274,
        "sender_full_name": "nagisa",
        "timestamp": 1631190864
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ! Weekly triage meeting starting now!</p>",
        "id": 252630729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196105
    },
    {
        "content": "<p>ooops, I should have noted: Lets start off with some</p>\n<h2>Announcements</h2>",
        "id": 252631487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196390
    },
    {
        "content": "<ul>\n<li><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> Today 9/9th, release Rust stable 1.55 <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 252631504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196401
    },
    {
        "content": "<h2>MCPs/FCPs</h2>",
        "id": 252631555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196423
    },
    {
        "content": "<p>Announcement: I think it would be a good time to make the new symbol mangling scheme the default. Would anyone be interested in taking charge of that? (<span class=\"user-mention\" data-user-id=\"352985\">@tm</span> maybe?)</p>",
        "id": 252631562,
        "sender_full_name": "mw",
        "timestamp": 1631196424
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you mean as part of the 1.57 nightlies?</p>",
        "id": 252631606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196446
    },
    {
        "content": "<p>Yes</p>",
        "id": 252631625,
        "sender_full_name": "mw",
        "timestamp": 1631196453
    },
    {
        "content": "<h2>MCPs/FCPs</h2>\n<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>No new proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 252631652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196464
    },
    {
        "content": "<p>Right now the implementation supports everything we need</p>",
        "id": 252631654,
        "sender_full_name": "mw",
        "timestamp": 1631196464
    },
    {
        "content": "<p>i.e. const generics work, etc</p>",
        "id": 252631755,
        "sender_full_name": "mw",
        "timestamp": 1631196487
    },
    {
        "content": "<p>One more announcement:</p>\n<ul>\n<li>Bootstrap compiler bump on master landed last night, bringing a beta built with LLVM PGO'd on x86_64-unknown-linux-gnu. perf.r-l.o measures this as roughly a 15% improvement in bootstrap (stage 0) compilation time, but your builds should get a little faster. This was merged in <a href=\"https://github.com/rust-lang/rust/issues/88069\">#88069</a>, and you can also glance at the <a href=\"https://perf.rust-lang.org/compare.html?start=0afc20860eb98a29d9bbeea80f2acc5be38c6bf3&amp;end=c4be230b4a30eb74e3a3908455731ebc2f731d3d&amp;stat=wall-time\">wall clock performance results for that PR</a>.</li>\n</ul>",
        "id": 252631779,
        "sender_full_name": "simulacrum",
        "timestamp": 1631196495
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252631562\">said</a>:</p>\n<blockquote>\n<p>Announcement: I think it would be a good time to make the new symbol mangling scheme the default. Would anyone be interested in taking charge of that? (<span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> maybe?)</p>\n</blockquote>\n<p>There’s already a tracking issue for it, right? I’m debating how much structure we want (e.g. a separate MCP) for making it the default</p>",
        "id": 252631832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196524
    },
    {
        "content": "<p>(versus just a stabilization report and FCP on the tracking issue … ?)</p>",
        "id": 252631866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196540
    },
    {
        "content": "<p>we already have an RFC, so I think an FCP would suffice</p>",
        "id": 252631883,
        "sender_full_name": "mw",
        "timestamp": 1631196548
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat \"stable\"?\" <a href=\"https://github.com/rust-lang/compiler-team/issues/403\">compiler-team#403</a> (last comment: GH none, Zulip: none)</li>\n<li>\"CI should exercise (subset of) tests under --stage 1\" <a href=\"https://github.com/rust-lang/compiler-team/issues/439\">compiler-team#439</a> (last comment: GH  20d ago, Zulip: 1w ago)</li>\n<li>\"Accept <code>pc</code> in place of <code>unknown</code> and <code>unknown</code> in place of <code>pc</code> for <code>x86_64</code> and <code>i?86</code> targets\" <a href=\"https://github.com/rust-lang/compiler-team/issues/441\">compiler-team#441</a> (last comment: 2 months ago)</li>\n<li>\"Non exhaustive reachable patterns lint\" <a href=\"https://github.com/rust-lang/compiler-team/issues/445\">compiler-team#445</a> (last comment: GH none, Zulip about a month ago)</li>\n<li>\"Add <code>TyKind::Const</code> and remove <code>GenericArgKind::Const</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/453\">compiler-team#453</a> (last comment: GH None, Zulip about 2 weeks ago)</li>\n<li>\"prefer-dynamic=subset\" <a href=\"https://github.com/rust-lang/compiler-team/issues/455\">compiler-team#455</a> (last comment: GH none, Zulip 2 days ago)</li>\n</ul>\n</li>\n</ul>",
        "id": 252631958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196583
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"Write text output files to stdout if options like <code>-o -</code> or <code>--emit asm=-</code> are provided\" <a href=\"https://github.com/rust-lang/compiler-team/issues/431\">compiler-team#431</a></li>\n</ul>\n</li>\n</ul>",
        "id": 252631977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196589
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Add <code>TerminatorKind::Box</code> to MIR\" <a href=\"https://github.com/rust-lang/compiler-team/issues/460\">compiler-team#460</a></li>\n</ul>\n</li>\n</ul>",
        "id": 252631992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196599
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>\"Transfer <code>rustc-demangle</code> to the @rust-lang GitHub org.\" <a href=\"https://github.com/rust-lang/compiler-team/issues/456\">compiler-team#456</a> </li>\n<li>\"Add the <code>-Z randomize-layout</code> flag\" <a href=\"https://github.com/rust-lang/compiler-team/issues/457\">compiler-team#457</a> </li>\n<li>\"Add <code>m68k-unknown-linux-gnu</code> as new Tier 3 backend\" <a href=\"https://github.com/rust-lang/compiler-team/issues/458\">compiler-team#458</a></li>\n</ul>\n</li>\n</ul>",
        "id": 252632048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196609
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>\"Stabilize \"force warn\" option \" <a href=\"https://github.com/rust-lang/rust/issues/86516\">rust#86516</a> </li>\n<li>\"Support <code>#[track_caller]</code> on closures and generators\" <a href=\"https://github.com/rust-lang/rust/pull/87064\">rust#87064</a> </li>\n<li>\"stabilize disjoint capture in closures (RFC 2229)\" <a href=\"https://github.com/rust-lang/rust/issues/88126\">rust#88126</a> </li>\n<li>\"Stabilize reserved prefixes\" <a href=\"https://github.com/rust-lang/rust/issues/88140\">rust#88140</a></li>\n</ul>\n</li>\n</ul>",
        "id": 252632067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196616
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252631779\">said</a>:</p>\n<blockquote>\n<p>One more announcement:</p>\n<ul>\n<li>Bootstrap compiler bump on master landed last night, bringing a beta built with LLVM PGO'd on x86_64-unknown-linux-gnu. perf.r-l.o measures this as roughly a 15% improvement in bootstrap (stage 0) compilation time, but your builds should get a little faster. This was merged in <a href=\"https://github.com/rust-lang/rust/issues/88069\">#88069</a>, and you can also glance at the <a href=\"https://perf.rust-lang.org/compare.html?start=0afc20860eb98a29d9bbeea80f2acc5be38c6bf3&amp;end=c4be230b4a30eb74e3a3908455731ebc2f731d3d&amp;stat=wall-time\">wall clock performance results for that PR</a>.</li>\n</ul>\n</blockquote>\n<p>Isn’t there some meme that goes along the lines of “huge, if true” ?</p>",
        "id": 252632342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196723
    },
    {
        "content": "<p>anyway that’s my reaction. :)</p>",
        "id": 252632435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196755
    },
    {
        "content": "<p>or just “this is huge.\"</p>",
        "id": 252632456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196767
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 252632483,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196780
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3282\">@wg-incr-comp</span> by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> (<a href=\"https://hackmd.io/QCs_hIbpTbKgcSy-0V0Liw\">previous checkin</a>):</p>\n<blockquote>\n<p>On 20 Aug, wesleywiser mw and pnkfelix met with cjgillot to discuss PR <a href=\"https://github.com/rust-lang/rust/issues/84373\">#84373</a><br>\nIt was productive in getting things unblocked, and we hope to have more meetings and progress in the future.</p>\n</blockquote>",
        "id": 252632509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196790
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> by <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> (<a href=\"https://hackmd.io/QCs_hIbpTbKgcSy-0V0Liw\">previous checkin</a>):</p>\n<blockquote>\n<p>There was recently a bump to <a href=\"https://github.com/rust-lang/rust/pull/87570\">LLVM 13</a>, with all of the associated fallout and fixes. There's also an effort to enable the <a href=\"https://github.com/rust-lang/rust/pull/88243\">new pass manager by default</a>. This pass manager takes a different tradeoff between space and time, and as a result rustc would use more memory but also optimize code faster.<br>\nIn some other news:</p>\n<ul>\n<li>we're considering using the <code>object</code> crate in more places to replace some artifact writing functionality we currently use from LLVM.</li>\n<li>The work towards type-less pointer support has largely happened to the extent it is enabled by LLVM 13.</li>\n<li>Support for LLVM 10 will likely be dropped in the near future, making LLVM 11 the oldest supported version.</li>\n</ul>\n</blockquote>",
        "id": 252632541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196804
    },
    {
        "content": "<h2>Backport nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler beta</a></p>",
        "id": 252632593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196825
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Preserve most sub-obligations in the projection cache\" <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a><ul>\n<li>Team is inclined to r+ this, perf regressions are already triaged (necessary for correctness)</li>\n<li><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251720629\">commented last week</a> that the code needs a comment</li>\n</ul>\n</li>\n</ul>",
        "id": 252632614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196833
    },
    {
        "content": "<p>Is this going to end up in the beta anyway?</p>",
        "id": 252632820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196910
    },
    {
        "content": "<p>the one that’s being cut now? <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^</p>",
        "id": 252632848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196919
    },
    {
        "content": "<p>Anyway, if it weren’t already in the beta being cut, then I’d probably push for it to be beta approved</p>",
        "id": 252632977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631196967
    },
    {
        "content": "<p>no, future beta</p>",
        "id": 252633039,
        "sender_full_name": "simulacrum",
        "timestamp": 1631196998
    },
    {
        "content": "<p>so if you would object to that, speak up. But otherwise, lets move along (and plan to mark it as beta-accepted; we can figure out whether its already in the newly-cut beta asynchronously).</p>",
        "id": 252633043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252633039\">said</a>:</p>\n<blockquote>\n<p>no, future beta</p>\n</blockquote>\n<p>okay</p>",
        "id": 252633068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197011
    },
    {
        "content": "<p>er, well, it landed into 1.56 already</p>",
        "id": 252633098,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197022
    },
    {
        "content": "<p>that’s what I mean</p>",
        "id": 252633108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197028
    },
    {
        "content": "<p>so I guess it is in current beta</p>",
        "id": 252633109,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197028
    },
    {
        "content": "<p>yeah</p>",
        "id": 252633116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197030
    },
    {
        "content": "<p>future beta, but the beta that’s already cut</p>",
        "id": 252633142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197042
    },
    {
        "content": "<p>or current beta</p>",
        "id": 252633151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197045
    },
    {
        "content": "<p>okay</p>",
        "id": 252633160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197048
    },
    {
        "content": "<p>(I’m never 100% clear of the timing of when promotion from nightly to beta happens)</p>",
        "id": 252633195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197061
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"2229: Don't move out of drop type\" <a href=\"https://github.com/rust-lang/rust/pull/88477\">rust#88477</a> <ul>\n<li>Fixes <a href=\"https://github.com/rust-lang/rust/issues/88476\">rust#88476</a> (Rust 2021 related)</li>\n<li>reviewed by <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88477#issuecomment-912577175\">approved by all team members</a></li>\n</ul>\n</li>\n</ul>",
        "id": 252633238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197077
    },
    {
        "content": "<p>this did get approval from lang team</p>",
        "id": 252633422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197141
    },
    {
        "content": "<p>but I’m not 100% clear on one point: There was urgency due to Rust 2021 edition timeline</p>",
        "id": 252633481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197163
    },
    {
        "content": "<p>and that edition is associated with Rust version 1.56, right?</p>",
        "id": 252633511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197176
    },
    {
        "content": "<p>Correct, yes</p>",
        "id": 252633543,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197187
    },
    {
        "content": "<p>if this isn't backported we'll need a longer discussion about what to do about the edition timeline, I think</p>",
        "id": 252633600,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197202
    },
    {
        "content": "<p>I'm not sure, but I believe it would then become a breaking change to stabilize in 1.56</p>",
        "id": 252633654,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197215
    },
    {
        "content": "<p>okay. It looks like we have general approval amongst people here</p>",
        "id": 252633669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197219
    },
    {
        "content": "<p>and the lang team laready approved, as previously mentioned</p>",
        "id": 252633714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197236
    },
    {
        "content": "<p>so I think the way to go is to beta-accept this. The only question in my mind is whether to do the beta-backport right away</p>",
        "id": 252633758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197254
    },
    {
        "content": "<p>or to first let this bake for a week in nightly</p>",
        "id": 252633774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197263
    },
    {
        "content": "<p>since it only landed last night</p>",
        "id": 252633793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197269
    },
    {
        "content": "<p>I’m personally okay with it landing in beta soon, no need to artificially delay</p>",
        "id": 252633875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197304
    },
    {
        "content": "<p>So lets go with that plan unless someone raises an objection.</p>",
        "id": 252633968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197326
    },
    {
        "content": "<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Fix 2021 <code>dyn</code> suggestion that used code as label\" <a href=\"https://github.com/rust-lang/rust/pull/88657\">rust#88657</a><ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> </li>\n<li>assigned for review to <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span></li>\n</ul>\n</li>\n</ul>",
        "id": 252633994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197336
    },
    {
        "content": "<p>I doubt we'll get a round of backports that quickly anyway :)</p>",
        "id": 252633996,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197336
    },
    {
        "content": "<p>Might be good to get it into beta sooner than later. I'm not sure when we do crater runs but it would be good to include it in that.</p>",
        "id": 252634016,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197345
    },
    {
        "content": "<p>hi</p>",
        "id": 252634046,
        "sender_full_name": "Mara",
        "timestamp": 1631197358
    },
    {
        "content": "<p>okay so the scoop with <a href=\"https://github.com/rust-lang/rust/issues/88657\">rust#88657</a> is that its another PR that is relevant to the 2021 edition, seems to me</p>",
        "id": 252634136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197400
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>impl&lt;T&gt; dyn Foo&lt;T&gt; {\n    fn hi(_x: T)  {}\n}\n</code></pre></div>\n<p>What does this do?</p>",
        "id": 252634204,
        "sender_full_name": "mw",
        "timestamp": 1631197424
    },
    {
        "content": "<p>an impl block for the type <code>dyn Foo&lt;T&gt;</code>. it's a bit uncommon, but <code>dyn Foo&lt;T&gt;</code> is just a type</p>",
        "id": 252634309,
        "sender_full_name": "Mara",
        "timestamp": 1631197451
    },
    {
        "content": "<p>interesting :)</p>",
        "id": 252634338,
        "sender_full_name": "mw",
        "timestamp": 1631197463
    },
    {
        "content": "<p>Looks like it only affects error diagnostic output. It's a small change and well targeted so I'd say <span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span></p>",
        "id": 252634462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252634136\">said</a>:</p>\n<blockquote>\n<p>okay so the scoop with <a href=\"https://github.com/rust-lang/rust/issues/88657\">rust#88657</a> is that its another PR that is relevant to the 2021 edition, seems to me</p>\n</blockquote>\n<p>I think this goes into same bucket as <a href=\"https://github.com/rust-lang/rust/issues/88477\">rust#88477</a>.</p>",
        "id": 252634469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197508
    },
    {
        "content": "<p>so there will be a bunch more PRs this beta cycle that are like this. not very critical papercuts with the edition. backporting this one seems fine, but might be worth thinking about the backport policy for edition stuff in general.</p>",
        "id": 252634487,
        "sender_full_name": "Mara",
        "timestamp": 1631197516
    },
    {
        "content": "<p>(perhaps not as urgent, but like <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> said: Its a small change  and  well-targetted.)</p>",
        "id": 252634540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> you think we’re going to get a lot of paper-cuts that need fixing?</p>",
        "id": 252634577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197551
    },
    {
        "content": "<p>if so, we may indeed want to schedule time to discuss the edition timeline</p>",
        "id": 252634644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197565
    },
    {
        "content": "<p>as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> alluded to above.</p>",
        "id": 252634664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197574
    },
    {
        "content": "<p>i know of at least two more. and that's before we have gotten any feedback from people who started using the edition on beta.</p>",
        "id": 252634689,
        "sender_full_name": "Mara",
        "timestamp": 1631197586
    },
    {
        "content": "<p>but given how everyone has been putting in so much effort to get the edition out the door on time, I’m hoping that we can stick with our established timeline</p>",
        "id": 252634721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197603
    },
    {
        "content": "<p>yeah, i doubt anything big will come up.</p>",
        "id": 252634811,
        "sender_full_name": "Mara",
        "timestamp": 1631197635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> who are the stakeholders that you think should be part of any conversation regarding revisions to edition timeline? T-release? T-core? T-libs?</p>",
        "id": 252634860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197654
    },
    {
        "content": "<p>For me personally, I'm happy to take paper-cut fixes for edition things as beta backports, especially if they are as targeted as this one. However, I think as we get closer to release, the bar also raises. If this was a week before release, I'm not sure it would be worth the possibility of destabilizing to take this kind of change.</p>",
        "id": 252634997,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197691
    },
    {
        "content": "<p>this is not a bug that would delay the edition. if it's not backported, we'd still be happy to have the edition stable in 1.56. it's just nice if there's fewer papercuts with the diagnostics at that point</p>",
        "id": 252635095,
        "sender_full_name": "Mara",
        "timestamp": 1631197718
    },
    {
        "content": "<p>T-release</p>",
        "id": 252635168,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197741
    },
    {
        "content": "<p>The beta is only out now. We’ll probably be in a better position to evaluate after people have a chance to play with the new edition. (That’s of course assuming that people actually play with the edition via the beta, which may itself be a ridiculous assumption given our past investigations of e.g. the incr-comp bug.)</p>",
        "id": 252635216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197758
    },
    {
        "content": "<p>but it's more of a heads up thing, ultimately, if it slips seems not <em>terrible</em>, but I don't expect it to at this point</p>",
        "id": 252635219,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252635219\">said</a>:</p>\n<blockquote>\n<p>but it's more of a heads up thing, ultimately, if it slips seems not <em>terrible</em>, but I don't expect it to at this point</p>\n</blockquote>\n<p>same here. Okay great.</p>",
        "id": 252635252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197769
    },
    {
        "content": "<p>So it sounds like we’re good on backporting <a href=\"https://github.com/rust-lang/rust/issues/88657\">rust#88657</a>, in any case.</p>",
        "id": 252635303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197785
    },
    {
        "content": "<ul>\n<li>No stable nominations for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 252635341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197799
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc stable</a> / <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc beta</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 252635390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197804
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Perform type inference in range pattern\" <a href=\"https://github.com/rust-lang/rust/pull/88090\">rust#88090</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span></li>\n<li>fixes <a href=\"https://github.com/rust-lang/rust/issues/88074\">rust#88074</a></li>\n<li><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> left some comments</li>\n<li><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> <a href=\"https://github.com/rust-lang/rust/pull/88090#issuecomment-914580827\">I-nominated</a> for <code>T-lang</code></li>\n</ul>\n</li>\n</ul>",
        "id": 252635409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197812
    },
    {
        "content": "<p>After Mara's triaging in the last couple of weeks, I expect there to be very few of these papercuts and don't envision any of them to be blockers.</p>",
        "id": 252635422,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631197817
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/88090\">rust#88090</a> is waiting on T-lang, not T-compiler</p>",
        "id": 252635498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197840
    },
    {
        "content": "<p>so we can move along</p>",
        "id": 252635502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197842
    },
    {
        "content": "<p>Correct</p>",
        "id": 252635521,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631197849
    },
    {
        "content": "<h3>Oldest PRs waiting for review</h3>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-asc+label%3AS-waiting-on-review+draft%3Afalse+label%3AT-compiler\">T-compiler</a></p>",
        "id": 252635561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197861
    },
    {
        "content": "<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last comment: 3 months ago)<ul>\n<li>Question from <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span>: why people from wg-triage have been removing and adding <code>S-waiting-for-review</code> for the last 2 months? Is it meant to emit a \"ping\" reminder?</li>\n</ul>\n</li>\n</ul>",
        "id": 252635592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197870
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3132\">@WG-triage</span> ^ ?</p>",
        "id": 252635628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197883
    },
    {
        "content": "<p>I think that's part of their workflow to keep track of which PRs they've looked but I don't know the specifics.</p>",
        "id": 252635716,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197912
    },
    {
        "content": "<p>From what I understand, that is indeed what readding labels is for</p>",
        "id": 252635722,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631197913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252635422\">said</a>:</p>\n<blockquote>\n<p>After Mara's triaging in the last couple of weeks, I expect there to be very few of these papercuts and don't envision any of them to be blockers.</p>\n</blockquote>\n<p><del>Mara's</del> Eric's</p>",
        "id": 252635787,
        "sender_full_name": "Mara",
        "timestamp": 1631197924
    },
    {
        "content": "<p>oh sorry we have a stream wg-triage, could have asked there</p>",
        "id": 252635793,
        "sender_full_name": "apiraino",
        "timestamp": 1631197927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I’ll take <a href=\"https://github.com/rust-lang/rust/issues/85013\">rust#85013</a> off your plate</p>",
        "id": 252635808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197933
    },
    {
        "content": "<p>(FWIW this PR is by no means urgent)</p>",
        "id": 252635880,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197965
    },
    {
        "content": "<p>Oh, are you sure? I started reviewing yesterday and got a bit of the way through it.</p>",
        "id": 252635897,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197969
    },
    {
        "content": "<p>Oh, well in that case you can keep it <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 252635941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631197981
    },
    {
        "content": "<p>that code won't change much over time, so it can sit for as needed</p>",
        "id": 252635945,
        "sender_full_name": "simulacrum",
        "timestamp": 1631197982
    },
    {
        "content": "<p>I'm still reading the referenced paper to try to get a grasp on the new algorithm.</p>",
        "id": 252635968,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631197992
    },
    {
        "content": "<p>(happy to setup some time to chat, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>)</p>",
        "id": 252636011,
        "sender_full_name": "simulacrum",
        "timestamp": 1631198007
    },
    {
        "content": "<p>next</p>",
        "id": 252636030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198014
    },
    {
        "content": "<ul>\n<li>\"Refactor query forcing\" <a href=\"https://github.com/rust-lang/rust/pull/78780\">rust#78780</a> (last comment: 3 months ago)<ul>\n<li>assigned to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/78780#issuecomment-905701857\">Perf run results</a>: no runtime modification, and -8% on <code>rustc_query_impl</code> compile time</li>\n</ul>\n</li>\n</ul>",
        "id": 252636054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198022
    },
    {
        "content": "<p>(I'm behind on reviews <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 252636102,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631198041
    },
    {
        "content": "<p>I can probably steal this one, fwiw</p>",
        "id": 252636209,
        "sender_full_name": "simulacrum",
        "timestamp": 1631198064
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252636102\">said</a>:</p>\n<blockquote>\n<p>(I'm behind on reviews <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>\n</blockquote>\n<p>I've been playing catch up :)</p>",
        "id": 252636221,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198067
    },
    {
        "content": "<p>the most recent comment was more recent than 3 months ago</p>",
        "id": 252636242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198075
    },
    {
        "content": "<p>or is that meant to be “last comment from an assigned reviewer” ?</p>",
        "id": 252636277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> ^ ?</p>",
        "id": 252636323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198103
    },
    {
        "content": "<p>it's last comment from assigned reviewer or any review</p>",
        "id": 252636339,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198107
    },
    {
        "content": "<p>thank you</p>",
        "id": 252636363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252636277\">said</a>:</p>\n<blockquote>\n<p>or is that meant to be “last comment from an assigned reviewer” ?</p>\n</blockquote>\n<p>correct</p>",
        "id": 252636371,
        "sender_full_name": "apiraino",
        "timestamp": 1631198116
    },
    {
        "content": "<p>(might be good to change wording there to “last review comment”, or something.)</p>",
        "id": 252636485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198152
    },
    {
        "content": "<p>(should update that label too)</p>",
        "id": 252636510,
        "sender_full_name": "apiraino",
        "timestamp": 1631198159
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> giong to steal this from <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> then?</p>",
        "id": 252636605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198181
    },
    {
        "content": "<p>looks like it. okay</p>",
        "id": 252636633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198191
    },
    {
        "content": "<ul>\n<li>\"Update the x86_64-unknown-l4re-uclibc tier 3 target\" <a href=\"https://github.com/rust-lang/rust/pull/85967\">rust#85967</a> (last comment: 3 months ago)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85967#pullrequestreview-680959056\">There is a review</a> from June from <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> which might need some discussion</li>\n</ul>\n</li>\n</ul>",
        "id": 252636670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198204
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252636209\">said</a>:</p>\n<blockquote>\n<p>I can probably steal this one, fwiw</p>\n</blockquote>\n<p>Thank you!!</p>",
        "id": 252636785,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631198248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252636670\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Update the x86_64-unknown-l4re-uclibc tier 3 target\" <a href=\"https://github.com/rust-lang/rust/pull/85967\">rust#85967</a> (last comment: 3 months ago)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85967#pullrequestreview-680959056\">There is a review</a> from June from <span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> which might need some discussion</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>I’m inclined to think, based on the authors response to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> , that a new linker flavor is warranted here</p>",
        "id": 252636881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198280
    },
    {
        "content": "<p>I’ll leave a comment saying as much</p>",
        "id": 252636942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198290
    },
    {
        "content": "<p>in any case, its assigned to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> ; we may want to reassign in any case</p>",
        "id": 252637146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198363
    },
    {
        "content": "<p>This also needs to go through the tier 3 target architecture MCP process right?</p>",
        "id": 252637157,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631198366
    },
    {
        "content": "<p>uh, maybe</p>",
        "id": 252637190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198377
    },
    {
        "content": "<p>its not adding a new Tier 3 target though, right? Just updating an existing one?</p>",
        "id": 252637295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198404
    },
    {
        "content": "<p>/me looks</p>",
        "id": 252637343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198421
    },
    {
        "content": "<p>I guess there is a new target os</p>",
        "id": 252637375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198433
    },
    {
        "content": "<p>Not exactly an “update” then?</p>",
        "id": 252637406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198446
    },
    {
        "content": "<p><del>Oh, I assumed from the title it was</del> I'm looking at the wrong thing.</p>",
        "id": 252637420,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631198452
    },
    {
        "content": "<p>That’s funny; the title is what made me think it wasn’t adding a new target</p>",
        "id": 252637470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198470
    },
    {
        "content": "<p>Okay well I’ll self-assign, and figure out whethe tier 3 MCP is warranted (I’m now thinking it is indeed), and provide pointers to the PR author on what to do there.</p>",
        "id": 252637559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198510
    },
    {
        "content": "<p>next</p>",
        "id": 252637645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198528
    },
    {
        "content": "<ul>\n<li>\"Add basic checks for well-formedness of <code>fn</code>/<code>fn_mut</code> lang items\" <a href=\"https://github.com/rust-lang/rust/pull/86246\">rust#86246</a> (last comment: 2 months ago)</li>\n</ul>",
        "id": 252637649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198529
    },
    {
        "content": "<p>I’ll self-assign this too, for now</p>",
        "id": 252637729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198564
    },
    {
        "content": "<ul>\n<li>\"Emit clearer diagnostics for parens around <code>for</code> loop heads\" <a href=\"https://github.com/rust-lang/rust/pull/86422\">rust#86422</a> (last comment: 2 months ago)</li>\n</ul>",
        "id": 252637778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198583
    },
    {
        "content": "<p>I assume <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> will get around to this eventually</p>",
        "id": 252637826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198605
    },
    {
        "content": "<p>I think for <a href=\"https://github.com/rust-lang/rust/issues/86246\">#86246</a> we should probably (with input from T-lang) decide what the \"long-term\" plan is for wf checking of lang items</p>",
        "id": 252637841,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198613
    },
    {
        "content": "<p>(there's an issue for that somewhere)</p>",
        "id": 252637871,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> maybe just leave a comment about your status on <a href=\"https://github.com/rust-lang/rust/issues/86422\">rust#86422</a> (i.e. when you think you’ll get to it, if it all, if only to get it off the queue of oldest PRs…)</p>",
        "id": 252637873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198628
    },
    {
        "content": "<p>Dropped through the cracks. Looking.</p>",
        "id": 252637898,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1631198636
    },
    {
        "content": "<p>next</p>",
        "id": 252637971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198652
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical\">1 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">1 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high\">77 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">53 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-critical, 1 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">0 P-critical, 0 P-high, 1 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 46 P-high, 81 P-medium, 10 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 252637994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198660
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>\n<ul>\n<li>\"Type called union wreaks havoc since 1.54\" <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a> <ul>\n<li>opened by <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> </li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/88583#issuecomment-914482165\">@**Josh Triplett** and  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> discussed</a></li>\n<li>they agree that a revert of <a href=\"https://github.com/rust-lang/rust/pull/84571\">rust#84571</a> is needed</li>\n<li>nominated to get attention on this revert</li>\n</ul>\n</li>\n</ul>",
        "id": 252638016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198668
    },
    {
        "content": "<p>oh, I just wrote the revert PR for this</p>",
        "id": 252638036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198678
    },
    {
        "content": "<p>I’ll self-assign <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a></p>",
        "id": 252638042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198683
    },
    {
        "content": "<p>Also, meta note: I'm really loving going through the PRs that haven't been reviewed in a while; I feel like it's very helpful</p>",
        "id": 252638071,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198696
    },
    {
        "content": "<p>and now that we’ve mentioned it here, as well as the revert PR: <a href=\"https://github.com/rust-lang/rust/issues/88775\">#88775</a></p>",
        "id": 252638094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198703
    },
    {
        "content": "<p>I feel comfortable removing the nomination label from <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a></p>",
        "id": 252638148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198717
    },
    {
        "content": "<p>(I would love to hear feedback from people on the planned handling of <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a>. Namely: We’ll fix it for 1.56. But not for 1.54 and probably not for 1.55 either, I’m guessing.)</p>",
        "id": 252638262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198754
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 252638378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198783
    },
    {
        "content": "<h3>P-high regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-high+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">P-high beta regressions</a></p>\n<ul>\n<li>No <code>P-high</code> beta regressions this time.</li>\n</ul>",
        "id": 252638395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198789
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-nightly+label%3AP-high+no%3Aassignee+-label%3AT-infra+-label%3AT-libs+-label%3AT-release+-label%3AT-rustdoc+-label%3AT-core\">Unassigned P-high nightly regressions</a></p>\n<ul>\n<li>No unassigned <code>P-high</code> nightly regressions this time.</li>\n</ul>",
        "id": 252638412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198794
    },
    {
        "content": "<h2>Performance logs</h2>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-07.md\">triage logs for 2021-09-7</a></p>\n</blockquote>\n<p>A busy week, with lots of mixed changes, though in the end only a few were deemed significant enough to report here.</p>\n<p>Triage done by <strong>@pnkfelix</strong>. 3 Regressions, 1 Improvements, 3 Mixed; 0 of them in rollups<br>\n57 comparisons made in total</p>",
        "id": 252638431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198801
    },
    {
        "content": "<h4>Regressions</h4>\n<p>Shrink Session a bit <a href=\"https://github.com/rust-lang/rust/issues/88530\">#88530</a></p>\n<ul>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=64929313f53181636e4dd37e25836973205477e4&amp;end=fcce644119cf4e8e36001368e514bb5ed67cb855&amp;stat=instructions:u\">instruction counts</a> (up to 2.6% on <code>full</code> builds of <code>deeply-nested-async</code>)</li>\n</ul>\n<p>Concrete regions can show up in mir borrowck if the originated from there <a href=\"https://github.com/rust-lang/rust/issues/88533\">#88533</a></p>\n<ul>\n<li>Very small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=29ef6cf1637aa8317f8911f93f14e18d404c1b0e&amp;end=a3956106d12cebec91be0637759e29ab6908b4cd&amp;stat=instructions:u\">instruction counts</a> (up to 1.0% on <code>incr-patched: add static arr item</code> builds of <code>coercions</code>)</li>\n<li>This is a small regression to <code>coercions</code> and that may be noise. However, there are many others that are over 0.4% regression to instruction counts. The combination of those two factors led pnkfelix to think that we may want to take a second look at the effects of this PR.</li>\n</ul>\n<p>Introduce <code>let...else</code> <a href=\"https://github.com/rust-lang/rust/issues/87688\">#87688</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=a3956106d12cebec91be0637759e29ab6908b4cd&amp;end=c2a408840ad18f74280805535f0b7193528ff3df&amp;stat=instructions:u\">instruction counts</a> (up to -0.3% on <code>incr-unchanged</code> builds of <code>deeply-nested-closures</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=a3956106d12cebec91be0637759e29ab6908b4cd&amp;end=c2a408840ad18f74280805535f0b7193528ff3df&amp;stat=instructions:u\">instruction counts</a> (up to 0.4% on <code>full</code> builds of <code>issue-46449</code>)</li>\n<li>Small regression (approximately 1%) in instruction counts on several of the <code>*-doc</code> tests, found via human eye.</li>\n</ul>",
        "id": 252638470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198815
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252638262\">said</a>:</p>\n<blockquote>\n<p>(I would love to hear feedback from people on the planned handling of <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a>. Namely: We’ll fix it for 1.56. But not for 1.54 and probably not for 1.55 either, I’m guessing.)</p>\n</blockquote>\n<p>I think this is an unfortunate case where what should have been a test slipped through the original PR</p>",
        "id": 252638508,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198828
    },
    {
        "content": "<p>yes I agree 100% on that</p>",
        "id": 252638539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198839
    },
    {
        "content": "<p>we should have been adding tons of tests as soon as we decided to make <code>union</code> a context-senstive keyword.</p>",
        "id": 252638596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198859
    },
    {
        "content": "<p>I wonder if part of this is due to the complexity of context-sensitive keywords</p>",
        "id": 252638618,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198868
    },
    {
        "content": "<p>and we probably should have a work item to perhaps auto-generate such tests for <em>all</em> context-senstive keywords?</p>",
        "id": 252638742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198897
    },
    {
        "content": "<p>Maybe we should review <em>all</em> context-sensitive keywords and make sure there's good tests</p>",
        "id": 252638768,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198902
    },
    {
        "content": "<p>oh gosh, great minds think alike</p>",
        "id": 252638782,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198908
    },
    {
        "content": "<p>yeah, review or generate. Either way, lets see about getting them in.</p>",
        "id": 252638815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198922
    },
    {
        "content": "<p>Do we have action items?</p>",
        "id": 252638851,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631198936
    },
    {
        "content": "<p>we have a list of action items</p>",
        "id": 252638874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198944
    },
    {
        "content": "<p>we can add this to it</p>",
        "id": 252638880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198946
    },
    {
        "content": "<p>action item list: <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw\">https://hackmd.io/5BtjuenFTn6M74IDwLOjgw</a></p>",
        "id": 252638927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631198962
    },
    {
        "content": "<p>added one to <a href=\"https://hackmd.io/5BtjuenFTn6M74IDwLOjgw#T-compiler-Unowned\">https://hackmd.io/5BtjuenFTn6M74IDwLOjgw#T-compiler-Unowned</a></p>",
        "id": 252639136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199020
    },
    {
        "content": "<p>So, back to the performance triage report. Because I’m so proud of my little snippets of text I added <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 252639209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199044
    },
    {
        "content": "<p>Oh, if we have time at the end of the meeting, we should discuss <a href=\"https://github.com/rust-lang/highfive/pull/356\">https://github.com/rust-lang/highfive/pull/356</a></p>",
        "id": 252639272,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199065
    },
    {
        "content": "<h4>Improvements</h4>\n<ul>\n<li>Move global analyses from lowering to resolution <a href=\"https://github.com/rust-lang/rust/issues/88597\">#88597</a></li>\n</ul>",
        "id": 252639278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199067
    },
    {
        "content": "<h4>Mixed</h4>\n<p>Preserve most sub-obligations in the projection cache <a href=\"https://github.com/rust-lang/rust/issues/85868\">#85868</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b834c4c1bad7521af47f38f44a4048be0a1fe2ee&amp;end=371f3cd3fe523d0b398ed1db1620667c53ba7d02&amp;stat=instructions:u\">instruction counts</a> (up to -6.9% on <code>incr-unchanged</code> builds of <code>deeply-nested</code>)</li>\n<li>Very large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=b834c4c1bad7521af47f38f44a4048be0a1fe2ee&amp;end=371f3cd3fe523d0b398ed1db1620667c53ba7d02&amp;stat=instructions:u\">instruction counts</a> (up to 9.4% on <code>full</code> builds of <code>deeply-nested</code>)</li>\n</ul>\n<p>BTreeMap/BTreeSet::from_iter: use bulk building to improve the performance <a href=\"https://github.com/rust-lang/rust/issues/88448\">#88448</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=11bbb5231349a0a144d86d5c0c21061a06d1969d&amp;end=ffaf857045f4f4d8bb563e0a5077f9b065f42916&amp;stat=instructions:u\">instruction counts</a> (up to -3.0% on <code>full</code> builds of <code>inflate</code>)</li>\n<li>Large regression in <a href=\"https://perf.rust-lang.org/compare.html?start=11bbb5231349a0a144d86d5c0c21061a06d1969d&amp;end=ffaf857045f4f4d8bb563e0a5077f9b065f42916&amp;stat=instructions:u\">instruction counts</a> (up to 4.5% on <code>incr-patched: println</code> builds of <code>clap-rs</code>)</li>\n</ul>\n<p>Avoid invoking the hir_crate query to traverse the HIR <a href=\"https://github.com/rust-lang/rust/issues/88435\">#88435</a></p>\n<ul>\n<li>Small improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=e30b68353fe22b00f40d021e7914eeb78473b3c1&amp;end=7849e3e9dda60e8ec826ee245c6b180e73911b37&amp;stat=instructions:u\">instruction counts</a> (up to -1.2% on <code>incr-patched: add static arr item</code> builds of <code>coercions</code>)</li>\n<li>Small regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e30b68353fe22b00f40d021e7914eeb78473b3c1&amp;end=7849e3e9dda60e8ec826ee245c6b180e73911b37&amp;stat=instructions:u\">instruction counts</a> (up to 0.5% on <code>incr-unchanged</code> builds of <code>helloworld</code>)</li>\n<li>pnkfelix included this one as notable largely because the expected perf changes from <a href=\"https://github.com/rust-lang/rust/pull/88435#issuecomment-907700333\">the actual PR</a> largely showed slight improvements across the board, while after it landed on nightly, it is best categorized as \"Mixed\"</li>\n</ul>",
        "id": 252639320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199079
    },
    {
        "content": "<h4>Untriaged Pull Requests</h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88597\">#88597 Move global analyses from lowering to resolution</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88552\">#88552 Stop allocating vtable entries for non-object-safe methods</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/88312\">#88312 Treat types in unnormalized function signatures as well-formed</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87815\">#87815 encode <code>generics_of</code> for fields and ty params</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87781\">#87781 Remove box syntax from compiler and tools</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87640\">#87640 Rollup of 9 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87587\">#87587 Various refactorings of the TAIT infrastructure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87570\">#87570 Upgrade to LLVM 13</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/87244\">#87244 Better diagnostics with mismatched types due to implicit static lifetime</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86898\">#86898 Add fast path for Path::cmp that skips over long shared prefixes</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86777\">#86777 Include terminators in instance size estimate</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86698\">#86698 Move OnDiskCache to rustc_query_impl.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86588\">#86588 Rollup of 8 pull requests</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/86034\">#86034 Change entry point to 🛡️ against 💥 💥-payloads</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/85556\">#85556 Warn about unreachable code following an expression with an uninhabited type</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/84560\">#84560 Inline Iterator as IntoIterator.</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/83302\">#83302 Get piece unchecked in <code>write</code></a></li>\n</ul>",
        "id": 252639382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199102
    },
    {
        "content": "<p>If anyone wants to discuss the performance report details, feel free to speak up. but I’m going to move on to nominations until I get interrupted</p>",
        "id": 252639524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199143
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 252639532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199146
    },
    {
        "content": "<ul>\n<li>\"Perform type inference in range pattern\" <a href=\"https://github.com/rust-lang/rust/pull/88090\">rust#88090</a><ul>\n<li>(see <code>S-waiting-on-team</code>)</li>\n</ul>\n</li>\n</ul>",
        "id": 252639560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199156
    },
    {
        "content": "<p>(we discussed, this is T-lang)</p>",
        "id": 252639575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199161
    },
    {
        "content": "<ul>\n<li>\"Type called union wreaks havoc since 1.54\" <a href=\"https://github.com/rust-lang/rust/issues/88583\">rust#88583</a> <ul>\n<li>(see <code>P-critical</code> list)</li>\n</ul>\n</li>\n</ul>",
        "id": 252639581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199166
    },
    {
        "content": "<p>(we discussed; I unnominated after noting it above.)</p>",
        "id": 252639621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199178
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>\n<ul>\n<li>No nominated RFCs for <code>T-compiler</code> this time.</li>\n</ul>",
        "id": 252639640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252639272\">said</a>:</p>\n<blockquote>\n<p>Oh, if we have time at the end of the meeting, we should discuss <a href=\"https://github.com/rust-lang/highfive/pull/356\">https://github.com/rust-lang/highfive/pull/356</a></p>\n</blockquote>\n<p>So yeah, it looks like we can talk about this</p>",
        "id": 252639690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199203
    },
    {
        "content": "<p>I do not think we need to block landing <a href=\"https://github.com/rust-lang/highfive/issues/356\">highfive#356</a> on removing people who are no longer active</p>",
        "id": 252639875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199248
    },
    {
        "content": "<p>the sooner we get this in , the better, right?</p>",
        "id": 252639893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199254
    },
    {
        "content": "<p>yes</p>",
        "id": 252639901,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199258
    },
    {
        "content": "<p>I'm more than happy to file follow up PRs too</p>",
        "id": 252639932,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199272
    },
    {
        "content": "<p>I see, the mention of centril was just from refactoring the code, it wasn’t a new addition</p>",
        "id": 252640027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199305
    },
    {
        "content": "<p>correct</p>",
        "id": 252640043,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199311
    },
    {
        "content": "<p>I do think we should prioritize removing inactive reviewers</p>",
        "id": 252640062,
        "sender_full_name": "simulacrum",
        "timestamp": 1631199320
    },
    {
        "content": "<p>yes, it is a good follow-up task</p>",
        "id": 252640088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199330
    },
    {
        "content": "<p>I can update the PR if that's helpful</p>",
        "id": 252640098,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> would you argue it has such priority that it should block landing this PR as is?</p>",
        "id": 252640191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199363
    },
    {
        "content": "<p>or just that its a “nice to have” if <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> can get to it quickly?</p>",
        "id": 252640227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199372
    },
    {
        "content": "<p>I mean, I can do it in like 5 minutes</p>",
        "id": 252640290,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199398
    },
    {
        "content": "<p>I wasn’t sure what would be involved for determining who was “inactive\"</p>",
        "id": 252640334,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199413
    },
    {
        "content": "<p>but if its that trivial, then sure, throw it onto the same PR</p>",
        "id": 252640459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199465
    },
    {
        "content": "<p>maybe in a separate commit</p>",
        "id": 252640478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199472
    },
    {
        "content": "<p>I just updated to remove Centril</p>",
        "id": 252640592,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199504
    },
    {
        "content": "<p>same commit though..</p>",
        "id": 252640635,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199523
    },
    {
        "content": "<p>We can reach out to other people who might want to be remvoed</p>",
        "id": 252640693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199552
    },
    {
        "content": "<p>but it doesn’t need to be part of this PR</p>",
        "id": 252640707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199558
    },
    {
        "content": "<p>I'm wondering if we might just want to prefer not having individuals for directories</p>",
        "id": 252640736,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199572
    },
    {
        "content": "<p>okay, thanks to everyone <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>  for joining!</p>",
        "id": 252640748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631199577
    },
    {
        "content": "<p>(not thinking that this should be in this PR)</p>",
        "id": 252640774,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199588
    },
    {
        "content": "<p>Okay who do I need to continue to poke to move <a href=\"https://github.com/rust-lang/highfive/issues/356\">highfive#356</a> forward? <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>?</p>",
        "id": 252641258,
        "sender_full_name": "Jack Huey",
        "timestamp": 1631199727
    },
    {
        "content": "<p>Yeah I can poke</p>",
        "id": 252641612,
        "sender_full_name": "simulacrum",
        "timestamp": 1631199850
    },
    {
        "content": "<p>Draft for next week's agenda is available at:<br>\n<a href=\"https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg?view\">https://hackmd.io/0z3bxGHlQwSYrLNm5ap2Lg?view</a></p>\n<p>Scheduled checkins from:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <br>\n@*WG-polymorphization by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></li>\n</ul>",
        "id": 252642173,
        "sender_full_name": "apiraino",
        "timestamp": 1631200059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252632614\">said</a>:</p>\n<blockquote>\n<ul>\n<li><img alt=\":beta:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/4715/emoji/images/20717.png\" title=\"beta\"> \"Preserve most sub-obligations in the projection cache\" <a href=\"https://github.com/rust-lang/rust/pull/85868\">rust#85868</a><ul>\n<li>Team is inclined to r+ this, perf regressions are already triaged (necessary for correctness)</li>\n<li><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-02.20.2354818/near/251720629\">commented last week</a> that the code needs a comment</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> sorry one more comment: <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> asked if it might worth nominating this <a href=\"https://github.com/rust-lang/rust/pull/85868#issuecomment-916191629\">also for stable backport</a></p>",
        "id": 252647774,
        "sender_full_name": "apiraino",
        "timestamp": 1631202266
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 252647891,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1631202315
    },
    {
        "content": "<p>It doesn tlook like very many people have been running into that issue</p>",
        "id": 252647917,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1631202330
    },
    {
        "content": "<p>predicates_of appears to have been the main cause of incremental ICEs lately</p>",
        "id": 252647939,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1631202345
    },
    {
        "content": "<p>I think we should give that change more time to bake</p>",
        "id": 252647965,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1631202355
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252637157\">said</a>:</p>\n<blockquote>\n<p>This also needs to go through the tier 3 target architecture MCP process right?</p>\n</blockquote>\n<p>Hey, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , my reading of the <a href=\"https://doc.rust-lang.org/nightly/rustc/target-tier-policy.html#tier-3-target-policy\">tier 3 target tier policy</a> is that one can opt into doing an MCP (to gauge broader consensus), but it is not strictly required.</p>\n<p>So, since we are not beholden to a policy in this matter: Do you think we should nonetheless recommend to the PR <a href=\"https://github.com/rust-lang/rust/issues/85967\">#85967</a> author that they go through the MCP process here?</p>",
        "id": 252648003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1631202362
    },
    {
        "content": "<p>No, I don't think we need to do that. I misread what the PR was doing. </p>\n<p>It perhaps would be good to ask this person if they (and anyone else) should be recorded as maintainers for that target though.</p>",
        "id": 252648339,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631202525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> \"big if true\" is the original but people like to come up with variants</p>",
        "id": 252653697,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631204444
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/z9OufuXh6lsFEXsCDM8tHIlJ/Screenshot_20210909-112027.png\">Screenshot_20210909-112027.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/z9OufuXh6lsFEXsCDM8tHIlJ/Screenshot_20210909-112027.png\" title=\"Screenshot_20210909-112027.png\"><img src=\"/user_uploads/4715/z9OufuXh6lsFEXsCDM8tHIlJ/Screenshot_20210909-112027.png\"></a></div>",
        "id": 252653706,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631204449
    },
    {
        "content": "<p><a href=\"https://twitter.com/mgattozzi/status/1150922218899214336?s=20\">https://twitter.com/mgattozzi/status/1150922218899214336?s=20</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/mgattozzi/status/1150922218899214336?s=20\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/26e286420f57ef96d259719fed7b6d2505dfaafa/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313339383636343539383331363738313537302f41327044795145505f6e6f726d616c2e6a7067\"></a><p>You, a memer: Huge if true\nMe, a compiler: Huge</p><span>- Rage Against the State Machine (@mgattozzi)</span></div></div>",
        "id": 252656032,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1631205369
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-09-09.20.2354818/near/252635592\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Replace dominators algorithm with simple Lengauer-Tarjan\" <a href=\"https://github.com/rust-lang/rust/pull/85013\">rust#85013</a> (last comment: 3 months ago)<ul>\n<li>Question from <span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span>: why people from wg-triage have been removing and adding <code>S-waiting-for-review</code> for the last 2 months? Is it meant to emit a \"ping\" reminder?</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>As <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> and <span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> said, we remove and re-add labels to mark the PR as \"recently updated\" in GitHub so it doesn't get triaged again for another 15 days.</p>",
        "id": 252677169,
        "sender_full_name": "Noah Lev",
        "timestamp": 1631213965
    },
    {
        "content": "<p>In reply to the triage ping, yes it's been done so so that other triagists know that the pr is already triaged for the timeframe and won't show up in their filtered list</p>",
        "id": 252804371,
        "sender_full_name": "DPC",
        "timestamp": 1631287828
    }
]