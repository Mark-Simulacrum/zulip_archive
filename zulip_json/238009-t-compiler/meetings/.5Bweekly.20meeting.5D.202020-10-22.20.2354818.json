[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will happen tomorrow at <time datetime=\"2020-10-22T14:00:00Z\">2020-10-22T14:00:00+00:00</time></p>",
        "id": 214130852,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603325910
    },
    {
        "content": "<p><em>WG-prioritization</em> has done pre-triage in <a class=\"stream\" data-stream-id=\"245100\" href=\"/#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts\">#t-compiler/wg-prioritization/alerts</a></p>",
        "id": 214130865,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603325933
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> has prepared the <a href=\"https://hackmd.io/yszFneboQA2gJ0qaG6pllw?view\">meeting agenda</a></p>",
        "id": 214130878,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603325951
    },
    {
        "content": "<p>We will have checkins from <em>WG-rustc-dev-guide</em> and <em>WG-llvm</em></p>",
        "id": 214130904,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603325995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> have already filled <span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin, I'll copy that one to the agenda tomorrow</p>",
        "id": 214130965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603326034
    },
    {
        "content": "<p>/me is still filling out a few things</p>",
        "id": 214130971,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603326047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>?</p>",
        "id": 214130979,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603326058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214130979\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span>?</p>\n</blockquote>\n<p>if so, please feel free to fill the checkin directly in the agenda</p>",
        "id": 214131019,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603326103
    },
    {
        "content": "<p>There's a few things worth mentioning on the LLVM side:</p>",
        "id": 214152387,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603352023
    },
    {
        "content": "<p>The first parts of the mustprogress attribute have landed (<a href=\"https://reviews.llvm.org/D86233\">https://reviews.llvm.org/D86233</a>, <a href=\"https://reviews.llvm.org/D85393\">https://reviews.llvm.org/D85393</a>). This means that forward progress is now opt-in. Once this work is complete, this will resolve current bugs around infinite loops being optimized away. There isn't a patch for that yet, but I dare say the hardest part (convincing people that this is the right thing to do) is done now...</p>",
        "id": 214152619,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603352165
    },
    {
        "content": "<p>MemorySSA-based DSE has been enabled by default (<a href=\"https://reviews.llvm.org/D87163\">https://reviews.llvm.org/D87163</a>), which means dead stores are eliminated across based blocks. Expect some compile-time regression... More importantly for rust, I've ported MemCpyOpt to MSSA (<a href=\"https://reviews.llvm.org/D89207\">https://reviews.llvm.org/D89207</a>), which will allow memcpy's to be eliminated across blocks as well, a long-standing optimization problem. It's not the first attempt to do this, but I'm optimistic :)</p>",
        "id": 214153039,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603352507
    },
    {
        "content": "<p>Some older changes that I probably have not mentioned before. I've finally managed to make correlated value propagation optimize conditions based on local value ranges (<a href=\"https://reviews.llvm.org/D69686\">https://reviews.llvm.org/D69686</a>), which will resolve various missing bounds check optimizations where constant operands are involved. There is also a new constraint elimination pass (<a href=\"https://reviews.llvm.org/D84547\">https://reviews.llvm.org/D84547</a>) which is able to reason about complex implications symbolically. However, it is not enabled by default, and there's no roadmap to enable it at present.</p>",
        "id": 214153373,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603352712
    },
    {
        "content": "<p>Also been a while ago, but someone took over my work for introducing saturating float to int casts (<a href=\"https://reviews.llvm.org/D54749\">https://reviews.llvm.org/D54749</a>). There's been some slow progress, and maybe there's a chance that this will land before the heat death of the universe... Rust has worked around this in the meantime, but once/if it lands we can improve codegen.</p>",
        "id": 214153906,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603353096
    },
    {
        "content": "<p>That's all I can think of for now.</p>",
        "id": 214154183,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1603353241
    },
    {
        "content": "<p>thanks - added to the  agenda</p>",
        "id": 214167206,
        "sender_full_name": "apiraino",
        "timestamp": 1603361936
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 1 hour</p>",
        "id": 214182716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603371681
    },
    {
        "content": "<p><a href=\"https://hackmd.io/yszFneboQA2gJ0qaG6pllw?view\">Check out the meeting agenda</a></p>",
        "id": 214182733,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603371694
    },
    {
        "content": "<p>Zulip seems to have fixed the timezone viewer to work on mobile!</p>",
        "id": 214183215,
        "sender_full_name": "simulacrum",
        "timestamp": 1603371919
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 214190880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375208
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 214190924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375228
    },
    {
        "content": "<ul>\n<li>Rust Compiler + Dev Tools Jobs<br>\n    - Microsoft has a <a href=\"https://careers.microsoft.com/us/en/job/917051/Senior-Software-Engineer\">Senior Software Engineer role</a>: \"We are looking for engineers to work on Rust compilers and tools to support the usage of the Rust programming language.\"<br>\n    - Facebook is also hiring compiler and library engineers (US only), according to <a href=\"https://twitter.com/nadavrot/status/1319003839018614784?s=20\">Nadav Rotem tweet</a>; (if anyone finds an actual job listing, feel free to share it)</li>\n</ul>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/nadavrot/status/1319003839018614784?s=20\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1258219052138287105/AJ8YEXRR_normal.jpg\"></a><p>Facebook is looking to hire compiler and library engineers to work on <a href=\"https://twitter.com/rustlang\">@rustlang</a>. Rust is taking off within FB, and we'd like to work with the community. Remote work from within the U.S. is possible. U.S. work permit required.</p><span>- Nadav Rotem (@nadavrot)</span></div></div>",
        "id": 214190952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375238
    },
    {
        "content": "<p>I mention these for two reasons: 1. Some of you may be interested in applying to such roles (and I suspect all of our regular contributors are strong candidates)</p>",
        "id": 214191091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375307
    },
    {
        "content": "<p>but also 2. This is a sign that we're really hitting the big time. Regardless of your opinion of any of these big companies, this is <strong>good news for Rust</strong>.</p>",
        "id": 214191238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375361
    },
    {
        "content": "<ul>\n<li>Tomorrow Friday 23rd at <time datetime=\"2020-10-23T14:00:00Z\">2020-10-23T14:00:00+00:00</time> we have a <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Compiler Team Planning meeting</a></li>\n</ul>",
        "id": 214191266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375376
    },
    {
        "content": "<ul>\n<li>New MCPs (take a look, see if you like them!)<ul>\n<li>\"Add a <code>NOOP_METHOD_CALL</code> lint for methods which should never be directly called\" <a href=\"https://github.com/rust-lang/compiler-team/issues/375\">compiler-team#375</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214191286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375387
    },
    {
        "content": "<ul>\n<li>Old MCPs (not seconded, take a look)<ul>\n<li>\"Decentralize queries\" <a href=\"https://github.com/rust-lang/compiler-team/issues/277\">compiler-team#277</a></li>\n<li>\"Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it\" <a href=\"https://github.com/rust-lang/compiler-team/issues/350\">compiler-team#350</a></li>\n<li>\"MCP: move compiler/ crates to stable Rust\" <a href=\"https://github.com/rust-lang/compiler-team/issues/358\">compiler-team#358</a></li>\n<li>\"Add 32-bit and 64-bit stderr/stdout files for ui tests\" <a href=\"https://github.com/rust-lang/compiler-team/issues/365\">compiler-team#365</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214191301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375395
    },
    {
        "content": "<ul>\n<li>Pending FCP requests (check your boxes!)<ul>\n<li>\"inherit stable annotations in enum variants and field items\" <a href=\"https://github.com/rust-lang/compiler-team/issues/370\">compiler-team#370</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214191325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375405
    },
    {
        "content": "<ul>\n<li>Things in FCP (make sure you're good with it)<ul>\n<li>\"Accept RFC 2951 \"Linking modifiers for native libraries\"\" <a href=\"https://github.com/rust-lang/compiler-team/issues/356\">compiler-team#356</a></li>\n<li>\"<code>ty.kind()</code> -&gt; <code>ty.data()</code>\" <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a></li>\n<li>\"Change type folding to take self by value\" <a href=\"https://github.com/rust-lang/compiler-team/issues/371\">compiler-team#371</a></li>\n<li>\"TypeVisitor: use ops::ControlFlow instead of bool\" <a href=\"https://github.com/rust-lang/compiler-team/issues/374\">compiler-team#374</a></li>\n<li>\"Allow making <code>RUSTC_BOOTSTRAP</code> conditional on the crate name\" <a href=\"https://github.com/rust-lang/rust/pull/77802\">rust#77802</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214191361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375420
    },
    {
        "content": "<ul>\n<li>Accepted MCPs<ul>\n<li>No new accepted proposals this time.</li>\n</ul>\n</li>\n</ul>",
        "id": 214191390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375432
    },
    {
        "content": "<p>note that <a href=\"https://github.com/rust-lang/compiler-team/issues/359\">compiler-team#359</a> has been in FCP for 21 days but people raised concerns</p>",
        "id": 214191402,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603375437
    },
    {
        "content": "<p>so unsure how we should proceed with that one</p>",
        "id": 214191477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603375452
    },
    {
        "content": "<p>hmm</p>",
        "id": 214191510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375463
    },
    {
        "content": "<p>maybe we should just removed the FCP label and have people seconding it again?</p>",
        "id": 214191564,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603375488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^</p>",
        "id": 214191577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375493
    },
    {
        "content": "<p>I plan to close it</p>",
        "id": 214191639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603375515
    },
    {
        "content": "<p>We discussed this in the traits meeting, we have some different ideas</p>",
        "id": 214191662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603375524
    },
    {
        "content": "<p>I'll just go do that now</p>",
        "id": 214191679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603375529
    },
    {
        "content": "<ul>\n<li>Finalized FCPs (disposition merge)<ul>\n<li>[T-lang] \"resolve: Do not put nonexistent crate <code>meta</code> into prelude\" <a href=\"https://github.com/rust-lang/rust/pull/75802\">rust#75802</a></li>\n<li>[T-lang] \"stabilize union with 'ManuallyDrop' fields and 'impl Drop for Union'\" <a href=\"https://github.com/rust-lang/rust/pull/77547\">rust#77547</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214191729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375550
    },
    {
        "content": "<h3>WG checkins</h3>",
        "id": 214191748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375558
    },
    {
        "content": "<p>So, before we start with the actual WG checkin's</p>",
        "id": 214191801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375567
    },
    {
        "content": "<p>I wanted to make a little note: I have noticed, at least for me (as a reader) that some of the check-in text each week can be pretty overwhelming</p>",
        "id": 214191869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375597
    },
    {
        "content": "<p>And this week's check-in's, which I am about to post, led me and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> to thinking that when preparing the agenda, we should strive to condense the info a bit</p>",
        "id": 214192012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375656
    },
    {
        "content": "<p>I might have gone a little overboard, sorry</p>",
        "id": 214192061,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603375682
    },
    {
        "content": "<p>At the same time, I definitely do not 1. want to undermine the work that each WG does, nor 2. make life more difficult for the people preparing the agenda</p>",
        "id": 214192099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375686
    },
    {
        "content": "<p>so my plan is this: If I or others decide to condense any check-in text, we will first copy the existing text to a fresh separate hackmd</p>",
        "id": 214192134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375709
    },
    {
        "content": "<p>which we will link</p>",
        "id": 214192138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375712
    },
    {
        "content": "<p>we won't necessarily inform the check-in authors of plans to do this, because I want freedom to do so at last minute. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 214192170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214192061\">said</a>:</p>\n<blockquote>\n<p>I might have gone a little overboard, sorry</p>\n</blockquote>\n<p>don't be sorry; Its hard to know what to post!</p>",
        "id": 214192230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375760
    },
    {
        "content": "<p>and Some of the stuff on here I was not even aware existed, like the new way to not build LLVM</p>",
        "id": 214192272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375782
    },
    {
        "content": "<p>anwyay</p>",
        "id": 214192279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375787
    },
    {
        "content": "<p>On with the show. (This system of condensing the text was <em>not</em> applied this week. We'll do it for future meetings.)</p>",
        "id": 214192363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375810
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1380\">@WG-rustc-dev-guide</span> checkin by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rustc-dev-guide/pulls?q=is%3Apr+sort%3Aupdated-desc+updated%3A%3E2020-09-03+\">75 merged PRs!</a></li>\n<li>Joshua Nelson is now a co-lead of the rustc-dev-guide working group! <a href=\"https://github.com/rust-lang/team/pull/449\">team#449</a><br>\n</li>\n</ul>\n</blockquote>",
        "id": 214192399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375827
    },
    {
        "content": "<blockquote>\n<h3>Authors</h3>\n<p><strong>@1c3t3a</strong>, <strong>@arora-aman</strong>, <strong>@bugadani</strong>, <strong>@caass</strong>, <strong>@camelid</strong>, <strong>@ecstatic-morse</strong>, <strong>@follower</strong>, <strong>@guswynn</strong>, <strong>@JakobDegen</strong>, <strong>@JOE1994</strong>, <strong>@JohnTitor</strong>, <strong>@Julian-Wollersberger</strong>, <strong>@jyn514</strong>, <strong>@LeSeulArtichaut</strong>, <strong>@macdonaldo</strong>, <strong>@mark-i-m</strong>, <strong>@matklad</strong>, <strong>@mautamu</strong>, <strong>@mightyiam</strong>, <strong>@Monadic-Cat</strong>, <strong>@Nadrieril</strong>, <strong>@pickfire</strong>, <strong>@r-52</strong>, <strong>@richkadel</strong>, <strong>@spastorino</strong>, <strong>@Stupremee</strong><br>\n</p>\n</blockquote>",
        "id": 214192421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375840
    },
    {
        "content": "<blockquote>\n<h3>Major Changes</h3>\n<p>Some minor changes are omitted for brevity.<br>\n</p>\n</blockquote>",
        "id": 214192441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375852
    },
    {
        "content": "<h4>Contributor-facing changes</h4>\n<blockquote>\n<ul>\n<li>New content<ul>\n<li>Explain stages in terms of the compiler currently running (take N+1) <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/857\">#857</a></li>\n<li>Explain pattern exhaustiveness checking <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/923\">#923</a></li>\n<li>Added description of word Scrutinee to the glossary <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/921\">#921</a></li>\n<li>Add a paragraph about reviewers and review latency in Getting Started chapter <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/907\">#907</a></li>\n<li>Document the usage of cargo-llvm-lines and -Ztimings. <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/905\">#905</a></li>\n<li>Add docs for <code>x.py setup</code> <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/899\">#899</a></li>\n<li>Add section on using git <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/890\">#890</a></li>\n<li>add suggested workflow to setup nightly rustup for rust/ <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/883\">#883</a></li>\n<li>Describe how to generate graphviz diagrams for dataflow <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/882\">#882</a></li>\n<li>Add Salsa In More Depth lecture <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/879\">#879</a></li>\n<li>Document new way to not build LLVM <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/878\">#878</a></li>\n<li>Add a chapter on useful <code>@rustbot</code> commands <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/874\">#874</a></li>\n<li>Add a chapter on all the identifiers used through <code>rustc</code> <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/872\">#872</a></li>\n<li>Add information about default stages for x.py <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/865\">#865</a></li>\n<li>Document how to promote a target from cross-compiled to hosted <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/860\">#860</a></li>\n<li>Add section describing git hook functionality <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/848\">#848</a></li>\n<li>Document CGU partioning in case of generic and inline functions <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/847\">#847</a><br>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 214192471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375869
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Improvements and fixes<ul>\n<li>Recommend debug-logging instead of debug <a href=\"https://github.com/rust--lang/rustc-dev-guide/pull/917\">#917</a></li>\n<li>Link to the -Zmir-opt-level proposal <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/888\">#888</a></li>\n<li>Don't recommend building the compiler for running tests on the standard library <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/887\">#887</a></li>\n<li>Improve instructions for adding a new test <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/881\">#881</a></li>\n<li>Improve MIR sections in appendix <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/880\">#880</a></li>\n<li>Update prerequisites, with an eye towards windows <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/863\">#863</a></li>\n<li>update docs to refer to the <code>compiler/</code> move <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/846\">#846</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 214192484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375880
    },
    {
        "content": "<blockquote>\n<h4>Internal changes</h4>\n<ul>\n<li>Linkcheck only changed files (except for cron jobs) <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/913\">#913</a>. This fixes persistent issues with CI spuriously failing.</li>\n<li>Allow anyone to change the status of a PR <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/910\">#910</a></li>\n</ul>\n</blockquote>",
        "id": 214192499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375889
    },
    {
        "content": "<blockquote>\n<h3>Changes in progress</h3>\n<ul>\n<li>Add a <code>check-in.sh</code> script to automate writing markdown links for weekly check-in <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/930\">#930</a></li>\n</ul>\n</blockquote>",
        "id": 214192523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375898
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> checkin by <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> :</p>\n<blockquote>\n<p>The first parts of the mustprogress attribute have landed (<a href=\"https://reviews.llvm.org/D86233\">https://reviews.llvm.org/D86233</a>, <a href=\"https://reviews.llvm.org/D85393\">https://reviews.llvm.org/D85393</a>). This means that forward progress is now opt-in. Once this work is complete, this will resolve current bugs around infinite loops being optimized away. There isn't a patch for that yet, but I dare say the hardest part (convincing people that this is the right thing to do) is done now...</p>\n</blockquote>",
        "id": 214192545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375909
    },
    {
        "content": "<blockquote>\n<p>MemorySSA-based DSE has been enabled by default (<a href=\"https://reviews.llvm.org/D87163\">https://reviews.llvm.org/D87163</a>), which means dead stores are eliminated across based blocks. Expect some compile-time regression... More importantly for rust, I've ported MemCpyOpt to MSSA (<a href=\"https://reviews.llvm.org/D89207\">https://reviews.llvm.org/D89207</a>), which will allow memcpy's to be eliminated across blocks as well, a long-standing optimization problem. It's not the first attempt to do this, but I'm optimistic :)</p>\n</blockquote>",
        "id": 214192580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375921
    },
    {
        "content": "<blockquote>\n<p>Some older changes that I probably have not mentioned before. I've finally managed to make correlated value propagation optimize conditions based on local value ranges (<a href=\"https://reviews.llvm.org/D69686\">https://reviews.llvm.org/D69686</a>), which will resolve various missing bounds check optimizations where constant operands are involved. There is also a new constraint elimination pass (<a href=\"https://reviews.llvm.org/D84547\">https://reviews.llvm.org/D84547</a>) which is able to reason about complex implications symbolically. However, it is not enabled by default, and there's no roadmap to enable it at present.</p>\n</blockquote>",
        "id": 214192630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375927
    },
    {
        "content": "<blockquote>\n<p>Also been a while ago, but someone took over my work for introducing saturating float to int casts (<a href=\"https://reviews.llvm.org/D54749\">https://reviews.llvm.org/D54749</a>). There's been some slow progress, and maybe there's a chance that this will land before the heat death of the universe... Rust has worked around this in the meantime, but once/if it lands we can improve codegen.</p>\n</blockquote>",
        "id": 214192647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375938
    },
    {
        "content": "<p>Okay!</p>",
        "id": 214192707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375967
    },
    {
        "content": "<p>Those are both super exciting</p>",
        "id": 214192736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603375980
    },
    {
        "content": "<p>I am so happy, by the way, to see this work reported</p>",
        "id": 214192751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375986
    },
    {
        "content": "<p>and thanks to <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> and <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> for preparing them!</p>",
        "id": 214192758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603375989
    },
    {
        "content": "<p>I mean WG-rustc-dev-guide has been doing epic work for a while</p>",
        "id": 214192771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603375997
    },
    {
        "content": "<p>but I am also very happy to see WG-llvm awaken from a status that I might call ... dormant? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 214192818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376018
    },
    {
        "content": "<blockquote>\n<p>Recommend debug-logging instead of debug <a href=\"https://github.com/rust-lang/rust/issues/917\">#917</a></p>\n</blockquote>\n<p>I'm thinking I gotta read and find out what this even means :P</p>",
        "id": 214192819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376018
    },
    {
        "content": "<p>Okay moving along (because last week's meeting definitely ran over time)</p>",
        "id": 214192909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376045
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214192914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376048
    },
    {
        "content": "<ul>\n<li>\"Tweak <code>if let</code> suggestion to be more liberal with suggestion and to not ICE\" <a href=\"https://github.com/rust-lang/rust/pull/77283\">rust#77283</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> </li>\n<li>Should fix <a href=\"https://github.com/rust-lang/rust/issues/77218\">rust#77218</a> (<code>P-high</code> beta regression) and <a href=\"https://github.com/rust-lang/rust/issues/77238\">rust#77238</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214192931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376057
    },
    {
        "content": "<p>(this has not yet landed in nightly nor has it been r+'ed)</p>",
        "id": 214193026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376104
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has given some feedback</p>",
        "id": 214193092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> would you prefer to see a smaller patch put up as a backport candidate?</p>",
        "id": 214193159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376169
    },
    {
        "content": "<p>Hm I was not aware of beta-nom here</p>",
        "id": 214193178,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376181
    },
    {
        "content": "<p>the beta-nom only happened recently</p>",
        "id": 214193190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376188
    },
    {
        "content": "<p>I can imagine being nervous about the <code>self.can_coerce</code> argument change</p>",
        "id": 214193209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376206
    },
    {
        "content": "<p>even if its correct</p>",
        "id": 214193218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376209
    },
    {
        "content": "<p>Ah, I see the comment. I do not have particular feedback. The patch felt fairly small, and only touched error code I think anyway</p>",
        "id": 214193238,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> was that important for fixing the ICE?</p>",
        "id": 214193248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376223
    },
    {
        "content": "<p>I was hoping to get <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> or someone else more familiar with coercion to double check the coercion ordering change</p>",
        "id": 214193302,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376251
    },
    {
        "content": "<p>I can review, I just read it through</p>",
        "id": 214193316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376258
    },
    {
        "content": "<p>okay</p>",
        "id": 214193325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376265
    },
    {
        "content": "<p>I think the coercion ordering change should be harmless</p>",
        "id": 214193338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376271
    },
    {
        "content": "<p>error -&gt; ICE seems fine to backport</p>",
        "id": 214193345,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376274
    },
    {
        "content": "<p>(and I see why <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> did it)</p>",
        "id": 214193355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376278
    },
    {
        "content": "<p>okay</p>",
        "id": 214193357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376281
    },
    {
        "content": "<p>I think the PR overall seems safe to backport then</p>",
        "id": 214193440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376308
    },
    {
        "content": "<p>I'm okay approving the backport if niko approves landing it on nightly</p>",
        "id": 214193478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376321
    },
    {
        "content": "<p>next</p>",
        "id": 214193487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376326
    },
    {
        "content": "<ul>\n<li>\"Revert \"Allow dynamic linking for iOS/tvOS targets.\"\" <a href=\"https://github.com/rust-lang/rust/pull/77716\">rust#77716</a><ul>\n<li>(has not landed in nightly) </li>\n<li>Opened by <code>@francesca64</code></li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> </li>\n<li>This patch reverts <a href=\"https://github.com/rust-lang/rust/pull/73516\">rust#73516</a> and <strong>disallows</strong> compiling against dynamic libs (Apple does not allow that and your App won't be published)</li>\n<li>Previous patch however <strong>allowed</strong> dynamic linking</li>\n<li>Reverting now the patch breaks code in production (as pointed out by <code>@aspenluxxxy</code>, previous patch author)</li>\n<li><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-709364682\">suggests as last resort</a> to revert the previous patch (although not the ideal solution) since this can now be considered a regression from stable</li>\n<li><code>@cutsoy</code> implements a patch <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-709410444\">adding a new parameter to cargo</a></li>\n<li>Issue reporter <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-712492125\">suggests</a> that the above patch works just fine</li>\n<li>Question: from the T-compiler point of view, anything else that can be done/investigated or the case is closed?</li>\n</ul>\n</li>\n</ul>",
        "id": 214193506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376338
    },
    {
        "content": "<p>I think we should decline to backport this, based on the comment thread</p>",
        "id": 214193568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376369
    },
    {
        "content": "<p>and its possible it should just be closed</p>",
        "id": 214193575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376376
    },
    {
        "content": "<p>but we don't have to decide about closing it right now</p>",
        "id": 214193598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376394
    },
    {
        "content": "<p>I mostly just want to decline to backport and move along, unless someone wants to champion backporting it.</p>",
        "id": 214193668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376411
    },
    {
        "content": "<p>one thing I would want to note:</p>",
        "id": 214193715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376432
    },
    {
        "content": "<blockquote>\n<p>In the future, would it be possible for me to be pinged when iOS-related PRs are made? I work for a company that intends on using Rust on iOS in production, so I'd gladly provide testing.</p>\n</blockquote>",
        "id": 214193727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376439
    },
    {
        "content": "<p>possible notification group?</p>",
        "id": 214193732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376442
    },
    {
        "content": "<p>(the basic summary, as I understand from comments, is that bug filer had their Cargo.toml set up to build <code>cdylib</code>, which was silently ignored on iOS/tvOS target prior to the PR that allowed dynamic linking.)</p>",
        "id": 214193773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376462
    },
    {
        "content": "<p>I'm inferring from the silence that no one wants to champion a backport here.</p>",
        "id": 214193853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376510
    },
    {
        "content": "<p>I'm still reading the thread</p>",
        "id": 214193919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376530
    },
    {
        "content": "<p>(Oh, I forgot to point out that PR is contentious (based on comment thread), hasn't landed on nightly, and hasn't been r+'ed. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> )</p>",
        "id": 214193924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376532
    },
    {
        "content": "<p>I'm not sure I would champion the <em>backport</em></p>",
        "id": 214193939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376541
    },
    {
        "content": "<p>but I do think the correct course of action is complicated</p>",
        "id": 214193961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376553
    },
    {
        "content": "<p>I can't tell yet if there's a known workaround?</p>",
        "id": 214193983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376563
    },
    {
        "content": "<p>I think there are cargo changes that were proposed</p>",
        "id": 214194002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376575
    },
    {
        "content": "<p>that at least fixed the problem for the bug filer</p>",
        "id": 214194017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376582
    },
    {
        "content": "<p>yeah, it seems like \"no\", but there are cargo changes</p>",
        "id": 214194023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376584
    },
    {
        "content": "<p>but I don't know if the cargo team would accept those changes</p>",
        "id": 214194056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376598
    },
    {
        "content": "<p>I can certianly believe that we can do better here</p>",
        "id": 214194072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376604
    },
    {
        "content": "<p>Oh, did the cargo changes <em>not land</em> ?}</p>",
        "id": 214194091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376611
    },
    {
        "content": "<p>I guess I think this PR is not the right fix, but I would like to help this person get their code working</p>",
        "id": 214194110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376621
    },
    {
        "content": "<p>I didn't follow through to see what the status was of the linked cargo PR</p>",
        "id": 214194124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376625
    },
    {
        "content": "<p>Yeah okay</p>",
        "id": 214194143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376633
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/pull/8789\">https://github.com/rust-lang/cargo/pull/8789</a></p>",
        "id": 214194153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376636
    },
    {
        "content": "<p>I suggest we <em>open an issue</em></p>",
        "id": 214194179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376643
    },
    {
        "content": "<p>and try to migrate discussion of the problem there</p>",
        "id": 214194257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <a href=\"https://github.com/rust-lang/cargo/pull/8789#issuecomment-713161246\">sounds dubious</a> :)</p>",
        "id": 214194259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376673
    },
    {
        "content": "<p>rather than try to judge the merits of this PR itself</p>",
        "id": 214194296,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376691
    },
    {
        "content": "<p>anyway</p>",
        "id": 214194315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376699
    },
    {
        "content": "<p>OK, I couldn't tell if the <code>cfg_attr</code> approach that <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> suggested would work ...</p>",
        "id": 214194328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603376705
    },
    {
        "content": "<p>declining to beta-backport</p>",
        "id": 214194329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214194328\">said</a>:</p>\n<blockquote>\n<p>OK, I couldn't tell if the <code>cfg_attr</code> approach that <span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> suggested would work ...</p>\n</blockquote>\n<p>(I think its something where you need the relevant settings in the Cargo.toml; they don't work in the .rs file for some reason)</p>",
        "id": 214194416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376740
    },
    {
        "content": "<p>(and I don't know if Cargo.toml's support conditional settings. I guess one could encode it with features...?)</p>",
        "id": 214194461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376759
    },
    {
        "content": "<p>next</p>",
        "id": 214194539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376789
    },
    {
        "content": "<ul>\n<li>\"Disable MatchBranchSimplification\" <a href=\"https://github.com/rust-lang/rust/pull/78151\">rust#78151</a><ul>\n<li>Opened by <code>@tmiasko</code> </li>\n<li>Mentions that this optimization can result in unsoundness, because it introduces additional uses of a place holding the discriminant value without ensuring that it is valid</li>\n<li>Patch found after adding the <a href=\"https://github.com/rust-lang/rust/pull/77369\">-Zvalidate-mir</a> validation</li>\n</ul>\n</li>\n</ul>",
        "id": 214194547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376790
    },
    {
        "content": "<p>this is r+'ed and merged into nightly</p>",
        "id": 214194631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376836
    },
    {
        "content": "<p>unfortunately disabling the optimization does cause observable regression, according to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> 's comment at end of this PR</p>",
        "id": 214194762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376888
    },
    {
        "content": "<p>I am increasingly concerned about the seemingly frequent disabling/reverts of mir opts that we're backporting - should we be considering a blanket removal of mir opts on beta or something like that?</p>",
        "id": 214194776,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376894
    },
    {
        "content": "<p>(I am concerned with the need in the first place, but the backports make me even more concerned that we might miss one)</p>",
        "id": 214194807,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376916
    },
    {
        "content": "<p>mmm</p>",
        "id": 214194825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376926
    },
    {
        "content": "<p>disabling it is observable <em>improvement</em></p>",
        "id": 214194858,
        "sender_full_name": "tm",
        "timestamp": 1603376941
    },
    {
        "content": "<p>I dunno, a blanket disable poses more serious riskes w.r.t. performance regressions</p>",
        "id": 214194860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214194858\">said</a>:</p>\n<blockquote>\n<p>disabling it is observable <em>improvment</em></p>\n</blockquote>\n<p>what? That's not how I interpreted the comment</p>",
        "id": 214194915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376967
    },
    {
        "content": "<p>/me looks</p>",
        "id": 214194920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376969
    },
    {
        "content": "<p>whoa</p>",
        "id": 214194955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603376983
    },
    {
        "content": "<p>Oh yeah the comment is misleading, I missed that this is not a new optimization</p>",
        "id": 214194961,
        "sender_full_name": "simulacrum",
        "timestamp": 1603376986
    },
    {
        "content": "<p>anyway, I'm interested in hearing from mir-opt folks if this is just expected or if maybe we need more vetting or something on opts</p>",
        "id": 214195033,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377006
    },
    {
        "content": "<p>I don't even understand</p>",
        "id": 214195048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377010
    },
    {
        "content": "<p>I guess the analysis itself is costly</p>",
        "id": 214195074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377027
    },
    {
        "content": "<p>sounds like this optimization may not have been very effective to begin with?</p>",
        "id": 214195077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377028
    },
    {
        "content": "<p>ah, that makes sense</p>",
        "id": 214195087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377033
    },
    {
        "content": "<p>(I guess this comes back to the need to benchmark <em>generated code</em> directly)</p>",
        "id": 214195109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377043
    },
    {
        "content": "<p>yeah</p>",
        "id": 214195127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377052
    },
    {
        "content": "<p>How often have we been backporting \"disable opt X\" PRs?</p>",
        "id": 214195131,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377055
    },
    {
        "content": "<p>its <em>good</em> that we try to focus on compiler performance</p>",
        "id": 214195145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377062
    },
    {
        "content": "<p>I feel like I have seen 3-4 mir opt disable backports in the last cycle</p>",
        "id": 214195184,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377077
    },
    {
        "content": "<p>maybe I'm overcounting though</p>",
        "id": 214195195,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377083
    },
    {
        "content": "<p>but doing it to the exclusion of looking at overall generated code performance is definitely subpar</p>",
        "id": 214195200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377084
    },
    {
        "content": "<p>Lets beta backport this</p>",
        "id": 214195236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377102
    },
    {
        "content": "<p>It seems like disabling this optimization is the right move in this moment</p>",
        "id": 214195241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377106
    },
    {
        "content": "<p>but I'm glad you're raising the pattern</p>",
        "id": 214195253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377110
    },
    {
        "content": "<p>and plan to investigate the question of mir-opts in general</p>",
        "id": 214195265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377115
    },
    {
        "content": "<p>but we don't have to decide that right now</p>",
        "id": 214195277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377121
    },
    {
        "content": "<p>(maybe make it an item to discuss tomorrow...)</p>",
        "id": 214195335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377130
    },
    {
        "content": "<p>beta backport approved</p>",
        "id": 214195346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377138
    },
    {
        "content": "<p>FWIW, quick scroll through:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/78151\">https://github.com/rust-lang/rust/pull/78151</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77549\">https://github.com/rust-lang/rust/pull/77549</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77396\">https://github.com/rust-lang/rust/pull/77396</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/76837\">https://github.com/rust-lang/rust/pull/76837</a></li>\n</ul>",
        "id": 214195382,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377156
    },
    {
        "content": "<ul>\n<li>\"Disable \"optimization to avoid load of address\" in InstCombine\" <a href=\"https://github.com/rust-lang/rust/pull/78195\">rust#78195</a><br>\n    - Opened by <code>@tmiasko</code><br>\n    - Assigned to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <br>\n    - This fixes <code>P-critical</code> issue <a href=\"https://github.com/rust-lang/rust/issues/78192\">rust#78192</a></li>\n</ul>",
        "id": 214195392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377161
    },
    {
        "content": "<p>case in point? :)</p>",
        "id": 214195436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377180
    },
    {
        "content": "<p>hmm? I was assuming this is LLVM opt?</p>",
        "id": 214195476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377199
    },
    {
        "content": "<p>No, looks like mir opt.</p>",
        "id": 214195514,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377213
    },
    {
        "content": "<p>oh</p>",
        "id": 214195519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377215
    },
    {
        "content": "<p>looks like a MIR opt to me</p>",
        "id": 214195525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377216
    },
    {
        "content": "<p>never mind</p>",
        "id": 214195538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377221
    },
    {
        "content": "<p>/me <em>thought</em> there was an LLVM opt <strong>called</strong> inst-combine ...</p>",
        "id": 214195555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377228
    },
    {
        "content": "<p>I think there is</p>",
        "id": 214195576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377235
    },
    {
        "content": "<p>oi</p>",
        "id": 214195582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377238
    },
    {
        "content": "<p>okay, well, backport approved, I think</p>",
        "id": 214195634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214194547\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Disable MatchBranchSimplification\" <a href=\"https://github.com/rust-lang/rust/pull/78151\">rust#78151</a></li>\n</ul>\n</blockquote>\n<p>is there an  issue filed for the bug in the mir-opt itself here?</p>",
        "id": 214195776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377311
    },
    {
        "content": "<p>(I saw a bug filed for PR <a href=\"https://github.com/rust-lang/rust/issues/78195\">#78195</a>, which was good; just wanted to know if there was a simllar bug here....)</p>",
        "id": 214195816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377334
    },
    {
        "content": "<p>anyway we can move forward</p>",
        "id": 214195863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377353
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No beta nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Abeta-nominated+-label%3Abeta-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No beta nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214195909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377364
    },
    {
        "content": "<h2>Stable-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214195936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377370
    },
    {
        "content": "<ul>\n<li>\"Revert \"Allow dynamic linking for iOS/tvOS targets.\"\" <a href=\"https://github.com/rust-lang/rust/pull/77716\">rust#77716</a><ul>\n<li>This was also beta nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 214195954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377376
    },
    {
        "content": "<p>this is not getting stable approved, skipping</p>",
        "id": 214195966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377383
    },
    {
        "content": "<ul>\n<li>\"Disable MatchBranchSimplification\" <a href=\"https://github.com/rust-lang/rust/pull/78151\">rust#78151</a><ul>\n<li>This was also beta nominated</li>\n</ul>\n</li>\n</ul>",
        "id": 214195986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377389
    },
    {
        "content": "<p>Hm, this might mean a point release is warranted given it's a soundness fix. Annoying that we didn't catch it earlier :/</p>",
        "id": 214196109,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377441
    },
    {
        "content": "<p>... this is an unsoundness... and the PR is pretty trivial, right? So it seems like a clear approval</p>",
        "id": 214196128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377451
    },
    {
        "content": "<p>(But regardless seems like a good candidate for stable backport)</p>",
        "id": 214196132,
        "sender_full_name": "simulacrum",
        "timestamp": 1603377453
    },
    {
        "content": "<p>yeah. Approved for stable backport.</p>",
        "id": 214196164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377464
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No stable nominations for <code>libs-impl</code> this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aall+label%3Astable-nominated+-label%3Astable-accepted+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No stable nominations for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214196201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377477
    },
    {
        "content": "<h2>PRs S-waiting-on-team</h2>\n<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214196233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377483
    },
    {
        "content": "<ul>\n<li>\"Tracking issue for renaming crates inside compiler directory\" <a href=\"https://github.com/rust-lang/rust/issues/76425\">rust#76425</a><ul>\n<li>References this <a href=\"https://github.com/rust-lang/compiler-team/issues/336\">MCP</a></li>\n<li>The goal is to have all crates under <code>./compiler</code> have a consistent name</li>\n<li><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  summarized the discussion in this <a href=\"https://hackmd.io/1FgS1fZGSOyWrwhDMq98pw\">HackMD file</a></li>\n<li>cc <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></li>\n</ul>\n</li>\n</ul>",
        "id": 214196272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377491
    },
    {
        "content": "<p>I'm personally in favor of the keeping the status quo here.</p>",
        "id": 214196396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377537
    },
    {
        "content": "<p>mostly out of conservatism</p>",
        "id": 214196406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377542
    },
    {
        "content": "<p>i..e, the points in favor, if I understand them correctly, largely only affect <code>use</code> statements</p>",
        "id": 214196490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377586
    },
    {
        "content": "<p>which I don't see as something we should be investing time optimizing</p>",
        "id": 214196582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377614
    },
    {
        "content": "<p>the one bullet that does worry me is this: \"We observed small performance degradation by having the longer paths, and this might help to recoup some of that lost perf.\"</p>",
        "id": 214196611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377631
    },
    {
        "content": "<p>but how small? If we're observing it, it cannot be that small. And that in turn makes me wonder: This amount of difference matters? Why?</p>",
        "id": 214196676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377666
    },
    {
        "content": "<p>(E.g.: Is it something where a certain  length makes us cross a threshold in the memory allocator path? Or in the hashtables?)</p>",
        "id": 214196744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377703
    },
    {
        "content": "<p>So it seems like there may be interesting questions to explore here</p>",
        "id": 214196772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377714
    },
    {
        "content": "<p>one alternative that I've read somewhere, unsure if it was considered was <code>rustc/foo</code> for dirs and <code>rustc_foo</code> to <code>use</code></p>",
        "id": 214196833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603377725
    },
    {
        "content": "<p>yeah, that's listed as a secondary alternative in the linked hackmd I think.</p>",
        "id": 214196868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377739
    },
    {
        "content": "<p>the second one says compiler not rustc</p>",
        "id": 214196917,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603377760
    },
    {
        "content": "<p>oh. But we've already moved everything into <code>compiler/</code></p>",
        "id": 214196953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377777
    },
    {
        "content": "<p>(right?)</p>",
        "id": 214196961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377779
    },
    {
        "content": "<p>I would prefer rustc/ though</p>",
        "id": 214196967,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603377781
    },
    {
        "content": "<p>We're not going to move everything somewhere <strong>else</strong>, are we?</p>",
        "id": 214196985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377789
    },
    {
        "content": "<p>I don't feel strongly about any of this to be clear</p>",
        "id": 214196992,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603377792
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214196953\">said</a>:</p>\n<blockquote>\n<p>oh. But we've already moved everything into <code>compiler/</code></p>\n</blockquote>\n<p>yeah but some people complained about that</p>",
        "id": 214197017,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603377801
    },
    {
        "content": "<p>I don't think we can resolve this in a triage meeting</p>",
        "id": 214197055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377817
    },
    {
        "content": "<p>But I do kind of wish we'd picked different ones directories to move things to</p>",
        "id": 214197077,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603377824
    },
    {
        "content": "<p>maybe we need a design meeting. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 214197088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377828
    },
    {
        "content": "<p>anyway I think we're better off moving along. I don't want to run out of time again today</p>",
        "id": 214197174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377849
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>No PRs waiting on <code>libs-impl</code> this time.</li>\n</ul>",
        "id": 214197201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377859
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+\">6 T-compiler P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">3 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+\">48 T-compiler P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AT-compiler+label%3AP-high+no%3Aassignee\">29 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">2 P-critical, 4 P-high, 0 P-medium, 0 P-low regression-from-stable-to-beta</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">2 P-critical, 2 P-high, 4 P-medium, 2 P-low regression-from-stable-to-nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">1 P-critical, 18 P-high, 63 P-medium, 5 P-low regression-from-stable-to-stable</a></li>\n</ul>",
        "id": 214197215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377866
    },
    {
        "content": "<h3>P-critical</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214197223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377872
    },
    {
        "content": "<ul>\n<li>\"Increasingly slow compilation as more levels of <code>async</code> are added in Rust 1.46\" <a href=\"https://github.com/rust-lang/rust/issues/75992\">rust#75992</a><ul>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"263031\">@Nicholas Bishop</span> </li>\n<li>Unassigned, not easy to reproduce</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-683270098\">@kellerkindt</a> and <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-683274620\">@algesten</a> did some bisecting </li>\n<li><span class=\"user-mention\" data-user-id=\"252466\">@Noah Kennedy</span> is trying to build a minimal repro </li>\n<li><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> suggests instead of reverting important patches a possible way forward could be implementing some caching like in <a href=\"https://github.com/rust-lang/rust/issues/75992#issuecomment-713100226\">PR #76928</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214197235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377881
    },
    {
        "content": "<p>hmm that sounds scary</p>",
        "id": 214197269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377896
    },
    {
        "content": "<p>It’s a bug that has prevented quite a few people to use Rust 1.46+</p>",
        "id": 214197351,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603377931
    },
    {
        "content": "<p>hmm</p>",
        "id": 214197374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603377940
    },
    {
        "content": "<p>so we still need an MCVE here</p>",
        "id": 214197493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603377966
    },
    {
        "content": "<p>that does seem like the first step</p>",
        "id": 214197592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378015
    },
    {
        "content": "<p>(or maybe one is linked; see Davester47's comment near end. Not sure.)</p>",
        "id": 214197629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378030
    },
    {
        "content": "<p>Also, <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> suggested reverting PR <a href=\"https://github.com/rust-lang/rust/issues/72796\">#72796</a></p>",
        "id": 214197652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378043
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> said to revert anything we'd have to revert PR <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a></p>",
        "id": 214197700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378064
    },
    {
        "content": "<p>these two comments seem in conflict; <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> , do you know what <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> meant?</p>",
        "id": 214197793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378088
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> is a fix for a problem introduced by <a href=\"https://github.com/rust-lang/rust/issues/72796\">#72796</a></p>",
        "id": 214197849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378111
    },
    {
        "content": "<p>I think one of those PRs was a fix to another critical bug</p>",
        "id": 214197857,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603378114
    },
    {
        "content": "<p>so I think we'd probably have to revert <em>both</em></p>",
        "id": 214197870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378119
    },
    {
        "content": "<p>oh oh I see</p>",
        "id": 214197895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378128
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> is itself the right thing to do...I think :) I'm trying to page back in the discussion around this</p>",
        "id": 214197933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378141
    },
    {
        "content": "<p>But if we remove <a href=\"https://github.com/rust-lang/rust/issues/72796\">#72796</a>, then we <em>can</em> remove <a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a>, at least in short term?</p>",
        "id": 214197984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378159
    },
    {
        "content": "<p>I'm basically wondering what, if anything, we can realistically do here that would be targeted for <strong>stable backport</strong></p>",
        "id": 214198106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378204
    },
    {
        "content": "<p>yeah, I think so</p>",
        "id": 214198122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378205
    },
    {
        "content": "<p>I think it would be reasonable to back those out and try again</p>",
        "id": 214198144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378216
    },
    {
        "content": "<p>(though it'd be great to have a MCVE to work with)</p>",
        "id": 214198165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378224
    },
    {
        "content": "<p>I think we should investigate doing that</p>",
        "id": 214198173,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378226
    },
    {
        "content": "<p>and yeah, getting an MCVE is important</p>",
        "id": 214198190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378232
    },
    {
        "content": "<p>I can allocate time today to look into that, I think/hope.</p>",
        "id": 214198208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378241
    },
    {
        "content": "<p>lets move along under assumption that we will investigate reverts as a <em>short term</em> fix</p>",
        "id": 214198272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378265
    },
    {
        "content": "<p>while also looking into caching strategies etc for long term</p>",
        "id": 214198297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378279
    },
    {
        "content": "<ul>\n<li>\"Optimisation-caused UB during cross-crate compilation\" <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a><ul>\n<li>This one was already discussed</li>\n<li>Assigned to <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></li>\n<li><a href=\"https://reviews.llvm.org/D88529\">A different LLVM patch has been accepted</a> and will be included in LLVM 12</li>\n<li>The accepted patch is pretty small and self-contained, so we could cherry-pick it if we wanted to</li>\n</ul>\n</li>\n</ul>",
        "id": 214198342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378297
    },
    {
        "content": "<p>where are we on this, we talked about it last week ...</p>",
        "id": 214198370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378311
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> do you all want to be in charge of making a decision here?</p>",
        "id": 214198446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378330
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214197933\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/75443\">#75443</a> is itself the right thing to do...I think :) I'm trying to page back in the discussion around this</p>\n</blockquote>\n<p>(yeah, I can't really see a problem with doing it)</p>",
        "id": 214198455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378334
    },
    {
        "content": "<p>My personal inclination regarding <a href=\"https://github.com/rust-lang/rust/issues/76387\">rust#76387</a> is to backport LLVM's patch</p>",
        "id": 214198523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378372
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> do you have time to look into doing that?</p>",
        "id": 214198566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378394
    },
    {
        "content": "<p>sure!</p>",
        "id": 214198588,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603378406
    },
    {
        "content": "<p>fantastic!</p>",
        "id": 214198600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378413
    },
    {
        "content": "<p>okay</p>",
        "id": 214198601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378414
    },
    {
        "content": "<p>next</p>",
        "id": 214198603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378416
    },
    {
        "content": "<p>I haven't backported an llvm patch before, so I'm not sure about the procedure</p>",
        "id": 214198607,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603378417
    },
    {
        "content": "<p>do I just open a PR?</p>",
        "id": 214198611,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603378420
    },
    {
        "content": "<p>lets talk about it after meeting</p>",
        "id": 214198637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378431
    },
    {
        "content": "<p>(maybe in whatever zulip stream is allocated for that issue)</p>",
        "id": 214198701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378450
    },
    {
        "content": "<ul>\n<li>\"[ICE] Encountered errors resolving bounds after type-checking\" <a href=\"https://github.com/rust-lang/rust/issues/77653\">rust#77653</a><ul>\n<li>This one was already discussed</li>\n<li>Nightly regression</li>\n<li>Opened by <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> to highlight comment from issue above <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> <a href=\"https://github.com/rust-lang/rust/issues/77638#issuecomment-704892157\">rust#77638</a></li>\n<li>Bisected to commit <a href=\"https://github.com/rust-lang/rust/commit/08e2d4616613716362b4b49980ff303f2b9ae654\">08e2d46</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77720\">PR by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> that fixes the issue is up and r+ed</a> but with issues to go through</li>\n</ul>\n</li>\n</ul>",
        "id": 214198713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378461
    },
    {
        "content": "<p>\"but with issues to go through\"</p>",
        "id": 214198747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378477
    },
    {
        "content": "<p>/me doesn't understand that phrase</p>",
        "id": 214198763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378485
    },
    {
        "content": "<p>bors had issues testing it, but is doing so as we speak</p>",
        "id": 214198794,
        "sender_full_name": "lqd",
        "timestamp": 1603378500
    },
    {
        "content": "<p>sorry for my wrong english :)</p>",
        "id": 214198797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603378501
    },
    {
        "content": "<p>exactly bots don't like that PR :P</p>",
        "id": 214198812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603378509
    },
    {
        "content": "<p>its not necessarily wrong english</p>",
        "id": 214198825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378514
    },
    {
        "content": "<p>just some of those words, like \"issues\", have certain connotations (i.e. github issues) in this meeting that lead to my own confusion</p>",
        "id": 214198870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378548
    },
    {
        "content": "<p>okay well it seems like its moving along</p>",
        "id": 214198937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378564
    },
    {
        "content": "<p>and so shall we</p>",
        "id": 214198940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378567
    },
    {
        "content": "<ul>\n<li>\"InstCombine introduces an incorrect use of a local after its storage has ended\" <a href=\"https://github.com/rust-lang/rust/issues/78192\">rust#78192</a><br>\n    - Opened by <code>tmiasko</code><br>\n    - MIR opt causes unsoundness<br>\n    - Found by MIR validator PR <a href=\"https://github.com/rust-lang/rust/pull/77369\">rust#77369</a> &amp; <a href=\"https://github.com/rust-lang/rust/pull/78147\">rust#78147</a><br>\n    - Bugs' origin <a href=\"https://github.com/rust-lang/rust/pull/76683\">rust#76683</a><br>\n    - Already merged PR <a href=\"https://github.com/rust-lang/rust/pull/78195\">rust#78195</a> to disable problematic parts of InstCombine optimization, waiting for beta backport</li>\n</ul>",
        "id": 214198963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378579
    },
    {
        "content": "<p>we discussed this already as well, <em>phew</em></p>",
        "id": 214198977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378585
    },
    {
        "content": "<p>lets move along then</p>",
        "id": 214198982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378589
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3Alibs-impl\">libs-impl</a></p>\n<ul>\n<li>\"regression: could not fully normalize type\" <a href=\"https://github.com/rust-lang/rust/issues/78139\">rust#78139</a><br>\n    - Opened by <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <br>\n    - Regression seems to be in PR <a href=\"https://github.com/rust-lang/rust/pull/70793\">rust#70793</a></li>\n</ul>",
        "id": 214199000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378599
    },
    {
        "content": "<p>hmm</p>",
        "id": 214199009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378604
    },
    {
        "content": "<p>unassigned beta regression</p>",
        "id": 214199054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378629
    },
    {
        "content": "<p>some investigation on thread from use named <code>the8472</code></p>",
        "id": 214199108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378656
    },
    {
        "content": "<p>Seems reasonable to revert the PR on beta perhaps</p>",
        "id": 214199128,
        "sender_full_name": "simulacrum",
        "timestamp": 1603378667
    },
    {
        "content": "<p>yeah lets do that</p>",
        "id": 214199158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378681
    },
    {
        "content": "<p>(as a first step)</p>",
        "id": 214199163,
        "sender_full_name": "simulacrum",
        "timestamp": 1603378682
    },
    {
        "content": "<p>okay</p>",
        "id": 214199174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378683
    },
    {
        "content": "<p>I can do that</p>",
        "id": 214199201,
        "sender_full_name": "simulacrum",
        "timestamp": 1603378685
    },
    {
        "content": "<p>next</p>",
        "id": 214199216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378691
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AP-critical+label%3AT-rustdoc\">T-rustdoc</a></p>\n<ul>\n<li>No <code>P-critical</code> issues for <code>T-rustdoc</code> this time.</li>\n</ul>",
        "id": 214199225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378695
    },
    {
        "content": "<p>I'm going to skip the P-high's</p>",
        "id": 214199250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378711
    },
    {
        "content": "<p>and jump to perforance logs</p>",
        "id": 214199263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378716
    },
    {
        "content": "<p>because we didn't cover perf last week</p>",
        "id": 214199277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378723
    },
    {
        "content": "<h2>Performance logs</h2>\n<p>A variety of changes, nothing particularly notable from a performance<br>\nperspective. <a href=\"https://github.com/rust-lang/rust/issues/77792\">#77792</a> is an<br>\ninteresting win on migrating to tracing values rather than the older log<br>\nformatting. <a href=\"https://github.com/rust-lang/rust/issues/76859\">#76859</a> is also<br>\ninteresting, starting out as a functional fix but appears to have been a<br>\nperformance win for incremental benchmarks in some cases as well.</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/tree/master/triage#triage-logs\">Triage</a> done by <strong>@simulacrum</strong>.<br>\nRevision range: <a href=\"https://perf.rust-lang.org/?start=06a079c43efb062e335e6e6c9dabd3c750619980&amp;end=22e6b9c68941996daa45786b4145e6196e51f0f4&amp;absolute=false&amp;stat=instructions%3Au\">06a079c43efb062e335e6e6c9dabd3c750619980..22e6b9c68941996daa45786b4145e6196e51f0f4</a></p>",
        "id": 214199295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378736
    },
    {
        "content": "<p>4 Regressions, 7 Improvements, 0 Mixed<br>\n2 of them in rollups</p>",
        "id": 214199310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378745
    },
    {
        "content": "<h3>Regressions</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77755\">#77755</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=e8529c79cce76b47b7b61060db36cf8201c688a3&amp;end=2d6eccdb67aef48d0804cb473536b925f61a7f18&amp;stat=instructions:u\">instruction counts</a> (up to 1.3% on <code>full</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77755#issuecomment-714086526\">Nag</a></li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77873\">#77873</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=19e1aac6ea9879c6d10eed7106b3bc883e5bf9a5&amp;end=93deabce03dc10a80244f5da3e3819452744da2a&amp;stat=instructions:u\">instruction counts</a> (up to 2.7% on <code>full</code> builds of <code>wg-grammar-check</code>)</li>\n<li>Functional change. Regression not significantly major to warrant a revert.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78060\">#78060</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=ffeeb20398bb9a25c1f75599b942f57c85a2140d&amp;end=043eca7f0b34d12e61c44206beca740628647080&amp;stat=instructions:u\">instruction counts</a> (up to 1.2% on <code>incr-unchanged</code> builds of <code>clap-rs-check</code>)</li>\n<li>Rollup; likely due to BTreeMap or meta-prelude changes. Not worth deep<br>\n  investigation: regression is minor and interesting changes are likely not<br>\n  readily changeable.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77250\">#77250</a></p>\n<ul>\n<li>Moderate regression in <a href=\"https://perf.rust-lang.org/compare.html?start=19356453cbfb734bc60a1853c10e3095d05e0342&amp;end=22e6b9c68941996daa45786b4145e6196e51f0f4&amp;stat=instructions:u\">instruction counts</a> (up to 3.1% on <code>incr-unchanged</code> builds of <code>packed-simd-check</code>)</li>\n<li>Functional change that we definitely want, performance regression is not too<br>\n  significant.</li>\n</ul>",
        "id": 214199322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378755
    },
    {
        "content": "<h3>Improvements</h3>\n<p><a href=\"https://github.com/rust-lang/rust/issues/76859\">#76859</a></p>\n<ul>\n<li>Very large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=06a079c43efb062e335e6e6c9dabd3c750619980&amp;end=c71248b70870960af9993de4f31d3cba9bbce7e8&amp;stat=instructions:u\">instruction counts</a> (up to -58.0% on <code>incr-patched: Compiler new</code> builds of <code>regex-opt</code>)</li>\n<li>Correctness is the key here, but it seems like our hand-rolled incremental<br>\n  tracking was (at least on the perf benchmarks) worse anyway.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77792\">#77792</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=8dae8cdcc8fa879cea6a4bbbfa5b32e97be4c306&amp;end=abbdec3be6cfce1175d0dc6737a2999cf43b530d&amp;stat=instructions:u\">instruction counts</a> (up to -1.7% on <code>incr-unchanged</code> builds of <code>deeply-nested-async-opt</code>)</li>\n<li>Switching to tracing spans and tracing's \"values\" over string-formatting seems<br>\n  to have been a improvement here. Definitely an interesting result --<br>\n  presumably tracing's handling is somehow more visible to LLVM?</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77796\">#77796</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=abbdec3be6cfce1175d0dc6737a2999cf43b530d&amp;end=afb4514c099fde6e3102373602bea9e6dacd4f88&amp;stat=instructions:u\">instruction counts</a> (up to -1.4% on <code>full</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li>Seems like potentially a slight regression on wall times, but ultimately the<br>\n  change is good on its merits, so no action is taken at this time.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77947\">#77947</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=b6e2dc6cdece6b498b876bc7e9377ff7d63d93e7&amp;end=9bd740a8f17d75168b683bcfb077b6e450047df5&amp;stat=instructions:u\">instruction counts</a> (up to -7.4% on <code>incr-unchanged</code> builds of <code>cranelift-codegen-debug</code>)</li>\n<li>Seems to be a mixed result on <a href=\"https://perf.rust-lang.org/compare.html?start=b6e2dc6cdece6b498b876bc7e9377ff7d63d93e7&amp;end=9bd740a8f17d75168b683bcfb077b6e450047df5&amp;stat=wall-time\">wall\n  times</a><br>\n  though.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77373\">#77373</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=6af9846fcc8797bf97e9fb387385208c2219f3d0&amp;end=ffeeb20398bb9a25c1f75599b942f57c85a2140d&amp;stat=instructions:u\">instruction counts</a> (up to -1.6% on <code>full</code> builds of <code>deeply-nested-async-check</code>)</li>\n<li>Wall times are less positive, but mostly on incremental. Not deemed a concern.</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77908\">#77908</a></p>\n<ul>\n<li>Moderate improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=cb2462c53f2cc3f140c0f1ea0976261cab968a34&amp;end=f90e6173053f7e6b377d7f75367b511ceee7d9d1&amp;stat=instructions:u\">instruction counts</a> (up to -1.8% on <code>full</code> builds of <code>inflate-check</code>)</li>\n</ul>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78151\">#78151</a></p>\n<ul>\n<li>Large improvement in <a href=\"https://perf.rust-lang.org/compare.html?start=9832374f6e378971e1a933362cf9781b121bb845&amp;end=981346fc07dd5ef414c5b1b21999f7604cece006&amp;stat=instructions:u\">instruction counts</a> (up to -7.6% on <code>incr-patched: println</code> builds of <code>regression-31157-opt</code>)</li>\n</ul>",
        "id": 214199354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378771
    },
    {
        "content": "<h3>Nags requiring follow up</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/77755#issuecomment-714086526\">https://github.com/rust-lang/rust/pull/77755#issuecomment-714086526</a></li>\n</ul>",
        "id": 214199382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378779
    },
    {
        "content": "<p>Okay so the one with the nag is I guess the main one we want to follow-up on</p>",
        "id": 214199481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378813
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler</a></p>",
        "id": 214199543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378844
    },
    {
        "content": "<p>I'm skipping ahead to the RFC's seciton here</p>",
        "id": 214199598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378868
    },
    {
        "content": "<p>because I think those seem most important to highlght, at least this week</p>",
        "id": 214199629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378883
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">RFC</a></p>",
        "id": 214199642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378888
    },
    {
        "content": "<ul>\n<li>\"Amend RFC2603 to allow mangled identifiers to start with a digit.\" <a href=\"https://github.com/rust-lang/rfcs/pull/2705\">rfcs#2705</a><ul>\n<li>Submitted by <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> </li>\n<li>RFC proposes a new mangling scheme describing what the symbol names generated by the Rust compiler look like</li>\n<li>Suggested by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  <a href=\"https://github.com/rust-lang/rfcs/pull/2603#discussion_r279670424\">in this comment</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214199656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378898
    },
    {
        "content": "<p>(gotta run)</p>",
        "id": 214199691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603378919
    },
    {
        "content": "<p>this is also <strong>old</strong></p>",
        "id": 214199753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378929
    },
    {
        "content": "<p>not gonna be resolved in today's meeting</p>",
        "id": 214199789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378943
    },
    {
        "content": "<p>so I'll just point it out</p>",
        "id": 214199795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378947
    },
    {
        "content": "<p>as well as the other one</p>",
        "id": 214199806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378953
    },
    {
        "content": "<ul>\n<li>\"RFC: -C export-executable-symbols\" <a href=\"https://github.com/rust-lang/rfcs/pull/2841\">rfcs#2841</a><ul>\n<li>Submitted by <code>@MaulingMonkey</code></li>\n<li>RFC proposes adding the ability to export symbols from executables, not just dylibs, via a new compiler flag <code>-C export-executable-symbols</code></li>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rfcs/pull/2841#issuecomment-569852146\">has some questions</a></li>\n</ul>\n</li>\n</ul>",
        "id": 214199821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378959
    },
    {
        "content": "<p>So there's stuff that we skipped on <a href=\"https://hackmd.io/yszFneboQA2gJ0qaG6pllw?both\">today's agenda</a></p>",
        "id": 214199867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378976
    },
    {
        "content": "<p>namely the P-high bugs</p>",
        "id": 214199877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378979
    },
    {
        "content": "<p>but still, good meeting everyone!</p>",
        "id": 214199895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378984
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!!!</p>",
        "id": 214199909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603378993
    },
    {
        "content": "<p>should we leave those RFC nominations up for next week?</p>",
        "id": 214199933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603379001
    },
    {
        "content": "<p>I've just created the agenda document that we will be filling for next meeting <a href=\"https://hackmd.io/DEgK3x4SRJCQlqV0McB0xw?both\">https://hackmd.io/DEgK3x4SRJCQlqV0McB0xw?both</a></p>",
        "id": 214201158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603379469
    },
    {
        "content": "<p>we will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> and <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span></p>",
        "id": 214201326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603379504
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> about meta-wg, I don't think we have stuff to share or if there's some active work there</p>",
        "id": 214201469,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603379539
    },
    {
        "content": "<p>about mir-opts, cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> so you're aware for next week :)</p>",
        "id": 214201524,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1603379567
    },
    {
        "content": "<p>thanks!</p>",
        "id": 214201954,
        "sender_full_name": "oli",
        "timestamp": 1603379777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214195776\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-10-22.20.2354818/near/214194547\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\"Disable MatchBranchSimplification\" <a href=\"https://github.com/rust-lang/rust/pull/78151\">rust#78151</a></li>\n</ul>\n</blockquote>\n<p>is there an  issue filed for the bug in the mir-opt itself here?</p>\n</blockquote>\n<p>I created one, filed as issue <a href=\"https://github.com/rust-lang/rust/issues/78239\">#78239</a></p>",
        "id": 214203329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1603380409
    },
    {
        "content": "<p>fyi, I've approved the iOS revert due to <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-714788059\">https://github.com/rust-lang/rust/pull/77716#issuecomment-714788059</a></p>",
        "id": 214296695,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603449048
    }
]