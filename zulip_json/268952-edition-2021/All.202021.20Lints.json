[
    {
        "content": "<p>I'm looking to work on <a href=\"https://github.com/rust-lang/rust/issues/85894\">adding all 2021 compatibility lints to a lint group</a>, and I'm trying to reconcile this with the autogenerated <code>rust_2021_compatibility</code> lint. I believe this compatibility lint groups gets auto-generated by the inclusion of the <code>@future_incompatible</code> field when declaring a lint through <code>declare_lint!</code> which in turn puts the edition into the edition field of the <code>FutureIncompatibleInfo</code> struct. I've not spelunked enough to see where the auto-generation of the lint group actually happens though.</p>",
        "id": 242200889,
        "sender_full_name": "rylev",
        "timestamp": 1623329705
    },
    {
        "content": "<p>I performed a test with <code>bare_trait_object</code> where I allow the lint and then force-warn using <code>rust_2021_compatibility</code>. This works as expected and the <code>bare_trait_object</code> warning is displayed.</p>",
        "id": 242201057,
        "sender_full_name": "rylev",
        "timestamp": 1623329768
    },
    {
        "content": "<p>For other lints thought where a future compatibility warning is not included (e.g., <code>non_fmt_panic</code>) this does not work as expected.</p>",
        "id": 242201244,
        "sender_full_name": "rylev",
        "timestamp": 1623329864
    },
    {
        "content": "<p>So I believe what we want is to hook into the existing <code>rust_2021_compatibility</code> machinary and not to create a new adhoc lint group. Does this true to others? cc// <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span></p>",
        "id": 242201369,
        "sender_full_name": "rylev",
        "timestamp": 1623329912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> i'm no expert on lints. but yeah, a few of the lints with 2021 migration suggestions are not 'future compatbility' lints and are warn-by-default</p>",
        "id": 242203552,
        "sender_full_name": "Mara",
        "timestamp": 1623330901
    },
    {
        "content": "<p>(I'm also not an expert on lints - trying to get there though <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span>). I believe the fact that they warn by default is also fine. We just need to ensure that they're listed as 2021 edition forward compatibility lints.</p>",
        "id": 242204235,
        "sender_full_name": "rylev",
        "timestamp": 1623331211
    },
    {
        "content": "<p>yeah, but enabling <code>@future_incompatible</code> on them will add a message like \"this will be a hard error in the future!\" and some other stuff that isn't right. so <code>@future_incompatible</code> is necessary, we should first update what exactly that means for those with an edition instead of a version.</p>",
        "id": 242204553,
        "sender_full_name": "Mara",
        "timestamp": 1623331363
    },
    {
        "content": "<p>Hm... but won't <code>non_fmt_panic</code> be a hard error in a future edition? Why is that messaging wrong?</p>",
        "id": 242204622,
        "sender_full_name": "rylev",
        "timestamp": 1623331400
    },
    {
        "content": "<p>it is wrong for the <code>array_into_iter</code> lint. where <code>array.into_iter()</code> is still accepted, but changes meaning (which might or might not break your code)</p>",
        "id": 242205172,
        "sender_full_name": "Mara",
        "timestamp": 1623331652
    },
    {
        "content": "<p>and the <code>is being phased out</code> text is maybe a bit strong. that's true for things that are incompatible with future versions. but for editions we aren't phasing things out. we keep supporting them</p>",
        "id": 242205318,
        "sender_full_name": "Mara",
        "timestamp": 1623331712
    },
    {
        "content": "<p>things like <code>non_fmt_panic</code> are warn by default because they warn about things you probably didn't intend (e.g. <code>panic!(\"{}\")</code>). so the warning should focus on that, not on the fact that it's incopatible with Rust 2021. that should just be an additional note.</p>",
        "id": 242205412,
        "sender_full_name": "Mara",
        "timestamp": 1623331755
    },
    {
        "content": "<p>see also <a href=\"https://github.com/rust-lang/rust/pull/85682#issuecomment-848064133\">https://github.com/rust-lang/rust/pull/85682#issuecomment-848064133</a></p>",
        "id": 242205494,
        "sender_full_name": "Mara",
        "timestamp": 1623331793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/268952-edition-2021/topic/All.202021.20Lints/near/242205172\">said</a>:</p>\n<blockquote>\n<p>it is wrong for the <code>array_into_iter</code> lint. where <code>array.into_iter()</code> is still accepted, but changes meaning (which might or might not break your code)</p>\n</blockquote>\n<p>This is tough since I don't know if we ever had a situation like this (even the module changes in 2018).</p>",
        "id": 242206105,
        "sender_full_name": "rylev",
        "timestamp": 1623332001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/268952-edition-2021/topic/All.202021.20Lints/near/242205318\">said</a>:</p>\n<blockquote>\n<p>and the <code>is being phased out</code> text is maybe a bit strong. that's true for things that are incompatible with future versions. but for editions we aren't phasing things out. we keep supporting them</p>\n</blockquote>\n<p>There is phrasing that is specific to editions (i.e., it is only relevant in edition breaking changes). If the wording is wrong there, we can easily fix it as I believe this is exactly the use case these warnings are meant for.</p>",
        "id": 242206301,
        "sender_full_name": "rylev",
        "timestamp": 1623332061
    },
    {
        "content": "<p>yeah, doing that now. for now i'm leaving it unchanged for Rust 2018 incompatibility warnings. but for the new edition i'm changing it to simply say <code>\"this will change in Rust {edition}\"</code></p>",
        "id": 242212256,
        "sender_full_name": "Mara",
        "timestamp": 1623334183
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span>, because diagnostics</p>",
        "id": 242213083,
        "sender_full_name": "Mara",
        "timestamp": 1623334482
    },
    {
        "content": "<p>I'm not really sure what <code>@future_incompatible</code> 'does', other than adding that extra note to the message.</p>",
        "id": 242214473,
        "sender_full_name": "Mara",
        "timestamp": 1623334988
    },
    {
        "content": "<p>but apparently it's needed for <code>rust_2021_compatibility</code>?</p>",
        "id": 242214925,
        "sender_full_name": "Mara",
        "timestamp": 1623335153
    },
    {
        "content": "<p>ah. yes: <a href=\"https://github.com/rust-lang/rust/blob/0279cb11ed98bdc589c66572477fd27f1dd3e0ac/compiler/rustc_lint/src/context.rs#L212-L215\">https://github.com/rust-lang/rust/blob/0279cb11ed98bdc589c66572477fd27f1dd3e0ac/compiler/rustc_lint/src/context.rs#L212-L215</a></p>",
        "id": 242215154,
        "sender_full_name": "Mara",
        "timestamp": 1623335233
    },
    {
        "content": "<p>Yes exactly. So this will take case of <code>non_fmt_panic</code> but I'm still not sure what we should do about <code>array_into_iter</code>.</p>",
        "id": 242218607,
        "sender_full_name": "rylev",
        "timestamp": 1623336393
    },
    {
        "content": "<p>yeah so we should probably have  a way to disable the extra message, but still keep the <code>FutureIncompatibleInfo</code> to trigger that code i linked. that way lints can just provide their own message if the default one doesn't fit</p>",
        "id": 242219851,
        "sender_full_name": "Mara",
        "timestamp": 1623336851
    },
    {
        "content": "<p>(and maybe we should tweak the existing message a bit too. i'm not sure if \"phased out\" is how we view edition changes nowadays. and all the other diagnostics say \"Rust 20xx\" and not \"the 20xx edition\")</p>",
        "id": 242219985,
        "sender_full_name": "Mara",
        "timestamp": 1623336910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> two qustions</p>",
        "id": 243029086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941364
    },
    {
        "content": "<ol>\n<li>what is the status here</li>\n</ol>",
        "id": 243029094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941366
    },
    {
        "content": "<p>and 2. if we want to add something as an \"edition lint\" -- notably the migrations for RFC 2229 in this case -- is the right way to make it \"allow by default\" but set the \"future incompatible\" info with <code>Some(2021)</code> for the edition field?</p>",
        "id": 243029147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623941391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/86330\">https://github.com/rust-lang/rust/pull/86330</a> fixes the wording, so we can start using <code>@future_incompatible</code> for all edition lints. then they'll automatically end up in <code>rust_2021_compatibility</code></p>",
        "id": 243030802,
        "sender_full_name": "Mara",
        "timestamp": 1623941989
    },
    {
        "content": "<p>I am reminded that I want to follow up on the \"lint categorization\" work that <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and I were doing, but great</p>",
        "id": 243030913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623942012
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span>, we were disussing this...)</p>",
        "id": 243030939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623942021
    },
    {
        "content": "<p>(so the answer to your question is: yes)</p>",
        "id": 243030962,
        "sender_full_name": "Mara",
        "timestamp": 1623942031
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> :-). Indeed</p>",
        "id": 243031749,
        "sender_full_name": "rylev",
        "timestamp": 1623942307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> It's on my list to start the lint categorization stuff again now that the edition lint work is almost done (I still need to look into --cap-lints)</p>",
        "id": 243031875,
        "sender_full_name": "rylev",
        "timestamp": 1623942357
    },
    {
        "content": "<p>yeah, I think it can wait until this stuff is done</p>",
        "id": 243042009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1623946067
    },
    {
        "content": "<p>Just posted a PR for renaming some of the 2021 lints <a href=\"https://github.com/rust-lang/rust/pull/86717\">https://github.com/rust-lang/rust/pull/86717</a></p>",
        "id": 244300945,
        "sender_full_name": "rylev",
        "timestamp": 1624980736
    }
]