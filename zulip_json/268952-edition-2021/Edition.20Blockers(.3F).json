[
    {
        "content": "<p>Wanted to flag a couple bugs in the migration story that may wish to have some discussion amongst the group; <a href=\"https://github.com/rust-lang/rust/issues/89135\">https://github.com/rust-lang/rust/issues/89135</a> and <a href=\"https://github.com/rust-lang/rust/issues/89080\">https://github.com/rust-lang/rust/issues/89080</a>. I think both are not super-obviously critical, but they represent previously unknown (AFAIK) flaws in our migration story and not \"not major\" ones IMO :)</p>",
        "id": 254146489,
        "sender_full_name": "simulacrum",
        "timestamp": 1632190733
    },
    {
        "content": "<p>Looks like <a href=\"https://github.com/rust-lang/rust/issues/89080\">#89080</a> is being looked into. As for <a href=\"https://github.com/rust-lang/rust/issues/89135\">#89135</a>, this definitely seems like something we should _try_ to fix even if we'll then have a separate conversation about backporting - I agree this issue isn't critical, I don't see it as blocking.</p>",
        "id": 254167283,
        "sender_full_name": "rylev",
        "timestamp": 1632209900
    },
    {
        "content": "<p>If no one claims this in the next several hours, I'll take a look</p>",
        "id": 254167664,
        "sender_full_name": "rylev",
        "timestamp": 1632210153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm confused by <a href=\"https://github.com/rust-lang/rust/commit/49ed5cefcedba18f4d2d2757e44c72dec69effc0\">this commit</a></p>",
        "id": 254181506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632218231
    },
    {
        "content": "<p>I'm not sure where the prefix is in <a href=\"https://github.com/rust-lang/rust/blob/49ed5cefcedba18f4d2d2757e44c72dec69effc0/compiler/rustc_lint/src/array_into_iter.rs#L16-L19\">this example</a></p>",
        "id": 254181580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632218276
    },
    {
        "content": "<p>oh, I guess that has to do with the into_iter method?</p>",
        "id": 254181662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632218305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, the ones fixed without additional changes (just edition2018) tokenize on both editions fine</p>",
        "id": 254184914,
        "sender_full_name": "simulacrum",
        "timestamp": 1632220081
    },
    {
        "content": "<p>But it seems easy to imagine the prefixes being 'not uncommon', given how long they existed in some of rustc's code. Ultimate I don't feel as strongly here but I'd prefer to get rid of any errors that we know about upfront.</p>\n<p>At least we should update edition guide docs...</p>",
        "id": 254185086,
        "sender_full_name": "simulacrum",
        "timestamp": 1632220185
    },
    {
        "content": "<p>Where is that commit coming from? Is the fix here to make rustdoc try to tokenize using the edition of the crate?</p>",
        "id": 254185923,
        "sender_full_name": "rylev",
        "timestamp": 1632220701
    },
    {
        "content": "<p>The commit is from my PR migrating the tree to 2021</p>",
        "id": 254185958,
        "sender_full_name": "simulacrum",
        "timestamp": 1632220732
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/89103\">https://github.com/rust-lang/rust/pull/89103</a></p>",
        "id": 254185990,
        "sender_full_name": "simulacrum",
        "timestamp": 1632220758
    },
    {
        "content": "<p>The fix is likely going to be allow by default'ing the lint temporarily until we fix it to respect the edition of each code block. Maybe even outright just not running it (even if user has an explicit deny(...) for it</p>",
        "id": 254186137,
        "sender_full_name": "simulacrum",
        "timestamp": 1632220860
    },
    {
        "content": "<p>So, my understanding is that this lint should only fire on code blocks that rustdoc thinks are doctests (because rustdoc actually <em>needs</em> to parse them in order to provide syntax highlighting). I'm confused how this wouldn't have been picked up before - are these items not being documented or something?</p>",
        "id": 254228034,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632238680
    },
    {
        "content": "<p>Or in other words, this isn't a \"your code is bad\" lint, this is \"rustdoc tried and failed to highlight the code, and it's trying to let you know something is wrong rather than silently failing\"</p>",
        "id": 254228561,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632238852
    },
    {
        "content": "<p>(it's actually quite recent that it's a lint, it used to be a hard warning)</p>",
        "id": 254229072,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239018
    },
    {
        "content": "<p>It seems pretty clear that it never really worked, though -- <a href=\"https://doc.rust-lang.org/1.55.0/nightly-rustc/rustc_metadata/dependency_format/index.html\">https://doc.rust-lang.org/1.55.0/nightly-rustc/rustc_metadata/dependency_format/index.html</a> has some code blocks that have been around <em>forever</em> and rustdoc has been run on that file for a similarly long time, only now has that failed</p>",
        "id": 254229604,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239180
    },
    {
        "content": "<p>I'm not sure I can explain it, I think you're right that I'd assume this <em>should</em> have only ran on Rust blocks</p>",
        "id": 254229727,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239229
    },
    {
        "content": "<p>but I suspect in practice that's not true</p>",
        "id": 254229745,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> rustdoc assumes all code blocks are rust unless you tell it otherwise</p>",
        "id": 254229808,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239268
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> but the blocks on that page <em>are</em> being syntax highlighted as if they're rust</p>",
        "id": 254229812,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> rustdoc assumes all code blocks are rust unless you tell it otherwise</p>",
        "id": 254229820,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239271
    },
    {
        "content": "<p>(which I agree is not great, but is hard to change in a backwards compatible way)</p>",
        "id": 254229821,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239271
    },
    {
        "content": "<p>Oh, I think I know -- <a href=\"https://github.com/Mark-Simulacrum/rust/blob/3b896796719ed1e151d507b4bf2ea635a89cda9e/compiler/rustc_metadata/Cargo.toml#L7\">https://github.com/Mark-Simulacrum/rust/blob/3b896796719ed1e151d507b4bf2ea635a89cda9e/compiler/rustc_metadata/Cargo.toml#L7</a></p>",
        "id": 254229929,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239305
    },
    {
        "content": "<p>we disable doctests in a bunch of rustc_* crates for speed reasons (maybe not actually a big win, it was sort of a wild guess at one point I think)</p>",
        "id": 254229965,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239322
    },
    {
        "content": "<p>so for our docs in particular, there were probably a bunch that <em>would have</em> been actually broken, had the doctest ran</p>",
        "id": 254230048,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254229812\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> but the blocks on that page <em>are</em> being syntax highlighted as if they're rust</p>\n</blockquote>\n<p>that's what I said, isn't it? I'm confused what you're trying to say</p>",
        "id": 254230057,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239365
    },
    {
        "content": "<p>that's not to say the lint's not buggy, still (it should probably do a full parse, not just tokenize; regardless, needs to pass edition in)</p>",
        "id": 254230106,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254230106\">said</a>:</p>\n<blockquote>\n<p>that's not to say the lint's not buggy, still (it should probably do a full parse, not just tokenize; regardless, needs to pass edition in)</p>\n</blockquote>\n<p>well, then we end up with the same confusion you had - people assume that they can write <code> ``` </code> without it being parsed as rust</p>",
        "id": 254230231,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239414
    },
    {
        "content": "<p>No, that's not the confusion I had</p>",
        "id": 254230251,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239424
    },
    {
        "content": "<p>so we'll have the same issue you opened for 2021, but on a much much larger scale</p>",
        "id": 254230264,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239429
    },
    {
        "content": "<p>The confusion I had was that the code was <em>never</em> valid Rust</p>",
        "id": 254230270,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239431
    },
    {
        "content": "<p>It just tokenized (but most things will tokenize, few errors at that stage)</p>",
        "id": 254230323,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239449
    },
    {
        "content": "<blockquote>\n<p>people assume that they can write  ``` without it being parsed as rust</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254230270\">said</a>:</p>\n<blockquote>\n<p>The confusion I had was that the code was <em>never</em> valid Rust</p>\n</blockquote>\n<p>I'm not sure I understand the distinction <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 254230433,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239494
    },
    {
        "content": "<p>rustdoc doesn't understand version control, each time it compiles it sees the code block for the first time</p>",
        "id": 254230664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239575
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254230106\">said</a>:</p>\n<blockquote>\n<p>that's not to say the lint's not buggy, still (it should probably do a full parse, not just tokenize; regardless, needs to pass edition in)</p>\n</blockquote>\n<p>I'm not sure I agree with this - like I said before, the lint is <em>not</em> \"this is invalid rust\", it's \"rustdoc couldn't syntax highlight the code\"</p>",
        "id": 254231176,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239761
    },
    {
        "content": "<p>maybe the lint name doesn't reflect that well</p>",
        "id": 254231231,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239766
    },
    {
        "content": "<p>happy to rename it if you think it would make things more clear :) but I don't see a lot of other steps we can take other than renaming or making it allow-by-default</p>",
        "id": 254231454,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239851
    },
    {
        "content": "<p>The lint is definitely buggy in that it attempts to highlight with the crate's edition, not the code blocks edition. That's something we should definitely fix before 2021, IMO</p>",
        "id": 254231477,
        "sender_full_name": "simulacrum",
        "timestamp": 1632239860
    },
    {
        "content": "<p>sure, I should have time to fix that today</p>",
        "id": 254231594,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632239891
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> to <a class=\"stream-topic\" data-stream-id=\"266220\" href=\"/#narrow/stream/266220-rustdoc/topic/full.20parse.20for.20bad.20codeblocks\">#rustdoc &gt; full parse for bad codeblocks</a></p>",
        "id": 254232335,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632240129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254231477\">said</a>:</p>\n<blockquote>\n<p>The lint is definitely buggy in that it attempts to highlight with the crate's edition, not the code blocks edition. That's something we should definitely fix before 2021, IMO</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm confused by this - the logic in rustdoc is \"use the edition the test specifies if present, or the edition of the crate if not\". Are you saying it should always use 2015 unless the doctest specifies an edition? that seems like a breaking change, all the examples with <code>use ...</code> and no <code>extern crate</code> will start failing to compile</p>",
        "id": 254234362,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632240850
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/7743c9fadd64886d537966ba224b9c20e6014a59/src/librustdoc/doctest.rs#L893\">https://github.com/rust-lang/rust/blob/7743c9fadd64886d537966ba224b9c20e6014a59/src/librustdoc/doctest.rs#L893</a></p>",
        "id": 254234411,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632240872
    },
    {
        "content": "<p>That's not the logic, AFAIK</p>",
        "id": 254234422,
        "sender_full_name": "simulacrum",
        "timestamp": 1632240876
    },
    {
        "content": "<p>That's the logic for doctests, not the lint</p>",
        "id": 254234449,
        "sender_full_name": "simulacrum",
        "timestamp": 1632240883
    },
    {
        "content": "<p>oh, I see - let me look into it</p>",
        "id": 254234476,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632240897
    },
    {
        "content": "<p>ok yeah this needs to use a proper span rather than None: <a href=\"https://github.com/rust-lang/rust/blob/7743c9fadd64886d537966ba224b9c20e6014a59/src/librustdoc/passes/check_code_block_syntax.rs#L44\">https://github.com/rust-lang/rust/blob/7743c9fadd64886d537966ba224b9c20e6014a59/src/librustdoc/passes/check_code_block_syntax.rs#L44</a></p>",
        "id": 254236095,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632241534
    },
    {
        "content": "<p>(currently blocked on <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20synthesize.20a.20span.20from.20another.20edition.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20synthesize.20a.20span.20from.20another.20edition.3F</a>)</p>",
        "id": 254262445,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632251975
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254229965\">said</a>:</p>\n<blockquote>\n<p>we disable doctests in a bunch of rustc_* crates for speed reasons (maybe not actually a big win, it was sort of a wild guess at one point I think)</p>\n</blockquote>\n<p>I always assumed we disabled doctests because rustc doesn't have meaningful unit-tests of this kind (too much setup, etc) and because it's so useful to be able to insert fragments of example code (and like 22x more common)</p>",
        "id": 254337514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632301847
    },
    {
        "content": "<p>maybe :) I don't actually have a good sense there.</p>",
        "id": 254353814,
        "sender_full_name": "simulacrum",
        "timestamp": 1632311372
    },
    {
        "content": "<p>I do wish that ``` in rustdoc did not default to Rust, but that's a topic for next edition =) (if at all)</p>",
        "id": 254355442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632312307
    },
    {
        "content": "<p>This is mostly because I like to embed random crap like prolog in my doc comments :)</p>",
        "id": 254355480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1632312320
    },
    {
        "content": "<p>My worry about changing the default is we create a lot of busywork adding <code> ```rust </code> to code blocks, and prevent people from using 4-space indented blocks at all</p>",
        "id": 254372256,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632319300
    },
    {
        "content": "<p>It would be nice to have a proper RFC</p>",
        "id": 254372331,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632319320
    },
    {
        "content": "<p>4-space indented blocks defaulting to rust code is actually completely bad some of the time because there's no way to turn it off</p>",
        "id": 254393935,
        "sender_full_name": "Lokathor",
        "timestamp": 1632327253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> <a href=\"#narrow/stream/266220-rustdoc/topic/full.20parse.20for.20bad.20codeblocks\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/full.20parse.20for.20bad.20codeblocks</a></p>",
        "id": 254412195,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632334193
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/268952-edition-2021/topic/Edition.20Blockers.28.3F.29/near/254231477\">said</a>:</p>\n<blockquote>\n<p>The lint is definitely buggy in that it attempts to highlight with the crate's edition, not the code blocks edition. That's something we should definitely fix before 2021, IMO</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/89277\">https://github.com/rust-lang/rust/pull/89277</a></p>",
        "id": 254943821,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632674032
    },
    {
        "content": "<p>Can someone bors retry <a href=\"https://github.com/rust-lang/rust/pull/89144\">https://github.com/rust-lang/rust/pull/89144</a>, the failing test has been disabled and that change has been merged</p>",
        "id": 254953396,
        "sender_full_name": "Aman Arora",
        "timestamp": 1632682729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> done</p>",
        "id": 254953562,
        "sender_full_name": "Eric Huss",
        "timestamp": 1632682827
    },
    {
        "content": "<p>thank you</p>",
        "id": 254953580,
        "sender_full_name": "Aman Arora",
        "timestamp": 1632682843
    }
]