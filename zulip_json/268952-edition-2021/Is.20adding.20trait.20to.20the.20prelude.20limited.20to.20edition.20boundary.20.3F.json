[
    {
        "content": "<p>Is adding trait to the prelude limited to edition boundary ?<br>\nCurrently the Not trait is not in the prelude. There are suggestion to add that trait to the new 2021 edition prelude.<br>\nAre edition 2018 and 2015 not affected at all and not have Not trait in their prelude ?</p>",
        "id": 224556055,
        "sender_full_name": "lzutao",
        "timestamp": 1611967998
    },
    {
        "content": "<p>the current import is an implicit <code>use {core,std}::prelude::v1::*;</code></p>",
        "id": 224556998,
        "sender_full_name": "cuviper",
        "timestamp": 1611968921
    },
    {
        "content": "<p>the idea is that we'd make a new module instead of <code>v1</code>, and only code in the new edition would change to that path</p>",
        "id": 224557022,
        "sender_full_name": "cuviper",
        "timestamp": 1611968958
    },
    {
        "content": "<p>I suppose that new path would be visible if older editions wanted to manually import it</p>",
        "id": 224557056,
        "sender_full_name": "cuviper",
        "timestamp": 1611968996
    },
    {
        "content": "<p>Thanks, I forgot about v1 module.<br>\nI think there is very small chance trait will be added to older editions prelude.</p>",
        "id": 224557937,
        "sender_full_name": "lzutao",
        "timestamp": 1611970030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209117\">lzutao</span> <a href=\"#narrow/stream/268952-edition/topic/Is.20adding.20trait.20to.20the.20prelude.20limited.20to.20edition.20boundary.20.3F/near/224556055\">said</a>:</p>\n<blockquote>\n<p>Is adding trait to the prelude limited to edition boundary ?</p>\n</blockquote>\n<p>It's \"minor\", and thus allowed, breakage.  So it would depend on the trait and its impls -- if the method names on the trait are uncommon enough, it could just be added to all editions.</p>",
        "id": 224564355,
        "sender_full_name": "scottmcm",
        "timestamp": 1611979978
    },
    {
        "content": "<p>(<code>TryFrom</code>/<code>TryInto</code> are being talked about for the edition because <a href=\"https://lib.rs/crates/try_from\">https://lib.rs/crates/try_from</a> is popular enough that waiting for the edition has been considered worth it.)</p>",
        "id": 224564415,
        "sender_full_name": "scottmcm",
        "timestamp": 1611980063
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/268952-edition/topic/Is.20adding.20trait.20to.20the.20prelude.20limited.20to.20edition.20boundary.20.3F/near/224564355\">said</a>:</p>\n<blockquote>\n<p>It's \"minor\", and thus allowed, breakage.  So it would depend on the trait and its impls -- if the method names on the trait are uncommon enough, it could just be added to all editions.</p>\n</blockquote>\n<p>Thanks, it's nice to hear that from a lang member perspective.</p>\n<p>Do we need to open PRs to invest breakage via crater for each trait ?</p>",
        "id": 224566604,
        "sender_full_name": "lzutao",
        "timestamp": 1611983527
    },
    {
        "content": "<p>Prelude additions with trait methods are fairly untread ground, so it's hard to say.</p>\n<p>The prelude is somewhat special, so probably?  Largely because the number of crates in question would probably be very low, if it was being considered for an existing prelude.</p>",
        "id": 224600328,
        "sender_full_name": "scottmcm",
        "timestamp": 1612034143
    }
]