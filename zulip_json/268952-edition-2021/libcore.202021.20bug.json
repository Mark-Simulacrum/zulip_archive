[
    {
        "content": "<p>I just tried to set libcore to <code>edition = \"2021\"</code> (on top of <a href=\"https://github.com/rust-lang/rust/issues/88752\">#88752</a>), and uhh, it causes an interesting bug. Afterwards, std's tests no longer compile, even though i only touched core's edition and not std's. Turns out that if you set core's edition to 2021, <code>assert!()</code> will always use the 2021 panic. <del>And that <em>probably</em> means that before, assert would always use the 2015 panic, regardless of the edition of the crate using <code>assert</code>, which might have gone unnoticed.</del> (Edit: Nope, on 2021, <code>assert</code> expands differently.)</p>",
        "id": 252504325,
        "sender_full_name": "Mara",
        "timestamp": 1631123706
    },
    {
        "content": "<p>So, only when calling <code>assert!()</code> from a rust 2015/2018 crate, then does it use the panic!() from the edition <em>of libcore</em>. so that's fine as long as libcore is 2015/2018. but that means we can't upgrade core to 2021 until we fixed that bug</p>",
        "id": 252505731,
        "sender_full_name": "Mara",
        "timestamp": 1631124212
    },
    {
        "content": "<p>turns out that a 'call site span' carries the source location of the crate that did the call, but the edition of the crate that defined the macro.</p>",
        "id": 252508372,
        "sender_full_name": "Mara",
        "timestamp": 1631125183
    },
    {
        "content": "<p>and getting rid of that context from the macro definition won't work, because then it also loses the allow_internal_unstable bits... hm</p>",
        "id": 252508845,
        "sender_full_name": "Mara",
        "timestamp": 1631125346
    },
    {
        "content": "<p>oh bleh. the bug does exist in 1.56 for <code>debug_assert</code>, which always uses panic_2015 regardless of the edition of who invokes it.</p>",
        "id": 252509888,
        "sender_full_name": "Mara",
        "timestamp": 1631125719
    },
    {
        "content": "<p>1.56 is still in beta, right? So there's time to backport a fix</p>",
        "id": 252543380,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631140026
    },
    {
        "content": "<p>1.56 just entered beta, yes, so ~6 weeks left</p>",
        "id": 252543445,
        "sender_full_name": "cuviper",
        "timestamp": 1631140082
    },
    {
        "content": "<p>yeah. these are the kind of things we can only discover by having the edition go into beta and using it in the compiler and std etc. so that's what these six weeks are for. :)</p>",
        "id": 252545289,
        "sender_full_name": "Mara",
        "timestamp": 1631141041
    }
]