[
    {
        "content": "<p>It's Monday! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> That means it's time for... <span aria-label=\"drum\" class=\"emoji emoji-1f941\" role=\"img\" title=\"drum\">:drum:</span> <em>The Weekly Edition of the Edition Updates, Edition #​1</em> <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>\n<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"243558\">@Steven Fackler</span> <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and everyone else i'm forgetting,<br>\nyou are all working on RFCs/PRs/issues/things for the 2021 edition of Rust.<br>\nCould you all please post a few words on the status of that? (Or open a new topic if it's more than a few words.)</p>\n<p>(If you didn't expect your name here, I might have pinged the wrong user, or we accidentally assigned something to you without asking. Please let me know. ^^)</p>",
        "id": 230355518,
        "sender_full_name": "Mara",
        "timestamp": 1615819330
    },
    {
        "content": "<p><strong>Lint promotions</strong>: I should have a PR today or tomorrow promoting the two lints that have been identified for promotion. We're still discussing whether we should use the edition for some future compatibility lints. I hope to resolve that question by the end of the week.</p>",
        "id": 230356041,
        "sender_full_name": "rylev",
        "timestamp": 1615819535
    },
    {
        "content": "<p>I think you pinged me for</p>\n<blockquote>\n<p><span aria-label=\"pencil\" class=\"emoji emoji-270f\" role=\"img\" title=\"pencil\">:pencil:</span> Change rustdoc lints to have a tool prefix and make changing the names deny-by-default</p>\n</blockquote>\n<p>right? I changed my mind about the deny-by-default - I forgot rustc gives a hard error on unknown tool names, and I don't think it's good to have code that can compile in only one edition but not both. <a href=\"https://github.com/rust-lang/rust/pull/80527#issuecomment-791981435\">https://github.com/rust-lang/rust/pull/80527#issuecomment-791981435</a></p>",
        "id": 230358257,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615820291
    },
    {
        "content": "<p><code>stdarch</code> const generics: I plan on updating the submodule this week, which should hopefully net us some compilation time improvements. However we're still not sure whether to make this an edition breaking change. This depends on the libs team deciding whether we want to allow the legacy const generics syntax in the new edition (<code>_mm_shuffle_ps(a, b, CONST)</code> vs <code>_mm_shuffle_ps::&lt;CONST&gt;(a, b)</code>).</p>",
        "id": 230358365,
        "sender_full_name": "Amanieu",
        "timestamp": 1615820321
    },
    {
        "content": "<p>I have no updates for \"<span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span> Change Rustdoc’s URL structure?\" or the rest of the rustdoc ideas</p>",
        "id": 230358581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615820394
    },
    {
        "content": "<p><strong>Range reform</strong>: Using <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span>'s edition-specific reexports I reworked the design a bit to be something I'm actually pretty happy with - moving forward there isn't a ton of weird jank in the post-2021 view of things. I need to write up some guidance for third party libraries.</p>",
        "id": 230365782,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615822711
    },
    {
        "content": "<p>I'm not a fan of edition-specific re-exports</p>",
        "id": 230365922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615822759
    },
    {
        "content": "<p>more later:)</p>",
        "id": 230365928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615822761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> can you open an issue describing the question and nominate it for the lang team?</p>",
        "id": 230365990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615822787
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> and I were saying that seems like a lang team question</p>",
        "id": 230366016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1615822795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> I've been working on stabilization of  the <code>or_patterns</code> feature. For the most part, it is edition-neutral. The only exception is the <code>:pat</code> matcher for macros. Some prior experimentation found that there would be complicated breakage, so we plan to change <code>:pat</code> to accept top-level or-patterns only in editions 2021+ (more info in the stabilization report: <a href=\"https://github.com/rust-lang/rust/pull/79278#issuecomment-772815177\">https://github.com/rust-lang/rust/pull/79278#issuecomment-772815177</a>)... There is a simple migration plan, but it hasn't been implemented in rustfix (I don't really know how to do that either). We still need a few more lang-team members to check boxes for the FCP, though.</p>",
        "id": 230395712,
        "sender_full_name": "mark-i-m",
        "timestamp": 1615832795
    },
    {
        "content": "<p>Posted <a href=\"https://github.com/rust-lang/cargo/pull/9268\">https://github.com/rust-lang/cargo/pull/9268</a> to finish up the cargo edition support.</p>",
        "id": 230396039,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615832936
    },
    {
        "content": "<p><code>k#</code> draft RFC is at <a href=\"#narrow/stream/268952-edition-2021/topic/k.23keywords.3A.20first.20draft/near/229081470\">https://rust-lang.zulipchat.com/#narrow/stream/268952-edition-2021/topic/k.23keywords.3A.20first.20draft/near/229081470</a> but it sounds like there might not even be agreement on the approach yet.  Not sure what the way forward should be.</p>\n<p>I plan on pushing an update today to try_trait_v2 to make it involve an edition change (<a href=\"https://github.com/scottmcm/rust/commit/do-or-do-not-edition\">https://github.com/scottmcm/rust/commit/do-or-do-not-edition</a>) -- hopefully that will get it pFCP-ready.</p>",
        "id": 230396071,
        "sender_full_name": "scottmcm",
        "timestamp": 1615832950
    },
    {
        "content": "<blockquote>\n<p>There is a simple migration plan, but it hasn't been implemented in rustfix (I don't really know how to do that either).</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> fyi: such a migration is implemented as a lint in rustc. the lint should give a suggestion (just like any other lint/warning can), and rustfix will apply it. it can be an allow-by-default lint that's only set to warn/deny by <code>cargo fix --edition</code>.</p>",
        "id": 230396968,
        "sender_full_name": "Mara",
        "timestamp": 1615833351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/268952-edition-2021/topic/The.20Weekly.20Edition.20of.20the.20Edition.20Updates.2C.20Edition.201/near/230396968\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>There is a simple migration plan, but it hasn't been implemented in rustfix (I don't really know how to do that either).</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> fyi: such a migration is implemented as a lint in rustc. the lint should give a suggestion (just like any other lint/warning can), and rustfix will apply it. it can be an allow-by-default lint that's only set to warn/deny by <code>cargo fix --edition</code>.</p>\n</blockquote>\n<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html#method.span_suggestion\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html#method.span_suggestion</a></p>",
        "id": 230397137,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615833417
    },
    {
        "content": "<p>Update from RFC 2229: The feature itself  has been implemented and  the bugs that we are aware of are either fixed or have  PRs approved (pending some cleanup, rebase). Some parts of migrations have been in implemented and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has a draft for a capture clause RFC (and here is the <a href=\"#narrow/stream/213817-t-lang/topic/capture.20clauses/near/230079853\">T-lang</a> thread for it). Over the weekend we started working on improving diagnostics around when this feature is used</p>",
        "id": 230403321,
        "sender_full_name": "Aman Arora",
        "timestamp": 1615836224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span>  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/issues/83167\">#83167</a></p>",
        "id": 230407271,
        "sender_full_name": "Amanieu",
        "timestamp": 1615837922
    },
    {
        "content": "<p>Update on the prelude RFC: I need to push forward on my PR (<a href=\"https://github.com/rust-lang/rust/pull/82781\">https://github.com/rust-lang/rust/pull/82781</a>) so we can get a crater build to get an idea of what might break; just gave it another push and will follow up. The libs team had agreement on the traits proposed in the draft RFC (<a href=\"https://github.com/rust-lang/rfcs/pull/3090\">https://github.com/rust-lang/rfcs/pull/3090</a>; <code>TryFrom</code>, <code>TryInto</code>, <code>FromIterator</code>) and wanted to push forward with those first, leaving the non-edition changes to be discussed at a later time.</p>",
        "id": 230417636,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1615842069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/268952-edition-2021/topic/The.20Weekly.20Edition.20of.20the.20Edition.20Updates.2C.20Edition.201/near/230396968\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>There is a simple migration plan, but it hasn't been implemented in rustfix (I don't really know how to do that either).</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> fyi: such a migration is implemented as a lint in rustc. the lint should give a suggestion (just like any other lint/warning can), and rustfix will apply it. it can be an allow-by-default lint that's only set to warn/deny by <code>cargo fix --edition</code>.</p>\n</blockquote>",
        "id": 231068504,
        "sender_full_name": "mark-i-m",
        "timestamp": 1616178190
    },
    {
        "content": "<p>I guess my question is when is this lint emitted? Some of the breakage is rather complex and would be hard to trace back to the <code>:pat</code> change.</p>",
        "id": 231068592,
        "sender_full_name": "mark-i-m",
        "timestamp": 1616178239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> i suppose you wouldn't attach it to an existing lint check or error, but instead add a new lint pass that would check all macro definitions in the crate for <code>:pat</code> arguments</p>",
        "id": 231089640,
        "sender_full_name": "Mara",
        "timestamp": 1616187776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> You mean that we universally suggest <code>:pat2018</code> to replace all <code>:pat</code>? That would work. The main downside is that it seems like we would generally want to discourage use of <code>:pat2018/21</code> etc...</p>",
        "id": 231112919,
        "sender_full_name": "mark-i-m",
        "timestamp": 1616205066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> maybe it can look specifically for <code>:pat</code> followed/separated by <code>|</code>, like <a href=\"https://docs.rs/assert_matches/1.5.0/assert_matches/macro.assert_matches.html\">here</a>.</p>",
        "id": 231112980,
        "sender_full_name": "Mara",
        "timestamp": 1616205137
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> It's not clear to me if that is sufficient. Is there any other case where a <code>|</code> can come after a pattern? For example, what about a <code>$foo:pat $bar:tt</code>?</p>",
        "id": 231365356,
        "sender_full_name": "mark-i-m",
        "timestamp": 1616439537
    }
]