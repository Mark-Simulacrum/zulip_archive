[
    {
        "content": "<p>Here's the <a href=\"https://hackmd.io/3eG6OZWHRbSMxoRxzwNhGQ?view\">HackMD document for Rust 2021</a>.</p>",
        "id": 220403298,
        "sender_full_name": "Mara",
        "timestamp": 1608312822
    },
    {
        "content": "<p>Nice! Should I fill in some notes on the range types thing there or is there somewhere else that would be preferable?</p>",
        "id": 220410395,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1608315970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243558\">@Steven Fackler</span> If it's just a few bullet points for now, inside this document is good. Otherwise, a separate issue or document would be useful!</p>",
        "id": 220410533,
        "sender_full_name": "Mara",
        "timestamp": 1608316054
    },
    {
        "content": "<p>(I guess eventually it'll have to be an RFC.)</p>",
        "id": 220410677,
        "sender_full_name": "Mara",
        "timestamp": 1608316122
    },
    {
        "content": "<p>Prelude Changes: Debug should be added as a trait import, currently it's only a derive proc macro import.</p>",
        "id": 220445708,
        "sender_full_name": "Lokathor",
        "timestamp": 1608340377
    },
    {
        "content": "<p>Lang change: <code>pat</code> in macros should map to <code>pat2021</code> (once that's implemented), which will allow or-patterns.</p>",
        "id": 220457161,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> What’s the benefit of putting in <code>Debug</code> in the prelude? You’d still need to import <code>fmt</code> to implement it, and I’ve never seen someone call <code>Debug::fmt(x, &amp;mut f)</code> directly.</p>",
        "id": 220463744,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608373208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I believe this is covered in the doc under “edition specific or patterns”. Can you confirm?</p>",
        "id": 220468086,
        "sender_full_name": "rylev",
        "timestamp": 1608381346
    },
    {
        "content": "<p>On top of <code>TryInto</code> and <code>TryFrom</code>, please add <code>Not</code> too. There was a huge thread in internals where many users, including me, expressed their preference for using a postfix method rather than a prefix sigil. (Another solution would be to add an inherent <code>.not()</code> on <code>bool</code>). Also, I imagine <code>Future</code> and <code>Pin</code> ought to be in the prelude too.</p>",
        "id": 220469456,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1608383657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I'd imagine that it is for the <code>T : Debug</code> kind of bounds?<br>\nI personally just think that, ideally, all the derives in scope ought to have the trait itself in scope too, but I realize that would lead to too big of an addition</p>",
        "id": 220469578,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1608383934
    },
    {
        "content": "<p>Yeah, the generic bound.</p>",
        "id": 220470512,
        "sender_full_name": "Lokathor",
        "timestamp": 1608385573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> Is that common? I rarely if ever need to add Debug to generic bounds.</p>",
        "id": 220473790,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608390885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> Confirmed.</p>",
        "id": 220479292,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608398935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> Note that <code>Pin</code> is a struct, so whether it goes into the prelude doesn't need to be tied to an edition.  That can just happen in all editions, if libs wants it.</p>",
        "id": 220484702,
        "sender_full_name": "scottmcm",
        "timestamp": 1608407674
    },
    {
        "content": "<p>Also, reminder to everyone that there's a tag for edition ideas: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3Alang-team-202x-edition\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3Alang-team-202x-edition</a></p>\n<p>It might be easier to track things that way than to have them in a zulip thread.</p>",
        "id": 220484806,
        "sender_full_name": "scottmcm",
        "timestamp": 1608407809
    },
    {
        "content": "<p>Also there's the HackMD posted at the top of this thread.</p>",
        "id": 220504481,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608442584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/268952-edition/topic/Edition.202021/near/220504481\">said</a>:</p>\n<blockquote>\n<p>Also there's the HackMD posted at the top of this thread.</p>\n</blockquote>\n<p>Maybe we should add that to the stream description</p>",
        "id": 220504531,
        "sender_full_name": "Aman Arora",
        "timestamp": 1608442716
    },
    {
        "content": "<p>Which built-in derives are not in the prelude yet? <code>Debug</code>, <code>Hash</code>, anything else?</p>",
        "id": 220527514,
        "sender_full_name": "cuviper",
        "timestamp": 1608483275
    },
    {
        "content": "<p>only those 2 I think (Default, Eq, PartialEq, Ord, PartialOrd, Copy, Clone all are IIRC)</p>",
        "id": 220529878,
        "sender_full_name": "lqd",
        "timestamp": 1608487195
    },
    {
        "content": "<p>The colours in <a href=\"https://doc.rust-lang.org/nightly/core/prelude/v1/index.html\">https://doc.rust-lang.org/nightly/core/prelude/v1/index.html</a> look like just Debug+Hash</p>",
        "id": 220540267,
        "sender_full_name": "scottmcm",
        "timestamp": 1608503153
    },
    {
        "content": "<p>It would be really nice to have those in the prelude.</p>",
        "id": 220540742,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608503866
    },
    {
        "content": "<p>Should we try split this topic into separate ones for each subteam so it's easier to follow lang vs compiler vs libs changes?</p>",
        "id": 220543569,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1608508546
    },
    {
        "content": "<p>won't the roadmap overlap all three?</p>",
        "id": 220544009,
        "sender_full_name": "oliver",
        "timestamp": 1608509238
    },
    {
        "content": "<p>Yes, but the overall stream covers the edition, and it's safe to say that most topics in this stream will be about 2021 for the time being. :)</p>",
        "id": 220544015,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608509263
    },
    {
        "content": "<p>So let's allow ourselves to use topics for organizational purposes.</p>",
        "id": 220544018,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608509275
    },
    {
        "content": "<p>that makes sense, so we will have a roadmap, <br>\nand then additionally some edition specific planning</p>",
        "id": 220544080,
        "sender_full_name": "oliver",
        "timestamp": 1608509394
    },
    {
        "content": "<p>the roadmap won't be specific to the edition</p>",
        "id": 220544145,
        "sender_full_name": "oliver",
        "timestamp": 1608509464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> Is that the 2021 Rust Project Roadmap you're talking about?</p>",
        "id": 220544202,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1608509587
    },
    {
        "content": "<p>yeah the yearly one</p>",
        "id": 220544208,
        "sender_full_name": "oliver",
        "timestamp": 1608509609
    },
    {
        "content": "<p>I suppose it's due shortly</p>",
        "id": 220544211,
        "sender_full_name": "oliver",
        "timestamp": 1608509626
    },
    {
        "content": "<p>The roadmap is up in RFC form, but will not include any technical details, including the edition.</p>",
        "id": 220544942,
        "sender_full_name": "simulacrum",
        "timestamp": 1608510874
    },
    {
        "content": "<p>At some point the plan is to turn the HackMD above into an RFC for the 2021 edition, but that's still a ways out</p>",
        "id": 220600846,
        "sender_full_name": "rylev",
        "timestamp": 1608567395
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/80360\">#80360</a> for <code>Debug</code> and <code>Display</code> in prelude and <a href=\"https://github.com/rust-lang/rust/issues/80361\">#80361</a> for <code>Hash</code>.</p>",
        "id": 220899338,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608859411
    },
    {
        "content": "<p>Forbidding <code>bare_trait_objects</code> has been proposed for 2021 too (<a href=\"https://github.com/rust-lang/lang-team/issues/65\">https://github.com/rust-lang/lang-team/issues/65</a>), though I don't think it has been discussed properly yet.</p>",
        "id": 221143978,
        "sender_full_name": "varkor",
        "timestamp": 1609257733
    },
    {
        "content": "<p>(previous discussion was in <a href=\"#narrow/stream/213817-t-lang/topic/bare_trait_objects.202021\">https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/bare_trait_objects.202021</a>)</p>",
        "id": 221144125,
        "sender_full_name": "lcnr",
        "timestamp": 1609257849
    },
    {
        "content": "<p>Thanks, I added that one to the hackMD as a separate item.</p>",
        "id": 221252752,
        "sender_full_name": "scottmcm",
        "timestamp": 1609368119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> astounding timing <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> <br>\n<a href=\"/user_uploads/4715/zV18gAZvwy4-QatJpfYbJlvY/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/zV18gAZvwy4-QatJpfYbJlvY/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/zV18gAZvwy4-QatJpfYbJlvY/image.png\"></a></div>",
        "id": 221326861,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609461029
    }
]