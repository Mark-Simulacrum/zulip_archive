[
    {
        "content": "<p>Hey all -- so <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span>, <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> and I got together and pulled together this spreadsheet of <a href=\"https://docs.google.com/spreadsheets/d/1chZ2SL9T444nvU9al1kQ7TJMwC3IVQQV2xIv1HWGQ_k/edit#gid=0\">edition candidates</a></p>",
        "id": 225605866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817375
    },
    {
        "content": "<p>This is basicaly a list of all the things that could plausibly be changed in the edition</p>",
        "id": 225605898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817386
    },
    {
        "content": "<p>It's perhaps incomplete</p>",
        "id": 225605903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817388
    },
    {
        "content": "<p>For each one, we're trying to assign an <strong>owner</strong> and a <strong>liaison</strong> -- the owner is the person doing the work to implement it</p>",
        "id": 225605996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817407
    },
    {
        "content": "<p>The liaison is some member of the (to be formed) 2021 Edition project group that will be responsible for keeping the status doc up to date</p>",
        "id": 225606044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817430
    },
    {
        "content": "<p>These can be the same person</p>",
        "id": 225606053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817433
    },
    {
        "content": "<p>We are shooting to have a list of \"viable edition candidates\" by March 1st, which will mean that there is an RFC or other kind of formal decision to \"do the thing' plus enough of a plan that we believe it is viable</p>",
        "id": 225606151,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817478
    },
    {
        "content": "<p>this roughly means the 1st three columns have a <span aria-label=\"checkbox\" class=\"emoji emoji-2611\" role=\"img\" title=\"checkbox\">:checkbox:</span> or other positive context, not a big red X (<span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span>)</p>",
        "id": 225606193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817502
    },
    {
        "content": "<p>As you can see, <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> is ahead of the game =)</p>",
        "id": 225606301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612817533
    },
    {
        "content": "<p>Does the red X indicate rejection from inclusion?</p>",
        "id": 225608011,
        "sender_full_name": "simulacrum",
        "timestamp": 1612818227
    },
    {
        "content": "<p>nope! red X is 'to do' or 'not yet'</p>",
        "id": 225608075,
        "sender_full_name": "Mara",
        "timestamp": 1612818244
    },
    {
        "content": "<p>suggestions for a better emoji are welcome ^^'</p>",
        "id": 225608129,
        "sender_full_name": "Mara",
        "timestamp": 1612818264
    },
    {
        "content": "<p>hm, what is the difference with the conversation bubble then? I guess would be good to add a row to the spreadsheet defining this</p>",
        "id": 225608155,
        "sender_full_name": "simulacrum",
        "timestamp": 1612818282
    },
    {
        "content": "<p>uh, i think the bubble ones have an active conversation going on</p>",
        "id": 225608206,
        "sender_full_name": "Mara",
        "timestamp": 1612818315
    },
    {
        "content": "<p>maybe we should just remove the crosses. they're a bit confusing</p>",
        "id": 225608323,
        "sender_full_name": "Mara",
        "timestamp": 1612818366
    },
    {
        "content": "<p>replaced them with <span aria-label=\"minus\" class=\"emoji emoji-2796\" role=\"img\" title=\"minus\">:minus:</span> for now</p>",
        "id": 225608454,
        "sender_full_name": "Mara",
        "timestamp": 1612818443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hm, is there a difference between  <span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> (now <span aria-label=\"minus\" class=\"emoji emoji-2796\" role=\"img\" title=\"minus\">:minus:</span>) and an empty space?</p>",
        "id": 225608590,
        "sender_full_name": "Mara",
        "timestamp": 1612818512
    },
    {
        "content": "<p>there is a key</p>",
        "id": 225609247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612818891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/268952-edition/topic/edition.20candidates/near/225608590\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> hm, is there a difference between  <span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> (now <span aria-label=\"minus\" class=\"emoji emoji-2796\" role=\"img\" title=\"minus\">:minus:</span>) and an empty space?</p>\n</blockquote>\n<p>not really except that it draws your attention to it</p>",
        "id": 225609286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612818912
    },
    {
        "content": "<p>I think we should have something</p>",
        "id": 225609291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612818915
    },
    {
        "content": "<p>I don't care <em>too</em> much what it is</p>",
        "id": 225609303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612818921
    },
    {
        "content": "<p>okay :)</p>",
        "id": 225609312,
        "sender_full_name": "Mara",
        "timestamp": 1612818927
    },
    {
        "content": "<p>there was a key in the google doc but .. not connected very clearly</p>",
        "id": 225609372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612818957
    },
    {
        "content": "<p>by the way: cells A2 and A3 are styled as links, but don't seem to be actual links.</p>",
        "id": 225609530,
        "sender_full_name": "Mara",
        "timestamp": 1612819023
    },
    {
        "content": "<p>yeah i don't know why</p>",
        "id": 225609995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612819238
    },
    {
        "content": "<p>the \"dash\" <span aria-label=\"minus\" class=\"emoji emoji-2796\" role=\"img\" title=\"minus\">:minus:</span> kind of looks like \"N/A\" to me</p>",
        "id": 225612107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612820222
    },
    {
        "content": "<p>what about <span aria-label=\"memo\" class=\"emoji emoji-1f4dd\" role=\"img\" title=\"memo\">:memo:</span></p>",
        "id": 225612152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612820241
    },
    {
        "content": "<p><a href=\"https://emojipedia.org/memo/\">https://emojipedia.org/memo/</a></p>",
        "id": 225612167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612820247
    },
    {
        "content": "<p>I made it <span aria-label=\"pencil\" class=\"emoji emoji-270f\" role=\"img\" title=\"pencil\">:pencil:</span> and I added a Key tab</p>",
        "id": 225614082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612821137
    },
    {
        "content": "<p>\"replace rustc_args_required_const with const generics\"</p>\n<p>this one is certainly possible, but as was mentioned in the \"remove #![crate_type]\" topic, this doesn't let us remove the old versions, so we don't actually get to remove that from the compiler</p>",
        "id": 225645563,
        "sender_full_name": "Lokathor",
        "timestamp": 1612845629
    },
    {
        "content": "<p>I'd be happy with just bringing libcore's compile times back down</p>",
        "id": 225645758,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612845940
    },
    {
        "content": "<p>but it wouldn't really? All those old functions still have to exist, no matter what, for all time.</p>",
        "id": 225646159,
        "sender_full_name": "Lokathor",
        "timestamp": 1612846548
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79131\">https://github.com/rust-lang/rust/pull/79131</a> landed in 1.50, so there's still time to revert the avx512 change</p>",
        "id": 225646239,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612846681
    },
    {
        "content": "<p>I mean, we'd have to get <em>on</em> it, but I think there's time</p>",
        "id": 225646281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612846690
    },
    {
        "content": "<p>well anything not yet stable can be held back, yes</p>",
        "id": 225646293,
        "sender_full_name": "Lokathor",
        "timestamp": 1612846706
    },
    {
        "content": "<p>but for anything already stable, since they're in the standard library of the 2k15 and 2k18 editions, they must forever be supported for crates of those editions, but since most people don't build their own core, we'd have to always pre-build those old edition stuff.</p>",
        "id": 225646309,
        "sender_full_name": "Lokathor",
        "timestamp": 1612846738
    },
    {
        "content": "<p>anyone using -Zbuild-std would get a speed boost :P</p>",
        "id": 225646316,
        "sender_full_name": "Lokathor",
        "timestamp": 1612846750
    },
    {
        "content": "<p>Are we saying the RFC should be accepted by Mar 1? That seems like a pretty tight deadline?</p>",
        "id": 225665670,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612864565
    },
    {
        "content": "<p>Or is it enough that there is an RFC with no substantial open concerns</p>",
        "id": 225665730,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612864603
    },
    {
        "content": "<p>(I'm contemplating taking ownership of the prelude update if no libs team members want to take it)</p>",
        "id": 225665761,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612864627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> it should be obvious by march 1st that the thing is going to happen. so no major blockers etc. that doesn't necessarily mean the rfc is merged yet. in case of the prelude, i don't really expect any issues, as the implementation should be quite simple. but a concrete list of things that should and should not go in there, potential issues, and any lints we'd need for migration, should be reasonable by the end of the month.</p>",
        "id": 225674278,
        "sender_full_name": "Mara",
        "timestamp": 1612869686
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"226095\">Dirkjan Ochtman</span> <a href=\"#narrow/stream/268952-edition/topic/edition.20candidates/near/225665761\">said</a>:</p>\n<blockquote>\n<p>(I'm contemplating taking ownership of the prelude update if no libs team members want to take it)</p>\n</blockquote>\n<p>if you want to take ownership of that, that'd would be wonderful. the ideas for what to put in the new prelude are a bit all over the place right now (on zulip, github, maybe other places), and nobody has taken ownership of it yet.</p>",
        "id": 225674410,
        "sender_full_name": "Mara",
        "timestamp": 1612869772
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> -- what I want is that there is a real, actionable plan</p>",
        "id": 225999921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613054495
    },
    {
        "content": "<p>and general agreement by the relevant team on that plan</p>",
        "id": 225999933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613054500
    },
    {
        "content": "<p>Has there been any discussion on changing the <code>?</code> desugaring from using <code>From</code> to using <code>Into</code> for the next edition?</p>",
        "id": 226307013,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1613313123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> there's a much bigger discussion going now about <code>Try</code>/<code>?</code>: <a href=\"https://github.com/scottmcm/rfcs/blob/do-or-do-not/text/0000-try-trait-v2.md#summary\">https://github.com/scottmcm/rfcs/blob/do-or-do-not/text/0000-try-trait-v2.md#summary</a></p>",
        "id": 226308819,
        "sender_full_name": "Mara",
        "timestamp": 1613315579
    },
    {
        "content": "<p>(but not as part of an edition change)</p>",
        "id": 226308845,
        "sender_full_name": "Mara",
        "timestamp": 1613315600
    },
    {
        "content": "<p>Ah, right. Thanks!</p>",
        "id": 226308847,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1613315605
    },
    {
        "content": "<p>Note that said RFC would make it <em>much</em> harder to change to <code>Into</code>, so if that's something that we want to do, you should definitely run it up the flagpole.</p>",
        "id": 226321013,
        "sender_full_name": "scottmcm",
        "timestamp": 1613331654
    },
    {
        "content": "<p>(At the same time, it would make it much easier to make a <em>different</em> type that used <code>Into</code> instead of <code>From</code> for error-conversion.)</p>",
        "id": 226321026,
        "sender_full_name": "scottmcm",
        "timestamp": 1613331681
    },
    {
        "content": "<p>I was under the impression that <code>?</code> using <code>From</code> is a historical accident and there was desire to change it to <code>Into</code>, but I might be mistaken.</p>",
        "id": 226324203,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1613335958
    },
    {
        "content": "<p>But I don't personally have much time to invest here, I just wanted to see if it was considered for the next edition (or at all)</p>",
        "id": 226324229,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1613335996
    },
    {
        "content": "<p>There was definitely a desire, but IIRC it was tried and broke inference pretty widely.</p>\n<p>So I don't know that anyone's ever had a strong enough desire to really push through the work to do the switch.  I suspect that the lint for \"this is working but won't in the next edition with <code>Into</code>\" would be quite annoying to write, for one...</p>",
        "id": 226325834,
        "sender_full_name": "scottmcm",
        "timestamp": 1613338260
    },
    {
        "content": "<p>That said, I'm pretty sure it's \"just\" inference breakage, so it's allowed even without an edition if there's a way to get the impact low enough.</p>\n<p>It reminds me of the <code>as_ref</code> breakage, actually.  Could be nice to have a generally-applicable lint about \"this is only working because there's only one implementation, but is fragile, so you should probably type-annotate something\".</p>",
        "id": 226325999,
        "sender_full_name": "scottmcm",
        "timestamp": 1613338479
    },
    {
        "content": "<p>What's the pattern for which it breaks inference?</p>",
        "id": 226327785,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613340249
    },
    {
        "content": "<p>Doing that on an edition boundary seems potentially reasonable, if there's sufficient value to doing so.</p>",
        "id": 226327830,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613340272
    },
    {
        "content": "<p>Is there still actual demand for using <code>Into</code> in <code>?</code>? I thought that all the <code>From</code>/<code>Into</code> tension was resolved by the expanded orphan rules (covering, etc.)</p>",
        "id": 226328188,
        "sender_full_name": "bstrie",
        "timestamp": 1613340440
    },
    {
        "content": "<p>I attempted <code>Into</code> in <a href=\"https://github.com/rust-lang/rust/issues/60796\">#60796</a>, which very quickly showed ugly inference issues.</p>",
        "id": 226337302,
        "sender_full_name": "cuviper",
        "timestamp": 1613353186
    },
    {
        "content": "<p>Ah, here's a comment from Niko about <em>why</em> this is happening: <a href=\"https://github.com/rust-lang/rust/issues/38751#issuecomment-616573959\">https://github.com/rust-lang/rust/issues/38751#issuecomment-616573959</a></p>",
        "id": 226339329,
        "sender_full_name": "scottmcm",
        "timestamp": 1613356013
    },
    {
        "content": "<p>Hey, I apologise if the info is available somewhere and I just somehow missed it; but <strong>what's the update on the inherent <code>.not()</code> method on <code>bool</code>?</strong> There was a hackmd somewhere I just can't find, and I don't see mentions of it except in the \"new traits into the prelude\" RFC which advocates for the inherent method approach rather than bringing <code>ops::Not</code>. Was it deemed not edition-boundary worthy because, as an inherent method addition, it does not strictly <em>require</em> a new edition to be added?</p>",
        "id": 228233718,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1614607156
    },
    {
        "content": "<p>It's mentioned in <a href=\"https://github.com/rust-lang/rfcs/pull/3090\">https://github.com/rust-lang/rfcs/pull/3090</a></p>",
        "id": 228304909,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1614632385
    },
    {
        "content": "<p>but you already saw that</p>",
        "id": 228304928,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1614632395
    },
    {
        "content": "<p>an inherent impl method wouldn't need an RFC/edition boundary  as far as I can tell, just an implementation and a tracking issue for stabilization</p>",
        "id": 228305082,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1614632439
    }
]