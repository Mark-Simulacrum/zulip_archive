[
    {
        "content": "<p>I'm trying to finalize the Edition RFC this morning so I can get it open. If you take a look at <a href=\"https://hackmd.io/dRsVUVj5Qoi5oz0aPf_nFg?edit\">the draft</a>, you will see that the \"motivation\" section contains a number of \"headings\", each of which state a core principle of how we are approaching editions.</p>",
        "id": 226673337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613575919
    },
    {
        "content": "<ul>\n<li>Editions enable \"stability without stagnation\"</li>\n</ul>",
        "id": 226673399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613575931
    },
    {
        "content": "<ul>\n<li>Editions do not split the ecosystem</li>\n</ul>",
        "id": 226673415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613575938
    },
    {
        "content": "<ul>\n<li>Edition migration is easy and largely automated</li>\n</ul>",
        "id": 226673426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613575943
    },
    {
        "content": "<ul>\n<li>Editions occur periodically</li>\n</ul>",
        "id": 226673454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613575956
    },
    {
        "content": "<p>I am adding one more, based on <a href=\"https://github.com/rust-lang/rust/issues/80165#issuecomment-777057995\">my comment here</a>, that </p>\n<ul>\n<li>Editions are meant to be adopted</li>\n</ul>",
        "id": 226673881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613576114
    },
    {
        "content": "<h2>Editions are meant to be adopted</h2>\n<p>Editions go out of their way to preserve older code and ensure that it still compiles. Out of respect for our users, we don't want to force anyone to upgrade an edition on any particular schedule, and we wish to ensure that folks can still use older releases successfully. Nonetheless, all things being equal, we would prefer that folks adopt the new edition, just as we would generally prefer for people to move to the \"latest and greatest\" ways of using Rust once they are available. This belief can sometimes affect our policy. For example, we might issue lint warnings in older editions which can only be resolved by adopting a newer edition (or marking the lint as <code>#[allow]</code>, of course).</p>",
        "id": 226673972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613576160
    },
    {
        "content": "<p>I'm curious to hear how that paragraph reads to people.</p>",
        "id": 226674035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613576174
    },
    {
        "content": "<p>I think it's the right call; I was wary about general policy initially but I think it will inform this 2021 edition's policy so should be noted.</p>",
        "id": 226677257,
        "sender_full_name": "simulacrum",
        "timestamp": 1613577340
    },
    {
        "content": "<p>I might actually go stronger than just \"prefer\".  Perhaps something along the lines of \"we expect that all actively-developed code will move to the new edition well before the next one comes out\".</p>",
        "id": 226682133,
        "sender_full_name": "scottmcm",
        "timestamp": 1613578742
    },
    {
        "content": "<p>Similarly, \"For example, we will not do extra work to expose features on previous editions, as those old editions exist to support old code, not new code.  Features won't be artificially restricted from those editions, if support there is natural, but it's completely acceptable for newly added features to only work on the latest edition\".</p>",
        "id": 226683255,
        "sender_full_name": "scottmcm",
        "timestamp": 1613579163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> This seems reasonable to me, as long as we never take it as a hard requirement that <em>all</em> actively developed projects <em>will</em> migrate in a timely fashion. It seems acceptable to lint in previous editions; lints can be disabled or capped. But any reasoning starting with \"everyone will have migrated by now, so...\" may be problematic.</p>",
        "id": 226692096,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613582390
    },
    {
        "content": "<p>I would consider that an exceptional case</p>",
        "id": 226692464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582547
    },
    {
        "content": "<p>I have secret hopes of being able to kill some old patterns some day</p>",
        "id": 226692493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582563
    },
    {
        "content": "<p>But tbh I just see editions as one tool of many to being able to do that</p>",
        "id": 226692530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582580
    },
    {
        "content": "<p>i.e., along with lints, deprecations, opening PRs, and all kinds of other things</p>",
        "id": 226692561,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582592
    },
    {
        "content": "<p>the basic idea being \"we can kill some old pattern if nobody is relying on code that uses it\"</p>",
        "id": 226692575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582602
    },
    {
        "content": "<p>I don't actually know what pattern I would want to kill, I just want us to avoid getting stuck maintaining the rust equivalent of trigraphs for 22 years</p>",
        "id": 226692618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613582623
    },
    {
        "content": "<p>As Rust becomes more widely adopted, our ability to use crater to say \"nobody does xyz\" will become increasingly limited. There will be code crater doesn't see.</p>",
        "id": 226692784,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613582670
    },
    {
        "content": "<p>I absolutely understand the desire to avoid maintaining a compatibility mechanism if nobody is using it.</p>",
        "id": 226693023,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613582766
    },
    {
        "content": "<p>I just want to be careful with the assumption that everyone <em>will</em> upgrade, because as we grow we'll likely get subsets of users who for whatever reason never want to upgrade their code, and want it to keep building with newer Rust. One person's trigraph may be another person's Python 3.</p>",
        "id": 226693399,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1613582927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/268952-edition/topic/edition.20rfc.3A.20.22editions.20are.20meant.20to.20be.20adopted.22/near/226692784\">said</a>:</p>\n<blockquote>\n<p>As Rust becomes more widely adopted, our ability to use crater to say \"nobody does xyz\" will become increasingly limited. There will be code crater doesn't see.</p>\n</blockquote>\n<p>I wouldn't propose such a change based solely on crater results</p>",
        "id": 226694752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613583443
    },
    {
        "content": "<p>anyway, it's fine, we're arguing future hypotheses</p>",
        "id": 226694768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613583448
    },
    {
        "content": "<p>I don't disagree with any of your points :)</p>",
        "id": 226694779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613583452
    },
    {
        "content": "<p>and I'm in no rush to make hard changes</p>",
        "id": 226694798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613583458
    },
    {
        "content": "<p>that said, even windows 7 is no longer maintained :)</p>",
        "id": 226694844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613583475
    },
    {
        "content": "<p>don't worry: in 20 years we won't have Rust 2.0, but some upstart kid is gonna take all the lessons and mistakes we learned by then, make the Grime language, and slowly put us all out of work. Then we truly will be C++.</p>",
        "id": 226720919,
        "sender_full_name": "Lokathor",
        "timestamp": 1613593989
    },
    {
        "content": "<p>I can't wait for this day!</p>",
        "id": 226731061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613598485
    }
]