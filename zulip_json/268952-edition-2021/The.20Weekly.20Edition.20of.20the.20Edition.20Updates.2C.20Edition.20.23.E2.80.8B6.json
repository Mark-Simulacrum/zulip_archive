[
    {
        "content": "<p>Status updates! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<p>The list is finished! Everything left on the list is ready enough to continue into the new edition.</p>\n<ul>\n<li>std/core panic: Unchanged: Implemented and available already. Automated migration doesn't work yet because of the rustfix multi-span issue.</li>\n<li>Reserved prefixes: Decision was made: Make <code>prefix#ident</code> and <code>prefix\"literal\"</code> tokenization errors. We expect proposals for specific prefixes like <code>f\"\"</code>, <code>k#</code>, <code>z\"\"</code>, etc. at some point, at which we can define how those will exactly tokenize. (That way, we don't have to decide right now which escape sequences are valid in <code>abc\"..\"</code>, etc.)</li>\n<li>Prelude changes: Migration plan discussed and ready (although not written down in a for mal yet (?))</li>\n<li>Or patterns: FCP for new <code>:pat_param</code> <a href=\"https://github.com/rust-lang/rust/pull/83386\">finished</a>.</li>\n<li>Disjoint captures: <span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> What's the status?</li>\n<li>IntoIter for <code>[T; N]</code> - <a href=\"https://github.com/rust-lang/rust/pull/84147\">Merged</a>! Available in Rust 1.53.</li>\n<li>rustc_args_required_const: No longer an edition change.</li>\n<li>Lints: <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span>?</li>\n<li>Cargo default feature resolver change: Already done. (But <a href=\"#narrow/stream/268952-edition-2021/topic/Cargo.20resolver.20in.20workspace\">some questions</a> about workspaces still open (or at least should be documented in the edition guide).)</li>\n<li>rustfix multi-span issue: Nobody is working on this yet. See <a href=\"#narrow/stream/268952-edition-2021/topic/rustfix.20multi-span\">this topic</a>.</li>\n</ul>",
        "id": 236185043,
        "sender_full_name": "Mara",
        "timestamp": 1619447972
    },
    {
        "content": "<p>A blog post with all the details about the selection and summaries of the features will be published Soon™.</p>",
        "id": 236185215,
        "sender_full_name": "Mara",
        "timestamp": 1619448018
    },
    {
        "content": "<blockquote>\n<p>rustfix multi-span issue: Nobody is working on this yet. See this topic.</p>\n</blockquote>\n<p>are there any plans to work on this?</p>",
        "id": 236185298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619448049
    },
    {
        "content": "<p>normally I would offer but my life is about to get crazy because of graduation <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 236185336,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619448064
    },
    {
        "content": "<p>Nothing new to report on lints other than the PR upgrading certain lints to errors has been updated fixing the issues in CI and addressing feedback. Hopefully it gets merged soon.</p>",
        "id": 236185384,
        "sender_full_name": "rylev",
        "timestamp": 1619448078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> haha, was just about to ask: \"are you volunteering? ^^\"</p>",
        "id": 236185420,
        "sender_full_name": "Mara",
        "timestamp": 1619448093
    },
    {
        "content": "<p>we plan to put a note in the blog post, asking for help with some issues like this</p>",
        "id": 236185461,
        "sender_full_name": "Mara",
        "timestamp": 1619448109
    },
    {
        "content": "<p>I can offer help <em>sometime</em> between now and stabilizing 2021 edition, but probably not in the next month</p>",
        "id": 236185578,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619448143
    },
    {
        "content": "<p>but the alternative is to just make the lints not require it. instead of <code>insert '(' and ')'</code>, they could also just say <code>replace 'abc' by '(abc)'</code>.</p>",
        "id": 236185607,
        "sender_full_name": "Mara",
        "timestamp": 1619448151
    },
    {
        "content": "<p>so it's not that big of an issue. but would be nice to finally fix so we don't have to work around it</p>",
        "id": 236185663,
        "sender_full_name": "Mara",
        "timestamp": 1619448177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> FWIW, I think the rustfix solution is to un-revert the revert in <a href=\"https://github.com/rust-lang/rustfix/pull/156\">https://github.com/rust-lang/rustfix/pull/156</a>.  I think the concern about supporting non-MachineApplicable lints isn't really justified. AFAIK, that is the only problem and not a high priority as it is not exposed by <code>cargo fix</code>.</p>",
        "id": 236187141,
        "sender_full_name": "Eric Huss",
        "timestamp": 1619448701
    },
    {
        "content": "<p>thanks! will check it out.</p>",
        "id": 236187434,
        "sender_full_name": "Mara",
        "timestamp": 1619448814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> are you still working on the prelude edition change? as far as i know, there's now a migration plan, but it's only written down in a few messages here on zulip. it seems clear what the exact changes would be (TryFrom, TryInto, FromIterator), i think. but there's no formal approval (FCP) yet. would be nice if we can push this to FCP in the next few days. i can also do this if you want.</p>",
        "id": 236203158,
        "sender_full_name": "Mara",
        "timestamp": 1619454119
    },
    {
        "content": "<p>Do you want to scrap the types from the RFC? Or just do a partial FCP?</p>",
        "id": 236203286,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1619454169
    },
    {
        "content": "<p>I’ll see if I can make an update to the RFC tonight</p>",
        "id": 236203330,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1619454198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> by now there's so many useful comments on that RFC about the non-edition changes, that it might make more sense to keep that PR/RFC around for that and put the edition changes in a separate PR. i suppose it could just be a PR to <code>rust-lang/rust</code> that actually adds them to <code>std::prelude::rust_2021</code> so we can do the FCP there, but we should have the migration written down somewhere first. and that might as well be a small rfc with the three changes and the migration plan.</p>",
        "id": 236204045,
        "sender_full_name": "Mara",
        "timestamp": 1619454515
    },
    {
        "content": "<p>I opened an issue for the migration</p>",
        "id": 236207045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619455868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/268952-edition-2021/topic/The.20Weekly.20Edition.20of.20the.20Edition.20Updates.2C.20Edition.20.23.E2.80.8B6/near/236187141\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> FWIW, I think the rustfix solution is to un-revert the revert in <a href=\"https://github.com/rust-lang/rustfix/pull/156\">https://github.com/rust-lang/rustfix/pull/156</a>.  I think the concern about supporting non-MachineApplicable lints isn't really justified. AFAIK, that is the only problem and not a high priority as it is not exposed by <code>cargo fix</code>.</p>\n</blockquote>\n<p>so wait...</p>\n<p>revert the revert that reverted the fix :)</p>",
        "id": 236207128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1619455917
    },
    {
        "content": "<p>New RFC: <a href=\"https://github.com/rust-lang/rfcs/pull/3114\">https://github.com/rust-lang/rfcs/pull/3114</a></p>",
        "id": 236239594,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1619469817
    },
    {
        "content": "<p>2229: We are pretty near feature complete from a migrations and diagnostics prespective</p>",
        "id": 236239830,
        "sender_full_name": "Aman Arora",
        "timestamp": 1619469938
    }
]