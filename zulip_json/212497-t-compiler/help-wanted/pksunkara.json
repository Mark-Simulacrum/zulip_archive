[
    {
        "content": "<p>Hey, I was looking at things blocking <code>proc_macro_hygiene</code> and realized that <a href=\"https://github.com/rust-lang/rust/issues/55414\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55414\">https://github.com/rust-lang/rust/issues/55414</a> is labelled as E-help-wanted and E-mentor. I would love to fix this. But I have no idea where to start. <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> , you are the mentor, right?</p>",
        "id": 186044069,
        "sender_full_name": "pksunkara",
        "timestamp": 1579447271
    },
    {
        "content": "<blockquote>\n<p>@Vadim Petrochenkov , you are the mentor, right?</p>\n</blockquote>\n<p>Yes, I am!</p>",
        "id": 186045091,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1579449326
    },
    {
        "content": "<p>Looks like you haven't worked on <code>rustc</code> yet?<br>\nThe first thing to understand here is how <code>rustc</code>'s Abstract Syntax Tree is organized (<code>src\\libsyntax\\ast.rs</code>) and how visitor pattern is used for walking AST immutably (<code>src\\libsyntax\\visit.rs</code>) or mutably (<code>src\\libsyntax\\mut_visit.rs</code>).</p>",
        "id": 186045191,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1579449524
    },
    {
        "content": "<p>The <code>InvocationCollector</code>'s implementation of <code>MutVisitor</code> needs to be tweaked to implement the new behavior for attributes, this comments <a href=\"https://github.com/rust-lang/rust/issues/55414#issuecomment-554005412\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55414#issuecomment-554005412\">https://github.com/rust-lang/rust/issues/55414#issuecomment-554005412</a> describes some details.</p>",
        "id": 186045256,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1579449632
    },
    {
        "content": "<p>(Of course, before that you'll need to build rustc (<a href=\"https://github.com/rust-lang/rust/blob/master/README.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/README.md\">https://github.com/rust-lang/rust/blob/master/README.md</a>) and be able to run tests (<code>./x.py test --bless --stage 1 src/test/ui --test-args my_test_name</code>).)</p>",
        "id": 186045347,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1579449811
    },
    {
        "content": "<p>Got the tests working. Reading through the <code>ast.rs</code> for now.</p>",
        "id": 186051015,
        "sender_full_name": "pksunkara",
        "timestamp": 1579460228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> should I add a test to <code>ui</code> folder for this issue as first step? I am asking because I am not sure where to add the test</p>",
        "id": 186123907,
        "sender_full_name": "pksunkara",
        "timestamp": 1579544673
    },
    {
        "content": "<p>Yes, tests usually go into subdirectories of <code>test\\ui</code>, e.g. <code>test\\ui\\attributes</code> in this case.</p>",
        "id": 186128746,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1579549695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254853\">@pksunkara</span> The rustc-guide can be a good starting point for general rustc questions: <a href=\"https://rust-lang.github.io/rustc-guide/\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/\">https://rust-lang.github.io/rustc-guide/</a></p>\n<p>In particular: <a href=\"https://rust-lang.github.io/rustc-guide/building/suggested.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/building/suggested.html\">https://rust-lang.github.io/rustc-guide/building/suggested.html</a> and <a href=\"https://rust-lang.github.io/rustc-guide/tests/intro.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/tests/intro.html\">https://rust-lang.github.io/rustc-guide/tests/intro.html</a> and <a href=\"https://rust-lang.github.io/rustc-guide/compiler-debugging.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/compiler-debugging.html\">https://rust-lang.github.io/rustc-guide/compiler-debugging.html</a></p>",
        "id": 186128996,
        "sender_full_name": "mark-i-m",
        "timestamp": 1579549948
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"254853\">@pksunkara</span>.<br>\nAny news? Do you have a branch in progress so I could look at it and give some feedback?</p>",
        "id": 186619047,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1580040886
    },
    {
        "content": "<p>Unfortunately no, I have been travelling last week. I should have some stuff for you to look at this week. Sorry.</p>",
        "id": 186785451,
        "sender_full_name": "pksunkara",
        "timestamp": 1580220485
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, with the stabilisation of fn-like macros for expressions, my main reason for picking this up is gone. I am not interested in attribute macros for expressions. I would much rather focus my effort on getting <code>type_ascription</code> stable. But I really would love to get back to this sometime.</p>",
        "id": 187181325,
        "sender_full_name": "pksunkara",
        "timestamp": 1580600188
    },
    {
        "content": "<p>Ok.</p>",
        "id": 187197591,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1580634676
    }
]