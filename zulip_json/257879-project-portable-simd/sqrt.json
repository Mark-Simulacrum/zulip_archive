[
    {
        "content": "<p>Hello, I am using core_simd for my geometric algebra library g3: <a href=\"https://github.com/wrnrlr/g3\">https://github.com/wrnrlr/g3</a><br>\nWhat happened to .sqrt() and the like, I used to be able to use those, same for f32x4 * f32 (but that is less of a problem)?</p>",
        "id": 269341944,
        "sender_full_name": "Werner Laurensse",
        "timestamp": 1643153854
    },
    {
        "content": "<p>For sqrt: It wasn't really possible to include into actual <code>std::simd</code>, so we wrote an extension trait for it, which will be synced into <code>std</code> when a recent PR gets reviewed and merged.</p>",
        "id": 269342198,
        "sender_full_name": "Jubilee",
        "timestamp": 1643154044
    },
    {
        "content": "<p>And how can I use it in the mean time?</p>",
        "id": 269342356,
        "sender_full_name": "Werner Laurensse",
        "timestamp": 1643154142
    },
    {
        "content": "<p>For <code>{vector} $op {scalar}</code>: it turns out that, on adding that into core, the way we added it actually broke some libraries by introducing an ambiguity where there wasn't before. While acceptable breakage, it wasn't really intended and we didn't have a transition path, and we want to at least see how much we can add <strong>without</strong> breaking everyone.</p>",
        "id": 269342387,
        "sender_full_name": "Jubilee",
        "timestamp": 1643154151
    },
    {
        "content": "<p>The trait is in <a href=\"https://github.com/rust-lang/portable-simd/tree/master/crates/std_float\">https://github.com/rust-lang/portable-simd/tree/master/crates/std_float</a></p>",
        "id": 269342437,
        "sender_full_name": "Jubilee",
        "timestamp": 1643154188
    },
    {
        "content": "<p>For adding the ops, it's mostly just a matter of rewriting the PR to add the overloads and carefully testing that we don't break the things we broke before.</p>",
        "id": 269342590,
        "sender_full_name": "Jubilee",
        "timestamp": 1643154300
    },
    {
        "content": "<p>Interesting you can use a trait and then it will work automatically, I didn't know that, thx for ur help!</p>",
        "id": 269343180,
        "sender_full_name": "Werner Laurensse",
        "timestamp": 1643154691
    }
]