[
    {
        "content": "<p>What is the high level process for merging master into rust nightly. The specific question I'm trying to answer is when we'll see <a href=\"https://github.com/rust-lang/portable-simd/commit/5f49d4c8435a25d804b2f375e949cb25479f5be9\">this <code>ToBitmask</code> commit</a> in nightly, but I'd value having an understanding the process more generally.</p>",
        "id": 273523213,
        "sender_full_name": "Joel Pedraza",
        "timestamp": 1646068776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span></p>",
        "id": 273523455,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1646068869
    },
    {
        "content": "<p>I'm not very familiar with it either, maybe we should have a guide in the repo on how to do it?</p>",
        "id": 273523599,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1646068925
    },
    {
        "content": "<p>yes.</p>",
        "id": 273531403,
        "sender_full_name": "Jubilee",
        "timestamp": 1646072080
    },
    {
        "content": "<p>it's very simple unless you need to fix something and then it is pain and suffering.</p>",
        "id": 273531493,
        "sender_full_name": "Jubilee",
        "timestamp": 1646072135
    },
    {
        "content": "<p>just so.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/94452\">https://github.com/rust-lang/rust/pull/94452</a><br>\nthe pain is when it requires anything <strong>but</strong> this</p>",
        "id": 273534506,
        "sender_full_name": "Jubilee",
        "timestamp": 1646073554
    },
    {
        "content": "<p>However, as of now, with both the std_float crate, and the core_simd crate, as part of the standard library, that... should ideally never happen.</p>",
        "id": 273535380,
        "sender_full_name": "Jubilee",
        "timestamp": 1646074010
    },
    {
        "content": "<p>I was going to do this on Saturday, but I tried that day to experiment with how we reintroduce autosplats instead, and walked away from that with many headaches because I experimented with an overly ambitious design instead of doing the \"obvious\" thing. ^^;</p>",
        "id": 273547770,
        "sender_full_name": "Jubilee",
        "timestamp": 1646079582
    },
    {
        "content": "<p>Also, it's fine if anyone opens the sync PRs, just r? @workingjubilee<br>\nI tried to r? @calebzulawski in but it didn't \"take\"??? Maybe only I have bors/reviewer power, idk.<br>\nAs long as we review things up here we're fine whenever.</p>\n<p>The sync PRs are also why I started tweaking everything to use <code>rust-lang/portable-simd#{issue}</code> or <code>rust-lang/portable-simd@{commit}</code> in merge messages, and experimenting with that a little. Otherwise, they can, when merged into rust-lang/rust, also wind up pinging rust-lang/rust issues, because they are not \"submodule\" commits, they are now in fact real commits in the rust-lang/rust repo!</p>\n<p>Really, this is something GitHub should fix, it's \"not our problem\", but it doesn't cost much to maintain the disambiguation (though it should be automated), so.</p>",
        "id": 273548729,
        "sender_full_name": "Jubilee",
        "timestamp": 1646080084
    },
    {
        "content": "<p>I don't think you can r? someone who can't actually approve the PR</p>",
        "id": 273555113,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1646082925
    },
    {
        "content": "<p>yeah whoops.</p>",
        "id": 273555185,
        "sender_full_name": "Jubilee",
        "timestamp": 1646082964
    }
]