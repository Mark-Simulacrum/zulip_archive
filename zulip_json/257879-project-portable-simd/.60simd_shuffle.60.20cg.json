[
    {
        "content": "<p>currently <code>simd_shuffle</code> uses some generic parameter <code>V</code> for its second function parameter, i would prefer to change that to use const generics instead</p>",
        "id": 276877697,
        "sender_full_name": "lcnr",
        "timestamp": 1648476290
    },
    {
        "content": "<p>i don't know exactly what that intrinisic does, but is the ideal function signature something like the following?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">simd_shuffle</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">N</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">IDX</span>: <span class=\"p\">[</span><span class=\"kt\">u32</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">l</span>: <span class=\"nc\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r</span>: <span class=\"nc\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">U</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 276878623,
        "sender_full_name": "lcnr",
        "timestamp": 1648476664
    },
    {
        "content": "<p>until we get generic const parameter types, maybe we can use the following for now, considering that its just an internal intrinsic?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">simd_shuffle</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">IDX</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"nb\">static</span> <span class=\"p\">[</span><span class=\"kt\">u32</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">l</span>: <span class=\"nc\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r</span>: <span class=\"nc\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">U</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 276878768,
        "sender_full_name": "lcnr",
        "timestamp": 1648476728
    },
    {
        "content": "<p>That's about right</p>",
        "id": 276880236,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1648477349
    },
    {
        "content": "<p>I actually tried exposing a <code>&amp;'static [usize]</code> parameter in the public API a while back and that resulted in an ICE, is that expected to work now?</p>",
        "id": 276880510,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1648477453
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> not too sure</p>",
        "id": 276881027,
        "sender_full_name": "lcnr",
        "timestamp": 1648477675
    },
    {
        "content": "<p>its probably still broken,we have to wait for valtrees being done for that</p>",
        "id": 276881120,
        "sender_full_name": "lcnr",
        "timestamp": 1648477700
    },
    {
        "content": "<p>which should happen over the next few months</p>",
        "id": 276881147,
        "sender_full_name": "lcnr",
        "timestamp": 1648477712
    },
    {
        "content": "<p>then <code>&amp;'static [usize]</code> should work as expected</p>",
        "id": 276881189,
        "sender_full_name": "lcnr",
        "timestamp": 1648477732
    },
    {
        "content": "<p>Yeah it should be a function accepting one or two vectors of the same element type and a list of indices, and then return a vector of size equal to the length of the list.</p>",
        "id": 276926876,
        "sender_full_name": "Jubilee",
        "timestamp": 1648499189
    }
]