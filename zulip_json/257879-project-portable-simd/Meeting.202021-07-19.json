[
    {
        "content": "<p>Hello hello. Do we have a quorum today?<br>\n<a href=\"https://hackmd.io/3UxVY3yqRIqXvMj-pzcuBA?both\">https://hackmd.io/3UxVY3yqRIqXvMj-pzcuBA?both</a></p>",
        "id": 246510857,
        "sender_full_name": "Jubilee",
        "timestamp": 1626727205
    },
    {
        "content": "<p>looks like it is us!<br>\n<span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> re: <a href=\"https://github.com/rust-lang/stdsimd/pull/145\">https://github.com/rust-lang/stdsimd/pull/145</a><br>\nI think we should try to be conservative in adding aliases because they go a step further in paving the path of \"recommended usage\".</p>",
        "id": 246513007,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728255
    },
    {
        "content": "<p>I am mostly just thinking that it seems like a valid use case, and the aliases are significantly less verbose than the actual type</p>",
        "id": 246513151,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728334
    },
    {
        "content": "<p>hi</p>",
        "id": 246513248,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626728402
    },
    {
        "content": "<p>I don't personally have a strong preference other than maybe the two choices should be \"every useful alias\" or \"no aliases at all\"</p>",
        "id": 246513550,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728457
    },
    {
        "content": "<p>Oh about the 32-bit version I agree.</p>",
        "id": 246513624,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728472
    },
    {
        "content": "<p>RISC-V's P extension also supports 32-bit SIMD</p>",
        "id": 246513880,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626728523
    },
    {
        "content": "<p>mostly re:this.</p>\n<blockquote>\n<p>Now I'm not so sure this is correct, and perhaps we should be providing aliases for all vectors with 2 (or even 1?) through 32 lanes.</p>\n</blockquote>",
        "id": 246513943,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728530
    },
    {
        "content": "<p>So arm does have the concept of things like f64x1 which we also don't have</p>",
        "id": 246514107,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728578
    },
    {
        "content": "<p>hmm.</p>",
        "id": 246514205,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728606
    },
    {
        "content": "<p>I guess all I mean is rather than going off of weird corner case architecture quirks maybe we should do anything that might be useful to a user. I could see i8x2 being useful to someone even though it's not really a 1:1 hardware mapping</p>",
        "id": 246514435,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728671
    },
    {
        "content": "<p>i8x2 and i64x2 aren't really different in any other way beyond specific hardware</p>",
        "id": 246514585,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728716
    },
    {
        "content": "<p>If we're going to provide all of i16x2, i32x2, i64x2, f32x2, f64x2, I think we should have i8x2 as well for consistency's sake</p>",
        "id": 246514596,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626728720
    },
    {
        "content": "<p>Yeah exactly.</p>",
        "id": 246514624,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728729
    },
    {
        "content": "<p>hmm.</p>",
        "id": 246514863,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728785
    },
    {
        "content": "<p>Right now there are no vector types (except maybe risc v?) that extend beyond 64 elements so that may be a good threshold instead of a byte width</p>",
        "id": 246514901,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728797
    },
    {
        "content": "<p>SimpleV, when combined with sub-vectors, gets you to 256 elements</p>",
        "id": 246515042,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626728837
    },
    {
        "content": "<p>ARM SVE gets you to i8x1024</p>",
        "id": 246515110,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626728854
    },
    {
        "content": "<p>I think I am not persuaded <em>yet</em> but I can see it, and as long as we don't expose f64x1 tbh I am okay.</p>",
        "id": 246515136,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728863
    },
    {
        "content": "<p>Since nothing would prevent you from doing 256 I think we need to draw a line somewhere and I'd be comfortable with 64</p>",
        "id": 246515296,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728900
    },
    {
        "content": "<p>for some reason the idea of that alias makes me break out in hives.</p>",
        "id": 246515306,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728903
    },
    {
        "content": "<p>I think we should provide length-1 vectors because it could have implications on the compiled code unfortunately</p>",
        "id": 246515410,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728932
    },
    {
        "content": "<p>They aren't the same as f64 etc because they should have larger alignment</p>",
        "id": 246515541,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626728971
    },
    {
        "content": "<p>len 1 <em>vectors</em> in the compiler yes the alias no.</p>",
        "id": 246515542,
        "sender_full_name": "Jubilee",
        "timestamp": 1626728972
    },
    {
        "content": "<p>i think picking 64 as an arbitrary stopping point for type aliases is reasonable, I think the generic types should work for all vector lengths &gt;= 1 up to 2^16 or 2^20</p>",
        "id": 246515766,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626729029
    },
    {
        "content": "<p>Like I can take allergy medicine while working on this if the consensus is \"yes f64x1\" but it feels terribly wrong somehow, it starts to make me think \"no aliases\".</p>",
        "id": 246515774,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729031
    },
    {
        "content": "<p>They're not super common but they are used and I think it would be consistent</p>",
        "id": 246515798,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729038
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/core/arch/aarch64/struct.float64x1_t.html\">https://doc.rust-lang.org/core/arch/aarch64/struct.float64x1_t.html</a></p>",
        "id": 246515904,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729083
    },
    {
        "content": "<p>Fyi</p>",
        "id": 246515906,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729088
    },
    {
        "content": "<p>But consensus is merge this for now?</p>",
        "id": 246515914,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729091
    },
    {
        "content": "<p>gross</p>",
        "id": 246515921,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729095
    },
    {
        "content": "<p>Yeah probably</p>",
        "id": 246515947,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729118
    },
    {
        "content": "<p>It's no less consistent than our current list of aliases</p>",
        "id": 246516009,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729133
    },
    {
        "content": "<p>I can be a big queer if I have to but there is just something aesthetically wrong to me about that.</p>",
        "id": 246516056,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729164
    },
    {
        "content": "<p>It really just comes down to alignment I think</p>",
        "id": 246516108,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729197
    },
    {
        "content": "<p>\"this is a 1-length array with simd alignment\"</p>",
        "id": 246516135,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729225
    },
    {
        "content": "<p>I'd suggest having aliases for all TxN where N is a power of 2 in <code>2..=64</code></p>",
        "id": 246516143,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626729229
    },
    {
        "content": "<p>Yeah I think ignoring the 1-length vector question that's a good idea</p>",
        "id": 246516271,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729268
    },
    {
        "content": "<p>on <a href=\"https://github.com/rust-lang/stdsimd/issues/109\">stdsimd#109</a>: no progress, been busy with other things</p>",
        "id": 246516832,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626729502
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/stdsimd/issues/144\">stdsimd#144</a> seems fine and necessary yeah.<br>\nan ICE you say?</p>",
        "id": 246517469,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729848
    },
    {
        "content": "<p>I think the ICE has been resolved in nightly</p>",
        "id": 246517498,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729869
    },
    {
        "content": "<p>I thought it was something we did, but for once it wasn't</p>",
        "id": 246517519,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626729885
    },
    {
        "content": "<p>lol</p>",
        "id": 246517611,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729950
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"229517\">Jacob Lifshay</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Meeting.202021-07-19/near/246516832\">said</a>:</p>\n<blockquote>\n<p>on <a href=\"https://github.com/rust-lang/stdsimd/issues/109\">stdsimd#109</a>: no progress, been busy with other things</p>\n</blockquote>\n<p>that's fine! thank you for all your hard work on that seriously.</p>",
        "id": 246517710,
        "sender_full_name": "Jubilee",
        "timestamp": 1626729994
    },
    {
        "content": "<p>the ice must've melted -- summer :P</p>",
        "id": 246517740,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730017
    },
    {
        "content": "<p>I think we can just merge <a href=\"https://github.com/rust-lang/rust/issues/141\">#141</a> and <a href=\"https://github.com/rust-lang/rust/issues/144\">#144</a>. <br>\nq re: <a href=\"https://github.com/rust-lang/rust/issues/141\">#141</a> tho'... the feature flag is fine but do we want to rename our repo to be less confusing? last chance.</p>",
        "id": 246517972,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730153
    },
    {
        "content": "<p>To portable-simd?</p>",
        "id": 246518021,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730183
    },
    {
        "content": "<p>yes.</p>",
        "id": 246518051,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730199
    },
    {
        "content": "<p>I don't have a strong opinion either way</p>",
        "id": 246518139,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730230
    },
    {
        "content": "<p>renaming sounds good to me, stdsimd was unfortunately already taken</p>",
        "id": 246518142,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730231
    },
    {
        "content": "<p>Yeah it might be worth it only because it's confusing</p>",
        "id": 246518205,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730263
    },
    {
        "content": "<p>iirc github redirects should take care of linkrot</p>",
        "id": 246518236,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730281
    },
    {
        "content": "<p>Yeah it has sparked a bit of confusion and it would require like... I would wanna make sure links get fixed but I am willing to guarantee that works in a followup PR.</p>",
        "id": 246518289,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730320
    },
    {
        "content": "<p>( basically worst case is to just rebase the repo to rewrite a few commit messages <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
        "id": 246518422,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730391
    },
    {
        "content": "<p>Probably worth doing sooner rather than later</p>",
        "id": 246518582,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730494
    },
    {
        "content": "<p>please no rebasing...plenty of people have forks and don't want to have to figure out how to rebase on upstream...</p>",
        "id": 246518586,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730495
    },
    {
        "content": "<p>indeed, I am interested in making it work without rebasing but I would rather break people This Once, y'know?</p>",
        "id": 246518717,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730592
    },
    {
        "content": "<p>it would be the same content, only metadata rewrites, so nothing should actually break.</p>",
        "id": 246518863,
        "sender_full_name": "Jubilee",
        "timestamp": 1626730688
    },
    {
        "content": "<p>I'd expect that github redirects should take care of broken links, we can just leave the outdated links in commit messages and people can just see that they redirect if they click on them</p>",
        "id": 246518905,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730725
    },
    {
        "content": "<p>I agree that github can probably handle it, just for simplicity</p>",
        "id": 246518970,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730767
    },
    {
        "content": "<p>Even if in some scenario it doesn't, it's not absolutely impossible to track down the correct link</p>",
        "id": 246519067,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626730811
    },
    {
        "content": "<p>if github can't handle that, we can create a stdsimd repo that just says to go to the portable-simd repo</p>",
        "id": 246519123,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730850
    },
    {
        "content": "<p>though renaming the repo seems significant enough that we might want to post an issue and have some time for asynchronous review for those who aren't here today</p>",
        "id": 246519357,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626730995
    },
    {
        "content": "<p>yes.</p>",
        "id": 246519369,
        "sender_full_name": "Jubilee",
        "timestamp": 1626731007
    },
    {
        "content": "<p>and rename next meeting</p>",
        "id": 246519374,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626731013
    },
    {
        "content": "<p>I... think we should merge <a href=\"https://github.com/rust-lang/stdsimd/issues/131\">stdsimd#131</a> and add cargo fmt to CI.</p>",
        "id": 246519662,
        "sender_full_name": "Jubilee",
        "timestamp": 1626731216
    },
    {
        "content": "<p>Probably</p>",
        "id": 246519710,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626731244
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"229517\">Jacob Lifshay</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Meeting.202021-07-19/near/246519357\">said</a>:</p>\n<blockquote>\n<p>though renaming the repo seems significant enough that we might want to post an issue and have some time for asynchronous review for those who aren't here today<br>\nand rename next meeting</p>\n</blockquote>\n<p>Yes, sounds good.</p>",
        "id": 246519995,
        "sender_full_name": "Jubilee",
        "timestamp": 1626731434
    },
    {
        "content": "<p>Anyone wanna pop an ish for cargo fmt in CI?</p>",
        "id": 246520042,
        "sender_full_name": "Jubilee",
        "timestamp": 1626731474
    },
    {
        "content": "<p>I can add it later, that's a good idea</p>",
        "id": 246520173,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626731577
    },
    {
        "content": "<p>Might be worth opening an issue just so we don't forget</p>",
        "id": 246520195,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626731597
    },
    {
        "content": "<p>is it okay if I squash <a href=\"https://github.com/rust-lang/stdsimd/issues/144\">stdsimd#144</a>?</p>",
        "id": 246520685,
        "sender_full_name": "Jubilee",
        "timestamp": 1626731990
    },
    {
        "content": "<p>Go for it</p>",
        "id": 246520862,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626732068
    },
    {
        "content": "<p>re: fmt, it might be a concern in rust-lang/rust so it's a good idea to be checking on our end.</p>",
        "id": 246520863,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732069
    },
    {
        "content": "<p>True, there's a check there as well</p>",
        "id": 246520968,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626732124
    },
    {
        "content": "<p>merge conflict on <a href=\"https://github.com/rust-lang/rust/issues/141\">#141</a>, whoops.</p>",
        "id": 246521005,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732144
    },
    {
        "content": "<p>it would be really handy to have something like kwrobot in <a href=\"https://gitlab.kitware.com/utils/rust-gitlab/-/merge_requests/215\">https://gitlab.kitware.com/utils/rust-gitlab/-/merge_requests/215</a></p>",
        "id": 246521019,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626732158
    },
    {
        "content": "<p>where it automatically checks formatting and can reformat your pull request for you</p>",
        "id": 246521075,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1626732192
    },
    {
        "content": "<p>I want to discuss <a href=\"https://github.com/rust-lang/stdsimd/issues/142\">stdsimd#142</a> but that can be async.</p>",
        "id": 246521153,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732243
    },
    {
        "content": "<p>sorryyyyy~</p>",
        "id": 246521208,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732259
    },
    {
        "content": "<p>Thank you all for coming!</p>",
        "id": 246521218,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732266
    },
    {
        "content": "<p>Sure, I actually have a high level discussion for 142 we can have elsewhere</p>",
        "id": 246521238,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626732282
    },
    {
        "content": "<p>Oh, I see what the problem is. This can be fixed in a better way.</p>",
        "id": 246521399,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732422
    },
    {
        "content": "<p>...or not lol.</p>",
        "id": 246521711,
        "sender_full_name": "Jubilee",
        "timestamp": 1626732603
    },
    {
        "content": "<p>Okay NOW I got a fix, bleh.</p>",
        "id": 246523011,
        "sender_full_name": "Jubilee",
        "timestamp": 1626733529
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">-#![feature(repr_simd, platform_intrinsics, simd_ffi, const_generics, stdsimd)]</span>\n<span class=\"gi\">+#![feature(</span>\n<span class=\"gi\">+    const_generics,</span>\n<span class=\"gi\">+    platform_intrinsics,</span>\n<span class=\"gi\">+    repr_simd,</span>\n<span class=\"gi\">+    simd_ffi,</span>\n<span class=\"gi\">+    staged_api,</span>\n<span class=\"gi\">+    stdsimd,</span>\n<span class=\"gi\">+)]</span>\n</code></pre></div>",
        "id": 246523272,
        "sender_full_name": "Jubilee",
        "timestamp": 1626733699
    },
    {
        "content": "<p>Ah yes, adding staged API went past the line limit or something</p>",
        "id": 246523811,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1626734068
    },
    {
        "content": "<p>Nah, it was just a bunch of things on the same line which is git conflict prone so I intentionally separated them out.</p>",
        "id": 246523879,
        "sender_full_name": "Jubilee",
        "timestamp": 1626734135
    },
    {
        "content": "<p>It can get in once CI passes.</p>",
        "id": 246524022,
        "sender_full_name": "Jubilee",
        "timestamp": 1626734269
    },
    {
        "content": "<p>And has.</p>",
        "id": 246529950,
        "sender_full_name": "Jubilee",
        "timestamp": 1626739505
    }
]