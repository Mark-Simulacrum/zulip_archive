[
    {
        "content": "<p>Hi, I wrote a generic aggregation, found horizontal_sum is not a trait method</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">agg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Simd</span>::<span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">&gt;</span>::<span class=\"n\">splat</span><span class=\"p\">(</span><span class=\"n\">T</span>::<span class=\"n\">zero</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">agg</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">Simd</span>::<span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">&gt;</span>::<span class=\"n\">from_slice</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">slice</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">..</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">agg</span><span class=\"p\">.</span><span class=\"n\">horizontal_sum</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"c1\">// error</span>\n</code></pre></div>\n<p>Is this by design? This forces me to write macros for everything that uses horizontal_xx.</p>",
        "id": 274356308,
        "sender_full_name": "elbaro",
        "timestamp": 1646636726
    },
    {
        "content": "<p>i'm not aware of a particular design reason, other than that we didn't want 7 zillion traits. <span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> may know, he originally added it in (named <code>sum</code> at the time) <a href=\"https://github.com/rust-lang/portable-simd/commit/875b31c33f6b0ccbb8590c2b3c9cbf1b11ed6165\">https://github.com/rust-lang/portable-simd/commit/875b31c33f6b0ccbb8590c2b3c9cbf1b11ed6165</a></p>",
        "id": 274517260,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1646732995
    },
    {
        "content": "<p>I think that the rational is that std also has no traits for these ops; usually folks use the <code>num</code> crate to have those.</p>",
        "id": 274517379,
        "sender_full_name": "Jorge Leitao",
        "timestamp": 1646733057
    }
]