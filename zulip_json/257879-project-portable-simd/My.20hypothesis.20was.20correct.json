[
    {
        "content": "<p>Much belatedly, finally gave it a go and <a href=\"https://github.com/rust-lang/stdsimd/pull/47\">https://github.com/rust-lang/stdsimd/pull/47</a> does in fact work out. Also for some reason the wasm SIMD mask tests fail on the current version of stdsimd but not  <a href=\"https://github.com/rust-lang/stdsimd/pull/48's\">https://github.com/rust-lang/stdsimd/pull/48's</a> version.</p>",
        "id": 218790384,
        "sender_full_name": "Jubilee",
        "timestamp": 1607052422
    },
    {
        "content": "<p>I had issues with wasm masks, but only u128 masks (and it went away with a more recent nightly)</p>",
        "id": 218790480,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1607052582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> Yeah, my PR has the same issue even though I don't touch that code at all, but yours does not. So some logic change you did appears to matter as well.</p>",
        "id": 218791038,
        "sender_full_name": "Jubilee",
        "timestamp": 1607053250
    },
    {
        "content": "<p>I actually think it might be some sort of accidental UB (in IR, not in rust) or LLVM bug or something, because it was completely illogical.  Two masks with the same bit patterns (from debug printing) didnt return true for <code>eq</code></p>",
        "id": 218791142,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1607053404
    },
    {
        "content": "<p>I would have tried to attach a debugger but I don't really know how that would work with wasm if at all</p>",
        "id": 218791204,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1607053466
    },
    {
        "content": "<p>uh often the answer is \"it doesn't\" lol</p>",
        "id": 218791238,
        "sender_full_name": "Jubilee",
        "timestamp": 1607053539
    },
    {
        "content": "<p>lol</p>",
        "id": 218791247,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1607053550
    },
    {
        "content": "<p>and finally we know who bors has been this whole time...</p>",
        "id": 218792340,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1607054829
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> We OK to merge this? I was going to hold off until feature/comparisons merged but since you're extending work on that w/ const generics I think I should just advance this plot.</p>",
        "id": 219275488,
        "sender_full_name": "Jubilee",
        "timestamp": 1607468672
    },
    {
        "content": "<p>Sure</p>",
        "id": 219275529,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1607468711
    }
]