[
    {
        "content": "<p>hi</p>",
        "id": 255118934,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632776302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span>?</p>",
        "id": 255119503,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632776535
    },
    {
        "content": "<p>is it just <span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> and me?</p>",
        "id": 255119720,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632776632
    },
    {
        "content": "<p>Oh hi.</p>",
        "id": 255120154,
        "sender_full_name": "Jubilee",
        "timestamp": 1632776830
    },
    {
        "content": "<p>I didn't realize it was the right day. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 255120172,
        "sender_full_name": "Jubilee",
        "timestamp": 1632776838
    },
    {
        "content": "<p>hi!</p>",
        "id": 255120189,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632776845
    },
    {
        "content": "<p>im here but might wander off</p>",
        "id": 255120662,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632777054
    },
    {
        "content": "<p>so, since no one else is speaking up, what's the progress on <a href=\"https://github.com/rust-lang/portable-simd/issues/161\">portable-simd#161</a>?</p>",
        "id": 255121012,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777189
    },
    {
        "content": "<p>I think I'm happy with it now, so I don't really plan on adding anything else for now</p>",
        "id": 255121086,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777240
    },
    {
        "content": "<p>so, assuming the ci failure is unrelated, merge?</p>",
        "id": 255121568,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777373
    },
    {
        "content": "<p>Well, no one has actually approved it</p>",
        "id": 255121792,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777439
    },
    {
        "content": "<p>The CI failure is unrelated, I opened that tagged issue for it</p>",
        "id": 255121817,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777454
    },
    {
        "content": "<p>oh, well i approved it :)</p>",
        "id": 255122033,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777553
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/portable-simd/pull/161#pullrequestreview-764762356\">https://github.com/rust-lang/portable-simd/pull/161#pullrequestreview-764762356</a></p>",
        "id": 255122037,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777557
    },
    {
        "content": "<p>do we want to change the rustc intrinsics to use swizzle instead of shuffle?</p>",
        "id": 255122154,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777611
    },
    {
        "content": "<p>for consistency?</p>",
        "id": 255122179,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777626
    },
    {
        "content": "<p>For now probably not, LLVM calls it shuffle anyway. And I'm guessing starch uses them too</p>",
        "id": 255122220,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777645
    },
    {
        "content": "<p>k</p>",
        "id": 255122235,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777655
    },
    {
        "content": "<p>so, <span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> want to merge now that it's approved?</p>",
        "id": 255122682,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632777867
    },
    {
        "content": "<p>I'm hoping for at least a little more consensus since it's so controversial</p>",
        "id": 255122762,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> <span class=\"user-mention\" data-user-id=\"209168\">@Thom Chiovoloni</span> ?</p>",
        "id": 255122831,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632777943
    },
    {
        "content": "<p>Hmm.</p>",
        "id": 255122915,
        "sender_full_name": "Jubilee",
        "timestamp": 1632777971
    },
    {
        "content": "<p>i dont like it but i guess i'm fine with it landing as something we can have for now. i really dont think it should be the final api though.</p>",
        "id": 255122983,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778007
    },
    {
        "content": "<p>Yeah we don't change <code>simd_shuffle</code> internally, not until like we are ready to paint that <span aria-label=\"b\" class=\"emoji emoji-1f171\" role=\"img\" title=\"b\">:b:</span> ikeshed for good.</p>",
        "id": 255123040,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778034
    },
    {
        "content": "<p>I do think it's very possible that the things we need for a different API simply never happen since it's a big lift</p>",
        "id": 255123088,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778066
    },
    {
        "content": "<p>full stop: i dont think i could have come up with an api with worse ergonomics for the common case if i tried. even the macro version seems pretty painful. the api is extremely powerful and allows for some interesting transformations, but i am very much opposed to that being the final api</p>",
        "id": 255123315,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778154
    },
    {
        "content": "<p>Pushed a commit to my gatscat branch which may fix the import thing.</p>",
        "id": 255123320,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778155
    },
    {
        "content": "<p>I'm curious, how could the regular case be done better in any way?</p>",
        "id": 255123390,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778193
    },
    {
        "content": "<p>uhh</p>",
        "id": 255123538,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778249
    },
    {
        "content": "<p>until rust gets some major const generics improvements, i think caleb's design is the best we got</p>",
        "id": 255123582,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778262
    },
    {
        "content": "<p>The way we have it in master right now is nearly identical to the macro, but is implemented explicitly for each size rather than for all vectors</p>",
        "id": 255123622,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778281
    },
    {
        "content": "<p>the old api was better for the common case, honestly</p>",
        "id": 255123633,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778288
    },
    {
        "content": "<p>I am having trouble wanting to merge it over Thom's objection if you think it is likely not gonna be improved and are already settling <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 255123667,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778313
    },
    {
        "content": "<p>Fwiw I think the current implementation is unacceptable for the final API, I don't think we should be implementing functions for particular sizes</p>",
        "id": 255123802,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778364
    },
    {
        "content": "<p>It's incongruent with the rest of the API</p>",
        "id": 255123860,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778398
    },
    {
        "content": "<p>i think in the past when parts of the stdlib has been forced to choose between</p>\n<ul>\n<li>nicer api that is less generic</li>\n<li>more generic api that is more complex/hard to use</li>\n</ul>\n<p>it has made the choice against being generic</p>",
        "id": 255123920,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778439
    },
    {
        "content": "<p>So what happens when we decide in the future we support all lengths from 1 to say 1024, we implement the same function 1024 times?</p>",
        "id": 255124078,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778501
    },
    {
        "content": "<p>Even worse if we support much larger vectors</p>",
        "id": 255124116,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778526
    },
    {
        "content": "<p>OKAY cool.</p>",
        "id": 255124128,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778534
    },
    {
        "content": "<p>yeah, i think individual implementations for each kind are ok for scalars...vectors have too many cases</p>",
        "id": 255124154,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778548
    },
    {
        "content": "<p>no, probably not. but i don't really think \"yes this api is bad but its more generic\" is that compelling of an argument to me. we should push on const generics if we need them to go somewhere for a better api</p>",
        "id": 255124172,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778555
    },
    {
        "content": "<p>we don't need 1024 functions</p>",
        "id": 255124207,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778562
    },
    {
        "content": "<p>So I am okay 100% with this being merged if we all agree this needs to improve, like, direly.</p>",
        "id": 255124238,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778570
    },
    {
        "content": "<p>yes same.</p>",
        "id": 255124270,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778586
    },
    {
        "content": "<p>I guess I fail to see what is dramatically worse about the macro from what we currently have, it's nearly identical</p>",
        "id": 255124281,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778591
    },
    {
        "content": "<p>yeah, it needs improvement -- blocked on better const generics</p>",
        "id": 255124312,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778604
    },
    {
        "content": "<p>I think it would be safe to stabilize the macro in the future if we have to. And possibly deprecate it if we get better const generics</p>",
        "id": 255124339,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778618
    },
    {
        "content": "<p>the new macro is fine imho</p>",
        "id": 255124348,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778622
    },
    {
        "content": "<p>messy on the inside---but who cares, it looks nice and works!</p>",
        "id": 255124408,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778660
    },
    {
        "content": "<p>Saying we only <strong>really</strong> plan to stabilize the macro sounds okay to me.</p>",
        "id": 255124456,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778681
    },
    {
        "content": "<p>Even that should be subject to improvement but I am \"good\" with that reality since a lot of other things are like that.</p>",
        "id": 255124584,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778727
    },
    {
        "content": "<p>fair enough, i think the macro needs more work (part of that is <code>enum Which</code>), but i have to get back to work anyway.</p>",
        "id": 255124590,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1632778730
    },
    {
        "content": "<p>sounds good as long as we end up with a stable generic swizzle at some point and always have a nightly generic version (if messy)</p>",
        "id": 255124620,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778745
    },
    {
        "content": "<p>Are we generally opposed to the enum for choosing between two vectors?</p>",
        "id": 255124792,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778818
    },
    {
        "content": "<p>idk, I haven't used it yet so I don't know how it feels.</p>",
        "id": 255124843,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778844
    },
    {
        "content": "<p>I made so many off by one errors before implementing that, I thought it was much better</p>",
        "id": 255124845,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778845
    },
    {
        "content": "<p>heheh.</p>",
        "id": 255124855,
        "sender_full_name": "Jubilee",
        "timestamp": 1632778849
    },
    {
        "content": "<p>Not a fan of the name but it was effectively a placeholder</p>",
        "id": 255124894,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778873
    },
    {
        "content": "<p>idk, the enum sounds like a good idea, but it's not perfect...that said I can't think of anything better</p>",
        "id": 255124906,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778882
    },
    {
        "content": "<p>name bikeshedding can happen later</p>",
        "id": 255125044,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632778939
    },
    {
        "content": "<p>I'm curious if it's possible to implement rotate, for example, with just the macro and completely hide the trait</p>",
        "id": 255125057,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778946
    },
    {
        "content": "<p>I think probably not, but I haven't tried</p>",
        "id": 255125080,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632778964
    },
    {
        "content": "<p>rotate via macro sounds like a total mess, generics (in some shape) are needed for a reason</p>",
        "id": 255125163,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632779009
    },
    {
        "content": "<p>hey Caleb</p>",
        "id": 255125524,
        "sender_full_name": "Jubilee",
        "timestamp": 1632779186
    },
    {
        "content": "<p>wanna check out portable-simd#100andnice</p>",
        "id": 255125558,
        "sender_full_name": "Jubilee",
        "timestamp": 1632779208
    },
    {
        "content": "<p>Oh is that all it was?</p>",
        "id": 255125678,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632779279
    },
    {
        "content": "<p>yep.</p>",
        "id": 255125725,
        "sender_full_name": "Jubilee",
        "timestamp": 1632779289
    },
    {
        "content": "<p>Well if it passes CI (native features) lgtm</p>",
        "id": 255125745,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632779302
    },
    {
        "content": "<p>mhm.</p>",
        "id": 255125855,
        "sender_full_name": "Jubilee",
        "timestamp": 1632779363
    },
    {
        "content": "<p>approved <a href=\"https://github.com/rust-lang/portable-simd/pull/165\">https://github.com/rust-lang/portable-simd/pull/165</a></p>",
        "id": 255126708,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632779813
    },
    {
        "content": "<p>Okay, I need to properly review Swizzle and then I will make a decision.</p>",
        "id": 255127140,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780005
    },
    {
        "content": "<p>and I don't think we should merge the <code>unchecked</code> variants or anything, even, without good docs.</p>",
        "id": 255127221,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780027
    },
    {
        "content": "<p>Or at least adequate.</p>",
        "id": 255127260,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780043
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 255127373,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632780110
    },
    {
        "content": "<p>It should be at least<br>\nmediocre.</p>",
        "id": 255127612,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780233
    },
    {
        "content": "<p>anyways~!</p>",
        "id": 255128420,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780618
    },
    {
        "content": "<p>found some docs nits</p>",
        "id": 255128909,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632780890
    },
    {
        "content": "<p>I am trying to add some annotations to my PR open against rust-lang/rust:master to make some stuff. <span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> can you review the comments I am drafting before I actually post?</p>",
        "id": 255129063,
        "sender_full_name": "Jubilee",
        "timestamp": 1632780963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"229517\">Jacob Lifshay</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/meeting.202021-09-27/near/255128909\">said</a>:</p>\n<blockquote>\n<p>found some docs nits</p>\n</blockquote>\n<p>In a PR or in general? Can you open an issue if it's the latter?</p>",
        "id": 255129128,
        "sender_full_name": "Jubilee",
        "timestamp": 1632781007
    },
    {
        "content": "<p>oh, i commented on the pr about the nits</p>",
        "id": 255129183,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632781045
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/portable-simd/pull/167#discussion_r717082215\">https://github.com/rust-lang/portable-simd/pull/167#discussion_r717082215</a></p>",
        "id": 255129276,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632781084
    },
    {
        "content": "<p>Then it looks like that is most of what we have to sync on atm. Go well and see you in two weeks. <span aria-label=\"heart box\" class=\"emoji emoji-1f49f\" role=\"img\" title=\"heart box\">:heart_box:</span></p>",
        "id": 255129283,
        "sender_full_name": "Jubilee",
        "timestamp": 1632781087
    },
    {
        "content": "<p>:)</p>",
        "id": 255129304,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632781101
    }
]