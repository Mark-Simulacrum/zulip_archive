[
    {
        "content": "<p>Hey. I am trying to port from packed_simd to std::simd and I am hitting the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(portable_simd)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">simd</span>::<span class=\"n\">mask8x64</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">chunk</span>: <span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">mask8x64</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">todo!</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which is not compiling  (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=c6ac94bcc09ede5df1374ac71f8c9229\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=c6ac94bcc09ede5df1374ac71f8c9229</a>). Is this something to be expected?</p>",
        "id": 262264089,
        "sender_full_name": "Jorge Leitao",
        "timestamp": 1637533442
    },
    {
        "content": "<p>Oh dear.<br>\nYes, we didn't expand our support (and testing) to support 64 lanes again.</p>",
        "id": 262264214,
        "sender_full_name": "Jubilee",
        "timestamp": 1637533573
    },
    {
        "content": "<p>But we apparently never culled the aliases.</p>",
        "id": 262264221,
        "sender_full_name": "Jubilee",
        "timestamp": 1637533583
    },
    {
        "content": "<p>We should actually try 64 lanes again, too</p>",
        "id": 262264252,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637533657
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 262264255,
        "sender_full_name": "Jubilee",
        "timestamp": 1637533663
    },
    {
        "content": "<p>thanks for the quick reply. I did not understand it, though: is it a bug, should I create a feature request on github, it is by design at this point in time, or? xD</p>",
        "id": 262264526,
        "sender_full_name": "Jorge Leitao",
        "timestamp": 1637533923
    },
    {
        "content": "<p>Well, it's not a bug in the sense that we purposefully don't support 64 lane vectors right now. But we do want to support them</p>",
        "id": 262264551,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637533990
    },
    {
        "content": "<p>iirc we encountered llvm bugs with 64 lanes, so we intentionally removed support for 64-lane vectors, we're planning on re-adding them later</p>",
        "id": 262264594,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637534043
    },
    {
        "content": "<p>same thing with 128-bit elements</p>",
        "id": 262264615,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637534075
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/portable-simd/pull/197\">https://github.com/rust-lang/portable-simd/pull/197</a> Let's see what the test suite says.</p>",
        "id": 262264730,
        "sender_full_name": "Jubilee",
        "timestamp": 1637534277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"399416\">Jorge Leitao</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/mask8x64.20not.20compiling.3F/near/262264526\">said</a>:</p>\n<blockquote>\n<p>thanks for the quick reply. I did not understand it, though: is it a bug, should I create a feature request on github, it is by design at this point in time, or? xD</p>\n</blockquote>\n<p>Basically, \"SupportedLaneCount\" literally is a bound on the type which blocks you from using it with a lane count which we can't compile.</p>",
        "id": 262264780,
        "sender_full_name": "Jubilee",
        "timestamp": 1637534314
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// A SIMD vector of `LANES` elements of type `T`.</span>\n<span class=\"cp\">#[repr(simd)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Simd</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LANES</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">([</span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">LANES</span><span class=\"p\">])</span><span class=\"w\"></span>\n<span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">T</span>: <span class=\"nc\">SimdElement</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">LaneCount</span><span class=\"o\">&lt;</span><span class=\"n\">LANES</span><span class=\"o\">&gt;</span>: <span class=\"nc\">SupportedLaneCount</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 262264856,
        "sender_full_name": "Jubilee",
        "timestamp": 1637534425
    },
    {
        "content": "<p>LaneCount is a struct that does nothing and is never intended to be instantiated, except play host to that trait bound.<br>\nIf this seems like a weird hack, it's because it is.</p>",
        "id": 262264883,
        "sender_full_name": "Jubilee",
        "timestamp": 1637534509
    },
    {
        "content": "<p>Was it Arm that broke on 64 lanes, or was that also PowerPC?</p>",
        "id": 262265188,
        "sender_full_name": "Jubilee",
        "timestamp": 1637534973
    },
    {
        "content": "<p>icr, but powerpc broke on i128</p>",
        "id": 262265197,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637534998
    },
    {
        "content": "<p>ppc64le</p>",
        "id": 262265244,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637535023
    },
    {
        "content": "<p>Looks like all tests passing. And the issue was on aarch64.<br>\nCan people here with recent Appletops try the test suite from that branch?</p>",
        "id": 262371446,
        "sender_full_name": "Jubilee",
        "timestamp": 1637611885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209168\">@Thom Chiovoloni</span> you have one right?</p>",
        "id": 262371461,
        "sender_full_name": "Jubilee",
        "timestamp": 1637611892
    },
    {
        "content": "<p>yeah</p>",
        "id": 262371511,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637611918
    },
    {
        "content": "<p>if you ping me in like, 5 hours, i can try on it, i'm not near that machine atm though</p>",
        "id": 262371659,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637611976
    },
    {
        "content": "<p>cargo test from <a href=\"https://github.com/rust-lang/portable-simd/pull/197\">https://github.com/rust-lang/portable-simd/pull/197</a> passes on my m1, if thats what the question was</p>",
        "id": 262403201,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637632028
    },
    {
        "content": "<p>yep! Thank you!</p>",
        "id": 262403219,
        "sender_full_name": "Jubilee",
        "timestamp": 1637632055
    },
    {
        "content": "<p>out of curiosity, if I want to depend on that branch/PR through cargo, I should just point to the github? I.e. the nightly <code>std::simd</code> is just being compiled from the latest main from the github repo?</p>",
        "id": 262476879,
        "sender_full_name": "Jorge Leitao",
        "timestamp": 1637683916
    },
    {
        "content": "<p>iirc nightly <code>std::simd</code> is not just the latest portable-simd master, we have to submit a PR to rust that syncs the latest changes.</p>",
        "id": 262491971,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637690534
    },
    {
        "content": "<p>Yes, if you want to use us through cargo instead of std, you can do that. We don't publish a crate to discourage that sort of thing a bit, as our implementation hasn't actually passed e.g. rust-lang/rust CI when it's on our main branch.</p>",
        "id": 262542915,
        "sender_full_name": "Jubilee",
        "timestamp": 1637724639
    },
    {
        "content": "<p>Sounds good. I think it is a good call about not publishing in cargo; this is mostly useful to be able to test a PR and give you some feedback.</p>",
        "id": 262552566,
        "sender_full_name": "Jorge Leitao",
        "timestamp": 1637737618
    }
]