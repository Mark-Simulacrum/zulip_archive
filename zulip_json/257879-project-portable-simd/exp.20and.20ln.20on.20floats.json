[
    {
        "content": "<p>Hey, I'm trying to move my project from using packed_simd to portable_simd and it was mostly painless, but I need to call exp() and ln() on a <code>f32x4</code>, which doesn't seem possible. Is it just not implemented yet? I could find something that looked sorta right under <code>core_arch::simd_llvm</code> but I have no idea how to use it lol</p>\n<p>Apologies if this isn't the right place to ask questions</p>",
        "id": 266757475,
        "sender_full_name": "Fredemus",
        "timestamp": 1641258100
    },
    {
        "content": "<p>the plan is to eventually have those, but the implementation isn't finished yet, see <a href=\"https://github.com/rust-lang/portable-simd/issues/109\">https://github.com/rust-lang/portable-simd/issues/109</a></p>",
        "id": 266757625,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1641258202
    },
    {
        "content": "<p>Oh okay thanks. Should I just stick to packed_simd for now then?</p>",
        "id": 266758222,
        "sender_full_name": "Fredemus",
        "timestamp": 1641258707
    },
    {
        "content": "<p>probably... sorry.</p>",
        "id": 266758445,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1641258878
    },
    {
        "content": "<p>No worries!</p>",
        "id": 266758655,
        "sender_full_name": "Fredemus",
        "timestamp": 1641259082
    },
    {
        "content": "<p>tho another way you could do it if you don't mind a scalar implementation is <code>f32x4::from_array(x.to_array().map(f32::exp))</code></p>",
        "id": 266758697,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1641259086
    },
    {
        "content": "<p>That'll be very nice as a placeholder, thank you!</p>",
        "id": 266758823,
        "sender_full_name": "Fredemus",
        "timestamp": 1641259212
    },
    {
        "content": "<p>Hi all.<br>\nPerhaps I am doing something wrong, but I cannot cast Mask&lt;i32, 4&gt; into Mask&lt;isize, 4&gt;</p>",
        "id": 266853537,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325392
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>use core_simd::*;\n\n#[target_feature(enable = &quot;avx&quot;)]\n#[target_feature(enable = &quot;avx2&quot;)]\n#[inline(never)]\nfn test(input: &amp;[i32], ginput: &amp;[usize], grp_sum: &amp;mut [f64], cnt: &amp;mut [i64]) {\n    const S: usize = 4;\n    let null = Simd::&lt;i32, S&gt;::splat(999);\n    let zero = Simd::&lt;f64, S&gt;::splat(0.0);\n    //let enable: Mask&lt;isize, _&gt; = Mask::from_array([true, true, true, true]);\n\n    let i = 0;\n\n    let gix_chunk = Simd::&lt;usize, S&gt;::from_slice(&amp;ginput[i..i + S]);\n    let val_chunk = Simd::&lt;i32, S&gt;::from_slice(&amp;input[i..i + S]);\n\n    let nnulllx = Mask::&lt;isize, S&gt;::from(val_chunk.lanes_ne(null));   // &lt;- this line causes ICE on latest nightly\n...\n}\n</code></pre></div>",
        "id": 266853569,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325414
    },
    {
        "content": "<p>Compiler just crashes. Is there any walk-around ?</p>",
        "id": 266853724,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325487
    },
    {
        "content": "<p>It definitely shouldn't crash!</p>",
        "id": 266853752,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1641325506
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, compiler/rustc_codegen_llvm/src/intrinsic.rs:1724:60\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.59.0-nightly (399ba6bb3 2022-01-03) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z share-generics=y -C embed-bitcode=no -C debuginfo=2 -C link-args=-fuse-ld=lld --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n</code></pre></div>",
        "id": 266853773,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325516
    },
    {
        "content": "<p>I believe it's because it's an isize, I have a PR open that should fix it</p>",
        "id": 266853828,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1641325551
    },
    {
        "content": "<p>Which one? I'd like to subscribe to it</p>",
        "id": 266853945,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325613
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/92425\">#92425</a></p>",
        "id": 266854040,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1641325676
    },
    {
        "content": "<p>Ok. Thanks</p>",
        "id": 266854164,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1641325736
    },
    {
        "content": "<p><strong>amazing</strong>, how isn't that monomorphized?</p>",
        "id": 266874564,
        "sender_full_name": "Jubilee",
        "timestamp": 1641336178
    },
    {
        "content": "<p>Oh it crashes <strong>in mono</strong> got it.</p>",
        "id": 266874591,
        "sender_full_name": "Jubilee",
        "timestamp": 1641336201
    }
]