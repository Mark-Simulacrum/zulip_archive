[
    {
        "content": "<p>So one thing we could use to help motivate a solution to <a href=\"https://github.com/rust-lang/rust/issues/64609\">https://github.com/rust-lang/rust/issues/64609</a> is if we could find examples of bad or divergent SIMD performance for Rust on a given architecture vs C (clang) on a given architecture. I had a conversation or two with people who have somewhat more familiarity with the compiler-level SIMD stuff (but not necessarily more familiarity with SIMD overall) and they expect LLVM to see through and properly handle the \"pass through memory\" trick if things are inlined.</p>\n<p>This obviously is not at all the case where we just completely scalarize things, so we're ignoring <a href=\"https://github.com/rust-lang/stdsimd/issues/76\">stdsimd#76</a> for the purposes of this example.<br>\nIf we can cough up examples we can compare against, it would help us bench, profile, and test possible solutions.<br>\nI'm also not actually limiting this to <strong>just</strong> C, clang just happens to be there and is also LLVM driven. Anything where our SIMD takes a beating vs. ${LANG} is a good example.</p>",
        "id": 242118766,
        "sender_full_name": "Jubilee",
        "timestamp": 1623267642
    },
    {
        "content": "<p>So not necessarily related to stdsimd but I've written relatively complex simd with stdarch and it definitely inlines fine</p>",
        "id": 242118987,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1623267760
    },
    {
        "content": "<p>Yeah, it's fine if it's not related to us directly, since I'm thinking about concerns re: compiler-level issues.</p>",
        "id": 242119109,
        "sender_full_name": "Jubilee",
        "timestamp": 1623267841
    },
    {
        "content": "<p>Once we get to nightly I'll port my fourier crate to get a sense of actual performance in an actual application</p>",
        "id": 242119584,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1623268055
    },
    {
        "content": "<p>Not exactly a comparison vs C but it's something that's easy to benchmark</p>",
        "id": 242119675,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1623268085
    },
    {
        "content": "<p>opened an issue because tickets are possibly more useful here, especially if we can catch drive by reports. ^^;; <a href=\"https://github.com/rust-lang/stdsimd/issues/135\">https://github.com/rust-lang/stdsimd/issues/135</a></p>",
        "id": 242122746,
        "sender_full_name": "Jubilee",
        "timestamp": 1623269373
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Examples.20of.20bad.20Rust.20SIMD.20perf.3F/near/242118766\">said</a>:</p>\n<blockquote>\n<p>So one thing we could use to help motivate a solution to <a href=\"https://github.com/rust-lang/rust/issues/64609\">https://github.com/rust-lang/rust/issues/64609</a> is if we could find examples of bad or divergent SIMD performance for Rust on a given architecture vs C (clang) on a given architecture. I had a conversation or two with people who have somewhat more familiarity with the compiler-level SIMD stuff (but not necessarily more familiarity with SIMD overall) and they expect LLVM to see through and properly handle the \"pass through memory\" trick if things are inlined.</p>\n<p>This obviously is not at all the case where we just completely scalarize things, so we're ignoring <a href=\"https://github.com/rust-lang/stdsimd/issues/76\">stdsimd#76</a> for the purposes of this example.<br>\nIf we can cough up examples we can compare against, it would help us bench, profile, and test possible solutions.<br>\nI'm also not actually limiting this to <strong>just</strong> C, clang just happens to be there and is also LLVM driven. Anything where our SIMD takes a beating vs. ${LANG} is a good example.</p>\n</blockquote>\n<p>Oh man, a real opportunity to ship my <em>real</em> code!</p>",
        "id": 242148703,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1623286278
    },
    {
        "content": "<p>JK, but I was planning on something similar to <a href=\"https://parallel-rust-cpp.github.io/v3.html\">this</a> Rust high performance walkthrough:<br>\nWork through a code in several stages by applying a single idea in each one, and show the corresponding perf/assembly against benchmarks/tooling to see if you're getting the expected results.</p>",
        "id": 242148777,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1623286382
    },
    {
        "content": "<p>But yes, if I get horribly performing SIMD code I'll gladly put it up to the exhibit museum</p>",
        "id": 242148803,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1623286427
    }
]