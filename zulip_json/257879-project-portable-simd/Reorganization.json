[
    {
        "content": "<p>Right now I find it somewhat difficult to find where things are, and making broad changes sometimes requires modifying tons of files.  I'm curious how everyone feels about siloing functionality a bit:</p>\n<ul>\n<li>one module defines vectors</li>\n<li>one module implements conversions (this can be further broken down--array conversions, std::arch conversions, casts, etc)</li>\n<li>one module implements std::ops, one for float ops, one for int ops</li>\n<li>etc<br>\nThe main difference, I think, would be that <code>macros.rs</code> gets split up a bit, and the various <code>vector_*.rs</code> files get rearranged</li>\n</ul>",
        "id": 225262667,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612502345
    },
    {
        "content": "<p>I guess my intention is that the file paths would indicate functionality a bit more. <code>type_definitions.rs</code>, <code>convert/arch.rs</code>, <code>convert/array.rs</code>, <code>math/float.rs</code>, etc</p>",
        "id": 225262769,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612502484
    },
    {
        "content": "<p>yeah, this is why I pushed most of my mods into <code>permute.rs</code></p>",
        "id": 225263363,
        "sender_full_name": "Jubilee",
        "timestamp": 1612503237
    },
    {
        "content": "<p>Yeah, like that</p>",
        "id": 225263421,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612503297
    },
    {
        "content": "<p>sounds very good</p>",
        "id": 225303248,
        "sender_full_name": "Lokathor",
        "timestamp": 1612534646
    },
    {
        "content": "<p>Yeah, I'm in favor of it obviously, lol.</p>\n<p>I have a lot less need for a <code>vector_f32.rs</code> and a <code>vector_f64.rs</code> with a <code>macros.rs</code> than a <code>vector_floats.rs</code> with <code>macros.rs</code> divided by actual usage.</p>",
        "id": 225343926,
        "sender_full_name": "Jubilee",
        "timestamp": 1612552837
    },
    {
        "content": "<p>only complaint: if I want to refactor the float code specifically, I can't just aim myself at core_simd/floats<br>\nhowever, I don't think our API will \"work\" like that necessarily, and it is more likely to work on the organizational principle you describe. If we need to refactor it down the line, we can still do that anyways, though.</p>",
        "id": 226595444,
        "sender_full_name": "Jubilee",
        "timestamp": 1613519049
    },
    {
        "content": "<p>pushed a bunch of code around. <a href=\"https://github.com/rust-lang/stdsimd/pull/77\">https://github.com/rust-lang/stdsimd/pull/77</a></p>",
        "id": 226774937,
        "sender_full_name": "Jubilee",
        "timestamp": 1613634527
    }
]