[
    {
        "content": "<p>The const-generics project made a lot of progress once it started splitting pieces of the project into multiple smaller feature gates. I know it's a little early, but anything that allows us to compartmentalize concerns would be useful, because most of the game right now should fall to a fairly simple divide-and-conquer, but that means prioritizing.</p>\n<p>I am imagining our feature gates would look like, for instance,<br>\n<del><code>core_simd</code></del> <code>core_simd_arithmetic</code> (per <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span>'s rec, see conversation below)<br>\n<code>core_simd_masks</code> &lt;-- for hopefully obvious to everyone by now reasons<br>\n<code>core_simd_shuffle</code> &lt;-- I was poking at this enough times last night until I came to the conclusion that it seems like it will be a trickier part of the API to get implemented, it might be easier than masks tho'.</p>",
        "id": 225063804,
        "sender_full_name": "Jubilee",
        "timestamp": 1612378759
    },
    {
        "content": "<p>if my idea for bounds encapsulation works out, <code>core_simd_masks</code> could be further split into <code>core_simd_opaque_masks</code> and <code>core_simd_bitmasks</code>, where conversions from/to full-bit-width masks are included in opaque_masks</p>",
        "id": 225065454,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1612379434
    },
    {
        "content": "<p><code>simd_trig</code> could be another gate since that is another thing with its own unique concerns, e.g. we've discussed how some architectures provide certain instructions (or don't), or it might just be part of the mask feature gate.</p>",
        "id": 225065895,
        "sender_full_name": "Jubilee",
        "timestamp": 1612379640
    },
    {
        "content": "<p>i don't see a big value in core_simd on its own</p>",
        "id": 225067227,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380065
    },
    {
        "content": "<p>unless turning that on means turning all core_simd_foo on</p>",
        "id": 225067385,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380135
    },
    {
        "content": "<p>I am assuming that would be actually our <code>min_core_simd</code> actually.</p>",
        "id": 225067411,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380151
    },
    {
        "content": "<p>which would enable like... basic math, linear algebra, etc.</p>",
        "id": 225067446,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380169
    },
    {
        "content": "<p>yeah but then someone says \"you stabilized core_simd, where's my trig?\"</p>",
        "id": 225067489,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380186
    },
    {
        "content": "<p>we'll say \"lol\"</p>",
        "id": 225067504,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380193
    },
    {
        "content": "<p>basically these things are always named tersely and it's crap and we need to stop the terse names</p>",
        "id": 225067545,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380218
    },
    {
        "content": "<p>that's fair. :^)</p>",
        "id": 225067559,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380225
    },
    {
        "content": "<p>core_simd_arithmetic?</p>",
        "id": 225067576,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380231
    },
    {
        "content": "<p>yeah that's the minimum</p>",
        "id": 225067636,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380245
    },
    {
        "content": "<p>I'm cool with that then.</p>",
        "id": 225067666,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380256
    },
    {
        "content": "<p>then add masks or you can't pseudo-branch</p>",
        "id": 225067687,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380267
    },
    {
        "content": "<p>then we can add all sorts of math</p>",
        "id": 225067711,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380277
    },
    {
        "content": "<p>We may be able to get away with branching math without actually stabilizing masks, since they're used internally</p>",
        "id": 225067787,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612380314
    },
    {
        "content": "<p>possible, but if we need it users also need it so we might as well do it</p>",
        "id": 225067942,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380378
    },
    {
        "content": "<p>but just + - * / and bits and and sqrt if it's a floating... that's fairly simple and immensely useful.</p>",
        "id": 225068155,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380482
    },
    {
        "content": "<p>Yeah, I would like to be able to stabilize these relatively \"fast\" one after the other, so I don't anticipate a <strong>lot</strong> of feature gates, because at some point we're splitting things up pointlessly, but I notice my brain trying to slide off the goal when it's like \"do this ENTIRE LIBRARY RIGHT, IN ONE PIECE,THE FIRST TIME, PERFECTLY!\"</p>",
        "id": 225068193,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380490
    },
    {
        "content": "<p>you can like, accelerate your sound mixer or whatever</p>",
        "id": 225068220,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380501
    },
    {
        "content": "<p>decode one of the possible png scanline filters faster :P</p>",
        "id": 225068378,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380574
    },
    {
        "content": "<p>pffthaha</p>",
        "id": 225068429,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380591
    },
    {
        "content": "<p>GOTTA GET IT RETRO</p>",
        "id": 225068522,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380609
    },
    {
        "content": "<p>of the 5 types, one is a noop, one is simd friendly, and 3 are harshly linear</p>",
        "id": 225068574,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380635
    },
    {
        "content": "<p>gonna use highly advanced 21st century computation to emulate the flaws of mid-20th century communications technology.</p>",
        "id": 225068580,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380638
    },
    {
        "content": "<p>yeah I've never been told the point of the scanline filters</p>",
        "id": 225068626,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380668
    },
    {
        "content": "<p>the point is GOTTA GET IT RETRO</p>",
        "id": 225068646,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380679
    },
    {
        "content": "<p>retro</p>",
        "id": 225068656,
        "sender_full_name": "Lokathor",
        "timestamp": 1612380686
    },
    {
        "content": "<p>aren't you nostalgic for the time when CRTs were all the rage :^)</p>",
        "id": 225068818,
        "sender_full_name": "Jubilee",
        "timestamp": 1612380746
    },
    {
        "content": "<p>I'll take an lcd. even the gameboy color had lcd after all</p>",
        "id": 225069561,
        "sender_full_name": "Lokathor",
        "timestamp": 1612381014
    },
    {
        "content": "<p>that's kind of my reaction yeah, but for the people who have the fond memories or even just morbid curiosity about the technology of Antiquity and the Before Times, I'm happy they have the options that make them happy. :^)</p>",
        "id": 225069650,
        "sender_full_name": "Jubilee",
        "timestamp": 1612381063
    },
    {
        "content": "<p>alright: simd is cancelled</p>",
        "id": 225069655,
        "sender_full_name": "Lokathor",
        "timestamp": 1612381064
    },
    {
        "content": "<p>now they can know what it was like!</p>",
        "id": 225069749,
        "sender_full_name": "Lokathor",
        "timestamp": 1612381099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Using.20multiple.20feature.20gates/near/225069655\">said</a>:</p>\n<blockquote>\n<p>alright: simd is cancelled</p>\n</blockquote>\n<p>yay, we're back to Cray-1 vectors!</p>",
        "id": 225077753,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1612384731
    },
    {
        "content": "<p>Seriously, that's one of the main inspirations for RISC-V V and SimpleV...</p>",
        "id": 225077944,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1612384804
    },
    {
        "content": "<p>Hey, I was just looking into those SIMD trig functions - those actually interest me.</p>",
        "id": 225100773,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612396342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246783\">@Miguel Raz Guzmán Macedo</span> You are quite welcome to take a look at implementing the trig functions listed here! <a href=\"https://github.com/rust-lang/stdsimd/issues/6\">https://github.com/rust-lang/stdsimd/issues/6</a></p>",
        "id": 225121422,
        "sender_full_name": "Jubilee",
        "timestamp": 1612417321
    }
]