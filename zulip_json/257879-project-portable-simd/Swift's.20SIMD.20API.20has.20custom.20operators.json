[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Swift\"><pre><span></span><code><span class=\"kd\">public</span> <span class=\"kd\">extension</span> <span class=\"nc\">SIMD</span> <span class=\"k\">where</span> <span class=\"n\">Scalar</span> <span class=\"p\">:</span> <span class=\"nb\">Comparable</span> <span class=\"p\">{</span>\n  <span class=\"c1\">/// Pointwise ordered comparisons</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&lt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;=</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">.</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"kc\">Self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"n\">Scalar</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">SIMDMask</span><span class=\"p\">&lt;</span><span class=\"n\">MaskStorage</span><span class=\"p\">&gt;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>ngl kinda jealous</p>",
        "id": 264547873,
        "sender_full_name": "Jubilee",
        "timestamp": 1639208029
    },
    {
        "content": "<p>\"but jubilee, if you allowed custom operators in the language, someone <em>might use it wrong</em>!!!!!!!!!!!\"</p>",
        "id": 264568722,
        "sender_full_name": "Lokathor",
        "timestamp": 1639237283
    }
]