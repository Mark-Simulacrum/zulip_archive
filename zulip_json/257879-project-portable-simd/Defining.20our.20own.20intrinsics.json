[
    {
        "content": "<p>I have reached the conclusion that where it is warranted, we should consider implementing things like <code>dyn_swizzle</code> by describing an intrinsic and then describing a custom lowering for it.</p>",
        "id": 270907063,
        "sender_full_name": "Jubilee",
        "timestamp": 1644175731
    },
    {
        "content": "<p>The main issue with this is that we don't have access to the target features available during instruction lowering</p>",
        "id": 270907136,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644175832
    },
    {
        "content": "<p>I think it would make more sense to move the wasm dynamic shuffle lowering logic to the relevant backends in LLVM</p>",
        "id": 270907184,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644175901
    },
    {
        "content": "<p>(make them available outside of just wasm)</p>",
        "id": 270907191,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644175914
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"312331\">Caleb Zulawski</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Defining.20our.20own.20intrinsics/near/270907136\">said</a>:</p>\n<blockquote>\n<p>The main issue with this is that we don't have access to the target features available during instruction lowering</p>\n</blockquote>\n<p>I am pretty sure we do if the feature is defined on the target-level basis like with <code>thumbv7neon</code>.</p>",
        "id": 270907328,
        "sender_full_name": "Jubilee",
        "timestamp": 1644176086
    },
    {
        "content": "<p>( I cheerfully concede the rest, however. )</p>",
        "id": 270907338,
        "sender_full_name": "Jubilee",
        "timestamp": 1644176104
    },
    {
        "content": "<p>My problem is, that I would cheerfully back such a proposal, except:<br>\nI am great at Rust!<br>\nI am good at Assembly.<br>\nI am even decent at LLVMIR at this point.<br>\nAnd I can manage C.<br>\n...nontrivial C++ still has me go \"what the devil is that?\"<br>\nSo I try to avoid proposing things I know I would <strong>have</strong> to stick someone else with implementing, unfortunately. ^^;</p>",
        "id": 270907546,
        "sender_full_name": "Jubilee",
        "timestamp": 1644176380
    },
    {
        "content": "<p>the annoying part is LLVM isn't even usual C++, they use tons of custom code in unusual ways, e.g. they totally replaced the run-time type information that C++ usually provides</p>",
        "id": 270908135,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1644177087
    },
    {
        "content": "<p>For some targets that would work, but x86-64 is presumably the most commonly used target and doesn't even have pshufb available with the base feature level and would need to use a scalar shuffle, basically defeating the purpose in the first place</p>",
        "id": 270908275,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644177234
    },
    {
        "content": "<p>Yeah I'm quite familiar with C++ but have struggled to make changes in LLVM</p>",
        "id": 270908319,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644177254
    },
    {
        "content": "<p>Anyway, my hypothesis is that by getting ahead of the game and defining it at the intrinsic level on our side, we can allow e.g. Cranelift to support it, since they almost certainly already do, and ideally just swap out the logic when LLVM improves.</p>",
        "id": 270908841,
        "sender_full_name": "Jubilee",
        "timestamp": 1644177773
    },
    {
        "content": "<p>As far as x86:<br>\nI think we should go back to pushing for an x86-64-v3 compiler target.</p>",
        "id": 270909513,
        "sender_full_name": "Jubilee",
        "timestamp": 1644178627
    },
    {
        "content": "<p>That only helps people that can use that target, of course</p>",
        "id": 270909579,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1644178693
    },
    {
        "content": "<p>Yup.</p>",
        "id": 270909610,
        "sender_full_name": "Jubilee",
        "timestamp": 1644178774
    },
    {
        "content": "<p>I have no answer to this other than:<br>\nThe world is fundamentally unjust.<br>\nWoe to the conquered.</p>",
        "id": 270909869,
        "sender_full_name": "Jubilee",
        "timestamp": 1644179155
    }
]