[
    {
        "content": "<p>Hi all.<br>\nI am trying to cast Simd&lt;i32, 4&gt; into Simd&lt;f64, 4&gt; using core_simd crate.<br>\nCurrently I can't see a clear path to do that.<br>\nCould somebody help?</p>\n<p>I am under latest nighly with PR <a href=\"https://github.com/rust-lang/rust/issues/92425\">#92425</a> merged.</p>",
        "id": 269394678,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1643196170
    },
    {
        "content": "<p>A method that actually calls the internal implementation needs to be written/PR'd/etc</p>",
        "id": 269441792,
        "sender_full_name": "Jubilee",
        "timestamp": 1643215284
    },
    {
        "content": "<p>So it's not implemented yet?</p>",
        "id": 269465442,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1643224373
    },
    {
        "content": "<p>Can probably do <code>Simd::from_array(foo.to_array().map(|x| x as f64))</code> for now.</p>",
        "id": 269465749,
        "sender_full_name": "scottmcm",
        "timestamp": 1643224494
    },
    {
        "content": "<p>thanks. Works fine :)</p>",
        "id": 269470457,
        "sender_full_name": "Denis Golovan",
        "timestamp": 1643226383
    },
    {
        "content": "<p>Hmm, interestingly it looks like it does emit a <code>sitofp &lt;4 x i32&gt; %6 to &lt;4 x double&gt;</code> in -O3, but the array stuff compiles weirdly: &lt;<a href=\"https://rust.godbolt.org/z/q6nYohs4e\">https://rust.godbolt.org/z/q6nYohs4e</a>&gt;</p>",
        "id": 269488501,
        "sender_full_name": "scottmcm",
        "timestamp": 1643234167
    },
    {
        "content": "<p>Apparently it compiles to the same machine code during machine lowering for Zen:<br>\n<a href=\"https://rust.godbolt.org/z/crWYKe5z1\">https://rust.godbolt.org/z/crWYKe5z1</a><br>\n( It does have a better lowering for earlier x64 targets. )</p>",
        "id": 269502132,
        "sender_full_name": "Jubilee",
        "timestamp": 1643241801
    },
    {
        "content": "<p>Drafted <code>Simd::cast</code>.</p>",
        "id": 269511671,
        "sender_full_name": "Jubilee",
        "timestamp": 1643245168
    },
    {
        "content": "<p>Going to force myself to learn how this Titan key works I guess.</p>",
        "id": 269511890,
        "sender_full_name": "Jubilee",
        "timestamp": 1643245280
    },
    {
        "content": "<p>Well, that was incredibly tedious.</p>",
        "id": 269518302,
        "sender_full_name": "Jubilee",
        "timestamp": 1643250826
    },
    {
        "content": "<p>And tests and documentation and aaa.</p>",
        "id": 269527578,
        "sender_full_name": "Jubilee",
        "timestamp": 1643261158
    },
    {
        "content": "<p>I had the same need but for a different type so I wrote a generic converter that also autovectorizes (for i32-&gt;f64 at least). <a href=\"https://rust.godbolt.org/z/vn937Ysx6\">https://rust.godbolt.org/z/vn937Ysx6</a></p>",
        "id": 269610872,
        "sender_full_name": "Daniel Goertzen",
        "timestamp": 1643305938
    },
    {
        "content": "<p>Okay, slid it under the sync PR and hopefully that is OK by simulacrum.</p>",
        "id": 269629520,
        "sender_full_name": "Jubilee",
        "timestamp": 1643313667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474881\">Daniel Goertzen</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Casts.20i32-.3Ef64/near/269610872\">said</a>:</p>\n<blockquote>\n<p>I had the same need but for a different type so I wrote a generic converter that also autovectorizes (for i32-&gt;f64 at least). <a href=\"https://rust.godbolt.org/z/vn937Ysx6\">https://rust.godbolt.org/z/vn937Ysx6</a></p>\n</blockquote>\n<p>Yeah, the main advantage is that the direct conversion for the vector, in this case, is a much tighter and more direct lowering, so it both doesn't have to spend a ton of time optimizing, and it doesn't ever miss the optimization, e.g. in the default SSE2 target:</p>\n<div class=\"codehilite\" data-code-language=\"NASM\"><pre><span></span><code><span class=\"nl\">example:demo:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"nb\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"nb\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">qword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">qword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movq</span><span class=\"w\">    </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">shr</span><span class=\"w\">     </span><span class=\"nb\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movq</span><span class=\"w\">    </span><span class=\"nv\">xmm2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">punpckldq</span><span class=\"w\">       </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm2</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">example:intrin_demo:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"nb\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movdqa</span><span class=\"w\">  </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">pshufd</span><span class=\"w\">  </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">238</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">example:my_demo:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"nb\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movss</span><span class=\"w\">   </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">dword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movss</span><span class=\"w\">   </span><span class=\"nv\">xmm2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">dword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rsi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">shufps</span><span class=\"w\">  </span><span class=\"nv\">xmm2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">228</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">shufps</span><span class=\"w\">  </span><span class=\"nv\">xmm2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">226</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">unpcklps</span><span class=\"w\">        </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">cvtdq2pd</span><span class=\"w\">        </span><span class=\"nv\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">xmm2</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">movaps</span><span class=\"w\">  </span><span class=\"nv\">xmmword</span><span class=\"w\"> </span><span class=\"nv\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">rdi</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nv\">xmm1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 269631445,
        "sender_full_name": "Jubilee",
        "timestamp": 1643314549
    }
]