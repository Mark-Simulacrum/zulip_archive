[
    {
        "content": "<p>Hi all.</p>\n<p>I have considerable experience with SIMD from my days writing the PS3 compiler at SCEE and designing instruction sets in my youth. I would very much like to get the portable SIMD support  over the line as it seems to be a low priority.</p>\n<p>I am teaching advanced Rust after a few decades of C++ and need to follow the trends.<br>\nGet in touch if you need any help.</p>",
        "id": 238905674,
        "sender_full_name": "Andy Thomson",
        "timestamp": 1621092608
    },
    {
        "content": "<p>Hi Andy, have you taken a look at the stdsimd repository yet?  It's pretty mature at this point but still plenty of open issues: <a href=\"https://github.com/rust-lang/stdsimd\">https://github.com/rust-lang/stdsimd</a></p>",
        "id": 238906029,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1621092944
    },
    {
        "content": "<p>Right now we are aiming for our first milestone of getting it into the nightly compiler.</p>",
        "id": 238906105,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1621093006
    },
    {
        "content": "<p>Hi Caleb,</p>\n<p>I appreciate you getting back to me. I'm writing a talk on Rust SIMD for Monday and realised that I was out of date.</p>\n<p>I'm looking at the RFCs and stdsimd right now. I used packed_simd a couple of years ago in the arrow crate and my own private bioinformatics work. I'll see if there are any issues that I can take up. Always a good way to learn a project.</p>\n<p>Thanks, Andy.</p>",
        "id": 238906328,
        "sender_full_name": "Andy Thomson",
        "timestamp": 1621093275
    },
    {
        "content": "<p>Haha, don't know if that's a good or a bad thing. Hopefully with const generics one does not need all the macros anymore.</p>",
        "id": 253869047,
        "sender_full_name": "Gonzalo Brito (gnzlbg)",
        "timestamp": 1631972057
    },
    {
        "content": "<p>Well, you've come back at the right time, I wrapped up a change a few weeks ago that removed a decent amount of the macros.  We still have some but it's not too bad</p>",
        "id": 253869085,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631972109
    },
    {
        "content": "<p>I would like to help shipping this in any way I can.</p>",
        "id": 253869170,
        "sender_full_name": "Gonzalo Brito (gnzlbg)",
        "timestamp": 1631972180
    },
    {
        "content": "<p>Not sure if you have seen the new repo yet: <a href=\"https://github.com/rust-lang/portable-simd\">https://github.com/rust-lang/portable-simd</a></p>",
        "id": 253869223,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631972243
    },
    {
        "content": "<p>No I haven't, thanks for the link! I am catching up with const generics, GATs and other new features from the last two years.</p>",
        "id": 253869298,
        "sender_full_name": "Gonzalo Brito (gnzlbg)",
        "timestamp": 1631972285
    },
    {
        "content": "<p>Hihi.</p>",
        "id": 253883910,
        "sender_full_name": "Jubilee",
        "timestamp": 1631987883
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"441719\">@Gonzalo Brito (gnzlbg)</span> Sooo actually a thing that would be truly blessed and that only you can do is... probably updating <code>packed_simd</code> with the latest point-release and putting someone else on release privileges (hi!) so that it builds on nightly and can be released in the future. &lt;_&lt;</p>\n<p>There are still users of <code>packed_simd</code> via <code>packed_simd_2</code>, even though we want to get everyone off it onto <code>core::simd</code>, and removing the ecosystem split/confusion/breakage entirely would be good.</p>",
        "id": 253885088,
        "sender_full_name": "Jubilee",
        "timestamp": 1631989289
    },
    {
        "content": "<p>And uhh sorry for putting out the fires around your crate with uhhhh more fire. &lt;_&lt;</p>",
        "id": 253885458,
        "sender_full_name": "Jubilee",
        "timestamp": 1631989699
    },
    {
        "content": "<p><del>something something controlled burn</del></p>",
        "id": 253885466,
        "sender_full_name": "Jubilee",
        "timestamp": 1631989715
    },
    {
        "content": "<p>Sure that sounds doable</p>",
        "id": 254271183,
        "sender_full_name": "Gonzalo Brito (gnzlbg)",
        "timestamp": 1632255412
    },
    {
        "content": "<p>I'll try to get to it this week</p>",
        "id": 254271296,
        "sender_full_name": "Gonzalo Brito (gnzlbg)",
        "timestamp": 1632255466
    },
    {
        "content": "<p>Hi all, I wanted to know if you guys had an idea (even vague) when portable simd would be released into stable.<br>\nI am looking forward to it in order to use CRC32 CPU instructions on aarch64 for performance.<br>\nThank you for your work!</p>",
        "id": 257673523,
        "sender_full_name": "Remi",
        "timestamp": 1634292135
    },
    {
        "content": "<p>Hi, all I know for sure is that it won't be for a very long time, since we haven't hit nightly yet (though that's in process)</p>",
        "id": 257685252,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634298773
    },
    {
        "content": "<p>@Remi If you just want to use crc32 instructions on ARM64 can use the <a href=\"https://doc.rust-lang.org/core/arch/aarch64/index.html#functions\"><code>core::arch::aarch64::__crc32*</code> intrinsics</a> on nightly.</p>",
        "id": 257686205,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1634299259
    },
    {
        "content": "<p>Thank you for the reply, when you say \"it won't be for a very long time\", are we talking about weeks / months / years ?<br>\nUnfortunately, I do not have the option to use nightly :/</p>",
        "id": 257686447,
        "sender_full_name": "Remi",
        "timestamp": 1634299389
    },
    {
        "content": "<p>A year might be a good bet.  Months is possible but optimistic.</p>",
        "id": 257686534,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634299441
    },
    {
        "content": "<p>Portable-simd won't add specialized instructions like crc32 calculations. As the name says it is only for instructions portable across most architectures like additions. For specialized instructions you will need to use <code>core::arch</code>.</p>",
        "id": 257686719,
        "sender_full_name": "bjorn3",
        "timestamp": 1634299535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>  ok i see, thanks! I thought this project was the path towards simd stabilization. Would you happen to have an idea for an ETA for stable core::arch::aarch64 ?</p>",
        "id": 257695221,
        "sender_full_name": "Remi",
        "timestamp": 1634303580
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/stdarch/pull/1230\">https://github.com/rust-lang/stdarch/pull/1230</a> will implement the remaining neon intrinsics. Once it is merged it will probably be necessary to have people test it for a while. There currently seems to be a bug with some of the intrinsics: <a href=\"https://github.com/rust-lang/stdarch/issues/1217\">https://github.com/rust-lang/stdarch/issues/1217</a> Once all issues are fixed and no further issues are found they can be proposed for stabilization I think. I don't have a clue how long it will take though.</p>",
        "id": 257695777,
        "sender_full_name": "bjorn3",
        "timestamp": 1634303838
    },
    {
        "content": "<p>ok thank you!</p>",
        "id": 257696464,
        "sender_full_name": "Remi",
        "timestamp": 1634304129
    },
    {
        "content": "<p>No, this is an entirely separate project with a different purpose than architectural instructions.</p>",
        "id": 257743257,
        "sender_full_name": "Jubilee",
        "timestamp": 1634322462
    },
    {
        "content": "<p>And CRC32 isn't even a SIMD instruction.</p>",
        "id": 257744199,
        "sender_full_name": "Jubilee",
        "timestamp": 1634322831
    },
    {
        "content": "<p>though we might add simd carry-less multiply (supported on x86 and probably other archs too), which can be used to compute crcs</p>",
        "id": 257746781,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1634323996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451002\">@Remi</span> In the very short term, if you want to use aarch64 CRC32 instructions, you may want to link an assembly file into your project using the <code>cc</code> crate. In the medium term, you'll be able to use <code>asm!</code>, which I'd expect to see stabilized sooner.</p>",
        "id": 257819490,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634378605
    }
]