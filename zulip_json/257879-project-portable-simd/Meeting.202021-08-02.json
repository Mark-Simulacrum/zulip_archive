[
    {
        "content": "<p>Hello. Who's here in 20? <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  <a href=\"https://hackmd.io/U-mZ_c6AQ4Gpb6v7Mmlghw\">https://hackmd.io/U-mZ_c6AQ4Gpb6v7Mmlghw</a></p>",
        "id": 247968275,
        "sender_full_name": "Jubilee",
        "timestamp": 1627936637
    },
    {
        "content": "<p>Perhaps we can talk about the road to nightly today as well</p>",
        "id": 247968441,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627936718
    },
    {
        "content": "<p>Feel free to edit the hackmd. ^^;</p>",
        "id": 247968489,
        "sender_full_name": "Jubilee",
        "timestamp": 1627936746
    },
    {
        "content": "<p>no progress on <a href=\"https://github.com/rust-lang/stdsimd/issues/109\">stdsimd#109</a>, been busy with other things</p>",
        "id": 247970569,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627937825
    },
    {
        "content": "<p>I managed to clear my schedule of everything else finally, heh.</p>",
        "id": 247970769,
        "sender_full_name": "Jubilee",
        "timestamp": 1627937933
    },
    {
        "content": "<p>planning on working on the llvm side soon</p>",
        "id": 247970915,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627938005
    },
    {
        "content": "<p>Oh lovely. This is going to be absolutely fabulous.</p>",
        "id": 247971712,
        "sender_full_name": "Jubilee",
        "timestamp": 1627938483
    },
    {
        "content": "<p>isn't <a href=\"https://github.com/rust-lang/stdsimd/issues/150\">stdsimd#150</a> resolved by <a href=\"https://github.com/rust-lang/stdsimd/issues/152\">stdsimd#152</a>?</p>",
        "id": 247971867,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627938581
    },
    {
        "content": "<p>Ah yes, I forgot to tag it in the PR</p>",
        "id": 247971941,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627938611
    },
    {
        "content": "<p>closed it for you</p>",
        "id": 247972172,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627938784
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 247972199,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627938799
    },
    {
        "content": "<p>So the summary of that change is bitmask and bit vector conversions is cleaner</p>",
        "id": 247972317,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627938879
    },
    {
        "content": "<p>da. I intend to go back and add in the functions I mentioned as easily implementable with it.</p>",
        "id": 247972459,
        "sender_full_name": "Jubilee",
        "timestamp": 1627938964
    },
    {
        "content": "<p>re: to nightly, aside from \"rename the repo\" as a final step, I believe the main thing is that we should do a subtree merge into the repo because of <a href=\"https://github.com/rust-lang/rust/issues/70651\">https://github.com/rust-lang/rust/issues/70651</a> and land at <code>library/portable-simd</code>. That will allow contributors to rust-lang/rust to modify our repo in the same PR and have us propagate changes back from that, and vice versa.</p>",
        "id": 247972948,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939153
    },
    {
        "content": "<p>I've never used that before so I'll defer, but that sounds good to me</p>",
        "id": 247973078,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627939208
    },
    {
        "content": "<p>It's where stdarch wound up, so it probably is the preferred path. I will ask around a bit.</p>",
        "id": 247973160,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939258
    },
    {
        "content": "<p>Well, they use a submodule still, but e.g. rustfmt and clippy are moving to subtrees.</p>",
        "id": 247973219,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939299
    },
    {
        "content": "<p>haven't used it either, but iirc it worked out well for the rust sub-projects that switched to it</p>",
        "id": 247973321,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627939336
    },
    {
        "content": "<p>Basically the difference is we wind up dumping the contents of our repo as actual commits into the monorepo. This means that there's no artificial hard-and-fast barrier between their repo and ours, it's \"just a pile of commits\" that we happen to have tools to individually diff against.</p>",
        "id": 247973385,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939397
    },
    {
        "content": "<p>Ah that makes sense.  And then those commits can be upstreamed back to our repo</p>",
        "id": 247973488,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627939458
    },
    {
        "content": "<p>This is different from submodules, which are, well, \"subrepos by reference\" instead of git subtree's \"subrepo by value\", yes.</p>",
        "id": 247973524,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939492
    },
    {
        "content": "<p>so our repo would end up just being the subgraph of the monorepo that touches library/portable-simd</p>",
        "id": 247973589,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627939539
    },
    {
        "content": "<p>(more or less)</p>",
        "id": 247973623,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627939562
    },
    {
        "content": "<p>yes.<br>\nThe one caveat is that it is hell to import a commit that touches both the subtree and the rest of the graph at the same time. So... don't do that.</p>",
        "id": 247973693,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939592
    },
    {
        "content": "<p>(makes me wish for ipfs where all files on ipfs are effectively part of one giant worldwide monorepo, no worrying about separate repos)</p>",
        "id": 247973857,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627939708
    },
    {
        "content": "<p>As long as we are poking just our repo tho', we should be fine, and we are more likely to have \"something weird happened in rust-lang/rust and so our sync needs to be fixed\", which is as it should be, kinda? We don't wind up blocking them, they maaay block us.</p>\n<p>...hm we might want to create a notification to ping us when that subtree is modified in rust-lang/rust.</p>",
        "id": 247974094,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939859
    },
    {
        "content": "<p>is there a way to automatically label pull requests that touch our subrepo? that might be handy</p>",
        "id": 247974248,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627939949
    },
    {
        "content": "<p>probably, either highfive or rustbot or bors can do it.</p>",
        "id": 247974306,
        "sender_full_name": "Jubilee",
        "timestamp": 1627939992
    },
    {
        "content": "<p>So before we even get to that point--are there any aspects of the API we're unhappy with?</p>",
        "id": 247974701,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940248
    },
    {
        "content": "<p>I've been looking to improve shuffles, though still working on that</p>",
        "id": 247974730,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940271
    },
    {
        "content": "<p>no support yet for variable length vectors? put that off till later :)</p>",
        "id": 247974821,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627940314
    },
    {
        "content": "<p>/me runs <code>cargo doc --no-deps --open</code></p>",
        "id": 247974874,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940358
    },
    {
        "content": "<p>That is a lot of aliases.</p>",
        "id": 247975034,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940445
    },
    {
        "content": "<p>Yup</p>",
        "id": 247975051,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940458
    },
    {
        "content": "<p>I am not entirely happy with the masks lol.  Hmm.</p>",
        "id": 247975152,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940525
    },
    {
        "content": "<p>What aspect?</p>",
        "id": 247975173,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940537
    },
    {
        "content": "<p>The type definitions. It still feels like they should be somehow more or less abstract.</p>",
        "id": 247975281,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940626
    },
    {
        "content": "<p>I don't have any good ideas though! :D</p>",
        "id": 247975334,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940645
    },
    {
        "content": "<p>Hmm</p>",
        "id": 247975353,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940667
    },
    {
        "content": "<p>Personally I'm pretty happy with them, it's unfortunate they are different types for different widths but I think that's inevitable</p>",
        "id": 247975393,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940703
    },
    {
        "content": "<p>We could always reinvestigate <code>Simd&lt;f32, 4&gt;</code> and <code>Mask&lt;i32, 4&gt;</code> lol</p>",
        "id": 247975673,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940796
    },
    {
        "content": "<p>There is a nagging voice in my head that says it's wrong but it's also living next door next to the nagging voice in my head that says Rust should have HKTs so I am not seriously concerned about it. :P</p>\n<p>I have already voiced my opinion that more things should be lifted into the Vector trait, but<br>\nhmm.</p>",
        "id": 247975775,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940882
    },
    {
        "content": "<p>I don't really feel like there's anything we will not benefit more from getting feedback on.</p>",
        "id": 247975838,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940914
    },
    {
        "content": "<p>I think the bulk of things would require <code>const_evaluatable_checked</code> to end up in the Vector trait unfortunately</p>",
        "id": 247975871,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940944
    },
    {
        "content": "<p>/shrug</p>",
        "id": 247975893,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940963
    },
    {
        "content": "<p>Like, I would rather at this point commit to rust-lang/rust and rewrite the repo than dawdle longer and rewrite the repo.</p>",
        "id": 247975915,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940981
    },
    {
        "content": "<p>Playing devil's advocate, if we did have a single vector type it would basically alleviate the requirement of having a vector type at all</p>",
        "id": 247975918,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940983
    },
    {
        "content": "<p>Vector trait, I should say</p>",
        "id": 247975924,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627940990
    },
    {
        "content": "<p>tru.</p>",
        "id": 247975926,
        "sender_full_name": "Jubilee",
        "timestamp": 1627940992
    },
    {
        "content": "<blockquote>\n<p>is there a way to automatically label pull requests that touch our subrepo? that might be handy</p>\n</blockquote>\n<p>rust-highfive has a way to ping people when certain files change. I use it for cg_clif for example.</p>",
        "id": 247975977,
        "sender_full_name": "bjorn3",
        "timestamp": 1627941005
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/highfive/blob/fb6578cc75015b85468197bbd8123dab85908789/highfive/configs/rust-lang/rust.json#L72\">https://github.com/rust-lang/highfive/blob/fb6578cc75015b85468197bbd8123dab85908789/highfive/configs/rust-lang/rust.json#L72</a></p>",
        "id": 247976052,
        "sender_full_name": "bjorn3",
        "timestamp": 1627941073
    },
    {
        "content": "<p>So I am actually starting to like the idea of combining all of the vector types into a single vector type.  We could use marker traits on the element type to implement the various functions, so there wouldn't actually be any duplicates</p>",
        "id": 247976708,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941468
    },
    {
        "content": "<p>(and basically rid the implementation of macros!)</p>",
        "id": 247976783,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941496
    },
    {
        "content": "<p>Also things like splat, to_array, even shuffle would be defined on \"vectors in general\" regardless of what's actually in the vector, much like standard array operations</p>",
        "id": 247976847,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941544
    },
    {
        "content": "<p>Hmm.</p>",
        "id": 247976999,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941626
    },
    {
        "content": "<p>This does end up kinda like <a href=\"https://docs.rs/ndarray/0.15.3/ndarray/index.html\">https://docs.rs/ndarray/0.15.3/ndarray/index.html</a></p>",
        "id": 247977052,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941657
    },
    {
        "content": "<p>I quite like that idea!</p>",
        "id": 247977071,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627941674
    },
    {
        "content": "<p>Yes, also packed_simd but with more flexibility since we have const generics</p>",
        "id": 247977088,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941700
    },
    {
        "content": "<p>A bit.</p>",
        "id": 247977100,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941706
    },
    {
        "content": "<p>it also means that it would be easy-ish to extend to <code>Simd&lt;NonZeroU32, 5&gt;</code> or <code>Simd&lt;&amp;'a Node&lt;'a&gt;, 16&gt;</code></p>",
        "id": 247977227,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627941805
    },
    {
        "content": "<p>Perhaps, yep</p>",
        "id": 247977331,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941859
    },
    {
        "content": "<p>oh god simdnonzero</p>",
        "id": 247977378,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941892
    },
    {
        "content": "<p>That actually sounds useful to me if we can make a non-nan float <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 247977419,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941932
    },
    {
        "content": "<p>My head just exploded at the implicitly-threatened type explosion.</p>",
        "id": 247977438,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941943
    },
    {
        "content": "<p>Well, we were probably going to at least end up with pointers in the future, so it's a reduction from that</p>",
        "id": 247977511,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627941973
    },
    {
        "content": "<p>Rather, I briefly imagined a type explosion and foom.</p>",
        "id": 247977513,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941975
    },
    {
        "content": "<p>yeah.</p>",
        "id": 247977514,
        "sender_full_name": "Jubilee",
        "timestamp": 1627941978
    },
    {
        "content": "<p>I'm willing to try to put together a PR tonight since it's mostly a superficial change</p>",
        "id": 247977544,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942026
    },
    {
        "content": "<p>Sounds interesting, sure.</p>",
        "id": 247977562,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942041
    },
    {
        "content": "<p>also things like vector versions of ranged integers: <a href=\"#narrow/stream/219381-t-libs/topic/.23.5Brustc_layout_scalar_valid_range_start.5D\">https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/.23.5Brustc_layout_scalar_valid_range_start.5D</a></p>",
        "id": 247977574,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627942058
    },
    {
        "content": "<p>Ah like in Ada</p>",
        "id": 247977679,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942121
    },
    {
        "content": "<p>So the idea is that we impl Add for Vector&lt;T, L&gt; where T impl Add?</p>",
        "id": 247977693,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942134
    },
    {
        "content": "<p>Well, I think it would be more restrictive than that</p>",
        "id": 247977728,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942156
    },
    {
        "content": "<p>probably yes.</p>",
        "id": 247977754,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942177
    },
    {
        "content": "<p>Soooomething like that though.</p>",
        "id": 247977762,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942183
    },
    {
        "content": "<p>Yep</p>",
        "id": 247977770,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942187
    },
    {
        "content": "<p>we want to avoid <code>Add for Simd&lt;String, 16&gt;</code></p>",
        "id": 247977779,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627942192
    },
    {
        "content": "<p>yeeeaaaaaah probably.</p>",
        "id": 247977789,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942200
    },
    {
        "content": "<p>Yeah I was thinking we would have FloatElement, SignedIntElement, etc</p>",
        "id": 247977855,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942221
    },
    {
        "content": "<p>Mmm. Hm.</p>",
        "id": 247977968,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942294
    },
    {
        "content": "<p>I think the real test will be how much of a diff it causes in our example code. ^^;</p>",
        "id": 247978037,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942337
    },
    {
        "content": "<p>interestingly enough, Libre-SOC will be implementing <code>Simd&lt;Simd&lt;f32, 3&gt;, 13&gt;</code></p>",
        "id": 247978083,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627942398
    },
    {
        "content": "<p>I'd expect none if it's using aliases</p>",
        "id": 247978100,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942418
    },
    {
        "content": "<p>I believe arm also implements that</p>",
        "id": 247978107,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942427
    },
    {
        "content": "<p>(though the layout is not what you'd expect, I think)</p>",
        "id": 247978165,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1627942450
    },
    {
        "content": "<p>Hopefully!</p>",
        "id": 247978169,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942454
    },
    {
        "content": "<p>So, I am at least game to see that.</p>",
        "id": 247978181,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942467
    },
    {
        "content": "<p>well, for us, the layout is identical to <code>[[f32; 3]; 13]</code></p>",
        "id": 247978202,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627942489
    },
    {
        "content": "<p>I believe ARM extends the layout of <code>[f32; 3]</code>.</p>",
        "id": 247978423,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942682
    },
    {
        "content": "<p>makes sense, ARM tends to like their 128-bit chunks</p>",
        "id": 247978518,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627942765
    },
    {
        "content": "<p>Yeah, they generally work with 64 or 128 bit chunks.</p>",
        "id": 247978627,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942850
    },
    {
        "content": "<p>Okay, I will... I think flag down Mark over the repo name change and work on the subtree PR so we can get this show on the road. If you ping me here on Zulip I should be available to review immediately(???).</p>",
        "id": 247978743,
        "sender_full_name": "Jubilee",
        "timestamp": 1627942950
    },
    {
        "content": "<p>so, I guess that's more or less it for this meeting?</p>",
        "id": 247978779,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627943022
    },
    {
        "content": "<p>Da.</p>",
        "id": 247979605,
        "sender_full_name": "Jubilee",
        "timestamp": 1627943684
    },
    {
        "content": "<p>oh uh, so while Cryze was fixing up <code>wide</code> they pointed out that <code>max</code> and <code>min</code> are weird and then it lead to us having to look up this issue: <a href=\"https://github.com/rust-lang/rust/issues/83984\">https://github.com/rust-lang/rust/issues/83984</a></p>",
        "id": 248174622,
        "sender_full_name": "Lokathor",
        "timestamp": 1627955452
    },
    {
        "content": "<p>which Jubilee has already posted in but others in the wg might not be aware of it, so go have a \"fun\" time reading that one</p>",
        "id": 248174646,
        "sender_full_name": "Lokathor",
        "timestamp": 1627955480
    },
    {
        "content": "<p>tldr: floating point, lol</p>",
        "id": 248174655,
        "sender_full_name": "Lokathor",
        "timestamp": 1627955502
    },
    {
        "content": "<p>tldr: IEEE754 is a mess of inconsistent implementations for the exact same function...4 different min/max functions and counting...</p>",
        "id": 248179742,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627962878
    },
    {
        "content": "<p>they all do clearly distinct things that a person might want</p>",
        "id": 248180224,
        "sender_full_name": "Lokathor",
        "timestamp": 1627963514
    },
    {
        "content": "<p>but they're also all named poorly</p>",
        "id": 248180228,
        "sender_full_name": "Lokathor",
        "timestamp": 1627963521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/Meeting.202021-08-02/near/248180224\">said</a>:</p>\n<blockquote>\n<p>they all do clearly distinct things that a person might want</p>\n</blockquote>\n<p>yup, but they're also very confusing for those who aren't super experienced, they're likely to say \"they're all a minimum, but why do we need 4 different minimums and how do I choose the best one?!\".</p>",
        "id": 248180445,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1627963861
    },
    {
        "content": "<p>rip Rust :( Julia seems to do it right:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">min</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mf\">0.0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">min</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mf\">0.0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">max</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"mf\">0.0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">max</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"mf\">0.0</span>\n</code></pre></div>\n<p>Also, <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> hi gang I'm back!</p>",
        "id": 248253914,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1628012424
    }
]