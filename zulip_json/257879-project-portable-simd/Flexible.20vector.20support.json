[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> I don't believe that multiversioning will be required.</p>",
        "id": 253475062,
        "sender_full_name": "Jubilee",
        "timestamp": 1631734749
    },
    {
        "content": "<p>It was one of the methods <span class=\"user-mention\" data-user-id=\"229517\">@Jacob Lifshay</span> suggested, I'm sure other methods are possible too. What are you thinking?</p>",
        "id": 253475342,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631734880
    },
    {
        "content": "<p>We will have to encode a minimum length, probably.</p>",
        "id": 253477292,
        "sender_full_name": "Jubilee",
        "timestamp": 1631735748
    },
    {
        "content": "<p>Are you suggesting an entirely different type which is unsized?</p>",
        "id": 253477459,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631735816
    },
    {
        "content": "<p>Also, what would you have it do when you don't have SVE, but you do have AVX etc</p>",
        "id": 253477560,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631735862
    },
    {
        "content": "<p>I believe RVV support, with a correct compiler, should be able to take our static-length API and unroll it into a correctly performing vector loop that uses the maximum size available, pretending that it is handling multiples of a vector length.</p>",
        "id": 253477770,
        "sender_full_name": "Jubilee",
        "timestamp": 1631735947
    },
    {
        "content": "<p>SVE is a little more complicated.</p>",
        "id": 253477851,
        "sender_full_name": "Jubilee",
        "timestamp": 1631735986
    },
    {
        "content": "<p>Ah, those are two different things</p>",
        "id": 253477940,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631736010
    },
    {
        "content": "<p>That's why I suggested multiversioning--thats the most common interface</p>",
        "id": 253478041,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631736041
    },
    {
        "content": "<p>It doesn't require a version per HW vector length tho'.</p>",
        "id": 253478199,
        "sender_full_name": "Jubilee",
        "timestamp": 1631736105
    },
    {
        "content": "<p>Just to make sure we're on the same page--what are you calling flexible vectors?</p>",
        "id": 253478372,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631736166
    },
    {
        "content": "<p>Other than the power of two limitation, I think our current API can take full advantage of RVV vectors?</p>",
        "id": 253478469,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1631736205
    }
]