[
    {
        "content": "<p>Human intervention is probably good enough usually but I could see something slipping through</p>",
        "id": 254451684,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632350869
    },
    {
        "content": "<p>No and there shouldn't be, half the point is to prevent situations where a change downstream requires diffing two repos at once and thus can't land.</p>",
        "id": 254451741,
        "sender_full_name": "Jubilee",
        "timestamp": 1632350885
    },
    {
        "content": "<p>not without breaking upstream, etc.</p>",
        "id": 254451772,
        "sender_full_name": "Jubilee",
        "timestamp": 1632350911
    },
    {
        "content": "<p>Good point</p>",
        "id": 254451824,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632350953
    },
    {
        "content": "<p>We can fix up the surrounding tooling so we almost always get notified though, and if it's something that DOESN'T require that, we can block it.</p>",
        "id": 254451849,
        "sender_full_name": "Jubilee",
        "timestamp": 1632350974
    },
    {
        "content": "<p>So it should be done sparingly</p>",
        "id": 254451862,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632350980
    },
    {
        "content": "<p>Yep</p>",
        "id": 254451868,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632350983
    },
    {
        "content": "<p>I applied the given patch inside rust-lang/rust mostly because it is a patch that still needs being proof-of-concepted against Rust CI because I was caught off-guard by it and didn't expect anything else in terms of testing for it.</p>",
        "id": 254452811,
        "sender_full_name": "Jubilee",
        "timestamp": 1632351484
    },
    {
        "content": "<p>I'm actually just about to open the PR that changes how that's done, up to you how we want to handle it right now</p>",
        "id": 254452935,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632351554
    },
    {
        "content": "<p>It's up, feel free to wait until your main PR is done, or roll it in now, doesn't matter either way</p>",
        "id": 254453418,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632351775
    },
    {
        "content": "<p>It's basically stylistic</p>",
        "id": 254453452,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632351799
    },
    {
        "content": "<p>My current patch seems to be going green so I will probably roll yours in after, depending on review feedback and how much is required and if it winds up being more expedient to simply resync or not.</p>",
        "id": 254453875,
        "sender_full_name": "Jubilee",
        "timestamp": 1632351964
    },
    {
        "content": "<p>we can always wait and combine that resync with the swizzle PR and anything else we may decide to fix in that time</p>",
        "id": 254454415,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632352264
    },
    {
        "content": "<p>I am gonna need to take a chainsaw to our existing <code>cfg</code> stuff to make <code>mul_add</code> usable via <code>std</code>, too.</p>",
        "id": 254454545,
        "sender_full_name": "Jubilee",
        "timestamp": 1632352331
    },
    {
        "content": "<p>Oh yeah, I didn't even check that, right now we are only getting the <code>core</code> things, right?</p>",
        "id": 254454577,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632352355
    },
    {
        "content": "<p>yup.</p>",
        "id": 254454589,
        "sender_full_name": "Jubilee",
        "timestamp": 1632352364
    },
    {
        "content": "<p>making it a separate module or crate should be fine, particularly since it's not even adding any new types</p>",
        "id": 254454623,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632352392
    },
    {
        "content": "<p>It's extending the implementation, though, and it needs to become a module of libcore but only when exposed via std. :D</p>",
        "id": 254455158,
        "sender_full_name": "Jubilee",
        "timestamp": 1632352693
    },
    {
        "content": "<p>Why can't it purely be implemented in std?</p>",
        "id": 254455220,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632352737
    },
    {
        "content": "<p>Because they are separate crates?</p>",
        "id": 254455239,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632352751
    },
    {
        "content": "<p>idk what we can get away with yet~</p>",
        "id": 254455263,
        "sender_full_name": "Jubilee",
        "timestamp": 1632352770
    },
    {
        "content": "<p>there is a.. FASCINATING hack tho' for std</p>",
        "id": 254455552,
        "sender_full_name": "Jubilee",
        "timestamp": 1632352940
    },
    {
        "content": "<p>Brb submitting a PR that removes coherence</p>",
        "id": 254455634,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632353012
    },
    {
        "content": "<p>Both in the technical sense and the lay sense</p>",
        "id": 254455659,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632353036
    },
    {
        "content": "<p>lmao<br>\nbasically, some crates included in std depend on core but are also kinda part of core already.<br>\nand then when std needs to compile, those crates have an explicit dependency on another crate, that gets rewritten, inside the rustc build system</p>",
        "id": 254455803,
        "sender_full_name": "Jubilee",
        "timestamp": 1632353112
    },
    {
        "content": "<p>into libcore</p>",
        "id": 254455813,
        "sender_full_name": "Jubilee",
        "timestamp": 1632353120
    },
    {
        "content": "<blockquote>\n<p>The rustc-std-workspace-core crate</p>\n<p>This crate is a shim and empty crate which simply depends on libcore and reexports all of its contents. The crate is the crux of empowering the standard library to depend on crates from <a href=\"http://crates.io\">crates.io</a></p>\n</blockquote>",
        "id": 254455949,
        "sender_full_name": "Jubilee",
        "timestamp": 1632353208
    },
    {
        "content": "<p>Eek</p>",
        "id": 254456070,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1632353287
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core\">https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core</a></p>",
        "id": 254456148,
        "sender_full_name": "Jubilee",
        "timestamp": 1632353345
    },
    {
        "content": "<p>Your proposed solution still has broken links, it seems: </p>\n<blockquote>\n<p>std\\simd\\struct.Mask.html:108: broken link fragment <code>#tymethod.select</code> pointing to <code>std\\simd\\trait.Select.html</code><br>\nstd\\simd\\struct.Simd.html:3049: broken link fragment <code>#tymethod.select</code> pointing to <code>std\\simd\\trait.Select.html</code><br>\nchecked links in: 24.4s<br>\nnumber of HTML files scanned: 29200<br>\nnumber of HTML redirects found: 9095<br>\nnumber of links checked: 1976612<br>\nnumber of links ignored due to external: 69206<br>\nnumber of links ignored due to exceptions: 18<br>\nnumber of intra doc links ignored: 23<br>\nerrors found: 2<br>\nfound some broken links</p>\n</blockquote>",
        "id": 258461776,
        "sender_full_name": "Jubilee",
        "timestamp": 1634773245
    },
    {
        "content": "<p>Oh, I think that's unrelated now that I see it</p>",
        "id": 258462251,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634773581
    },
    {
        "content": "<p>The select function is also hidden from the Select trait</p>",
        "id": 258462262,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634773596
    },
    {
        "content": "<p>We could just make that not hidden, probably</p>",
        "id": 258462290,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634773615
    },
    {
        "content": "<p>Take a look at <a href=\"http://select.rs\">select.rs</a></p>",
        "id": 258462317,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634773635
    },
    {
        "content": "<p>I mean yes, that's what I originally did.</p>",
        "id": 258463052,
        "sender_full_name": "Jubilee",
        "timestamp": 1634774081
    },
    {
        "content": "<p>I thought the original issue was the functions on <code>Mask</code>, which are not erroring now</p>",
        "id": 258463157,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774135
    },
    {
        "content": "<p>er, <code>MaskElement</code></p>",
        "id": 258463174,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774149
    },
    {
        "content": "<p>we can actually do the same thing here, create a <code>SelectImpl</code> that hides the function (though this one is less bad, so it's probably fine to expose)</p>",
        "id": 258463254,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774186
    },
    {
        "content": "<p>:/</p>",
        "id": 258463267,
        "sender_full_name": "Jubilee",
        "timestamp": 1634774200
    },
    {
        "content": "<p>Since <code>Select</code> is sealed, it's probably fine... it might actually be useful to someone I suppose.  Though you then end up with a duplicated function</p>",
        "id": 258463360,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774261
    },
    {
        "content": "<p>It's really mostly about satisfying the minutiae of a buggy documentation tool, I would prefer not to overthink it or overcomplicate things.</p>",
        "id": 258463461,
        "sender_full_name": "Jubilee",
        "timestamp": 1634774308
    },
    {
        "content": "<p>well, I don't think either is complicated</p>",
        "id": 258463480,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774328
    },
    {
        "content": "<p>it depends if we want that function exposed or not</p>",
        "id": 258463490,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774337
    },
    {
        "content": "<p>(when rustdoc is fixed we should definitely undo these changes if possible, though)</p>",
        "id": 258463584,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> you pushed to master? I don't think that error you got here is related to my fix</p>",
        "id": 258464213,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774749
    },
    {
        "content": "<p>can we revert and try the fix I suggested?</p>",
        "id": 258464278,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634774772
    },
    {
        "content": "<p>Yes.</p>\n<p>The error I got was using your patch only, I reapplied the patch that was already a commit in the PR. I had accumulated a set of minor fixes I needed to do anyways to make sure it compiled, so it got rolled in with those, since it is the same beast. I am not attached to the particular form of solution in question, here, so I will happily override my changes with yours, I just am... uh...</p>\n<p>brain is thin on ability to synthesize and evaluate more complex changesets, will feel less so when I see CI green again.</p>",
        "id": 258465616,
        "sender_full_name": "Jubilee",
        "timestamp": 1634775533
    },
    {
        "content": "<p>Okay, I've got a fix that I'm about to push to the PR after I make sure it passes tests</p>",
        "id": 258465917,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634775706
    },
    {
        "content": "<p>can we just revert that commit? I'm going to have to rebase either way, but that will make it simpler</p>",
        "id": 258466020,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634775739
    },
    {
        "content": "<p>uhmm.</p>",
        "id": 258466083,
        "sender_full_name": "Jubilee",
        "timestamp": 1634775772
    },
    {
        "content": "<p>yes when I see the pretty colors.</p>",
        "id": 258466274,
        "sender_full_name": "Jubilee",
        "timestamp": 1634775863
    },
    {
        "content": "<p>you mean on the PR?</p>",
        "id": 258466367,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634775920
    },
    {
        "content": "<p>the CI can't run because there are unresolved conflicts</p>",
        "id": 258466382,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634775928
    },
    {
        "content": "<p>I can do the revert there but then it'll show up in the changes to review</p>",
        "id": 258466415,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634775954
    },
    {
        "content": "<p>I mean I am staring at the yellow dot on <a href=\"https://github.com/rust-lang/rust/issues/89167\">#89167</a> atm.</p>",
        "id": 258466574,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776015
    },
    {
        "content": "<p>oh, on that PR</p>",
        "id": 258466666,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776074
    },
    {
        "content": "<p>I thought you meant <a href=\"https://github.com/rust-lang/portable-simd/issues/165\">portable-simd#165</a></p>",
        "id": 258466734,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776101
    },
    {
        "content": "<p>I am explicitly okay with you steamrolling all conflicts in your favor.</p>",
        "id": 258466938,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776225
    },
    {
        "content": "<p>sounds good, I just didn't really want them to appear in that PR since it might be confusing, but I suppose it's probably fine</p>",
        "id": 258467031,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776295
    },
    {
        "content": "<p>I just am going to have like half a brain until I see \"the CI demon has been slain\" because</p>",
        "id": 258467035,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776298
    },
    {
        "content": "<p>yeah.</p>",
        "id": 258467040,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776304
    },
    {
        "content": "<p>I'm curious to see if this bug appears on trait associated types (like in LaneCount)</p>",
        "id": 258467160,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776347
    },
    {
        "content": "<p>I'm guessing no, for some reason</p>",
        "id": 258467169,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776361
    },
    {
        "content": "<p>/shrug</p>",
        "id": 258467191,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776374
    },
    {
        "content": "<p>I... don't think so?</p>",
        "id": 258467210,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776388
    },
    {
        "content": "<p>...GAH.</p>",
        "id": 258467962,
        "sender_full_name": "Jubilee",
        "timestamp": 1634776871
    },
    {
        "content": "<p>don't tell me</p>",
        "id": 258467974,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776878
    },
    {
        "content": "<p><code>SupportedLaneCount</code></p>",
        "id": 258467980,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776885
    },
    {
        "content": "<p>if that's it, I can fix it in my PR too</p>",
        "id": 258468011,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634776908
    },
    {
        "content": "<p>oh, more imports</p>",
        "id": 258468172,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634777007
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 258468210,
        "sender_full_name": "Jubilee",
        "timestamp": 1634777034
    },
    {
        "content": "<p>okay.</p>",
        "id": 258468268,
        "sender_full_name": "Jubilee",
        "timestamp": 1634777053
    },
    {
        "content": "<p>Freed space.</p>",
        "id": 258468280,
        "sender_full_name": "Jubilee",
        "timestamp": 1634777062
    },
    {
        "content": "<p>Alright, would you still prefer to see that commit reverted? I mean I have just been floating \"whatever changes are necessary to pass CI\" on it so</p>",
        "id": 258468347,
        "sender_full_name": "Jubilee",
        "timestamp": 1634777114
    },
    {
        "content": "<p>eh, it's fine, I already just rebased and included it there</p>",
        "id": 258468373,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634777130
    },
    {
        "content": "<p>mm.</p>",
        "id": 258468387,
        "sender_full_name": "Jubilee",
        "timestamp": 1634777139
    },
    {
        "content": "<p>we might want to just pull that PR in though</p>",
        "id": 258468393,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1634777145
    }
]