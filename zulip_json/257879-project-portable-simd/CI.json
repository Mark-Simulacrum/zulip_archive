[
    {
        "content": "<p>I've made a start on some CI. I figured we'd be best off building it up from scratch while expecting to take inspiration from <code>packed_simd</code> and <code>stdarch</code> as we go. I ended up starting with Travis rather than GitHub Actions because it turns out they've <a href=\"https://travis-ci.com/github/rust-lang/stdsimd/jobs/389728119\">got some ARM support</a> so we can actually test Neon properly <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 211000494,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1600867075
    },
    {
        "content": "<p>huzzah</p>",
        "id": 211030382,
        "sender_full_name": "Jubilee",
        "timestamp": 1600879698
    },
    {
        "content": "<p>Looks like they also have _much_ better mustache support as well</p>",
        "id": 211084511,
        "sender_full_name": "oliver",
        "timestamp": 1600915145
    },
    {
        "content": "<p>Long term it would be amazing if the Rust project had access to some self-hosted build agents with different CPUs</p>",
        "id": 211089854,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1600922545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204346\">Ashley Mannix</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/CI/near/211000494\">said</a>:</p>\n<blockquote>\n<p>I've made a start on some CI. I figured we'd be best off building it up from scratch while expecting to take inspiration from <code>packed_simd</code> and <code>stdarch</code> as we go. I ended up starting with Travis rather than GitHub Actions because it turns out they've <a href=\"https://travis-ci.com/github/rust-lang/stdsimd/jobs/389728119\">got some ARM support</a> so we can actually test Neon properly <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Nice, I noticed that but never used it personally. Also you could split the ARM jobs for travis, x86 for Actions.<br>\nBut probably not worth the complexity for maintainers.</p>",
        "id": 211090612,
        "sender_full_name": "lzutao",
        "timestamp": 1600923726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204346\">Ashley Mannix</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/CI/near/211089854\">said</a>:</p>\n<blockquote>\n<p>Long term it would be amazing if the Rust project had access to some self-hosted build agents with different CPUs</p>\n</blockquote>\n<p>Try contact infra team. I believe they have access to self-hosted ARM hosts donated by ARM.</p>",
        "id": 211090622,
        "sender_full_name": "lzutao",
        "timestamp": 1600923759
    },
    {
        "content": "<p>Oh really? Thanks <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span>! I'll do that</p>",
        "id": 211090647,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1600923837
    },
    {
        "content": "<p>I think only aarch64 :)</p>",
        "id": 211090695,
        "sender_full_name": "lzutao",
        "timestamp": 1600923869
    },
    {
        "content": "<p>I have both arm and aarch64 devices, but no automation to go with them.</p>\n<p>And supposedly you can cross-build and run arm code on aarch64 same as x86 on x86_64, but you need to get a few extra dev libs or something, it didn't work for me out of the box when i tried.</p>",
        "id": 211090831,
        "sender_full_name": "Lokathor",
        "timestamp": 1600924072
    },
    {
        "content": "<p>In theory you need kernel with support for 32-bit programs and 32-bit libraries like glibc on that Aarch64 system. I think I have never tried it myself.</p>",
        "id": 211095750,
        "sender_full_name": "mati865",
        "timestamp": 1600931228
    },
    {
        "content": "<p>Not sure if it is helpful or not, but I've had some luck using <code>cross</code> to test other architectures virtually. Might be helpful for mips etc</p>",
        "id": 211195555,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1600985320
    },
    {
        "content": "<p>Travis lets you use</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"nt\">arch</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">arm64</span>\n<span class=\"nt\">arch</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ppc64le</span>\n<span class=\"nt\">arch</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">s390x</span>\n</code></pre></div>\n\n<p>The CI for packed_simd doesn't work for those architectures if switched onto those architectures because it's built on QEMU. This is mildly silly when we could skip emulation.</p>",
        "id": 211344871,
        "sender_full_name": "Jubilee",
        "timestamp": 1601100833
    },
    {
        "content": "<p>This is notable in particular because ppc64le is one of the arches that seems to have good SIMD support through LLVM.</p>",
        "id": 211345064,
        "sender_full_name": "Jubilee",
        "timestamp": 1601101107
    },
    {
        "content": "<p>Ah great! I'll be doing some more CI work tomorrow <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> I'll try get us to a starting point we can merge into the initial types PR</p>",
        "id": 211393230,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601172914
    },
    {
        "content": "<p>we should possibly just merge the initial-types PR and then rebase the CI PR on top of that. Because the repo started blank, both PRs are trying to set their own initial crate details, so <em>one of them</em> is going to have to rebase.</p>",
        "id": 211393295,
        "sender_full_name": "Lokathor",
        "timestamp": 1601173017
    },
    {
        "content": "<p>Iâ€™m happy to rebase if the initial types is good to go</p>",
        "id": 211393443,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601173274
    },
    {
        "content": "<p>I didn't actually add any tests to run, but if we want to get _something_ in, it's ready to go</p>",
        "id": 211393486,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601173324
    },
    {
        "content": "<p>Let's merge it, and then add a test as part of the CI PR?</p>\n<p>yes/no votes?</p>",
        "id": 211393498,
        "sender_full_name": "Lokathor",
        "timestamp": 1601173372
    },
    {
        "content": "<p>We will at least know that it builds <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 211393501,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601173386
    },
    {
        "content": "<p>done</p>",
        "id": 211393516,
        "sender_full_name": "Lokathor",
        "timestamp": 1601173416
    },
    {
        "content": "<p>we officially have some code to announce!</p>",
        "id": 211393520,
        "sender_full_name": "Lokathor",
        "timestamp": 1601173430
    }
]