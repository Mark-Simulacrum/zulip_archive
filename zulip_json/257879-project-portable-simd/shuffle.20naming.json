[
    {
        "content": "<p>Uhhh <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> is there a reason we don't have single argument shuffle like this line form <code>packed_simd</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">tmp1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">shuffle</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">tmp1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">]);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 241594019,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841304
    },
    {
        "content": "<p>I think I can do </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">tmp1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f32x4</span>::<span class=\"n\">shuffle</span>::<span class=\"o\">&lt;</span><span class=\"p\">{[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">]}</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">tmp1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tmp1</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>for now but that's a bit ugly.</p>",
        "id": 241594055,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841343
    },
    {
        "content": "<blockquote>\n<p>Uhhh <span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> is there a reason we don't have single argument shuffle like this line form <code>packed_simd</code>?</p>\n</blockquote>\n<p>because a macro is how we do variadics in Rust, and we didn't agree on the API for a single-vector form. ^^;</p>",
        "id": 241594196,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841394
    },
    {
        "content": "<p>Ok, I haven't read the issue, but it seems that if the 2-arg works, the 1-arg version could just be</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">tmp1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f32x4</span>::<span class=\"n\">shuffle</span>::<span class=\"o\">&lt;</span><span class=\"p\">{[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">]}</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">tmp1</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>right?</p>",
        "id": 241594386,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841460
    },
    {
        "content": "<p>nope, because functions can't be variadic. ^^;;;</p>",
        "id": 241594534,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841587
    },
    {
        "content": "<p>we'd have to name them differently.</p>",
        "id": 241594561,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841600
    },
    {
        "content": "<p>...</p>",
        "id": 241594564,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841600
    },
    {
        "content": "<p>so yes if it's shuffle1 and shuffle2</p>",
        "id": 241594631,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841615
    },
    {
        "content": "<p>(ノಠ益ಠ)ノ彡┻━┻</p>",
        "id": 241594701,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841667
    },
    {
        "content": "<p>Fine.</p>",
        "id": 241594703,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841669
    },
    {
        "content": "<p>But I'm pouting.</p>",
        "id": 241594726,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841692
    },
    {
        "content": "<p>iktf</p>",
        "id": 241594750,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841711
    },
    {
        "content": "<p>I'm guessing I'll do my crappy fix for now and people can PR the nicer syntax once the bikeshedding is done.</p>",
        "id": 241594805,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622841732
    },
    {
        "content": "<p>time to paint the bikeshed folks, why not <a href=\"https://www.youtube.com/watch?v=yKNxeF4KMsY\">yellow</a>?</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"yKNxeF4KMsY\" href=\"https://www.youtube.com/watch?v=yKNxeF4KMsY\"><img src=\"https://uploads.zulipusercontent.net/cfd0663b6c61ddf8f55ab3ea7bd894d412f2d015/68747470733a2f2f692e7974696d672e636f6d2f76692f794b4e786546344b4d73592f64656661756c742e6a7067\"></a></div>",
        "id": 241594938,
        "sender_full_name": "Jubilee",
        "timestamp": 1622841837
    },
    {
        "content": "<p>I think we should name the two-argument shuffle <code>shuffle2</code> and the one-argument shuffle <code>shuffle</code>, I'd expect the one-argument form to be used much more often.</p>",
        "id": 241600512,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1622846002
    },
    {
        "content": "<p>Can macros be namespaced so that <code>f32x4::shuffle!::&lt;{{1,2,3,4]}&gt;(arr1);</code> works?</p>",
        "id": 241601003,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622846493
    },
    {
        "content": "<p>Answer: SO says <a href=\"https://stackoverflow.com/questions/24794821/is-it-possible-to-namespace-rust-macros\">no</a>.</p>",
        "id": 241601511,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847064
    },
    {
        "content": "<p>well actually</p>",
        "id": 241601543,
        "sender_full_name": "Jubilee",
        "timestamp": 1622847102
    },
    {
        "content": "<p>I think I agree, permutation seems way more common</p>",
        "id": 241601548,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622847108
    },
    {
        "content": "<p>NO DON'T YOU START</p>",
        "id": 241601551,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847111
    },
    {
        "content": "<p>oh sorry <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 241601586,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847123
    },
    {
        "content": "<p>We now have a namespaced macro, and ongoing discussions of what should be namespaced: <a href=\"https://github.com/rust-lang/rust/issues/84019\">https://github.com/rust-lang/rust/issues/84019</a></p>",
        "id": 241601612,
        "sender_full_name": "Jubilee",
        "timestamp": 1622847148
    },
    {
        "content": "<p>I don't get why functions can't be variadic though <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 241601651,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847214
    },
    {
        "content": "<p>My Rust training leads me to believe this should be possible:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">shuffle</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$type</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$arr</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$arg1</span>:<span class=\"nc\">expr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">$type</span>::<span class=\"n\">shuffle1</span>::<span class=\"o\">&lt;</span><span class=\"p\">{</span><span class=\"cp\">$arr</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$type</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$arr</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$arg1</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$arg2</span>:<span class=\"nc\">expr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">$type</span>::<span class=\"n\">shuffle2</span>::<span class=\"o\">&lt;</span><span class=\"p\">{</span><span class=\"cp\">$arr</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 241602132,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847702
    },
    {
        "content": "<p>and then this Should Work <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">shuffle</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">f32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">arr1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">shuffle</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">f32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">arr1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arr2</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 241602223,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847803
    },
    {
        "content": "<p>Oh, you could also be a bit smarter with the match arms and check that the <code>arr</code> is of the proper size given the type right?</p>",
        "id": 241602330,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622847911
    },
    {
        "content": "<p>That would work, it just comes down to how much it matters vs the API being confusing</p>",
        "id": 241602416,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622847985
    },
    {
        "content": "<p>Having two shuffle functions isn't particularly confusing, if it was a lot then perhaps a macro would be easier</p>",
        "id": 241602441,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622848016
    },
    {
        "content": "<p>I'm thinking about it and don't see much harm in just defining <code>shuffle1</code> and <code>shuffle2</code>.</p>",
        "id": 241602517,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622848083
    },
    {
        "content": "<p>Maybe the biggest hurdle here is to just take an executive decision and run with it <span aria-label=\"crab\" class=\"emoji emoji-1f980\" role=\"img\" title=\"crab\">:crab:</span></p>",
        "id": 241602533,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622848111
    },
    {
        "content": "<p>Up to now, I'm fine with whatever people go for. Maybe not macros because they're a bit harder to debug for beginner users but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 241602582,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622848173
    },
    {
        "content": "<p>I think I'd prefer <code>shuffle</code> over <code>shuffle1</code> because it's a reasonable assumption that it operates on just one</p>",
        "id": 241602585,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622848178
    },
    {
        "content": "<p>As a naïve newcomer to SIMD stuff, I was surprised that shuffle (in cranelift) took two vectors.  I totally expected \"shuffle\" to just rearrange a single vector.</p>",
        "id": 241602916,
        "sender_full_name": "scottmcm",
        "timestamp": 1622848546
    },
    {
        "content": "<p>Hmm, maybe <code>permute</code> for 1-param and <code>shuffle</code> for 2-param?  (Based on <code>_mm256_permute_pd</code> and such.)</p>",
        "id": 241603019,
        "sender_full_name": "scottmcm",
        "timestamp": 1622848652
    },
    {
        "content": "<p>I think permute is a misnomer since you can duplicate lanes</p>",
        "id": 241603102,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622848703
    },
    {
        "content": "<p>Not that \"shuffle\" indicates that you can, but it's not as strict as \"permute\"</p>",
        "id": 241603214,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622848808
    },
    {
        "content": "<p>Was going to say, yeah.  And <a href=\"https://en.cppreference.com/w/cpp/algorithm/shuffle\">https://en.cppreference.com/w/cpp/algorithm/shuffle</a> is also a permutation...</p>",
        "id": 241604142,
        "sender_full_name": "scottmcm",
        "timestamp": 1622849664
    },
    {
        "content": "<p>I think in common English shuffle and permute mean the same thing so as much as it pains me to say it, C++ is probably right</p>",
        "id": 241604178,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622849755
    },
    {
        "content": "<p>I'm not sure there's a good word for what we're trying to do, but shuffle is pretty close</p>",
        "id": 241604227,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622849785
    },
    {
        "content": "<p><code>reorder</code>?</p>",
        "id": 241604239,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622849802
    },
    {
        "content": "<p>But maybe <code>shuffle</code> is too established in SIMD-land and you gotta respect it.</p>",
        "id": 241604250,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622849824
    },
    {
        "content": "<p>Technically we aren't doing anything with order at all, a shuffle could just as easily be a blend or a broadcast</p>",
        "id": 241604302,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622849883
    },
    {
        "content": "<p>A \"splat\" I should say</p>",
        "id": 241604337,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622849894
    },
    {
        "content": "<p>But yes, shuffle is probably the most well known term for it</p>",
        "id": 241604378,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622849951
    },
    {
        "content": "<p>Any way we slice it, we're using a term of art.</p>",
        "id": 241604879,
        "sender_full_name": "Jubilee",
        "timestamp": 1622850542
    },
    {
        "content": "<p>call it elgguhs and no one will have any preconceived notions.</p>",
        "id": 241606947,
        "sender_full_name": "Lokathor",
        "timestamp": 1622853348
    },
    {
        "content": "<p>well, if we really want a word that doesn't imply just reordering, how about swizzle? that's what's used in many GPU APIs</p>",
        "id": 241606949,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1622853352
    },
    {
        "content": "<p><a href=\"https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Swizzling\">https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Swizzling</a></p>",
        "id": 241607072,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1622853491
    },
    {
        "content": "<p>oh, actually, yes i've used that before. solid choice</p>",
        "id": 241607233,
        "sender_full_name": "Lokathor",
        "timestamp": 1622853777
    },
    {
        "content": "<p>just imagine how cool it would be if we could have swizzle syntax some day :3c</p>",
        "id": 241607242,
        "sender_full_name": "Lokathor",
        "timestamp": 1622853800
    },
    {
        "content": "<p>I'm probably okay with swizzle too</p>",
        "id": 241608059,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622855065
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Swizzling_(computer_graphics)\">https://en.wikipedia.org/wiki/Swizzling_(computer_graphics)</a></p>",
        "id": 241608104,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622855148
    },
    {
        "content": "<p>Wikipedia seems to indicate this is the correct word</p>",
        "id": 241608106,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622855158
    },
    {
        "content": "<p>\"rearranging and combining\"</p>",
        "id": 241608146,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622855167
    },
    {
        "content": "<p>we'd definitely want doc aliases for shuffle and permute, though</p>",
        "id": 241609067,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1622856796
    },
    {
        "content": "<p>there are a few other uses of the term \"swizzling\" for completely unrelated reasons (pointer swizzling mostly, but even in gpu terms it can refer to the various memory layout tricks done on textures, for example <a href=\"https://fgiesen.wordpress.com/2011/01/17/texture-tiling-and-swizzling/\">https://fgiesen.wordpress.com/2011/01/17/texture-tiling-and-swizzling/</a>), but it's probably unambiguous enough.</p>\n<p>that said, i think prefer shuffle since its ubiquitous, and is a term that's pretty close to the correct idea. swizzle is honestly just complete jargon if you dont know what it means already</p>",
        "id": 241615323,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1622867330
    },
    {
        "content": "<p>I had never heard of the term before and it sounds like something from Willy Wonka.</p>",
        "id": 241615402,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1622867498
    },
    {
        "content": "<p>Well, \"Swizzle Sticks\" are from 18th century rum plantations, apparently (TIL) &lt;<a href=\"https://en.wikipedia.org/wiki/Swizzle_stick\">https://en.wikipedia.org/wiki/Swizzle_stick</a>&gt;</p>\n<p>Some prior art: WASM SIMD apparently uses swizzle for one-vector and shuffle for two-vector, based on &lt;<a href=\"https://github.com/stoklund/portable-simd/blob/master/portable-simd.md#swizzle-lanes\">https://github.com/stoklund/portable-simd/blob/master/portable-simd.md#swizzle-lanes</a>&gt; and &lt;<a href=\"https://github.com/WebAssembly/simd/blob/main/proposals/simd/ImplementationStatus.md\">https://github.com/WebAssembly/simd/blob/main/proposals/simd/ImplementationStatus.md</a>&gt;</p>\n<p>So following that might be reasonable, absent any stronger feelings.</p>",
        "id": 241620181,
        "sender_full_name": "scottmcm",
        "timestamp": 1622875273
    },
    {
        "content": "<p>I do think we should pick one of swizzle or shuffle (or something else), but I am against using both words at once, one-arg swizzle should <em>not</em> arbitrarily have a different name than two-arg swizzle. The names should be like <code>swizzle</code> and <code>swizzle2</code> or similar such that anyone can tell just by glancing at the names that <code>swizzle2</code> is just like <code>swizzle</code> except it has two args.</p>",
        "id": 241672225,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1622954179
    },
    {
        "content": "<p>I feel like we've made an effort to make names that aren't jargony so far, and swizzle is entirely jargon, so IMO we shouldn't use it if we're going to stick with our current conventions.</p>",
        "id": 241726800,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1623039352
    },
    {
        "content": "<p>I don't think it's any worse than <code>splat</code>--it's jargon but generally accepted</p>",
        "id": 241726932,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1623039516
    },
    {
        "content": "<p>I don't mind a jargony name -- if I can lookup <em>simd frobble</em> in a search engine and get a reasonable result, that might actually better than a non-jargon name that nobody else uses and thus might actually be more confusing.</p>\n<p>(Like how my suggestion of <code>permute</code> above would erroneously imply \"no repetition/removal\" in a way that it shouldn't, even though <code>shuffle</code> also implies that in normal English, but because it's existing jargon that might be ok.)</p>",
        "id": 241812908,
        "sender_full_name": "scottmcm",
        "timestamp": 1623087477
    },
    {
        "content": "<p>It sounds like we're all basically against permute, which is fine by me.<br>\nJacob brought up a fair point that, if we're going to use jargon, we shouldn't bring up two basically interchangeable forms of jargon, so let's not use both swizzle and shuffle. Which I agree with.</p>\n<p>I think we're basically settled on \"swizzle XOR shuffle\", then?</p>",
        "id": 242013810,
        "sender_full_name": "Jubilee",
        "timestamp": 1623208805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> might have some thought here -- I see they were mentioned in <a href=\"https://github.com/WebAssembly/simd/issues/78\">https://github.com/WebAssembly/simd/issues/78</a> related to <a href=\"https://github.com/WebAssembly/simd/pull/71#issuecomment-472691503\">https://github.com/WebAssembly/simd/pull/71#issuecomment-472691503</a></p>\n<p>WASM may well have different tradeoffs than we do, but there's also much to be said for stealing another project's bikeshed wallpaper ;)</p>",
        "id": 242014851,
        "sender_full_name": "scottmcm",
        "timestamp": 1623210173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> I personally find shuffle to be a term I'd automatically assume a more regular meaning for (intuition may give the right answer), while swizzle is a term I would expect to have a more unusual specialized meaning (intuition may give the wrong answer).</p>",
        "id": 242236288,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623343691
    },
    {
        "content": "<p>I've also occasionally seen both used with different meanings (lanes vs bits within lanes).</p>",
        "id": 242236422,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623343786
    },
    {
        "content": "<p>And I've also seen swizzle used to mean something <em>completely</em> different (a reversible transformation of bits, such as xor with a constant).</p>",
        "id": 242236530,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623343822
    },
    {
        "content": "<p>I think my concern here is that people might expect \"shuffle\" to mean \"randomize these\".</p>",
        "id": 242238175,
        "sender_full_name": "Jubilee",
        "timestamp": 1623344503
    },
    {
        "content": "<p>I agree that shuffle is somewhat more \"natural\" but I expect more collisions due to that.<br>\nI think more people will view swizzle as pure \"term of art\".<br>\nI'm OK with either though because unlike String vs. StrBuf, where I feel we definitely made the wrong choice and it should've been StrBuf :^), it doesn't feel to me like there's a purely \"obvious\" choice, because there's no super consistent background here, not in Rust or elsewhere. Lotta variation.</p>",
        "id": 242248296,
        "sender_full_name": "Jubilee",
        "timestamp": 1623348942
    },
    {
        "content": "<p>Well, if we get a special syntax form of it, we'll all be calling it swizzle syntax, not shuffle syntax.<br>\nBy convention.</p>",
        "id": 242248605,
        "sender_full_name": "Jubilee",
        "timestamp": 1623349077
    },
    {
        "content": "<p>But that might be distinct, functionally, in some way, from the functions. Though as I noted:</p>\n<blockquote>\n<p>...it's too bad we don't have IndexGet.<br>\nThen swizzle could just be indicing with an array.</p>\n</blockquote>",
        "id": 242248643,
        "sender_full_name": "Jubilee",
        "timestamp": 1623349083
    },
    {
        "content": "<p>Yeah I vote swizzle. The fact that it's slightly weird <em>is the benefit</em> here. People should pause a moment and see \"what do they mean by that exactly?\"</p>",
        "id": 242254010,
        "sender_full_name": "Lokathor",
        "timestamp": 1623351467
    },
    {
        "content": "<p>For clarity, I was <em>not</em> arguing that shuffle was the better term or that swizzle wasn't. I was just providing some background from my own exposure to the two terms, insofar as one feels like it has some semantics attached and the other doesn't.</p>",
        "id": 242377711,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623432695
    },
    {
        "content": "<p>I was more trying to make the case for \"we should use shuffle if and only if we match what people will expect for shuffle; we should use swizzle if we want people to have to learn what we mean by that and not make any assumptions\".</p>",
        "id": 242377816,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623432737
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/shuffle.20naming/near/242238175\">said</a>:</p>\n<blockquote>\n<p>I think my concern here is that people might expect \"shuffle\" to mean \"randomize these\".</p>\n</blockquote>\n<p>I would expect that to be called \"random_shuffle\", insofar as a random shuffle is a shuffle but a shuffle isn't necessarily a random shuffle.</p>",
        "id": 242377955,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623432810
    },
    {
        "content": "<p>Well, in my experience with <code>shuffle</code>, people incorrectly assume the result must be a permutation of the input vector and that no duplicating/ignoring input vector elements is allowed. I think going with <code>swizzle</code> may be better because people are likely to not make that incorrect assumption.</p>",
        "id": 242380258,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1623433894
    },
    {
        "content": "<p>I mean there's always <code>tbl</code>. &lt;_&lt;;</p>",
        "id": 242409492,
        "sender_full_name": "Jubilee",
        "timestamp": 1623449139
    },
    {
        "content": "<p>You're kind of joking, I think, but it really is basically a LUT</p>",
        "id": 242409622,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1623449211
    },
    {
        "content": "<p><code>fn lut</code> pffthaha</p>",
        "id": 242409820,
        "sender_full_name": "Jubilee",
        "timestamp": 1623449352
    }
]