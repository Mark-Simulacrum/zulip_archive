[
    {
        "content": "<p>Agenda is here, meeting starts in ~50 minutes. <a href=\"https://hackmd.io/kYH3ozJ_Q1yCwIiAHeKRBA\">https://hackmd.io/kYH3ozJ_Q1yCwIiAHeKRBA</a></p>",
        "id": 211551072,
        "sender_full_name": "Jubilee",
        "timestamp": 1601327469
    },
    {
        "content": "<p>Shall we meet?</p>",
        "id": 211555860,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601330357
    },
    {
        "content": "<p>yup!</p>",
        "id": 211555943,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601330404
    },
    {
        "content": "<p>Hi everyone give a wa-- oh.</p>",
        "id": 211556101,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330504
    },
    {
        "content": "<p>&lt;_&lt;;;</p>",
        "id": 211556137,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330522
    },
    {
        "content": "<p>The announcement post is approved, so I can just give it a squash then can ping to have it merged in</p>",
        "id": 211556209,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601330548
    },
    {
        "content": "<p>Hm, I thought <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> was here!<br>\nAlso, good.</p>",
        "id": 211556242,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330573
    },
    {
        "content": "<p>Just commented on the ops issue, so they're around here somewhere...</p>",
        "id": 211556294,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601330608
    },
    {
        "content": "<p>Let's get this show on the road. <span aria-label=\"car\" class=\"emoji emoji-1f697\" role=\"img\" title=\"car\">:car:</span>  So, it was mentioned that we have... two repos and this might be confusing!</p>",
        "id": 211556326,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330625
    },
    {
        "content": "<p>hi hi, lost track of the time with the dog</p>",
        "id": 211556401,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330657
    },
    {
        "content": "<p>no problem</p>",
        "id": 211556411,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601330667
    },
    {
        "content": "<p>s'all good, I almost missed because I was pouring coffee. &lt;_&lt;</p>",
        "id": 211556415,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330670
    },
    {
        "content": "<p>So we'd like to just work from the <code>stdsimd</code> repo?</p>",
        "id": 211556425,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601330678
    },
    {
        "content": "<p>~how ironic~</p>",
        "id": 211556429,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330680
    },
    {
        "content": "<p>yeah that's probably better</p>",
        "id": 211556448,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330697
    },
    {
        "content": "<p>I have no objections to condensing the repos</p>",
        "id": 211556453,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601330698
    },
    {
        "content": "<p>Well, here's my question I guess: will we not want a separate repo for book/docs/etc. that go beyond stdsimd? Or are those close enough that we're just going \"eh why not\"?</p>",
        "id": 211556492,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330726
    },
    {
        "content": "<p>I think that documentation can be a combination of \"rustdoc\" and \"mdbook on github pages\", both of which fit into one repo.</p>",
        "id": 211556577,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330774
    },
    {
        "content": "<p>Mmkay.</p>",
        "id": 211556614,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330800
    },
    {
        "content": "<p>and so far i put in a beginner's article that's just a markdown file sitting there, which we can put in a book later when we have the time</p>",
        "id": 211556623,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330810
    },
    {
        "content": "<p>I was thinking that would be worth keeping separate, because we'll be pulling it in as a submodule into <code>rust-lang</code></p>",
        "id": 211556628,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601330815
    },
    {
        "content": "<p>Hmm, that raises a good point.</p>",
        "id": 211556641,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330825
    },
    {
        "content": "<p>so as i understand it, a git sub-module just points at a secondary repo and a specific commit in a specific branch, right?</p>",
        "id": 211556683,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330867
    },
    {
        "content": "<p>I think if we view stdsimd as a repo eventually for absorption by rust-lang/rust then it's a little dicey to put secondary content in.<br>\nYeah but when you compile rustc by default you will pull those submodules in.</p>",
        "id": 211556695,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330880
    },
    {
        "content": "<p>it's http packets we could not be sending.</p>",
        "id": 211556750,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330893
    },
    {
        "content": "<p>Yep, it's also \"unrelated\" commits to track</p>",
        "id": 211556784,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601330925
    },
    {
        "content": "<p>maybe (technical) docs belong in stdsimd, but draft RFCs and other project group administrative stuff goes in the project group repo?</p>",
        "id": 211556787,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601330929
    },
    {
        "content": "<p>i think that stdsimd will probably eternally live as its own repo and be pulled in periodically. For example, i don't think <code>stdarch</code> would ever get merged into rust-lang/rust itself</p>",
        "id": 211556789,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330931
    },
    {
        "content": "<p>every so often the stdarch submodule just gets updated, same as libm and a few others</p>",
        "id": 211556832,
        "sender_full_name": "Lokathor",
        "timestamp": 1601330963
    },
    {
        "content": "<p>Mmm.<br>\nAdministratrivia going into the project group repo sounds OK.</p>",
        "id": 211556858,
        "sender_full_name": "Jubilee",
        "timestamp": 1601330989
    },
    {
        "content": "<p>yeah I agree that stdsimd will remain after the duration of the project group. the project group repo can be archived/stay unused after that</p>",
        "id": 211556912,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331006
    },
    {
        "content": "<p>Maybe we leave the project repo as a stub for now saying we're currently working in <code>stdsimd</code> so any issues related to it go there?</p>",
        "id": 211556933,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331024
    },
    {
        "content": "<p>Yeah, I think we want to still do most of our work directly there.</p>",
        "id": 211556965,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331050
    },
    {
        "content": "<p>yeah that's best. I think until we have enough in stdsimd that we're wasting people's download bandwidth we should keep it simple. If we need to we can make a simd-docs repo</p>",
        "id": 211556996,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331069
    },
    {
        "content": "<p>especially rn.<br>\nSo I think that's resolved? <strong>Eventually</strong> we'll use the project-group repo.</p>",
        "id": 211557031,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331091
    },
    {
        "content": "<p>Sounds good!</p>",
        "id": 211557125,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331142
    },
    {
        "content": "<p>So, CI!</p>",
        "id": 211557129,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331145
    },
    {
        "content": "<p>Here's where it's at with Travis: <a href=\"https://github.com/rust-lang/stdsimd/pull/3/checks?check_run_id=1175967652\">https://github.com/rust-lang/stdsimd/pull/3/checks?check_run_id=1175967652</a></p>",
        "id": 211557153,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331164
    },
    {
        "content": "<p>so,<br>\n1) aarch64 always has neon.<br>\n2) x86_64 always has sse2</p>",
        "id": 211557263,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331233
    },
    {
        "content": "<p>looks good. i think jubilee said that there's some more we cna do</p>",
        "id": 211557264,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331236
    },
    {
        "content": "<p>i think the fine detail there is that x86_64 always <em>has access to</em> sse/sse2 but in rare contexts you want to not use it</p>",
        "id": 211557345,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331273
    },
    {
        "content": "<p>So... are we requiring people to add more data to a compiler invocation to enable features that are accessible by default?</p>",
        "id": 211557415,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331317
    },
    {
        "content": "<p>I think it doesn't matter, cfg!(target_feature = \"sse2\") should return true even if you don't actually specify it</p>",
        "id": 211557434,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331331
    },
    {
        "content": "<p>the built in targets that rust ships are with sse/sse2, but you could use a custom target to have x86_64 as your arch but not have sse/sse2 enabled for that custom profile</p>",
        "id": 211557479,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331363
    },
    {
        "content": "<p>Well a custom target can chew its own. &lt;_&lt; Okay obviously we're going to want to have a test suite for these assumptions, but that's beyond the initial CI. For now, it looks fine.</p>",
        "id": 211557556,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331400
    },
    {
        "content": "<p>but also i think we have some soundness issues with x86_64 without sse/sse2 enabled because they change the call ABI and the standard library is pre-built with them on and so calling the standard library is UB, which is why you'd have to use a fully custom target profile with a custom build of core/alloc/std</p>",
        "id": 211557590,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331428
    },
    {
        "content": "<p>yeah I'm ok with just testing standard arches with added features for now</p>",
        "id": 211557591,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331428
    },
    {
        "content": "<p>yeaaaah.</p>",
        "id": 211557619,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331453
    },
    {
        "content": "<p>It sounds like we may as well leave them for now</p>",
        "id": 211557621,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331453
    },
    {
        "content": "<p>i don't see arm32 and i don't see, uh, s390x or whatever that other one was</p>",
        "id": 211557627,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331455
    },
    {
        "content": "<p>Ah yes, <code>s390x</code> appears to plain not even work <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 211557657,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331482
    },
    {
        "content": "<p>:)</p>",
        "id": 211557699,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331489
    },
    {
        "content": "<p>does travis actually run these on hardware or is it virtualized?</p>",
        "id": 211557714,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331504
    },
    {
        "content": "<p>aarch64 has real hardware if set properly</p>",
        "id": 211557730,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331516
    },
    {
        "content": "<p>like do they have some system/390 server?</p>",
        "id": 211557732,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331520
    },
    {
        "content": "<p>s390x too.</p>",
        "id": 211557738,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331527
    },
    {
        "content": "<p>ok that's good to know</p>",
        "id": 211557742,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331531
    },
    {
        "content": "<p>tests weren't passing on packed_simd for 390x, either.</p>",
        "id": 211557751,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331536
    },
    {
        "content": "<p>we should do a wasm32 build, and we should do an i586 build</p>",
        "id": 211557765,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331546
    },
    {
        "content": "<p>Ahh so we could do <code>arm32</code>? I'll give it a go! The only references to it I found were an old Ruby issue</p>",
        "id": 211557772,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331551
    },
    {
        "content": "<p>I don't know about arm32</p>",
        "id": 211557781,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331560
    },
    {
        "content": "<p>Let's file adding more arches as an issue and merge this for now?</p>",
        "id": 211557813,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331590
    },
    {
        "content": "<p>it's probably fine if armhf actually runs on aarch32</p>",
        "id": 211557819,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331594
    },
    {
        "content": "<p>We can do <code>i686</code> and <code>i586</code> on Windows out-of-the-box</p>",
        "id": 211557853,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331604
    },
    {
        "content": "<p>i think if you set an aarch64 chip as the host and then do the proper cross-build steps within the run you can cross-compile and cross-run arm code in aarch64. that can be a later issue</p>",
        "id": 211557877,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331614
    },
    {
        "content": "<p>Yeah, aarch64 targets have an aarch32 execution mode.</p>",
        "id": 211557897,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331643
    },
    {
        "content": "<p>let's get i586 and wasm32 into the initial PR, that should be minimal extra work</p>",
        "id": 211557903,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331652
    },
    {
        "content": "<p>That sounds fine.</p>",
        "id": 211557921,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331668
    },
    {
        "content": "<p>and i586 specifically is the one that spits out the most trouble</p>",
        "id": 211557930,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331675
    },
    {
        "content": "<p>Can do <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 211557938,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601331685
    },
    {
        "content": "<p>SO, core::ops, question came up about test suites, etc.</p>",
        "id": 211558044,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331758
    },
    {
        "content": "<p>i liked having both the basic integration tests and also the larger tests of actual programs doing things</p>",
        "id": 211558108,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331814
    },
    {
        "content": "<p>that sounds good to me as well</p>",
        "id": 211558130,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331831
    },
    {
        "content": "<p>is there a good way to test that a function panics?</p>",
        "id": 211558217,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331865
    },
    {
        "content": "<p><code>#[should_panic]</code></p>",
        "id": 211558239,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331886
    },
    {
        "content": "<p>uh, there's an attri</p>",
        "id": 211558248,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331890
    },
    {
        "content": "<p>yeah</p>",
        "id": 211558250,
        "sender_full_name": "Lokathor",
        "timestamp": 1601331891
    },
    {
        "content": "<p>oh awesome, that's that</p>",
        "id": 211558322,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601331956
    },
    {
        "content": "<p>And yeah, that's fine by me. I like super-essential functionality to be Even Closer, often, which is probably why the tests wound up macro'd like that.</p>",
        "id": 211558370,
        "sender_full_name": "Jubilee",
        "timestamp": 1601331967
    },
    {
        "content": "<p>Even Closer?</p>",
        "id": 211558418,
        "sender_full_name": "Lokathor",
        "timestamp": 1601332021
    },
    {
        "content": "<p>Rust does let you put tests in the same file!</p>",
        "id": 211558448,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332044
    },
    {
        "content": "<p>But as we've mentioned before macros in general are something we want to be cautious about since multiple layers of macros are increasingly hard to work with.</p>",
        "id": 211558460,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332058
    },
    {
        "content": "<p>I think a potential option would be something proc-macro-like</p>",
        "id": 211558543,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601332101
    },
    {
        "content": "<p>Well I think that <em>one</em> concept is that <code>tests/</code> module tests focus on the outward API of the crate, while interior unit tests can check private details</p>",
        "id": 211558546,
        "sender_full_name": "Lokathor",
        "timestamp": 1601332104
    },
    {
        "content": "<p>Correct.</p>",
        "id": 211558574,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332120
    },
    {
        "content": "<p>And yeah, as Lokathor said, we do want to use macros in tests At All. :P</p>",
        "id": 211558664,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332186
    },
    {
        "content": "<p>The core::ops PR itself is largely good, i might have a few notes, but i think if we finish CI, rebase the core::ops pr for that (if necessary), and then merge that, then <em>that alone</em> would be useful enough to get <code>core::simd</code> going as a sub-module and allow people to use it on nightly</p>",
        "id": 211558720,
        "sender_full_name": "Lokathor",
        "timestamp": 1601332205
    },
    {
        "content": "<p>it may be excessively complicated but a proc macro might be more helpful for validating semantics (f32x4 should be an f32 with 4 lanes and do f32 things) with less macro noise</p>",
        "id": 211558735,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601332214
    },
    {
        "content": "<p>resolution: look good to me? &lt;_&lt;</p>",
        "id": 211558749,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332226
    },
    {
        "content": "<p>I'd be interested in hearing that idea at our next meeting :^)</p>",
        "id": 211558779,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332252
    },
    {
        "content": "<p>Which will be same time next week? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 211558813,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601332274
    },
    {
        "content": "<p>works for me</p>",
        "id": 211558821,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601332280
    },
    {
        "content": "<p>yeah sounds good</p>",
        "id": 211558827,
        "sender_full_name": "Lokathor",
        "timestamp": 1601332282
    },
    {
        "content": "<p>Next week's meeting agenda: <a href=\"https://hackmd.io/koVzlGQ0QsWqn1iwLf-Wyg\">https://hackmd.io/koVzlGQ0QsWqn1iwLf-Wyg</a></p>",
        "id": 211558868,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332321
    },
    {
        "content": "<p>I'll get <span aria-label=\"coffee\" class=\"emoji emoji-2615\" role=\"img\" title=\"coffee\">:coffee:</span> going, add some targets to the CI PR and then merge it in and ping in the <code>core::ops</code> PR?</p>",
        "id": 211558915,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601332325
    },
    {
        "content": "<p>I liked \"agenad\"</p>",
        "id": 211558947,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601332345
    },
    {
        "content": "<p>You didn't see anything.  <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 211559001,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332382
    },
    {
        "content": "<p>Thanks for coordinating <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span>! So organized :D</p>",
        "id": 211559147,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1601332476
    },
    {
        "content": "<p>yes, thank you!</p>",
        "id": 211559179,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1601332504
    },
    {
        "content": "<p>multan dankon</p>",
        "id": 211559290,
        "sender_full_name": "Lokathor",
        "timestamp": 1601332569
    },
    {
        "content": "<p><span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I think I put all my points in my ability to organize digital space at the cost of all my points in organizing physical space.</p>",
        "id": 211559457,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332714
    },
    {
        "content": "<p>And thank you for putting this together in the first place / being here~<br>\nSee everyone next week and/or in the issues/PRs!</p>",
        "id": 211559532,
        "sender_full_name": "Jubilee",
        "timestamp": 1601332763
    }
]