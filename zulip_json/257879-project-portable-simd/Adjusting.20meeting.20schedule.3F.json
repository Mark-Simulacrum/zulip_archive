[
    {
        "content": "<p>Last Monday meeting our meeting was deferred a bit after our intended time, do we need to redo finding a time, or should we set a biweekly schedule, or?<br>\nI should note that last week we were kinda waiting on <a href=\"https://github.com/rust-lang/rust/pull/80652\">https://github.com/rust-lang/rust/pull/80652</a> which has been held up, alas.</p>",
        "id": 224802622,
        "sender_full_name": "Jubilee",
        "timestamp": 1612218528
    },
    {
        "content": "<p>Crater started though!</p>",
        "id": 224802688,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612218564
    },
    {
        "content": "<p>I was busy today and noticed no one else said anything so...</p>",
        "id": 224802812,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612218607
    },
    {
        "content": "<p>I would like to get moving forward with some of the masks-related things. Should we reach out to the const-generics team with our specific problem with bitmasks?</p>",
        "id": 224802926,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612218660
    },
    {
        "content": "<p>The somewhat grody boundary condition? Yes, please. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 224804357,
        "sender_full_name": "Jubilee",
        "timestamp": 1612219342
    },
    {
        "content": "<p>Cool, I'll write something up later today</p>",
        "id": 224805502,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612220083
    },
    {
        "content": "<p>That said, while I tagged this for nomination, I think we more or less came to a conclusion async, unless there's something that needs to be brought up. <a href=\"https://github.com/rust-lang/stdsimd/issues/56\">https://github.com/rust-lang/stdsimd/issues/56</a></p>",
        "id": 224806188,
        "sender_full_name": "Jubilee",
        "timestamp": 1612220511
    },
    {
        "content": "<p>Agreed. And perhaps we should come to a more broad conclusion, like \"default operations avoid branching if there's a sane way to not branch\"</p>",
        "id": 224806335,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612220588
    },
    {
        "content": "<p>I think that we want to avoid anything that tastes too much of promising specific instructions, as usual, but \"our code should be branchless where sensible\" seems entirely reasonable.</p>",
        "id": 224938751,
        "sender_full_name": "Jubilee",
        "timestamp": 1612301048
    },
    {
        "content": "<p>What special handling does WASM SIMD need? I don't know too much about it but it seems cool to deploy a whole graphical based Rust app to a website and have it go brrr with the SIMD</p>",
        "id": 224947013,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305152
    },
    {
        "content": "<p>WASM simd is actually extremely simple.  You have a vector of 128 bits and you can do the fundamentals SIMD operations on it</p>",
        "id": 224947469,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612305412
    },
    {
        "content": "<p>The API is probably smaller than stdsimd's will be</p>",
        "id": 224947513,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612305446
    },
    {
        "content": "<p>Hmmm - I guess I'd like to see an example of code that can be both compiled for my laptop and for WASM with SIMD.</p>",
        "id": 224947614,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305499
    },
    {
        "content": "<p>Anything using stdsimd right now!  LLVM (and I suppose cranelift) can handle it just fine</p>",
        "id": 224947819,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612305619
    },
    {
        "content": "<p>Oh nice.</p>",
        "id": 224948184,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305844
    },
    {
        "content": "<p>...Err, why is cranelift desirable? I get that it's a different compiler but - what is the upside from making another LLVM?</p>",
        "id": 224948218,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305878
    },
    {
        "content": "<p>brb reading</p>",
        "id": 224948230,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305893
    },
    {
        "content": "<p>LLVM's goal is to produce very high quality output without much cobsideration for how long it takes to compile (within reason)</p>",
        "id": 224948412,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612305972
    },
    {
        "content": "<p>Oh, debug build times are faster, you use it to target WASM and it allows incremental compilation.<br>\nI thought cargo already had incremental compilation?</p>",
        "id": 224948419,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612305977
    },
    {
        "content": "<p>Oh yeah - Julia keeps getting hammered by compile times in LLVM. They just don't track that.</p>",
        "id": 224948460,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612306003
    },
    {
        "content": "<p>Yeah, cranelift is much lighter weight from what I can tell, not optimized but very fast to compile</p>",
        "id": 224948473,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612306009
    },
    {
        "content": "<p>Cargo has incremental builds but even just rebuilding changed components can be slow depending on the project</p>",
        "id": 224948527,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1612306039
    },
    {
        "content": "<p>Oh gotcha - That makes a cool use case for iterating your design quickly and then unloading rustc when you are deploying. nice.</p>",
        "id": 224948539,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612306045
    },
    {
        "content": "<p>A bunch of the game things are looking at stuff like compiling the engine crates with LLVM, but using cranelift for the custom stuff calling it for good iteration loop times.</p>",
        "id": 224949534,
        "sender_full_name": "scottmcm",
        "timestamp": 1612306667
    },
    {
        "content": "<p>yeah, a lot of the benefit of having cranelift just comes from \"another compilation engine means it has different strengths and weaknesses\".</p>",
        "id": 224951908,
        "sender_full_name": "Jubilee",
        "timestamp": 1612308184
    },
    {
        "content": "<p>as well every so often someone will make a great argument for optimizing something directly in LLVM<br>\nso it's nice nice to have a tangible alternative other than to just say 'we don't do that because ...'</p>",
        "id": 225221479,
        "sender_full_name": "oliver",
        "timestamp": 1612472325
    },
    {
        "content": "<p>Bing bong <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> it's monday againnnnn</p>",
        "id": 225571597,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1612802554
    },
    {
        "content": "<p>indeed.</p>",
        "id": 225585212,
        "sender_full_name": "Jubilee",
        "timestamp": 1612808136
    }
]