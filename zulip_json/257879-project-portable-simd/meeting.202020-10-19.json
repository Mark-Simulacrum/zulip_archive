[
    {
        "content": "<p>Last meeting we said there'd be a meeting this week at about this time. Is that still happening at about this time? or later today in about 2 hours?</p>",
        "id": 213836022,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137152
    },
    {
        "content": "<p>Good question</p>",
        "id": 213836089,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137187
    },
    {
        "content": "<p>So I think regardless of the start time, the thing to talk about is cranelift, or as final fantasy 7 would put it, CRANELIFT</p>",
        "id": 213836377,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137332
    },
    {
        "content": "<p>idk? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 213836440,
        "sender_full_name": "oliver",
        "timestamp": 1603137363
    },
    {
        "content": "<p>I am in Europe, so I will definitely be sleeping in 2 hours.</p>",
        "id": 213836514,
        "sender_full_name": "bjorn3",
        "timestamp": 1603137389
    },
    {
        "content": "<p>Let's chat a bit now then, and people can show up and talk later too if they need to</p>",
        "id": 213836560,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137409
    },
    {
        "content": "<p>I do think we agreed on the earlier time</p>",
        "id": 213836561,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137410
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> how are you</p>",
        "id": 213836587,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137424
    },
    {
        "content": "<p>also hello to <span class=\"user-mention\" data-user-id=\"281739\">@oliver</span></p>",
        "id": 213836602,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137433
    },
    {
        "content": "<p>I am good and you?</p>",
        "id": 213836651,
        "sender_full_name": "bjorn3",
        "timestamp": 1603137453
    },
    {
        "content": "<p>like 3% grumpy that cranelift got off its butt and started to get serious about being a rust backend now instead of like, 6 months from now</p>",
        "id": 213836755,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137491
    },
    {
        "content": "<p>So, I guess, do we have any concrete info on <em>where</em> the llvm/cranelift split is supposed to go?</p>",
        "id": 213837087,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/meeting.202020-10-19/near/213836755\">said</a>:</p>\n<blockquote>\n<p>like 3% grumpy that cranelift got off its butt and started to get serious about being a rust backend now instead of like, 6 months from now</p>\n</blockquote>\n<p>not prepared?</p>",
        "id": 213837161,
        "sender_full_name": "oliver",
        "timestamp": 1603137663
    },
    {
        "content": "<p>I don't think we have any good info, but the best method seems to be handle it when lowering, I guess to MIR</p>",
        "id": 213837267,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137703
    },
    {
        "content": "<p>as opposed to conditional compilation or anything like that</p>",
        "id": 213837352,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> The first issue is that making the crate work with cranelift is (maybe?) a hard block on the crate developing further</p>",
        "id": 213837387,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137746
    },
    {
        "content": "<p>the second issue is that no one knows <em>specifically</em> how we're to make the crate work with cranelift</p>",
        "id": 213837425,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137767
    },
    {
        "content": "<p>I think we also generally agreed that we can continue with llvm intrinsics for now?</p>",
        "id": 213837454,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137781
    },
    {
        "content": "<p>I would like the split to not be at source level (conditional compilation) and not at llvm intrinsic level.</p>",
        "id": 213837468,
        "sender_full_name": "bjorn3",
        "timestamp": 1603137789
    },
    {
        "content": "<p>Oh I was not aware that we had agreed on that</p>",
        "id": 213837478,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137793
    },
    {
        "content": "<p>well I think we generally agreed that it was possible</p>",
        "id": 213837541,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137829
    },
    {
        "content": "<p>As caleb said, the best proposal I've seen is that vectors would become a part of MIR</p>",
        "id": 213837560,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137835
    },
    {
        "content": "<p>And then each system that lowers MIR to a codegen IR would just naturally handle vectors in however fits that codegen IR</p>",
        "id": 213837630,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137853
    },
    {
        "content": "<p>Cranelift has native support for vector types. At least the 128bit sizes are almost completely implemented in the new style backends for WASM SIMD support.</p>",
        "id": 213837660,
        "sender_full_name": "bjorn3",
        "timestamp": 1603137869
    },
    {
        "content": "<p>oh very good</p>",
        "id": 213837708,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137891
    },
    {
        "content": "<p>more specifically it seems like rustc would query the backend for support, and if it isn't supported, it would implement it in plain rust at the MIR level</p>",
        "id": 213837713,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603137893
    },
    {
        "content": "<p>it wouldn't work otherwise</p>",
        "id": 213837801,
        "sender_full_name": "oliver",
        "timestamp": 1603137940
    },
    {
        "content": "<p><em>however</em> there's a big catch to all of this: it's \"just\" as complex as doing a whole Major Change Proposal on the compiler, \"just\"</p>",
        "id": 213837829,
        "sender_full_name": "Lokathor",
        "timestamp": 1603137959
    },
    {
        "content": "<p>This querying could also happen in rustc_codegen_ssa. I don't use that crate for MIR codegen though.</p>",
        "id": 213837968,
        "sender_full_name": "bjorn3",
        "timestamp": 1603137998
    },
    {
        "content": "<p>fortunately it's all internal, unstable interfaces</p>",
        "id": 213837972,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138000
    },
    {
        "content": "<p>So, I guess we talk to T-compiler about fixing MIR?</p>",
        "id": 213838431,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138205
    },
    {
        "content": "<p>I can handle that</p>",
        "id": 213838522,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138252
    },
    {
        "content": "<p>What's next to talk about?</p>",
        "id": 213838547,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138264
    },
    {
        "content": "<p>how are you?</p>",
        "id": 213838723,
        "sender_full_name": "oliver",
        "timestamp": 1603138336
    },
    {
        "content": "<p>Haven't had the time to focus on programming lately, but keeping busy sorta</p>",
        "id": 213838801,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138379
    },
    {
        "content": "<p>I haven't spent any time on stdsimd in the past week or so...</p>",
        "id": 213838862,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138412
    },
    {
        "content": "<p>Yeah that's why I <em>thought</em> that we were blocked on the cranelift situation. no emails about new commits every hour</p>",
        "id": 213838898,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138438
    },
    {
        "content": "<p>I started the initial mask/comparison stuff but haven't finished it</p>",
        "id": 213839042,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138499
    },
    {
        "content": "<p>but I don't think it's blocked on cranelift</p>",
        "id": 213839057,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138506
    },
    {
        "content": "<p>So, you <em>get</em> masks using comparison ops, you <em>combine</em> masks using bitwise operator overloading, and you <em>use</em> masks via the <code>blend</code> method to combine <code>true_path</code> and <code>false_path</code> values into a <code>blended_value</code>?</p>",
        "id": 213839142,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138561
    },
    {
        "content": "<p>more or less, I think so</p>",
        "id": 213839242,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138597
    },
    {
        "content": "<p>Does WASM support all those operations natively? If so Cranelift should too.</p>",
        "id": 213839296,
        "sender_full_name": "bjorn3",
        "timestamp": 1603138626
    },
    {
        "content": "<p>I believe it does, at least to some extent. I'm not actually sure about blending</p>",
        "id": 213839342,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138651
    },
    {
        "content": "<p>blending can be done via standard bit manipulations even if there's no native blending instruction</p>",
        "id": 213839402,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138679
    },
    {
        "content": "<p>yeah, you can do it in like two instructions</p>",
        "id": 213839598,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138771
    },
    {
        "content": "<p>here we go, <code>r = a ^ ((a ^ b) &amp; mask)</code></p>",
        "id": 213839617,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138782
    },
    {
        "content": "<p>wasm doesn't make any distinction between different vector types (float, integer, etc) so I think it's assumed the compiler will optimize it correctly</p>",
        "id": 213839753,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138820
    },
    {
        "content": "<p><a href=\"https://docs.rs/cranelift-codegen/0.66.0/cranelift_codegen/ir/trait.InstBuilder.html#method.vselect\">https://docs.rs/cranelift-codegen/0.66.0/cranelift_codegen/ir/trait.InstBuilder.html#method.vselect</a></p>\n<blockquote>\n<p>Select lanes from x or y controlled by the lanes of the boolean vector c.</p>\n</blockquote>\n<p>Is blending the same as this clif instruction?</p>",
        "id": 213839757,
        "sender_full_name": "bjorn3",
        "timestamp": 1603138822
    },
    {
        "content": "<p>yes</p>",
        "id": 213839800,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138841
    },
    {
        "content": "<p>well the idea of a blend is, given a list of \"a or b\" (encoded as bools), and an <code>a</code> and <code>b</code>, make <code>c</code> using the correct selection in each lane</p>",
        "id": 213839860,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138866
    },
    {
        "content": "<p>Blend works lanewise not bitwise, right?</p>",
        "id": 213839878,
        "sender_full_name": "bjorn3",
        "timestamp": 1603138871
    },
    {
        "content": "<p>so yeah</p>",
        "id": 213839885,
        "sender_full_name": "Lokathor",
        "timestamp": 1603138875
    },
    {
        "content": "<p>yep</p>",
        "id": 213839890,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138877
    },
    {
        "content": "<p>well there are two types of blends, constant and variable, the variable blend is the more interesting one I think</p>",
        "id": 213839944,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603138899
    },
    {
        "content": "<p><code>vselect</code> takes a variable bool vector</p>",
        "id": 213840076,
        "sender_full_name": "bjorn3",
        "timestamp": 1603138950
    },
    {
        "content": "<p>yeah, on intel there's not even direct blend ops until the higher feature levels</p>",
        "id": 213840993,
        "sender_full_name": "Lokathor",
        "timestamp": 1603139341
    },
    {
        "content": "<p>at the minimum feature levels you just have to emulate it using the bit ops</p>",
        "id": 213841018,
        "sender_full_name": "Lokathor",
        "timestamp": 1603139353
    },
    {
        "content": "<p><a href=\"#narrow/stream/131828-t-compiler/topic/Portable.20SIMD.20Compiler.20Support\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Portable.20SIMD.20Compiler.20Support</a></p>",
        "id": 213847745,
        "sender_full_name": "Lokathor",
        "timestamp": 1603142399
    },
    {
        "content": "<p>Well put</p>",
        "id": 213848064,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1603142534
    },
    {
        "content": "<p>Would y'all like me to update the calendar with the new time of <time datetime=\"2020-10-19T19:30:00Z\">2020-10-20T05:30:00+10:00</time> ?</p>",
        "id": 213861654,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603152156
    },
    {
        "content": "<p>Or is it <time datetime=\"2020-10-19T20:00:00Z\">2020-10-20T06:00:00+10:00</time> ?</p>",
        "id": 213861677,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603152181
    },
    {
        "content": "<p>I think it was the latter, sorry <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> I was on teething baby duty this morning so missed everything <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 213861728,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603152217
    },
    {
        "content": "<p>no worries!</p>\n<p>the second one is probably a better fit.</p>",
        "id": 213864054,
        "sender_full_name": "Lokathor",
        "timestamp": 1603154143
    },
    {
        "content": "<p>Ah, sorry for missing things.</p>",
        "id": 213865306,
        "sender_full_name": "Jubilee",
        "timestamp": 1603155465
    },
    {
        "content": "<p>Done!</p>",
        "id": 214270857,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603424891
    }
]