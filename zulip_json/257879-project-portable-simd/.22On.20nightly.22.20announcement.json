[
    {
        "content": "<p>That's fine.</p>",
        "id": 261564497,
        "sender_full_name": "Jubilee",
        "timestamp": 1637013007
    },
    {
        "content": "<p>let me know if you're happy with it and i'll open the PR</p>",
        "id": 261564873,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637013209
    },
    {
        "content": "<p>Did you catch what I added at the tail?</p>",
        "id": 261564980,
        "sender_full_name": "Jubilee",
        "timestamp": 1637013257
    },
    {
        "content": "<p>oh, about the macro?</p>",
        "id": 261565125,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637013333
    },
    {
        "content": "<p>yeah, that's more accurate</p>",
        "id": 261565132,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637013337
    },
    {
        "content": "<p>the post with the link wasn't included in this topic, so reposting: <a href=\"https://hackmd.io/VGGIcV3VQjeUPcKwXZ1TBA\">https://hackmd.io/VGGIcV3VQjeUPcKwXZ1TBA</a></p>",
        "id": 261565787,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637013621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> I made the example SSE2 function more correct. :^)</p>",
        "id": 261570606,
        "sender_full_name": "Jubilee",
        "timestamp": 1637016081
    },
    {
        "content": "<p>I don't think the function is unsafe, it would fail to compile anywhere else</p>",
        "id": 261570789,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016144
    },
    {
        "content": "<p>I think you can just do <code>#[cfg(target_arch = \"x86_64\")]</code> at the top though</p>",
        "id": 261570869,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016162
    },
    {
        "content": "<p>well okay. ;^)</p>",
        "id": 261570881,
        "sender_full_name": "Jubilee",
        "timestamp": 1637016164
    },
    {
        "content": "<p>that would be correct</p>",
        "id": 261570915,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016171
    },
    {
        "content": "<p>ooh yes.</p>",
        "id": 261570922,
        "sender_full_name": "Jubilee",
        "timestamp": 1637016172
    },
    {
        "content": "<p>and equally illustrative</p>",
        "id": 261570937,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016175
    },
    {
        "content": "<p>I wouldn't even add that <code>i686</code> thing because I think rust is wrong to include SSE2 on i686, if it does</p>",
        "id": 261571336,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016280
    },
    {
        "content": "<p>also you would need to change the <code>use std::arch</code></p>",
        "id": 261571366,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016296
    },
    {
        "content": "<p>Fair.</p>",
        "id": 261571367,
        "sender_full_name": "Jubilee",
        "timestamp": 1637016297
    },
    {
        "content": "<p>I do insist on including the SAFETY note to promote good coding style. :^)</p>",
        "id": 261571555,
        "sender_full_name": "Jubilee",
        "timestamp": 1637016402
    },
    {
        "content": "<p>yeah that's fine with me</p>",
        "id": 261571658,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637016480
    },
    {
        "content": "<p>Yeah, I think we are good! ^_^ Thank you!</p>",
        "id": 261572901,
        "sender_full_name": "Jubilee",
        "timestamp": 1637017036
    },
    {
        "content": "<p>proabbly just <code>#[cfg(target_feature = \"sse2\")]</code> is what i'd do for something like this. People use x86_64 and turn off sse2 support sometimes.</p>",
        "id": 261573214,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637017216
    },
    {
        "content": "<p>Oh lmao the comments</p>",
        "id": 261573224,
        "sender_full_name": "Jubilee",
        "timestamp": 1637017218
    },
    {
        "content": "<p>portable_simd group, brought down by environment variables</p>",
        "id": 261573309,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637017245
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/257879-project-portable-simd/topic/.22On.20nightly.22.20announcement/near/261573214\">said</a>:</p>\n<blockquote>\n<p>proabbly just <code>#[cfg(target_feature = \"sse2\")]</code> is what i'd do for something like this. People use x86_64 and turn off sse2 support sometimes.</p>\n</blockquote>\n<p>sobbing noises.</p>",
        "id": 261573678,
        "sender_full_name": "Jubilee",
        "timestamp": 1637017486
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=8afd26ee75ba0ebc2b38ea1690759dc0\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=8afd26ee75ba0ebc2b38ea1690759dc0</a> is how i'd write it for real</p>",
        "id": 261574117,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637017783
    },
    {
        "content": "<p>If Caleb wants to make it that bad I am game. :3</p>",
        "id": 261574305,
        "sender_full_name": "Jubilee",
        "timestamp": 1637017841
    },
    {
        "content": "<p>I just wanted to make it a <strong>minimum</strong> amount of pedantically correct.</p>",
        "id": 261574321,
        "sender_full_name": "Jubilee",
        "timestamp": 1637017853
    },
    {
        "content": "<p>i mean the point of ours is it's better, so having the other one be realistically bad seems fair.</p>",
        "id": 261574365,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637017877
    },
    {
        "content": "<p>but yeah, idrc</p>",
        "id": 261574379,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637017882
    },
    {
        "content": "<p>oh, should be _mm_loadu_ps also</p>",
        "id": 261575035,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018253
    },
    {
        "content": "<p>so <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=dd8d9ce444e1f86808037cc3fb6c219e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=dd8d9ce444e1f86808037cc3fb6c219e</a>. but that should be fixed either way. load_ps requires alignment.</p>",
        "id": 261575138,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018300
    },
    {
        "content": "<p>omg</p>",
        "id": 261575191,
        "sender_full_name": "Jubilee",
        "timestamp": 1637018334
    },
    {
        "content": "<p>if you werent convinced std::simd is worth having before...</p>",
        "id": 261575270,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018382
    },
    {
        "content": "<p>fuckin'</p>",
        "id": 261575407,
        "sender_full_name": "Jubilee",
        "timestamp": 1637018435
    },
    {
        "content": "<p>i also think we should change the #[cfg(target_arch = \"x86_64\")] to #[cfg(target_feature = \"sse2\")] even if we leave everything else (and ignore 32 bit processors), since people might copy the example...</p>",
        "id": 261575615,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018550
    },
    {
        "content": "<p>but</p>",
        "id": 261575618,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018552
    },
    {
        "content": "<p>Hmm okay.</p>",
        "id": 261575634,
        "sender_full_name": "Jubilee",
        "timestamp": 1637018567
    },
    {
        "content": "<p>err, target_feature, not target_arch</p>",
        "id": 261575689,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637018601
    },
    {
        "content": "<p>right.</p>",
        "id": 261575832,
        "sender_full_name": "Jubilee",
        "timestamp": 1637018670
    },
    {
        "content": "<p>There. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 261576262,
        "sender_full_name": "Jubilee",
        "timestamp": 1637018974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312331\">@Caleb Zulawski</span> いい？</p>",
        "id": 261576432,
        "sender_full_name": "Jubilee",
        "timestamp": 1637019071
    },
    {
        "content": "<p>I'm not at my computer right now but I read it over and it looks good, just 2 comments</p>",
        "id": 261585834,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637025513
    },
    {
        "content": "<p>In the std::arch example, to be most correct I think you would want target_arch cfgs in addition to the target_feature</p>",
        "id": 261585889,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637025600
    },
    {
        "content": "<p>Technically the sse2 should be enough but that might be more correct?</p>",
        "id": 261585952,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637025639
    },
    {
        "content": "<p>The other thing, at the end I think \"extension ISA\" should just be \"CPU feature\" or something like that, since the rust verbiage is \"feature\"</p>",
        "id": 261585988,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637025678
    },
    {
        "content": "<p>read through it, generally lgtm</p>",
        "id": 261586094,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637025773
    },
    {
        "content": "<p>Fair.</p>",
        "id": 261586265,
        "sender_full_name": "Jubilee",
        "timestamp": 1637025922
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg(all(</span>\n<span class=\"cp\">    target_feature = </span><span class=\"s\">\"sse2\"</span><span class=\"cp\">,</span>\n<span class=\"cp\">    any(target_arch = </span><span class=\"s\">\"x86\"</span><span class=\"cp\">,</span>\n<span class=\"cp\">        target_arch = </span><span class=\"s\">\"x86_64\"</span><span class=\"cp\">)</span>\n<span class=\"cp\">))]</span><span class=\"w\"></span>\n</code></pre></div>\n<p>this feels mean almost <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 261586402,
        "sender_full_name": "Jubilee",
        "timestamp": 1637026032
    },
    {
        "content": "<p>sse2 is enough, you don't need the other cfgs, but it might be more clear</p>",
        "id": 261586512,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637026122
    },
    {
        "content": "<p>Unless you happen to have another arch that defines an sse2 feature lol</p>",
        "id": 261586532,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637026145
    },
    {
        "content": "<p>it's not up to the arches, it's up to the rust project, this came up with the simd128 feature for wasm</p>",
        "id": 261586559,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637026170
    },
    {
        "content": "<p>nice!</p>",
        "id": 261586577,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637026189
    },
    {
        "content": "<p>i thought it was left up to llvm's feature flags</p>",
        "id": 261586623,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637026208
    },
    {
        "content": "<p>Yeah, I thought it was LLVM too</p>",
        "id": 261586641,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637026219
    },
    {
        "content": "<p>we already have some that don't map 1:1</p>",
        "id": 261586674,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637026254
    },
    {
        "content": "<p>not that i know what those are</p>",
        "id": 261586683,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1637026259
    },
    {
        "content": "<p>umm, actually target features can collide <a href=\"https://rust.godbolt.org/z/o6P5Wfvox\">https://rust.godbolt.org/z/o6P5Wfvox</a> ...aes is a feature for both aarch64 and x86_64</p>",
        "id": 261587374,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637026917
    },
    {
        "content": "<p>so, pedantically, we probably need the x86/x86_64 cfgs</p>",
        "id": 261587604,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637027121
    },
    {
        "content": "<p>gdi</p>",
        "id": 261587673,
        "sender_full_name": "Jubilee",
        "timestamp": 1637027167
    },
    {
        "content": "<p>hmm, to make the stdarch code simpler, maybe we should only support x86_64 and have a comment saying x86 support can be added too if you feel like it</p>",
        "id": 261587901,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637027405
    },
    {
        "content": "<p>nah. I am past remorse.</p>",
        "id": 261587970,
        "sender_full_name": "Jubilee",
        "timestamp": 1637027486
    },
    {
        "content": "<p>\"you were reluctant only 24 minutes ago\" IT'S TIME TO ROCK</p>",
        "id": 261587986,
        "sender_full_name": "Jubilee",
        "timestamp": 1637027512
    },
    {
        "content": "<p>the sse2 cfg can have a comment saying something like \"there are x86_64 targets that don't include sse2, such as the linux kernel target\"</p>",
        "id": 261588065,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637027571
    },
    {
        "content": "<p>x86_64_unknown_none_linuxkernel</p>",
        "id": 261588166,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637027667
    },
    {
        "content": "<p>Nah, that's TMI imo.</p>",
        "id": 261588219,
        "sender_full_name": "Jubilee",
        "timestamp": 1637027740
    },
    {
        "content": "<p>k</p>",
        "id": 261588226,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637027758
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/906\">https://github.com/rust-lang/blog.rust-lang.org/pull/906</a> Opened PR.</p>",
        "id": 261590566,
        "sender_full_name": "Jubilee",
        "timestamp": 1637029974
    },
    {
        "content": "<p>Thanks for opening it!</p>",
        "id": 261592099,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637031537
    },
    {
        "content": "<p>yay!</p>",
        "id": 261592122,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637031559
    },
    {
        "content": "<p>I imagine inside rust is the right place, but a few things made it to the main blog that I wouldn't expect</p>",
        "id": 261592143,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637031599
    },
    {
        "content": "<p>from another discussion:</p>\n<blockquote>\n<p>Should this post be on the main blog, or on Inside Rust? Generally speaking, the way we've treated things historically is that the main blog is aimed at every user of Rust, and Inside Rust is for folks interested in Rust development, similar to other venues, like the users forum vs internals forum.</p>\n</blockquote>",
        "id": 261592300,
        "sender_full_name": "Jubilee",
        "timestamp": 1637031699
    },
    {
        "content": "<p>Yeah, I was thinking that our post wasn't really geared towards internal users necessarily</p>",
        "id": 261593974,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1637033761
    },
    {
        "content": "<p>i'm probably planning on telling phoronix about it in hopes they'll publish an article, so I think that probably qualifies as interesting to a wider audience</p>",
        "id": 261594067,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1637033867
    }
]