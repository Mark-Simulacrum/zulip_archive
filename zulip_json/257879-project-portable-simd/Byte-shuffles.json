[
    {
        "content": "<p>So in <a href=\"https://github.com/rust-lang/stdsimd/issues/106#issuecomment-851881475\">https://github.com/rust-lang/stdsimd/issues/106#issuecomment-851881475</a> I realized that we actually probably do want to have a specialized byte shuffle function, per the reasoning there: we don't want to do a byteswap, therefore we don't want to cast to NE bytes and risk having the same shuffle indices point to different bytes based on endianness.</p>",
        "id": 240958438,
        "sender_full_name": "Jubilee",
        "timestamp": 1622560932
    },
    {
        "content": "<p>I was kind of thinking that if you want to do a byte shuffle, you just need to account for whatever endianness you're using.  If you want to have a portable byte shuffle you need to use <code>to_{le,be}_bytes</code> (which we will eventually have)</p>",
        "id": 240958835,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622561092
    },
    {
        "content": "<p>That winds up doing a byteswap tho'.</p>",
        "id": 240958891,
        "sender_full_name": "Jubilee",
        "timestamp": 1622561119
    },
    {
        "content": "<p>I would be shocked if llvm doesn't combine the byte swap and the shuffle since they're both just shuffles</p>",
        "id": 240958980,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622561158
    },
    {
        "content": "<p>LLVM has to do very specific things to handle big-endian vectors on Neon. I am prepared to be shocked. <a href=\"https://llvm.org/docs/BigEndianNEON.html#id10\">https://llvm.org/docs/BigEndianNEON.html#id10</a></p>",
        "id": 240959113,
        "sender_full_name": "Jubilee",
        "timestamp": 1622561203
    },
    {
        "content": "<p>Right but the byte swap itself is just a shuffle (and it's the same shuffle regardless of endianness)</p>",
        "id": 240959382,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622561303
    },
    {
        "content": "<p>As far as optimization goes it will just be merging two <code>vtbl</code> into one, or something similar</p>",
        "id": 240959554,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622561369
    },
    {
        "content": "<p>I'd like to see proof that LLVM generates bad asm</p>",
        "id": 240959713,
        "sender_full_name": "Caleb Zulawski",
        "timestamp": 1622561423
    },
    {
        "content": "<p>hmm.</p>",
        "id": 240960841,
        "sender_full_name": "Jubilee",
        "timestamp": 1622561894
    }
]