[
    {
        "content": "<p>Hello, I just tried to use <code>[profile.doc]</code> and I got the following message:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: /home/imperio/rust/gtk-rs/cairo/sys/Cargo.toml: profile `doc` is deprecated and has no effect\n</code></pre></div>\n<p>If it's deprecated, how can I set features when rustdoc is running?</p>",
        "id": 217927199,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606331766
    },
    {
        "content": "<p>Also, why was it deprecated?</p>",
        "id": 217927223,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606331781
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span></p>",
        "id": 217927272,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606331824
    },
    {
        "content": "<p>It never worked, and there wasn't much of a motivation to support it.  Particularly, in the past, rustdoc did not support any of the <code>-C</code> flags, and considering that it doesn't do codegen anyways, they aren't usually needed.</p>",
        "id": 217927762,
        "sender_full_name": "Eric Huss",
        "timestamp": 1606332087
    },
    {
        "content": "<p>Makes sens I guess</p>",
        "id": 217928457,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606332459
    },
    {
        "content": "<p>but then, how do I set features to be given when running rustdoc?</p>",
        "id": 217928488,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606332476
    },
    {
        "content": "<p>I supposed that this would work:</p>\n<div class=\"codehilite\"><pre><span></span><code>[build]\nrustdocflags = [&quot;--features&quot;, &quot;x11&quot;]\n</code></pre></div>\n<p>but it doesn't either:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: /home/imperio/rust/gtk-rs/cairo/sys/Cargo.toml: unused manifest key: build\n</code></pre></div>",
        "id": 217928587,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606332510
    },
    {
        "content": "<p>should I add a new <code>[rustdoc]</code> entry which would allow that?</p>",
        "id": 217928636,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606332536
    },
    {
        "content": "<p>I'm not sure I understand what you are trying to do.  There isn't a way to change the default features per-subcommand.  You can create an alias in a config file like this:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[alias]</span>\n<span class=\"n\">xdoc</span> <span class=\"o\">=</span> <span class=\"s\">\"doc --features x11\"</span>\n</code></pre></div>",
        "id": 217930186,
        "sender_full_name": "Eric Huss",
        "timestamp": 1606333393
    },
    {
        "content": "<p>Well, you can have default features for rustc, so why not for rustdoc after all?</p>",
        "id": 217930630,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333602
    },
    {
        "content": "<p>and in my case, it's because we want all the features to be enabled when running <code>cargo doc</code> on gtk-rs</p>",
        "id": 217930671,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333633
    },
    {
        "content": "<p>we can't \"by default\" because it's very unlikely for you to have the last version installed, but since docs don't care about that, they can still document them</p>",
        "id": 217930710,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333669
    },
    {
        "content": "<p>before that, we had a \"dox\" feature that enabled everything</p>",
        "id": 217930723,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333680
    },
    {
        "content": "<p>we removed it to replace it with <code>cfg(doc)</code>, to realize afterwards that there was no way to have default features for rustdoc</p>",
        "id": 217930824,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333706
    },
    {
        "content": "<p>so, would it be possible to add that back? I'm even willing to write the PR to do so :)</p>",
        "id": 217930874,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333736
    },
    {
        "content": "<p>I just don't really know what is the \"best way\" to allow it</p>",
        "id": 217930906,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333757
    },
    {
        "content": "<p>having a <code>[rustdoc]</code> section which only allows <code>features</code> maybe? So that we can add more things afterwards</p>",
        "id": 217930958,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333792
    },
    {
        "content": "<p>or to re-enable <code>target.doc</code>?</p>",
        "id": 217930972,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333800
    },
    {
        "content": "<p>what do you think?</p>",
        "id": 217931020,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606333806
    },
    {
        "content": "<p>Does <code>cfg(doc)</code> not work because of dependencies?  Why doesn't <code>#[cfg(any(doc, feature=\"x11\"))]</code> work?</p>",
        "id": 217931841,
        "sender_full_name": "Eric Huss",
        "timestamp": 1606334254
    },
    {
        "content": "<p>it doesn't because it requires you to activate the x11 feature to have the dependency</p>",
        "id": 217932187,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606334403
    },
    {
        "content": "<p>(which is the x11 crate)</p>",
        "id": 217932215,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606334415
    },
    {
        "content": "<p>meaning that when we run rustdoc, we want to have the x11 dependency too</p>",
        "id": 217932303,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606334467
    },
    {
        "content": "<p>(and not pass \"--features x11\" by hand every time)</p>",
        "id": 217932981,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606334852
    },
    {
        "content": "<p>or maybe just create a <code>rustdoc-features</code> field? :3</p>",
        "id": 217935007,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606335943
    },
    {
        "content": "<p>I don't really know what a good design would be here.  There have been a few requests for making the default feature set a little more dynamic (whether running <code>cargo doc</code>, or <code>cargo test</code>, or based on the profile, or specific <code>--target</code> flags, or specific Cargo targets like <code>--bin</code>), but I don't really know what that would look like or what problems that could cause.  I think for now, an alias is probably the best option, or  drive Cargo from another build tool where you can define different tasks.</p>",
        "id": 217938634,
        "sender_full_name": "Eric Huss",
        "timestamp": 1606337975
    },
    {
        "content": "<p>sorry but I can't accept that as an answer :-/</p>",
        "id": 217939310,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338305
    },
    {
        "content": "<p>what do you think of the <code>[rustdoc]</code> section?</p>",
        "id": 217939342,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338334
    },
    {
        "content": "<p>we can enable it only on nightly if you want</p>",
        "id": 217939357,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338348
    },
    {
        "content": "<p>(well, actually only enabling it on nightly would be a good idea until we're sure it's the way to go)</p>",
        "id": 217939641,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338488
    },
    {
        "content": "<p>but we need a way to do that in any case</p>",
        "id": 217939652,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338497
    },
    {
        "content": "<p>that actually would even allow to remove the <a href=\"http://docs.rs\">docs.rs</a> specific setting too</p>",
        "id": 217939682,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606338524
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> </p>\n<p>It's blocking all development on gtk-rs so any (even temporary) solution would be very appreciated. :)</p>",
        "id": 217981005,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606383392
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> too :)</p>",
        "id": 217997350,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606394831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> I'm confused - this feature never existed, right? Why is it suddenly blocking all development?</p>",
        "id": 218002736,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606398158
    },
    {
        "content": "<p>Because we realized that we could rely on <code>doc(cfg)</code> to render all items instead of having an extra feature to handle it</p>",
        "id": 218002931,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398299
    },
    {
        "content": "<p>looking like this:</p>",
        "id": 218002934,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398303
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#[cfg(any(feature = &quot;v3_16&quot;, all(not(doctest), doc)))]\n</code></pre></div>",
        "id": 218002969,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398325
    },
    {
        "content": "<p>but then we realized for one of the crate that there was no way to specify dependencies for rustdoc runs specifically, which is problematic for optional crates</p>",
        "id": 218003009,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398359
    },
    {
        "content": "<p>and at this point, I think it's normal to have this in cargo</p>",
        "id": 218003066,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398375
    },
    {
        "content": "<p>Well, I do think it would be nice feature, but I'm not sure it makes sense to block a gtk-rs release on designing and implementing a new part of cargo <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218003274,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606398493
    },
    {
        "content": "<p>It is quite a big switch and we're not very happy about spending so much time on it to suddenly revert. And it's not blocking the release (well, not directly), just all developments :)</p>",
        "id": 218003574,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398651
    },
    {
        "content": "<p>you could put it in a separate branch so you can come back to it maybe</p>",
        "id": 218003879,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606398810
    },
    {
        "content": "<p>I don't think it's fair to the cargo team to say 'we suddenly ran into a problem and we need sweeping changes to cargo'</p>",
        "id": 218003902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606398825
    },
    {
        "content": "<p>Unfortunately no. Don't forget gtk-rs is mostly automatically generated. We made the switch in the generator. :)</p>",
        "id": 218003921,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398842
    },
    {
        "content": "<p>Well, I proposed to them to implement myself a temporary fix so gtk-rs could move on and at least we could have a base to discuss on</p>",
        "id": 218004004,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398881
    },
    {
        "content": "<p>and it would remain nightly-only until everyone agrees</p>",
        "id": 218004025,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398899
    },
    {
        "content": "<p>I don't it's unfair? But maybe I'm wrong here</p>",
        "id": 218004045,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1606398916
    }
]