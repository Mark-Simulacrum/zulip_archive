[
    {
        "content": "<p>I'm trying to work on <a href=\"https://github.com/rust-lang/cargo/issues/8749\">https://github.com/rust-lang/cargo/issues/8749</a>. I found that most of this work happens in <a href=\"https://github.com/rust-lang/cargo/blob/27dba04f406a870f00241b53cbda74411cd53c9f/src/cargo/core/compiler/mod.rs#L1161-L1162\">https://github.com/rust-lang/cargo/blob/27dba04f406a870f00241b53cbda74411cd53c9f/src/cargo/core/compiler/mod.rs#L1161-L1162</a>, which runs for every line of stderr. What would be a good approach to take for buffering this across crates? Is there some 'global' state that persists across all invocations of rustc?</p>",
        "id": 220399774,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608311280
    },
    {
        "content": "<p>I did find <code>JobState</code> but I think that's only for a single <code>rustc</code> invocation</p>",
        "id": 220400517,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608311563
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> let me know if you have time to help with this :)</p>",
        "id": 220403026,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608312715
    },
    {
        "content": "<p>mainly I want to unblock <a href=\"https://github.com/rust-lang/rust/pull/77492\">https://github.com/rust-lang/rust/pull/77492</a></p>",
        "id": 220403089,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608312731
    },
    {
        "content": "<p>Are you looking to persist the lines or the count?</p>",
        "id": 220456915,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359284
    },
    {
        "content": "<p>For the lines, I would suggest capturing the output of each crate build into a file somewhere under the target directory, so that they can be \"replayed\" when needed.</p>",
        "id": 220456918,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359312
    },
    {
        "content": "<p>either - preferably the lines but that sounds harder than just preserving the count, so happy to start with the count instead</p>",
        "id": 220456919,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608359317
    },
    {
        "content": "<p>Honestly, I think the lines might be easier, unless there's an obvious place to keep global state.</p>",
        "id": 220456926,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359350
    },
    {
        "content": "<p>Cargo already has some logic for persisting build output and replaying it later.</p>",
        "id": 220456927,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359374
    },
    {
        "content": "<p>I think you'd just need to make that work for individual crates.</p>",
        "id": 220456928,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Help.20with.20collecting.20stderr.20across.20dependencies/near/220456927\">said</a>:</p>\n<blockquote>\n<p>Cargo already has some logic for persisting build output and replaying it later.</p>\n</blockquote>\n<p>oh perfect! where can I find that?</p>",
        "id": 220456929,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608359387
    },
    {
        "content": "<p>/me tries to remember where that lives...</p>",
        "id": 220457084,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359649
    },
    {
        "content": "<p>I remember that there was some careful caching logic to make sure it was safe to just replay the output...</p>",
        "id": 220457102,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359748
    },
    {
        "content": "<p>(I remember partly because there were previously bugs in that logic...)</p>",
        "id": 220457144,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359781
    },
    {
        "content": "<p>I honestly don't know.</p>",
        "id": 220457202,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608359892
    },
    {
        "content": "<p>no problem, I'll find it</p>",
        "id": 220457538,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608360650
    }
]