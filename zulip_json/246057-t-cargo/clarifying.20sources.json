[
    {
        "content": "<p>Apologies in advance if it's not customary for outsiders to just barge in and create a new topic here. I'm unfamiliar with Zulip. I've been stuck on something I want to do with Cargo (as a user), and it's unclear to me whether it's something I'm just completely misunderstanding or whether it's an actual lacking feature in Cargo. People in #beginners on the Rust discord pointed me here.</p>\n<p>I'm struggling to understand how <code>source</code> stanzas are supposed to work in the Cargo config when doing something other than source replacement. Specifically, I currently source-replace <code>source.crates-io</code> with another source <code>source.foo</code>. The latter is of type <code>directory = …</code>, and works exactly like I want it to. What I don't understand (either due to being confused, or, less likely, due to it missing from Cargo) is how I can add <em>another</em> <code>directory = …</code>-type <code>source.bar</code> so that Cargo first looks in <code>source.foo</code>, and if a dependency isn't found there, it goes on and looks in <code>source.bar</code>?</p>",
        "id": 261134485,
        "sender_full_name": "gspr",
        "timestamp": 1636637841
    },
    {
        "content": "<p>I'm quire sure I'm just misunderstanding something somewhere. I'm just trying to do the equivalent of setting <code>PYTHONPATH</code> in Python, or <code>LD_LIBRARY_PATH</code> + <code>-I</code>/<code>-L</code> with GCC, etc. Without altering a given project itself, just say to Cargo \"go look for dependencies here, then here if you didn't find them, then here\". Where there \"here\"s are just local directories.</p>",
        "id": 261136053,
        "sender_full_name": "gspr",
        "timestamp": 1636638615
    },
    {
        "content": "<p>This is not how cargo is normally used. Normally you specify either a dependency from <a href=\"http://crates.io\">crates.io</a> (which will be downloaded automatically), one from a git repo (also downloaded automatically) or a location relative to the current crate (in case you have multiple crates in the same project).</p>",
        "id": 261137108,
        "sender_full_name": "bjorn3",
        "timestamp": 1636639229
    },
    {
        "content": "<p>But seeing as it's very easy to replace <a href=\"http://crates.io\">crates.io</a> with \"just a directory\" (using source replacement of type <code>directory = …</code>), wouldn't it be nice to be able to add more directory sources too?</p>",
        "id": 261137439,
        "sender_full_name": "gspr",
        "timestamp": 1636639409
    },
    {
        "content": "<p>It just seems strange to me that one cannot easily say \"look here for the dependencies of the project being built, Cargo\" without also having to modify the project itself :(</p>",
        "id": 261137548,
        "sender_full_name": "gspr",
        "timestamp": 1636639452
    },
    {
        "content": "<p>(Maybe I'm just strange, but I just don't wanna have code grabbed from the Internet to satisfy my build dependencies. I wanna orchestrate this myself, together with my distro.)</p>",
        "id": 261137621,
        "sender_full_name": "gspr",
        "timestamp": 1636639492
    },
    {
        "content": "<p>I realize the \"get everything from <a href=\"http://crates.io\">crates.io</a>\" is a very convenient default mode of operation, but I'm just confused as to how to opt out of it in a flexible way. All the pieces seem to be there – in particular as <code>directory = …</code>-type sources.</p>",
        "id": 261137687,
        "sender_full_name": "gspr",
        "timestamp": 1636639533
    },
    {
        "content": "<p>Replacing <a href=\"http://crates.io\">crates.io</a> with a directory is meant for vendoring when the build has to take place without an internet connection. You still shouldn't actually modify the dependency source. There are hashes to prevent malicious manipulation from a registry (using the trust on first use principle)</p>",
        "id": 261138888,
        "sender_full_name": "bjorn3",
        "timestamp": 1636640208
    },
    {
        "content": "<p>Ah yeah I didn't mean to modify the dependency source. I meant provide a set of local sources for a given project without having to modify that project's Cargo.toml.</p>",
        "id": 261145186,
        "sender_full_name": "gspr",
        "timestamp": 1636643456
    },
    {
        "content": "<p>One such local source can easily be provided, as I'm doing today, by source-replacing <code>source.crates-io</code> with a new source <code>source.foo</code> of type <code>directory = /some/local/dir</code>. That's working great. But <code>source.foo</code> only has a subset of what <a href=\"http://crates.io\">crates.io</a> has. I wanna provide also <code>source.bar</code>, another local directory, that has <em>another</em> subset. Then I'd like Cargo to look first in <code>source.foo</code> (due to it source-replacing <code>source.crates-io</code>), then in <code>source.bar</code> if it can't find the deps there.</p>",
        "id": 261145380,
        "sender_full_name": "gspr",
        "timestamp": 1636643550
    },
    {
        "content": "<p>(All without having to modify the Cargo.toml of the project I'm building.</p>",
        "id": 261145416,
        "sender_full_name": "gspr",
        "timestamp": 1636643569
    },
    {
        "content": "<p>I believe the current recommendation is to put all your vendored libraries in one directory.</p>",
        "id": 261146720,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644167
    },
    {
        "content": "<p>We do not have a concept of \"source fall back\". Sources are a specific place to look for code, not a chain of if then statements.<br>\nThis position has disadvantages. But coincidentally it's been very helpful in protecting against dependency confusion attacks.</p>",
        "id": 261146968,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644297
    },
    {
        "content": "<p>Hmm, so there's no way to have a <em>set</em> of directories that make up local sources?</p>",
        "id": 261147116,
        "sender_full_name": "gspr",
        "timestamp": 1636644363
    },
    {
        "content": "<p>Without firing up a full-blown local registry, I mean. Which seems a bit overkill :(</p>",
        "id": 261147202,
        "sender_full_name": "gspr",
        "timestamp": 1636644389
    },
    {
        "content": "<p>It would, at a minimum, be nice to be able to explicitly tell Cargo that <em>this time</em> I want you to also look in this directory for dependencies. That should aleviate any dependency confusion concerns, right?</p>",
        "id": 261147290,
        "sender_full_name": "gspr",
        "timestamp": 1636644435
    },
    {
        "content": "<blockquote>\n<p>Hmm, so there's no way to have a set of directories that make up local sources?</p>\n</blockquote>\n<p>Not that I can think of. But other more creative people may come around.</p>",
        "id": 261147341,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644461
    },
    {
        "content": "<p>(I don't mean to be barging in here telling people how Cargo <em>should</em> behave. I just feel I must be overlooking something if the tooling can't be directed to do something conceptually so simple.)</p>",
        "id": 261147350,
        "sender_full_name": "gspr",
        "timestamp": 1636644466
    },
    {
        "content": "<p>It is entirely possible that this conversation will lead to an RFC to add this behavior.</p>",
        "id": 261147441,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644502
    },
    {
        "content": "<p>:P</p>",
        "id": 261147450,
        "sender_full_name": "gspr",
        "timestamp": 1636644508
    },
    {
        "content": "<p>I did file an issue (<a href=\"https://github.com/rust-lang/cargo/issues/10045\">https://github.com/rust-lang/cargo/issues/10045</a>), but I wasn't sure whether I was just misunderstanding, so I thought I'd have an interactive conversation about it.</p>",
        "id": 261147497,
        "sender_full_name": "gspr",
        "timestamp": 1636644539
    },
    {
        "content": "<p>It does seem pretty clear that the functionality just isn't present. And I do totally understand prioritizing the convenience of <a href=\"http://crates.io\">crates.io</a>. But it does seem like a missing feature to me.</p>",
        "id": 261147558,
        "sender_full_name": "gspr",
        "timestamp": 1636644574
    },
    {
        "content": "<p>We are not great about having responsive discussions in issues. Sorry.</p>",
        "id": 261147582,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644584
    },
    {
        "content": "<p>No worries, I wasn't expecting that at all. To be honest I think GH issues too often get bogged down in endless discussions.</p>",
        "id": 261147670,
        "sender_full_name": "gspr",
        "timestamp": 1636644612
    },
    {
        "content": "<p>To elaborate a bit on what I'm trying to do here: I'm perhaps old-fashioned, but I still like the idea of distro-provided, locally installed dependencies. I'm quite new to Rust, but in the half year or so I've been learning, I've found it surprisingly workable to just configure Cargo to run offline and source-replace <code>source.crates-io</code> with a source with <code>directory = /path/to/where/debian/puts/crates</code>. I realize this is a pretty strange corner use case, but this kind of setup would become orders of magnitude more flexible and liveable if one could specify a priority list of sources (possibly requiring an explicit opt-in to avoid dependency confusion attacks).</p>",
        "id": 261148042,
        "sender_full_name": "gspr",
        "timestamp": 1636644806
    },
    {
        "content": "<p>And besides my admittedly rather strange desires, I wouldn't be surprised if organizations run their own quite limited registries that individual developers sometimes wanna add just a few crates to. It would be extremely convenient to just be able to drop a few more directories into ~/.cargo/config.toml</p>",
        "id": 261148172,
        "sender_full_name": "gspr",
        "timestamp": 1636644860
    },
    {
        "content": "<p>We have a lot of experience with what works with Cargo, but that also can make us a little blind to what doesn't work.<br>\nA discussion to convince us (with ^ prospective) to change this will need to explain the bigger problem being solved, and why this is a good solution. Like EL5 why this is not an X-Y Problem. (Looks like you started that while I was typing.)</p>",
        "id": 261148181,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644864
    },
    {
        "content": "<p>So you want to be able to use the directory registry provided by Debian, and a manually curated list from another directory registry?</p>",
        "id": 261148350,
        "sender_full_name": "Eh2406",
        "timestamp": 1636644948
    },
    {
        "content": "<p>Yeah. Or, more generally, just a manually curated list of prioritized directory registries (that Debian would be one such directory registry is just one example use case).</p>",
        "id": 261148969,
        "sender_full_name": "gspr",
        "timestamp": 1636645245
    },
    {
        "content": "<p>(By the way, I'm a bit new to the terminology. Is a \"directory registry\" the same as a \"source with a <code>directory = …</code> key\"? I'm semi-assuming so above)</p>",
        "id": 261149018,
        "sender_full_name": "gspr",
        "timestamp": 1636645280
    },
    {
        "content": "<p>I was intending for them to be equivalent.</p>",
        "id": 261149231,
        "sender_full_name": "Eh2406",
        "timestamp": 1636645392
    },
    {
        "content": "<p>Another use case could an organization which has a centrally managed registry (in place of <a href=\"http://crates.io\">crates.io</a>). It's not unimagineable that people in said organization have to work offline, and could perhaps want to bring in a few single crates from the outside (perhaps obtained from <a href=\"http://crates.io\">crates.io</a> manually, perhaps not) that aren't available in the organization's registry.</p>",
        "id": 261149282,
        "sender_full_name": "gspr",
        "timestamp": 1636645433
    },
    {
        "content": "<p>I suppose all of this can always be solved by setting up extra local registries, but that's a pretty heavyweight solution when one may reasonably just want to tell Cargo \"look in this directory if your default registry doesn't provide what's needed\".</p>",
        "id": 261149509,
        "sender_full_name": "gspr",
        "timestamp": 1636645551
    },
    {
        "content": "<p>It is conceivable, but so far the companies that have worked with us to find solutions have had systems that were far more complicated than that.<br>\nSpeaking of which, <a href=\"https://doc.rust-lang.org/cargo/reference/config.html#patch\">https://doc.rust-lang.org/cargo/reference/config.html#patch</a> can probably be made to work. Not as elegantly but stable today.</p>",
        "id": 261149687,
        "sender_full_name": "Eh2406",
        "timestamp": 1636645648
    },
    {
        "content": "<p>Ahh, I didn't know that <code>[patch]</code> could also be used in Cargo's config (I thought it was <code>Cargo.toml</code> only)</p>",
        "id": 261150318,
        "sender_full_name": "gspr",
        "timestamp": 1636645965
    },
    {
        "content": "<p>That's useful.</p>",
        "id": 261150329,
        "sender_full_name": "gspr",
        "timestamp": 1636645972
    },
    {
        "content": "<p>It's a fairly new feature.</p>",
        "id": 261150382,
        "sender_full_name": "Eh2406",
        "timestamp": 1636646005
    },
    {
        "content": "<p>An intended to be for \"corner cases only\"</p>",
        "id": 261150433,
        "sender_full_name": "Eh2406",
        "timestamp": 1636646029
    },
    {
        "content": "<p>I do realize that many organizations' needs are probably vastly more complicated again. I just feel there should be some intermediate solution between \"run your own registry\" and nothing at all for the simpler versions of this use case.</p>",
        "id": 261150511,
        "sender_full_name": "gspr",
        "timestamp": 1636646049
    },
    {
        "content": "<p>Got it. I'll explore it for sure!</p>",
        "id": 261150535,
        "sender_full_name": "gspr",
        "timestamp": 1636646058
    },
    {
        "content": "<p>I do look forward to hearing the opinions of other members of the team.</p>",
        "id": 261150720,
        "sender_full_name": "Eh2406",
        "timestamp": 1636646158
    },
    {
        "content": "<p>By the way, a stupid question since I'm here anyway: Is there any way to run a \"local registry\" (by which I mean a full-blown registry, but running on localhost) with <code>net.offline = true</code>?</p>",
        "id": 261150809,
        "sender_full_name": "gspr",
        "timestamp": 1636646190
    },
    {
        "content": "<p>Because if I can't wiggle my way out of this corner, I think my next step would be to create some registry that runs locally and essentially overlays a list of priotized directories to emulate what I want.</p>",
        "id": 261150874,
        "sender_full_name": "gspr",
        "timestamp": 1636646224
    },
    {
        "content": "<p>I don't think so. But proposals to make offline more targeted, are definitely worth thinking about.</p>",
        "id": 261151127,
        "sender_full_name": "Eh2406",
        "timestamp": 1636646318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"456876\">gspr</span> <a href=\"#narrow/stream/246057-t-cargo/topic/clarifying.20sources/near/261149282\">said</a>:</p>\n<blockquote>\n<p>Another use case could an organization which has a centrally managed registry (in place of <a href=\"http://crates.io\">crates.io</a>). It's not unimagineable that people in said organization have to work offline, and could perhaps want to bring in a few single crates from the outside (perhaps obtained from <a href=\"http://crates.io\">crates.io</a> manually, perhaps not) that aren't available in the organization's registry.</p>\n</blockquote>\n<p>You can replace just the crates-io registry for offline availability if crates from <a href=\"http://crates.io\">crates.io</a>, but keep another registry for the organization. You probably shouldn't mix them in the same registry.</p>",
        "id": 261159281,
        "sender_full_name": "bjorn3",
        "timestamp": 1636650223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"456876\">@gspr</span> (BTW, barging in and creating a topic is fine <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 261177308,
        "sender_full_name": "nnethercote",
        "timestamp": 1636660095
    }
]