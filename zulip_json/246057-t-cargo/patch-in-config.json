[
    {
        "content": "<p>I'm starting to take advantage of <a href=\"https://github.com/rust-lang/cargo/issues/9269\"><code>patch-in-config</code></a>, and it's looking _very_ promising so far. The biggest pain-point is that the build system I'm working with has to inject patches for _all_ the dependencies it manages, even if the actual Rust crate only declares a dependency on a subset of them. This, in turn leads to unfortunate warnings of the kind:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: Patch `hello_world v0.1.0 (/.../hello_world-0.1.0)` was not used in the crate graph.\nCheck that the patched package version and available features are compatible\nwith the dependency requirements. If the patch has a different version from\nwhat is locked in the Cargo.lock file, run `cargo update` to use the new\nversion. This may also occur with an optional dependency that is not enabled.\n</code></pre></div>\n<p>That warning is _normally_ very much desirable, but in this _particular_ case it isn't. So, I wanted to take the temperature on adding a flag along the lines of <code>allow-unused-patch = [\"hello_world\"]</code> in <code>.cargo/config.toml</code> to suppress the warning for specific dependencies?</p>",
        "id": 243184692,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1624034790
    },
    {
        "content": "<p>It's not feasible to quickly detect the dependency tree and just feed in patches for those?</p>",
        "id": 243277592,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624149849
    },
    {
        "content": "<p>It's not impossible, but somewhat inconvenient. The bigger concern is that it would require that users re-run the \"big\" build system if they added a dependency line to their Cargo.toml so that the patch would get added. If all the patches were there already, they'd be able to stick with just the standard Rust tools.</p>",
        "id": 243311206,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1624208186
    },
    {
        "content": "<p>Ah, I see.</p>",
        "id": 243339959,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624251419
    },
    {
        "content": "<p>(What's the \"big\" build system here?)</p>",
        "id": 243339966,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624251434
    },
    {
        "content": "<p>In any case, I don't see any <em>fundamental</em> reason we couldn't have an option to disable the warning for an unused patch.</p>",
        "id": 243339986,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624251468
    },
    {
        "content": "<p>I think we still need to catch cases where you'd expect it to be used and it isn't, such as a version mismatch. But I imagine that's less of a concern if everything is vendored.</p>",
        "id": 243340032,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624251513
    },
    {
        "content": "<p>It's Amazon's internal build system called Brazil :)</p>",
        "id": 243405636,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1624291814
    },
    {
        "content": "<p>I almost wonder if this is specifically the case of patches _in configs_. I think it's maybe reasonable to say that for patches in <code>Cargo.toml</code> â€” all of them should be used, and that only in the case of a <code>.cargo/config</code> patch might the warning be allowable. What do you think?</p>",
        "id": 243405770,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1624291892
    },
    {
        "content": "<p>Though actually, thinking about it some more, I think it's likely okay in this case to require re-running the \"big\" build system if a dependency is added. There are some other things we'll want to do in that case too, so I can just add \"update patches\" to that. I'll go that route for now and see how far it gets me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 243405901,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1624291950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120054\">@Jon Gjengset</span> I canâ€™t decide if thatâ€™s a really clever or ominous name for your build system. ðŸ™‚</p>",
        "id": 243412430,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1624295129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120054\">Jon Gjengset</span> <a href=\"#narrow/stream/246057-t-cargo/topic/patch-in-config/near/243405770\">said</a>:</p>\n<blockquote>\n<p>I almost wonder if this is specifically the case of patches _in configs_. I think it's maybe reasonable to say that for patches in <code>Cargo.toml</code> â€” all of them should be used, and that only in the case of a <code>.cargo/config</code> patch might the warning be allowable. What do you think?</p>\n</blockquote>\n<p>Yes, I think that's the correct approach. I'd also say that you should still detect version mismatches, and just allow for \"there's no dependency on that crate at all\".</p>",
        "id": 243427055,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624301760
    },
    {
        "content": "<p>I don't see any problem with having an opt-out for the warning, since it isn't fundamentally fatal. It would just change patches from \"patch this dependency\" to \"if I have this as a dependency, patch it\".</p>",
        "id": 243427170,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624301805
    }
]