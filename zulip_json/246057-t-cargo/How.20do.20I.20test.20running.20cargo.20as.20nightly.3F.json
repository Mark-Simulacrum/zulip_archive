[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/cargo/issues/7088\">https://github.com/rust-lang/cargo/issues/7088</a>. I have the following test:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cargo_test]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">rustc_bootstrap_nightly</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">project</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"s\">\"src/main.rs\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"fn main() {}\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"build.rs\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">r</span><span class=\"err\">#</span><span class=\"s\">\"</span>\n<span class=\"s\">            fn main() {</span>\n<span class=\"s\">                println!(\"</span><span class=\"n\">cargo</span>:<span class=\"nc\">rustc</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">RUSTC_BOOTSTRAP</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"s\">\");</span>\n<span class=\"s\">            }</span>\n<span class=\"s\">        \"</span><span class=\"err\">#</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"p\">(</span><span class=\"s\">\"build\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">masquerade_as_nightly_cargo</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">with_stderr_contains</span><span class=\"p\">(</span><span class=\"s\">\"warning: Cannot set `RUSTC_BOOTSTRAP=1` [..]\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">with_status</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This fails with</p>\n<div class=\"codehilite\"><pre><span></span><code>---- build_script_env::rustc_bootstrap_nightly stdout ----\nrunning `/home/joshua/cargo/target/debug/cargo build`\nthread &#39;build_script_env::rustc_bootstrap_nightly&#39; panicked at &#39;\nExpected: execs\n    but: expected to find:\nwarning: Cannot set `RUSTC_BOOTSTRAP=1` [..]\n\ndid not find in output:\n   Compiling foo v0.0.1 (/home/joshua/cargo/target/cit/t0/foo)\n[src/cargo/core/compiler/custom_build.rs:577] nightly_features_allowed() = false\nerror: Cannot set `RUSTC_BOOTSTRAP=1` from build script of `foo v0.0.1 (/home/joshua/cargo/target/cit/t0/foo)`.\n</code></pre></div>\n<p>I don't understand why <code>masquerade_as_nightly_cargo()</code> doesn't tell cargo to allow nightly features. I tried <code>enable_nightly_features()</code> but I think that only works in unit tests since cargo is spawned as a subprocess.</p>",
        "id": 226688273,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613580974
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></p>",
        "id": 226688314,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613580987
    },
    {
        "content": "<p>I added more debugging and the channel is right, just not whether features are enabled:</p>\n<div class=\"codehilite\"><pre><span></span><code>   Compiling foo v0.0.1 (/home/joshua/cargo/target/cit/t1/foo)\n[src/cargo/core/features.rs:715] &amp;channel()[..] = &quot;nightly&quot;\n[src/cargo/core/compiler/custom_build.rs:577] nightly_features_allowed() = false\nerror: Cannot set `RUSTC_BOOTSTRAP=1` from build script of `foo v0.0.1 (/home/joshua/cargo/target/cit/t1/foo)`.\n</code></pre></div>",
        "id": 226689783,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613581517
    },
    {
        "content": "<p>this fixes it, but I'm not sure what other tests it affects:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/src/cargo/core/features.rs b/src/cargo/core/features.rs</span>\n<span class=\"gh\">index 494e33993..9a75a7b7e 100644</span>\n<span class=\"gd\">--- a/src/cargo/core/features.rs</span>\n<span class=\"gi\">+++ b/src/cargo/core/features.rs</span>\n<span class=\"gu\">@@ -712,8 +712,8 @@ pub fn nightly_features_allowed() -&gt; bool {</span>\n     if ENABLE_NIGHTLY_FEATURES.with(|c| c.get()) {\n         return true;\n     }\n<span class=\"gd\">-    match &amp;channel()[..] {</span>\n<span class=\"gd\">-        \"nightly\" | \"dev\" =&gt; NIGHTLY_FEATURES_ALLOWED.with(|c| c.get()),</span>\n<span class=\"gi\">+    match dbg!(&amp;channel()[..]) {</span>\n<span class=\"gi\">+        \"nightly\" | \"dev\" =&gt; true, //NIGHTLY_FEATURES_ALLOWED.with(|c| c.get()),</span>\n         _ =&gt; false,\n     }\n }\n</code></pre></div>",
        "id": 226690730,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613581848
    },
    {
        "content": "<p>also, I want to pass the name of the package (without the <code>(/path/to/name)</code> added), but <code>Rc&lt;Package&gt;</code> doesn't implement <code>Sync</code> so I can't pass it to <code>Work::new</code>. Would you prefer I add a new argument to <code>parse</code> or change the Rc to an Arc?</p>",
        "id": 226693481,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613582970
    }
]