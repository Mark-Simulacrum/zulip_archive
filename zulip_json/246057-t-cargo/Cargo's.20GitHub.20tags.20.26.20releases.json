[
    {
        "content": "<p>Hey everyone, I was wondering if there's a particular reason why cargo's tag on GitHub is <code>0.x.y</code> instead of <code>1.x.y</code>, and if there was interest in trying to sync this to match with the rust repo? It would also be nice to sync up the GitHub releases. <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> has already written an automation for it in triagebot, so all that's needed for that is adding support for cargo's changelog format.</p>\n<ul>\n<li>Cargo's tags: <a href=\"https://github.com/rust-lang/cargo/tags\">https://github.com/rust-lang/cargo/tags</a></li>\n<li>Triagebot releases: <a href=\"https://github.com/rust-lang/triagebot/wiki/GitHub-Releases\">https://github.com/rust-lang/triagebot/wiki/GitHub-Releases</a></li>\n</ul>",
        "id": 214809774,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603875985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> synchronizing would be interesting, but cargo has <code>0.x.y</code> because that's its version number</p>",
        "id": 214816282,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603880149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Not anymore, I remember that being the case but for example this is the output of <code>cargo -vV</code> on nightly.</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo 1.49.0-nightly (79b397d72 2020-10-15)\nrelease: 1.49.0\ncommit-hash: 79b397d72c557eb6444a2ba0dc00a211a226a35a\ncommit-date: 2020-10-15\n</code></pre></div>",
        "id": 214816377,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603880195
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/blob/358ee548c792f730faf14963066f9c742f658f48/Cargo.toml#L3\">https://github.com/rust-lang/cargo/blob/358ee548c792f730faf14963066f9c742f658f48/Cargo.toml#L3</a></p>",
        "id": 214816432,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603880226
    },
    {
        "content": "<p>Huh</p>",
        "id": 214816490,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603880268
    },
    {
        "content": "<p>my understanding of the cargo versioning situation is \"mess\"</p>",
        "id": 214816523,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603880284
    },
    {
        "content": "<p>cargo-the-library is 0.x since it makes API breaking changes on every release, but cargo-the-binary is a stable interface with a version that matches rustc's</p>",
        "id": 214823179,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1603884323
    },
    {
        "content": "<p>Sure that makes sense, though it's a bit confusing that the repository is tracking the library version over the binary. Given the changelog itself tracks the binary version. <a href=\"https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md\">https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md</a></p>",
        "id": 214825412,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603885868
    },
    {
        "content": "<p>An option would be to create both tags. It's up to the release team, since they're the ones who do it. It definitely sounds useful.</p>",
        "id": 214864892,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603903727
    },
    {
        "content": "<p>Release team (really, Pietro or I) likely doesn't care. Tagging both sounds not horrible -- just one more step really -- so all it would mostly take is an update to <a href=\"http://forge.rust-lang.org\">forge.rust-lang.org</a></p>",
        "id": 214865198,
        "sender_full_name": "simulacrum",
        "timestamp": 1603903840
    },
    {
        "content": "<p>I'm not sure how that'd look in the UI</p>",
        "id": 214867191,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603904629
    },
    {
        "content": "<p>I'd like this for relnotes, as releases in GitHub's API have timestamps for created, published, and updated in their response, where as with tags you have to a send additional request to get the commit date, and there's no ordering to tags.</p>",
        "id": 214867554,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603904764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I mean both could be tagged, but only one is the \"release\" tag that gets an actual release. So you would only see the other if you look at tags specifically</p>",
        "id": 214867702,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1603904845
    },
    {
        "content": "<p>We could always have rust-1.x.y tags that specify \"what version of Cargo was in rust 1.x.y\".</p>",
        "id": 214889773,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603915193
    }
]