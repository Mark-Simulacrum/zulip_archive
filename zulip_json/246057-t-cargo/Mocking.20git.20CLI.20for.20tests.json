[
    {
        "content": "<p>Hey guys, and I think <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> in particular.<br>\nI'd like to test <code>git</code> CLI retries with a mock like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg(test)]</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">cargo_util</span>::<span class=\"n\">ProcessBuilder</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[cfg(not(test))]</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">MockProcessBuilder</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">ProcessBuilder</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">fetch_with_git_cli</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">ProcessBuilder</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.).</span><span class=\"n\">foo</span><span class=\"p\">().</span><span class=\"n\">bar</span><span class=\"p\">().</span><span class=\"n\">exec_with_output</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">tests</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">super</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">MockProcessBuilder</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Do you think this is acceptable? I would really like to test this because it will be very easy to introduce regressions to this functionality unless this is tested.<br>\nThe other option is that I could add one more one more <code>bin</code> target to <code>Cargo.toml</code> and make the method configurable with the git binary path to test it with the binary that outputs whatever we want in our tests.</p>\n<p>The first option is much more lightweight, however, I don't know if it's acceptable here and considered idiomatic at all?</p>",
        "id": 252343846,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1631036804
    },
    {
        "content": "<p>This refers to <a href=\"https://github.com/rust-lang/cargo/pull/9870\">https://github.com/rust-lang/cargo/pull/9870</a></p>",
        "id": 252343893,
        "sender_full_name": "std::Veetaha",
        "timestamp": 1631036825
    },
    {
        "content": "<p>I would set up a test in <code>testsuite</code> that would exercise the real <code>git</code> against one of the real-world conditions that cause a retry.</p>",
        "id": 252348560,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631038691
    },
    {
        "content": "<p>If necessary, you can set up a temporary server that has whatever behavior is desired.</p>",
        "id": 252348633,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631038722
    },
    {
        "content": "<p>Search through the tests for <code>TcpListener</code> for some examples of where we do that.</p>",
        "id": 252348696,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631038748
    },
    {
        "content": "<p><code>testsuite/git.rs</code> and <code>testsuite/git_auth.rs</code> have some examples for git specifically.</p>",
        "id": 252348761,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631038779
    }
]