[
    {
        "content": "<p>Hi, I found a Executer in the cargo core codebase. I would like to create a executer to use some special features of my linux distro. How can I do that. How can I change the executer used?</p>",
        "id": 208678872,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598962709
    },
    {
        "content": "<p>I am not sure what you mean by \"Executer\". There are env vars for setting a runner or as a way to wrap rustc. Is that what you mean?</p>",
        "id": 208687230,
        "sender_full_name": "Eh2406",
        "timestamp": 1598967222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span>  I mean this Executer trait: <a href=\"https://github.com/rust-lang/cargo/blob/master/src/cargo/core/compiler/mod.rs#L65-L88\">https://github.com/rust-lang/cargo/blob/master/src/cargo/core/compiler/mod.rs#L65-L88</a></p>",
        "id": 208697544,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598971683
    },
    {
        "content": "<p>Where is this env var? did not find anything about that var yet.</p>",
        "id": 208697766,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598971770
    },
    {
        "content": "<p>Note that <code>Executor</code> â‰  <code>Executer</code></p>",
        "id": 208697971,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1598971834
    },
    {
        "content": "<p>It might be a good idea if you expand on what you want to do. <a href=\"http://xyproblem.info/\">X-Y problem</a></p>",
        "id": 208698043,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1598971864
    },
    {
        "content": "<p>Yeah, so I want to use the nix build system to build cargo projects. For this I would need to call nix, instead of rustc. What I hope to archive is that nix can build rust software much faster, as it then can cache crates, instead of rebuilding everything everytime</p>",
        "id": 208698399,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598972005
    },
    {
        "content": "<p><code>RUSTC_WRAPPER</code> or looking up the other I had inmined ...</p>",
        "id": 208698447,
        "sender_full_name": "Eh2406",
        "timestamp": 1598972021
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/config.html#targettriplerunner\">https://doc.rust-lang.org/cargo/reference/config.html#targettriplerunner</a></p>",
        "id": 208698705,
        "sender_full_name": "Eh2406",
        "timestamp": 1598972124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208698447\">said</a>:</p>\n<blockquote>\n<p><code>RUSTC_WRAPPER</code> or looking up the other I had inmined ...</p>\n</blockquote>\n<p>This could work, but I have to generate some files for nix to work. unsure if cargo wants to support better nix building?</p>",
        "id": 208698935,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598972195
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208698705\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/config.html#targettriplerunner\">https://doc.rust-lang.org/cargo/reference/config.html#targettriplerunner</a></p>\n</blockquote>\n<p>This will not help, as I want to change the build steps, not the execute steps</p>",
        "id": 208699191,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598972299
    },
    {
        "content": "<blockquote>\n<p>unsure if cargo wants to support better nix building?</p>\n</blockquote>\n<p>In general yes, but what we want to merge depends on a lot of details. like if it is infrastructure that can be reused by other build systems, and maintenance berden and sutch.</p>",
        "id": 208699623,
        "sender_full_name": "Eh2406",
        "timestamp": 1598972490
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208699623\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>unsure if cargo wants to support better nix building?</p>\n</blockquote>\n<p>In general yes, but what we want to merge depends on a lot of details. like if it is infrastructure that can be reused by other build systems, and maintenance berden and sutch.</p>\n</blockquote>\n<p>sounds good. But then I'm back to my question from the beginnig :-)<br>\nIs there something yet for not using <code>DefaultExecutor</code>?<br>\nThis would help me to just try to implement something, and if I get it to work, we can talk about upstreaming</p>",
        "id": 208700043,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598972642
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208698447\">said</a>:</p>\n<blockquote>\n<p><code>RUSTC_WRAPPER</code> or looking up the other I had inmined ...</p>\n</blockquote>\n<p>Seems like that does not help, as is only executed for files in the own crate?<br>\nI will have to figure out how cargo builds dependency crates</p>",
        "id": 208701399,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598973143
    },
    {
        "content": "<p>I think there is a new one for that problem, it may still be unstable. I am looking for it...</p>",
        "id": 208701857,
        "sender_full_name": "Eh2406",
        "timestamp": 1598973325
    },
    {
        "content": "<p><code>RUSTC_WORKSPACE_WRAPPER</code> cc <a href=\"https://github.com/rust-lang/cargo/pull/7533\">https://github.com/rust-lang/cargo/pull/7533</a></p>",
        "id": 208703787,
        "sender_full_name": "Eh2406",
        "timestamp": 1598973997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208703787\">said</a>:</p>\n<blockquote>\n<p><code>RUSTC_WORKSPACE_WRAPPER</code> cc <a href=\"https://github.com/rust-lang/cargo/pull/7533\">https://github.com/rust-lang/cargo/pull/7533</a></p>\n</blockquote>\n<p>Thanks. But that would create the need of an external program again</p>",
        "id": 208704693,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598974347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208703787\">said</a>:</p>\n<blockquote>\n<p><code>RUSTC_WORKSPACE_WRAPPER</code> cc <a href=\"https://github.com/rust-lang/cargo/pull/7533\">https://github.com/rust-lang/cargo/pull/7533</a></p>\n</blockquote>\n<p>Seems also wrong. This seems to be for workspaces. I want to change the buildstep for libraries downloaded from <a href=\"http://crates.io\">crates.io</a> (best would be, if I could even stop cargo downloading it)</p>",
        "id": 208705806,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598974758
    },
    {
        "content": "<p>I think <code>RUSTC_WRAPPER</code> works that way. It is used for <code>sccache</code> to cache the <a href=\"http://crates.io\">crates.io</a> dependency.</p>",
        "id": 208706421,
        "sender_full_name": "Eh2406",
        "timestamp": 1598975033
    },
    {
        "content": "<p>Then it seems broken. I echoed everything into a file, but I can only see rustc calls for local files</p>",
        "id": 208706636,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598975111
    },
    {
        "content": "<p>From a clean build?</p>",
        "id": 208706938,
        "sender_full_name": "Eh2406",
        "timestamp": 1598975248
    },
    {
        "content": "<p>No, stable installed via rustup. Will try a clean build later. Forgot that I can do that now ;-)</p>",
        "id": 208707295,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598975420
    },
    {
        "content": "<p>I did not mean a clean install. Just ment, \"cargo clean\" then \"cargo build\". <br>\nOr \"cargo build\" in a project with no <code>target</code> dir yet.</p>",
        "id": 208707598,
        "sender_full_name": "Eh2406",
        "timestamp": 1598975553
    },
    {
        "content": "<p>Yes, I did a cargo clean and then cargo build (with env vars set). Did not check for the target dir</p>",
        "id": 208708207,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598975775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"322844\">Finn Behrens</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Executer/near/208698399\">said</a>:</p>\n<blockquote>\n<p>Yeah, so I want to use the nix build system to build cargo projects. For this I would need to call nix, instead of rustc. What I hope to archive is that nix can build rust software much faster, as it then can cache crates, instead of rebuilding everything everytime</p>\n</blockquote>\n<p>There is an existing group of people that already use nix to build Rust projects, including some compiler developers. Have you looked into what these people do instead of rolling your own?</p>",
        "id": 208714686,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1598978436
    },
    {
        "content": "<p>Did not find that group specifically. I only know of 3 projects, one very unstable, one separate but not caching, and the third as buildRustPackage from nixpkgs</p>",
        "id": 208714908,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598978546
    },
    {
        "content": "<p>So what I want to build in the long run is a rust packager using recursive nix</p>",
        "id": 208715720,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1598978945
    }
]