[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120054\">@Jon Gjengset</span> has a suggestion in <a href=\"https://github.com/rust-lang/cargo/issues/9306\">https://github.com/rust-lang/cargo/issues/9306</a> and <span class=\"user-mention\" data-user-id=\"397321\">@Blake Oren</span>  has offered to start on implementation. What is not yet clear is does the Team Want it. So Thought I would ask here. (I looked but did not find the older thread about this topic.)</p>",
        "id": 232620976,
        "sender_full_name": "Eh2406",
        "timestamp": 1617207827
    },
    {
        "content": "<p>This would have been useful for <a href=\"https://github.com/bevyengine/bevy/pull/1387\">https://github.com/bevyengine/bevy/pull/1387</a>. Basically that PR used to add a <code>.cargo/config.toml</code> for a <code>cargo ci</code> alias, but this would make applying the fast build config harder as for example <code>git rebase</code> requires all files to be unmodified when starting.</p>",
        "id": 232621883,
        "sender_full_name": "bjorn3",
        "timestamp": 1617208143
    },
    {
        "content": "<p>If you're using nightly, there is <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#config-include\">config-include</a> that might do the trick. The multiple configuration files are more for having a split <code>config.toml</code> that is merged into one based on filename priority rather than selecting different configurations.</p>",
        "id": 232629011,
        "sender_full_name": "Blake Oren",
        "timestamp": 1617210595
    },
    {
        "content": "<p>I wonder if <code>cargo-include</code> should even still exist if there's support for split configuration files? Is having _both_ worthwhile, or just unnecessary complexity?</p>",
        "id": 232634440,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1617212567
    },
    {
        "content": "<p>I think <code>cargo-include</code> is still worthwhile for CI applications that want to build with different configurations like bevy that are outside the scope of features. Combining the two could also allow prioritizing a split config outside of it's default ordering, but I'm not sure that would be used often.</p>",
        "id": 232639178,
        "sender_full_name": "Blake Oren",
        "timestamp": 1617214445
    }
]