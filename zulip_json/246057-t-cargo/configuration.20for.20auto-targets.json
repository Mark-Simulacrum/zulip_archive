[
    {
        "content": "<p>question: is there a reason cargo doesn't let you configure auto-discovered targets (<a href=\"https://doc.rust-lang.org/cargo/reference/cargo-targets.html#target-auto-discovery\">https://doc.rust-lang.org/cargo/reference/cargo-targets.html#target-auto-discovery</a>)? For example, if I want to use a different dir than src/ or tests/, or I want to have 2 test suites with different names? currently for integration tests this would require creating a [[test]] for every file in the tests2/ dir, unless im mistaken?</p>",
        "id": 226596083,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1613519605
    },
    {
        "content": "<p>If you're doing the default thing then there's no configuration. If you're doing something complicated you need to Define it exactly. Both extremes make sense. Could we find a better unambiguous Syntax for things in the middle, probably.</p>",
        "id": 226597456,
        "sender_full_name": "Eh2406",
        "timestamp": 1613520649
    },
    {
        "content": "<p>Yeah, implementation wise it seems very easy to allow people to rename the string <code>tests/</code> that cargo uses, or add an additional dirs that it looks for tests in (well, target name clashes might make this more complex), and leave the no-configuration happy path alone and simple to reason about</p>\n<p>if I was interested in this, would I start with a pr, or like...a cargo rfc?</p>",
        "id": 226598129,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1613521233
    },
    {
        "content": "<p>I'd start by waiting for some more of the Cargo Team to comment on whether this is a design we will accept.  If you want to get started, a clear description on internals or in an issue can't hurt.<br>\nIf you want a semi practical solution that you can use right now, you can use what we do in the Cargo repo. Have one test that imports a bunch of files from a subdirectory. Then ther is only one thing to configure in the Cargo.toml.</p>",
        "id": 226599336,
        "sender_full_name": "Eh2406",
        "timestamp": 1613522277
    },
    {
        "content": "<p>And of course, thank you for being willing to contribute. That always means a lot!</p>",
        "id": 226599514,
        "sender_full_name": "Eh2406",
        "timestamp": 1613522378
    },
    {
        "content": "<p>And of course, thank you for being willing to contribute. That always means a lot!</p>",
        "id": 226599533,
        "sender_full_name": "Eh2406",
        "timestamp": 1613522391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span> thank you for the pointers! Ill see what people say, think and read some more and go from there!</p>",
        "id": 226600187,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1613522928
    }
]