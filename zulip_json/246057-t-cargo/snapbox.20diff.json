[
    {
        "content": "<blockquote>\n<p>Without converting all at once, we can switch cargo-test-supports diff to using the same style as snapbox</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"424212\">@Ed Page</span> I'm curious how that might work. When I wrote the existing diff, I found I couldn't use any of the existing libraries because they couldn't handle wildcards.  It also handles unordered output.   How would that work?</p>",
        "id": 274776991,
        "sender_full_name": "Eric Huss",
        "timestamp": 1646874600
    },
    {
        "content": "<p>So the diffing itself is wildcard aware?  I hadn't realized that so maybe we can't do that but would have to handle things a step further and switch the match assertion to snapbox.  In snapbox, it uses the expected result as a guide for replacing content in the actual result so that we can jut do a straight diff (and so when we overwrite snapshots, we save it with wildcards)</p>",
        "id": 274777339,
        "sender_full_name": "Ed Page",
        "timestamp": 1646874820
    },
    {
        "content": "<p>We could perhaps consider something like that.  From what I can see from checking the docs, it doesn't seem like snapbox has the same kind of matching support, though.  Are you suggesting to extend it to handle all the same match kinds?</p>",
        "id": 274778312,
        "sender_full_name": "Eric Huss",
        "timestamp": 1646875566
    },
    {
        "content": "<p>Unless I missed something in <code>cargo-test-support</code> it is similar though slightly different</p>\n<ul>\n<li><code>[..]</code> matches like <code>[^\\n]*</code></li>\n<li><code>\\n...\\n</code> matches any number of whole lines</li>\n<li>User-defined variable with <code>[VAR]</code> which looks the same but there might be some small, rare differences.</li>\n</ul>\n<p>Unless I missed something, it seems like it'd be relatively easy to switch the tests from one match syntax to the other.</p>",
        "id": 274785503,
        "sender_full_name": "Ed Page",
        "timestamp": 1646883171
    },
    {
        "content": "<p>I was thinking more along with how would <a href=\"https://github.com/rust-lang/cargo/blob/56ccd1f1c79ebfea331a5b7a2effd210e5c9b4db/crates/cargo-test-support/src/compare.rs#L196-L244\"><code>match_unordered</code></a> and the various other variants work?</p>",
        "id": 274786461,
        "sender_full_name": "Eric Huss",
        "timestamp": 1646884418
    },
    {
        "content": "<p>I forgot to call otu that case.  I still need to dig into it to understand the motivation and how to be handling it if, in the theoretical case all of cargo switched to snapbox.</p>",
        "id": 274846759,
        "sender_full_name": "Ed Page",
        "timestamp": 1646924604
    }
]