[
    {
        "content": "<p>With full acknowledgement of the fact that features are <em>supposed</em> to be additive: I ran into a case that I'm not sure it's possible to solve with the language and cargo features we have today.</p>",
        "id": 274062077,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646353858
    },
    {
        "content": "<p><a href=\"https://github.com/launchbadge/sqlx/pull/1733\">https://github.com/launchbadge/sqlx/pull/1733</a></p>",
        "id": 274062078,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646353859
    },
    {
        "content": "<p>IMO this is actually uninteresting because the whole reason you're in this situation is a soundness bug in libgit2-sys.</p>",
        "id": 274065491,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646356514
    },
    {
        "content": "<p>Soundness bug?</p>",
        "id": 274069923,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646360069
    },
    {
        "content": "<p>libgit2 does not have a stable ABI, but libgit2-sys acts like it does with its version requirement in its <a href=\"http://build.rs\">build.rs</a>.</p>\n<p>The 1.3.0 release caused runtime errors, 1.4.0 is causing segfaults.</p>",
        "id": 274070276,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646360432
    },
    {
        "content": "<p>There are multiple issues open about this on the repo. Here's my comment on one: <a href=\"https://github.com/rust-lang/git2-rs/issues/746#issuecomment-1012185316\">https://github.com/rust-lang/git2-rs/issues/746#issuecomment-1012185316</a><br>\nAnd an issue for the latest one: <a href=\"https://github.com/rust-lang/git2-rs/issues/813\">https://github.com/rust-lang/git2-rs/issues/813</a></p>",
        "id": 274070383,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646360524
    },
    {
        "content": "<p>Sigh, I see.</p>",
        "id": 274070541,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646360672
    },
    {
        "content": "<p>I don't think that's actually the root of the build issue in this case, since I think I'd have the same problem if libgit2-sys had a different major version.</p>",
        "id": 274070618,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646360747
    },
    {
        "content": "<p>But I agree that that's an issue in libgit2-sys.</p>",
        "id": 274070691,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646360782
    },
    {
        "content": "<p>Sigh. I can't wait to switch to gitoxide...</p>",
        "id": 274070697,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646360786
    },
    {
        "content": "<p><em>sigh</em> you're right, the C symbols would still collide, even if you were linking to the right .so</p>",
        "id": 274070705,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646360794
    },
    {
        "content": "<p>Maybe I'll just put up the PR and see if they take it</p>",
        "id": 274070736,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646360823
    },
    {
        "content": "<p>It's such a small diff</p>",
        "id": 274070740,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646360828
    },
    {
        "content": "<p>Which PR? For libgit2-sys?</p>",
        "id": 274071003,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646361010
    },
    {
        "content": "<p>Yeah. Sorry I'm sidetracking this topic. Pet peeve and all that.</p>",
        "id": 274071858,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646361613
    },
    {
        "content": "<p>Fundamentally I think your optional dependencies on different versions (with links attributes) is actually modeling mutually exclusive features pretty correctly. If you build it as a dependency with one feature it <em>should</em> work. Same if you build it as a dependency with the other feature. You get the confusing error message when you attempt to enable both features. Of course this is an ergonomic nightmare, to build the package itself all features are enabled. <br>\nThis is the fundamentally difficult part of mutually exclusive features. That in order to develop the package you kind of need to do code generation for both of them.</p>",
        "id": 274144574,
        "sender_full_name": "Eh2406",
        "timestamp": 1646407563
    }
]