[
    {
        "content": "<p>I'm working on a simultaneous change to cargo and rustc. I'm using rustup to manage my local rustc toolchain. It seems like cargo out-of-the-box doesn't support rustup, e.g. if I do <code>./target/debug/cargo +local whatever</code> then I get the erorr mesage <code>no such subcommand +local</code>. This functionality is not clearly documented anywhere that I could find, so I'm not sure how to get it working. Any suggestions on how to recover this feature?</p>",
        "id": 238514089,
        "sender_full_name": "Will Crichton",
        "timestamp": 1620841049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265377\">@Will Crichton</span> There is documentation on how to set it up here: <a href=\"https://doc.crates.io/contrib/process/working-on-cargo.html#running-cargo\">https://doc.crates.io/contrib/process/working-on-cargo.html#running-cargo</a></p>",
        "id": 238514274,
        "sender_full_name": "Eric Huss",
        "timestamp": 1620841114
    },
    {
        "content": "<p>personally I use <code>RUSTC=</code>, but I know there's a way to do it in <code>rustup</code>, I've just never dused it</p>",
        "id": 238514285,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1620841117
    },
    {
        "content": "<p>lol disregard me</p>",
        "id": 238514302,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1620841123
    },
    {
        "content": "<p>The <code>+local</code> portion is handled by the \"rustup wrapper\".  The binary in <code>~/.cargo/bin/cargo</code> is actually rustup, and it checks the argument list for the <code>+</code> override.  That is why cargo does not know about it.</p>",
        "id": 238514546,
        "sender_full_name": "Eric Huss",
        "timestamp": 1620841227
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>!</p>\n<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> you have been duly disregarded</p>",
        "id": 238515245,
        "sender_full_name": "Will Crichton",
        "timestamp": 1620841486
    },
    {
        "content": "<p>I think you could use <code>rustup run local /other/cargo ...</code> to get the +local <code>RUSTC</code></p>",
        "id": 238516237,
        "sender_full_name": "cuviper",
        "timestamp": 1620841867
    },
    {
        "content": "<p>or even <code>rustup run local bash</code> and carry on from there</p>",
        "id": 238516284,
        "sender_full_name": "cuviper",
        "timestamp": 1620841896
    },
    {
        "content": "<p>I'm not sure rustup actually sets <code>RUSTC</code>. There's a proposal that it <em>should</em>: <a href=\"https://github.com/rust-lang/rustup/issues/2626\">https://github.com/rust-lang/rustup/issues/2626</a></p>",
        "id": 238517700,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620842468
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ diff -U0 &lt;(env | sort) &lt;(rustup run nightly env | sort)\n--- /dev/fd/63  2021-05-12 11:01:53.686249757 -0700\n+++ /dev/fd/62  2021-05-12 11:01:53.686249757 -0700\n@@ -2,0 +3 @@\n+CARGO_HOME=/home/josh/.cargo\n@@ -38,0 +40 @@\n+LD_LIBRARY_PATH=/home/josh/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib\n@@ -47 +49 @@\n-PATH=/home/josh/.local/bin:/home/josh/.cargo/bin:/usr/lib/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\n+PATH=/home/josh/.cargo/bin:/home/josh/.local/bin:/home/josh/.cargo/bin:/usr/lib/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\n@@ -49,0 +52,3 @@\n+RUSTUP_HOME=/home/josh/.rustup\n+RUSTUP_TOOLCHAIN=nightly-x86_64-unknown-linux-gnu\n+RUST_RECURSION_COUNT=1\n@@ -66 +71 @@\n-_=/usr/bin/env\n+_=/home/josh/.cargo/bin/rustup\n</code></pre></div>",
        "id": 238517914,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620842538
    },
    {
        "content": "<p>It just sets <code>RUSTUP_TOOLCHAIN</code>, and then expects cargo to invoke <code>rustc</code> via the rustup wrapper such that the rustup wrapper for <code>rustc</code> will select the right <code>rustc</code>.</p>",
        "id": 238518066,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620842606
    },
    {
        "content": "<p>So you still have to make sure rustup can find your <code>rustc</code> if you do that.</p>",
        "id": 238518086,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620842618
    }
]