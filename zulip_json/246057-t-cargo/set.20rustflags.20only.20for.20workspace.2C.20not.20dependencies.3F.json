[
    {
        "content": "<p>Is there a way to add flags to rustc for \"all path dependencies in the current workspace\"? <code>cargo rustc</code> only sets it for a single package, and <code>RUSTFLAGS</code> also sets it for dependencies</p>",
        "id": 257003254,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633919037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I think you'll need to use <code>RUSTC_WORKSPACE_WRAPPER</code>, and do something like <code>rustc \"$@\" --my-args</code></p>",
        "id": 257003604,
        "sender_full_name": "Eric Huss",
        "timestamp": 1633919403
    },
    {
        "content": "<p>is \"rustc\" in that example my custom wrapper?</p>",
        "id": 257003969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633919761
    },
    {
        "content": "<p>if so I'll probably just add this to <code>bootstrap/bin/rustc.rs</code> directly</p>",
        "id": 257004015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633919777
    },
    {
        "content": "<p>By <code>rustc</code> I was meaning something like a bash script.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"ch\">#!/bin/bash</span>\n\nrustc <span class=\"s2\">\"</span><span class=\"nv\">$@</span><span class=\"s2\">\"</span> --my-args\n</code></pre></div>\n<p><code>RUSTC_WORKSPACE_WRAPPER=/path/to/my_wrapper.sh cargo build</code></p>",
        "id": 257004710,
        "sender_full_name": "Eric Huss",
        "timestamp": 1633920513
    },
    {
        "content": "<p>hmm I wonder if we could replace bootstrap/rustc.rs with RUSTC_WORKSPACE_WRAPPER somehow</p>",
        "id": 257004739,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633920546
    },
    {
        "content": "<p>I guess it would still be doing the same thing, just with cargo's knowledge</p>",
        "id": 257004755,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633920572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> is there a way to tell from the arguments cargo passes whether this is a path dependency or not? I guess whether --cap-lints=allow is present?</p>",
        "id": 257004768,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633920595
    },
    {
        "content": "<p>I can't think of any guaranteed way to do that.  For example <code>-vv</code> changes the lint cap.</p>",
        "id": 257005034,
        "sender_full_name": "Eric Huss",
        "timestamp": 1633920853
    },
    {
        "content": "<p>Hmm, ok :/ my overall goal is to avoid rebuilding all bootstrap's dependencies when <code>deny-warnings = false</code> is flipped, do you know a simple way to do that? trying to avoid an XY problem</p>",
        "id": 257005158,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633920992
    },
    {
        "content": "<p>\"just\" stop using rustflags and pass the appropriate options via bootstrap/bin/rustc.rs. cap-lints will already mostly avoid trouble with dependencies and such.</p>\n<p>But I don't think we should do this; as much as we can avoid any custom invalidation avoidance in bootstrap, we should</p>",
        "id": 257005433,
        "sender_full_name": "simulacrum",
        "timestamp": 1633921260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was hoping to do it in some cargo-aware way so only path dependencies are rebuilt and not all dependencies</p>",
        "id": 257006000,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633921826
    }
]