[
    {
        "content": "<p>does anyone know why <a href=\"https://github.com/rust-lang/cargo/issues/2644\">https://github.com/rust-lang/cargo/issues/2644</a> hasn't been picked up yet,<br>\nBased on the comments it seems to be a valid issue with a well-specified requirement,<br>\nIs there anything about the implementation that I'm missing?</p>",
        "id": 275519125,
        "sender_full_name": "Sampras Lopes",
        "timestamp": 1647441312
    },
    {
        "content": "<p>As with so many things in Cargo (but not all) the problems are not \"implementation will be hard\" they are \"designed needs work\".<br>\nThe Cargo Team has responded many times in that thread.<br>\nIf I recall correctly: It's not clear that it is extensible to be able to support everyone's use case, it's not even clear that there is anyone who wants this exact behavior.</p>",
        "id": 275522251,
        "sender_full_name": "Eh2406",
        "timestamp": 1647442500
    },
    {
        "content": "<p>FWIW, I do want this, for both docs and build.</p>",
        "id": 275531096,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647445863
    },
    {
        "content": "<p>Use case for both: project that doesn't build yet.</p>",
        "id": 275531141,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647445879
    },
    {
        "content": "<p>Or project that I just added several dependencies to that I'm not yet using, and I want Cargo to go ahead and download and build them.</p>",
        "id": 275531282,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647445928
    },
    {
        "content": "<p>cargo build and ignore the errors?</p>",
        "id": 275531607,
        "sender_full_name": "Eh2406",
        "timestamp": 1647446048
    },
    {
        "content": "<p>there's the docker caching use case as well, which has led to a couple of crates <a href=\"https://crates.io/crates/cargo-build-deps\">https://crates.io/crates/cargo-build-deps</a> &amp;https://github.com/LukeMathWalker/cargo-chef</p>\n<p>These could be supported better if provided by cargo itself rather than external crates</p>",
        "id": 275540388,
        "sender_full_name": "Sampras Lopes",
        "timestamp": 1647448910
    },
    {
        "content": "<p>There are a bunch of things that make designing that interface more complicated than it seems. From my limited understanding the first obstacle is that you need the cargo.toml to decide what the dependencies are, but updating that file invalidates the docker cache.<br>\nWhen someone has a third-party library that is widely accepted as having solved the problem, that will be evidence that the design phase is well enough understood to know what we should add to cargo. Big thank you to both of the projects for having gotten started on that work.</p>",
        "id": 275543172,
        "sender_full_name": "Eh2406",
        "timestamp": 1647449923
    },
    {
        "content": "<p>yeah, I had faced some issues on these projects related to</p>\n<ol>\n<li>support for workspaces (or other issues reporting lack of support for some cargo features)</li>\n<li>they need to create an empty cargo package which does not work when the Cargo.toml has specified <em>[[bin]]</em> or other settings</li>\n</ol>\n<p>I'll try to fix these issues in these third party lib (or create my own),<br>\nthanks for the input here</p>",
        "id": 275549146,
        "sender_full_name": "Sampras Lopes",
        "timestamp": 1647452037
    }
]