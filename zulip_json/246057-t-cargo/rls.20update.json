[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"424212\">@Ed Page</span> (or anyone else), would you be willing to update RLS?  It looks like the <a href=\"https://github.com/rust-lang/rls/blob/e9bdababa0c7d8739b2bbde8b7a3db26369fd80b/tests/client.rs#L724\"><code>client_invalid_toml_manifest</code></a> test is now failing with the new toml changes (I suspect it is just a slight change in the error message).</p>\n<p>The process is to bump the git revision <a href=\"https://github.com/rust-lang/rls/blob/e9bdababa0c7d8739b2bbde8b7a3db26369fd80b/Cargo.toml#L34\">here</a> to the latest version on master, and then run <code>cargo test</code> and fix the tests, then submit a PR to rust-lang/rls.  (You might also need to bump the rev for rustfmt.)</p>",
        "id": 269347145,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643157273
    },
    {
        "content": "<p>I can take a look at it in the morning.</p>",
        "id": 269349369,
        "sender_full_name": "Ed Page",
        "timestamp": 1643158981
    },
    {
        "content": "<p>Is there another stream or an issue where this is being discussed?  I want to run my proposed fix past people.</p>",
        "id": 269431499,
        "sender_full_name": "Ed Page",
        "timestamp": 1643211812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"424212\">@Ed Page</span> No, just here.  When I update cargo in rust-lang/rust, I also run tests that let me know when RLS fails.</p>",
        "id": 269438517,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643214135
    },
    {
        "content": "<p>Feel free to ask any questions here.</p>",
        "id": 269438551,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643214148
    },
    {
        "content": "<p>Problem: RLS is downcasting an error from cargo to <code>toml::de::Error</code>.  This obviously fails and its falling back the defaults it set for the range.</p>\n<p>I could just update it to <code>toml_edit::Error</code> but</p>\n<ul>\n<li><code>toml_edit</code> isn't at a stable point and if we get toml_edit out of sync between cargo and rls, the downcast will just fail again.  At least the test catches it but thats brittle.</li>\n<li><code>toml_edit</code> doesn't expose line/column information in a programmatic format at this time.  It can be added but it will delay getting this fixed.</li>\n</ul>\n<p>With those reasons, the current maintenance status of RLS with rust-analyzer, and the fact that not all manifest errors currently provide line/column (only parse), I propose we just remove line/column information from parse errors.  The maintenance benefits seem to outweigh the impact from reducing functionality.</p>",
        "id": 269439316,
        "sender_full_name": "Ed Page",
        "timestamp": 1643214426
    },
    {
        "content": "<p>Time-wise, we have about 2 weeks or so.</p>\n<p>I'm fine with keeping the versions in sync, that shouldn't be too difficult.  (And hopefully they don't change too often?)</p>\n<p>FWIW, I think it would be good to support line/column information long-term. I know it would be great to have that in cargo itself for JSON output.</p>\n<p>As for just removing the support in RLS, I'm a little hesitant. However, it isn't my call.  If that is relatively easy to do, then I suggest just go ahead and open a PR with that change.  Then, perhaps in the future, we can revert it if toml_edit errors gain the needed information?</p>\n<p>I'm not sure if <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> is on Zulip much.</p>",
        "id": 269441346,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643215118
    },
    {
        "content": "<p>I think opening an issue at RLS repo would be more visible than pinging on Zulip.</p>",
        "id": 269479752,
        "sender_full_name": "mati865",
        "timestamp": 1643230092
    },
    {
        "content": "<p>Just posted <a href=\"https://github.com/rust-lang/rls/pull/1764\">https://github.com/rust-lang/rls/pull/1764</a>.  It was easier to get <code>line_col</code> than I expected.</p>",
        "id": 269490914,
        "sender_full_name": "Ed Page",
        "timestamp": 1643235316
    },
    {
        "content": "<p>Looks like my PR is stalled.  Recommendations for helping to move it forward?</p>",
        "id": 271144390,
        "sender_full_name": "Ed Page",
        "timestamp": 1644334150
    },
    {
        "content": "<p>Thanks for the heads up, I'll ping some people.</p>",
        "id": 271152989,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644337607
    },
    {
        "content": "<p>Can someone volunteer to do another RLS update?</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0599]: no method named `extern_crate_name` found for struct `cargo::core::Resolve` in the current scope\n   --&gt; src/tools/rls/rls/src/project_model.rs:106:46\n    |\n106 |                     let crate_name = resolve.extern_crate_name(pkg_id, dep_id, &amp;lib)?;\n    |                                              ^^^^^^^^^^^^^^^^^ method not found in `cargo::core::Resolve`\n</code></pre></div>\n<p>Presumably this is caused by <a href=\"https://github.com/rust-lang/cargo/issues/9992\">cargo#9992</a>, and should be easy to fix.  The process is mentioned above at <a href=\"#narrow/stream/246057-t-cargo/topic/rls.20update/near/269347145\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/rls.20update/near/269347145</a>.</p>",
        "id": 272983909,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645638014
    },
    {
        "content": "<p>I will take a look tonight.</p>",
        "id": 273081147,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1645705042
    },
    {
        "content": "<p>Hey, just submitted <a href=\"https://github.com/rust-lang/rls/pull/1767\">rust-lang/rls#1767</a>. AFAIK it's a tiny function renaming issue.</p>",
        "id": 273094010,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1645712011
    }
]