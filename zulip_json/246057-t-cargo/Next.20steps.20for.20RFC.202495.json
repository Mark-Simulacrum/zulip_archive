[
    {
        "content": "<p>Now that <a href=\"https://github.com/rust-lang/rfcs/pull/2495\">https://github.com/rust-lang/rfcs/pull/2495</a> is implemented, how can I help this make progress?</p>",
        "id": 223510299,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611237257
    },
    {
        "content": "<p>The open items I see are the bikeshedding and <a href=\"http://crates.io\">crates.io</a> support</p>",
        "id": 223510352,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611237301
    },
    {
        "content": "<p>I don't think there are any concerns other than what is listed in the tracking issue.</p>\n<p>I don't think there is any need for <a href=\"http://crates.io\">crates.io</a> support, is there?  </p>\n<p>One way to make progress is to try to get people to test it out.  That can be difficult, since it is a nightly-only feature.  Also, it isn't in nightly, yet.</p>",
        "id": 223652499,
        "sender_full_name": "Eric Huss",
        "timestamp": 1611327869
    },
    {
        "content": "<p>The RFC mentions that <a href=\"http://crates.io\">crates.io</a> should reject crates whose <code>rust-version</code> is set to something newer than current stable, IIRC</p>",
        "id": 223778618,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611438534
    },
    {
        "content": "<p>How do we decide if it's been tested enough?</p>",
        "id": 223778684,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611438629
    },
    {
        "content": "<p>And how is it not in nightly yet?</p>",
        "id": 223778685,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611438641
    },
    {
        "content": "<blockquote>\n<p>And how is it not in nightly yet?</p>\n</blockquote>\n<p>it takes a few days for someone (usually Eric) to make a PR to the rust repo to bring in the changes made to cargos masster.</p>",
        "id": 223781363,
        "sender_full_name": "Eh2406",
        "timestamp": 1611440632
    },
    {
        "content": "<p>Interesting. I can imagine scenarios where it might make sense to upload a crate whose rust-version is slightly newer than current stable, when trying to upload crates in concert with the next stable release.</p>",
        "id": 223781817,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611441253
    },
    {
        "content": "<p>It's risky, since until stable is released, it might potentially change.</p>",
        "id": 223781826,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611441279
    },
    {
        "content": "<p>But I can <em>imagine</em> scenarios where it makes sense.</p>",
        "id": 223781838,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611441300
    },
    {
        "content": "<p>/me wonders whether that case is likely to come up, and whether it's important enough to warrant making this non-fatal.</p>",
        "id": 223781901,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611441369
    },
    {
        "content": "<p>I don't think we should bother with <a href=\"http://crates.io\">crates.io</a> checking the version (per the comment at <a href=\"https://github.com/rust-lang/rfcs/pull/2495#issuecomment-536122134\">https://github.com/rust-lang/rfcs/pull/2495#issuecomment-536122134</a>).</p>",
        "id": 223833903,
        "sender_full_name": "Eric Huss",
        "timestamp": 1611520089
    },
    {
        "content": "<p>Do all of you have any sense of the bikeshedding about the exact syntax? I'm kind of leaning towards the terser <code>rust</code> at the moment</p>",
        "id": 224393632,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611868496
    },
    {
        "content": "<p>would probably be good to change it sooner rather than later</p>",
        "id": 224393652,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1611868505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> I personally don't think \"version\" is critical to appear in it (either way is fine for me on that), but I think \"minimum\" or \"min\" should appear in it.</p>",
        "id": 224406092,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611874410
    },
    {
        "content": "<p>I'd lean against the jargon-y (and acronym-conflicting) \"MSRV\".</p>",
        "id": 224406128,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611874433
    },
    {
        "content": "<p><code>min-rust</code> or <code>rust-min</code> or <code>min-rust-version</code>, or anything similar; happy to go along with just about anything like that.</p>",
        "id": 224406180,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611874445
    },
    {
        "content": "<p>I did a little survey of other tools. Roughly they use fields like:</p>\n<p>Cabal: <br>\n<code>cabal-version</code><br>\n<code>compiler: LHC &gt;=0.6 &amp;&amp; &lt;0.8</code><br>\n    Also has dynamic conditional checks like <code>if impl(ghc &gt;= 7.5)</code>, and language feature checks.</p>\n<p>Go: <br>\n<code>go</code> directive in <code>go.mod</code> specifies minimum version. If using an older version, it will still compile, and only note the version if it fails.</p>\n<p>NuGet:<br>\n<code>minClientVersion</code></p>\n<p>Julia:<br>\n<code>\n    [compat]\n    julia = …\n    </code><br>\n    I think?</p>\n<p>Ruby:<br>\n<code>ruby '1.9.3'</code></p>\n<p>Scala:<br>\n    sbt.version = …<br>\n    scalaVersion = …</p>\n<p>Dart:<br>\n<code>\n    environment:\n      sdk: '&gt;=1.19.0 &lt;3.0.0'\n      flutter: ^0.1.2\n    </code></p>\n<p>Swift:<br>\n<code>swift-tools-version:3.1</code><br>\n<code>swiftLanguageVersions: …</code></p>\n<p>D:<br>\n<code>\n        \"toolchainRequirements\": {\n            \"dub\": \"&gt;=1.14.0\",\n            \"frontend\": \"&gt;=2.068 &lt;2.087\"\n        }\n    </code></p>",
        "id": 224407106,
        "sender_full_name": "Eric Huss",
        "timestamp": 1611875013
    },
    {
        "content": "<p>No real common style that I can see.</p>",
        "id": 224407136,
        "sender_full_name": "Eric Huss",
        "timestamp": 1611875028
    },
    {
        "content": "<p>FWIW, my preference would be for <code>minimum-rust-version</code>. I don’t really see the value in being terse when this is only written once in a single place in a project and even then most crates don’t have a need to specify it.</p>",
        "id": 224407338,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611875160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I agree entirely.</p>",
        "id": 224408636,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611876008
    },
    {
        "content": "<p>Why do you think  \"min\" is important? This seems pretty obvious to me since <code>^</code> is the standard semver mode for all dependencies in <code>Cargo.toml</code></p>",
        "id": 224591579,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612022319
    },
    {
        "content": "<p>I don't value the terseness per se, but I do like the symmetry it affords with how dependencies are specified</p>",
        "id": 224591602,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612022382
    },
    {
        "content": "<p>after all, the language/compiler is also a kind of dependency</p>",
        "id": 224591689,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612022416
    },
    {
        "content": "<p>(I guess we should also try to wrap up this discussion before the release?)</p>",
        "id": 224591732,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612022511
    },
    {
        "content": "<p>I realize that semver works that way, but that would imply that the field supports semver. This field doesn't; it's a minimum only, and cannot accept any other semver constraint. That's why I think it needs to say it's a minimum.</p>",
        "id": 224598557,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1612031950
    },
    {
        "content": "<p>So I think I won't agree with the choice, but I'd still like the cargo team to pronounce on what the name should be</p>",
        "id": 229096938,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1615036333
    },
    {
        "content": "<p>so we can potentially start moving forward with testing</p>",
        "id": 229096958,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1615036351
    },
    {
        "content": "<p>Since Clippy already implements a <code>#[msrv]</code> attribute, I think I should share my experience here. PR that implemented this feature: <a href=\"https://github.com/rust-lang/rust-clippy/issues/6201\">clippy#6201</a> (shameless self-plug ahead)</p>\n<p>After using the <code>semver</code> crate for this in the first implementation, we <a href=\"https://github.com/rust-lang/rust-clippy/pull/6386#discussion_r530890869\">found that there were problems/bugs</a> with <code>semver</code>. Mainly that there is no reliable way to do a <code>&gt;=</code> comparison with the <code>semver</code> crate.</p>\n<p>I then decided to implement a (<code>#[no_std]</code>, zero-deps, 100% test coverage) crate that does nothing but deal with Rust versions (in a semver compatible way): <a href=\"https://crates.io/crates/rustc-semver\"><code>rustc-semver</code></a>, which we started using in <a href=\"https://github.com/rust-lang/rust-clippy/issues/6395\">clippy#6395</a>. The main thing this crate does is implement checks if one version of Rust meets another version, which Just Works™.</p>\n<p>So that's my experience for implementing a MSRV feature.</p>\n<p>A nice addition to Clippy would be, if Clippy would check for the Rust version in <code>Cargo.toml</code> and use this version as the MSRV.</p>",
        "id": 229101459,
        "sender_full_name": "flip1995",
        "timestamp": 1615040342
    },
    {
        "content": "<p>I think I already worked around the issue the comment you linked to described (the implementation has already landed)</p>",
        "id": 229123146,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1615059591
    },
    {
        "content": "<p>I also know Steve is working on a next iteration of semver that is <code>#[no_std]</code>, <a href=\"https://github.com/steveklabnik/totally-not-semver\">https://github.com/steveklabnik/totally-not-semver</a></p>",
        "id": 229123220,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1615059636
    }
]