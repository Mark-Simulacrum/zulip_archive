[
    {
        "content": "<p>I got cargo to download things from <a href=\"http://crates.io\">crates.io</a> via nix, which has the advantage (on NixOS) for a system wide cache, which also works for package build for the os. But this is not very fast unfortunately. Has anyone an idea how I can just instruct cargo to give me something like an instruction in json format, which contains rustc calls, and how and where to download the crates?</p>",
        "id": 210615096,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1600521895
    },
    {
        "content": "<p>There is \"build plan\" cargo/#5579 but it was always a hack and has lots of bugs and will probably be removed cargo/#7614.</p>",
        "id": 210620154,
        "sender_full_name": "Eh2406",
        "timestamp": 1600528772
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120179\">Eh2406</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Nix.20build.20Cargo.20builds/near/210620154\">said</a>:</p>\n<blockquote>\n<p>There is \"build plan\" cargo/#5579 but it was always a hack and has lots of bugs and will probably be removed cargo/#7614.</p>\n</blockquote>\n<p>Thanks, but this still seems to require a download of the dependencies. which I would not like cargo to do. What I wanted to archive is that I get a list from cargo with checksums and urls for the crates, and then I return a directory to cargo where every crate source is inside.</p>",
        "id": 210622011,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1600531332
    },
    {
        "content": "<p>Interesting. Do you care if cargo does the download of its own index?</p>",
        "id": 210625390,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600536035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Nix.20build.20Cargo.20builds/near/210625390\">said</a>:</p>\n<blockquote>\n<p>Interesting. Do you care if cargo does the download of its own index?</p>\n</blockquote>\n<p>If I have a flag to disable download of the index and only use the cargo.lock then no. I think this is already there with the frozen flag?</p>",
        "id": 210628046,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1600539785
    },
    {
        "content": "<p>Why not use something like crate2nix?</p>",
        "id": 210629425,
        "sender_full_name": "nagisa",
        "timestamp": 1600541364
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Nix.20build.20Cargo.20builds/near/210629425\">said</a>:</p>\n<blockquote>\n<p>Why not use something like crate2nix?</p>\n</blockquote>\n<p>my goal I tried to archive is that I don't have to call anything, which is not nix or cargo, and work in buildRustPackages with recursive nix and then just call cargo to build the things</p>",
        "id": 210631219,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1600543685
    },
    {
        "content": "<p>I see. I think it would perhaps be more feasible to approach this through import-from-derivation functionality.</p>",
        "id": 210631931,
        "sender_full_name": "nagisa",
        "timestamp": 1600544573
    },
    {
        "content": "<p>Even if its not specifically crate2nix, <code>cargo metadata</code> should provide you all of the information you need to construct the dependencies etc for nix and the derivations to build the code.</p>",
        "id": 210632000,
        "sender_full_name": "nagisa",
        "timestamp": 1600544653
    }
]