[
    {
        "content": "<p>In Dockerfiles at work, when we want to build one of the binaries into a lean docker container, we currently have to copy the source from each of the workspace members into the Docker environment to be able to <code>cargo install</code> a binary.</p>",
        "id": 256540048,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1633594634
    },
    {
        "content": "<p>Are there any fundamental reasons this has to be true? Could we resolve workspace members lazily in case a crate is passed in explicitly?</p>",
        "id": 256540199,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1633594724
    },
    {
        "content": "<p>See <a href=\"https://lib.rs/crates/cargo-chef\">https://lib.rs/crates/cargo-chef</a> which also tries to solve this problem outside Cargo</p>",
        "id": 256540257,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1633594776
    },
    {
        "content": "<p>All <code>Cargo.toml</code> files need to be available for the dependency resolver to be able to work.</p>",
        "id": 256569931,
        "sender_full_name": "bjorn3",
        "timestamp": 1633610422
    },
    {
        "content": "<p>The dependency resolver works on the entire workspace, so one member may affect the version of a dependency used by another member.</p>",
        "id": 256569986,
        "sender_full_name": "bjorn3",
        "timestamp": 1633610463
    }
]