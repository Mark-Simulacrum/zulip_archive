[
    {
        "content": "<p>Hi, I am looking into this issue <a href=\"https://github.com/rust-lang/cargo/issues/10477\">\"Don't close jobserver fd when executing external subcommand\"</a>.  After skimming the git history, I didn't found any evidence cargo decided not inherhit fd deliberately. I see the use case of <code>cargo-fuzz</code>, which internally calls <code>cargo</code>, is reasonable, so I wonder is there any drawback to let external subcommands get jobserver fd?</p>",
        "id": 276280259,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1648000733
    },
    {
        "content": "<p>In the strictest sense of compatibility there is. Inheriting unexpected file descriptors can sometimes (rarely, but sometimes) lead to program misbehavior, if the program doesn't expect any open files other than the ones it opens.</p>",
        "id": 276290419,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013389
    },
    {
        "content": "<p>Bad assumptions about file descriptor numbers, or similar.</p>",
        "id": 276290469,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013408
    },
    {
        "content": "<p>That said, programs really <em>shouldn't</em> make those assumptions.</p>",
        "id": 276290477,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013419
    },
    {
        "content": "<p>Most programs written in compiled languages don't, but shell scripts and perl scripts often <em>do</em> because they don't have much choice.</p>",
        "id": 276290528,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013510
    },
    {
        "content": "<p>For instance, some shell scripts or perl scripts make the assumption that they can open file descriptor 3 or 4.</p>",
        "id": 276290577,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013533
    },
    {
        "content": "<p>So if file descriptor 3 or 4 is the jobserver fd, they may encounter an error at best, or read/write the jobserver fd incorrectly at worst.</p>",
        "id": 276290614,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013590
    },
    {
        "content": "<p>I <em>think</em> that's part of why make requires an explicit indication to treat a command as a sub-make and pass the jobserver to it.</p>",
        "id": 276290620,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013609
    },
    {
        "content": "<p><code>+</code> at the start of the command in the makefile.</p>",
        "id": 276290629,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648013619
    },
    {
        "content": "<p>Thanks for the info <span aria-label=\"praise\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"praise\">:praise:</span>  <br>\nIt's reasonable not to inherit if there are some compatibility concern. Now I tend to leave it as-is, since user has a simple workaround by using the subcommand executable directly (calling <code>+cargo-fuzz</code> instead of <code>+cargo fuzz</code>).</p>",
        "id": 276316462,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1648033309
    },
    {
        "content": "<p>Actually, that's an interesting case. If we created the jobserver we can't make any assumptions. But if we received the jobserver from our caller, that implies the <em>caller</em> passed it to us, which suggests they used + or equivalent.</p>",
        "id": 276352568,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648050108
    },
    {
        "content": "<p>So I think if we inherit the jobserver ourselves, we should pass it on to our subcommand.</p>",
        "id": 276352690,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648050144
    },
    {
        "content": "<p>I am biased after perceiving that <code>cargo-clippy</code> as a custom subcommand is also affected by this behaviour. We probably need to fix it. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span><br>\nHowever, I found that the behaviour is not align to my expectation. I created a Makefile <code>all: +cargo build</code> and ran <code>make -j1</code>. The concurrency seems not change and differs from a simple <code>cargo build -j1</code>. I thought the two should be the same. Is there anything I did incorrect or it's expected?</p>",
        "id": 276553810,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1648165301
    }
]