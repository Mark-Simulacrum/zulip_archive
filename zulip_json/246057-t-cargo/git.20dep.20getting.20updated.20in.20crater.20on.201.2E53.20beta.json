[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> -- wondering if you have any insight here. In the 1.53 beta crater run, we're seeing a lot of failures due to regenerating the lockfile, I think as a result of <a href=\"https://github.com/rust-lang/cargo/pull/9392\">https://github.com/rust-lang/cargo/pull/9392</a> . My guess is this is sort of similar to <a href=\"https://github.com/rust-lang/cargo/pull/9392\">https://github.com/rust-lang/cargo/pull/9392</a>, where we weren't able to use patch entries. The logs show that \"error: the lock file /workspace/builds/worker-7/source/Cargo.lock needs to be updated but --locked was passed to prevent this\" -- but my guess is that in practice, this is not the case; we should not need to update the lock file on the new Cargo version.</p>\n<p>Maybe the problem is that generate-lockfile for git deps is not respecting the previous lockfile's pinned version, I'm not sure... </p>\n<p>Sample logs;</p>\n<ul>\n<li>1.52 - <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.53-1/1.52.1/gh/jonlamb-gh.pinephone-rs-display-prototype/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.53-1/1.52.1/gh/jonlamb-gh.pinephone-rs-display-prototype/log.txt</a></li>\n<li>1.53 - <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.53-1/beta-2021-05-08/gh/jonlamb-gh.pinephone-rs-display-prototype/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.53-1/beta-2021-05-08/gh/jonlamb-gh.pinephone-rs-display-prototype/log.txt</a></li>\n</ul>",
        "id": 239601966,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521262
    },
    {
        "content": "<p>if generate-lockfile is the wrong command to use to get the migration to happen, we should alter crater of course, but wanted to see if there were thoughts on how this should be done</p>",
        "id": 239602066,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521299
    },
    {
        "content": "<p>(happy to file an issue as well)</p>",
        "id": 239602085,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521307
    },
    {
        "content": "<p><em>looks</em></p>",
        "id": 239602094,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521309
    },
    {
        "content": "<p>I'd need to dig in more, a lockfile should only need updating (in theory) if something substantively needs changing (other than the encoding format)</p>",
        "id": 239602328,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521382
    },
    {
        "content": "<p><code>generate-lockfile</code> is not what you want for switching encodings, that starts from scratch and updates all deps</p>",
        "id": 239602369,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521398
    },
    {
        "content": "<p>but there shouldn't, in theory, ever been a desire to update simply the encoding of the lock file</p>",
        "id": 239602403,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521414
    },
    {
        "content": "<p>that's indicative of a bug in Cargo</p>",
        "id": 239602420,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521424
    },
    {
        "content": "<p>right, that was my assumption too. I think generate-lockfile is the wrong thing but regardless, we shouldn't be hitting this :)</p>",
        "id": 239602472,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521444
    },
    {
        "content": "<p>Would an issue be helpful?</p>",
        "id": 239602480,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521449
    },
    {
        "content": "<p>let me dig in first</p>",
        "id": 239602630,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521496
    },
    {
        "content": "<p>why do you pass in <code>--locked</code> to begin with?</p>",
        "id": 239602667,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521514
    },
    {
        "content": "<p>Passing in <code>--locked</code> and then running <code>generate-lockfile</code> if it fails sort of defeats the purpose of a lock file</p>",
        "id": 239602723,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521535
    },
    {
        "content": "<p>Sorry, I meant to work on a PR for this.</p>",
        "id": 239602748,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621521545
    },
    {
        "content": "<p>it thwarts Cargo's default of incrementally updating it as necessary</p>",
        "id": 239602757,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521549
    },
    {
        "content": "<p>But yea, I think removing <code>--locked</code> and <code>generate-lockfile</code> is the right way to go.</p>",
        "id": 239602808,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621521569
    },
    {
        "content": "<p>hm</p>",
        "id": 239602944,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521605
    },
    {
        "content": "<p>Yeah I mean that side of crater definitely seems wrong</p>",
        "id": 239602973,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521614
    },
    {
        "content": "<p>but my question is sort of \"why is cargo forcing an update\" -- usually, like on 1.52 -- this worked OK</p>",
        "id": 239603026,
        "sender_full_name": "simulacrum",
        "timestamp": 1621521635
    },
    {
        "content": "<p>yes that's what I'm investigating right now</p>",
        "id": 239603270,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521730
    },
    {
        "content": "<p>ok I see what's happening, and ... I really don't want to have to fix this ...</p>",
        "id": 239603476,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521825
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/blob/6ca6dd0bffaf8d4011f1c8793dcb534838b788a8/src/cargo/ops/lockfile.rs#L184-L186\">this comparison</a> is returning false which causes Cargo to think that a substantive update is happening</p>",
        "id": 239603599,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521860
    },
    {
        "content": "<p>Arguably a substantive update <em>is</em> happening. The problem is the old resolve has <code>DefaultBranch</code> (no <code>branch=master</code>) and the new resolve has <code>branch=master</code>. Historical versions of Cargo considered these equivalent. New versions of Cargo do not consider these equivalent.</p>",
        "id": 239603729,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521906
    },
    {
        "content": "<p>We could try to add in yet more gobs of \"ok say <code>DefaultBranch</code> and <code>Branch(\"master\")</code> are equivalent\" but we already have way too many of those in Cargo</p>",
        "id": 239603814,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521931
    },
    {
        "content": "<p>I hope to rip all that out like a year from now because it's just awful to look at</p>",
        "id": 239603847,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521945
    },
    {
        "content": "<p>and literally no one needs it after transitioning lock file formats</p>",
        "id": 239603866,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521954
    },
    {
        "content": "<p>so the \"fix\" here, if one, would be to update that location in Cargo (this is a game of whack-a-mole at this point) to consider the two branch directives equal</p>",
        "id": 239603989,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621521989
    },
    {
        "content": "<p>it's not impossible but... I would rather not do it...</p>",
        "id": 239604069,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621522015
    },
    {
        "content": "<p>Would running something like <code>cargo metadata</code> or whatever before the cargo fetch --locked suffice to <em>only</em> transition lockfile formats and such, i.e., not actually updating any deps?</p>",
        "id": 239604078,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522018
    },
    {
        "content": "<p>(or maybe just cargo fetch w/o --locked is enough)</p>",
        "id": 239604115,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522029
    },
    {
        "content": "<p>I don't really understand why Crater is passing --locked, as my mental model is that cargo won't just go updating lockfiles <em>anyway</em></p>",
        "id": 239604235,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522061
    },
    {
        "content": "<p>omitting <code>--locked</code> is enough</p>",
        "id": 239604452,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621522129
    },
    {
        "content": "<p>hm, ok, I personally do not think we <em>have</em> to fix this.</p>",
        "id": 239604555,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522175
    },
    {
        "content": "<p>it's a bit annoying that it's a version upgrade that sort of represents a MSRV bump though, right?</p>",
        "id": 239604669,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522205
    },
    {
        "content": "<p>We'll likely want to remove --locked from crater though (cc <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span>)</p>",
        "id": 239604851,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522276
    },
    {
        "content": "<p>I don't think this is different from any other real change that causes msrv to bup</p>",
        "id": 239605126,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621522357
    },
    {
        "content": "<p>if you want a lower msrv you develop with that version of rust</p>",
        "id": 239605144,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621522364
    },
    {
        "content": "<p>sure, sure</p>",
        "id": 239605386,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522459
    },
    {
        "content": "<p>just somewhat rare that we actually change cargo enough to need it</p>",
        "id": 239605419,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522478
    },
    {
        "content": "<p>but sounds good, I'll work on the crater patch and PR and likely rerun the subset of crates which failed, I'm not triaging the 1,500 broken crates by hand :)</p>",
        "id": 239605475,
        "sender_full_name": "simulacrum",
        "timestamp": 1621522501
    },
    {
        "content": "<p>it's... unfortunate that bumping the version changes the lockfile</p>",
        "id": 239606333,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621522791
    },
    {
        "content": "<p>is the new lockfile only supported on 1.53? or is it supported on older versions too?</p>",
        "id": 239606360,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621522801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I think it is supported back to 1.47</p>",
        "id": 239607522,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621523190
    },
    {
        "content": "<p>ok if it's supported by a lot of past versions (like &gt;= 1.47) I think it's fine</p>",
        "id": 239607698,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621523254
    },
    {
        "content": "<p>the worry I have is if the new lockfile only works in 1.53, so multiple people collaborating on the same project have to either not commit the updated <code>Cargo.lock</code> in git or they have to coordinate updating with everyone</p>",
        "id": 239607934,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621523316
    },
    {
        "content": "<p>That would be bad. We never intentionally do that.</p>",
        "id": 239611272,
        "sender_full_name": "Eh2406",
        "timestamp": 1621524576
    }
]