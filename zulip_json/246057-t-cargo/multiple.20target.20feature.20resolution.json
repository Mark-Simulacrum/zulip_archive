[
    {
        "content": "<p>With <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#multitarget\">multitarget</a> where you can specify <code>--target</code> multiple times, do we want features to be unified across those targets, or should they be independent?</p>\n<p>I would lean towards being independent.  A drawback is that there isn't a way to say \"enable this feature for this target\".  That is, <code>--feature</code> would have to enable for all targets.</p>",
        "id": 268437330,
        "sender_full_name": "Eric Huss",
        "timestamp": 1642531457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> Having them be independent would be consistent with artifact dependencies.</p>",
        "id": 268441011,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1642533097
    },
    {
        "content": "<p>I can imagine, in the future, wanting them to be consistent.</p>",
        "id": 268441024,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1642533106
    },
    {
        "content": "<p>I think we should default to independent, and then we may find a strong use case in the future for adding a way to say \"unify me with this artifact dependency\", or \"unify everything on my build command line\".</p>",
        "id": 268441144,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1642533152
    },
    {
        "content": "<p>I would agree that feature resolution should be target-dependent, my way I think about futures is that \"everything linked into one binary is unified\" so that'd be per-target</p>",
        "id": 268445887,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1642535396
    },
    {
        "content": "<p>I never thought about the use case of only enabling a feature for one target while also building for multiple targets...</p>",
        "id": 268446009,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1642535421
    },
    {
        "content": "<p>eventually we're gonna need like <code>cargo build --units units.json</code> or something like that where cargo takes in structured input of what to build</p>",
        "id": 268446029,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1642535439
    },
    {
        "content": "<p>FWIW, the most obvious use case I can think of for wanting features unified across targets is that you have a client and server (or host and device) running on different targets and they need the same feature flags enabled for the protocol library they're using.</p>",
        "id": 268495776,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1642572338
    },
    {
        "content": "<p>On the other hand you may have features which are only enabled on some targets and can only comple for said targets. For example wgpu does this for the various graphics apis.</p>",
        "id": 268503636,
        "sender_full_name": "bjorn3",
        "timestamp": 1642579870
    }
]