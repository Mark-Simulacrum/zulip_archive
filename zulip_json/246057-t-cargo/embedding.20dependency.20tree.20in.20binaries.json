[
    {
        "content": "<p>I've recently released the <code>auditable</code> crate, which embeds the dependency tree in the compiled Rust binary if the project is built with Cargo. The primary use case is cross-referencing compiled binaries against a security advisory database, but there are other uses as well. The code and more info can be found here: <a href=\"https://github.com/Shnatsel/rust-audit\">https://github.com/Shnatsel/rust-audit</a><br>\nThe end goal is to uplift such a system into Cargo itself. An RFC draft to that effect is <a href=\"https://github.com/rust-lang/rfcs/pull/2801\">here</a>).<br>\nI have two questions related to that:</p>\n<ol>\n<li>It would be very valuable to get some real-world experience with the data format before stabilizing it. Are you aware of any companies using Rust+Cargo in production, and might be willing to trying out <code>auditable</code> and providing feedback?</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/47384\">https://github.com/rust-lang/rust/issues/47384</a> is destroying the ergonomics and will likely block a proper implementation within Cargo. What can I do to get it resolved, assuming I don't have the expertise to fix it myself?</li>\n</ol>",
        "id": 209842340,
        "sender_full_name": "Shnatsel",
        "timestamp": 1599862937
    }
]