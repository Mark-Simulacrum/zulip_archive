[
    {
        "content": "<p>Turns out serde generates a _lot_ of (de)serialization code for <code>TomlManifest</code>. Which makes compiling anything that uses it pretty darn slow.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cat src/main.rs\nfn main() {\n    let _: cargo::util::toml::TomlManifest = toml::from_str(&quot;&quot;).unwrap();\n}\n$ touch src/main.rs\n$ cargo llvm-lines --bin slow-cargo-rebuild | head -10\n   Compiling slow-cargo-rebuild v0.1.0 (/local/home/jongje/slow-cargo-rebuild)\nwarning: `slow-cargo-rebuild` (bin &quot;slow-cargo-rebuild&quot;) generated 2 warnings\n    Finished dev [unoptimized + debuginfo] target(s) in 9.14s\n  Lines          Copies       Function name\n  -----          ------       -------------\n  230408 (100%)  3409 (100%)  (TOTAL)\n   25227 (10.9%)    5 (0.1%)  &lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlProject&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map\n   11721 (5.1%)     6 (0.2%)  &lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlProfile&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map\n   11053 (4.8%)    31 (0.9%)  &lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed\n   10582 (4.6%)     5 (0.1%)  &lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlTarget&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map\n    9320 (4.0%)    54 (1.6%)  &lt;toml::de::SpannedDeserializer&lt;T&gt; as serde::de::MapAccess&gt;::next_value_seed\n    8414 (3.7%)    23 (0.7%)  &lt;toml::de::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any\n    7715 (3.3%)    10 (0.3%)  &lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed\n</code></pre></div>",
        "id": 265231249,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695079
    },
    {
        "content": "<p>I tried adding tiny function to <code>cargo</code> like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub fn parse_manifest(contents: &amp;str) -&gt; CargoResult&lt;TomlManifest&gt; {\n    Ok(toml::from_str(contents)?)\n}\n</code></pre></div>\n<p>and calling that instead so that the IR is contained within the <code>cargo</code> crate, so:</p>\n<div class=\"codehilite\"><pre><span></span><code>fn main() {\n    let _: cargo::util::toml::TomlManifest = cargo::util::toml::parse_manifest(&quot;&quot;).unwrap();\n}\n</code></pre></div>\n<p>and lo and behold:</p>\n<div class=\"codehilite\"><pre><span></span><code>    Finished dev [unoptimized + debuginfo] target(s) in 5.54s\n  Lines       Copies     Function name\n  -----       ------     -------------\n  177 (100%)  13 (100%)  (TOTAL)\n   40 (22.6%)  1 (7.7%)  core::result::Result&lt;T,E&gt;::unwrap\n   33 (18.6%)  2 (15.4%) core::ops::function::FnOnce::call_once\n   26 (14.7%)  1 (7.7%)  std::sys_common::backtrace::__rust_begin_short_backtrace\n   22 (12.4%)  1 (7.7%)  std::rt::lang_start\n   12 (6.8%)   1 (7.7%)  std::rt::lang_start::{{closure}}\n    9 (5.1%)   1 (7.7%)  core::ops::function::FnOnce::call_once{{vtable.shim}}\n    9 (5.1%)   1 (7.7%)  slow_cargo_rebuild::main\n</code></pre></div>",
        "id": 265231371,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695166
    },
    {
        "content": "<p>Thoughts on making a simple helper function like that available?</p>",
        "id": 265231587,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695305
    },
    {
        "content": "<p>(note the compilation time was cut in half, down by 5s — the remaining 5s is because I'm using an ancient linker)</p>",
        "id": 265231630,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695340
    },
    {
        "content": "<p>Maybe under the name <code>parse_plain_manifest</code>?</p>",
        "id": 265231739,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695400
    },
    {
        "content": "<p>Why does it generate so much IR? Can we reduce the raw complexity of the deserializing code?</p>",
        "id": 265231808,
        "sender_full_name": "Eh2406",
        "timestamp": 1639695460
    },
    {
        "content": "<p>I think it's because there are just a _lot_ of fields in there. See <code>TomlProject</code> for example: &lt;<a href=\"https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L852\">https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L852</a>&gt;</p>",
        "id": 265231896,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695499
    },
    {
        "content": "<p>&lt;<a href=\"https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L283\">https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L283</a>&gt; is both deep and wide, so a lot of code is needed to walk it to serialize and deserialize</p>",
        "id": 265231960,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695547
    },
    {
        "content": "<p>It probably adds a non-trivial amount of time to compiling cargo itself tbh, though I think it's time that's tricky to get back</p>",
        "id": 265232007,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695590
    },
    {
        "content": "<p>But at least a helper function like this would avoid passing it on unnecessarily to consumers should they need to deserialize a <code>TomlManifest</code> .</p>",
        "id": 265232125,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695620
    },
    {
        "content": "<p>Admittedly very few consumers should need to do that, but there's always the one weird one (often me recently it seems <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
        "id": 265232198,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695640
    },
    {
        "content": "<p>Honestly, in my case, it'd be fine if <code>do_read_manifest</code> was just public (&lt;<a href=\"https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L60\">https://github.com/rust-lang/cargo/blob/bfb7f2e083cc93e20ab98e97045c64c7144cca5f/src/cargo/util/toml/mod.rs#L60</a>&gt;). I just have a modified in-memory representation of an on-disk <code>Cargo.toml</code> that I want to turn into a <code>Manifest</code></p>",
        "id": 265232302,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639695709
    },
    {
        "content": "<p>I went ahead and cut a PR that just makes that function <code>pub</code> (under a slightly better name) since that would actually be sufficient for my use-case! &lt;<a href=\"https://github.com/rust-lang/cargo/pull/10209\">https://github.com/rust-lang/cargo/pull/10209</a>&gt;</p>",
        "id": 265234142,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1639696913
    },
    {
        "content": "<p>I am ok with that PR, but would appreciate input from the rest of the team.</p>",
        "id": 265311394,
        "sender_full_name": "Eh2406",
        "timestamp": 1639755232
    },
    {
        "content": "<p>hmm</p>",
        "id": 265547919,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1639997970
    },
    {
        "content": "<p>that issue doesn't seem to be accurate anymore?</p>",
        "id": 265547942,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1639997986
    },
    {
        "content": "<p>this results in the correct URL being used:</p>\n<ul>\n<li><code>cargo install empty-library --registry staging</code> to update the index</li>\n<li><code>rm -rf ~/.cargo/registry/{cache,src}/github.com-80cf1661ba913b15/</code> (force Cargo to re-download)</li>\n<li><code>cargo check</code></li>\n</ul>",
        "id": 265548161,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1639998084
    }
]