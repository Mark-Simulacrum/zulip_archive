[
    {
        "content": "<p>I'm trying to achieve the same end as build-std in my project. but we can't use cargo for various reasons.</p>",
        "id": 276915740,
        "sender_full_name": "Collin Baker",
        "timestamp": 1648493312
    },
    {
        "content": "<p>can someone point me to the implementation of how cargo actually builds std?</p>",
        "id": 276915759,
        "sender_full_name": "Collin Baker",
        "timestamp": 1648493328
    },
    {
        "content": "<p>Libstd is always built using cargo, whether through <code>-Zbuild-std</code> or through <code>cargo build</code> when built as part of the rustc build system. You are probably going to have a hard time to avoid using cargo to build libstd itself. The entire configuration on how to build it is described using <code>Cargo.toml</code> files. In fact it uses several crates from <a href=\"http://crates.io\">crates.io</a>. You may be able to use something like <a href=\"https://github.com/DianaNites/cargo-sysroot\">https://github.com/DianaNites/cargo-sysroot</a> to build libstd using cargo and then use the resulting sysroot using <code>--sysroot</code> in your own build system.</p>",
        "id": 276916564,
        "sender_full_name": "bjorn3",
        "timestamp": 1648493820
    },
    {
        "content": "<p>sorry, I was unclear. yeah using cargo to build std itself is fine for my project. just the build that consumes libstd cannot use cargo</p>",
        "id": 276916645,
        "sender_full_name": "Collin Baker",
        "timestamp": 1648493869
    },
    {
        "content": "<p>thanks for the pointer</p>",
        "id": 276916655,
        "sender_full_name": "Collin Baker",
        "timestamp": 1648493872
    }
]