[
    {
        "content": "<p>Mostly just curious, I don't <em>want</em> the duplicate versions, but - why doesn't cargo build two different versions of <code>miow</code> instead of giving up?</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to select a version for `miow`.\n    ... required by package `mio v0.7.6`\n    ... which is depended on by `tokio v1.0.1`\n    ... which is depended on by `rustwide v0.12.0 (https://github.com/jyn514/rustwide?branch=rustdoc-binary#dd62ea1c)`\n    ... which is depended on by `docs-rs v0.6.0 (/home/joshua/src/rust/docs.rs)`\nversions that meet the requirements `^0.3.6` are: 0.3.6\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `miow v0.3.3`\n    ... which is depended on by `mio-named-pipes v0.1.6`\n    ... which is depended on by `tokio v0.2.22`\n    ... which is depended on by `docs-rs v0.6.0 (/home/joshua/src/rust/docs.rs)`\n\nfailed to select a version for `miow` which could resolve this conflict\n</code></pre></div>",
        "id": 228989782,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614964483
    },
    {
        "content": "<p>0.3.3 and 0.3.6 are semver compatible. Normally only one semver compatible version of a crate would be built. If there are multiple semver compatible versions, it is ambiguous which crate should get which version as dependency.</p>",
        "id": 228990424,
        "sender_full_name": "bjorn3",
        "timestamp": 1614964707
    },
    {
        "content": "<p>I would expect it to build the latest available version</p>",
        "id": 228990568,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614964761
    },
    {
        "content": "<p>otherwise <em>all</em> requirements would be ambiguous</p>",
        "id": 228990585,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614964770
    },
    {
        "content": "<p><code>mio-named-pipes</code> must not work with <code>0.3.6</code></p>",
        "id": 228990724,
        "sender_full_name": "Eh2406",
        "timestamp": 1614964818
    },
    {
        "content": "<p>yeah it looks like someone pinned =0.3.3 while someone else required ^0.3.6 and then the world exploded because they're supposedly semver compatible.</p>\n<p>so either the person requesting =0.3.3 needs to fix their stuff, or <code>miow</code> itself broke semver on accident.</p>",
        "id": 228991499,
        "sender_full_name": "Lokathor",
        "timestamp": 1614965116
    },
    {
        "content": "<p>that makes sense, thanks :)</p>",
        "id": 228992000,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614965302
    },
    {
        "content": "<p>(I'm not going to go after them because I want to upgrade to tokio 1.0 at some point, and I'd rather wait than go back above 500 dependencies)</p>",
        "id": 228992053,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614965327
    },
    {
        "content": "<p>And Yes Cargos error message should explain that better!</p>",
        "id": 228992134,
        "sender_full_name": "Eh2406",
        "timestamp": 1614965368
    },
    {
        "content": "<p>mio-named-pipes has totally normal dependency constraints, so it's not that: <a href=\"https://docs.rs/crate/mio-named-pipes/0.1.6/source/Cargo.toml.orig\">https://docs.rs/crate/mio-named-pipes/0.1.6/source/Cargo.toml.orig</a></p>",
        "id": 228992302,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614965417
    },
    {
        "content": "<p>edit: Cargos error message needs to explain what the hell is going on!<br>\nBut don't hold your breath I've been working on it for years.</p>",
        "id": 228992654,
        "sender_full_name": "Eh2406",
        "timestamp": 1614965543
    },
    {
        "content": "<p>if someone wants to replicate locally, apply this patch to <a href=\"http://docs.rs\">docs.rs</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/Cargo.toml b/Cargo.toml</span>\n<span class=\"gh\">index 06b12e74..2d375287 100644</span>\n<span class=\"gd\">--- a/Cargo.toml</span>\n<span class=\"gi\">+++ b/Cargo.toml</span>\n<span class=\"gu\">@@ -43,7 +43,7 @@ schemamama = \"0.3\"</span>\n schemamama_postgres = \"0.3\"\n systemstat = \"0.1.4\"\n prometheus = { version = \"0.10.0\", default-features = false }\n<span class=\"gd\">-rustwide = \"0.11\"</span>\n<span class=\"gi\">+rustwide = { git = \"https://github.com/jyn514/rustwide\", branch = \"rustdoc-binary\" }</span>\n mime_guess = \"2\"\n dotenv = \"0.15\"\n zstd = \"0.5\"\n</code></pre></div>",
        "id": 228993283,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614965773
    },
    {
        "content": "<p>strangely <code>rustwide = \"0.12\"</code> works fine</p>",
        "id": 228993339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614965800
    },
    {
        "content": "<p>The v0.3.3 of <code>miow</code> seems coming from the lock file of <code>docs.rs</code>: <a href=\"https://github.com/rust-lang/docs.rs/blob/da1f36263ff70c02b119a9582c1228b08bd233f2/Cargo.lock#L1808\">https://github.com/rust-lang/docs.rs/blob/da1f36263ff70c02b119a9582c1228b08bd233f2/Cargo.lock#L1808</a></p>\n<p>Looks like for some reasons Cargo refused to update <code>miow</code>. A <em>full</em> update by <code>cargo update</code> works, and the resulting <code>Cargo.lock</code> does not contain <code>miow</code> 0.3.3.</p>\n<p>Also <code>once_cell</code> seems is affected too -- if I update <code>miow</code> to 0.3.6 by <code>cargo update -p miow:0.3.3</code> before applying the patch, it fails with this:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to select a version for `once_cell`.\n    ... required by package `tokio v1.0.1`\n    ... which is depended on by `rustwide v0.12.0 (https://github.com/jyn514/rustwide?branch=rustdoc-binary#60de5301)`\n    ... which is depended on by `docs-rs v0.6.0 (/home/hyd/code/docs.rs)`\nversions that meet the requirements `^1.5.2` are: 1.7.2, 1.7.1, 1.7.0, 1.6.0, 1.5.2\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `once_cell v1.4.0`\n    ... which is depended on by `badge v0.3.0 (/home/hyd/code/docs.rs/crates/badge)`\n    ... which is depended on by `docs-rs v0.6.0 (/home/hyd/code/docs.rs)`\n\nfailed to select a version for `once_cell` which could resolve this conflict\n</code></pre></div>\n<p>But if I update both of them by <code>cargo update -p miow:0.3.3 -p once_cell:1.4.0</code> before or after applying the patch, Cargo is extremely happy. The resulting lock file does not contain <code>miow</code> 0.3.3 either.</p>\n<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 229001479,
        "sender_full_name": "hyd-dev",
        "timestamp": 1614968947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span> I see what is happening here.  <a href=\"https://github.com/rust-lang/cargo/blob/c69409658a1f19452b784f675984e46da752a75b/src/cargo/ops/resolve.rs#L567-L586\">These lines</a> are the relevant section.</p>",
        "id": 229001506,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614968957
    },
    {
        "content": "<p>When adding the git dependency, it doesn't know it needs to poison the <a href=\"http://crates.io\">crates.io</a> source.</p>",
        "id": 229001567,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614968982
    },
    {
        "content": "<p>Not sure how to fix that, that is a very delicate section of code.</p>",
        "id": 229001617,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614969002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> A workaround is to run <code>cargo update -p rustwide -p once_cell</code>.  The issue is that Cargo doesn't want to invalidate transitive dependencies, so they stay \"locked\" to the version in Cargo.lock.  However, rustwide 0.12 brings in some new requirements that cause a conflict.  Cargo should be invalidating those, but when changing the source, it doesn't.</p>",
        "id": 229002679,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614969374
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/cargo/issues/9240\">https://github.com/rust-lang/cargo/issues/9240</a></p>",
        "id": 229006151,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614970784
    }
]