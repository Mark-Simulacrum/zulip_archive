[
    {
        "content": "<p>I'm working on an embedded <code>no_std</code> project and have a problem where <code>std</code> feature gets enabled by <code>build-dependencies</code>. In my project I have <code>memchr = { version = \"2.3\", default-features = false }</code> and it compiles fine. However, as soon as I add <code>riscv</code> dependency, <code>memchr</code> fails to compile because <code>riscv</code> has <code>memchr</code> with std enabled in <code>build-dependencies</code>. As I understand from cargo docs, <code>build-dependencies</code> should be completely isolated from normal dependencies, but the std feature flag somehow sneaks through?</p>",
        "id": 210812900,
        "sender_full_name": "Jurgis Balciunas",
        "timestamp": 1600730860
    },
    {
        "content": "<p>i think this is one of those very long lived bugs that keeps hitting embedded programmers over and over, i've run into it myself.</p>",
        "id": 210813558,
        "sender_full_name": "Lokathor",
        "timestamp": 1600731408
    },
    {
        "content": "<p>Yep, after hours of searching I finally digged <a href=\"https://github.com/rust-lang/cargo/issues/7915\">https://github.com/rust-lang/cargo/issues/7915</a> which fixes the issue. Even though it still requires compiler flag, it solved the issue!</p>",
        "id": 210813793,
        "sender_full_name": "Jurgis Balciunas",
        "timestamp": 1600731631
    }
]