[
    {
        "content": "<p>Sometimes <code>cargo install</code> fails (maybe some arbitrary system dependency is not installed, for example). Is there a way to keep the build directory around, so that I don't have to rebuild all 100+ successful dependencies?</p>",
        "id": 229318846,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615218088
    },
    {
        "content": "<p>I think Cargo keeps it by default? I just encountered the issue, and Cargo printed to the screen that the target directory had not been deleted and the path to it (<code>/tmp/...</code>). I passed the path with <code>--target-dir</code> to the second <code>cargo install</code> run, and it seems not rebuilding the successful dependencies. (Note that you have to delete the directory manually after the second (successful) <code>cargo install</code>.)</p>",
        "id": 229320760,
        "sender_full_name": "hyd-dev",
        "timestamp": 1615218805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/246057-t-cargo/topic/keeping.20dependencies.20for.20.60cargo.20install.60/near/229318846\">said</a>:</p>\n<blockquote>\n<p>Sometimes <code>cargo install</code> fails (maybe some arbitrary system dependency is not installed, for example). Is there a way to keep the build directory around, so that I don't have to rebuild all 100+ successful dependencies?</p>\n</blockquote>\n<p>you can set CARGO_TARGET_DIR to an absolute path</p>",
        "id": 229321009,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615218900
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 229321968,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615219206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374396\">hyd-dev</span> <a href=\"#narrow/stream/246057-t-cargo/topic/keeping.20dependencies.20for.20.60cargo.20install.60/near/229320760\">said</a>:</p>\n<blockquote>\n<p>I think Cargo keeps it by default? I just encountered the issue, and Cargo printed to the screen that the target directory had not been deleted and the path to it (<code>/tmp/...</code>). I passed the path with <code>--target-dir</code> to the second <code>cargo install</code> run, and it seems not rebuilding the successful dependencies. (Note that you have to delete the directory manually after the second (successful) <code>cargo install</code>.)</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/cargo/blob/970bc67c3775781b9708c8a36893576b9459c64a/src/cargo/ops/cargo_install.rs#L355\">https://github.com/rust-lang/cargo/blob/970bc67c3775781b9708c8a36893576b9459c64a/src/cargo/ops/cargo_install.rs#L355</a></p>",
        "id": 229324706,
        "sender_full_name": "hyd-dev",
        "timestamp": 1615219778
    },
    {
        "content": "<p>\"inspect\" doesn't immediately scream \"reuse\". Wonder if <code>cargo install</code> should say \"rerun the command with ... to resume once you've fixed things\"</p>",
        "id": 229325660,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615219985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374396\">hyd-dev</span> <a href=\"#narrow/stream/246057-t-cargo/topic/keeping.20dependencies.20for.20.60cargo.20install.60/near/229320760\">said</a>:</p>\n<blockquote>\n<p>I just encountered the issue</p>\n</blockquote>\n<p>Do you happen to recall what you did? I want to document this properly, but I don't have a command at-hand that will fail to install.</p>",
        "id": 229326325,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615220143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/246057-t-cargo/topic/keeping.20dependencies.20for.20.60cargo.20install.60/near/229326325\">said</a>:</p>\n<blockquote>\n<p>Do you happen to recall what you did? I want to document this properly, but I don't have a command at-hand that will fail to install.</p>\n</blockquote>\n<p>I tried to install <code>wasmer-cli</code> with <code>llvm</code> feature, and I didn't have LLVM installed properly.</p>",
        "id": 229327040,
        "sender_full_name": "hyd-dev",
        "timestamp": 1615220299
    },
    {
        "content": "<p>Thanks! Turns out I had LLVM well-enough installed, so I went with diesel, which tries to use mysql by default. Created <a href=\"https://stackoverflow.com/q/66533502/155423\">How can I avoid rebuilding dependencies when <code>cargo install</code> fails due to a system configuration issue?</a></p>",
        "id": 229329709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615220891
    }
]