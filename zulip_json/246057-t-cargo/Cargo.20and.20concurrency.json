[
    {
        "content": "<p>Is it safe to run more than 1 instance of Cargo, if they use different <code>--target-dir</code>?  I'm thinking specifically about the cached crates that are stored in <code>$CARGO_HOME</code>, and the copy of the <a href=\"http://crates.io\">crates.io</a> index. </p>\n<p>In other words, if I have a single huge source tree, and a dozen <code>Cargo.toml</code> workspaces (each of which contains N crate members), can I safely run <code>cargo --target-dir .../some_dir</code> for each of these workspaces?</p>\n<p>It's not an option to combine them into one single Cargo invocation.</p>",
        "id": 222790156,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1610661339
    },
    {
        "content": "<p>Cargo uses filesystem locks to avoid clobbering concurrent processes IIRC</p>",
        "id": 222790332,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1610661414
    },
    {
        "content": "<p>so you should be fine</p>",
        "id": 222790335,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1610661416
    },
    {
        "content": "<p>Good to hear. Does it use different locking scopes for $CARGO_HOME vs. the target dir?</p>",
        "id": 222790644,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1610661584
    },
    {
        "content": "<p>I think so?</p>",
        "id": 222791299,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1610661873
    },
    {
        "content": "<p>Yes we strive to make cargo safe to concurrently run at all times. This isn't heavily tested, however, so there may be a bug here or there (we haven't seen one in a long time though)</p>",
        "id": 222795757,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1610663950
    },
    {
        "content": "<p>The actual parallelism you'll get from concurrent cargo invocations, however, is quite poor. There are separate locks for the home and target directory, though. Basically cargo executions in parallel with a shared home dir oonly synchronize during the download phase. Shared cargo invocations with the same target directory, however, are entirely serialized</p>",
        "id": 222795918,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1610664010
    },
    {
        "content": "<p>In the near term, my priority is correctness and reliability. So this sounds good.</p>",
        "id": 222796158,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1610664171
    },
    {
        "content": "<p>Ah ok that should work well then! That matches with how we approach it which is that we want everything to primarily work first, and afterwards we try to increase actual parallelism where we can</p>",
        "id": 222796318,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1610664269
    },
    {
        "content": "<p>but if you run into any issues please let us know!</p>",
        "id": 222796329,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1610664278
    }
]