[
    {
        "content": "<p>I think I'm missing something important about how cross-compilation is supposed to work.</p>\n<p>I tried <code>cargo build --release --target aarch64-unknown-linux-musl</code> on a crate I'm working on. After fixing a couple of issues in dependencies, it got most of the way through building, but then at the final link step, it tried to use <code>cc</code> to link. I realize I can fix that by manually defining a linker, but shouldn't cargo be able to figure that out itself?</p>",
        "id": 236018221,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619307492
    },
    {
        "content": "<p>If I copy-paste the (very long) link line and change <code>cc</code> to <code>aarch64-linux-musl-gcc</code>, it links just fine.</p>",
        "id": 236018237,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619307523
    },
    {
        "content": "<p>I'm also trying to figure out whether cargo or rustc is doing the final link step.</p>",
        "id": 236018293,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619307595
    },
    {
        "content": "<p>rustc is the one that invokes the linker</p>",
        "id": 236019478,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1619308547
    },
    {
        "content": "<p>and rustc has always defaulted to <code>cc</code> if nothing is otherewise specified</p>",
        "id": 236019482,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1619308555
    },
    {
        "content": "<p>all the logic in the <code>cc</code> crate is not mirrored into the compiler itself</p>",
        "id": 236019526,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1619308566
    },
    {
        "content": "<p>ya, it is up to the user to specify the target-specific linkers in <code>.cargo/config.toml</code></p>",
        "id": 236020153,
        "sender_full_name": "nagisa",
        "timestamp": 1619309044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Cross-compilation.20and.20linkers/near/236019482\">said</a>:</p>\n<blockquote>\n<p>and rustc has always defaulted to <code>cc</code> if nothing is otherewise specified</p>\n</blockquote>\n<p>Ah, got it.</p>",
        "id": 236031188,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619318832
    },
    {
        "content": "<p>Is that the <em>desired</em> behavior, or would it potentially be feasible for rustc to gain some more automatic linker handling?</p>",
        "id": 236031212,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619318855
    },
    {
        "content": "<p>afaik it's just been what's always there, but it basically never works if --target is different than --host so I think there's room for improvement</p>",
        "id": 236036813,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1619325329
    },
    {
        "content": "<p>I may file a compiler MCP suggesting a change in that area, then, and see what people think.</p>",
        "id": 236037188,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619325778
    }
]