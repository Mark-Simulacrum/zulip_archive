[
    {
        "content": "<p>Hi, <a href=\"https://github.com/rust-lang/rust/issues/87704\">#87704</a> failed because it caused some error messages to change in Cargo tests. I'm unsure of the procedure here. Should I be trying to match the previous error output? Or should Cargo's tests be updated?</p>",
        "id": 261721445,
        "sender_full_name": "Chris Denton",
        "timestamp": 1637104326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> Cargo's tests will need to be updated.</p>\n<p>Quick question, do you know why it changed from  ERROR_FILE_NOT_FOUND  to  ERROR_PATH_NOT_FOUND?</p>",
        "id": 261723495,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637105574
    },
    {
        "content": "<p>Err, not off hand. It might just be a side effect of manually testing for its existence.</p>",
        "id": 261723754,
        "sender_full_name": "Chris Denton",
        "timestamp": 1637105743
    },
    {
        "content": "<p>I could investigate but unfortunately not right now.</p>",
        "id": 261723813,
        "sender_full_name": "Chris Denton",
        "timestamp": 1637105774
    },
    {
        "content": "<p>Yea, probably that it is an absolute path with a non-existent directory. Probably not too important.  </p>\n<p>I'm trying to think of the best way to unstick your problem.  It's a little tricky because cargo's tests need to pass on stable/beta/nightly, and the nightly we have won't have your PR.  So I think the best way forward is to just ignore the exact error text for now, and we can maybe add it back in the future.</p>",
        "id": 261724445,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637106134
    },
    {
        "content": "<p>If you can make a PR to rust-lang/cargo, I'll try to get the submodule updated to unblock your PR.  The error text can be ignored by replacing the text with <code>[..]</code> in the test (that is equivalent to a <code>.*</code> regex).</p>",
        "id": 261724520,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637106209
    },
    {
        "content": "<p>And maybe add a comment in the tests explaining the situation.</p>",
        "id": 261724823,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637106313
    },
    {
        "content": "<p>OK, thanks for looking into this. I'll make PR but it might be awhile before it's submitted  (maybe tomorrow).</p>",
        "id": 261727193,
        "sender_full_name": "Chris Denton",
        "timestamp": 1637107623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> </p>\n<blockquote>\n<p>Quick question, do you know why it changed from ERROR_FILE_NOT_FOUND to ERROR_PATH_NOT_FOUND?</p>\n</blockquote>\n<p>Just to follow up on this. The answer was pretty much what you assumed. When we were letting <code>CreateProcessW</code> search for a file, it was mapping the underlying errors to <code>ERROR_FILE_NOT_FOUND</code>  (even when using an absolute path). Whereas when giving it a path to use it just tries to open it and reports the error as given. And indeed, the difference between <code>ERROR_FILE_NOT_FOUND</code> and <code>ERROR_PATH_NOT_FOUND</code> is usually that in the latter case an ancestor directory does not exist. Though, as shown here, that distinction isn't always maintained.</p>",
        "id": 262120535,
        "sender_full_name": "Chris Denton",
        "timestamp": 1637351522
    }
]