[
    {
        "content": "<p>I have determined solutions to the issues gecko was seeing with <code>cargo vendor</code> on windows. I would be interested in feedback from cargo devs on a couple things described here: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1647582#c15\">https://bugzilla.mozilla.org/show_bug.cgi?id=1647582#c15</a></p>\n<p>tldr:</p>\n<ol>\n<li>\n<p>cargo vendor looks up the user's <code>git config core.autocrlf</code> and respects it, which can cause vendorings to behave differently on windows than linux.</p>\n</li>\n<li>\n<p>cargo 1.45 fixed an issue with vendor on windows that deterministically caused some dotfiles to get spuriously deleted/changed. It would be good to know what the issue was (no sign of the issue in the changelog).</p>\n</li>\n</ol>",
        "id": 204214928,
        "sender_full_name": "Gankra",
        "timestamp": 1594997402
    },
    {
        "content": "<p>The former seems wrong to me; no matter the setting there, we should vendor files with <em>exactly</em> the contents from upstream.</p>",
        "id": 204222630,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595000901
    },
    {
        "content": "<p>Note that <code>core.autocrlf</code> is not the only pref that can affect crlf behavior in git (not entirely sure that's true for libgit2, though)</p>",
        "id": 204258490,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1595019638
    },
    {
        "content": "<p>I think it'd be appropriate for cargo-vendor to check in an exact copy of the source, without applying any filters or similar.</p>",
        "id": 204260719,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595020837
    },
    {
        "content": "<p>I completely agree, FWIW. Just saying <code>core.autocrlf</code> may not be the only thing to look out for.</p>",
        "id": 204261740,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1595021342
    },
    {
        "content": "<p>I've spent the morning walking through the code of cargo/libgit2. After some confusion about how this could possibly be happening, I realized the crlf issue specifically only happens when vendoring <code>git</code> dependencies (e.g. lucet-wasi and spirv-cross-internal), which makes perfect sense. I'm currently looking at what needs to be changed ~here: <a href=\"https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L778-L779\">https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L778-L779</a></p>",
        "id": 204465898,
        "sender_full_name": "Gankra",
        "timestamp": 1595273631
    },
    {
        "content": "<p>I'm pretty sure the lookup of the default git configs here is a red herring, and that config is only used to setup our auth protocols and then thrown away</p>",
        "id": 204466000,
        "sender_full_name": "Gankra",
        "timestamp": 1595273671
    },
    {
        "content": "<p>which is leaving me to believe that when we grab the Repository libgit2 is looking up and populating crlf configs.</p>",
        "id": 204466079,
        "sender_full_name": "Gankra",
        "timestamp": 1595273722
    },
    {
        "content": "<p>I don't see any explicit mention of crlf in the <code>git2</code> crate, so either we need to mutate the actual configs, or pass some special flag down to libgit2 -- not really sure what the right answer is</p>",
        "id": 204466239,
        "sender_full_name": "Gankra",
        "timestamp": 1595273811
    },
    {
        "content": "<p>(insights from a libgit2 veteran would be appreciated)</p>",
        "id": 204466404,
        "sender_full_name": "Gankra",
        "timestamp": 1595273903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> pls help my vendors are dying</p>",
        "id": 204467145,
        "sender_full_name": "Gankra",
        "timestamp": 1595274296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankra</span> you're right that the linked location there shouldn't affect checkouts</p>",
        "id": 204468176,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595274851
    },
    {
        "content": "<p>so we should use global git config or w/e for global checkouts</p>",
        "id": 204468193,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595274861
    },
    {
        "content": "<p>er, for any checkouts</p>",
        "id": 204468203,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595274864
    },
    {
        "content": "<p>er hm, actually...</p>",
        "id": 204468337,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595274942
    },
    {
        "content": "<p>I think so,we should always use the global git config</p>",
        "id": 204468536,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595275042
    },
    {
        "content": "<p>but I'm also not entirely sure what the issue is here</p>",
        "id": 204468548,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595275049
    },
    {
        "content": "<p>it sounds like there's crlf issues, but I don't really understand how or when it shows up</p>",
        "id": 204468571,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595275060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> when we vendor a git source, mangling crlfs doesn't make sense, because the repo should be treated as read-only.</p>",
        "id": 204471381,
        "sender_full_name": "Gankra",
        "timestamp": 1595276595
    },
    {
        "content": "<p>but libgit2 <em>is</em> checking your global configs, and mangling the checkout when crlf=true</p>",
        "id": 204471441,
        "sender_full_name": "Gankra",
        "timestamp": 1595276628
    },
    {
        "content": "<p>er sorry, can you clarify?</p>",
        "id": 204471558,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276685
    },
    {
        "content": "<p>so like you want to vendor the exact binary bytes that are in the git repo's database, nothing crlf considered?</p>",
        "id": 204471593,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> if you <code>cargo vendor</code> a crate that depends on lucet-wasi via git with <code>git config core.autocrlf=false</code> and check the result into your project, and then someone else <code>cargo vendor</code>s with <code>autocrlf=true</code> on windows, there will be changes to the vendor even when the repo hasn't changed</p>",
        "id": 204471890,
        "sender_full_name": "Gankra",
        "timestamp": 1595276867
    },
    {
        "content": "<p>because we clobber the new lines</p>",
        "id": 204471910,
        "sender_full_name": "Gankra",
        "timestamp": 1595276878
    },
    {
        "content": "<p>ok I think the fix here might be to fix our git checkout code then to always use a config with crlf mangling turned off</p>",
        "id": 204472018,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276934
    },
    {
        "content": "<p>(I don't really know what <code>autocrlf</code> does)</p>",
        "id": 204472028,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276940
    },
    {
        "content": "<p>but <code>cargo vendor</code> simply copies (effectively <code>cp</code>) from cargo's global checkout</p>",
        "id": 204472052,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276951
    },
    {
        "content": "<p>so I think the buggy lines are showing up in cargo's global checkout which then get copied locally</p>",
        "id": 204472090,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595276967
    },
    {
        "content": "<p>ah ok, that makes sense. the abstraction over curl/git/local was obfuscating things a bit</p>",
        "id": 204472143,
        "sender_full_name": "Gankra",
        "timestamp": 1595276998
    },
    {
        "content": "<p>is it as simple as tossing a <code>.gitconfig</code> file in the cargo global checkout?</p>",
        "id": 204472253,
        "sender_full_name": "Gankra",
        "timestamp": 1595277037
    },
    {
        "content": "<p>it's probably best to figure out how to affect a <code>Conifg</code></p>",
        "id": 204472320,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277071
    },
    {
        "content": "<p>er, a <code>git2::Config</code></p>",
        "id": 204472326,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277076
    },
    {
        "content": "<p>this is the function that creates the checkout -- <a href=\"https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L145-L178\">https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L145-L178</a></p>",
        "id": 204472377,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277099
    },
    {
        "content": "<p>but there's a few different ways that the actual literal checkout happens</p>",
        "id": 204472401,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277110
    },
    {
        "content": "<p>afaict a git2::Config only has ops that let you edit physical .gitconfigs..?</p>",
        "id": 204472463,
        "sender_full_name": "Gankra",
        "timestamp": 1595277126
    },
    {
        "content": "<p>I believe that all reset operations flow through here though -- <a href=\"https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L668-L679\">https://github.com/rust-lang/cargo/blob/f12d72e11b8643b4851a50325d77af962931fe98/src/cargo/sources/git/utils.rs#L668-L679</a></p>",
        "id": 204472466,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277128
    },
    {
        "content": "<p>I think it persists in-memory state as well</p>",
        "id": 204472502,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277147
    },
    {
        "content": "<p>I'd probably test out modifying <code>reset</code></p>",
        "id": 204472511,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277152
    },
    {
        "content": "<p>extracting the repo's <code>Config</code> or something like that</p>",
        "id": 204472530,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277161
    },
    {
        "content": "<p>I forget what libgit2 gives as knobs in that regard</p>",
        "id": 204472539,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277168
    },
    {
        "content": "<p>right but like, if I ask a Config to set autocrlf, it will write to a .gitconfig somewhere, right?</p>",
        "id": 204472560,
        "sender_full_name": "Gankra",
        "timestamp": 1595277179
    },
    {
        "content": "<p>no idea</p>",
        "id": 204472600,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277205
    },
    {
        "content": "<p>I\"d start by calling <code>Repository::config()</code></p>",
        "id": 204472652,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277232
    },
    {
        "content": "<p>and then calling <code>set_bool</code></p>",
        "id": 204472655,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277234
    },
    {
        "content": "<p>do that before the <code>reset --hard</code> and see if that helps</p>",
        "id": 204472757,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595277266
    },
    {
        "content": "<p>\"Set the value of a string config variable in the config file with the highest level (usually the local one).\"</p>",
        "id": 204472766,
        "sender_full_name": "Gankra",
        "timestamp": 1595277269
    },
    {
        "content": "<p>sounds like it writes to a file</p>",
        "id": 204472788,
        "sender_full_name": "Gankra",
        "timestamp": 1595277278
    },
    {
        "content": "<p>i just wanna be sure we're ok with that -- it's unclear to me how much gitconfigs get checked in / how much we need to respect that</p>",
        "id": 204472887,
        "sender_full_name": "Gankra",
        "timestamp": 1595277330
    },
    {
        "content": "<p>I think it should be fine if it writes a .gitconfig</p>",
        "id": 204474426,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595278266
    },
    {
        "content": "<p>we write a random .cargo-ok file in there too</p>",
        "id": 204474432,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595278271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/246057-t-cargo/topic/cargo.20vendor.20windows.20issues/near/204472018\">said</a>:</p>\n<blockquote>\n<p>ok I think the fix here might be to fix our git checkout code then to always use a config with crlf mangling turned off</p>\n</blockquote>\n<p>We should also avoid filters, though I think libgit2 does that by default (because they'd involve invoking an external program).</p>",
        "id": 204475281,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595278786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/246057-t-cargo/topic/cargo.20vendor.20windows.20issues/near/204474426\">said</a>:</p>\n<blockquote>\n<p>I think it should be fine if it writes a .gitconfig</p>\n</blockquote>\n<p>You'd want to set the option in <code>.git/config</code>. Git doesn't look at <code>.gitconfig</code> in the repository, that'd be unsafe.</p>",
        "id": 204475408,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595278838
    },
    {
        "content": "<p>(Alternatively, we could just override it in the <code>Config</code> without persisting that to disk.)</p>",
        "id": 204475428,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595278853
    },
    {
        "content": "<p>ok, fixed? <a href=\"https://github.com/rust-lang/cargo/pull/8523\">https://github.com/rust-lang/cargo/pull/8523</a></p>",
        "id": 204495006,
        "sender_full_name": "Gankra",
        "timestamp": 1595286114
    }
]