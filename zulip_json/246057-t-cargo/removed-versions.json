[
    {
        "content": "<p>I'm digging into what happens with Cargo if a crate version disappears from a registry (not yanked, actually _removed_, like say due to a DMCA or \"Right to be Forgotten\" request). I did a very brief experiment where I added a dependency on <code>autocfg = \"1\"</code> to a fresh <code>Cargo.toml</code>, ran <code>cargo check</code>, then manually edited <code>Cargo.lock</code> to change the version number for the <code>autocfg</code> entry to <code>1.0.100</code>, and then re-ran <code>cargo check</code>. To  my slight surprise, I got the error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to select a version for the requirement `autocfg = &quot;=1.0.100&quot;`\ncandidate versions found which didn&#39;t match: 1.0.1, 1.0.0, 0.1.7, ...\nlocation searched: crates.io index\n</code></pre></div>\n<p>Given that I didn't pass <code>--locked</code>, I would have expected Cargo to accept 1.0.1 given that it matches the version specifier of <code>= \"1\"</code> just fine, maybe with a warning, but this is a hard error. Is this expected behavior?</p>",
        "id": 260831244,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636479373
    },
    {
        "content": "<p>Now that you say it, I'm not at all surprised.</p>",
        "id": 260832662,
        "sender_full_name": "Eh2406",
        "timestamp": 1636479870
    },
    {
        "content": "<p>but i think a warning and an upgrade would be a more consistent behavior.</p>",
        "id": 260832748,
        "sender_full_name": "Eh2406",
        "timestamp": 1636479916
    },
    {
        "content": "<p>Do note that in this case it would be a _downgrade_ compared to the version from <code>Cargo.lock</code>, but yeah, I agree.</p>",
        "id": 260833259,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480124
    },
    {
        "content": "<p>i suspect that fixing this properly will require a fairly major rewrite of how lock files are interpreted. :-(</p>",
        "id": 260833554,
        "sender_full_name": "Eh2406",
        "timestamp": 1636480219
    },
    {
        "content": "<p>would love to be proven wrong.</p>",
        "id": 260833581,
        "sender_full_name": "Eh2406",
        "timestamp": 1636480237
    },
    {
        "content": "<p>Want me to file an issue for tracking this?</p>",
        "id": 260834140,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480449
    },
    {
        "content": "<p>Go for it!</p>",
        "id": 260834381,
        "sender_full_name": "Eh2406",
        "timestamp": 1636480549
    },
    {
        "content": "<p>I'm specifically worried about this hitting Cargo \"out of the blue\". Imagine, if you will, if say <code>serde 1.0.130</code> _had_ to get completely pulled from the index. Like, lawsuits, government request, what have you, all insisting it happen _yesterday_.</p>",
        "id": 260834523,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480599
    },
    {
        "content": "<p>Imagine the number of Rust users hitting this error <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> <br>\nAdmittedly the fix is simple, but it's still manual.</p>",
        "id": 260834605,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480634
    },
    {
        "content": "<p>Ture.</p>",
        "id": 260834654,
        "sender_full_name": "Eh2406",
        "timestamp": 1636480659
    },
    {
        "content": "<p>I honestly think it'd be appropriate to <em>error</em> (not warning) and require <code>cargo upgrade</code> to make this work.</p>",
        "id": 260834677,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636480672
    },
    {
        "content": "<p>It's such a rare situation, and people normally expect that if you have a specific version in your lockfile <em>you get that version</em>.</p>",
        "id": 260834765,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636480687
    },
    {
        "content": "<p>Do they? Even without <code>--locked</code>? Then why is <code>--locked</code> even necessary?</p>",
        "id": 260834839,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480711
    },
    {
        "content": "<p>I don't think we should automatically say \"oh, I guess that vanished off the face of the earth, I'll try another\".</p>",
        "id": 260834843,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636480713
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120054\">Jon Gjengset</span> <a href=\"#narrow/stream/246057-t-cargo/topic/removed-versions/near/260834839\">said</a>:</p>\n<blockquote>\n<p>Do they? Even without <code>--locked</code>? Then why is <code>--locked</code> even necessary?</p>\n</blockquote>\n<p>Because Cargo <em>will</em> automatically update the lockfile under other circumstances, such as the .toml file changing.</p>",
        "id": 260834888,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636480734
    },
    {
        "content": "<p>(heading off for a meeting — will be back later)</p>",
        "id": 260834925,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636480746
    },
    {
        "content": "<p>It does look like <code>cargo update</code> resolves this particular problem, I'm just wondering whether the right call is to require a <code>cargo update</code> under these circumstances. I forget — do we require <code>cargo update</code> if a version is yanked?</p>",
        "id": 260839920,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636482779
    },
    {
        "content": "<p>No, it just continues to use the yanked vertion.</p>",
        "id": 260840080,
        "sender_full_name": "Eh2406",
        "timestamp": 1636482840
    },
    {
        "content": "<p>Huh, fascinating. I suppose then requiring <code>cargo update</code> might be valuable, and it'll more be a matter of making the error better (and indicate that <code>cargo update</code> may be the solution).</p>",
        "id": 260840518,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636483015
    },
    {
        "content": "<p>Especially if eventually we put a tombstone in place of the version that provides an explanation.</p>",
        "id": 260840783,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636483109
    },
    {
        "content": "<p>The error could show that explanation.</p>",
        "id": 260840791,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636483113
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/10063\">https://github.com/rust-lang/cargo/issues/10063</a></p>",
        "id": 260843403,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1636484111
    }
]