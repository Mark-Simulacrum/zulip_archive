[
    {
        "content": "<p><a href=\"/user_uploads/4715/AuwWTafM3oMX1DVChN1OBOKx/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/AuwWTafM3oMX1DVChN1OBOKx/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/AuwWTafM3oMX1DVChN1OBOKx/image.png\"></a></div><blockquote>\n<p>The second graph shows Cargo's concurrency over time. The three lines are:</p>\n<ul>\n<li>\"Waiting\" (red) — This is the number of units waiting for a CPU slot to open.</li>\n<li>\"Inactive\" (blue) — This is the number of units that are waiting for their dependencies to finish.</li>\n<li>\"Active\" (green) — This is the number of units currently running.</li>\n</ul>\n</blockquote>\n<p>What does the background filled area indicate?</p>",
        "id": 261300227,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636745663
    },
    {
        "content": "<p>I believe it's CPU usage.</p>",
        "id": 261300372,
        "sender_full_name": "Eh2406",
        "timestamp": 1636745747
    },
    {
        "content": "<p>Makes me sadder about the complete graph then</p>\n<p><a href=\"/user_uploads/4715/t3Gak4AwGv85JK0Q43EC4Bzm/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/t3Gak4AwGv85JK0Q43EC4Bzm/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/t3Gak4AwGv85JK0Q43EC4Bzm/image.png\"></a></div>",
        "id": 261300998,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746053
    },
    {
        "content": "<p>look on the bright side, it just means there's lots of room to make rustc faster. <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 261301279,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636746174
    },
    {
        "content": "<p>I'm not actually sure if that's even compiling Rust code, TBH.\u0010 This project has a number of C dependencies. My finger-crossed idea is that those dependencies are doing single-threaded builds. My multiple-finger-crossed idea is that I can \"just\" add <code>-j ...</code> to the -sys crates that build them.</p>",
        "id": 261301479,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746268
    },
    {
        "content": "<p>The other information on that page should be able to tell you which crates are slow, and where they appear in the timeline. What it one of your C deps in 40-49?</p>",
        "id": 261302097,
        "sender_full_name": "Eh2406",
        "timestamp": 1636746544
    },
    {
        "content": "<p>So many slow crates, sadly. Each point is one crate, height corresponds to compilation time:</p>\n<p><a href=\"/user_uploads/4715/76P9hR0Q1qX6C6CjAFpvXrds/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/76P9hR0Q1qX6C6CjAFpvXrds/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/76P9hR0Q1qX6C6CjAFpvXrds/image.png\"></a></div>",
        "id": 261302632,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746816
    },
    {
        "content": "<p>During that specific window (40-49) there is the <code>zstd-sys</code> build script running.</p>",
        "id": 261302829,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746893
    },
    {
        "content": "<p>Compiling <em>just</em> that crate:</p>\n<p><a href=\"/user_uploads/4715/YFjVKNa6MrpfJU1awg9-ZD2N/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/YFjVKNa6MrpfJU1awg9-ZD2N/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/YFjVKNa6MrpfJU1awg9-ZD2N/image.png\"></a></div>",
        "id": 261302912,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746935
    },
    {
        "content": "<p>And it uses the <code>parallel</code> feature from <code>cc</code>, so my guess is that that's linking time of the C library.</p>",
        "id": 261303049,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636746980
    },
    {
        "content": "<p>While I knew linking tends to be slow, this is the first time I'm realizing that we don't always just link once at the end of the build. When we build C dependencies into intermediate libraries, that has linking involved too.</p>",
        "id": 261303169,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747047
    },
    {
        "content": "<p>zstd is statically linked, right? In that case only rustc should invoke the linker. Building libzstd should only produce an archive (<code>.a</code>), which is fast. Maybe one of the source files is big?</p>",
        "id": 261303584,
        "sender_full_name": "bjorn3",
        "timestamp": 1636747239
    },
    {
        "content": "<p>Wait a second. <a href=\"#narrow/stream/246057-t-cargo/topic/What's.20the.20background.20in.20the.20timing.20graph.3F/near/261302912\">this graph</a> has a legend for the graph. Why didn't my <a href=\"#narrow/stream/246057-t-cargo/topic/What's.20the.20background.20in.20the.20timing.20graph.3F/near/261300998\">first one</a>?</p>",
        "id": 261303717,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/246057-t-cargo/topic/What's.20the.20background.20in.20the.20timing.20graph.3F/near/261303584\">said</a>:</p>\n<blockquote>\n<p>Building libzstd should only produce an archive (<code>.a</code>), which is fast. Maybe one of the source files is big?</p>\n</blockquote>\n<p>Ah, good point. Archival does go pretty quick. What appears to be the last file it builds creates a 4MB .o file.</p>",
        "id": 261304418,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747641
    },
    {
        "content": "<p>Hm, that is strange.  The spacing also looks a little off, and the graph doesn't look like it finishes.</p>",
        "id": 261304424,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636747644
    },
    {
        "content": "<p>Perhaps you can share the html file?</p>",
        "id": 261304449,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636747657
    },
    {
        "content": "<p>No, no.</p>",
        "id": 261304462,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747669
    },
    {
        "content": "<p>I'm just dumb</p>",
        "id": 261304468,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747674
    },
    {
        "content": "<p>And missed the scrollbar <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 261304528,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747689
    },
    {
        "content": "<p>For posterity: </p>\n<p><a href=\"/user_uploads/4715/-j1KLPFaCYV3AkSjKGgB3HoH/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/-j1KLPFaCYV3AkSjKGgB3HoH/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/-j1KLPFaCYV3AkSjKGgB3HoH/image.png\"></a></div>",
        "id": 261304621,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747783
    },
    {
        "content": "<p>Starting at about 62s is when it starts crunching on the final binary (which takes 40 seconds on its own)</p>",
        "id": 261304731,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636747840
    },
    {
        "content": "<p>I assume the CPU usage isn't \"smart\" — if I had something outside of cargo burning all my CPU, it'd show in the graph as 100% all the way though?</p>",
        "id": 261305593,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636748320
    },
    {
        "content": "<p>Yea, I believe it is system load.</p>",
        "id": 261305877,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636748463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/246057-t-cargo/topic/What's.20the.20background.20in.20the.20timing.20graph.3F/near/261303584\">said</a>:</p>\n<blockquote>\n<p>Maybe one of the source files is big?</p>\n</blockquote>\n<p>Seems likely:</p>\n<div class=\"codehilite\"><pre><span></span><code> ...\n 35K lib/compress/zstd_compress_sequences.o\n 42K lib/compress/fse_compress.o\n 45K lib/dictBuilder/fastcover.o\n 50K lib/compress/zstd_compress_superblock.o\n 50K lib/compress/huf_compress.o\n 58K lib/common/fse_decompress.o\n 59K lib/compress/zstd_ldm.o\n 60K lib/dictBuilder/cover.o\n 80K lib/compress/zstdmt_compress.o\n 93K lib/dictBuilder/zdict.o\n101K lib/decompress/zstd_decompress_block.o\n103K lib/legacy/zstd_v01.o\n125K lib/legacy/zstd_v03.o\n129K lib/decompress/zstd_decompress.o\n134K lib/dictBuilder/divsufsort.o\n141K lib/decompress/huf_decompress.o\n142K lib/legacy/zstd_v04.o\n157K lib/legacy/zstd_v02.o\n171K lib/legacy/zstd_v06.o\n179K lib/legacy/zstd_v05.o\n209K lib/legacy/zstd_v07.o\n269K lib/compress/zstd_fast.o\n366K lib/compress/zstd_compress.o\n391K lib/compress/zstd_double_fast.o\n1.5M lib/compress/zstd_opt.o\n4.0M lib/compress/zstd_lazy.o\n</code></pre></div>",
        "id": 261306620,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636748894
    },
    {
        "content": "<p><em>obviously</em> the solution is to RIIR.</p>",
        "id": 261310031,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1636750872
    }
]