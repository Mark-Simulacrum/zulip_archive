[
    {
        "content": "<p>Hey, I'm trying to include a crate that uses <code>cfg</code> for architecture specific dependencies, but for some reason it tries to include packages even when cfg evaluates to false.</p>\n<p>For example I have this in dependency <code>cargo.toml</code> (async-embedded):</p>\n<div class=\"codehilite\"><pre><span></span><code>[target.&#39;cfg(false)&#39;.dependencies]\nriscv = &quot;0.5.6&quot;\n</code></pre></div>\n\n\n<p>And then in my main project <code>cargo update</code> fails with:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to select a version for `bare-metal`.\n    ... required by package `stm32f4xx-hal v0.8.0`\n    ... which is depended on by `gimbal-ctrl v0.1.0 (C:\\Users\\User\\Documents\\Dev\\gimbal-ctrl)`\nversions that meet the requirements `^0.2.5` are: 0.2.5\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `bare-metal v0.2.1`\n    ... which is depended on by `riscv v0.5.6`\n    ... which is depended on by `async-embedded v0.0.0-alpha.0 (C:\\Users\\User\\Documents\\Dev\\async-on-embedded\\async-embedded)`\n    ... which is depended on by `gimbal-ctrl v0.1.0 (C:\\Users\\User\\Documents\\Dev\\gimbal-ctrl)`\n\nfailed to select a version for `bare-metal` which could resolve this conflict\n</code></pre></div>\n\n\n<p>So even though <code>riscv</code> dependency is not getting built (is disabled by cfg), cargo still tries to match dependency versions and fails. Is this a bug with cargo or something wrong with my setup?</p>",
        "id": 209300900,
        "sender_full_name": "Jurgis Balciunas",
        "timestamp": 1599488459
    },
    {
        "content": "<p>When resolution is performed, it assumes all <code>cfg</code> expressions are true.  This is so that it resolves the same no matter what target or platform you are using.</p>",
        "id": 209301071,
        "sender_full_name": "Eric Huss",
        "timestamp": 1599488547
    },
    {
        "content": "<p>I see, that explains it. Are there any workarounds for this without forking crate and removing all other archs from <code>cargo.toml</code>? It seems quite problematic for crates with multiple cfg archs</p>",
        "id": 209301345,
        "sender_full_name": "Jurgis Balciunas",
        "timestamp": 1599488716
    },
    {
        "content": "<p>In this specific case, I don't see an immediate solution.  Those two packages have conflicting requirements.  It looks like <code>riscv 0.6.0</code> no longer has the restriction, so maybe try to see if <code>async-embedded</code> can use that instead?</p>",
        "id": 209301722,
        "sender_full_name": "Eric Huss",
        "timestamp": 1599488997
    },
    {
        "content": "<p>Yeah seems like the only option. Submitting a PR for them. Thanks for the help!</p>",
        "id": 209302479,
        "sender_full_name": "Jurgis Balciunas",
        "timestamp": 1599489539
    }
]