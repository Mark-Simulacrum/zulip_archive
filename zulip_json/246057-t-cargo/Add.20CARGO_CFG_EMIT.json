[
    {
        "content": "<p>Based on my understanding there is no hard definition on what is published under CARGO_CFG_X:<br>\n<a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\">https://doc.rust-lang.org/cargo/reference/environment-variables.html</a></p>\n<p>I have a build script which only works if user adds the flag \"--emit=llvm-bc\" to cargo rustc.<br>\nI'm using a cargo-wrapper to handle it, but as a backup check or for the case that user build the crate manually I want to let them know about this <br>\nissue with a specific error message. <br>\nChecking the env vars it turned out that the information is not set.<br>\nWould a PR to add it be accepted?</p>",
        "id": 261458011,
        "sender_full_name": "Manuel Drehwald",
        "timestamp": 1636953171
    },
    {
        "content": "<p>Can you say more about what env variables you are referring to?  I'm having a hard time trying to understand your question.  What information would the build script need that it doesn't have now?</p>",
        "id": 261689308,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637089038
    },
    {
        "content": "<p>Sure. So I have a build script where I want to check, if the user called cargo rustc with the flag --emit=llvm-bc.<br>\nI know for sure, that the compilation will fail (or worse, miss-behave) if the user missed this flag. <br>\nAfaik. I can't just set it from within my build script, so instead of just hoping that the user understands his mistake based on the resulting issues, I rather panic with an useful hint. <br>\nIn order to do so, I want to check if the --emit flag has been used, and if llvm-bc has been selected.<br>\nThat's currently not possible, at least neither \"emit\", nor \"llvm-bc\" have been shown up in the env variables.<br>\nUnder CARGO_CFG_X you already publish a lot of other information, including flags passed via cargo to rustc.<br>\nSo I expect that it is fine if I add a few lines to also publish the emit information, but first I wanted to make sure that you are ok with this.</p>",
        "id": 261708886,
        "sender_full_name": "Manuel Drehwald",
        "timestamp": 1637097889
    },
    {
        "content": "<p>Unfortunately I don't know if that is really feasible. The build script is built for the package as a whole. In order to handle this, it would need to hash the flags in the fingerprint, which would cause the build script to be re-run any time a user ran with <code>cargo rustc</code> with different flags. The build script also doesn't know which cargo target is being built, so the flags wouldn't have specific meaning to the build script (aside from your use case).</p>",
        "id": 262486353,
        "sender_full_name": "Eric Huss",
        "timestamp": 1637688268
    }
]