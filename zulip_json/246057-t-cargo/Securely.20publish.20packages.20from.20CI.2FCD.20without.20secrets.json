[
    {
        "content": "<p>Securely publish packages from CI/CD without secrets</p>\n<p><strong>Background:</strong><br>\nThere are a significant number of attacks on the authentication of popular package owners.  Attackers gain access to the account of the package owner and publish a malicious version of the package to a public package repository.<br>\n<strong>Existing mitigation:</strong><br>\nRequire strong authentication for the package owners. The most common example of this is multi-factor authentication.  However, integrating 2FA into CI/CD has always been painful and generally involves “use 2FA to create a bearer token that doesn’t need 2FA”.<br>\n<strong>A new tool in the toolbox:</strong><br>\nThere is a recent push to allow GitHub Actions perform secure and trusted operations directly against major cloud providers: About security hardening with OpenID Connect - GitHub Docs. Other CI providers could also do this - GitLab already does.</p>\n<p>At a high-level, in addition to cloud resources (e.g S3) allowing access to specific individuals (e.g. <a href=\"mailto:jerick@microsoft.com\">jerick@microsoft.com</a>), they can also be configured to allow specific accesses to specific subsets of GitHub Actions runs themselves.  That is, you can think of “Actions runs of the <code>main</code> branch of <a href=\"https://github.com/johnterickson/actions-oidc-demo”\">https://github.com/johnterickson/actions-oidc-demo”</a> being an identity itself independent of any person.  Moreover, this is done in a way that no secrets are needed in the Actions run.<br>\n<strong>Proposal:</strong><br>\nConnecting this with the issue of package ownership hijacking, we could imagine a setup where popular packages (e.g. <a href=\"https://www.npmjs.com/package/coa\">https://www.npmjs.com/package/coa</a> ) are configured to only allow publishes from either 1) interactive 2FA login (e.g. with TOTP) or 2) Actions runs of the <code>main</code> branch of <a href=\"https://github.com/veged/coa\">https://github.com/veged/coa</a>.  We would encourage the later because 1) it doesn’t involve secrets or unwieldy 2FA and 2) it would also provide <a href=\"http://npmjs.com\">npmjs.com</a> cryptographic chain-of-custody proof that the package was actually a build of <a href=\"https://github.com/veged/coa\">https://github.com/veged/coa</a> at commit XYZ because that information is embedded in the token that Actions uses.</p>",
        "id": 274618147,
        "sender_full_name": "John Erickson",
        "timestamp": 1646779149
    },
    {
        "content": "<p>[spinning off this discussion from <a href=\"#narrow/stream/246057-t-cargo/topic/Cargo.20.3C-.3E.20credential.20manager.20protocol/near/274610999]\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/Cargo.20.3C-.3E.20credential.20manager.20protocol/near/274610999]</a></p>",
        "id": 274619504,
        "sender_full_name": "John Erickson",
        "timestamp": 1646780012
    },
    {
        "content": "<p>I Love the idea. Of course, the devils' in the details.</p>",
        "id": 274619877,
        "sender_full_name": "Eh2406",
        "timestamp": 1646780249
    },
    {
        "content": "<p>I had thrown the idea \"over the fence\" to <a href=\"http://nuget.org\">nuget.org</a> and <a href=\"http://npmjs.com\">npmjs.com</a> before the winter holidays.  I'm checking in with them to see if anything went from that.  If <code>npmjs</code> is onboard then, hopefully,  <code>crates</code> can just say \"me too\"</p>",
        "id": 274620097,
        "sender_full_name": "John Erickson",
        "timestamp": 1646780390
    },
    {
        "content": "<p>So one big question about this is does this need cargo support or does it just need <a href=\"http://crates.io\">crates.io</a> support?</p>",
        "id": 274621585,
        "sender_full_name": "Eh2406",
        "timestamp": 1646781273
    },
    {
        "content": "<p>(note that <a href=\"http://crates.io\">crates.io</a> is maintained by a different team <a href=\"https://www.rust-lang.org/governance/teams/crates-io\">https://www.rust-lang.org/governance/teams/crates-io</a>)</p>",
        "id": 274621658,
        "sender_full_name": "Eh2406",
        "timestamp": 1646781336
    },
    {
        "content": "<p>Great point! I think <a href=\"http://crates.io\">crates.io</a> is the better team to discuss with</p>",
        "id": 274622560,
        "sender_full_name": "John Erickson",
        "timestamp": 1646781952
    },
    {
        "content": "<p>Would love to see a proof of concept based on a <code>credential provider</code> or an environment variable, and when it's working well we can figure out how cargo could make it first class!</p>",
        "id": 274622914,
        "sender_full_name": "Eh2406",
        "timestamp": 1646782185
    },
    {
        "content": "<p>I like the concept here, but I think this still needs some degree of OpenID Connect support directly in cargo.</p>",
        "id": 274624967,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646783597
    },
    {
        "content": "<p>It's more a <a href=\"http://crates.io\">crates.io</a> thing than a cargo thing, but you'd need Cargo support for the delegated authentication via GHA.</p>",
        "id": 274624987,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646783620
    }
]