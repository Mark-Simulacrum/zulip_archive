[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> What's the status of using zlib-ng with libgit2?  Would it be safe for cargo to start using that?  I was doing a little profiling, and the performance of the static zlib isn't so great, and zlib-ng seemed to be a fair bit better.</p>",
        "id": 242963301,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623892869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> It works quite well. Long-term, I really want to rework it so that it uses zlib-ng natively rather than in zlib-compat mode, so that it doesn't use the same symbol names as zlib; that would make it a little cleaner to use. As it stands, you have to make sure anything that links to zlib is using zlib-ng-compat, so that means setting the appropriate features on both git2 and curl.</p>",
        "id": 242968552,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900253
    },
    {
        "content": "<p>I'm using it in production with libgit2 and git2-rs, and it works quite well; no issues whatsoever.</p>",
        "id": 242968581,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900324
    },
    {
        "content": "<p>However, Linux distributions are still going to want to build with stock zlib, and some users of the cargo crate might too, so we'll need to have features controlling it.</p>",
        "id": 242968650,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900385
    },
    {
        "content": "<p>Sounds good.  I might investigate switching things over, hopefully it won't be too much of a hassle.</p>\n<p>And, BTW, do you happen to know if improving the performance of SHA1 in libgit2 is feasible?  I was doing some testing, and the collision-detection implementation is substantially slower than OpenSSL.  That seems like it might be harder/riskier to change, but was curious if you had looked at that.</p>",
        "id": 242968758,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623900508
    },
    {
        "content": "<p>It's possible to disable collision detection, but that's a risk.</p>",
        "id": 242968775,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900556
    },
    {
        "content": "<p>I wasn't aware of it being <em>that</em> much slower; I had the impression that the code was derived from the same code that's used for sha1 in OpenSSL.</p>",
        "id": 242968786,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900583
    },
    {
        "content": "<p>(insofar as the faster code from git was later added to OpenSSL)</p>",
        "id": 242968788,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1623900595
    },
    {
        "content": "<p>On my system, the OpenSSL SHA1 implementation uses <a href=\"https://github.com/openssl/openssl/blob/52e6c77ebc25590ac894ce67d83a02da07c6f01f/crypto/sha/asm/sha1-586.pl#L1118-L1199\">this assembly code</a> implementation that is optimized for AVX, whereas the libgit2 implementation is pure-C.</p>",
        "id": 243098816,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623972659
    }
]