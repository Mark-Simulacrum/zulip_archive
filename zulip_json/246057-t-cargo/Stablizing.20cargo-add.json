[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"424212\">@Ed Page</span> thanks for the thorough writeup. Most of my questions where ancered by reading the PR description at <a href=\"https://github.com/rust-lang/cargo/pull/10472\">https://github.com/rust-lang/cargo/pull/10472</a></p>\n<p>One question I still have... I know we've discussed it, but I just don't remember. Why is this going straight to stable?</p>",
        "id": 276387939,
        "sender_full_name": "Eh2406",
        "timestamp": 1648063821
    },
    {
        "content": "<blockquote>\n<p>One question I still have... I know we've discussed it, but I just don't remember. Why is this going straight to stable?</p>\n</blockquote>\n<p>Not finding where this was discussed.  I think there was concern over interactions between local installs and unstable commands?  <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> do you remember?</p>",
        "id": 276388242,
        "sender_full_name": "Ed Page",
        "timestamp": 1648063988
    },
    {
        "content": "<p>I remember that discussion as well. IIRC, the issue was, if someone has the third-party cargo-add installed, we don't want to shadow that with a command that won't work except on nightly.</p>",
        "id": 276388598,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064184
    },
    {
        "content": "<p>We could, in theory, handle that, though.</p>",
        "id": 276388635,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064212
    },
    {
        "content": "<p>I don't know that we should, but we could do this:</p>",
        "id": 276388653,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064222
    },
    {
        "content": "<ul>\n<li>Have a list of \"unstable commands\"</li>\n<li>If we're on nightly, search stable and unstable commands, then third-party commands</li>\n<li>If we're on stable, search stable commands, then third-party commands, then search unstable commands and emit an error if you don't pass <code>-Z unstable-xyz</code>.</li>\n</ul>",
        "id": 276388737,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064272
    },
    {
        "content": "<p>Effectively making the command not exist on stable. The downside is that we can't give a message steering people towards <code>-Z unstable-xyz</code> if the third-party command is installed.</p>",
        "id": 276388826,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064315
    },
    {
        "content": "<p>And it would be confusing to be inconsistent about which \"cargo add\" you are getting.</p>",
        "id": 276388925,
        "sender_full_name": "Eh2406",
        "timestamp": 1648064387
    },
    {
        "content": "<p>I remember we discussed having a temporary <code>cargo xadd</code>, but felt like that would be painful as well and unlikely to get substantial usage/testing.</p>",
        "id": 276389042,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064437
    },
    {
        "content": "<p>I think we'll get <em>more</em> testing by putting out an announcement and suggesting that people try nightly cargo.</p>",
        "id": 276389084,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064458
    },
    {
        "content": "<p>On the other hand this is a large API surface we are stabilizing all at once, without direct user testing.</p>",
        "id": 276389144,
        "sender_full_name": "Eh2406",
        "timestamp": 1648064503
    },
    {
        "content": "<p>I have a hard time imagining what will get us good user testing, as I've always found directly editing the file clearer then using a CLI.<br>\nSo I don't do a good job empathizing with the user base.</p>",
        "id": 276389541,
        "sender_full_name": "Eh2406",
        "timestamp": 1648064686
    },
    {
        "content": "<p>I started using it even more when I realized I could use it from within vim.</p>",
        "id": 276389767,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064790
    },
    {
        "content": "<p><code>:Cargo add ...</code> works.</p>",
        "id": 276389776,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648064794
    },
    {
        "content": "<p>When it was something I had to install, I never bothered using it.  Once i started developing it, I aliased the repo so it <code>cargo run</code>ing it was in my path and I became dependent on it and was annoyed when my alias was broken from working on this PR.</p>\n<p>I'd recommend giving it a shot.  For nothing else, I really like being able to run <code>cargo add foo</code> and not worry about looking up the dependency.</p>\n<p>Frankly, we could put all the features except <code>cargo add &lt;dep_or_path&gt;</code> (not even allow multiple deps) behind <code>-Z unstable-options</code> and I think that would work quite well (though I'm really looking forward to <code>cargo add serde +derive serde_json</code> suggestions in documentation)</p>",
        "id": 276390934,
        "sender_full_name": "Ed Page",
        "timestamp": 1648065355
    },
    {
        "content": "<p>I guess I'd add <code>--dev</code> and <code>--build</code> to that list of minimal flags to support.</p>",
        "id": 276391118,
        "sender_full_name": "Ed Page",
        "timestamp": 1648065462
    },
    {
        "content": "<p>If it weren't for the Insta stable I would give it a check mark. Like the code is standalone (amazingly so), Weihang like the code quality, it's clearly something people want, we can always fix implementation details, and if there are a few public facing changes it's unstable.<br>\nHow close is the implementation to the 3P \"cargo add\" implementation? To what degree can I comfort myself \"people like cargo add so we don't need to user test this\"?</p>",
        "id": 276394702,
        "sender_full_name": "Eh2406",
        "timestamp": 1648067012
    },
    {
        "content": "<p>3P?  I'm assuming you mean the existing version?</p>\n<p>The last release to <a href=\"http://crates.io\">crates.io</a> does not include any thing from <a href=\"https://internals.rust-lang.org/t/feedback-on-cargo-add-before-its-merged/16024/71\">the feedback thread</a> as I don't think I have permission to publish the crate.  <code>master</code> does have everything and I know a some people are using it because people that <code>cargo install</code> the registry version are regularly running into crashes with libgit2 conflicts and so they are installing from git to workaround that.</p>\n<p>The user-visible differences between <code>master</code> and <code>merge-add</code> look to be</p>\n<ul>\n<li>Cosmetic from different registry backends, etc</li>\n<li>Cosmetic bug fixes</li>\n<li>Added support for weak deps</li>\n<li>Fix it so we hide empty tables we create</li>\n</ul>",
        "id": 276397382,
        "sender_full_name": "Ed Page",
        "timestamp": 1648068205
    },
    {
        "content": "<p>Sorry for using jargon. \"3P\" = \"third-party\". So yes.</p>",
        "id": 276402777,
        "sender_full_name": "Eh2406",
        "timestamp": 1648070720
    },
    {
        "content": "<p>Have you tried to get <a href=\"http://crates.io\">crates.io</a> privileges? Seems like it would be good for people to get experience with the version that's going to go into cargo</p>",
        "id": 276433216,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1648098606
    },
    {
        "content": "<p>I've reached out to killercup.</p>\n<p><span class=\"user-mention\" data-user-id=\"120179\">@Eh2406</span> should I go ahead with the feature gating?</p>",
        "id": 276497870,
        "sender_full_name": "Ed Page",
        "timestamp": 1648137776
    },
    {
        "content": "<p>The next person to check off will (at least technically) confirm disposition to merge.<br>\nIf this were feature gated, I would be happy to provide that last critical checkmark.<br>\nAs the person who's followed this conversation least, I will not object to merging as is (insta sable) if <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>  wants to provide his check.</p>",
        "id": 276500073,
        "sender_full_name": "Eh2406",
        "timestamp": 1648138615
    },
    {
        "content": "<p>Or, hopefully obviously, I will be happy to check off if I am convinced that I am being unduly obstinate. That we have room to fix mistakes in this design even if we stabilize now, or clear-cut evidence that this is the design we will have to choose after feedback.</p>",
        "id": 276501050,
        "sender_full_name": "Eh2406",
        "timestamp": 1648138984
    },
    {
        "content": "<p>I've been trying to understand the different options for stabilization.  Do you maybe want to talk about it at the next team meeting?</p>\n<p>Also, I'm collecting some questions and observations.  I'm reluctant to start dumping them in the PR since it is possible for it to accumulate tons of comments which GitHub handles poorly.  How would you like to organize discussion of various details?  I could start individual topics here on Zulip?  Or we could just use the PR, though I usually don't like that for lots of discussion.</p>",
        "id": 276696022,
        "sender_full_name": "Eric Huss",
        "timestamp": 1648255857
    },
    {
        "content": "<blockquote>\n<p>Do you maybe want to talk about it at the next team meeting?</p>\n</blockquote>\n<p>Sure</p>\n<blockquote>\n<p>How would you like to organize discussion of various details? I could start individual topics here on Zulip? Or we could just use the PR, though I usually don't like that for lots of discussion.</p>\n</blockquote>\n<p>Whichever works best for you</p>",
        "id": 276721050,
        "sender_full_name": "Ed Page",
        "timestamp": 1648294022
    },
    {
        "content": "<p>Thinking over the conversation today, I lean towards aligning with cargo-install, as it makes sense for this slightly different case</p>\n<p>Proposal</p>\n<ul>\n<li>Make <code>--git</code> and <code>--path</code> stable, treat it as the source for any crates specified.  If none are specified and its a crate, use it.  If its a virtual workspace, error</li>\n<li>Remove <code>cargo add &lt;path&gt;</code>, we can re-evaluate adding this in later to both.</li>\n<li>Remove <code>+feature</code>, we can re-evaluate adding this in later to both</li>\n<li><code>cargo add serde serde_json --features serde/derive</code> is added to the deferred-out-of-PR-but-followup-soon list as an alternative to <code>+feature</code></li>\n</ul>\n<p>That will only leave the <code>--rename</code> option that only works with one argument</p>",
        "id": 277094408,
        "sender_full_name": "Ed Page",
        "timestamp": 1648615864
    },
    {
        "content": "<p>Sounds good to me.</p>",
        "id": 277095297,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1648617016
    },
    {
        "content": "<p>I like having consistency between cargo commands :) FWIW sounds great to me</p>",
        "id": 277137482,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648644019
    },
    {
        "content": "<p>That sounds good to me, too!</p>",
        "id": 277212142,
        "sender_full_name": "Eric Huss",
        "timestamp": 1648679932
    },
    {
        "content": "<p>I'm not clear what you mean with <code>--rename</code>, though.</p>",
        "id": 277212155,
        "sender_full_name": "Eric Huss",
        "timestamp": 1648679945
    },
    {
        "content": "<blockquote>\n<p>I'm not clear what you mean with --rename, though.</p>\n</blockquote>\n<p>Before, I've brought up the annoyance with the CLI being modal.  You can do multi-add (<code>cargo add serde serde_json</code>) or you can have greater customization (<code>cargo add serde --features derive</code>).  With <code>cargo add serde serde_json --features serde/derive</code> and install's style for git/path, the only remaining argument that cannot run in the multi-add case is <code>--rename</code> (<code>cargo add serde serde_json --rename foo</code> will error).  I was just calling this out for completeness.</p>",
        "id": 277224132,
        "sender_full_name": "Ed Page",
        "timestamp": 1648691737
    },
    {
        "content": "<p>Ah, I see, makes sense, thanks!</p>",
        "id": 277304808,
        "sender_full_name": "Eric Huss",
        "timestamp": 1648742992
    },
    {
        "content": "<p>I don't think it is particularly burdensome to have some flags that only work with adding a single entry.</p>",
        "id": 277304911,
        "sender_full_name": "Eric Huss",
        "timestamp": 1648743011
    },
    {
        "content": "<p>Yeah, I'm comfortable with it</p>",
        "id": 277307856,
        "sender_full_name": "Ed Page",
        "timestamp": 1648744425
    }
]