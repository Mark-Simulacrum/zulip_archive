[
    {
        "content": "<p>What are the default features of build-std?</p>\n<p>I know \"core\" and \"alloc\" are a subset of features, but what is the default set?</p>\n<p>Also, what is the difference between <code>build-std</code> and <code>build-std-features</code> in your <code>config.toml</code>?</p>\n<p>I tried running <code>cargo +nightly build</code></p>\n<p>with the setting </p>\n<div class=\"codehilite\"><pre><span></span><code>[unstable]\nbuild-std = [&quot;core&quot;, &quot;alloc&quot;, &quot;compiler_builtins&quot;,&quot;libc&quot;]\n</code></pre></div>\n<p>in the <code>.cargo/config.toml</code> file and received errors.</p>",
        "id": 233415524,
        "sender_full_name": "ender",
        "timestamp": 1617757864
    },
    {
        "content": "<p>Are these the default settings?</p>\n<div class=\"codehilite\"><pre><span></span><code>[unstable]\nbuild-std = [&quot;core&quot;,&quot;std&quot;,&quot;alloc&quot;,&quot;proc_macro&quot;]\n</code></pre></div>",
        "id": 233417064,
        "sender_full_name": "ender",
        "timestamp": 1617759140
    },
    {
        "content": "<p>@ender The <code>build-std</code> setting sets which crates to compile which is independent of the features (set by <code>build-std-features</code>).  </p>\n<p>There's some documentation at <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std\">https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std</a>:</p>\n<blockquote>\n<p>Using -Z build-std will implicitly compile the stable crates core, std, alloc, and proc_macro. If you're using cargo test it will also compile the test crate.</p>\n</blockquote>\n<p>And just below that:</p>\n<blockquote>\n<p>The default enabled features, at this time, are backtrace and panic_unwind.</p>\n</blockquote>",
        "id": 233420029,
        "sender_full_name": "Eric Huss",
        "timestamp": 1617761616
    },
    {
        "content": "<p>Related: Is there a way to enable a feature only for specific crate with <code>build-std-features</code>? I want to ensure that <code>compiler_builtins</code> is always built with the <code>mem</code>. But setting <code>build-std-features=mem</code> doesn‚Äôt work for testing because <code>test</code> doesn‚Äôt have that feature, and it doesn‚Äôt seem like <code>build-std-features=compiler_builtins/mem</code> works.</p>",
        "id": 233754848,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1617931512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> The feature <code>compiler-builtins-mem</code> should work for both. Does that work for you? (I haven't tested).</p>",
        "id": 233759274,
        "sender_full_name": "Eric Huss",
        "timestamp": 1617935255
    },
    {
        "content": "<p>I‚Äôll give it a shot when I‚Äôm back at my machine. Thanks üôè</p>",
        "id": 233759367,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1617935329
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/246057-t-cargo/topic/build-std/near/233420029\">said</a>:</p>\n<blockquote>\n<p>@ender The <code>build-std</code> setting sets which crates to compile which is independent of the features (set by <code>build-std-features</code>).  </p>\n<p>There's some documentation at <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std\">https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std</a>:</p>\n<blockquote>\n<p>Using -Z build-std will implicitly compile the stable crates core, std, alloc, and proc_macro. If you're using cargo test it will also compile the test crate.</p>\n</blockquote>\n<p>And just below that:</p>\n<blockquote>\n<p>The default enabled features, at this time, are backtrace and panic_unwind.</p>\n</blockquote>\n</blockquote>\n<p>This is very useful. I appreciate your help.</p>",
        "id": 233870198,
        "sender_full_name": "ender",
        "timestamp": 1617993224
    }
]