[
    {
        "content": "<p>Hi, I wanted to ask for feedback on my proposals in <a href=\"https://github.com/rust-lang/cargo/issues/8687\">#8687</a> and <a href=\"https://github.com/rust-lang/cargo/issues/8643\">#8643</a>. They are both about adding a way to opt-out of values set in <code>.cargo/config</code> configuration files. While overriding values is already possible, it is not possible to bring all values back to their \"not set\" state. The resulting problem is that right now a single exceptional use case can prevent you from using config files at all for a project, which can be very frustrating.</p>\n<p>While I understand that the Cargo team wants to avoid making the config system more complex, I think this particular issue of config files is relatively isolated and a solution would remain useful even if the config system is overhauled as <a href=\"https://internals.rust-lang.org/t/problems-of-cargo-config-files-and-possible-solutions/12987/3\">suggested by <span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span></a>. In my opinion, the best way forward for this would be to implement <em>some</em> way of opting out of config values as an unstable feature for experimentation. Then, after some time, we can evaluate how the feature is used by people and whether it is still needed, and then write up a proper RFC (or similar) for it.</p>",
        "id": 212360029,
        "sender_full_name": "Philipp Oppermann",
        "timestamp": 1601933826
    },
    {
        "content": "<p><a href=\"http://docs.rs\">docs.rs</a> has run into trouble with this too when building crates. Our solution was to just remove the config file altogether, but obviously that doesn't work when you sometimes do want to use it.</p>",
        "id": 212361145,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601934625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121929\">@Philipp Oppermann</span> I'd have <em>no</em> objection to some kind of <code>--no-config</code> option, and equivalent environment variable.</p>",
        "id": 212362813,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601935836
    },
    {
        "content": "<p>As a complete reset.</p>",
        "id": 212362831,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601935850
    },
    {
        "content": "<p>That seems useful no matter what improvements we make to the config system in the future.</p>",
        "id": 212362856,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601935872
    },
    {
        "content": "<p>That's great to hear! I try to prepare a PR for this</p>",
        "id": 212396833,
        "sender_full_name": "Philipp Oppermann",
        "timestamp": 1601972157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I opened a PR at <a href=\"https://github.com/rust-lang/cargo/pull/8757\">https://github.com/rust-lang/cargo/pull/8757</a></p>",
        "id": 212406822,
        "sender_full_name": "Philipp Oppermann",
        "timestamp": 1601978745
    }
]