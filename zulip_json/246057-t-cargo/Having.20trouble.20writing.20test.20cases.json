[
    {
        "content": "<p>I'm trying to implement <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Require.20users.20to.20confirm.20they.20know.20RUSTC_.E2.80.A6.20compiler-team.23350/near/208377359\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Require.20users.20to.20confirm.20they.20know.20RUSTC_.E2.80.A6.20compiler-team.23350/near/208377359</a>. I have the following in the test suite:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#[cargo_test]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">rustc_bootstrap_is_disallowed</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">project</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"s\">&quot;src/main.rs&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;fn main() {}&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;build.rs&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">r</span><span class=\"err\">#</span><span class=\"s\">&quot;</span>\n<span class=\"s\">            fn main() {</span>\n<span class=\"s\">                println!(&quot;</span><span class=\"n\">cargo</span>:<span class=\"nc\">rustc</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">RUSTC_BOOTSTRAP</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"s\">&quot;);</span>\n<span class=\"s\">            }</span>\n<span class=\"s\">        &quot;</span><span class=\"err\">#</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"p\">(</span><span class=\"s\">&quot;build&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">with_stderr_contains</span><span class=\"p\">(</span><span class=\"s\">&quot;Cannot set `RUSTC_BOOTSTRAP`&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">with_status</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>and the following output from cargo when it runs:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Cannot set `RUSTC_BOOTSTRAP` from build script of `bootstrap v0.1.0 (/home/joshua/src/rust/cargo/bootstrap)`.\nnote: This was previously allowed but has been removed because it subverts the stability guarentees of Rust.\nhelp: If you&#39;re sure you want to do this, use `RUSTC_BOOTSTRAP=1 cargo build` instead.\n</code></pre></div>\n\n\n<p>but the test fails with</p>\n<div class=\"codehilite\"><pre><span></span><code>---- build_script_env::rustc_bootstrap_is_disallowed stdout ----\nrunning `/home/joshua/.local/lib/cargo/target/debug/cargo build`\nthread &#39;build_script_env::rustc_bootstrap_is_disallowed&#39; panicked at &#39;\nExpected: execs\n    but: expected to find:\nCannot set `RUSTC_BOOTSTRAP`\n\ndid not find in output:\n   Compiling foo v0.0.1 (/home/joshua/.local/lib/cargo/target/cit/t0/foo)\nerror: Cannot set `RUSTC_BOOTSTRAP` from build script of `foo v0.0.1 (/home/joshua/.local/lib/cargo/target/cit/t0/foo)`.\nnote: This was previously allowed but has been removed because it subverts the stability guarentees of Rust.\nhelp: If you&#39;re sure you want to do this, use `RUSTC_BOOTSTRAP=1 cargo build` instead.\n&#39;, crates/cargo-test-support/src/lib.rs:832:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n\n\n<p>What am I doing wrong? I don't understand what it's trying to tell me.</p>",
        "id": 208402052,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654209
    },
    {
        "content": "<p>as a side note, <code>Expected: execs</code> is really unhelpful :(</p>",
        "id": 208402079,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654242
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></p>",
        "id": 208402281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654369
    },
    {
        "content": "<p>oh ugh cargo itself is getting messed up by <code>CARGO_TARGET_DIR</code> in the environment</p>",
        "id": 208402314,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654400
    },
    {
        "content": "<p>probably the test suite should forcibly unset that</p>",
        "id": 208402364,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654411
    },
    {
        "content": "<p>Let me know if that fixes it or if you still run into issues.</p>",
        "id": 208402429,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>  The <code>with_stderr_contains</code> needs a <code>[..]</code> at the end.  It matches entire lines by default, and the <code>[..]</code> is equivalent to <code>.*</code> regex.</p>",
        "id": 208402483,
        "sender_full_name": "Eric Huss",
        "timestamp": 1598654531
    },
    {
        "content": "<p>Ah, interesting!</p>",
        "id": 208402523,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654558
    },
    {
        "content": "<p>that did it, thank you!!</p>",
        "id": 208402570,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654616
    },
    {
        "content": "<p>Also, typo: *guarantees.</p>",
        "id": 208402579,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654631
    },
    {
        "content": "<p><del>bold of you to assume it's a typo and I know how to spell</del></p>",
        "id": 208402649,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654671
    },
    {
        "content": "<p>And some minor tweaks to that message (modulo word-wrapping):</p>\n<div class=\"codehilite\"><pre><span></span><code>note: Crates cannot set `RUSTC_BOOTSTRAP` themselves, as doing so would subvert the stability guarantees of Rust for your project.\nhelp: If you&#39;re sure you want to do this in your project, use `RUSTC_BOOTSTRAP=1 cargo build` instead.\nhelp: See $URL for details.\n</code></pre></div>",
        "id": 208402653,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654673
    },
    {
        "content": "<p>(where <code>$URL</code> could point to the Cargo documentation for <code>rustc-env</code>.)</p>",
        "id": 208402670,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654701
    },
    {
        "content": "<p>nice, thanks :)</p>",
        "id": 208402694,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654729
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#rustc-env\">https://doc.rust-lang.org/cargo/reference/build-scripts.html#rustc-env</a> looks like the right spot</p>",
        "id": 208402705,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654751
    },
    {
        "content": "<p>Yeah, exactly.</p>",
        "id": 208402759,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654770
    },
    {
        "content": "<p>is there a way to color <code>note</code> and <code>help</code>?</p>",
        "id": 208402802,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654817
    },
    {
        "content": "<p>right now <code>error</code> is colored but those aren't</p>",
        "id": 208402807,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654823
    },
    {
        "content": "<p>I tweaked the message one more time, to try to make it a little more clear that we're not admonishing projects, we're proscribing <em>crates</em> from doing it on behalf of projects.</p>",
        "id": 208402815,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Are you using the <code>note</code> function?</p>",
        "id": 208402895,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654891
    },
    {
        "content": "<p>I didn't know that existed <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 208402909,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654908
    },
    {
        "content": "<p>thanks!</p>",
        "id": 208402912,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654910
    },
    {
        "content": "<p>where do I get a <code>Shell</code> from?</p>",
        "id": 208402929,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654935
    },
    {
        "content": "<p>How are you currently printing the <code>error</code>?</p>",
        "id": 208402944,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654948
    },
    {
        "content": "<p>it's just <code>anyhow::bail</code></p>",
        "id": 208402950,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598654957
    },
    {
        "content": "<p>Oh, you're doing <code>bail!</code>?</p>",
        "id": 208402951,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654957
    },
    {
        "content": "<p>Hrm...</p>",
        "id": 208402954,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598654961
    },
    {
        "content": "<p>Cargo doesn't have structured diagnostics, so you can't attach notes or anything like that.</p>",
        "id": 208402991,
        "sender_full_name": "Eric Huss",
        "timestamp": 1598655002
    },
    {
        "content": "<p>Ah. So perhaps this should just be one long error message, then?</p>",
        "id": 208403065,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598655053
    },
    {
        "content": "<p>yea, that's how it is usually done</p>",
        "id": 208403085,
        "sender_full_name": "Eric Huss",
        "timestamp": 1598655082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/246057-t-cargo/topic/Having.20trouble.20writing.20test.20cases/near/208402649\">said</a>:</p>\n<blockquote>\n<p><del>bold of you to assume it's a typo and I know how to spell</del></p>\n</blockquote>\n<p>I tend to use the word \"typo\" all-encompassingly, regardless of cause or intent. :)</p>",
        "id": 208403108,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598655117
    }
]