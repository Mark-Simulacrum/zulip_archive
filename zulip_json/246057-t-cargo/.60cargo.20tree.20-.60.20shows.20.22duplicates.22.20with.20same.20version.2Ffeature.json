[
    {
        "content": "<p><code>cargo tree -d</code> seems to be showing duplicates with the same version and same features set. I'm <em>guessing</em> that one is a build dependency and one is a runtime dependency, but would it make sense for <code>cargo tree</code> in general to show a <code>(build)</code> or <code>(target=$target)</code> suffix?</p>",
        "id": 239985042,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621811622
    },
    {
        "content": "<p>I can file an issue if so, but I'd like to confirm if that's likely to be what's going on first.</p>",
        "id": 239985049,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621811642
    },
    {
        "content": "<p>I am not quite sure what you said. The build dependencies are alreay under the <code>[build-dependencies]</code> section.  AFAIK if one wants to zoom into the build-deps they can use <code>cargo tree -p &lt;SPEC&gt;</code> instead.</p>",
        "id": 240023304,
        "sender_full_name": "Weihang Lo",
        "timestamp": 1621846447
    },
    {
        "content": "<p>It's hard to say without seeing an example.</p>",
        "id": 240058377,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621866374
    },
    {
        "content": "<p>I can try to create a minimized example.</p>",
        "id": 240126155,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621898924
    },
    {
        "content": "<p>Here's a sample of output I'm seeing:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>anyhow v1.0.40\n└── prost-derive v0.7.0 (proc-macro)\n    ├── prost v0.7.0\n    │   ├── prost-build v0.7.0\n    │   │   └── tonic-build v0.4.2\n    │   │       [build-dependencies]\n    │   │       └── opentelemetry-otlp v0.7.0\n    │   │           └── main-server v0.1.0 (/path/to/main-server)\n    │   └── prost-types v0.7.0\n    │       └── prost-build v0.7.0 (*)\n    ├── prost v0.7.0\n    │   ├── opentelemetry-otlp v0.7.0 (*)\n    │   └── tonic v0.4.3\n    │       ├── main-server v0.1.0 (/path/to/main-server)\n    │       └── opentelemetry-otlp v0.7.0 (*)\n    └── tonic v0.4.3 (*)\n\nanyhow v1.0.40\n├── build-server v0.1.0 (/path/to/build-server)\n├── main-server v0.1.0 (/path/to/main-server)\n├── http-types v2.11.1\n│   ├── async-h1 v2.3.2\n│   │   ├── rustls-acme v0.1.6\n│   │   │   └── tide-acme v0.1.1\n│   │   │       └── main-server v0.1.0 (/path/to/main-server)\n│   │   ├── tide v0.16.0\n│   │   │   ├── main-server v0.1.0 (/path/to/main-server)\n│   │   │   ├── tide-rustls v0.3.0\n│   │   │   │   ├── main-server v0.1.0 (/path/to/main-server)\n│   │   │   │   └── tide-acme v0.1.1 (*)\n│   │   │   ├── tide-tracing v0.0.11\n│   │   │   │   └── main-server v0.1.0 (/path/to/main-server)\n│   │   │   └── tide-websockets v0.3.0\n│   │   │       └── main-server v0.1.0 (/path/to/main-server)\n│   │   └── tide-rustls v0.3.0 (*)\n│   ├── async-sse v4.1.0\n│   │   └── tide v0.16.0 (*)\n│   ├── main-server v0.1.0 (/path/to/main-server)\n│   ├── http-client v6.4.1\n│   │   └── tide v0.16.0 (*)\n│   ├── rustls-acme v0.1.6 (*)\n│   └── tide v0.16.0 (*)\n...\n</code></pre></div>",
        "id": 240126365,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621899099
    },
    {
        "content": "<p>Note the two <code>anyhow v1.0.40</code> lines at the roots.</p>",
        "id": 240126438,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621899147
    },
    {
        "content": "<p>That definitely seems like a bug.</p>",
        "id": 240127184,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1621899762
    },
    {
        "content": "<p>Are you using <code>resolver=\"2\"</code>?  Why do you think <code>anyhow</code> is using the same features?  If you run <code>cargo tree -d -f '{p} {f}'</code>, do they have the same features listed?  One side looks like it is from the host (proc-macros) and the other seems like it is for the target.</p>\n<p>I think it might be reasonable to add a target field to the <code>-f</code> option, but I'm not sure if it should be displayed by default. It's already fairly noisy.  OTOH, the <code>-f</code> option is kinda obscure and hard to use.  I think it should be easier to do <code>-f '{p} {f}'</code>, but I'm not sure how.</p>",
        "id": 240130078,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621902497
    },
    {
        "content": "<p>I didn't know about -f; I'll give that a try.</p>",
        "id": 240208158,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621957689
    },
    {
        "content": "<p>And I'm not opting into the new resolver, no.</p>",
        "id": 240208208,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621957715
    },
    {
        "content": "<p>I tried <code>cargo tree -d -f '{p} {f}'</code>, and got this:</p>",
        "id": 240263029,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985298
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>anyhow v1.0.40 default,std\n└── prost-derive v0.7.0 (proc-macro)\n    ├── prost v0.7.0 default,prost-derive,std\n    │   ├── prost-build v0.7.0\n    │   │   └── tonic-build v0.4.2 default,prost,prost-build,rustfmt,transport\n    │   │       [build-dependencies]\n    │   │       └── opentelemetry-otlp v0.7.0 default,prost,tls,tokio,tonic,tonic-build\n    │   │           └── main-server v0.1.0 (/path/to/main-server)\n    │   └── prost-types v0.7.0\n    │       └── prost-build v0.7.0  (*)\n    ├── prost v0.7.0 default,prost-derive,std\n    │   ├── opentelemetry-otlp v0.7.0 default,prost,tls,tokio,tonic,tonic-build (*)\n    │   └── tonic v0.4.3 async-trait,codegen,default,h2,hyper,prost,prost-derive,prost1,tls,tokio,tokio-rustls,tower,tracing-futures,transport\n    │       ├── main-server v0.1.0 (/path/to/main-server)\n    │       └── opentelemetry-otlp v0.7.0 default,prost,tls,tokio,tonic,tonic-build (*)\n    └── tonic v0.4.3 async-trait,codegen,default,h2,hyper,prost,prost-derive,prost1,tls,tokio,tokio-rustls,tower,tracing-futures,transport (*)\n\nanyhow v1.0.40 default,std\n├── build-server v0.1.0 (/path/to/build-server)\n├── main-server v0.1.0 (/path/to/main-server)\n├── http-types v2.11.1 async-std,cookie,cookie-secure,cookies,default,fs\n│   ├── async-h1 v2.3.2\n│   │   ├── rustls-acme v0.1.6\n│   │   │   └── tide-acme v0.1.1\n│   │   │       └── main-server v0.1.0 (/path/to/main-server)\n│   │   ├── tide v0.16.0 async-h1,h1-server\n│   │   │   ├── main-server v0.1.0 (/path/to/main-server)\n│   │   │   ├── tide-rustls v0.3.0\n│   │   │   │   ├── main-server v0.1.0 (/path/to/main-server)\n│   │   │   │   └── tide-acme v0.1.1  (*)\n│   │   │   ├── tide-tracing v0.0.11\n│   │   │   │   └── main-server v0.1.0 (/path/to/main-server)\n│   │   │   └── tide-websockets v0.3.0\n│   │   │       └── main-server v0.1.0 (/path/to/main-server)\n│   │   └── tide-rustls v0.3.0  (*)\n│   ├── async-sse v4.1.0\n│   │   └── tide v0.16.0 async-h1,h1-server (*)\n│   ├── main-server v0.1.0 (/path/to/main-server)\n│   ├── http-client v6.4.1\n│   │   └── tide v0.16.0 async-h1,h1-server (*)\n│   ├── rustls-acme v0.1.6  (*)\n│   └── tide v0.16.0 async-h1,h1-server (*)\n...\n</code></pre></div>",
        "id": 240263151,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985379
    },
    {
        "content": "<p>So, both entries for <code>anyhow</code> have the same features.</p>",
        "id": 240263168,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985401
    },
    {
        "content": "<p>Oh, do you have <code>build-override</code> in a profile?</p>",
        "id": 240263312,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621985500
    },
    {
        "content": "<p>hm, maybe tree doesn't look at that</p>",
        "id": 240263529,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621985719
    },
    {
        "content": "<p>I don't have build-override set (just Cargo's default of not optimizing build-deps).</p>",
        "id": 240263645,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985833
    },
    {
        "content": "<p>I <em>do</em> have a target set, though.</p>",
        "id": 240263648,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985839
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>$ cat .cargo/config.toml\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[build]</span>\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"s\">\"x86_64-unknown-linux-musl\"</span>\n\n<span class=\"k\">[target.x86_64-unknown-linux-musl]</span>\n<span class=\"n\">rustflags</span> <span class=\"o\">=</span> <span class=\"k\">[\"-C\", \"link-arg=-s\", \"-C\", \"target-cpu=skylake\", \"-C\", \"target-feature=+crt-static\"]</span>\n\n<span class=\"k\">[target.aarch64-unknown-linux-musl]</span>\n<span class=\"n\">rustflags</span> <span class=\"o\">=</span> <span class=\"k\">[\"-C\", \"link-arg=-s\", \"-C\", \"target-cpu=neoverse-n1\", \"-C\", \"target-feature=+crt-static\"]</span>\n<span class=\"n\">linker</span> <span class=\"o\">=</span> <span class=\"s\">\"aarch64-linux-musl-gcc\"</span>\n</code></pre></div>",
        "id": 240263667,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985863
    },
    {
        "content": "<p>I just confirmed that if I delete <code>.cargo/config.toml</code>, I stop getting same-version duplicates in <code>cargo tree -d</code>.</p>",
        "id": 240263755,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621985924
    },
    {
        "content": "<p>Oh, it does look like it treats <code>--target</code> as a duplicate.</p>",
        "id": 240263787,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621985972
    },
    {
        "content": "<p>I dunno if it is useful to display that.</p>",
        "id": 240263916,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621986083
    },
    {
        "content": "<p>I think if it's actually being built twice, there's value in showing both versions in <code>cargo tree</code>, but it shouldn't be shown as a duplicate in <code>cargo tree -d</code>.</p>",
        "id": 240263973,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621986126
    },
    {
        "content": "<p>yea, probably.  I don't remember if I ever considered <code>-d</code> with <code>--target</code>.  Too many flag combinations! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 240264012,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621986176
    },
    {
        "content": "<p>:)</p>",
        "id": 240264029,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621986191
    },
    {
        "content": "<p>I appreciate you taking a look.</p>",
        "id": 240264077,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621986207
    },
    {
        "content": "<p>It's not critical for me, it just makes <code>cargo tree -d</code> output less useful at the moment.</p>",
        "id": 240264108,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1621986237
    }
]