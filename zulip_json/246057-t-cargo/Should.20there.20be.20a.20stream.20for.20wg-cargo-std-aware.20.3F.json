[
    {
        "content": "<p>What it says on the tin. I figure some real-time chat might help with <a href=\"https://internals.rust-lang.org/t/dogfooding-z-build-std-in-rustbuild/13775\">https://internals.rust-lang.org/t/dogfooding-z-build-std-in-rustbuild/13775</a> in particular.</p>",
        "id": 222325771,
        "sender_full_name": "John Ericson",
        "timestamp": 1610384630
    },
    {
        "content": "<p>I think it's fine to create topics here in t-cargo, this is pretty low traffic.  </p>\n<p>I think build-std is pretty far from being appropriate for use with rustc, and at least for me that is a pretty low priority use case.  There are plenty of known issues if you're interested at looking into them (unfortunately most of them are in the \"hard\" category).  I don't have a lot of time to offer to help, as I'm spread pretty thin, but I can try to help guide or steer things.</p>",
        "id": 222381789,
        "sender_full_name": "Eric Huss",
        "timestamp": 1610414982
    },
    {
        "content": "<p>yeah, I have not pushed on it because I don't think it would solve.. really any of the problems rustbuild faces, and might even make things more complicated, as rustbuild really needs to produce std without any other library/binary too</p>",
        "id": 222385220,
        "sender_full_name": "simulacrum",
        "timestamp": 1610418671
    },
    {
        "content": "<p>and it's probably not a great way to exercise the build-std feature either since it's going to be hacking around many of the interesting parts since they don't work for rustc</p>",
        "id": 222385234,
        "sender_full_name": "simulacrum",
        "timestamp": 1610418700
    },
    {
        "content": "<p>So to be clean, I was saying in the thread that <code>-Z build-std</code> should be used to build std, not rustc itself. And to me, even just getting the <code>hashbrown</code> and <code>cfg_if</code> dependencies to be be less of a trick would be a huge improvement.</p>",
        "id": 222473075,
        "sender_full_name": "John Ericson",
        "timestamp": 1610475644
    },
    {
        "content": "<blockquote>\n<p>I don't think it would solve.. really any of the problems rustbuild faces</p>\n</blockquote>\n<p>This is fine with me in the short term --- especially if we call the hacky core deps not a problem in practice. To me the main issue is non anything wrong with <code>-Z build-std</code> and rustbuild in isolation, but that between the two there are very different ways to do the same thing.</p>",
        "id": 222473966,
        "sender_full_name": "John Ericson",
        "timestamp": 1610476022
    },
    {
        "content": "<p>I think describing them as the same thing is not really true</p>",
        "id": 222474234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610476147
    },
    {
        "content": "<p>build-std has different goals than rustbuild does</p>",
        "id": 222474253,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610476155
    },
    {
        "content": "<p>And what would you say the key differences are? (Goal, not method, I assume you mean)</p>",
        "id": 222475142,
        "sender_full_name": "John Ericson",
        "timestamp": 1610476577
    },
    {
        "content": "<p>-Z build-std is for building <em>one specific application</em>, <code>x.py build library/std</code> is for building a library that can be put into sysroot and be reused by many applications</p>",
        "id": 222475365,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610476666
    },
    {
        "content": "<p><code>-Z build-std</code> can be used with libraries as the root, crates, no?</p>",
        "id": 222475564,
        "sender_full_name": "John Ericson",
        "timestamp": 1610476706
    },
    {
        "content": "<p>Fundamentally, I see a sysroot as being about the way things are installed, more than built.</p>",
        "id": 222476197,
        "sender_full_name": "John Ericson",
        "timestamp": 1610477004
    }
]