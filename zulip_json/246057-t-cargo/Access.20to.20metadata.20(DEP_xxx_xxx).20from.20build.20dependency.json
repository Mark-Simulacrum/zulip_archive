[
    {
        "content": "<p>I have a sys crate that builds, using the cmake crate, a lib that statically links to openssl. I'm trying to use the openssl-sys crate for this (with the vendored feature), but noticed that I don't have access to the DEP_OPENSSL_ROOT env var in my build script when declaring the openssl-sys crate as a build-dependency. The env var is available when I move the openssl-sys package to the dependencies section, but I don't need it in my sys crate after the build is done. So is this expected? Or is there something I can do to \"fix\" this? Thanks!</p>",
        "id": 206350433,
        "sender_full_name": "Sander van Harmelen",
        "timestamp": 1596897461
    },
    {
        "content": "<p>Build dependencies are for the host. If you try to link to openssl using a build-dependency, it wouldn't work when cross-compiling.</p>",
        "id": 206351473,
        "sender_full_name": "bjorn3",
        "timestamp": 1596899245
    },
    {
        "content": "<p>Thanks for the info as I didn't realise that was the case (while it makes a lot of sense). So my observation is correct, but its by design (expected behaviour).</p>\n<p>I guess that also explains why I noticed the openssl-sys crate being build/compiled twice when cross compiling. One was probably for the target en one for the host (since I specified it as build-dep for the sys crate, but another crate used by the app also has it listed as a normal dep).</p>",
        "id": 206354640,
        "sender_full_name": "Sander van Harmelen",
        "timestamp": 1596904389
    }
]