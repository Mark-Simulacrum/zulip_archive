[
    {
        "content": "<p>so there are two lints that have recently been added to clippy, <a href=\"https://github.com/rust-lang/rust-clippy/pull/6029\">https://github.com/rust-lang/rust-clippy/pull/6029</a> and <a href=\"https://github.com/rust-lang/rust-clippy/pull/5439/files\">https://github.com/rust-lang/rust-clippy/pull/5439/files</a> that are currently in the pedantic group</p>",
        "id": 210201970,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600210608
    },
    {
        "content": "<p>im reviewing the newest one and I'm thinking that these lints should probably be in <code>style</code> or maybe even <code>correctness</code></p>",
        "id": 210201994,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600210637
    },
    {
        "content": "<p>what does everyone else think?</p>",
        "id": 210202000,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600210641
    },
    {
        "content": "<p>Its hard to think of a situation where you'd want a suspended future to be holding onto a lock which makes me think correctness is the right category for it</p>",
        "id": 210202045,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600210677
    },
    {
        "content": "<p>Correctness seems right.</p>",
        "id": 210218530,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1600226726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby</span> <a href=\"#narrow/stream/257328-clippy/topic/guards.20held.20across.20await.20lints/near/210201994\">said</a>:</p>\n<blockquote>\n<p>im reviewing the newest one and I'm thinking that these lints should probably be in <code>style</code> or maybe even <code>correctness</code></p>\n</blockquote>\n<p>For correctness lints, we should be sure, that there aren't any/many FPs in the lint. If you're under the impression, that this is the case for those lints, we can put them in the correctness group. Since I'm not really familiar with async stuff and didn't review either PR, I trust you to judge if those lints are ready to be deny-by-default.</p>",
        "id": 210272113,
        "sender_full_name": "flip1995",
        "timestamp": 1600267460
    },
    {
        "content": "<p>I don't trust myself to judge if the lints are ready for deny-by-default, lol</p>",
        "id": 210291506,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600276060
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/issues/6029\">clippy#6029</a> LGTM<br>\n<a href=\"https://github.com/rust-lang/rust-clippy/issues/5439\">clippy#5439</a> also LGTM</p>\n<p>Side-note: these lints could be moved into the same module IMO.</p>",
        "id": 210296395,
        "sender_full_name": "flip1995",
        "timestamp": 1600278335
    },
    {
        "content": "<p>Would a crater run (new enough to Clippy to not know how hard it is to run a new lint with crater) give us some insight into the FP rate?</p>",
        "id": 211520130,
        "sender_full_name": "Daniel Smith",
        "timestamp": 1601312621
    },
    {
        "content": "<p>looks like it's available: <a href=\"https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#available-experiment-modes\">https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#available-experiment-modes</a></p>",
        "id": 211520281,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601312683
    },
    {
        "content": "<p>cool. I'll put a similar comment on the PR. my vote would be to merge as pedantic, run the crater run to get an estimate of the false positive rate is on either/both of the lints, and create a separate PR for pedantic -&gt; correctness. among other things, that gives us a nice, easy PR to revert if we find out we're wrong after the fact.</p>",
        "id": 211521855,
        "sender_full_name": "Daniel Smith",
        "timestamp": 1601313365
    },
    {
        "content": "<p>Since crater runs are expensive, I'm not sure whether we can do a crater run just to find FPs in a lint. We can just make it a correctness lint and wait for the complaints, as we usually do :D</p>",
        "id": 211526330,
        "sender_full_name": "flip1995",
        "timestamp": 1601315625
    },
    {
        "content": "<p>That's genuinely a better idea.</p>\n<p>If it's just a warning, and particularly if it's just in clippy, then put out the lint and let feedback guide further developments.</p>",
        "id": 211526597,
        "sender_full_name": "Lokathor",
        "timestamp": 1601315757
    },
    {
        "content": "<p>Makes sense. As long as it is a separate PR that can be reverted to go back to pedantic, that's fine with me.</p>",
        "id": 211531353,
        "sender_full_name": "Daniel Smith",
        "timestamp": 1601318054
    },
    {
        "content": "<p>I did a little bit of looking for a fix of <a href=\"https://github.com/rust-lang/rust-clippy/issues/6353\">https://github.com/rust-lang/rust-clippy/issues/6353</a> and have a failing test case in (draft) <a href=\"https://github.com/rust-lang/rust-clippy/pull/6355\">https://github.com/rust-lang/rust-clippy/pull/6355</a>. I had been optimistic that there was an easy way to access if a variable had been dropped, but I wasn't able to find anything. Would someone have a pointer to help me get started?</p>",
        "id": 217433731,
        "sender_full_name": "Daniel Smith",
        "timestamp": 1605893682
    },
    {
        "content": "<p>Sorry for the late answer. The <code>GeneratorInteriorTypeCause</code> only tells us if the value _may_ live across a generator yield. The right way to fix this would be to improve the analysis for this to also detect drops of bindings. I have no idea how hard this would be though. Probably quite hard... I'd suggest to just mention this in the Known Problems section for now. Except you want to dive deep into this, but I'm afraid that I couldn't provide much mentoring for this.</p>",
        "id": 217552648,
        "sender_full_name": "flip1995",
        "timestamp": 1606053725
    },
    {
        "content": "<p>Thanks. I'll add the known problem next week. Short term, I don't have the cycles to dive too deep.</p>",
        "id": 217818785,
        "sender_full_name": "Daniel Smith",
        "timestamp": 1606254875
    }
]