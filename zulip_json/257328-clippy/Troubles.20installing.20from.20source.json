[
    {
        "content": "<p>Note that after \"having installed\" the <code>cargo-clippy</code> component from source, it's not listed in <code>rustup +nightly-2022-02-10 component list --installed</code>.</p>",
        "id": 272871922,
        "sender_full_name": "fmease",
        "timestamp": 1645566977
    },
    {
        "content": "<p>Just tried it myself and can only give the 2 most unsatisfying answers:</p>\n<ol>\n<li>It works for me </li>\n<li>Why do you want to do this? (I assume to test your changes on a specific crate) But could you write a test in <code>tests/ui</code> instead or extract the offending code to a file? If you can do the second thing, you can do <code>cargo dev lint &lt;filename.rs&gt;</code> in the Clippy repo. </li>\n</ol>\n<p>But to maybe help you a bit in what you try to do:</p>\n<ul>\n<li><code>rustup component list</code> is not expected to display the from-source installed clippy component. At least it doesn't for me, but local changes are visible anyway.</li>\n<li>Do you run Clippy with <code>cargo +nightly-2022-02-10 clippy</code> outside of the Clippy repo? If not, there might be a <code>rust-toolchain</code> file in the crate you try to check overriding the toolchain, if you just run  <code>cargo clippy</code>.</li>\n</ul>\n<p>Regarding changing something in <code>clippy_lints</code> and the changes aren't visible, even in the Clippy dir: Do you run <code>cargo build</code> inside the <code>clippy_lints</code> dir? If so you want to do that in the project root instead. Or alternatively: Do you run the whole install-from-source-command from the doc again after changing something in <code>clippy_lints</code> or just <code>cargo build</code>?</p>\n<p>Hope this gets you closer to where you want to be.</p>",
        "id": 272930317,
        "sender_full_name": "flip1995",
        "timestamp": 1645612485
    },
    {
        "content": "<p>You may want to insert a unconditional <code>panic!()</code> somewhere to <strong>really</strong> make sure that your changes aren't applied outside of the Clippy dir.</p>",
        "id": 272930449,
        "sender_full_name": "flip1995",
        "timestamp": 1645612566
    },
    {
        "content": "<p>Thanks for replying! :) Yeah, I guess my situation is a weird one ^^. </p>\n<blockquote>\n<p>Why do you want to do this? […] But could you write a test in <code>tests/ui</code></p>\n</blockquote>\n<p>Most definitely! I planned to go the UI test route when actually starting work on the bug fix since that would result in a way faster workflow.<br>\nAs to why I wanted to build the component from source: Not sure if that makes any sense to you but I just wanted to <em>get a feel</em> for the code base and experiment with it “live”.</p>\n<blockquote>\n<p>Do you run cargo build inside the <code>clippy_lints</code> dir?</p>\n</blockquote>\n<p>No, I was either in the root of the repo or used <code>--manifest-path=\"&lt;relative&gt;/Cargo.toml\"</code>.</p>\n<blockquote>\n<p>Do you run the whole install-from-source-command […]?</p>\n</blockquote>\n<p>Yes, every time.</p>\n<blockquote>\n<p>You may want to insert a unconditional <code>panic!()</code> somewhere</p>\n</blockquote>\n<p>Thank you for the suggestion. I already did that: Used some <code>println</code>s, then I moved to <code>panic</code>s since I wasn't sure if the output was swallowed. I also changed the diagnostic message of a FP lint which always triggered on the test crate.</p>\n<p>I will probably just move to the UI test workflow and not waste time on this one. It probably has to do with my system.</p>",
        "id": 272998157,
        "sender_full_name": "fmease",
        "timestamp": 1645643901
    },
    {
        "content": "<p>The only idea I have left is that something overrides your toolchain. Which is weird, because <code>cargo +toolchain</code> should have priority. You might want to run <code>rustup show active-toolchain</code> and <code>rustup +nightly-2022-02-10 show active-toolchain</code> to check if it is overridden.</p>\n<p>As an intermediate step you can try to extract the code to a file and lint that with your custom changes with <code>cargo dev lint &lt;filename.rs&gt;</code>.</p>",
        "id": 273014383,
        "sender_full_name": "flip1995",
        "timestamp": 1645652057
    },
    {
        "content": "<p>Oh  can you check the output of <code>ls -l ~/.cargo/bin</code>. Most of the binaries in there should all have the exact same size. If the <code>cargo-clippy</code> binary is overridden and has a different size, then this is the reason why it doesn't work. (It is still weird that it works in the Clippy repo though). Also check the output <code>which cargo-clippy</code>. It should point to <code>~/.cargo/bin/cargo-clippy</code></p>",
        "id": 273014966,
        "sender_full_name": "flip1995",
        "timestamp": 1645652367
    }
]