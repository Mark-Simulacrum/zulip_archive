[
    {
        "content": "<p>I'm sorry to bother you again.<br>\nWhat do you think about the inverted approach that you suggested, that is,  implement the strictest rule at first, then incrementally relax the rule? <br>\nI mean, we implement the strictest rule that raises warning to all appearance of unsuffixed literals bound to i32/f64 at first, then incrementally relax the rule while avoiding false-negative.  This improves the reliability of the lint and matches the real use case.</p>",
        "id": 224746333,
        "sender_full_name": "Yoshitomo Nakanishi",
        "timestamp": 1612195006
    },
    {
        "content": "<p>So for restriction lints, this should be fine. Normally we rather go the other way on this. FPs are more annoying to the user than FPs. So I would rather go the way of be conservative and start with a restricted version and then expand it.</p>",
        "id": 224755284,
        "sender_full_name": "flip1995",
        "timestamp": 1612198232
    },
    {
        "content": "<p>Thanks a lot (and sorry I mistakenly created a duplicate topic). Then, considering this lint  is classified as restriction,  I start with the strictest version then relax that to reduce FPs.</p>",
        "id": 224823458,
        "sender_full_name": "Yoshitomo Nakanishi",
        "timestamp": 1612235430
    },
    {
        "content": "<p>I started writing a code to relax the restriction and found that <code>rustc_typeck::hir_ty_to_ty</code> panics whenever<code>hir::Ty</code> including<code>TyKind::Infer</code> is passed.<br>\nIs this a well known issue to clippy contributors? Currently, <code>hir_ty_to_ty</code> passes <code>ItemCtxt</code> to  <code>AstConv::ast_ty_to_ty</code>, it seems this function is assumed to be called from outside of function, right? If so should we wrap it to avoid ICE?</p>",
        "id": 224892599,
        "sender_full_name": "Yoshitomo Nakanishi",
        "timestamp": 1612282064
    },
    {
        "content": "<p>If you find a fix for it, LMK. See <a href=\"https://github.com/rust-lang/rust-clippy/issues/6179\">clippy#6179</a>, I'm trying to find a solution for this for months now. I'm afraid I can't help you more.</p>",
        "id": 224894705,
        "sender_full_name": "flip1995",
        "timestamp": 1612282865
    },
    {
        "content": "<p>Ok! Fortunately, I have some spare time to investigate it, I'll start investigating it while writing a code for this issue.</p>",
        "id": 224897927,
        "sender_full_name": "Yoshitomo Nakanishi",
        "timestamp": 1612284064
    }
]