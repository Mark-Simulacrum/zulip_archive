[
    {
        "content": "<p>Given a Ty, for example <code>&amp;String</code>, can we get the derefed type: <code>&amp;str</code> ?<br>\nI didn't find similar lints in clippy.</p>",
        "id": 251390486,
        "sender_full_name": "lengyijun",
        "timestamp": 1630418763
    },
    {
        "content": "<p>You can try using <a href=\"https://github.com/rust-lang/rust-clippy/blob/87c375fa625526d6ef93b12c0cf19ba3453a2ea5/clippy_utils/src/ty.rs#L118\"><code>implements_trait</code></a> to check for the <code>Deref</code> trait. And than you could get associated trait types with something similar to <a href=\"https://github.com/rust-lang/rust-clippy/blob/87c375fa625526d6ef93b12c0cf19ba3453a2ea5/clippy_utils/src/ty.rs#L57-L72\"><code>get_iterator_item_ty</code></a></p>",
        "id": 251391385,
        "sender_full_name": "xFrednet",
        "timestamp": 1630419112
    },
    {
        "content": "<p>I'm not sure if there is a better way right now</p>",
        "id": 251391430,
        "sender_full_name": "xFrednet",
        "timestamp": 1630419123
    },
    {
        "content": "<p>In addition, the way the compiler does this is with <code>rustc_trait_selection::autoderef::Autoderef</code>. I'm not sure if that is usable in Clippy. Note that if an expression <em>is already</em> being auto-dereferenced, then you can observe the details in <code>cx.typeck_results().expr_adjustments()</code>.</p>",
        "id": 251883338,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1630677138
    }
]