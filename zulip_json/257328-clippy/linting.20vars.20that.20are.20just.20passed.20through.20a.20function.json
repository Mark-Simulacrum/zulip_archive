[
    {
        "content": "<p>I wonder if variables that are just passed into and returned from a function without being mutated should be linted somehow (because then we could completely remove it from the function...?)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">afunction</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// a lot of code</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In this example, <code>b</code> would be linted because it is passed to the function and returned by the function without anything happening to <code>b</code>.<br>\nSo essentially we should remove the entire parameter from the function and just us the caller variable binding directly...?<br>\nDoes this make sense, or can anyone come up with situations where such a pattern seems to be useful? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 278703079,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649774771
    },
    {
        "content": "<p>would be some kind of complexity lint I guess</p>",
        "id": 278703188,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649774825
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"hello\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">afunction</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>could be simplified to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"hello\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// let x -&gt; let a</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">afunction</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// only introduce b here</span>\n</code></pre></div>\n<p>with the help of the lint</p>",
        "id": 278703787,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649775085
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">maybe_tuple</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">maybe_tuple</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">afunction</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 278704027,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649775167
    },
    {
        "content": "<p>Would be more annoying if I had to use an explicit match</p>",
        "id": 278704060,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649775180
    },
    {
        "content": "<p>I don't think it's a <em>bad</em> lint but I would probably expect it to be off by default</p>",
        "id": 278704181,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649775228
    },
    {
        "content": "<p>yeah its more of a \"hey this code might be sus\" and not a \"you should definitely change that\" lint I guess :)</p>",
        "id": 278704495,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649775351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> hm looking at you example I guess I would not lint at all for this code since maybe_tuple() has not have function parameters? <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>  or am I missing something obvious here? :D (brain is a bit fried from being ill right now, sorry about that ^^)</p>",
        "id": 278705236,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649775615
    },
    {
        "content": "<p>ah no it was about afunction</p>",
        "id": 278705354,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649775645
    },
    {
        "content": "<p>nevermind xD</p>",
        "id": 278705364,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1649775648
    },
    {
        "content": "<p><code>afunction</code> is your original example, yeah</p>",
        "id": 278705449,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649775683
    },
    {
        "content": "<p>get well soon!</p>",
        "id": 278705638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649775738
    }
]