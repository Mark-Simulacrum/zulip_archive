[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/77309#issuecomment-701051237\">https://github.com/rust-lang/rust/issues/77309#issuecomment-701051237</a></p>",
        "id": 211699610,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601423612
    },
    {
        "content": "<p>It shouldn't be sysroot. I fixed that a while ago: <a href=\"https://github.com/rust-lang/rust-clippy/commit/f5db351a1d502cb65f8807ec2c84f44756099ef3\">https://github.com/rust-lang/rust-clippy/commit/f5db351a1d502cb65f8807ec2c84f44756099ef3</a> Clippy and rustc should now always print the same sysroot. This is tested in our CI.</p>",
        "id": 211701046,
        "sender_full_name": "flip1995",
        "timestamp": 1601424654
    },
    {
        "content": "<p>I think the issue was that clippy was looking at the rustc in PATH, not the <code>RUSTC</code> env var</p>",
        "id": 211701142,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601424729
    },
    {
        "content": "<p>context: <a href=\"https://github.com/rust-lang/rust/pull/77351/commits/59890ae48b00fbe8204f7217ec7ea70e3cd00038\">https://github.com/rust-lang/rust/pull/77351/commits/59890ae48b00fbe8204f7217ec7ea70e3cd00038</a></p>",
        "id": 211701156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601424741
    },
    {
        "content": "<p>Oh yeah, if no sysroot is set at all (via <code>--sysroot</code> or env var), Clippy asks the rustc binary for the sysroot: <a href=\"https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L325-L333\">https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L325-L333</a></p>",
        "id": 211701312,
        "sender_full_name": "flip1995",
        "timestamp": 1601424896
    },
    {
        "content": "<p>also this comment: <a href=\"https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L307\">https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L307</a></p>",
        "id": 211701341,
        "sender_full_name": "flip1995",
        "timestamp": 1601424934
    },
    {
        "content": "<p>right, it should consider <code>$RUSTC</code> before <code>rustc</code></p>",
        "id": 211701345,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601424937
    },
    {
        "content": "<p>it matters for bootstrap because <code>$RUSTC</code> has a different sysroot</p>",
        "id": 211701354,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601424948
    },
    {
        "content": "<p>Yes. I wonder if we need the sysroot handling in Clippy at all <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 211701425,
        "sender_full_name": "flip1995",
        "timestamp": 1601424987
    },
    {
        "content": "<p>apparently yes: <a href=\"https://github.com/rust-lang/rust-clippy/pull/3546\">https://github.com/rust-lang/rust-clippy/pull/3546</a></p>",
        "id": 211701475,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425036
    },
    {
        "content": "<p>yep, this comment exists until today: <a href=\"https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L394-L400\">https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L394-L400</a></p>\n<p>So I think we need it to not have to link std etc. if <code>clippy-driver</code> is used directly.</p>",
        "id": 211701596,
        "sender_full_name": "flip1995",
        "timestamp": 1601425129
    },
    {
        "content": "<p>The <code>src/</code> dir of Clippy is just hacks no-one likes to touch, because it would probably break something <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 211701729,
        "sender_full_name": "flip1995",
        "timestamp": 1601425258
    },
    {
        "content": "<p>I'll see if I can add <code>RUSTC</code> support to clippy, then I wouldn't have to hack around it on the bootstrap side</p>",
        "id": 211701780,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425315
    },
    {
        "content": "<p>Instead of <code>Command::new(\"rustc\")</code> you could do something like <code>Command::new(env::var(\"RUSTC\").unwrap_or(\"rustc\"))</code> here: <a href=\"https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L326\">https://github.com/rust-lang/rust-clippy/blob/99483be1c7629a17fad45b9c208982c3891639e3/src/driver.rs#L326</a></p>",
        "id": 211701962,
        "sender_full_name": "flip1995",
        "timestamp": 1601425448
    },
    {
        "content": "<p>I suggest to do that in the rust-lang/rust copy of Clippy, so we don't need to sync to test this.</p>",
        "id": 211702122,
        "sender_full_name": "flip1995",
        "timestamp": 1601425645
    },
    {
        "content": "<p>will do</p>",
        "id": 211702135,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425668
    },
    {
        "content": "<p>Thanks! -&gt; <span aria-label=\"in bed\" class=\"emoji emoji-1f6cc\" role=\"img\" title=\"in bed\">:in_bed:</span> time for me</p>",
        "id": 211702211,
        "sender_full_name": "flip1995",
        "timestamp": 1601425726
    },
    {
        "content": "<p>hmm, this is odd - <code>cargo clippy --fix</code> on libstd does nothing, despite there being 2000 warnings</p>",
        "id": 211702238,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425764
    },
    {
        "content": "<p>you'd think at least one would be machine applicable</p>",
        "id": 211702242,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425771
    },
    {
        "content": "<p>rustfix does nothing if it breaks something, IIRC (And Clippz suggestions probably break something when triggering 2000 times). But maybe there is a flag/env var for rustfix, that forces rustfix to fix, even though it produces compiler errors?</p>",
        "id": 211702374,
        "sender_full_name": "flip1995",
        "timestamp": 1601425893
    },
    {
        "content": "<p>yeah, it's <code>__CARGO_FIX_YOLO=1</code> but I don't know how to set it: <a href=\"#narrow/stream/246057-t-cargo/topic/Does.20cargo.20pass.20--sysroot.3F/near/211702305\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/Does.20cargo.20pass.20--sysroot.3F/near/211702305</a></p>",
        "id": 211702453,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425957
    },
    {
        "content": "<p>such a great name <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 211702467,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601425973
    }
]