[
    {
        "content": "<p>I see a lot of bugs that should probably be fixed with MIR (often where a suggestion causes an ownership error), or are tagged with T-MIR, but there is very little existing code in clippy that uses MIR. Why is that? Is there anything preventing me from making contributions with MIR? Also I don't understand the implications of this issue: <a href=\"https://github.com/rust-lang/rust-clippy/issues/6080\">rust-lang/rust-clippy#6080</a>. Is this a blocker for using MIR in clippy?</p>",
        "id": 220616268,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1608576536
    },
    {
        "content": "<p>We're trying to avoid MIR lints, because they are hard to maintain, since you need knowledge of how MIR works. So if there is a lint like the redundant_clone lint, which uses many things of MIR, we can't rely on new contributors to fix issues in those lints. Also reviewing fixes to MIR lints takes long.</p>\n<p>If there would be a reusable utils functions, that can be used to check borrowing issues in suggestions, that would be great.</p>",
        "id": 220627617,
        "sender_full_name": "flip1995",
        "timestamp": 1608582976
    },
    {
        "content": "<p>I see. For a util function then, we should use <code>mir_const</code>, but we can't until 6080 is resolved? Is it okay to use <code>optimized_mir</code> in the meantime?</p>",
        "id": 220628032,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1608583237
    },
    {
        "content": "<p>That's where my knowledge ends. I also don't really know what this issue is about, exactly.</p>",
        "id": 220628234,
        "sender_full_name": "flip1995",
        "timestamp": 1608583378
    },
    {
        "content": "<p>Thinking about this a bit more: making MIR more accessible for Clippy might be a great project for 2021 (under the \"FP reduction\" point, maybe). This could be by working together with the MIR working group (if that exists?) or just writing some documentation how to use MIR in Clippy (as a starting point).</p>",
        "id": 220669618,
        "sender_full_name": "flip1995",
        "timestamp": 1608626966
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> from <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span></p>",
        "id": 220669788,
        "sender_full_name": "oli",
        "timestamp": 1608627117
    },
    {
        "content": "<p>(we optimize MIR. both values of it as well as its datastructures)</p>",
        "id": 220669853,
        "sender_full_name": "oli",
        "timestamp": 1608627165
    },
    {
        "content": "<p>So I think the most reasonable way forward is for me to carry <a href=\"https://github.com/rust-lang/rust/pull/78407\">https://github.com/rust-lang/rust/pull/78407</a> over the finish line (had that planned for the holidays anyway), then introduce a way to ensure that clippy will end up getting the right MIR. Showcase that with the unnecessary clone lint and write documentation explaining all of that</p>",
        "id": 220675937,
        "sender_full_name": "oli",
        "timestamp": 1608632471
    },
    {
        "content": "<p>One thing other than bug fixes that would be good for MIR is abstract interpretation. For instance linting an always true condition: <code>if a &amp;&amp; b { if b { .. } }</code>.</p>",
        "id": 220707721,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1608654460
    },
    {
        "content": "<p>I'd be happy to write documentation for using MIR after getting some experience!</p>",
        "id": 220708689,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1608654967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/257328-clippy/topic/Clippy.20.3C3.20MIR.3F/near/220675937\">said</a>:</p>\n<blockquote>\n<p>then introduce a way to ensure that clippy will end up getting the right MIR</p>\n</blockquote>\n<p>So now we need to do this part?</p>",
        "id": 223924669,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611592974
    },
    {
        "content": "<p>yea... so... clippy can now use <code>mir_for_ctfe</code>, which is badly named for this task, but simply the MIR before optimizations</p>",
        "id": 224013331,
        "sender_full_name": "oli",
        "timestamp": 1611652574
    }
]