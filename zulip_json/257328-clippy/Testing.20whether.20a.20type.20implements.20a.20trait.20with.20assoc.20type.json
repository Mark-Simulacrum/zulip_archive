[
    {
        "content": "<p>How do I test whether a type implements a trait with a specific associated type, similar to having the bound <code>Trait&lt;Type = X&gt;</code>? For context, I'm trying to check whether some type implements <code>Deref&lt;Target = str&gt;</code>.</p>\n<p>I found <code>clippy_lints::utils::implements_trait</code>, but that only takes generic type parameters.</p>",
        "id": 226321850,
        "sender_full_name": "boolean_coercion",
        "timestamp": 1613332704
    },
    {
        "content": "<p>Hmm. I think the associated type is not needed when asking \"does X implement Y\".</p>",
        "id": 226421232,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1613416611
    },
    {
        "content": "<p>Do you need to ask, \"If X implements Deref, then what is Target for that Impl?\" I'm not sure how to do that. Maybe you should explain what you need.</p>",
        "id": 226421705,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1613416904
    },
    {
        "content": "<p>My problem is related to this <a href=\"https://github.com/rust-lang/rust-clippy/pull/6717#pullrequestreview-589891735\">issue</a>. I'd like to know when I'm able to remove the <code>&amp;</code> operator, but that's only possibly if I know that the type being referenced implements <code>Deref&lt;Target = str&gt;</code>. You could check manually if the type is <code>String</code> or <code>&amp;str</code> of course, but I'd like to be the most general so that this will work with any user-defined type as well.</p>",
        "id": 226424180,
        "sender_full_name": "boolean_coercion",
        "timestamp": 1613418572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372858\">@boolean_coercion</span> I think <code>expr_adjustments</code> would fit your need. It reveals implicit derefs.</p>",
        "id": 226696106,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1613583958
    }
]