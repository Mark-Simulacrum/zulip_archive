[
    {
        "content": "<p>Meeting <time datetime=\"2021-10-05T15:00:00Z\">2021-10-05T17:00:00+02:00</time></p>\n<p>Agenda:</p>\n<ul>\n<li>trimmed paths <a href=\"https://github.com/rust-lang/rust-clippy/issues/7668\">clippy#7668</a></li>\n<li>...?</li>\n</ul>",
        "id": 256255392,
        "sender_full_name": "flip1995",
        "timestamp": 1633444212
    },
    {
        "content": "<p>trimmed paths?</p>",
        "id": 256255643,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633444302
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3456\">@T-clippy</span> Meeting in T-10min</p>",
        "id": 256259258,
        "sender_full_name": "flip1995",
        "timestamp": 1633445445
    },
    {
        "content": "<p>Meeting time <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 256261361,
        "sender_full_name": "flip1995",
        "timestamp": 1633446057
    },
    {
        "content": "<p>I don't have anything. So <span class=\"user-mention\" data-user-id=\"360405\">@Cameron Steffen</span> go ahead with trimmed paths!</p>",
        "id": 256261471,
        "sender_full_name": "flip1995",
        "timestamp": 1633446099
    },
    {
        "content": "<p>Well, the PR summarizes the issue <a href=\"https://github.com/rust-lang/rust-clippy/pull/7668\">https://github.com/rust-lang/rust-clippy/pull/7668</a></p>",
        "id": 256261653,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446154
    },
    {
        "content": "<p>Is it worth it to change our span_lint utils?</p>",
        "id": 256261755,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446192
    },
    {
        "content": "<p>IIUC, there are two open questions:</p>\n<ul>\n<li>Do we want to refactor our span_lint* functions and bring them closer to the rustc DiagBuilder?</li>\n<li>State of trimmed paths and if they're a good idea to use in Clippy?</li>\n</ul>",
        "id": 256261914,
        "sender_full_name": "flip1995",
        "timestamp": 1633446255
    },
    {
        "content": "<p>Let's address the first question first.</p>",
        "id": 256262049,
        "sender_full_name": "flip1995",
        "timestamp": 1633446301
    },
    {
        "content": "<p>I think being closer to rustc here is good</p>",
        "id": 256262072,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1633446309
    },
    {
        "content": "<p>Right. I think refactoring the utils is necessary with enabling trimmed paths, because without doing so, it is easier to cause ICE.</p>",
        "id": 256262118,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446325
    },
    {
        "content": "<p>Yeah, re-thinking my comment, I see the benefit to being closer to rustc.</p>",
        "id": 256262186,
        "sender_full_name": "flip1995",
        "timestamp": 1633446355
    },
    {
        "content": "<p>Could the interface on the rustc side be changed to avoid ICEs?</p>",
        "id": 256262281,
        "sender_full_name": "llogiq",
        "timestamp": 1633446378
    },
    {
        "content": "<p>Also it could benefit perf to defer calculating diagnostic messages to after checking is-allowed</p>",
        "id": 256262355,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248599\">@llogiq</span> my understanding is \"no\" but icbw</p>",
        "id": 256262379,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1633446418
    },
    {
        "content": "<p>The code that triggers the ICEs is <a href=\"https://github.com/rust-lang/rust/blob/517c28e421b0d601c6f8eb07ea6aafb8e16975ad/compiler/rustc_middle/src/ty/print/pretty.rs#L2401\">here</a></p>",
        "id": 256262437,
        "sender_full_name": "flip1995",
        "timestamp": 1633446440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248599\">@llogiq</span> ^</p>",
        "id": 256262461,
        "sender_full_name": "flip1995",
        "timestamp": 1633446451
    },
    {
        "content": "<p>I see.</p>",
        "id": 256262600,
        "sender_full_name": "llogiq",
        "timestamp": 1633446489
    },
    {
        "content": "<p>the reason for the ICE is that clippy would be slower in the no-warnings case if we trigger the trimmed paths query</p>",
        "id": 256262692,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446527
    },
    {
        "content": "<p>So we rather lean towards refactoring our utils. If we do this, I would separate this from the trimmed paths PR though.</p>",
        "id": 256262899,
        "sender_full_name": "flip1995",
        "timestamp": 1633446596
    },
    {
        "content": "<p>Re the \"should we\" question, given that rustc already does this, we can be assured it works reasonably well. And it's likely a quality-of-life improvement.</p>",
        "id": 256262921,
        "sender_full_name": "llogiq",
        "timestamp": 1633446601
    },
    {
        "content": "<p>I think that's it then</p>",
        "id": 256263232,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446692
    },
    {
        "content": "<p>Maybe we could discuss <code>is_item</code>?</p>",
        "id": 256263378,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446725
    },
    {
        "content": "<p>Ok. <span class=\"user-mention\" data-user-id=\"360405\">@Cameron Steffen</span> do you take over the refactoring? And since this is a considerable amout of work, how can we help you?</p>",
        "id": 256263390,
        "sender_full_name": "flip1995",
        "timestamp": 1633446730
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/issues/7647\">clippy#7647</a> is the <code>is_item</code> PR</p>",
        "id": 256263482,
        "sender_full_name": "flip1995",
        "timestamp": 1633446762
    },
    {
        "content": "<p>I'll write a ticket to refactor. I'll probably split it up somehow.</p>",
        "id": 256263529,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446777
    },
    {
        "content": "<p>Not sure who's following the discussion on <code>is_item</code> but basically I have been rather vocal and I don't know what others think :)</p>",
        "id": 256263863,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446869
    },
    {
        "content": "<p>What's the current state of the is_item PR? Sorry I didn't really keep up with it. :D</p>",
        "id": 256263904,
        "sender_full_name": "flip1995",
        "timestamp": 1633446882
    },
    {
        "content": "<p>Basically I'm leaning against it because I think it is over-abstraction</p>",
        "id": 256264132,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633446953
    },
    {
        "content": "<p>That was also my feeling when I first saw the PR. I like the simplification, but I had the feeling that it is a bit too much <em>magic</em>.</p>",
        "id": 256264298,
        "sender_full_name": "flip1995",
        "timestamp": 1633446992
    },
    {
        "content": "<p>I think your (<span class=\"user-mention silent\" data-user-id=\"360405\">Cameron Steffen</span> ) suggestion to only use diagnostic item is better than having a general <code>is_item</code> function</p>",
        "id": 256264304,
        "sender_full_name": "xFrednet",
        "timestamp": 1633446995
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> for using diagnostic items</p>",
        "id": 256264377,
        "sender_full_name": "llogiq",
        "timestamp": 1633447024
    },
    {
        "content": "<p>With your recent PR that would make reverse lookup (of diag items) possible, this would also be easier to implement, right?</p>",
        "id": 256264472,
        "sender_full_name": "flip1995",
        "timestamp": 1633447063
    },
    {
        "content": "<p>what would be easier to implement?</p>",
        "id": 256264715,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633447130
    },
    {
        "content": "<p>To only use diag items rather than having <code>is_item</code></p>",
        "id": 256264879,
        "sender_full_name": "flip1995",
        "timestamp": 1633447176
    },
    {
        "content": "<p>ya</p>",
        "id": 256265029,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633447216
    },
    {
        "content": "<p>I think there may be room for new utils/abstractions, but there are two things we should do <em>first</em></p>\n<ol>\n<li>Replace more paths with diagnostic items</li>\n<li>Adopt <code>get_diagnostic_name</code></li>\n</ol>",
        "id": 256265048,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1633447221
    },
    {
        "content": "<p>So, we like to have a simplification with our utils, but the <code>is_item</code> PR is over-abstraction, so not the solution?</p>",
        "id": 256265531,
        "sender_full_name": "flip1995",
        "timestamp": 1633447381
    },
    {
        "content": "<p>I think that's all then. So <span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-meeting</p>",
        "id": 256265832,
        "sender_full_name": "flip1995",
        "timestamp": 1633447461
    },
    {
        "content": "<p>Does anyone have something to bring up?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if you're ready to end the meeting.</p>",
        "id": 256265834,
        "sender_full_name": "triagebot",
        "timestamp": 1633447462
    },
    {
        "content": "<p>I think we should also create a util function to check for type relative calls with diagnostic items like <code>Vec::new</code>.</p>",
        "id": 256265875,
        "sender_full_name": "xFrednet",
        "timestamp": 1633447477
    },
    {
        "content": "<p>Ok, thanks for attending everyone <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 256266079,
        "sender_full_name": "flip1995",
        "timestamp": 1633447546
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"369415\">xFrednet</span> <a href=\"#narrow/stream/257328-clippy/topic/Meeting.202021-10-05/near/256265875\">said</a>:</p>\n<blockquote>\n<p>I think we should also create a util function to check for type relative calls with diagnostic items like <code>Vec::new</code>.</p>\n</blockquote>\n<p>Let's discuss how exactly we want to move forward with this in another thread/issue.</p>",
        "id": 256266209,
        "sender_full_name": "flip1995",
        "timestamp": 1633447576
    }
]