[
    {
        "content": "<p>Ok, I've been look into <a href=\"https://github.com/rust-lang/rust-clippy/issues/8288\"><code>issue#8288</code></a> for a couple days so far, but I don't think I'm getting anywhere since I'm still very new to clippy XD.</p>\n<p>From what my understanding of the OP's suggestion, basically the lint <code>question_mark</code> also needs to be able to pick up the following code.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>And my current idea was to compare the two <code>Err(err)</code>s, one is a <code>rustc_hir::Pat</code> type and the later one is <code>rustc_hir::Expr</code> type. How do I achieve this, or perhaps there are better ways of solving this issue?</p>",
        "id": 269079198,
        "sender_full_name": "Jonathan Lee",
        "timestamp": 1643016786
    },
    {
        "content": "<p>As an extension of the <code>question_mark</code> lint, you can destructure the <code>Pat</code> . In this case the <code>pat.kind</code> should be <code>PatKind::Variant</code>.</p>",
        "id": 269088787,
        "sender_full_name": "flip1995",
        "timestamp": 1643022111
    },
    {
        "content": "<p>The <code>PatKind::Variant</code> should then have exactly one pattern, which should be a <code>PatKind::Binding</code>.  You can then compare the <code>Symbol</code> of this binding with the symbol that is returned. I don't think you have to compare <code>HirId</code>s or <code>DefId</code>s in this case, since you know that there can't be any shadowed variable or something like that get in the way.</p>",
        "id": 269089218,
        "sender_full_name": "flip1995",
        "timestamp": 1643022316
    },
    {
        "content": "<p>Here's the documentaion for <code>rustc_hit::Pat</code>: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/thir/struct.Pat.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/thir/struct.Pat.html</a> , which will lead you to <code>PatKind</code></p>",
        "id": 269089274,
        "sender_full_name": "flip1995",
        "timestamp": 1643022355
    },
    {
        "content": "<p>This will work for the simple case of your example. But I can't really think of more complex cases where this lint extension would really make sense</p>",
        "id": 269089392,
        "sender_full_name": "flip1995",
        "timestamp": 1643022400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> Thank you very much~ that does sound like a good starting point</p>",
        "id": 269195318,
        "sender_full_name": "Jonathan Lee",
        "timestamp": 1643072973
    },
    {
        "content": "<p>Okay... May I ask what's the method that extract symbol from an expression? Or how do I compare the exact symbol between expression and pattern. I've been using <code>clippy_utils::contains_name(name, expr)</code> to do the trick until I realized that <code>Some(a) == Some(a+1)</code> is also true. XD</p>",
        "id": 269917598,
        "sender_full_name": "Jonathan Lee",
        "timestamp": 1643528530
    }
]