[
    {
        "content": "<p>Clippy has a unique requirement of supporting external crates (like serde) in ui tests. This has caused a lot of headaches</p>\n<ul>\n<li>not supported by compiletest so we need a hacky <a href=\"https://github.com/rust-lang/rust-clippy/blob/9991040258b838ad90b1f87bb635c62f17268448/tests/compile-test.rs#L35\">solution</a></li>\n<li>seems to cause issues in the rustc repo <a href=\"https://github.com/rust-lang/rust/issues/76495\">#76495</a></li>\n<li>causes \"multiple rlibs\" errors when testing</li>\n</ul>\n<p>I think we need to pick a long-term solution. One idea I came up with is - just simply get rid of this requirement. That means re-writing some tests to be independent of third-party crates. I think this might not be too hard?</p>\n<p>Otherwise, I think the only other option is to add proper support to compiletest. But this seems difficult to do right since cargo holds all the cards when it comes to a shared target dir.</p>",
        "id": 241558357,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622823216
    },
    {
        "content": "<p>doesn't compiletest invoke cargo itself? you can override the target dir with <code>CARGO_TARGET_DIR</code></p>",
        "id": 241559856,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622823876
    },
    {
        "content": "<p>I thought compiletest just invokes rustc</p>",
        "id": 241559939,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622823913
    },
    {
        "content": "<p>either compiletest invokes cargo, in which case it can control the dir with CARGO_TARGET_DIR, or it only invokes rustc, in which case you can pass <code>--out-dir</code>. Either way you control the target directory.</p>",
        "id": 241560118,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622823994
    },
    {
        "content": "<p>Well right now we use a shared target dir so that ui tests can use crates in dev-dependencies. This has a bonus of not having to re-compile some dependencies. And the rustc bootstrapping process seems to favor shared target dirs. Using a separate dir might fix it, but I don't know if we're willing to use a fresh target dir just for clippy's ui tests.</p>",
        "id": 241560516,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622824159
    },
    {
        "content": "<p>I think you should see how long the test takes with and without the shared dir. If it's similar, then just use the new dir and that's that.</p>",
        "id": 241561046,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622824381
    },
    {
        "content": "<p>We can't really remove the external crate deps, without removing some lints. We have lints, that lint the usage of serde and regex, for example.</p>",
        "id": 241561347,
        "sender_full_name": "flip1995",
        "timestamp": 1622824497
    },
    {
        "content": "<p>I think what we could do is have a \"dummy crate\" that compiles to a different target and then pass that target folder to \"-L folder\" in compiletest.</p>",
        "id": 241561756,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622824692
    },
    {
        "content": "<p>Why do you need the dummy crate? Cargo will create the directory if it doesn't already exist</p>",
        "id": 241561874,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622824766
    },
    {
        "content": "<p>(or you can just create it yourself)</p>",
        "id": 241561885,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622824776
    },
    {
        "content": "<p>we need a separate crate with a separate target dir so that it doesn't have conflicting rlib files</p>",
        "id": 241562178,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622824918
    },
    {
        "content": "<p>Right, but I don't understand why you can't pass <code>-L folder</code> unconditionally; why does there need to be a crate in it?</p>",
        "id": 241562296,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622824972
    },
    {
        "content": "<p><code>-L folder</code> can be unconditional. We just need another crate to declare the dependencies that get bulit and put in the folder.</p>",
        "id": 241562461,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622825045
    },
    {
        "content": "<blockquote>\n<p>We just need another crate to declare the dependencies that get bulit and put in the folder.</p>\n</blockquote>\n<p>I don't understand why this is true. Sorry if I'm being dense. What happens if you don't build a dummy crate first?</p>",
        "id": 241562538,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622825083
    },
    {
        "content": "<p>is it because you're using cargo and there's no way to tell cargo to only build dependencies?</p>",
        "id": 241562604,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622825116
    },
    {
        "content": "<p>the dependencies need to be built before running compiletest</p>",
        "id": 241562782,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622825185
    },
    {
        "content": "<p>Maybe we can do the dummy crate thing but it is used for local dev only somehow? Not for CI.</p>",
        "id": 241564103,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622825809
    },
    {
        "content": "<p>I think I have a fundamental misunderstanding somewhere; if you have an idea how it should work go for it :)</p>",
        "id": 241564204,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622825875
    },
    {
        "content": "<p>I think what Cam wants to do is to stop using external crates in our test and instead put dummy crates for serde, regex, ... into the Clippy repo to test with those.</p>",
        "id": 241564367,
        "sender_full_name": "flip1995",
        "timestamp": 1622825949
    },
    {
        "content": "<p>ahhh ok that makes sense</p>",
        "id": 241564514,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622825997
    },
    {
        "content": "<p>sorry if I'm not clear. just one dummy crate (call it <code>ui_deps</code>) which has all the deps like serde and it gets compiled to, say, <code>target/ui_deps</code>. Then in compile-test, we can pass <code>-L target/ui_deps</code> instead of <code>-L target/deps</code> (or whatever it is)</p>",
        "id": 241565045,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622826146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/257328-clippy/topic/ui.20extern.20crates.2E.2E.2Ewhat.20to.20do/near/241562604\">said</a>:</p>\n<blockquote>\n<p>is it because you're using cargo and there's no way to tell cargo to only build dependencies?</p>\n</blockquote>\n<p>ok, so because of this ^</p>",
        "id": 241565119,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622826183
    },
    {
        "content": "<p>you don't inherently need a dummy crate, it's just a cargo limitation</p>",
        "id": 241565133,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622826193
    },
    {
        "content": "<p>maybe. if we could tell cargo to build only dependencies, there still might be multiple versions of a dependency in the target.</p>",
        "id": 241565297,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622826259
    },
    {
        "content": "<p>or do you mean, build only dependencies and use a different target?</p>",
        "id": 241565370,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622826292
    },
    {
        "content": "<p>either way, yeah, cargo doesn't do that</p>",
        "id": 241565437,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622826323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360405\">Cameron Steffen</span> <a href=\"#narrow/stream/257328-clippy/topic/ui.20extern.20crates.2E.2E.2Ewhat.20to.20do/near/241565370\">said</a>:</p>\n<blockquote>\n<p>or do you mean, build only dependencies and use a different target?</p>\n</blockquote>\n<p>yes, that's what I mean</p>",
        "id": 241565442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622826323
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/2644\">https://github.com/rust-lang/cargo/issues/2644</a></p>",
        "id": 241565487,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1622826343
    },
    {
        "content": "<p>Cargo seems to have a nice way of checking the output of cargo commands on custom projects (<a href=\"https://github.com/rust-lang/cargo/blob/b3475e6df9f9d0b3e61c84a5746f7dc872368637/tests/testsuite/build.rs#L259-L276\">example</a>). Maybe it can be reused.</p>",
        "id": 242186990,
        "sender_full_name": "Federico Poli",
        "timestamp": 1623321615
    },
    {
        "content": "<p>Yes, <code>cargo --message-format</code> would work well. The problem with that is when Clippy tests are run in tree with rustc bootstrapping. They have a whole bunch of custom parameters for running cargo. If we run cargo in our tests, outside of rustc bootstrapping's control, it doesn't work well.</p>",
        "id": 242203979,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1623331094
    },
    {
        "content": "<p>I think someone with deeper knowledge of rustc bootstrapping would have to come up with a clean solution.</p>",
        "id": 242204146,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1623331179
    },
    {
        "content": "<p>This was previously attempted at <a href=\"https://github.com/rust-lang/rust-clippy/issues/5121\">rust-lang/rust-clippy#5121</a> and reverted at <a href=\"https://github.com/rust-lang/rust-clippy/issues/5145\">rust-lang/rust-clippy#5145</a>.</p>",
        "id": 242204795,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1623331482
    },
    {
        "content": "<p>I'm going to open an issue to summarize the problem and history</p>",
        "id": 242208735,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1623332922
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/issues/7343\">https://github.com/rust-lang/rust-clippy/issues/7343</a></p>",
        "id": 242233044,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1623342171
    }
]