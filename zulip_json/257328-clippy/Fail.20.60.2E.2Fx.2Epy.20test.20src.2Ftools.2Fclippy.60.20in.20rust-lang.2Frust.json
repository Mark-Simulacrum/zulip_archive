[
    {
        "content": "<p>I don't know why the test is failing in rust-lang/rust. The commit hash is <code>3bf55753c68</code>. This is the first time I've run a test with <code>./x.py test src/tools/clippy</code> in rust-lang/rust</p>\n<div class=\"codehilite\"><pre><span></span><code>test [ui] ui/or_fun_call.rs ... FAILED\n\n...(snip)\n(.stderr)\n\n error: use of `or_insert` followed by a function call\n   --&gt; $DIR/or_fun_call.rs:85:23\n    |\n LL |     map_vec.entry(42).or_insert(vec![]);\n-   |                       ^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(Vec::new)`\n+   |                       ^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(..)`\n\n...(snip)\n(.fixed)\n\n-    map_vec.entry(42).or_insert_with(Vec::new);\n+    map_vec.entry(42).or_insert_with(..);\n</code></pre></div>",
        "id": 257004863,
        "sender_full_name": "Takayuki Nakata",
        "timestamp": 1633920667
    },
    {
        "content": "<p>This looks like the <code>snippet</code> util can't find the span of <code>vec![]</code> and therefore defaults to <code>\"..\"</code>. No idea why this happens though...</p>",
        "id": 257024642,
        "sender_full_name": "flip1995",
        "timestamp": 1633937722
    },
    {
        "content": "<p>Something with --remap-path-prefix maybe? I know it's been inconsistent in the past whether the compiler knows where the sources for the standard library are or not</p>",
        "id": 257064272,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633958975
    },
    {
        "content": "<p>It's strange that this is passing CI though</p>",
        "id": 257064289,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633958985
    }
]