[
    {
        "content": "<p>Hello,  I have a question about the <code>not_unsafe_ptr_arg_deref </code> lint. Apparently, it was added prior to Rust 1.29, but why does it only run on nightly?</p>",
        "id": 277718014,
        "sender_full_name": "Wim de With",
        "timestamp": 1649072544
    },
    {
        "content": "<p>It should run on stable as normal, could you maybe provide an example? <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 277721379,
        "sender_full_name": "xFrednet",
        "timestamp": 1649074372
    },
    {
        "content": "<p>Yeah, you're right, my poc works as expected. I'll try to find out what happens in my project</p>",
        "id": 277724966,
        "sender_full_name": "Wim de With",
        "timestamp": 1649076229
    },
    {
        "content": "<p>Got it, if the pointer is a type alias it doesn't work on stable:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">Ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">not_safe</span><span class=\"p\">(</span><span class=\"n\">ptr</span>: <span class=\"nc\">Ptr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277725695,
        "sender_full_name": "Wim de With",
        "timestamp": 1649076612
    },
    {
        "content": "<p>It also works on <code>beta</code>. So maybe something in rustc internals changed in 1.60.0 (current beta) that allows Clippy to now also check for type aliases. I would retry this on Thursday/Friday once 1.60.0 is released as the new stable. Maybe it will start to work then.</p>",
        "id": 277844748,
        "sender_full_name": "flip1995",
        "timestamp": 1649148225
    },
    {
        "content": "<p>I just checked the Clippy changelog and I can now confirm that this was indeed added in Clippy 1.60: <a href=\"https://github.com/rust-lang/rust-clippy/pull/8273\">https://github.com/rust-lang/rust-clippy/pull/8273</a></p>\n<p>So it should also work on stable after the release on Thursday.</p>",
        "id": 277848419,
        "sender_full_name": "flip1995",
        "timestamp": 1649150243
    }
]