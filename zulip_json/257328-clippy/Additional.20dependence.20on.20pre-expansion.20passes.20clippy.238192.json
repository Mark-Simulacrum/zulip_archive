[
    {
        "content": "<p>See my comment: <a href=\"https://github.com/rust-lang/rust-clippy/pull/8192#issuecomment-1011070536\">https://github.com/rust-lang/rust-clippy/pull/8192#issuecomment-1011070536</a></p>\n<p>This splits out a new pre-expansion pass from another pre-expansion pass. So technically it doesn't introduce a complete new one.</p>\n<p>However, it adds more dependence on pre-expansion passes, since it tries to lint <code>cfg!</code> macros, which isn't possible with <code>EarlyLintPass</code> (currently?).</p>\n<p>Should we allow this change?</p>",
        "id": 267727256,
        "sender_full_name": "flip1995",
        "timestamp": 1641995863
    },
    {
        "content": "<p>Probably not. Another option is to detect a boolean literal from expansion of <code>cfg!</code>, get the call site span, and parse it by hand. This is kinda hacky but it wouldn't be very complex to detect simple cases.</p>",
        "id": 267761910,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1642010310
    },
    {
        "content": "<p>But I wonder if this could be a rustc lint?</p>",
        "id": 267762218,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1642010420
    },
    {
        "content": "<p>If that sort of thing is possible in rustc, there's definitely an argument to be made to uplift this.</p>",
        "id": 267836371,
        "sender_full_name": "flip1995",
        "timestamp": 1642062053
    },
    {
        "content": "<p>Not sure why I got a notification for an accepted RFC that was merged a year ago, but that RFC kinda talks about this: <a href=\"https://github.com/rust-lang/rust/issues/82450\">https://github.com/rust-lang/rust/issues/82450</a></p>\n<p>So I think implementing this in rustc is the better idea.</p>",
        "id": 267896945,
        "sender_full_name": "flip1995",
        "timestamp": 1642092751
    }
]