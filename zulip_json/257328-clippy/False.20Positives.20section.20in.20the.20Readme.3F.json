[
    {
        "content": "<ol>\n<li>(Attempt to) Explain the difference between a false positive bug and a \"special case\" false positive. Say what to do in each case (file a bug or <code>allow</code>)</li>\n<li>Give a concrete example of using <code>allow</code> with a \"why\" comment to suppress a single lint. This is a good practice that we can teach and encourage.</li>\n</ol>\n<p>This would at least partially address <a href=\"https://github.com/rust-lang/rust-clippy/issues/6535\">rust-lang/rust-clippy#6535</a>.<br>\nOf course we don't want to scare people away from filing bugs, but this also might reduce bug reports like \"clippy linted and I didn't want it to\" <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span>.<br>\nThoughts?</p>",
        "id": 223563825,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611259747
    },
    {
        "content": "<p>I think this could be good! Maybe try to simply focus on the separation between these. Having a configuration or enhancing a lint for a \"special case\" can be a helpful feature request. So, maybe focus on the correct categorization for issues. Or have I misunderstood your focus <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 223568262,
        "sender_full_name": "xFrednet",
        "timestamp": 1611262107
    },
    {
        "content": "<p>Well I don't know if \"special case\" is the best term. I'm talking about instances where clippy is 100% right to lint but the user is also 100% right to <code>allow</code> it because of the context.</p>\n<p>For example, I just saw a comment about something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">test_partial_eq</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// fires `eq_op` lint</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 223568808,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611262410
    },
    {
        "content": "<p>Now, maybe we could add a condition for <code>#[test]</code>, but sometimes there is no opportunity for adding a condition. So there's a challenge here to find a perfect example.</p>",
        "id": 223568912,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611262461
    },
    {
        "content": "<p>But rather than categorization of issues, I am saying that an issue should not be opened at all, unless there is some perceivable way for clippy to detect and avoid the false positive. But again, people should be encouraged to open an issue if in doubt.</p>",
        "id": 223569140,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611262586
    },
    {
        "content": "<p>Basically provide guidance for: \"Should I just <code>allow</code> this? Or is this a clippy bug?\"</p>",
        "id": 223569494,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611262781
    },
    {
        "content": "<p>Hmmm, this is a complicated task you set yourself there ^^<br>\nI would actually say that the example you gave here is worth an issue but should be labeled enhancement instead of FP. But this can not be generalized. I've also seen some issues about correct clippy behavior</p>",
        "id": 223569503,
        "sender_full_name": "xFrednet",
        "timestamp": 1611262787
    },
    {
        "content": "<blockquote>\n<p>there is some perceivable way for clippy to detect and avoid the false positive</p>\n</blockquote>\n<p>The problem with this is, that people don't know what Clippy can detect and what it can't detect.</p>\n<p>Finding such an example is also hard, because, as you said, this is a special case, which is specific to a code base. </p>\n<p>If there is an example where a lint should generally be allowed, then it is a FP and not an example for a special case.  So we're going in circles here, I think.</p>",
        "id": 223571397,
        "sender_full_name": "flip1995",
        "timestamp": 1611263723
    },
    {
        "content": "<p>I just noticed, that I'm too negative today. I think documenting/defining this is a good idea. Finding an example might be hard though.</p>",
        "id": 223576887,
        "sender_full_name": "flip1995",
        "timestamp": 1611266460
    },
    {
        "content": "<p>The \"special case\" false positives aren't false positives at all. If you have a lint called <code>metal</code> it should detect <code>metal</code> everywhere. It's not a false positive for a metal detector to detect keys even if you're using it to try to find guns.</p>",
        "id": 223602409,
        "sender_full_name": "Michael Wright",
        "timestamp": 1611289120
    },
    {
        "content": "<p>That said I think lints should still be changed to reduce unhelpful warnings if possible. As long as it doesn't change what the lint it about.</p>",
        "id": 223603585,
        "sender_full_name": "Michael Wright",
        "timestamp": 1611290801
    },
    {
        "content": "<p>Great analogy. I'll have to think on this a little more and look for a good example. I may have to use a pedantic lint.</p>",
        "id": 223648437,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1611326101
    },
    {
        "content": "<p>to me anything written suggesting confusions <br>\nshouldn't be brought forward isn't ideal</p>",
        "id": 223653360,
        "sender_full_name": "oliver",
        "timestamp": 1611328245
    }
]