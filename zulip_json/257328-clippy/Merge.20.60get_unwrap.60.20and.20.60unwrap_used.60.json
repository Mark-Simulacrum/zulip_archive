[
    {
        "content": "<p>Can we merge <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#get_unwrap\"><code>get_unwrap</code></a> and <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used\"><code>unwrap_used</code></a> into one? There seems to be no reason to treat <code>get</code> specially. The related issue is <a href=\"https://github.com/rust-lang/rust-clippy/issues/8124\">https://github.com/rust-lang/rust-clippy/issues/8124</a>.</p>",
        "id": 265158282,
        "sender_full_name": "Takayuki Nakata",
        "timestamp": 1639662745
    },
    {
        "content": "<p>Those two lints do different things. The <code>get_unwrap</code> suggests to use indexing instead of <code>get().unwrap()</code>, which can still panic. The <code>unwrap_used</code> lint is meant to warn on <strong>all</strong> uses of <code>unwrap</code> in order for them to get removed and replaced with some non- or explicit-panicking error handling.</p>",
        "id": 265170400,
        "sender_full_name": "flip1995",
        "timestamp": 1639667799
    },
    {
        "content": "<p>Oh, you're right. I overlooked the detail of the suggestion's message. Thanks!</p>",
        "id": 265237243,
        "sender_full_name": "Takayuki Nakata",
        "timestamp": 1639699112
    },
    {
        "content": "<p>So, it seems to be okay to allow <code>unwrap_used</code> to detect <code>get(i).unwrap()</code> and <code>get_mut(i).unwrap()</code>. Is that okay?<br>\nThe related PR is <a href=\"https://github.com/rust-lang/rust-clippy/pull/8125\">https://github.com/rust-lang/rust-clippy/pull/8125</a>.</p>",
        "id": 265237747,
        "sender_full_name": "Takayuki Nakata",
        "timestamp": 1639699439
    },
    {
        "content": "<p>Yeah, IMO this is fine, because <code>unwrap_used</code> is a restriction lint which has to be explicitly enabled. So it should lint on every use of <code>unwrap</code>, like it is documented.</p>",
        "id": 265273291,
        "sender_full_name": "flip1995",
        "timestamp": 1639734023
    }
]