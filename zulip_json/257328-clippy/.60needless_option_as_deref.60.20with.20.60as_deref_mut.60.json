[
    {
        "content": "<p>Hello! Any thoughts on <a href=\"https://github.com/rust-lang/rust-clippy/pull/8064\">https://github.com/rust-lang/rust-clippy/pull/8064</a> ?</p>\n<p>I tried <code>typeck.node_type()</code> on <code>path.hir_id</code>, but it doesn't appear to have a node type</p>",
        "id": 263856568,
        "sender_full_name": "Alex Macleod",
        "timestamp": 1638800660
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239861\">@Alex Macleod</span> <br>\nWould checking if the item in question impl'ed <code>Copy</code> help prevent the bad suggestion case? <a href=\"https://github.com/rust-lang/rust-clippy/blob/master/clippy_utils/src/ty.rs#L23\">is_copy</a> there is also <a href=\"https://github.com/rust-lang/rust-clippy/blob/master/clippy_utils/src/ty.rs#L124\">impls_trait</a> but that is just a more general <code>is_copy</code> basically.</p>",
        "id": 264302221,
        "sender_full_name": "DevinR528",
        "timestamp": 1639057339
    },
    {
        "content": "<p>I think that would have the same effect as the current PR, removing <code>as_deref_mut</code> support, since it's checking for <code>Option&lt;&amp;mut T&gt; -&gt; Option&lt;&amp;mut T&gt;</code>which aren't <code>Copy</code></p>\n<p>The specific thing I got stuck on was getting a <code>Ty</code> for what <code>as_deref_mut</code> is being called upon, e.g.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">opt_vec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">)];</span><span class=\"w\"></span>\n<span class=\"c1\">// called on `&amp;mut Option&lt;&amp;mut i32&gt;`</span>\n<span class=\"n\">opt_vec</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">as_deref_mut</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n\n<span class=\"c1\">// called on `Option&lt;&amp;mut i32&gt;`</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">as_deref_mut</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 264307142,
        "sender_full_name": "Alex Macleod",
        "timestamp": 1639059402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239861\">Alex Macleod</span> <a href=\"#narrow/stream/257328-clippy/topic/.60needless_option_as_deref.60.20with.20.60as_deref_mut.60/near/264307142\">said</a>:</p>\n<blockquote>\n<p>The specific thing I got stuck on was getting a <code>Ty</code> for what <code>as_deref_mut</code> is being called upon, e.g.</p>\n</blockquote>\n<p>Can't you just call <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TypeckResults.html#method.expr_ty\"><code>expr_ty[_opt](recv)</code></a>, where recv is the first argument in the arguments list of a <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/enum.ExprKind.html#variant.MethodCall\"><code>MethodCall</code></a>?</p>",
        "id": 264308609,
        "sender_full_name": "flip1995",
        "timestamp": 1639060060
    },
    {
        "content": "<p>Ah I totally overlooked that! makes sense that <code>self</code> is an argument</p>\n<p>Just tried it, but the vec one comes back as an <code>Adt</code> rather than a <code>Ref</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">opt_vec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">)];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// [clippy_lints/src/needless_option_as_deref.rs:51] typeck.expr_ty(sub_expr).kind() = Adt(</span>\n<span class=\"w\">    </span><span class=\"c1\">//     std::option::Option,</span>\n<span class=\"w\">    </span><span class=\"c1\">//     [</span>\n<span class=\"w\">    </span><span class=\"c1\">//         &amp;mut i32,</span>\n<span class=\"w\">    </span><span class=\"c1\">//     ],</span>\n<span class=\"w\">    </span><span class=\"c1\">// )</span>\n<span class=\"w\">    </span><span class=\"n\">opt_vec</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">as_deref_mut</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n\n<span class=\"w\">    </span><span class=\"c1\">// [clippy_lints/src/needless_option_as_deref.rs:51] typeck.expr_ty(sub_expr).kind() = Adt(</span>\n<span class=\"w\">    </span><span class=\"c1\">//     std::option::Option,</span>\n<span class=\"w\">    </span><span class=\"c1\">//     [</span>\n<span class=\"w\">    </span><span class=\"c1\">//         &amp;mut usize,</span>\n<span class=\"w\">    </span><span class=\"c1\">//     ],</span>\n<span class=\"w\">    </span><span class=\"c1\">// )</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">as_deref_mut</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 264312749,
        "sender_full_name": "Alex Macleod",
        "timestamp": 1639061902
    },
    {
        "content": "<p>Take a look at <code>while_let_on_iterator</code>. It has to check if the iterator was used after the loop. I think that's the same kind of thing you need to do here.</p>",
        "id": 264364953,
        "sender_full_name": "Jason Newcomb",
        "timestamp": 1639083371
    },
    {
        "content": "<p>Thanks, that'll be good for <a href=\"https://github.com/rust-lang/rust-clippy/issues/8047\">#8047</a>. Looks like <code>while_let_on_iterator</code> <a href=\"https://github.com/rust-lang/rust-clippy/issues/8113\">also has trouble</a> with moving out of things <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 264378168,
        "sender_full_name": "Alex Macleod",
        "timestamp": 1639089715
    }
]