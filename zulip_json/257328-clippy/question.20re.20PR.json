[
    {
        "content": "<p>I have a PR (<a href=\"https://github.com/rust-lang/rust/issues/78343\">#78343</a>) that makes <code>todo!</code>, <code>assert_eq!</code>, <code>unreachable!</code> etc. hygienic in the way they call <code>panic!</code>, but it's changing clippy output, causing bors tests to fail. Do you know why this is happening?</p>",
        "id": 215208162,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604172905
    },
    {
        "content": "<p>Here's the CI results: <a href=\"https://github.com/rust-lang-ci/rust/runs/1335251169\">https://github.com/rust-lang-ci/rust/runs/1335251169</a></p>",
        "id": 215208322,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173149
    },
    {
        "content": "<p>clippy hard-codes some paths IIRC</p>",
        "id": 215208338,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604173198
    },
    {
        "content": "<p>So it's picking up on things that it couldn't figure out before?</p>",
        "id": 215208394,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173233
    },
    {
        "content": "<p>Here's an example of a change:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+error: sub-expression diverges</span>\n<span class=\"gi\">+  --&gt; $DIR/wildcard_enum_match_arm.rs:68:17</span>\n<span class=\"gi\">+   |</span>\n<span class=\"gi\">+LL |     let x: u8 = unimplemented!();</span>\n<span class=\"gi\">+   |                 ^^^^^^^^^^^^^^^^</span>\n<span class=\"gi\">+   |</span>\n<span class=\"gi\">+   = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`</span>\n<span class=\"gi\">+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)</span>\n<span class=\"gi\">+</span>\n</code></pre></div>",
        "id": 215208401,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173249
    },
    {
        "content": "<p>seems reasonable to just --bless that, yeah</p>",
        "id": 215208415,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604173276
    },
    {
        "content": "<p>but you might want feedback from a clippy team member</p>",
        "id": 215208420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604173284
    },
    {
        "content": "<p>This one's weird though:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code> error: `panic` should not be present in production code\n   --&gt; $DIR/panicking_macros.rs:6:5\n    |\n LL |     panic!();\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::panic` implied by `-D warnings`\n\n error: `panic` should not be present in production code\n   --&gt; $DIR/panicking_macros.rs:7:5\n    |\n LL |     panic!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^^\n    |\nmacro-backtrace for more info)\n\n error: `panic` should not be present in production code\n   --&gt; $DIR/panicking_macros.rs:8:5\n    |\n LL |     panic!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nmacro-backtrace for more info)\n\n<span class=\"gd\">-error: `todo` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:14:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     todo!();</span>\n<span class=\"gd\">-   |     ^^^^^^^^</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-   = note: `-D clippy::todo` implied by `-D warnings`</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `todo` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:15:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     todo!(\"message\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `todo` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:16:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     todo!(\"{} {}\", \"panic with\", \"multiple arguments\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unimplemented` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:22:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unimplemented!();</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-   = note: `-D clippy::unimplemented` implied by `-D warnings`</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unimplemented` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:23:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unimplemented!(\"message\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unimplemented` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:24:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unimplemented!(\"{} {}\", \"panic with\", \"multiple arguments\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unreachable` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:30:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unreachable!();</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-   = note: `-D clippy::unreachable` implied by `-D warnings`</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unreachable` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:31:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unreachable!(\"message\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-   |</span>\nmacro-backtrace for more info)\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: `unreachable` should not be present in production code</span>\n<span class=\"gd\">-  --&gt; $DIR/panicking_macros.rs:32:5</span>\n<span class=\"gd\">-   |</span>\n<span class=\"gd\">-LL |     unreachable!(\"{} {}\", \"panic with\", \"multiple arguments\");</span>\n<span class=\"gd\">-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-error: aborting due to 12 previous errors</span>\n<span class=\"gi\">+error: aborting due to 3 previous errors</span>\n</code></pre></div>",
        "id": 215208478,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173337
    },
    {
        "content": "<p>It's somehow <em>losing</em> information</p>",
        "id": 215208483,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173354
    },
    {
        "content": "<p>I have no idea what could be causing it</p>",
        "id": 215208485,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173360
    },
    {
        "content": "<p>looks like they specifically checked for them to expand to <em>std</em>'s panic. but they expand to core's panic now.</p>",
        "id": 215208565,
        "sender_full_name": "Mara",
        "timestamp": 1604173522
    },
    {
        "content": "<p>see <code>clippy_lints/src/panic_unimplemented.rs</code> on line 99 and 100</p>",
        "id": 215208573,
        "sender_full_name": "Mara",
        "timestamp": 1604173546
    },
    {
        "content": "<p>Ah, okay. I'll check that out. Thanks!</p>",
        "id": 215208622,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173567
    },
    {
        "content": "<p>I think the policy is to edit the subtree/submodule/whatever it is, right?</p>",
        "id": 215208658,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173631
    },
    {
        "content": "<p>The diverging sub expression thing is a bug and shouldn't trigger</p>",
        "id": 215208714,
        "sender_full_name": "flip1995",
        "timestamp": 1604173688
    },
    {
        "content": "<p>that mentions <code>path::BEGIN_PANIC</code> and <code>path::BEGIN_PANIC_FMT</code>, which are defined as <code>std::panicking::begin_panic</code> and <code>std::panicking::begin_panic_fmt</code>. but now those macros end up using <code>core::panicking::panic</code> or <code>core::panicking::panic_fmt</code> (or <code>core::panicking::panic_str</code>, maybe).</p>",
        "id": 215208717,
        "sender_full_name": "Mara",
        "timestamp": 1604173696
    },
    {
        "content": "<blockquote>\n<p>I think the policy is to edit the subtree/submodule/whatever it is, right?</p>\n</blockquote>\n<p>Yes, please fix it directly in <code>src/tools/clippy</code> we'll sync it back later. No test outputs of clippy should change in your PR.</p>",
        "id": 215208802,
        "sender_full_name": "flip1995",
        "timestamp": 1604173823
    },
    {
        "content": "<p>You can ping me for review of the clippy changes.</p>",
        "id": 215208822,
        "sender_full_name": "flip1995",
        "timestamp": 1604173865
    },
    {
        "content": "<p>Okay, thanks! I'll ping you when I have a commit up</p>",
        "id": 215208901,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604173960
    },
    {
        "content": "<p>just searching for all occurences of BEGIN_PANIC in clippy should point out all the cases where it tries to detect panic, but now fails because it doesn't detect core's panic.</p>",
        "id": 215208918,
        "sender_full_name": "Mara",
        "timestamp": 1604173993
    },
    {
        "content": "<p>Just changing/updating the path in <code>clippy_lints/src/utils/paths.rs</code> should fix most of the problems already.</p>",
        "id": 215209190,
        "sender_full_name": "flip1995",
        "timestamp": 1604174378
    },
    {
        "content": "<p>then detecting <code>panic!()</code> won't work anymore. that still uses std::panicking::*</p>",
        "id": 215209251,
        "sender_full_name": "Mara",
        "timestamp": 1604174416
    },
    {
        "content": "<p>only assert_eq, assert_ne, unimplemented, todo, and unreachable are changed to use core::panic.</p>",
        "id": 215209307,
        "sender_full_name": "Mara",
        "timestamp": 1604174488
    },
    {
        "content": "<p>probably good to put this in a separate PR. because it seems to fix the already existing bug that clippy doesn't detect panics in no_std programs</p>",
        "id": 215209461,
        "sender_full_name": "Mara",
        "timestamp": 1604174665
    },
    {
        "content": "<p>oh, the addition of <code>std::panicking::panic_any</code> was merged just half an hour ago. it should probably detect that one as well.</p>",
        "id": 215209677,
        "sender_full_name": "Mara",
        "timestamp": 1604174972
    },
    {
        "content": "<p>so then there's now six functions that indicate a panic:</p>\n<ul>\n<li><code>std::panicking::begin_panic</code></li>\n<li><code>std::panicking::begin_panic_fmt</code></li>\n<li><code>std::panicking::panic_any</code></li>\n<li><code>core::panicking::panic</code></li>\n<li><code>core::panicking::panic_str</code></li>\n<li><code>core::panicking::panic_fmt</code></li>\n</ul>",
        "id": 215209744,
        "sender_full_name": "Mara",
        "timestamp": 1604175044
    },
    {
        "content": "<p>Don't forget these!</p>\n<ul>\n<li><code>std::rt::begin_panic</code></li>\n<li><code>std::rt::begin_panic_fmt</code></li>\n</ul>",
        "id": 215209790,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175123
    },
    {
        "content": "<p>So how should I fix this?</p>",
        "id": 215209827,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175131
    },
    {
        "content": "<p>those are just aliases for the first two, right?</p>",
        "id": 215209835,
        "sender_full_name": "Mara",
        "timestamp": 1604175136
    },
    {
        "content": "<p>Not sure <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 215209847,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175160
    },
    {
        "content": "<p>yeah, they are</p>",
        "id": 215209856,
        "sender_full_name": "Mara",
        "timestamp": 1604175176
    },
    {
        "content": "<p>This change is so much more involved than I thought</p>",
        "id": 215209861,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175183
    },
    {
        "content": "<p>check all places where it compares against BEGIN_PANIC or BEGIN_PANIC_FMT, and replace it with a check for all six functions. probably good to make one 'is_panic' function instead of repeating it</p>",
        "id": 215209879,
        "sender_full_name": "Mara",
        "timestamp": 1604175205
    },
    {
        "content": "<p>Although I guess I say that about a bunch of PRs I've made <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 215209882,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175210
    },
    {
        "content": "<p>thanks for working on this :)  but if you want, i can also fix this part. you've already put so much effort into this change :)</p>",
        "id": 215209941,
        "sender_full_name": "Mara",
        "timestamp": 1604175266
    },
    {
        "content": "<p>Well, I think I'll try to fix this part myself. But if there are more issues I might hand it over to you <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 215210008,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604175363
    },
    {
        "content": "<p>sure :)  ping me if i can help with anything.</p>",
        "id": 215210040,
        "sender_full_name": "Mara",
        "timestamp": 1604175384
    },
    {
        "content": "<p>This is actually trickier than I thought: There are things like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">match_function_call</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">begin_panic_call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">paths</span>::<span class=\"n\">BEGIN_PANIC</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which I'm not sure how to update.</p>",
        "id": 215224525,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604201137
    },
    {
        "content": "<p>Any ideas?</p>",
        "id": 215224527,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604201141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>  I guess this would work?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">match_function_call</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">begin_panic_call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">paths</span>::<span class=\"n\">BEGIN_PANIC</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">match_function_call</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">begin_panic_call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">paths</span>::<span class=\"n\">BEGIN_PANIC_FMT</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">match_function_call</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">begin_panic_call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">paths</span>::<span class=\"n\">PANIC_ANY</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">match_function_call</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">begin_panic_call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">paths</span>::<span class=\"n\">PANIC</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">etc</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 215238273,
        "sender_full_name": "Mara",
        "timestamp": 1604227431
    },
    {
        "content": "<p>I guess I'll create another utility function for what you posted.</p>",
        "id": 215255644,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604255155
    },
    {
        "content": "<p>i suppose with an <code>.is_ok()</code> it can also work as a <code>is_panic</code> function</p>",
        "id": 215256883,
        "sender_full_name": "Mara",
        "timestamp": 1604256940
    },
    {
        "content": "<p>Good idea, thanks :)</p>",
        "id": 215257909,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604258406
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> thanks for getting this fixed quickly :)</p>",
        "id": 216028240,
        "sender_full_name": "Mara",
        "timestamp": 1604873953
    }
]