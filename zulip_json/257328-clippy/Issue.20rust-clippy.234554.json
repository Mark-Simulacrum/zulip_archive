[
    {
        "content": "<p>I believe the issue <a href=\"https://github.com/rust-lang/rust-clippy/issues/4554\">https://github.com/rust-lang/rust-clippy/issues/4554</a> cannot be implemented. Please see my last comment. If there still a way to do it, I am happy to discuss it. :)</p>",
        "id": 234818193,
        "sender_full_name": "boxdot",
        "timestamp": 1618563421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"355574\">@boxdot</span> maybe you could change the lint only to warn if the body of the loop never modifies the collection the iterator comes from? that might be hard to detect though</p>",
        "id": 234847038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618577489
    },
    {
        "content": "<p>I think this is impossible to detect statically, since a modification of the collection can be completely implicit. E.g. by having an Rc to the collection, calling a closure which modifies it, etc...</p>",
        "id": 234847460,
        "sender_full_name": "boxdot",
        "timestamp": 1618577689
    },
    {
        "content": "<p>oh hmm good point, I hadn't thought about interior mutability</p>",
        "id": 234847525,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618577725
    },
    {
        "content": "<p>or global state</p>",
        "id": 234847533,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618577731
    },
    {
        "content": "<p>Technically, it is possible to cover a special case, where the block does not access any variable outside and does not have breaks.</p>",
        "id": 234848340,
        "sender_full_name": "boxdot",
        "timestamp": 1618578039
    },
    {
        "content": "<p>But even then, there is an example where people do <code>while let Some((_, ch)) = self.chars.clone().next() { break; }</code>. I am not sure why people would do this, though :)</p>",
        "id": 234848508,
        "sender_full_name": "boxdot",
        "timestamp": 1618578093
    }
]