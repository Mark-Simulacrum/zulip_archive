[
    {
        "content": "<p>I'd need some help with the rustup this week: <a href=\"https://github.com/rust-lang/rust-clippy/issues/7604\">rust-clippy#7604</a>. </p>\n<p>Going over the PR and reviewing the changes would already be a really helpful first step. </p>\n<p>I also still have a test failure for <code>manual_map</code>.  I assume it's a failed attempt at merging <a href=\"https://github.com/rust-lang/rust/issues/7531\">#7531</a> into the rustup... <span class=\"user-mention\" data-user-id=\"360405\">@Cameron Steffen</span> you reviewed this PR, so maybe you can help out here.</p>\n<p><span class=\"user-mention\" data-user-id=\"360405\">@Cameron Steffen</span> I'm also not 100% sure if I got your collapsible_match fix right. You used the <code>LocalUsedVisitor</code> in the fix in the Rust repo, but that doesn't exist anymore...</p>",
        "id": 250764570,
        "sender_full_name": "flip1995",
        "timestamp": 1629981485
    },
    {
        "content": "<p>collapsible_match looks good...</p>",
        "id": 250766630,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629982502
    },
    {
        "content": "<p>(shared instance of the visitor was not important)</p>",
        "id": 250766706,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629982535
    },
    {
        "content": "<p>hmm for manual_map it might be better to start over from the clippy repo version</p>",
        "id": 250771400,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629984475
    },
    {
        "content": "<p>too much refactoring in the let-expression PR</p>",
        "id": 250771457,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629984485
    },
    {
        "content": "<p>I can try fixing it</p>",
        "id": 250771595,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629984550
    },
    {
        "content": "<p>is the toolchain version wrong? ExprKind::Let patterns aren't compiling</p>",
        "id": 250772507,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629984884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360405\">Cameron Steffen</span> <a href=\"#narrow/stream/257328-clippy/topic/Help.20with.20Rustup/near/250772507\">said</a>:</p>\n<blockquote>\n<p>is the toolchain version wrong? ExprKind::Let patterns aren't compiling</p>\n</blockquote>\n<p>Ooops, forgot to push the rust-toolchain file update. I just pushed it (2021-08-21 is the toolchain you'll need)</p>",
        "id": 250776745,
        "sender_full_name": "flip1995",
        "timestamp": 1629986594
    },
    {
        "content": "<p>you mean 08-26? :)</p>",
        "id": 250783864,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629989179
    },
    {
        "content": "<p>found the issue. capture_local_usage needs to be updated with ExprKind::Let</p>",
        "id": 250785843,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629989865
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360405\">Cameron Steffen</span> <a href=\"#narrow/stream/257328-clippy/topic/Help.20with.20Rustup/near/250783864\">said</a>:</p>\n<blockquote>\n<p>you mean 08-26? :)</p>\n</blockquote>\n<p>Yes :D </p>\n<p>If you have a fix, just push it to my PR.</p>",
        "id": 250786053,
        "sender_full_name": "flip1995",
        "timestamp": 1629989950
    },
    {
        "content": "<p>pushed a commit</p>",
        "id": 250787757,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629990546
    },
    {
        "content": "<p>brought manual_match closer to what it was prevously, and reused <code>IfLetOrMatch</code></p>",
        "id": 250787841,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629990585
    },
    {
        "content": "<p>Great, thanks! Now there are only some dogfood errors. I can fix them myself <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 250789894,
        "sender_full_name": "flip1995",
        "timestamp": 1629991421
    },
    {
        "content": "<p>I might have that...</p>",
        "id": 250790504,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629991641
    },
    {
        "content": "<p>pushed :)</p>",
        "id": 250790568,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629991665
    },
    {
        "content": "<p>still a changelog error though</p>",
        "id": 250790594,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629991674
    },
    {
        "content": "<p>I'll let you finish it :)</p>",
        "id": 250792363,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1629992356
    },
    {
        "content": "<p>Ah thanks! Now the \"missing docs in private items\" of the \"higher\" module is left to fix. I don't think we should just disable this lint...</p>",
        "id": 250794412,
        "sender_full_name": "flip1995",
        "timestamp": 1629993121
    },
    {
        "content": "<p>So I figured out why the new higher functions are named hir and sometimes ast. The idea was - ast means \"original code contains <code>if let</code>\" and hir means \"the HIR has <code>if let</code>, but could be from expansion\". But I think this is wrong - higher should be for parsing pre-expansion things. So I propose renaming these functions to parse, like I already did with IfLetOrMatch::parse.</p>",
        "id": 250823944,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1630005079
    },
    {
        "content": "<p>I also removed <code>IfLet::ast</code> in <a href=\"https://github.com/rust-lang/rust/issues/88163\">#88163</a> cause it caused false positives</p>",
        "id": 250824214,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1630005203
    }
]