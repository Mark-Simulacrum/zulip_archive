[
    {
        "content": "<p>Hi folks. I've started working on <a href=\"https://getsynth.com\">https://getsynth.com</a> and naturally wanted to see how clippy fares with our codebase. Turns out it overflows its stack. After trying too long getting a debugger to run on clippy, I decided to at least bisect the error and found that this commit introduces it: <a href=\"https://github.com/openquery-io/synth/commit/955714b8c7d5038a8765f4f96b528a73e0dbf204\">https://github.com/openquery-io/synth/commit/955714b8c7d5038a8765f4f96b528a73e0dbf204</a> â€“ Now I'd really like to reduce the scope of our search further and would greatly appreciate some assistance.</p>",
        "id": 237468197,
        "sender_full_name": "llogiq",
        "timestamp": 1620208161
    },
    {
        "content": "<p>I would guess that it could have something to do with statement comparison using <code>SpanlessEq</code> as that is the only recursive functionality in Clippy that I know of. But looking at the linked commit also makes me doubt that. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 237470527,
        "sender_full_name": "xFrednet",
        "timestamp": 1620209327
    },
    {
        "content": "<p>I think I could try to bisect the commit by cherry-picking individual changes.</p>",
        "id": 237474087,
        "sender_full_name": "llogiq",
        "timestamp": 1620211448
    },
    {
        "content": "<p>Did you try this with different versions of Clippy? If not, which version are you currently using?</p>",
        "id": 237476426,
        "sender_full_name": "flip1995",
        "timestamp": 1620212745
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#177 0x000055555567dab8 in &lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold ()\n#178 0x00005555555cbc14 in clippy_lints::matches::redundant_pattern_match::type_needs_ordered_drop ()\n#179 0x000055555567dab8 in &lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold ()\n#180 0x00005555555cbc14 in clippy_lints::matches::redundant_pattern_match::type_needs_ordered_drop ()\n</code></pre></div>",
        "id": 237480283,
        "sender_full_name": "tm",
        "timestamp": 1620214802
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[derive(Default)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">A</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">A</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">b</span>: <span class=\"nc\">T</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Ok</span>::<span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">A</span>::<span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span>::<span class=\"n\">default</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 237482434,
        "sender_full_name": "tm",
        "timestamp": 1620215869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> I use the clippy version as of 1.53.0-nightly (42816d61e 2021-04-24). @tm this might be it.</p>",
        "id": 237487155,
        "sender_full_name": "llogiq",
        "timestamp": 1620218108
    },
    {
        "content": "<p>Ok, I guess this is this PR then: <a href=\"https://github.com/rust-lang/rust-clippy/pull/6568\">https://github.com/rust-lang/rust-clippy/pull/6568</a></p>\n<p>I'll verify that this PR is the cause and will revert it and sync it back to Rust, so that this doesn't get into beta. Thanks <span class=\"user-mention\" data-user-id=\"352985\">@tm</span> !</p>",
        "id": 237489592,
        "sender_full_name": "flip1995",
        "timestamp": 1620219231
    },
    {
        "content": "<p>(Just noticed, that beta is already branched. So I will do a backport-revert of this PR after the release of Clippy 0.1.52 tomorrow.)</p>",
        "id": 237489794,
        "sender_full_name": "flip1995",
        "timestamp": 1620219324
    },
    {
        "content": "<p>tracked here: <a href=\"https://github.com/rust-lang/rust-clippy/issues/7169\">rust-clippy#7169</a></p>",
        "id": 237491540,
        "sender_full_name": "flip1995",
        "timestamp": 1620220083
    },
    {
        "content": "<p>ooh this looks like a fun problem!</p>",
        "id": 237494423,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1620221221
    },
    {
        "content": "<p>Revert PR open: <a href=\"https://github.com/rust-lang/rust-clippy/issues/7170\">rust-clippy#7170</a> (We want this in Clippy, but not having a stack overflow in beta tomorrow is more important right now. So if someone wants to find and fix this properly, please do so!)</p>",
        "id": 237496753,
        "sender_full_name": "flip1995",
        "timestamp": 1620222164
    },
    {
        "content": "<p>Seems like it should be straightfoward to fix the recursion in <code>type_needs_ordered_drop</code>...</p>",
        "id": 237497712,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1620222583
    },
    {
        "content": "<p>commented on PR</p>",
        "id": 237499072,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1620223101
    },
    {
        "content": "<p>needs fmt (my fix)</p>",
        "id": 237499152,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1620223145
    },
    {
        "content": "<p>Awesome, that fixed it! Updating the PR now.</p>",
        "id": 237501512,
        "sender_full_name": "flip1995",
        "timestamp": 1620223990
    }
]