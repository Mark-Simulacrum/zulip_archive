[
    {
        "content": "<p>related to <a href=\"https://github.com/rust-lang/rust-clippy/issues/6429#issuecomment-741153345\">https://github.com/rust-lang/rust-clippy/issues/6429#issuecomment-741153345</a></p>\n<p>So, I might try adding a kind of \"mini crater\" to <code>clippy cargo dev</code> as a xmas project.</p>\n<p>The idea is to:<br>\nDownload a fixed set of crates with fixed versions<br>\n   We might need <code>reqwest</code> for that. Since this pulls in quite an amount of dependencies, I consider putting the minicrater behind a feature flag so that <code>cargo dev fmt</code> does not initially compile for 5 minutes just for formatting.<br>\n   The crate versions need to be fixed to avoid new diagnostics from showing up unexpectedly. We can bump them manually when upstream code has changed a lot or we want to lint for new rustc syntax that does not exist in older crate versions.<br>\n    We can probably use clippy preexisting <code>target</code> dir for storing the crates.</p>\n<p>Run clippy on the crates<br>\n    This will use the locally built clippy inside the repo, might need some hackery to find sysroot etc (same as the current compiletest impl)<br>\n    Do we need a switch for <code>--release</code> and <code>--debug </code>clippy build?</p>\n<p>Grab the lint output of clippy<br>\n    We can use <code>cargo clippy --message-format short -- &lt;enable all the lints&gt;</code><br>\n    Can we dump the result into a a file and save it in-repo?<br>\n    CI could run the minicrater and throw an error if the logs are not up to date<br>\n        (to make sure contributors of new lints have looked at changes)</p>\n<p>Finally, checking where a lint triggered in our set of crates would just be a matter of running <code>git diff</code> and checking the logs</p>",
        "id": 219986357,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608042608
    },
    {
        "content": "<p>FYI if you're just making blocking GET requests I highly recommend ureq, it's reliable, easy to use, and has very few dependencies. It's missing some features from reqwest but it sounds like you don't need a ton of features</p>",
        "id": 219987327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608042981
    },
    {
        "content": "<p>&lt;/soapbox&gt;</p>",
        "id": 219987343,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608042986
    },
    {
        "content": "<p>thanks, will have a look. :)<br>\nBack then when I googled something like \"rust download library \" request was probably the first lib that showed up <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 219987629,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608043105
    },
    {
        "content": "<p>could also always check the local $CARGO_HOME first and copy crate sources from there, but that may be a bit over-engineered</p>",
        "id": 219987721,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608043153
    },
    {
        "content": "<p>I could also go all-out and use <code>rustwide</code> for proper sandboxing (I already have a toy project which uses rustwide and runs clippy on all the local crates in the $CARGO_HOME and checks for panics) but that would add even more deps.</p>\n<p>It may also download a few gigs of container images at first startup which is a bit slow</p>",
        "id": 220094288,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608111430
    },
    {
        "content": "<p>(rustwide is what crater uses for sandboxing afaik)</p>",
        "id": 220094320,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608111470
    },
    {
        "content": "<p>but since we have a controlled set of crates, that may not be needed</p>",
        "id": 220094411,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608111518
    },
    {
        "content": "<p>Wasn't there also discussion on having this feature integrated in crater?</p>",
        "id": 220094988,
        "sender_full_name": "Phil H",
        "timestamp": 1608111949
    },
    {
        "content": "<p>Yeah, there was something about running clippy on crater. :)<br>\nBut I think running clippy on the entire rust ecosystem for finding FPs is a bit overkill (also it takes several days)</p>",
        "id": 220095620,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608112328
    },
    {
        "content": "<p>I agree <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>  But it looks like crater has a way to limit the number of crates it runs on? <a href=\"https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#creating-experiments\">https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md#creating-experiments</a></p>",
        "id": 220095781,
        "sender_full_name": "Phil H",
        "timestamp": 1608112443
    },
    {
        "content": "<p>(<code>crates: the selection of crates to use (default: full)</code>)</p>",
        "id": 220095930,
        "sender_full_name": "Phil H",
        "timestamp": 1608112551
    },
    {
        "content": "<p>hmm. afaik the common usecase is \"recheck all crates that failed to build recently\" but we might also be able to specify some crates manually...</p>",
        "id": 220096245,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608112719
    },
    {
        "content": "<p>We already have a small selection in the CI, but IMO this would be useful with a wider range of crates (not sure about how many though <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>), and I think it would be unfeasible to run that in our CI, this is why crater was suggested. The infrastructure is already there, so why not take advantage of that?</p>\n<p>We would need to automate checking the results in some way though, otherwise analyzing them could take too long xD</p>",
        "id": 220096260,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1608112731
    },
    {
        "content": "<blockquote>\n<p>We already have a small selection in the CI</p>\n</blockquote>\n<p>This is only about ICEs I think? (we don't care about new warnings there, do we?)</p>",
        "id": 220096425,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608112831
    },
    {
        "content": "<blockquote>\n<p>This is only about ICEs I think?</p>\n</blockquote>\n<p>yep</p>",
        "id": 220096489,
        "sender_full_name": "Phil H",
        "timestamp": 1608112870
    },
    {
        "content": "<p>Indeed, forgot about that</p>",
        "id": 220096506,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1608112882
    },
    {
        "content": "<p>Also I never run crater locally.<br>\nIMO it would be nice if contributors could check for lint-results even before submitting a pr</p>",
        "id": 220096548,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608112913
    },
    {
        "content": "<p>I agree that a short feedback loop would also be nice for this, instead of having to wait for someone to start a crater run and wait for the results</p>",
        "id": 220096622,
        "sender_full_name": "Phil H",
        "timestamp": 1608112947
    },
    {
        "content": "<p>Yep the crater run would be if we have a longer stabilization process. I'm just hesitating about it being really useful having to do a trade-off between number of crates and expected resources, but we can try it, of course <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220096742,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1608113031
    },
    {
        "content": "<p>does crater look at warnings at all...?</p>",
        "id": 220096744,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608113034
    },
    {
        "content": "<p>I don't know, it would probably need tweaking for this use case</p>",
        "id": 220096835,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1608113074
    },
    {
        "content": "<p>I don't think it does :/<br>\n<a href=\"https://crater-reports.s3.amazonaws.com/pr-79135/index.html\">https://crater-reports.s3.amazonaws.com/pr-79135/index.html</a><br>\nseems to only check for exit status mostly</p>",
        "id": 220096918,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608113127
    },
    {
        "content": "<p>we could start with the crates that rustc checks as part of <code>cargotest</code> <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/cargotest/main.rs#L14\">https://github.com/rust-lang/rust/blob/master/src/tools/cargotest/main.rs#L14</a><br>\nmaybe also add cargo and a few proc macro crates (serde?),  rayon, and perhaps the top 10 downloads from crates io</p>",
        "id": 220097260,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608113338
    },
    {
        "content": "<p>Maybe also some FFI heavy crate (although I wouldn't know which)</p>",
        "id": 220098921,
        "sender_full_name": "Phil H",
        "timestamp": 1608114379
    },
    {
        "content": "<p>apart from that the selection seems good to me</p>",
        "id": 220098936,
        "sender_full_name": "Phil H",
        "timestamp": 1608114394
    },
    {
        "content": "<blockquote>\n<p>It may also download a few gigs of container images at first startup which is a bit slow</p>\n</blockquote>\n<p>you can set a custom docker image so it doesn't get all 7 GB of crates-build-env</p>",
        "id": 220118234,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608127264
    },
    {
        "content": "<p>Having this would be great! Because we can't run this in our CI, I would suggest,  that we run this with every Rust / Clippy release _$somewhere_.  Then we can implement a process for new lints: New lints get added to nightly and if they pass the mini-crater run they get pushed to beta in the next release. </p>\n<p>But I'm getting ahead of  myself. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220155378,
        "sender_full_name": "flip1995",
        "timestamp": 1608144120
    },
    {
        "content": "<p>do you mean a full clippy crater run or clippy on a set of crates?</p>",
        "id": 220162566,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608147569
    },
    {
        "content": "<p>Oh I meant using the tool you want to write. I don't think we can run it on every CI run. But we can use it to determine which lint should be shipped to stable (for example).</p>\n<p>I think the set of <code>cargotest</code> crates and some selected other crates, as you suggested, makes sense.</p>",
        "id": 220189440,
        "sender_full_name": "flip1995",
        "timestamp": 1608162168
    },
    {
        "content": "<p>think I got a MVP now :)</p>",
        "id": 220425996,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608324335
    },
    {
        "content": "<p>the lint warnings that I get do not look very diverse though  :/</p>",
        "id": 220426656,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608324731
    },
    {
        "content": "<p>it's not that bad, but there is still quite some room for improvement I</p>",
        "id": 220426716,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608324777
    },
    {
        "content": "<p>I've also enabled <code>pedantic</code> and <code>cargo</code> lint groups</p>",
        "id": 220426787,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608324823
    },
    {
        "content": "<p>some file inside <code>tokei</code> triggers  the identical-match arm lint  a few thousand times, urgh...</p>",
        "id": 220427627,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608325288
    },
    {
        "content": "<p>I'm gonna ignore that crate for now</p>",
        "id": 220427645,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608325300
    },
    {
        "content": "<p>Takes around 5 minutes to check all the crates currently, I think that doesn't hurt too much</p>",
        "id": 220430219,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608326933
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/pull/6469\">https://github.com/rust-lang/rust-clippy/pull/6469</a></p>",
        "id": 220431123,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608327544
    },
    {
        "content": "<p>Hmm, it would be really helpful if clippy showed the lint name in the one-line lint message :/</p>",
        "id": 220441226,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1608335214
    },
    {
        "content": "<p>I think it'll be easy to get if you used the json output format.</p>",
        "id": 220453533,
        "sender_full_name": "Michael Wright",
        "timestamp": 1608352824
    }
]