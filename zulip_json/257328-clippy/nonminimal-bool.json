[
    {
        "content": "<p>Hello! I work on fixing <a href=\"https://github.com/rust-lang/rust-clippy/issues/5265\">https://github.com/rust-lang/rust-clippy/issues/5265</a>.<br>\nI cannot reproduce it on playground (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8158d113aecdf03edda864b02606f1d7\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8158d113aecdf03edda864b02606f1d7</a>), even with my 'own' macro.<br>\nIs that somehow related to <a href=\"https://github.com/rust-lang/rust-clippy/commit/6afa4ef60f973218c901d0f802d586fe6c43017d#diff-61a0d4f1ae2f16a8ecac51908b8d980b7c2eda0d286dd2cc5a0968d008dac795\">https://github.com/rust-lang/rust-clippy/commit/6afa4ef60f973218c901d0f802d586fe6c43017d#diff-61a0d4f1ae2f16a8ecac51908b8d980b7c2eda0d286dd2cc5a0968d008dac795</a>, where side effects are now denied (<a href=\"https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/hir_utils.rs#L353\">https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/hir_utils.rs#L353</a>), so it could have fixed it? (I don't know what was the body of the removed <code>ignore_fn()</code> method though)</p>",
        "id": 214739632,
        "sender_full_name": "ThibsG",
        "timestamp": 1603821769
    },
    {
        "content": "<p>I think it does not lint because it's bailing out if code is from a macro, <a href=\"https://github.com/rust-lang/rust-clippy/blob/de83f09be8694b241bf3d924c0d1e70ca71c38da/clippy_lints/src/booleans.rs#L449-L451\">here</a>.</p>\n<p>I'm not sure why it was linting back when the issue was opened since that check seems to be there since the beginning...</p>",
        "id": 214785802,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1603847838
    },
    {
        "content": "<p>Yeah I saw that but as you said, it is here since beginning.</p>",
        "id": 214806069,
        "sender_full_name": "ThibsG",
        "timestamp": 1603873241
    },
    {
        "content": "<p>I think at some point there were changes to the <code>in_macro</code> function, but who knows.</p>\n<p>In any case, I think it's safe to close the issue at this point as we can't reproduce it. What do you say?</p>",
        "id": 214806596,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1603873639
    },
    {
        "content": "<p>If I comment this <code>in_macro</code> condition:</p>\n<ul>\n<li>it still doesn't lint for <code>assert_eq</code></li>\n<li>it does lint for <code>my_assert_eq</code> define in the test file</li>\n<li>it does lint for <code>my_assert_eq</code> but without location with <code>my_assert_eq</code> define in <code>auxiliary/macro_rules.rs</code></li>\n</ul>",
        "id": 214806633,
        "sender_full_name": "ThibsG",
        "timestamp": 1603873677
    },
    {
        "content": "<p>I agree, we can close this</p>",
        "id": 214806694,
        "sender_full_name": "ThibsG",
        "timestamp": 1603873698
    },
    {
        "content": "<p>plus, when linting with location, the location is fine</p>",
        "id": 214806764,
        "sender_full_name": "ThibsG",
        "timestamp": 1603873765
    }
]