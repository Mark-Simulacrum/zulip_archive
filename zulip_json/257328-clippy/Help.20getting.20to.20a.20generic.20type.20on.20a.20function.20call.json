[
    {
        "content": "<p>Hi! I'm trying to work on <a href=\"https://github.com/rust-lang/rust-clippy/issues/6381\">https://github.com/rust-lang/rust-clippy/issues/6381</a></p>\n<p>I have an Expr for a function call to size_of::&lt;T&gt;(), and I want to get the generic type (To TyS::same_type with some other type)</p>\n<p>I've been having some trouble finding how to do it, I saw Adt is used for generic structs, and that the MethodCall Expr kind has generics in the PathSegment, but nothing for Call</p>",
        "id": 218044934,
        "sender_full_name": "Nick12",
        "timestamp": 1606433110
    },
    {
        "content": "<p>I found <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/hir/struct.PathSegment.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/hir/struct.PathSegment.html</a> but I think that only works if f::&lt;T&gt; is used (And not if it's inferred)</p>",
        "id": 218049556,
        "sender_full_name": "Nick12",
        "timestamp": 1606439953
    },
    {
        "content": "<p>Don't try to determine the type yourself. Use the TypeckResults instead. It should have a method to do that. Maybe  <code>node_substs</code> is the method you want. e.g <code>let substs = cx.typeck_results().node_substs(hir_id);</code>. Search the Clippy source for examples of where it's used.</p>",
        "id": 218055564,
        "sender_full_name": "Michael Wright",
        "timestamp": 1606450419
    },
    {
        "content": "<p>Thank you! I'll do that. that sounds like exactly what I needed</p>\n<p>I was using the TypeckResults to evaluate the other type and didn't realize I also needed it for the substitutions</p>",
        "id": 218074336,
        "sender_full_name": "Nick12",
        "timestamp": 1606471532
    }
]