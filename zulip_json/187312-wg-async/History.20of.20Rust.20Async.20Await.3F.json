[
    {
        "content": "<p>Hello all,</p>\n<p>Along with getting to know the async codebase, I'm also creating a talk for ChefConf on how technical communities work together to solve problems no one could solve on their own. I'd like to highlight how Async/Awaits came to be. Can anyone point me to key RFCs or other links for this?</p>",
        "id": 197011214,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589056090
    },
    {
        "content": "<p>The async/await RFC is here: <a href=\"https://github.com/rust-lang/rfcs/pull/2394\" title=\"https://github.com/rust-lang/rfcs/pull/2394\">https://github.com/rust-lang/rfcs/pull/2394</a></p>",
        "id": 197014350,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1589059973
    },
    {
        "content": "<p>there's also the RFC for the Future trait and its other bits: <a href=\"https://github.com/rust-lang/rfcs/pull/2418\" title=\"https://github.com/rust-lang/rfcs/pull/2418\">https://github.com/rust-lang/rfcs/pull/2418</a></p>",
        "id": 197014389,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1589060004
    },
    {
        "content": "<p>IIRC erickt was working on something like async/await as a compiler plugin a couple of years ago before realizing it needed to be integrated into the compiler more tightly</p>",
        "id": 197014503,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1589060075
    },
    {
        "content": "<p>yeah, this thing: <a href=\"https://github.com/erickt/stateful\" title=\"https://github.com/erickt/stateful\">https://github.com/erickt/stateful</a></p>",
        "id": 197014532,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1589060149
    },
    {
        "content": "<p>and there are a set of articles on aturon's blog about earlier futures: <a href=\"http://aturon.github.io/tech/2016/08/11/futures/\" title=\"http://aturon.github.io/tech/2016/08/11/futures/\">http://aturon.github.io/tech/2016/08/11/futures/</a></p>",
        "id": 197014851,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1589060370
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 197075208,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589140678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"225192\">@Nell Shamrell-Harrington</span> I would highly recommend boats blog posts. Some links:</p>\n<ul>\n<li><a href=\"https://boats.gitlab.io/blog/post/2018-01-25-async-i-self-referential-structs/\">Async/Await I: Self-Referential Structs</a></li>\n<li><a href=\"https://boats.gitlab.io/blog/post/2018-01-30-async-ii-narrowing-the-scope/\">Async/Await II: Narrowing the scope of the problem</a></li>\n<li>...</li>\n<li><a href=\"https://boats.gitlab.io/blog/post/2018-02-08-async-v-getting-back-to-the-futures/\">Async/Await V: Getting back to the futures</a></li>\n<li>..</li>\n</ul>\n<p>etc</p>",
        "id": 197306524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303042
    },
    {
        "content": "<p>Thank you! I have been enjoying your Async interview series as well, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> :)</p>",
        "id": 197306562,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589303067
    },
    {
        "content": "<p>too many to cite really, browse the TOC</p>",
        "id": 197306569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303070
    }
]