[
    {
        "content": "<p>hi -- writing the release notes for 1.59, and I want to check that <a href=\"https://github.com/rust-lang/rust/pull/90737\">https://github.com/rust-lang/rust/pull/90737</a> did not affect <em>stable</em> surface area, because IntoFuture is only implemented for <code>F: Future</code> currently in std, and is unstable itself</p>\n<p>(As an aside, it seems like it would be easy to miss that adding impls there is now stable-affecting, even if the trait itself is not stable; maybe some kind of comment is in order, at least).</p>",
        "id": 270610067,
        "sender_full_name": "simulacrum",
        "timestamp": 1643918939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that's right</p>",
        "id": 270610725,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919245
    },
    {
        "content": "<p>we want to propose stabilizing it for 1.60.0 though</p>",
        "id": 270610746,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919256
    },
    {
        "content": "<p>but to my knowledge it's not used publicly anywhere at the moment</p>",
        "id": 270610767,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919268
    },
    {
        "content": "<p>and only used inside the desugaring</p>",
        "id": 270610779,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919273
    },
    {
        "content": "<p>you mean no functions taking a impl IntoFuture? Sure, yeah -- I think the desugaring is pretty public though :)</p>",
        "id": 270610849,
        "sender_full_name": "simulacrum",
        "timestamp": 1643919312
    },
    {
        "content": "<p>hah yeah that's what I meant. Also no manual implementations, there is only the blanket impl</p>",
        "id": 270610908,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919343
    },
    {
        "content": "<p>It might be a good idea regardless to update the documentation on that trait to note the effect on the desugaring -- I'd be happy to r+ that</p>",
        "id": 270610936,
        "sender_full_name": "simulacrum",
        "timestamp": 1643919352
    },
    {
        "content": "<p>oh yeah good point; we possibly want to do that together with the stabilization as well</p>",
        "id": 270611027,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919383
    },
    {
        "content": "<p>since there's nothing blocking it as far as we know at the moment</p>",
        "id": 270611048,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919395
    },
    {
        "content": "<p>cc/ <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span>  so we don't forget</p>",
        "id": 270611148,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1643919457
    }
]