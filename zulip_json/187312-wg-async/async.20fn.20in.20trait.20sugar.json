[
    {
        "content": "<p>Quick question about the plans for async fn in traits: Is <code>async fn foo(...) -&gt; T</code> in a trait purely sugar for <code>fn foo(...) -&gt; Future&lt;Output = T&gt;</code>? In other words, can I do the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">Bar</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and vice-versa?</p>",
        "id": 269653174,
        "sender_full_name": "eholk",
        "timestamp": 1643324201
    },
    {
        "content": "<p>I think the RFC said to disallow manual desugaring</p>",
        "id": 269656119,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1643325705
    },
    {
        "content": "<p>For now at least</p>",
        "id": 269656129,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1643325711
    },
    {
        "content": "<p>See <a href=\"https://rust-lang.github.io/rfcs/3185-static-async-fn-in-trait.html#allowing-sugared-and-desugared-forms\">this section</a> for more; tldr is that we want to support it but need RPITIT first so we can define the feature in terms of that</p>",
        "id": 269796751,
        "sender_full_name": "tmandry",
        "timestamp": 1643401191
    },
    {
        "content": "<p>btw, I'm slowly working in all this but there are some things to do, hope to be able to have the correct RPIT refactor soon that will enable RPITIT that then will enable doing async fns in traits :)</p>",
        "id": 270069644,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1643649872
    },
    {
        "content": "<p>Hello everyone, what is the current progress on <code>#![feature(async_fn_in_traits)]</code>? Just asking because I am interested in joining the work towards implementation and stabilization.</p>",
        "id": 270804745,
        "sender_full_name": "HTGAzureX1212.",
        "timestamp": 1644036577
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"347254\">@HTGAzureX1212.</span> -- currently, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has been working on refactoring how we implement impl Trait, and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> has been working on refactoring how we implement \"impl trait in traits\" specifically</p>",
        "id": 271008702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1644253239
    },
    {
        "content": "<p>those two core refactors probably need to land before we do much else</p>",
        "id": 271008719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1644253247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Thank you for your thorough introduction over the work that has been going on! I will look through these, thanks.</p>",
        "id": 271080418,
        "sender_full_name": "HTGAzureX1212.",
        "timestamp": 1644295124
    }
]