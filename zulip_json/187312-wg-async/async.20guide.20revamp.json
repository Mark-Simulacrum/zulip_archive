[
    {
        "content": "<p>Hi all. As I've mentioned in the regular meetings, I've been working on an async guide originally purposed for Fuchsia developers, but can easily be repurposed to be general.  I've broken out the sections that are reviewable, so you can get a feel for the style, level of detail and general approach. Here it is, and comments should be enabled: <a href=\"https://hackmd.io/@betamos/rust-async-guide\">https://hackmd.io/@betamos/rust-async-guide</a></p>",
        "id": 207203412,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1597702776
    },
    {
        "content": "<p>Update: So far the support has been great, and I've gotten some feedback from Tyler and Lee. I'm trying to get feedback from 2 async beginners, but haven't got any responses yet.</p>",
        "id": 207673299,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1598037416
    },
    {
        "content": "<p>One issue that came up is how to deal with the multitude of runtimes. We have a few options:</p>\n<ol>\n<li>Talk about runtimes only in abstract form. This way, we can't have any code that actually runs (without building our own executor, which is a no-go for this type of guide).</li>\n<li>Use a minimal (reactor-free) runtime from futures::executor. This allows working examples, including spawning and synchronization, but no IO or timers. This is quite good because it demonstrates the fundamentals of async flow, but examples will be quite dull.</li>\n<li>Use a \"real\" runtime with a reactor (currently, <span class=\"user-mention\" data-user-id=\"325807\">@Lee Bernick</span>  is looking at smol) in order to demonstrate a more fun TcpConn backed HTTP server.</li>\n</ol>",
        "id": 207674343,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1598038025
    },
    {
        "content": "<p>Here's the guide <span class=\"user-mention\" data-user-id=\"137147\">@Didrik Nordstrom</span> mentioned: <a href=\"https://hackmd.io/@lbernick/SkgO7bCMw\">https://hackmd.io/@lbernick/SkgO7bCMw</a><br>\nAny feedback is welcome! Feel free to message me directly or comment here/on hackmd. I may also include a small combinators example if that's helpful.</p>",
        "id": 207913888,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1598316064
    },
    {
        "content": "<p>Is it possible that you could do (3) and only have to change a very small amount of code to show examples of getting it to work with multiple runtimes?</p>",
        "id": 207914131,
        "sender_full_name": "tmandry",
        "timestamp": 1598316307
    },
    {
        "content": "<p>I like this idea, but it may be better handled by each runtime's documentation. We want to write a section on choosing an executor, so maybe that could include info about the similarities and differences between them.</p>",
        "id": 207917971,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1598320466
    },
    {
        "content": "<p>Made a PR to the async book with the example I wrote: <a href=\"https://github.com/rust-lang/async-book/pull/102\">https://github.com/rust-lang/async-book/pull/102</a>. would love any feedback.</p>",
        "id": 208512501,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1598835887
    },
    {
        "content": "<p>Couldn't figure out how to add this to the project board, but I made another async book PR with info on the different executors/crates available: <a href=\"https://github.com/rust-lang/async-book/pull/104\">https://github.com/rust-lang/async-book/pull/104</a></p>",
        "id": 211429542,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1601233513
    },
    {
        "content": "<p>Also, it looks like this section of the book is stale, as the linked bug is closed: <a href=\"https://rust-lang.github.io/async-book/07_workarounds/02_return_type.html\">https://rust-lang.github.io/async-book/07_workarounds/02_return_type.html</a>. Happy to make a PR removing it, but want to double check that it's no longer an issue. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , do you know?</p>",
        "id": 211429688,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1601233724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325807\">@Lee Bernick</span> I think that text can be removed</p>",
        "id": 211499891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601303472
    },
    {
        "content": "<p>thanks! done in <a href=\"https://github.com/rust-lang/async-book/pull/107\">https://github.com/rust-lang/async-book/pull/107</a></p>",
        "id": 211616283,
        "sender_full_name": "Lee Bernick",
        "timestamp": 1601384183
    },
    {
        "content": "<p>Question about terminology: Is there only one async Rust ecosystem consisting of multiple runtimes like async-std and tokio, OR are each of these a separate ecosystem? I'd like a term that represents the \"runtime + utilities from that runtime\" without having to elaborate every time.</p>",
        "id": 219283936,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607474243
    },
    {
        "content": "<p>I'm assuming that \"tokio etc == runtime\" is the most familiar notion, but want to check in on what we all think.</p>",
        "id": 219284023,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607474293
    },
    {
        "content": "<p>this is a really hard question to answer depending on the level of detail/correctness that you want</p>",
        "id": 219284433,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1607474611
    },
    {
        "content": "<p>preferably, there would be one ecosystem with agreed interfaces, practically, there isn't</p>",
        "id": 219284529,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1607474657
    },
    {
        "content": "<p>So the context is that I want to describe the compatibility story on a high level, and that you have to choose a \"runtime\".</p>",
        "id": 219285922,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607475732
    },
    {
        "content": "<p>But this runtime is not only reactor + executor. There are also specific utilities that are meant for that runtime.</p>",
        "id": 219285952,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607475765
    },
    {
        "content": "<p>It's ok to sacrifice correctness in the section I'm writing. We go more into detail in a specific ecosystem section.</p>",
        "id": 219286070,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607475850
    },
    {
        "content": "<p>For now I just want to be consistent with terminology, following the principle of least surprise.</p>",
        "id": 219286095,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1607475875
    },
    {
        "content": "<p>I think \"runtime\" is okay then. It's a weak term anyways, in the sense where the JVM is also a \"runtime\" that comes with a lot of facilites.</p>",
        "id": 219321893,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1607511765
    },
    {
        "content": "<p>If it's okay for you that the the common glue is the stdlib Future/Tasks interfaces and the upcoming Stream trait, we are indeed talking about an ecosystems that at least aims to be _one_ ecosystem, just might not be fully there yet. I'm not sure how much you want to document the _now_.</p>",
        "id": 219322054,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1607511851
    },
    {
        "content": "<p>Hi, reviving this thread for a bit. Looking for one more reviewer with approval permission for <a href=\"https://github.com/rust-lang/async-book/pull/124\">https://github.com/rust-lang/async-book/pull/124</a>.</p>",
        "id": 224097973,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1611692867
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> )</p>",
        "id": 224107063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611696922
    }
]