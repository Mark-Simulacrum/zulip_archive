[
    {
        "content": "<p>Has someone yet proposed or gotten the idea to sugar the syntax of;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stream</span><span class=\"p\">.</span><span class=\"n\">next</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// do something with item</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">stream</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// do something with item</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>or the likes?</p>\n<p>I'm taking inspiration <a href=\"https://www.python.org/dev/peps/pep-0525/#id12\">from python</a>, which uses these semantics;</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">async_generator</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span> <span class=\"c1\"># do something with item</span>\n</code></pre></div>",
        "id": 246015593,
        "sender_full_name": "Jonathan de Jong",
        "timestamp": 1626294520
    },
    {
        "content": "<p>Oh nevermind, i just saw <a href=\"https://rust-lang.github.io/rfcs/2394-async_await.html#generators-and-streams\">this rfc</a></p>",
        "id": 246016096,
        "sender_full_name": "Jonathan de Jong",
        "timestamp": 1626294764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300259\">Jonathan de Jong</span> has marked this topic as resolved.</p>",
        "id": 246016102,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626294766
    },
    {
        "content": "<p>Woah, I didn't know \"resolved\" topics were a thing</p>",
        "id": 246247942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1626453726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300259\">Jonathan de Jong</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/.E2.9C.94.20.22async.20for.20_.20in.20Stream.22.3F/near/246016096\">said</a>:</p>\n<blockquote>\n<p>Oh nevermind, i just saw <a href=\"https://rust-lang.github.io/rfcs/2394-async_await.html#generators-and-streams\">this rfc</a></p>\n</blockquote>\n<p>That section was referring to generators, something a bit different.</p>",
        "id": 246259208,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626458939
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">io</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">AsyncRead</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kr\">yield</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">lines</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kr\">yield</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">parse</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246259216,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626458945
    },
    {
        "content": "<p>I think the syntax you want is mentioned in <a href=\"https://rust-lang.github.io/rfcs/2394-async_await.html#for-await-and-processing-streams\">the section above</a></p>",
        "id": 246259255,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626458971
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">stream</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// do something with item</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246259285,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626458992
    },
    {
        "content": "<p>(Also, it's not an rfc itself, it's an unresolved question from the async/await rfc)</p>",
        "id": 246259438,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626459067
    },
    {
        "content": "<p>Now that the stream rfc has been merged, I think this is actionable?</p>",
        "id": 246259467,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626459087
    }
]