[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>! It's time for our weekly triage meeting.</p>",
        "id": 261522764,
        "sender_full_name": "eholk",
        "timestamp": 1636994074
    },
    {
        "content": "<p>(Sorry for running a few minutes late today)</p>",
        "id": 261522784,
        "sender_full_name": "eholk",
        "timestamp": 1636994081
    },
    {
        "content": "<p>Howdy</p>",
        "id": 261522860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636994114
    },
    {
        "content": "<p>We have our usual agenda today:</p>\n<ul>\n<li>Announcements<br>\n    - (add items)</li>\n<li>[eholk] New issue <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">triage</a></li>\n<li>Discussion on progress/blockers around sprint bugs</li>\n</ul>",
        "id": 261522903,
        "sender_full_name": "eholk",
        "timestamp": 1636994133
    },
    {
        "content": "<p>Let's start with announcements. Does anyone have anything to announce?</p>",
        "id": 261522940,
        "sender_full_name": "eholk",
        "timestamp": 1636994152
    },
    {
        "content": "<p>Lots of feedback on generators blogpost, lots of bikeshedding as well :)</p>",
        "id": 261523052,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636994186
    },
    {
        "content": "<p>Great!</p>",
        "id": 261523105,
        "sender_full_name": "eholk",
        "timestamp": 1636994209
    },
    {
        "content": "<ul>\n<li><a href=\"https://smallcultfollowing.com/babysteps//blog/2021/11/15/ctcft-2021-11-22-agenda/\">CTCFT on 2021-11-22</a> will have some Rust For Linux folks talking about their challenges. Not directly async related, but perhaps of interest to people here.</li>\n</ul>",
        "id": 261523108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636994209
    },
    {
        "content": "<p>Finally managed to publish my async cancellation blog post; response has been pretty good overall and has sparked some interesting discussion</p>",
        "id": 261523154,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636994232
    },
    {
        "content": "<p>made good progress on the polish ticket of unnecessary <code>.await</code> that will also let us potentially pay up some tech debt for diagnostics coming from for loop expressions</p>",
        "id": 261523157,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636994233
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> nice; that's on my list to read</p>",
        "id": 261523198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636994250
    },
    {
        "content": "<p>Also Eric and I managed to implement <code>IntoFuture</code> semantics in the compiler; not sure if that's on the new issues for today, but would be great if we could get that reviewed: <a href=\"https://github.com/rust-lang/rust/pull/90737\">https://github.com/rust-lang/rust/pull/90737</a></p>",
        "id": 261523303,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636994283
    },
    {
        "content": "<p>did some good progress on impl traits in traits</p>",
        "id": 261523418,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636994335
    },
    {
        "content": "<p>One thing to point out about <code>IntoFuture</code> is the rust-perf run showed a 9% regression on one of the benchmarks. That's much better than the 700% or whatever it was we saw before, but still significant. I'm inclined to take the regression to get the extra functionality, but it'd be great to have others weigh in as well.</p>",
        "id": 261523618,
        "sender_full_name": "eholk",
        "timestamp": 1636994418
    },
    {
        "content": "<p>I guess there is this, too:</p>\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/3193\">return position impl trait in traits RFC</a></p>",
        "id": 261523620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636994419
    },
    {
        "content": "<p>That's awesome to see so much progress this week! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 261523783,
        "sender_full_name": "eholk",
        "timestamp": 1636994510
    },
    {
        "content": "<p>+1 to that. So much is happening!</p>",
        "id": 261523921,
        "sender_full_name": "tmandry",
        "timestamp": 1636994560
    },
    {
        "content": "<p>Let's move on to the next topic.<br>\n<span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-topic</p>",
        "id": 261523937,
        "sender_full_name": "eholk",
        "timestamp": 1636994569
    },
    {
        "content": "<p>Does anyone have something to add on the current topic?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if not.</p>",
        "id": 261523943,
        "sender_full_name": "triagebot",
        "timestamp": 1636994570
    },
    {
        "content": "<p>Next up is new issue <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">triage</a>. We have one new issue this week.</p>",
        "id": 261524078,
        "sender_full_name": "eholk",
        "timestamp": 1636994637
    },
    {
        "content": "<p><strong>async fn can't handle multiple lifetimes in a slice of slices <a href=\"https://github.com/rust-lang/rust/issues/76547\">#76547</a></strong></p>",
        "id": 261524121,
        "sender_full_name": "eholk",
        "timestamp": 1636994645
    },
    {
        "content": "<p>it's actually an old issue that I re-nominated for triage because of.. some reason</p>",
        "id": 261524181,
        "sender_full_name": "tmandry",
        "timestamp": 1636994690
    },
    {
        "content": "<p>Ah, that's why it sounds familiar :)</p>",
        "id": 261524213,
        "sender_full_name": "eholk",
        "timestamp": 1636994703
    },
    {
        "content": "<p>this comment has the current status: <a href=\"https://github.com/rust-lang/rust/issues/76547#issuecomment-962440195\">https://github.com/rust-lang/rust/issues/76547#issuecomment-962440195</a></p>",
        "id": 261524262,
        "sender_full_name": "tmandry",
        "timestamp": 1636994734
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>  - is it related to the polish bug you're working on?</p>",
        "id": 261524304,
        "sender_full_name": "eholk",
        "timestamp": 1636994755
    },
    {
        "content": "<p>I think I just wanted to re-evaluate whether this should go on-deck with the other polish issues we're looking at</p>",
        "id": 261524402,
        "sender_full_name": "tmandry",
        "timestamp": 1636994792
    },
    {
        "content": "<p>The error message <code>this parameter and the return type are declared with different lifetimes</code> looks familiar to me</p>",
        "id": 261524414,
        "sender_full_name": "eholk",
        "timestamp": 1636994800
    },
    {
        "content": "<p>is this basically a diagnostic fail?</p>",
        "id": 261524425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636994806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Triage.20meeting.202021-11-15/near/261524304\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span>  - is it related to the polish bug you're working on?</p>\n</blockquote>\n<p>possibly</p>",
        "id": 261524478,
        "sender_full_name": "tmandry",
        "timestamp": 1636994835
    },
    {
        "content": "<p>to be honest I don't remember how I came across it. 6 days ago might as well be an eternity</p>",
        "id": 261524524,
        "sender_full_name": "tmandry",
        "timestamp": 1636994860
    },
    {
        "content": "<p>Well, regardless, I think it makes sense to have this on our on-deck queue if it's not already.</p>",
        "id": 261524627,
        "sender_full_name": "eholk",
        "timestamp": 1636994886
    },
    {
        "content": "<p>I think there's another thing beyond just the error: we have no affordance to explicitly set the return type's lifetime</p>",
        "id": 261524791,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636994962
    },
    {
        "content": "<p>which precludes the current suggestion machinery from working</p>",
        "id": 261524819,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636994974
    },
    {
        "content": "<p>Ah, interesting</p>",
        "id": 261524839,
        "sender_full_name": "eholk",
        "timestamp": 1636994984
    },
    {
        "content": "<p>I don't understand you mean, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 261524974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995032
    },
    {
        "content": "<p>IIRC, on sync fns it would say something like \"you have <code>-&gt; impl Trait</code>, try adding a lifetime <code>'a</code> and change the return type to <code>-&gt; impl Trait + 'a</code>\", with a bunch of permutations</p>",
        "id": 261524975,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995033
    },
    {
        "content": "<p>you can't do that on async fns, because the lifetime is only inferred from the arguments, always</p>",
        "id": 261525017,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995054
    },
    {
        "content": "<p>hmm</p>",
        "id": 261525041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995065
    },
    {
        "content": "<p>this seems like a genuine bug, not a diagnostic error</p>",
        "id": 261525096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995089
    },
    {
        "content": "<p>so my point is that this is both a diagnostics <em>and</em> ergonomic affordances fail, that we might want to approach</p>",
        "id": 261525099,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995090
    },
    {
        "content": "<p>why doesn't the return type capture all the lifetimes?</p>",
        "id": 261525104,
        "sender_full_name": "tmandry",
        "timestamp": 1636995091
    },
    {
        "content": "<p>oh, well, never mind</p>",
        "id": 261525120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995102
    },
    {
        "content": "<p>so</p>",
        "id": 261525128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995107
    },
    {
        "content": "<p>I think the return type thing is a red herring</p>",
        "id": 261525156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995119
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">ListFut</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">]]);</span><span class=\"w\"></span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">readv_at</span><span class=\"p\">(</span><span class=\"n\">bufs</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">]])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ListFut</span><span class=\"p\">(</span><span class=\"n\">bufs</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 261525213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995126
    },
    {
        "content": "<p>I mean, those two types are distinct</p>",
        "id": 261525253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995143
    },
    {
        "content": "<p>and <code>&amp;mut</code> is invariant</p>",
        "id": 261525258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995146
    },
    {
        "content": "<p>Oh... it's also likely that the suggestions only account for \"flat\" types when it comes to lifetimes. <code>&amp;mut &amp;mut T</code> is likely not properly handled in sync fns either.</p>",
        "id": 261525374,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995212
    },
    {
        "content": "<p>you don't even need the await (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=cff527fdd17208a0399f264b52310df4\">playground</a>)</p>",
        "id": 261525375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995213
    },
    {
        "content": "<p>taking away the <code>async fn</code>...</p>",
        "id": 261525552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995310
    },
    {
        "content": "<p>(ugh, playground is slow?)</p>",
        "id": 261525568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995317
    },
    {
        "content": "<p>(yeah, it's struggling for me)</p>",
        "id": 261525593,
        "sender_full_name": "tmandry",
        "timestamp": 1636995327
    },
    {
        "content": "<p>yes</p>",
        "id": 261525629,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995346
    },
    {
        "content": "<p>is our wg enough to bring the playground to its knees?</p>",
        "id": 261525648,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636995359
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0623</span><span class=\"p\">]</span>: <span class=\"nc\">lifetime</span><span class=\"w\"> </span><span class=\"n\">mismatch</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">nmatsakis</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">5</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">readv_at2</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">bufs</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">&amp;'</span><span class=\"na\">b</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">]])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">                                </span><span class=\"o\">----------------------</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">lifetimes</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">ListFut</span><span class=\"p\">(</span><span class=\"n\">bufs</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">bufs</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">flows</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">bufs</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 261525715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995383
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=74388bdf679c7f080303a2014ee75eda\">source</a></p>",
        "id": 261525728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995393
    },
    {
        "content": "<p>I think this probably is not particularly async specific</p>",
        "id": 261525751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995405
    },
    {
        "content": "<p>definitely a case of \"diagnostic fail\"</p>",
        "id": 261525767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995413
    },
    {
        "content": "<p>they're targeting a simpler scenario</p>",
        "id": 261525773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995417
    },
    {
        "content": "<p>yeah. ideally we should suggest the user write  <code>[async] fn readv_at&lt;'a&gt;(bufs: &amp;'a mut [&amp;'a mut [u8]])</code></p>",
        "id": 261525801,
        "sender_full_name": "tmandry",
        "timestamp": 1636995428
    },
    {
        "content": "<p>right, and highlight that this is required by the structure definition</p>",
        "id": 261525846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995446
    },
    {
        "content": "<p>(which perhaps hints they could change that, too)</p>",
        "id": 261525865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995452
    },
    {
        "content": "<p>in this instance the structure seems wrong to me</p>",
        "id": 261525881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995460
    },
    {
        "content": "<p>one other thing that seems worth noting is that this <em>would</em> work with <code>&amp;[&amp;[u8]]</code></p>",
        "id": 261525901,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995475
    },
    {
        "content": "<p>it's the <code>mut</code> that messes with it</p>",
        "id": 261525912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995478
    },
    {
        "content": "<p>it would even work with <code>&amp;[&amp;mut [u8]</code></p>",
        "id": 261525954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636995485
    },
    {
        "content": "<p>So we're running towards the end of time, so let's go ahead and move on to the next topic.</p>",
        "id": 261526099,
        "sender_full_name": "eholk",
        "timestamp": 1636995553
    },
    {
        "content": "<p>Thanks for raising the issue again, <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>, and it was great seeing a lot of discussion about it. This definitely seems like it's worth looking into more.</p>",
        "id": 261526170,
        "sender_full_name": "eholk",
        "timestamp": 1636995589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-topic</p>",
        "id": 261526173,
        "sender_full_name": "eholk",
        "timestamp": 1636995593
    },
    {
        "content": "<p>Does anyone have something to add on the current topic?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if not.</p>",
        "id": 261526175,
        "sender_full_name": "triagebot",
        "timestamp": 1636995593
    },
    {
        "content": "<p>I guess before we end triage, I wanted to ask whether we could get eyes on <a href=\"https://github.com/rust-lang/rust/pull/90737\">https://github.com/rust-lang/rust/pull/90737</a></p>",
        "id": 261526290,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636995622
    },
    {
        "content": "<p>Our last topic is for general discussion about sprint bugs. Progress, blockers, etc.</p>",
        "id": 261526348,
        "sender_full_name": "eholk",
        "timestamp": 1636995635
    },
    {
        "content": "<p>It doesn't need to happen sync now, but it does require input from the WG whether the regression is acceptable</p>",
        "id": 261526420,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636995667
    },
    {
        "content": "<p>/me throws that PR on the reading list of cool things the WG is doing</p>",
        "id": 261526435,
        "sender_full_name": "tmandry",
        "timestamp": 1636995681
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 261526569,
        "sender_full_name": "eholk",
        "timestamp": 1636995727
    },
    {
        "content": "<p>I plan to do a review in the next couple days</p>",
        "id": 261526577,
        "sender_full_name": "tmandry",
        "timestamp": 1636995730
    },
    {
        "content": "<p>fantastic, thank you!</p>",
        "id": 261526622,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636995747
    },
    {
        "content": "<p>I'm still plugging away at the generator capture issue. I think all I have left is handling <code>break</code> and <code>continue</code>, which hopefully won't take too long.</p>",
        "id": 261526638,
        "sender_full_name": "eholk",
        "timestamp": 1636995758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211722\">Yoshua Wuyts [he/they]</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Triage.20meeting.202021-11-15/near/261526420\">said</a>:</p>\n<blockquote>\n<p>It doesn't need to happen sync now, but it does require input from the WG whether the regression is acceptable</p>\n</blockquote>\n<p><a href=\"https://perf.rust-lang.org/compare.html?start=d6082292a6f3207cbdacd6633a5b9d1476bb6772&amp;end=63f6208b5cec7496fd972de8245a4ff9d4da9e8b\">perf results</a></p>",
        "id": 261526678,
        "sender_full_name": "tmandry",
        "timestamp": 1636995774
    },
    {
        "content": "<p>it's much better than last time :)</p>",
        "id": 261526732,
        "sender_full_name": "tmandry",
        "timestamp": 1636995806
    },
    {
        "content": "<p>even with this patch, the case that's regressing now is 20x as fast as we were in early 2020 - if I'm reading the numbers right</p>",
        "id": 261526933,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1636995896
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211722\">Yoshua Wuyts [he/they]</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Triage.20meeting.202021-11-15/near/261526933\">said</a>:</p>\n<blockquote>\n<p>even with this patch, the case that's regressing now is 20x as fast as we were in early 2020 - if I'm reading the numbers right</p>\n</blockquote>\n<p>That's impressive!</p>",
        "id": 261527349,
        "sender_full_name": "eholk",
        "timestamp": 1636996063
    },
    {
        "content": "<p>Does anyone have anything else they want to discuss in this meeting? If not we can go ahead and wrap up. As always, the chat room is open if people want to continue discussing other topics.</p>",
        "id": 261527480,
        "sender_full_name": "eholk",
        "timestamp": 1636996098
    },
    {
        "content": "<p>Alright, let's go ahead officially end the meeting<br>\n<span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-meeting</p>",
        "id": 261527801,
        "sender_full_name": "eholk",
        "timestamp": 1636996236
    },
    {
        "content": "<p>Does anyone have something to bring up?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if you're ready to end the meeting.</p>",
        "id": 261527803,
        "sender_full_name": "triagebot",
        "timestamp": 1636996237
    },
    {
        "content": "<p>Thanks, everyone!</p>",
        "id": 261527815,
        "sender_full_name": "eholk",
        "timestamp": 1636996243
    }
]