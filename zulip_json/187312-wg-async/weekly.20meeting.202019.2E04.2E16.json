[
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, do we have a meeting today?</p>",
        "id": 163487458,
        "sender_full_name": "tmandry",
        "timestamp": 1555434600
    },
    {
        "content": "<p>I don't have any updates to give, but I'd be happy to chat if you have things</p>",
        "id": 163487539,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555434629
    },
    {
        "content": "<p>I was just going to come in and ask the same thing :) cc <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-await</span>  -- brief meeting?</p>",
        "id": 163487592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434687
    },
    {
        "content": "<p>I'm running a bit late today :)</p>",
        "id": 163487595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434692
    },
    {
        "content": "<p>I did do a quick review of <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span>'s PR -- I haven't had time to check if they had responses to my questions</p>",
        "id": 163487612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434708
    },
    {
        "content": "<p>I forget, is there a centralized list of tasks?</p>",
        "id": 163487690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434756
    },
    {
        "content": "<p>I guess we might as well start with a quick triage of <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+-label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+-label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred\">\"uncategorized issues\"</a> -- i.e., not marked as deferred or blocking</p>",
        "id": 163487829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434852
    },
    {
        "content": "<p>async/await assertion failed: unbounded recursion <a href=\"https://github.com/rust-lang/rust/issues/53249\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53249\">#53249</a></p>",
        "id": 163487855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434892
    },
    {
        "content": "<p>any idea what's going on here, <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> ?</p>",
        "id": 163487887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555434912
    },
    {
        "content": "<p>nope</p>",
        "id": 163487911,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555434940
    },
    {
        "content": "<p>seems like we should at least try to investigate?</p>",
        "id": 163488050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435013
    },
    {
        "content": "<p>right, it seems like this should be considered a blocker</p>",
        "id": 163488126,
        "sender_full_name": "tmandry",
        "timestamp": 1555435073
    },
    {
        "content": "<p>so marked</p>",
        "id": 163488242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435129
    },
    {
        "content": "<blockquote>\n<p>Inconsistency in Send/Sync requirements for async/await <a href=\"https://github.com/rust-lang/rust/issues/59245\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59245\">#59245</a></p>\n</blockquote>",
        "id": 163488244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435132
    },
    {
        "content": "<p>this is that long-standing problem of getting (more) precise about what we capture</p>",
        "id": 163488258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435144
    },
    {
        "content": "<p>I forget if there's another issue for this too?</p>",
        "id": 163488278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435162
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/57017\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57017\">https://github.com/rust-lang/rust/issues/57017</a></p>",
        "id": 163488316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435197
    },
    {
        "content": "<p>maybe mark as a dup?</p>",
        "id": 163488322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435202
    },
    {
        "content": "<p>(I personally think we should try to do <em>something</em> here -- maybe it's not a <em>blocker</em> but I'm not happy with deferring it entirely)</p>",
        "id": 163488459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435290
    },
    {
        "content": "<p>but for now I'll mark it as deferred</p>",
        "id": 163488474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435308
    },
    {
        "content": "<p>agreed, it's definitely not nice</p>",
        "id": 163488548,
        "sender_full_name": "tmandry",
        "timestamp": 1555435335
    },
    {
        "content": "<p>I wonder if I should make an AsyncAwait-Nominated label or something</p>",
        "id": 163488706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435445
    },
    {
        "content": "<p>to tag things for future discussion</p>",
        "id": 163488711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435449
    },
    {
        "content": "<p>otoh it's not like there are <em>so</em> many</p>",
        "id": 163488715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435454
    },
    {
        "content": "<p>anyway let's keep moving for the moment</p>",
        "id": 163488724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435460
    },
    {
        "content": "<blockquote>\n<p><code>async move</code> breaks doc tests <a href=\"https://github.com/rust-lang/rust/issues/59313\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59313\">#59313</a></p>\n</blockquote>",
        "id": 163488726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435462
    },
    {
        "content": "<p>that...is strange</p>",
        "id": 163488727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435465
    },
    {
        "content": "<p>marked as blocking pending investigation and cc'd <span class=\"user-mention\" data-user-id=\"133692\">@QuietMisdreavus</span> and <span class=\"user-mention\" data-user-id=\"210316\">@Guillaume</span> =)</p>",
        "id": 163488810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435540
    },
    {
        "content": "<p>(to help in diagnosing)</p>",
        "id": 163488821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435549
    },
    {
        "content": "<blockquote>\n<p>async/await: cannot move out of captured variable in an <code>Fn</code> closure <a href=\"https://github.com/rust-lang/rust/issues/59971\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59971\">#59971</a></p>\n</blockquote>",
        "id": 163488822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435552
    },
    {
        "content": "<p>seems...expected</p>",
        "id": 163488884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435571
    },
    {
        "content": "<p>but let me dig a bit more into the example</p>",
        "id": 163488892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435577
    },
    {
        "content": "<p>er, no, no it doesn't</p>",
        "id": 163488936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435611
    },
    {
        "content": "<p>ah, but these are async closures...</p>",
        "id": 163489000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I feel like async closures aren't really expected to work right, correct?</p>",
        "id": 163489028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435672
    },
    {
        "content": "<p>whatever right exactly means anyway?</p>",
        "id": 163489038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435679
    },
    {
        "content": "<p>Yes</p>",
        "id": 163489102,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555435694
    },
    {
        "content": "<p>async closures are not a candidate for stabilization</p>",
        "id": 163489113,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555435702
    },
    {
        "content": "<p>async blocks, however, do work</p>",
        "id": 163489134,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555435717
    },
    {
        "content": "<p>ok I'll mark as deferred</p>",
        "id": 163489150,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435731
    },
    {
        "content": "<p>I think we skipped <a href=\"https://github.com/rust-lang/rust/issues/59337\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59337\">#59337</a> async closures have concrete argument lifetimes</p>",
        "id": 163489211,
        "sender_full_name": "tmandry",
        "timestamp": 1555435774
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I needed that. Will do my best.</p>",
        "id": 163489219,
        "sender_full_name": "Giles Cope",
        "timestamp": 1555435782
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> let me know if anything is tricky!</p>",
        "id": 163489269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435803
    },
    {
        "content": "<blockquote>\n<p>async closures have concrete argument lifetimes <a href=\"https://github.com/rust-lang/rust/issues/59337\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59337\">#59337</a> </p>\n</blockquote>\n<p>(yes, you're right <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> )</p>",
        "id": 163489331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435832
    },
    {
        "content": "<p>however, I guess this is deferred for the same reason, right?</p>",
        "id": 163489352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555435855
    },
    {
        "content": "<p>OK, initial triage is done, shall we review the <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred+\">blocking issues</a>?</p>",
        "id": 163489640,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436053
    },
    {
        "content": "<p>Ps, I created a <a href=\"https://paper.dropbox.com/doc/WG-AsyncAwait-Weekly-Meeting-Links--AbU7f1eJ5fAzZ~TAmMyxtOmLAg-KSR6QQ4qI84z7CrRAPDKu\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/WG-AsyncAwait-Weekly-Meeting-Links--AbU7f1eJ5fAzZ~TAmMyxtOmLAg-KSR6QQ4qI84z7CrRAPDKu\">dropbox paper</a> to record the steps here</p>",
        "id": 163489708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436124
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> looks like we can assign this to you?</p>\n<blockquote>\n<p>Futures involving uninhabited variables are incorrectly considered uninhabited. <a href=\"https://github.com/rust-lang/rust/issues/59972\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59972\">#59972</a></p>\n</blockquote>",
        "id": 163489734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436157
    },
    {
        "content": "<p>Yep that should be closed in <a href=\"https://github.com/rust-lang/rust/issues/59897\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59897\">#59897</a></p>",
        "id": 163489794,
        "sender_full_name": "tmandry",
        "timestamp": 1555436182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I guess we can't quite close this until we fix the region inference stuff?</p>\n<blockquote>\n<p>async fn should support multiple lifetimes <a href=\"https://github.com/rust-lang/rust/issues/56238\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56238\">#56238</a></p>\n</blockquote>",
        "id": 163489814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436200
    },
    {
        "content": "<p>Indeed, it does not support multiple lifetimes today</p>",
        "id": 163489826,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555436212
    },
    {
        "content": "<blockquote>\n<p>Yep that should be closed in <a href=\"https://github.com/rust-lang/rust/issues/59897\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59897\">#59897</a></p>\n</blockquote>\n<p>how is that going, <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>?</p>",
        "id": 163489829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436217
    },
    {
        "content": "<p>so, variantful generators are going well, I have some polish steps left to do for debuginfo and cleaning up the code</p>",
        "id": 163489864,
        "sender_full_name": "tmandry",
        "timestamp": 1555436244
    },
    {
        "content": "<p>I guess one question <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> is whether we should make an issue for feature-gating the tricky cases here:</p>\n<blockquote>\n<p>Unused arguments to async fn are dropped too early <a href=\"https://github.com/rust-lang/rust/issues/54716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54716\">#54716</a> </p>\n</blockquote>\n<p>or if we should hold off until we have a chance to discuss this a bit more?</p>",
        "id": 163489879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I think we should discuss again if we can find a moment in the next lang mtg</p>",
        "id": 163489950,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555436286
    },
    {
        "content": "<p>but I think that was the most promising proposal</p>",
        "id": 163489957,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555436292
    },
    {
        "content": "<p>(in terms of group consensus)</p>",
        "id": 163489975,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555436305
    },
    {
        "content": "<p>OK</p>",
        "id": 163489982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436311
    },
    {
        "content": "<p>Similarly, we were talking about taking the initial steps for \"Resolve <code>await</code> syntax\" <a href=\"https://github.com/rust-lang/rust/issues/57640\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57640\">#57640</a> -- most of which are independent from the actual syntax anyway -- maybe we should open an issue on that? (i.e., \"implement built-in syntax\") and assign it to someone?</p>",
        "id": 163490022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436346
    },
    {
        "content": "<p>I mention a new issue because I'd want one that's just focused on the implementation questions</p>",
        "id": 163490032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436361
    },
    {
        "content": "<p>and not the choice of syntax</p>",
        "id": 163490036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436364
    },
    {
        "content": "<p>the existing one's comment thread is...a bit polluted :)</p>",
        "id": 163490041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436372
    },
    {
        "content": "<p>Re: <a href=\"https://github.com/rust-lang/rust/issues/52924\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52924\">#52924</a> (which variantful generators are a part of),<br>\nI went ahead and implemented the optimization that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and I discussed<br>\nit uses the <code>MaybeLiveAt</code> dataflow analysis to check for vars that might be <code>StorageLive</code> simultaneously, and prevent them from overlapping</p>",
        "id": 163490132,
        "sender_full_name": "tmandry",
        "timestamp": 1555436419
    },
    {
        "content": "<p>but there's one problem</p>",
        "id": 163490135,
        "sender_full_name": "tmandry",
        "timestamp": 1555436427
    },
    {
        "content": "<p>which is that, even for locals that don't have overlapping scopes (as in the await case), the drop and unwind paths make them appear to be StorageLive at the same time</p>",
        "id": 163490192,
        "sender_full_name": "tmandry",
        "timestamp": 1555436467
    },
    {
        "content": "<p>so we have to deal with that somehow</p>",
        "id": 163490221,
        "sender_full_name": "tmandry",
        "timestamp": 1555436491
    },
    {
        "content": "<p>can you give an example?</p>",
        "id": 163490228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436500
    },
    {
        "content": "<p>What do we have to do?</p>",
        "id": 163490317,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1555436546
    },
    {
        "content": "<blockquote>\n<p>can you give an example?</p>\n</blockquote>\n<p>yeah, here's <a href=\"https://gist.github.com/tmandry/38706b422ef52cae9c4c85b1a89b0825\" target=\"_blank\" title=\"https://gist.github.com/tmandry/38706b422ef52cae9c4c85b1a89b0825\">a gist</a></p>",
        "id": 163490338,
        "sender_full_name": "tmandry",
        "timestamp": 1555436567
    },
    {
        "content": "<p>just updated to make it slightly less confusing</p>",
        "id": 163490390,
        "sender_full_name": "tmandry",
        "timestamp": 1555436613
    },
    {
        "content": "<blockquote>\n<p>What do we have to do?</p>\n</blockquote>\n<p>I'd like to know <span class=\"user-mention\" data-user-id=\"210316\">@Guillaume</span> if you have any insight into this issue: \" async move breaks doc tests <a href=\"https://github.com/rust-lang/rust/issues/59313\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59313\">#59313</a> \"</p>\n<p>like, what is causing that error? are there some switches I can give to get more information?</p>",
        "id": 163490476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436655
    },
    {
        "content": "<p>anyway, <code>x</code> and <code>y</code> never \"really\" have storagelive simulataneously, but if you follow the drop and unwind branches to the beginning of <code>bb1</code>, <code>bb3</code>, <code>bb4</code>, or <code>bb6</code>, you will see that we have declared storagelive on both of them at some points</p>",
        "id": 163490512,
        "sender_full_name": "tmandry",
        "timestamp": 1555436701
    },
    {
        "content": "<blockquote>\n<p>just updated to make it slightly less confusing</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> this should probably be <code>y</code> in the <code>println!</code>, right?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span>: <span class=\"kt\">i32</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kr\">yield</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{:?}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 163490545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436716
    },
    {
        "content": "<p>lol, yes, sorry</p>",
        "id": 163490556,
        "sender_full_name": "tmandry",
        "timestamp": 1555436726
    },
    {
        "content": "<blockquote>\n<p>anyway, <code>x</code> and <code>y</code> never \"really\" have storagelive simulataneously, but if you follow the drop and unwind branches to the beginning of <code>bb1</code>, <code>bb3</code>, <code>bb4</code>, or <code>bb6</code>, you will see that we have declared storagelive on both of them at some points</p>\n</blockquote>\n<p>yeah so I think in prticular we don't emit storage-end on unwind paths</p>",
        "id": 163490565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436735
    },
    {
        "content": "<p>this is the problem, right?</p>",
        "id": 163490575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436741
    },
    {
        "content": "<p>yes I believe so</p>",
        "id": 163490584,
        "sender_full_name": "tmandry",
        "timestamp": 1555436747
    },
    {
        "content": "<p>I'm not sure why we don't, I think it's an optimization (less IR) and a simplification (it was annoying to do so)</p>",
        "id": 163490656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436791
    },
    {
        "content": "<p>yeah, I'm thinking changing that may be the way to go</p>",
        "id": 163490695,
        "sender_full_name": "tmandry",
        "timestamp": 1555436825
    },
    {
        "content": "<p>I haven't looked at the relevant code yet though</p>",
        "id": 163490700,
        "sender_full_name": "tmandry",
        "timestamp": 1555436834
    },
    {
        "content": "<p>I guess a more complex analysis might be able to decide it doesn't matter</p>",
        "id": 163490794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436913
    },
    {
        "content": "<p>not sure if that'd be worth the trouble</p>",
        "id": 163490800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436918
    },
    {
        "content": "<p>the reasoning would be something like \"we didn't storage-dead, <em>but</em> we never touch that slot again...\"</p>",
        "id": 163490822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436938
    },
    {
        "content": "<p>I didn't quite follow how you setup the analysis in the first place</p>",
        "id": 163490845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436953
    },
    {
        "content": "<p>anyway, we can dig into that elsewhere</p>",
        "id": 163490851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436964
    },
    {
        "content": "<p>ok, I can go into more detail in the topic for this issue</p>",
        "id": 163490867,
        "sender_full_name": "tmandry",
        "timestamp": 1555436980
    },
    {
        "content": "<p>ok, I probably got to run, this meeting is running over for me :) I guess .. people mostly have stuff to do? we didn't discuss the syntax question, and <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I don't know if you've done any investigation into the region solver?</p>",
        "id": 163490884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555436999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> cool, maybe ping me? :)</p>",
        "id": 163490943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555437007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> no, I have not</p>",
        "id": 163490951,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I was planning to work on the syntax implementation here soon</p>",
        "id": 163490967,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437029
    },
    {
        "content": "<p>I don't anticipate it being particularly difficult</p>",
        "id": 163490974,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> WRT the regions stuff, I can do some poking around-- I thought you had indicated you wanted to do some investigation yourself first, but maybe I misunderstood</p>",
        "id": 163491018,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437068
    },
    {
        "content": "<p>(In any case, I wouldn't have had time until now :) )</p>",
        "id": 163491034,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437090
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> created <a href=\"https://github.com/rust-lang/rust/issues/60016\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60016\">https://github.com/rust-lang/rust/issues/60016</a> and assigned to you :)</p>",
        "id": 163491114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555437133
    },
    {
        "content": "<p>sg, thanks</p>",
        "id": 163491119,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1555437139
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> WRT the regions stuff, I can do some poking around-- I thought you had indicated you wanted to do some investigation yourself first, but maybe I misunderstood</p>\n</blockquote>\n<p>no, you're not wrong, I just wanted to check. I thikn I will do that later today</p>",
        "id": 163491123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555437144
    },
    {
        "content": "<p>I am adding something to my calendar so I don't forget</p>",
        "id": 163491128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555437152
    },
    {
        "content": "<p>I'll leave some notes on the issue</p>",
        "id": 163491132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555437156
    },
    {
        "content": "<p>Answered on the issue, it's simpler to follow this way. :)</p>",
        "id": 163601813,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1555536009
    }
]