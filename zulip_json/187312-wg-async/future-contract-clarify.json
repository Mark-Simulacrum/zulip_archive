[
    {
        "content": "<p>Looking at the future contract, it doesn't specify many details about how wakers should be stored and purged. This came to mind after a discussion on <code>Wake</code> trait stabilization issue where dtolnay stated:</p>\n<p>\"Correctly implemented futures will not leak tasks, because they should not hold the Waker in their yielding state.\"</p>\n<p>I understand this as \"a waker should only be stored in conjunction with a Poll::Pending return value, and once it is polled again, it should be cleared (or replaced with the new waker)\"</p>\n<p>However, this doesn't seem to be true for all futures. For instance, when <code>future::select(a, b)</code> yields <code>Ready(Either::Right(_, pending_fut))</code> AND \"a\" is still pending, a can for sure hold on to the waker. Is this a bug? Anyone who can clarify the rules for storing wakers?</p>",
        "id": 213349204,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1602708809
    }
]