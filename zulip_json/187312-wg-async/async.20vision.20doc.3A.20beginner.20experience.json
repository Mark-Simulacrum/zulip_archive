[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"137147\">@Didrik Nordstrom</span> I have a question for you</p>",
        "id": 226050796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074313
    },
    {
        "content": "<p>You may have seen I'm pulling together work on this <a href=\"https://hackmd.io/p6cmRZ9ZRQ-F1tlhGaN9rg\">async vision doc</a>.</p>",
        "id": 226050864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074336
    },
    {
        "content": "<p>I should probably write out what i'm about to type here in the doc</p>",
        "id": 226050885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074347
    },
    {
        "content": "<p>because I've said this like 22 times in the last couple of days</p>",
        "id": 226050894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074354
    },
    {
        "content": "<p>but the basic idea is that it consists of three things:</p>\n<ul>\n<li>design tenets -- what are the principles we are using to guide us</li>\n<li>user stories about how things are now (with a focus on what could be improved, but also the good)</li>\n<li>user stories about how we want things to be in the fullness of time (to contrast with how things are today)</li>\n</ul>",
        "id": 226050979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074399
    },
    {
        "content": "<p>I expect there to be more there than we can get done in 1 year</p>",
        "id": 226050992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074408
    },
    {
        "content": "<p>but I want it to kind of 'paint a picture' of what we're shooting for</p>",
        "id": 226051007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074416
    },
    {
        "content": "<p>I also was hoping to then kind of use that to assign \"owners\"</p>",
        "id": 226051028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074428
    },
    {
        "content": "<p>this person is trying to make that thing happen, that sort of thing</p>",
        "id": 226051042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074438
    },
    {
        "content": "<p>I'm curious if you'd be interested in contributing to the doc (or reviewing) around the way you see the book working</p>",
        "id": 226051111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074460
    },
    {
        "content": "<p>I'm going to put in some time to try and make a version that shows more clearly how i see it working ...</p>",
        "id": 226051130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074473
    },
    {
        "content": "<p>(also this goes for others who might have interest in contributing to the effort)</p>",
        "id": 226051137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613074480
    },
    {
        "content": "<p>Yeah, I'd be delighted to. Do you want a section on the vision for the book? And which communication channels are we using for the conversations?</p>",
        "id": 226053126,
        "sender_full_name": "Didrik Nordstrom",
        "timestamp": 1613075420
    },
    {
        "content": "<p>have you put thought into what <code>async</code> looks like for library authors? like on guides for transitioning from sync to async code?</p>",
        "id": 226053331,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613075517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137147\">@Didrik Nordstrom</span> I do =)</p>",
        "id": 226412037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410656
    },
    {
        "content": "<p>but as I was working over the weekend I realized something</p>",
        "id": 226412074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410673
    },
    {
        "content": "<p>which you will see reflected in <a class=\"stream-topic\" data-stream-id=\"187312\" href=\"/#narrow/stream/187312-wg-async-foundations/topic/async.20vision\">#wg-async-foundations &gt; async vision</a></p>",
        "id": 226412088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410681
    },
    {
        "content": "<p>in particular, when I think about what i'd like to see <strong>in the fullness of time</strong>, I don't know how much of a role there is for an \"async book'</p>",
        "id": 226412144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410699
    },
    {
        "content": "<p>I imagine that this stuff would be integrated into our standard materials</p>",
        "id": 226412171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410716
    },
    {
        "content": "<p>that said</p>",
        "id": 226412490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410874
    },
    {
        "content": "<p>I think in the <em>short term</em> we totally want an async book</p>",
        "id": 226412496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410879
    },
    {
        "content": "<p>i imagined this showing up in the (yet to be written...) roadmap section</p>",
        "id": 226412509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/async.20vision.20doc.3A.20beginner.20experience/near/226053331\">said</a>:</p>\n<blockquote>\n<p>have you put thought into what <code>async</code> looks like for library authors? like on guides for transitioning from sync to async code?</p>\n</blockquote>\n<p>say more :) I think that'd be a great thing to be thinking about!</p>",
        "id": 226412528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613410905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/async.20vision.20doc.3A.20beginner.20experience/near/226412528\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/async.20vision.20doc.3A.20beginner.20experience/near/226053331\">said</a>:</p>\n<blockquote>\n<p>have you put thought into what <code>async</code> looks like for library authors? like on guides for transitioning from sync to async code?</p>\n</blockquote>\n<p>say more :) I think that'd be a great thing to be thinking about!</p>\n</blockquote>\n<p>I realize now that I haven't actually tried to do this for <em>libraries</em>, that's not really what I'm asking (although I am slightly concerned by the \"what color is your function\" issue where libraries have to have both sync and async interfaces, like <code>reqwest::blocking</code>, but I'm sure you've already thought about that).</p>\n<p>My main concern is I've been hesitant in the past to migrate <a href=\"http://docs.rs\">docs.rs</a> to async because I don't feel confident that the semantic behavior is the same before and after. There's a very long thread about this here: <a href=\"https://github.com/rust-lang/docs.rs/pull/915\">https://github.com/rust-lang/docs.rs/pull/915</a> but the main concerns I have are:</p>\n<ol>\n<li>How does <code>async</code> interact with panics and <code>catch_unwind</code>?</li>\n<li>How can I get a useful mental model of the code? When reading async code I have a lot of questions like <a href=\"https://github.com/rust-lang/docs.rs/pull/910#discussion_r460446221\">https://github.com/rust-lang/docs.rs/pull/910#discussion_r460446221</a> where I just don't understand the runtime semantics of the code. The problem is not getting it to compile, the problem is that I don't know how to predict the behavior, especially the performance implications. Since <code>async</code> in my mind is mostly about performance, that seems like a pretty big issue.</li>\n<li>Translating sync code to async is a lot of work and also pretty menial; mostly it's just adding <code>async</code> and <code>await</code> keywords in lots of places. <a href=\"https://github.com/jyn514/docs.rs/tree/sqlx\">I spent quite a while on this</a> without feeling like I accomplished much.</li>\n</ol>\n<p>I think 1. is mostly a property of the executor and I should ask <code>tokio</code> about it. For 3.  I don't know if Rust can help here from a language perspective, I think <a href=\"http://docs.rs\">docs.rs</a> just has lots of code. FWIW I get the same feeling about <a href=\"https://github.com/rust-lang/rust/pull/82020\">translating things from interior to exterior mutability</a>, so this isn't unique to async. I think 2. could definitely be helped by more and better documentation though.</p>",
        "id": 226419574,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613415556
    },
    {
        "content": "<p>Anyway, that's my perspective as someone who's used a lot of rust but not a lot of async. Maybe the moral here is I should use async in small projects before trying to use it in big ones.</p>",
        "id": 226420037,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613415852
    },
    {
        "content": "<ol>\n<li>doesn't really have much to do with executor-- well, at least it doesn't until you start spawning things</li>\n</ol>",
        "id": 226423036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1613417864
    }
]