[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting time!</p>",
        "id": 194832382,
        "sender_full_name": "tmandry",
        "timestamp": 1587488634
    },
    {
        "content": "<p>Howdy!</p>",
        "id": 194832526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587488691
    },
    {
        "content": "<p><a href=\"https://github.com/orgs/rust-lang/projects/2\" title=\"https://github.com/orgs/rust-lang/projects/2\">Project board</a></p>",
        "id": 194832587,
        "sender_full_name": "tmandry",
        "timestamp": 1587488724
    },
    {
        "content": "<p>wow.. lots of things marked Done this week</p>",
        "id": 194832616,
        "sender_full_name": "tmandry",
        "timestamp": 1587488743
    },
    {
        "content": "<ul>\n<li>Bad error message with async main <a href=\"https://github.com/rust-lang/rust/issues/68523\" title=\"https://github.com/rust-lang/rust/issues/68523\">#68523</a></li>\n<li>rustc compiler crashed when using async in loop <a href=\"https://github.com/rust-lang/rust/issues/67893\" title=\"https://github.com/rust-lang/rust/issues/67893\">#67893</a></li>\n<li>Explanation for why future is not Send is wrong <a href=\"https://github.com/rust-lang/rust/issues/68112\" title=\"https://github.com/rust-lang/rust/issues/68112\">#68112</a></li>\n<li>ICE: src/librustc/middle/region.rs:1037: Encountered greater count 28 <a href=\"https://github.com/rust-lang/rust/issues/69307\" title=\"https://github.com/rust-lang/rust/issues/69307\">#69307</a></li>\n<li>async-block diagnostics do not suggest async move when it may be needed <a href=\"https://github.com/rust-lang/rust/issues/66107\" title=\"https://github.com/rust-lang/rust/issues/66107\">#66107</a></li>\n</ul>",
        "id": 194832742,
        "sender_full_name": "tmandry",
        "timestamp": 1587488795
    },
    {
        "content": "<p>I guess that's from the last 2 weeks, but still :)</p>",
        "id": 194832800,
        "sender_full_name": "tmandry",
        "timestamp": 1587488821
    },
    {
        "content": "<h1>In progress issues</h1>",
        "id": 194832857,
        "sender_full_name": "tmandry",
        "timestamp": 1587488851
    },
    {
        "content": "<h2>Lint for using await while holding a MutexGuard</h2>\n<p><a href=\"https://github.com/rust-lang/rust-clippy/issues/4226\" title=\"https://github.com/rust-lang/rust-clippy/issues/4226\">https://github.com/rust-lang/rust-clippy/issues/4226</a></p>",
        "id": 194832883,
        "sender_full_name": "tmandry",
        "timestamp": 1587488869
    },
    {
        "content": "<p>PR is up, waiting on review</p>",
        "id": 194832994,
        "sender_full_name": "tmandry",
        "timestamp": 1587488917
    },
    {
        "content": "<h1>Blocked issues</h1>",
        "id": 194833015,
        "sender_full_name": "tmandry",
        "timestamp": 1587488929
    },
    {
        "content": "<p>assuming no updates here</p>",
        "id": 194833025,
        "sender_full_name": "tmandry",
        "timestamp": 1587488934
    },
    {
        "content": "<p>no</p>",
        "id": 194833153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489003
    },
    {
        "content": "<p>not on my part anyway</p>",
        "id": 194833164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489006
    },
    {
        "content": "<p>yeah I can't find anything new</p>",
        "id": 194833181,
        "sender_full_name": "tmandry",
        "timestamp": 1587489016
    },
    {
        "content": "<p>we don't have many issues marked On Deck</p>",
        "id": 194833195,
        "sender_full_name": "tmandry",
        "timestamp": 1587489022
    },
    {
        "content": "<p>let's look at new issues</p>",
        "id": 194833211,
        "sender_full_name": "tmandry",
        "timestamp": 1587489031
    },
    {
        "content": "<h1><a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">Uncategorized issues</a></h1>",
        "id": 194833249,
        "sender_full_name": "tmandry",
        "timestamp": 1587489053
    },
    {
        "content": "<h2>Async execution can get lost during refactoring <a href=\"https://github.com/rust-lang/rust/issues/71368\" title=\"https://github.com/rust-lang/rust/issues/71368\">#71368</a></h2>",
        "id": 194833278,
        "sender_full_name": "tmandry",
        "timestamp": 1587489075
    },
    {
        "content": "<p>I'm surprised they dno't get a warning</p>",
        "id": 194833319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489100
    },
    {
        "content": "<p>this boils down to \"<code>Option&lt;T&gt;</code> should be <code>must_use</code> if <code>T</code> is\", I think</p>",
        "id": 194833328,
        "sender_full_name": "tmandry",
        "timestamp": 1587489106
    },
    {
        "content": "<p>interesting</p>",
        "id": 194833340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489114
    },
    {
        "content": "<p>yes, makes sense</p>",
        "id": 194833345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489116
    },
    {
        "content": "<p>in the lang team we had discussed approving these kinds of extensions on a \"ad hoc\" basis for now</p>",
        "id": 194833397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489128
    },
    {
        "content": "<p>I will nominate for consideration, but I think it's a pretty clear yes to me</p>",
        "id": 194833425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489142
    },
    {
        "content": "<p>okay, great</p>",
        "id": 194833450,
        "sender_full_name": "tmandry",
        "timestamp": 1587489161
    },
    {
        "content": "<p>for prioritizing on our side.. not sure</p>",
        "id": 194833491,
        "sender_full_name": "tmandry",
        "timestamp": 1587489184
    },
    {
        "content": "<p>probably P-medium but not necessarily On Deck</p>",
        "id": 194833539,
        "sender_full_name": "tmandry",
        "timestamp": 1587489208
    },
    {
        "content": "<p>(should we still mark P-* issues or is that up to the new WG now?)</p>",
        "id": 194833573,
        "sender_full_name": "tmandry",
        "timestamp": 1587489231
    },
    {
        "content": "<p>hmm</p>",
        "id": 194833676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489258
    },
    {
        "content": "<p>I'd actually bump the priority here some</p>",
        "id": 194833685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489261
    },
    {
        "content": "<p>In particular, forgetting an await is -- imo -- a pretty common hazard, and particularly it is a problem for folks coming from JS or TS</p>",
        "id": 194833741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489288
    },
    {
        "content": "<p>because in those contexts, when you invoke an async fn, it starts executing whether or not you await it</p>",
        "id": 194833768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489301
    },
    {
        "content": "<p>and part of my reasoning for why this would be learnable was \"you'll get a warning in rust\"</p>",
        "id": 194833793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489313
    },
    {
        "content": "<p>yeah ok, agreed</p>",
        "id": 194833816,
        "sender_full_name": "tmandry",
        "timestamp": 1587489326
    },
    {
        "content": "<p>so I would consider it \"on deck\"</p>",
        "id": 194833824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489328
    },
    {
        "content": "<p>I don't honestly know what the P- labels even mean :P</p>",
        "id": 194833837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489338
    },
    {
        "content": "<p>I guess P-medium is appropriate</p>",
        "id": 194833846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489342
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 194833878,
        "sender_full_name": "tmandry",
        "timestamp": 1587489359
    },
    {
        "content": "<p>Sigh, I wish we could somehow get clarify there</p>",
        "id": 194833929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489365
    },
    {
        "content": "<p>okay, done</p>",
        "id": 194833934,
        "sender_full_name": "tmandry",
        "timestamp": 1587489366
    },
    {
        "content": "<p>but that's a debate for another time</p>",
        "id": 194833955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489371
    },
    {
        "content": "<p>I'll add a comment</p>",
        "id": 194834045,
        "sender_full_name": "tmandry",
        "timestamp": 1587489416
    },
    {
        "content": "<p>about prioritization</p>",
        "id": 194834063,
        "sender_full_name": "tmandry",
        "timestamp": 1587489421
    },
    {
        "content": "<p>in the meantime</p>",
        "id": 194834072,
        "sender_full_name": "tmandry",
        "timestamp": 1587489423
    },
    {
        "content": "<h2>perf slowdown from <a href=\"https://github.com/rust-lang/rust/issues/70831\" title=\"https://github.com/rust-lang/rust/issues/70831\">#70831</a> (remove a stack frame from .await calls) <a href=\"https://github.com/rust-lang/rust/issues/71244\" title=\"https://github.com/rust-lang/rust/issues/71244\">#71244</a></h2>",
        "id": 194834082,
        "sender_full_name": "tmandry",
        "timestamp": 1587489426
    },
    {
        "content": "<p>oh yeah</p>",
        "id": 194834204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489480
    },
    {
        "content": "<p>uh</p>",
        "id": 194834263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489492
    },
    {
        "content": "<p>I don't know if there's much action here</p>",
        "id": 194834295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489505
    },
    {
        "content": "<p>I guess micro-optimizing the expansion for compilation time might make sense</p>",
        "id": 194834336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489536
    },
    {
        "content": "<p>not sure how easy it'd be to change</p>",
        "id": 194834346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489544
    },
    {
        "content": "<p>I didn't really look clsoely</p>",
        "id": 194834353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489547
    },
    {
        "content": "<p>okay, so we don't consider smallish regressions auto P-high or anything</p>",
        "id": 194834383,
        "sender_full_name": "tmandry",
        "timestamp": 1587489566
    },
    {
        "content": "<p>I'm fine with that</p>",
        "id": 194834403,
        "sender_full_name": "tmandry",
        "timestamp": 1587489577
    },
    {
        "content": "<p>well that's kind of what we're discussing I guess</p>",
        "id": 194834410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489584
    },
    {
        "content": "<p>we don't have a clear t-compiler-wide policy</p>",
        "id": 194834429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489595
    },
    {
        "content": "<p>(brb, afk)</p>",
        "id": 194834547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489649
    },
    {
        "content": "<p>I think though that if it's a stress test</p>",
        "id": 194834573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489662
    },
    {
        "content": "<p>then 5% is ok</p>",
        "id": 194834582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489663
    },
    {
        "content": "<p>if it's like \"all async programs are 5% slower\"</p>",
        "id": 194834588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489669
    },
    {
        "content": "<p>that's something else</p>",
        "id": 194834591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587489671
    },
    {
        "content": "<p>/me pulls up the benchmark</p>",
        "id": 194834737,
        "sender_full_name": "tmandry",
        "timestamp": 1587489727
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/await-call-tree/src/lib.rs\" title=\"https://github.com/rust-lang/rustc-perf/blob/master/collector/benchmarks/await-call-tree/src/lib.rs\">here</a></p>",
        "id": 194834804,
        "sender_full_name": "tmandry",
        "timestamp": 1587489772
    },
    {
        "content": "<p>hmm.. it's somewhat deep, but I'm sure we have some call trees that come close to this in Fuchsia</p>",
        "id": 194834872,
        "sender_full_name": "tmandry",
        "timestamp": 1587489815
    },
    {
        "content": "<p>that said, if it's only a few instances I'm not sure it's worth prioritizing</p>",
        "id": 194834948,
        "sender_full_name": "tmandry",
        "timestamp": 1587489842
    },
    {
        "content": "<p>I'm marking as <code>I-prioritize</code> and moving on :)</p>",
        "id": 194835050,
        "sender_full_name": "tmandry",
        "timestamp": 1587489886
    },
    {
        "content": "<h2>Improve await error messaging for trait obligations <a href=\"https://github.com/rust-lang/rust/issues/71137\" title=\"https://github.com/rust-lang/rust/issues/71137\">#71137</a></h2>",
        "id": 194835278,
        "sender_full_name": "tmandry",
        "timestamp": 1587489992
    },
    {
        "content": "<p>Looks like <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> is on this, and I owe them a review!</p>",
        "id": 194835318,
        "sender_full_name": "tmandry",
        "timestamp": 1587490015
    },
    {
        "content": "<p>I'll take a look at that PR after the meeting.</p>",
        "id": 194835629,
        "sender_full_name": "tmandry",
        "timestamp": 1587490150
    },
    {
        "content": "<h2>[codegen] unnecessary panicking branch in <code>foo().await</code> (vs equivalent <code>FutureImpl.await</code>) <a href=\"https://github.com/rust-lang/rust/issues/71093\" title=\"https://github.com/rust-lang/rust/issues/71093\">#71093</a></h2>",
        "id": 194835636,
        "sender_full_name": "tmandry",
        "timestamp": 1587490154
    },
    {
        "content": "<p>(back)</p>",
        "id": 194835688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490179
    },
    {
        "content": "<p>I'm hoping <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> will look into that :)</p>",
        "id": 194835772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490203
    },
    {
        "content": "<p>er I see they left a comment!</p>",
        "id": 194835784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490212
    },
    {
        "content": "<p>hmm, do we have a meta issue around \"optimize nested state machines better\"?</p>",
        "id": 194835946,
        "sender_full_name": "tmandry",
        "timestamp": 1587490303
    },
    {
        "content": "<p>I'm not really aware of one</p>",
        "id": 194835953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490309
    },
    {
        "content": "<p>I'd be happy to work on that, but I don't really see any obvious way to improve that, besides improving the cost of pulling in the panic machinery in general</p>",
        "id": 194835970,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587490315
    },
    {
        "content": "<p>there was some work on that recently, wasn't there?</p>",
        "id": 194836034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490326
    },
    {
        "content": "<p>I have some memories of that</p>",
        "id": 194836040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490329
    },
    {
        "content": "<p>I think e.g. tweaking inlining hints might be helpful</p>",
        "id": 194836047,
        "sender_full_name": "tmandry",
        "timestamp": 1587490332
    },
    {
        "content": "<p>I made a generator size tracking issue, but that is mostly for their RAM usage</p>",
        "id": 194836079,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587490345
    },
    {
        "content": "<p>creating a meta-issue seems useful, for sure</p>",
        "id": 194836117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490362
    },
    {
        "content": "<p>we've been focused on diagnostics but perf improvements seem important too</p>",
        "id": 194836189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490402
    },
    {
        "content": "<p>Okay. I'll create one later, unless <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> wants to</p>",
        "id": 194836211,
        "sender_full_name": "tmandry",
        "timestamp": 1587490414
    },
    {
        "content": "<p>for now, marking \"triaged\"..</p>",
        "id": 194836242,
        "sender_full_name": "tmandry",
        "timestamp": 1587490431
    },
    {
        "content": "<p>oh and we're past time</p>",
        "id": 194836462,
        "sender_full_name": "tmandry",
        "timestamp": 1587490500
    },
    {
        "content": "<p>there's one last uncategorized issue I'll continue doing here</p>",
        "id": 194836494,
        "sender_full_name": "tmandry",
        "timestamp": 1587490517
    },
    {
        "content": "<h2>Hard to read error message with 2D line drawing and multi-line expressions <a href=\"https://github.com/rust-lang/rust/issues/70935\" title=\"https://github.com/rust-lang/rust/issues/70935\">#70935</a></h2>",
        "id": 194836498,
        "sender_full_name": "tmandry",
        "timestamp": 1587490519
    },
    {
        "content": "<p>heh</p>",
        "id": 194836563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490557
    },
    {
        "content": "<p>that is pretty funny</p>",
        "id": 194836568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490562
    },
    {
        "content": "<p>yeah, it's unfortunate</p>",
        "id": 194836714,
        "sender_full_name": "tmandry",
        "timestamp": 1587490617
    },
    {
        "content": "<p>I guess it arises from using the \"text\" of the async block</p>",
        "id": 194836718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490619
    },
    {
        "content": "<p>...somewhere...</p>",
        "id": 194836730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490623
    },
    {
        "content": "<p>due to your recent PR?</p>",
        "id": 194836738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490630
    },
    {
        "content": "<p>it's definitely in that code, not sure if it was preexisting or not</p>",
        "id": 194836774,
        "sender_full_name": "tmandry",
        "timestamp": 1587490647
    },
    {
        "content": "<p>I guess we can look for newlines specifically. feels a bit hacky though</p>",
        "id": 194836823,
        "sender_full_name": "tmandry",
        "timestamp": 1587490679
    },
    {
        "content": "<p>marking On Deck</p>",
        "id": 194836893,
        "sender_full_name": "tmandry",
        "timestamp": 1587490697
    },
    {
        "content": "<p>I'm not really sure what's the best place to address this,</p>",
        "id": 194836913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490710
    },
    {
        "content": "<p>but I think that it's reasonable that if we're taking \"raw text\" from the program to use as the name of something,</p>",
        "id": 194836935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490724
    },
    {
        "content": "<p>which seems to be the case here,</p>",
        "id": 194836939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490727
    },
    {
        "content": "<p>well, I guess I'd say that's already a kind of hack :P</p>",
        "id": 194836949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490733
    },
    {
        "content": "<p>but having some pre-processing to simplify it seems reasonable</p>",
        "id": 194836976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490747
    },
    {
        "content": "<p>but yeah it's hard</p>",
        "id": 194836989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490753
    },
    {
        "content": "<p>and sometimes not very obvious what name to give <em>apart</em> from raw text</p>",
        "id": 194836996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490760
    },
    {
        "content": "<p>..right</p>",
        "id": 194837006,
        "sender_full_name": "tmandry",
        "timestamp": 1587490768
    },
    {
        "content": "<p>yeah, this bug is on stable :/</p>",
        "id": 194837042,
        "sender_full_name": "tmandry",
        "timestamp": 1587490787
    },
    {
        "content": "<p>in cases where it doesn't have a clear name, we can just not name it in the label</p>",
        "id": 194837143,
        "sender_full_name": "tmandry",
        "timestamp": 1587490824
    },
    {
        "content": "<p>yeah</p>",
        "id": 194837378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490934
    },
    {
        "content": "<p>I suspect \"async block\" or something would do better</p>",
        "id": 194837395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587490942
    },
    {
        "content": "<p>that's the last issue</p>",
        "id": 194837449,
        "sender_full_name": "tmandry",
        "timestamp": 1587490981
    },
    {
        "content": "<p>anyone looking for something to work on?</p>",
        "id": 194837464,
        "sender_full_name": "tmandry",
        "timestamp": 1587490986
    },
    {
        "content": "<p>I was talking to <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> who was looking for things to do</p>",
        "id": 194837510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491014
    },
    {
        "content": "<p>I wonder if there are any decent issues to pick up here?</p>",
        "id": 194837527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491022
    },
    {
        "content": "<p>they're also fairly familiar with MIR, so if we had some MIR-related things that might be an option</p>",
        "id": 194837611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491046
    },
    {
        "content": "<p>hmm, not anything marked as OnDeck</p>",
        "id": 194837885,
        "sender_full_name": "tmandry",
        "timestamp": 1587491174
    },
    {
        "content": "<p>nothing marked as OnDeck involves MIR, I mean</p>",
        "id": 194837917,
        "sender_full_name": "tmandry",
        "timestamp": 1587491193
    },
    {
        "content": "<p>there's a change I started eons ago that I never got to finishing</p>",
        "id": 194838008,
        "sender_full_name": "tmandry",
        "timestamp": 1587491246
    },
    {
        "content": "<p>maybe I'll look it over with them later</p>",
        "id": 194838163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491298
    },
    {
        "content": "<p>so in general if you want to focus on MIR, <a href=\"https://github.com/rust-lang/rust/issues/69826\" title=\"https://github.com/rust-lang/rust/issues/69826\">#69826</a> is a good bet to start</p>",
        "id": 194838170,
        "sender_full_name": "tmandry",
        "timestamp": 1587491301
    },
    {
        "content": "<p>ah, nice</p>",
        "id": 194838197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491312
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/62958\" title=\"https://github.com/rust-lang/rust/issues/62958\">https://github.com/rust-lang/rust/issues/62958</a> might be a good one to look at</p>",
        "id": 194838229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491328
    },
    {
        "content": "<blockquote>\n<p>Async fn doubles argument size <a href=\"https://github.com/rust-lang/rust/issues/62958\" title=\"https://github.com/rust-lang/rust/issues/62958\">#62958</a></p>\n</blockquote>",
        "id": 194838244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491336
    },
    {
        "content": "<p>yeah, I was going to say the same :)</p>",
        "id": 194838256,
        "sender_full_name": "tmandry",
        "timestamp": 1587491344
    },
    {
        "content": "<p>not sure how easy/hard it is</p>",
        "id": 194838277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491360
    },
    {
        "content": "<p>looks hard :)</p>",
        "id": 194838283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491361
    },
    {
        "content": "<p>iirc, basically we need to convert upvars to \"regular\" locals instead of treating them specially</p>",
        "id": 194838310,
        "sender_full_name": "tmandry",
        "timestamp": 1587491377
    },
    {
        "content": "<p>in the generator layout code</p>",
        "id": 194838327,
        "sender_full_name": "tmandry",
        "timestamp": 1587491389
    },
    {
        "content": "<p>this has the benefit that our debuginfo for generators looks much more like a \"normal enum\"</p>",
        "id": 194838393,
        "sender_full_name": "tmandry",
        "timestamp": 1587491411
    },
    {
        "content": "<p>interesting</p>",
        "id": 194838443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491437
    },
    {
        "content": "<p>there might be some things that are difficult about this, I don't remember..</p>",
        "id": 194838717,
        "sender_full_name": "tmandry",
        "timestamp": 1587491582
    },
    {
        "content": "<p>It seems like the easiest of the generator size issues</p>",
        "id": 194838786,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587491616
    },
    {
        "content": "<p>just from the description, it looks like one of the more common?</p>",
        "id": 194838811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491632
    },
    {
        "content": "<p>but maybe it's more esoteric than the description makes it sound</p>",
        "id": 194838848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587491642
    },
    {
        "content": "<p>oh it's definitely common =)</p>",
        "id": 194839490,
        "sender_full_name": "tmandry",
        "timestamp": 1587491927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I added some notes to <a href=\"https://github.com/rust-lang/rust/issues/62958\" title=\"https://github.com/rust-lang/rust/issues/62958\">#62958</a> <a href=\"https://github.com/rust-lang/rust/issues/62958#issuecomment-617458627\" title=\"https://github.com/rust-lang/rust/issues/62958#issuecomment-617458627\">here</a> if you want to take a look</p>",
        "id": 194872966,
        "sender_full_name": "tmandry",
        "timestamp": 1587510669
    }
]