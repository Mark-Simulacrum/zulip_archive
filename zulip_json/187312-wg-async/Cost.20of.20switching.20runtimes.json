[
    {
        "content": "<p>We have a few stories which highlight the fact that choosing a runtime upfront can be quite expensive. Do we feel that we are properly representing the cost of switching runtimes when a project is already fairly mature? I think we have the hope that runtimes are generally fairly swappable, but this is definitely not the case currently, and I don't think we have a story that reflects this. Thoughts?</p>",
        "id": 234637050,
        "sender_full_name": "rylev",
        "timestamp": 1618475375
    },
    {
        "content": "<p>Definitely painful, even between versions of the same one (tokio). But unclear to me how to solve generically given that runtimes do tend to provide not only the event loop bit also a number of APIs built on it.</p>",
        "id": 234645976,
        "sender_full_name": "nagisa",
        "timestamp": 1618479873
    },
    {
        "content": "<p>This feels like a different kind of function coloring problem but in this case one that occurs implicitly and is not immediately apparent before you're hitting problems.</p>",
        "id": 234646116,
        "sender_full_name": "nagisa",
        "timestamp": 1618479942
    },
    {
        "content": "<p>I think that's a great idea; the fact that it is not clear how to solve it is not a reason to avoid talking about it</p>",
        "id": 234675805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618493785
    },
    {
        "content": "<p>quite the opposite, from my point of view</p>",
        "id": 234675858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618493801
    },
    {
        "content": "<p>Having a set of API designs that are <em>recommended</em> to be implemented the same by every runtime would be a major plus point.<br>\nIt would make switching runtimes easy but also integrates really well with a runtime-agnostic library (<a href=\"https://github.com/rust-lang/wg-async-foundations/issues/45\">#45</a>)</p>",
        "id": 234676672,
        "sender_full_name": "Stu",
        "timestamp": 1618494074
    }
]