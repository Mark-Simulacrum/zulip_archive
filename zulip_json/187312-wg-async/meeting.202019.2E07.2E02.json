[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> -- meeting?</p>",
        "id": 169498566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087048
    },
    {
        "content": "<p>I'm somewhat available (on a train), so forgive if I might be delayed from time to time.</p>",
        "id": 169498629,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1562087105
    },
    {
        "content": "<p>Obviously the biggest announcement: we've opened a <a href=\"https://github.com/rust-lang/rust/issues/62149\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62149\">stabilization issue</a></p>",
        "id": 169498637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087115
    },
    {
        "content": "<p>I made <a href=\"https://github.com/rust-lang/rust/issues/62214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62214\">#62214</a> to for <code>#![feature(async_closure)]</code> to satisfy the blocking issue <a href=\"https://github.com/rust-lang/rust/issues/62214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62214\">#62214</a> and then <a href=\"https://github.com/rust-lang/rust/issues/62292\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62292\">#62292</a> will do the actual feature gate split.</p>",
        "id": 169498714,
        "sender_full_name": "centril",
        "timestamp": 1562087163
    },
    {
        "content": "<p>We have <a href=\"https://github.com/rust-lang/rust/issues/62236\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62236\">#62236</a> to move some tests, which <a href=\"https://github.com/rust-lang/rust/issues/62270\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62270\">#62270</a> will fix.</p>",
        "id": 169498752,
        "sender_full_name": "centril",
        "timestamp": 1562087198
    },
    {
        "content": "<p>Also, <a href=\"https://github.com/rust-lang/rust/issues/61922\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61922\">#61922</a> just landed for some space optimizations.</p>",
        "id": 169498758,
        "sender_full_name": "centril",
        "timestamp": 1562087212
    },
    {
        "content": "<p>I guess the question is: what bits of engineering work remain that are not considering blocking</p>",
        "id": 169498825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087276
    },
    {
        "content": "<p>I also made <a href=\"https://github.com/rust-lang/rust/issues/62293\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62293\">#62293</a> to remove the <code>await!</code> macro; but I will split some things out from that PR solely for the purpose of test coverage.</p>",
        "id": 169498827,
        "sender_full_name": "centril",
        "timestamp": 1562087276
    },
    {
        "content": "<p>er, sorry, I meant that are not represented well by issues</p>",
        "id": 169498882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087287
    },
    {
        "content": "<p>I guess let's review the issues that are not yet categorized</p>",
        "id": 169498916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087327
    },
    {
        "content": "<p>To start <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+-label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred++-label%3AAsyncAwait-Unclear\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+-label%3AAsyncAwait-Blocking+-label%3AAsyncAwait-Deferred++-label%3AAsyncAwait-Unclear\">new issues without any code</a></p>",
        "id": 169498927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087337
    },
    {
        "content": "<blockquote>\n<p>Mutually recursive <code>async fn</code>s are hard to make <code>Send</code> <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">#62284</a></p>\n</blockquote>",
        "id": 169498957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I assume you don't consider this a blocker? This is presumably related to the trait system reporting a cycle?</p>",
        "id": 169498986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087394
    },
    {
        "content": "<p>I'm not sure what to think, seems pretty confusing</p>",
        "id": 169499072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087449
    },
    {
        "content": "<blockquote>\n<p>Move tests in <code>src/test/run-pass/async-await</code> -&gt; <code>src/test/ui/async-await</code> <a href=\"https://github.com/rust-lang/rust/issues/62236\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62236\">#62236</a></p>\n</blockquote>",
        "id": 169499113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087494
    },
    {
        "content": "<p>has a PR already...</p>",
        "id": 169499118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087498
    },
    {
        "content": "<p>Labeled as Deferred</p>",
        "id": 169499140,
        "sender_full_name": "centril",
        "timestamp": 1562087517
    },
    {
        "content": "<p>but I think it will land with no problem in any case</p>",
        "id": 169499183,
        "sender_full_name": "centril",
        "timestamp": 1562087524
    },
    {
        "content": "<p>yes.</p>",
        "id": 169499202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087551
    },
    {
        "content": "<p>On the topic of test suite:</p>",
        "id": 169499207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ugh...  <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a45fcd19dad3ab5a2b9880739e70dd95\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a45fcd19dad3ab5a2b9880739e70dd95\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a45fcd19dad3ab5a2b9880739e70dd95</a> gives me:</p>\n<div class=\"codehilite\"><pre><span></span>warning[E0381]: use of possibly uninitialized variable: `_`\n  --&gt; src/lib.rs:17:13\n   |\n17 |     let _ = foo().await;\n   |             ^^^^^^^^^^^ use of possibly uninitialized value\n   |\n   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n   = note: for more information, try `rustc --explain E0729`\n</pre></div>",
        "id": 169499209,
        "sender_full_name": "centril",
        "timestamp": 1562087569
    },
    {
        "content": "<p>Er, sorry, moving on to <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\">blocking issue review</a></p>",
        "id": 169499233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087585
    },
    {
        "content": "<p>(regarding <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">#62284</a>)</p>",
        "id": 169499240,
        "sender_full_name": "centril",
        "timestamp": 1562087592
    },
    {
        "content": "<p>er, wait, ok, jumping back :)</p>",
        "id": 169499272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087624
    },
    {
        "content": "<p>we didn't really resolve <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">#62284</a>.</p>",
        "id": 169499279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087630
    },
    {
        "content": "<p>also, um, yeah, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> .. what's up with that?</p>",
        "id": 169499356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087668
    },
    {
        "content": "<p>beats me...</p>",
        "id": 169499363,
        "sender_full_name": "centril",
        "timestamp": 1562087677
    },
    {
        "content": "<p>seems...worth filing an issue over</p>",
        "id": 169499389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087703
    },
    {
        "content": "<p>on it</p>",
        "id": 169499420,
        "sender_full_name": "centril",
        "timestamp": 1562087729
    },
    {
        "content": "<p>yeah I hit that yesterday</p>",
        "id": 169499501,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087768
    },
    {
        "content": "<p>and actually still have an issue box open that I didn't hit submit on for it :)</p>",
        "id": 169499529,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087790
    },
    {
        "content": "<p>I see though that the cycle error isn't quite what I expeted for <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">#62284</a></p>",
        "id": 169499582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087837
    },
    {
        "content": "<p>it does seem to me like this is something one could hit...relatively easily?</p>",
        "id": 169499595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087846
    },
    {
        "content": "<p>oh yeah</p>",
        "id": 169499630,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087876
    },
    {
        "content": "<p>you hit it constantly if you try and write recursive code</p>",
        "id": 169499680,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> filed as <a href=\"https://github.com/rust-lang/rust/issues/62312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62312\">https://github.com/rust-lang/rust/issues/62312</a></p>",
        "id": 169499695,
        "sender_full_name": "centril",
        "timestamp": 1562087896
    },
    {
        "content": "<p>I just try to advocate not doing that ;)</p>",
        "id": 169499703,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087901
    },
    {
        "content": "<p>but obviously that's not a good answer</p>",
        "id": 169499711,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562087906
    },
    {
        "content": "<p>do we consider that blocking then? seems like, per the standards we've been doing, that perhaps we ought to</p>",
        "id": 169499723,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087915
    },
    {
        "content": "<p>we'll want to dedicate some time to understanding the problem</p>",
        "id": 169499740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087929
    },
    {
        "content": "<p>I think so; at minimum the C-future-compat bit sounds ominous</p>",
        "id": 169499749,
        "sender_full_name": "centril",
        "timestamp": 1562087934
    },
    {
        "content": "<p>e.g. shipping a new soundness hole is a no-no for me</p>",
        "id": 169499793,
        "sender_full_name": "centril",
        "timestamp": 1562087957
    },
    {
        "content": "<p>er, sorry, I was referring to <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">#62284</a>; but yes there is also <a href=\"https://github.com/rust-lang/rust/issues/62312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62312\">#62312</a> to consider</p>",
        "id": 169499799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087961
    },
    {
        "content": "<p>I marked them both as blocking but I guess that means we need to dedicate some time to digging into them</p>",
        "id": 169499866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562087999
    },
    {
        "content": "<p>in terms of our <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Blocking+\">existing blocking issues</a> ...</p>",
        "id": 169499957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088025
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> tells me that </p>\n<blockquote>\n<p>increase test coverage for async-await <a href=\"https://github.com/rust-lang/rust/issues/62121\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62121\">#62121</a> </p>\n</blockquote>\n<p>is proceeded relatively well</p>",
        "id": 169499982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088040
    },
    {
        "content": "<p>sgtm;</p>\n<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> feel free to fill in <a href=\"https://github.com/rust-lang/rust/issues/62312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62312\">#62312</a> if you have more details</p>",
        "id": 169499983,
        "sender_full_name": "centril",
        "timestamp": 1562088040
    },
    {
        "content": "<p>I think that </p>\n<blockquote>\n<p>type inference doesn't work in async fn that return Box&lt;dyn SomeTrait&gt; <a href=\"https://github.com/rust-lang/rust/issues/60424\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60424\">#60424</a> </p>\n</blockquote>\n<p>is somewhat \"at risk\"</p>",
        "id": 169499996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088051
    },
    {
        "content": "<p>that is, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> and I looked some into it, the thing I thought might fix it seemed to have led to complications, and afaik we didn't dig much further yet</p>",
        "id": 169500040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088073
    },
    {
        "content": "<blockquote>\n<p>async fn should support multiple lifetimes <a href=\"https://github.com/rust-lang/rust/issues/56238\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56238\">#56238</a> </p>\n</blockquote>\n<p>ought to land \"real soon now\"</p>",
        "id": 169500059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hopefully you have more time after <a href=\"https://github.com/rust-lang/rust/issues/56238\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56238\">#56238</a> lands</p>",
        "id": 169500070,
        "sender_full_name": "centril",
        "timestamp": 1562088100
    },
    {
        "content": "<p>so basically the new issues (above) and <a href=\"https://github.com/rust-lang/rust/issues/60424\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60424\">#60424</a> are the major ones</p>",
        "id": 169500073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088102
    },
    {
        "content": "<p>I can raise the prio of <a href=\"https://github.com/rust-lang/rust/issues/56238\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56238\">#56238</a></p>",
        "id": 169500099,
        "sender_full_name": "centril",
        "timestamp": 1562088119
    },
    {
        "content": "<p>(yeah, I've got a fix for the ICE and I'm re-running tests with <code>--bless</code> now)</p>",
        "id": 169500103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088120
    },
    {
        "content": "<p>should we look at the uncategorized bugs real quick?</p>",
        "id": 169500161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088137
    },
    {
        "content": "<p>er, I mean the <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Unclear+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AA-async-await+label%3AAsyncAwait-Unclear+\">bugs labeled AsyncAwait-Unclear</a></p>",
        "id": 169500190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088156
    },
    {
        "content": "<blockquote>\n<p>Using associated types in async fn type break typing <a href=\"https://github.com/rust-lang/rust/issues/60414\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60414\">#60414</a> </p>\n</blockquote>\n<p>this came up on the stabilization issue</p>",
        "id": 169500231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hmm; did you forget to label <a href=\"https://github.com/rust-lang/rust/issues/62312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62312\">https://github.com/rust-lang/rust/issues/62312</a> and <a href=\"https://github.com/rust-lang/rust/issues/62284\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62284\">https://github.com/rust-lang/rust/issues/62284</a> btw?</p>",
        "id": 169500251,
        "sender_full_name": "centril",
        "timestamp": 1562088197
    },
    {
        "content": "<p>not sure what happened there</p>",
        "id": 169500360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088258
    },
    {
        "content": "<p>I <em>thought</em> I labeled them</p>",
        "id": 169500364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088262
    },
    {
        "content": "<p>maybe github is taking \"eventually\" in \"eventually consistent\" a bit too far :P</p>",
        "id": 169500397,
        "sender_full_name": "centril",
        "timestamp": 1562088290
    },
    {
        "content": "<p>oh, I didn't \"click away\" from the dialog box</p>",
        "id": 169500402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088296
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Using associated types in async fn type break typing <a href=\"https://github.com/rust-lang/rust/issues/60414\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60414\">#60414</a> </p>\n</blockquote>\n<p>this came up on the stabilization issue</p>\n</blockquote>\n<p>there is a pending fix for this that I have to review (I can do that today)</p>",
        "id": 169500421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088313
    },
    {
        "content": "<p>it looked fine when I glanced at it before</p>",
        "id": 169500432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088323
    },
    {
        "content": "<p>Neat</p>",
        "id": 169500454,
        "sender_full_name": "centril",
        "timestamp": 1562088339
    },
    {
        "content": "<p>I don't think there's much future compat risk here but it's prob a moot point whether we mark it as blocking or not</p>",
        "id": 169500536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088365
    },
    {
        "content": "<blockquote>\n<p>Inherent async fn returning <code>Self</code> treats type's lifetime parameters as <code>'static</code> <a href=\"https://github.com/rust-lang/rust/issues/61949\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61949\">#61949</a></p>\n</blockquote>",
        "id": 169500542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088368
    },
    {
        "content": "<p>that one's the same as <a href=\"https://github.com/rust-lang/rust/issues/53613\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53613\">https://github.com/rust-lang/rust/issues/53613</a></p>",
        "id": 169500569,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088389
    },
    {
        "content": "<p>Not sure I agree with that; when it is part of <code>-&gt; impl Trait</code> surface syntax it is much more obscure, but it becomes more prominent in <code>async fn</code></p>",
        "id": 169500601,
        "sender_full_name": "centril",
        "timestamp": 1562088419
    },
    {
        "content": "<p>sure, I'm saying the underlying compiler bug is the same</p>",
        "id": 169500635,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088447
    },
    {
        "content": "<p>(which makes fixing it later harder)</p>",
        "id": 169500638,
        "sender_full_name": "centril",
        "timestamp": 1562088448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> granted</p>",
        "id": 169500645,
        "sender_full_name": "centril",
        "timestamp": 1562088455
    },
    {
        "content": "<p>yeah I forgot about that</p>",
        "id": 169500668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088477
    },
    {
        "content": "<p>hmm</p>",
        "id": 169500669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088477
    },
    {
        "content": "<p>I agree it seems pretty bad-- there's a decently obvious future-compat hazard there</p>",
        "id": 169500716,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088485
    },
    {
        "content": "<p>well, it .. I guess it is fixable via some ... hacky logic</p>",
        "id": 169500720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088487
    },
    {
        "content": "<p>yeah but it's messy as heck</p>",
        "id": 169500738,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088503
    },
    {
        "content": "<p>yes</p>",
        "id": 169500744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088506
    },
    {
        "content": "<p>I'd be fine with e.g. a temporary hack to make it an error and preserve future compat</p>",
        "id": 169500745,
        "sender_full_name": "centril",
        "timestamp": 1562088508
    },
    {
        "content": "<p>the hacky logic is basically tracking the lifetimes that appear in Self</p>",
        "id": 169500766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088527
    },
    {
        "content": "<p>but that temporary hack might be as involved as the fix... idk</p>",
        "id": 169500770,
        "sender_full_name": "centril",
        "timestamp": 1562088527
    },
    {
        "content": "<p>and when we visit the Self type</p>",
        "id": 169500771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088529
    },
    {
        "content": "<p>you mean making it an error to return <code>Self</code> from <code>async fn</code> or <code>-&gt; impl Trait</code>?</p>",
        "id": 169500772,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088530
    },
    {
        "content": "<p>we visit that list</p>",
        "id": 169500780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> we could do that yeah</p>",
        "id": 169500789,
        "sender_full_name": "centril",
        "timestamp": 1562088541
    },
    {
        "content": "<p>prohibiting Self is the other option, but it feels...idk.</p>",
        "id": 169500812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088553
    },
    {
        "content": "<p>it feels pretty bad</p>",
        "id": 169500820,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088558
    },
    {
        "content": "<p>it feels ungreat, yes :)</p>",
        "id": 169500826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088563
    },
    {
        "content": "<p>I think the \"track lifetimes in lowering\" doesn't seem <em>that</em> complicated..?</p>",
        "id": 169500838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088573
    },
    {
        "content": "<p>though yeah it just feels like \"egads we are clearly doing something wrong\"</p>",
        "id": 169500855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088587
    },
    {
        "content": "<p>Banning <code>Self</code> feels like a fairly syntactic measure that is at least easy to have confidence in</p>",
        "id": 169500862,
        "sender_full_name": "centril",
        "timestamp": 1562088592
    },
    {
        "content": "<p>e.g. you can do it in ast_validation</p>",
        "id": 169500917,
        "sender_full_name": "centril",
        "timestamp": 1562088605
    },
    {
        "content": "<p>well I gotta run to a meeting but the question is: blocker or not? seems like yes</p>",
        "id": 169500969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088646
    },
    {
        "content": "<p>Yes imo</p>",
        "id": 169500980,
        "sender_full_name": "centril",
        "timestamp": 1562088657
    },
    {
        "content": "<p>for those purposes, banning self is an \"ok\" fix, I agree</p>",
        "id": 169500983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088659
    },
    {
        "content": "<p>I'm also ok with trying to do the \"proper\" fix</p>",
        "id": 169501011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088680
    },
    {
        "content": "<p>(And I'm personally fine with a special feature gate... we did similar things with <code>const fn</code>... some folks complained, but most were happy we shipped <code>const fn</code> as a result)</p>",
        "id": 169501021,
        "sender_full_name": "centril",
        "timestamp": 1562088687
    },
    {
        "content": "<p>For sure, the proper fix is well... more proper :P</p>",
        "id": 169501043,
        "sender_full_name": "centril",
        "timestamp": 1562088706
    },
    {
        "content": "<p>Yeah I have no opinion on this-- it seems like we want to fix it at some point obv., and I can't think of a non-hacky way to do that</p>",
        "id": 169501055,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088716
    },
    {
        "content": "<p>right</p>",
        "id": 169501118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088744
    },
    {
        "content": "<p>not without a bigger refactoring</p>",
        "id": 169501121,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562088748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  well banning <code>Self</code> in ast_validation with a visitor seems easy enough?</p>",
        "id": 169501126,
        "sender_full_name": "centril",
        "timestamp": 1562088753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> sure, that's super easy.</p>",
        "id": 169501375,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088906
    },
    {
        "content": "<p>but obv. it would also be a breaking change if we did it for <code>-&gt; impl Trait</code> as well</p>",
        "id": 169501402,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088924
    },
    {
        "content": "<p>so that's kind of unfortunate</p>",
        "id": 169501412,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562088929
    },
    {
        "content": "<p>Oh; I just mean for <code>async fn</code></p>",
        "id": 169501428,
        "sender_full_name": "centril",
        "timestamp": 1562088941
    },
    {
        "content": "<p>it's in the AST so lowering to <code>impl Trait</code> hasn't happened yet</p>",
        "id": 169501461,
        "sender_full_name": "centril",
        "timestamp": 1562088962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> oh sure, I meant if we wanted to try and fix it in <code>impl Trait</code> then we'd be avoiding the backcompat hazard that exists there already</p>",
        "id": 169501556,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562089020
    },
    {
        "content": "<p>sure, my view is basically that the proper fix would be nicest of all but I'll settle for a big hammer just for <code>async fn</code> if need be :P</p>",
        "id": 169501600,
        "sender_full_name": "centril",
        "timestamp": 1562089072
    },
    {
        "content": "<p>(Or maybe \"large fishing net\" is the more appropriate analogy :D )</p>",
        "id": 169501667,
        "sender_full_name": "centril",
        "timestamp": 1562089109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  btw, did you see my note to you on Discord re. <a href=\"https://github.com/rust-lang/rust/issues/62292\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62292\">#62292</a>? (i.e. feel free to r? that)</p>",
        "id": 169501705,
        "sender_full_name": "centril",
        "timestamp": 1562089150
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> yeah i did, thanks</p>",
        "id": 169502339,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1562089568
    }
]