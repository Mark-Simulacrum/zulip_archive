[
    {
        "content": "<p>So on the topic of \"Inherent async fn returning <code>Self</code> treats type's lifetime parameters as <code>'static</code>\" (<a href=\"https://github.com/rust-lang/rust/issues/61949\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61949\">#61949</a>) -- we had discussed trying to hack together a feature-gate for <code>async fn</code>. I found that there are other, similar problems around projections. (In particular, <code>T::Item</code> can expand to <code>&lt;T as Foo&lt;'a&gt;&gt;::Item</code>...). </p>\n<p>I think we should separate these two issues, though:</p>\n<ul>\n<li>we can fix the <code>Self</code> issue properly, or at least feature-gate it, readily enough</li>\n<li>the <code>T::Item</code> issue is harder and more subtle, but also less common for people to stumble on</li>\n</ul>",
        "id": 169898088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562614597
    },
    {
        "content": "<p>lol apparently I filed <a href=\"https://github.com/rust-lang/rust/issues/51525\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51525\">https://github.com/rust-lang/rust/issues/51525</a> in 2018 and promptly forgot about it</p>",
        "id": 169903013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562618477
    },
    {
        "content": "<p>I'm going to try and write-up some mentoring instructions to resolve <a href=\"https://github.com/rust-lang/rust/issues/61949\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61949\">#61949</a>, but ignoring the issue described in <a href=\"https://github.com/rust-lang/rust/issues/51525\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51525\">#51525</a>, which I think we should try to solve separately -- perhaps by just reporting an error if we expand to <code>&lt;T as Foo&lt;'a&gt;&gt;::Bar</code> in an impl trait for now.</p>",
        "id": 170442956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562669990
    }
]