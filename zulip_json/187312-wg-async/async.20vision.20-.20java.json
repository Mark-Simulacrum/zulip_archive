[
    {
        "content": "<blockquote>\n<p>and another had just come from the java producers universe</p>\n</blockquote>\n<p>also, we don't have a character with <strong>Java</strong> background--- is this a blindspot? I know at AWS, Java is pretty common, I imagine the same is true at Google (Android, if nothing else, but probably elsewhere).</p>",
        "id": 228562889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614764612
    },
    {
        "content": "<p>(lurker comment) Yes, Java is pretty big at Google. Also outside of Android. More interestingly: A lot of Java code at Google is heavily asynchronous.</p>",
        "id": 228572353,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614768777
    },
    {
        "content": "<p>I've been thinking about this</p>",
        "id": 228572764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769006
    },
    {
        "content": "<p>I think that Grace (the principal engineer) should be the connection to Java</p>",
        "id": 228572778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224941\">@Carl Lerche</span> and I were talking through a sample \"Grace status quo\" story yesterday from his experience and I realize we already had Grace working on a Java service that was porting some part of it to Rust</p>",
        "id": 228572825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769051
    },
    {
        "content": "<p>She also has C++ knowledge, I think that's important, but not exclusive</p>",
        "id": 228572842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769072
    },
    {
        "content": "<p>I imagine that whatever Java patterns we want to talk about can come in through that angle</p>",
        "id": 228572904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"368117\">Michael Forster</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/async.20vision.20-.20status.20quo/near/228572353\">said</a>:</p>\n<blockquote>\n<p>A lot of Java code at Google is heavily asynchronous.</p>\n</blockquote>\n<p>this is interesting-- I don't know much about how Java async code looks</p>",
        "id": 228573004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769150
    },
    {
        "content": "<p>broke this out into its own topic</p>",
        "id": 228573069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"368117\">@Michael Forster</span> are there some good examples that are public of \"async java code\" to compare again?</p>",
        "id": 228573146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614769209
    },
    {
        "content": "<p>The problem here is that a lot of the async code is part of the server side business logic, which is not public. The main original approach is visible in Google's guava library: <a href=\"https://github.com/google/guava/wiki/ListenableFutureExplained\">https://github.com/google/guava/wiki/ListenableFutureExplained</a></p>",
        "id": 228574823,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770125
    },
    {
        "content": "<p>Guava is Google's most fundamental library, basically our standard library.</p>",
        "id": 228574861,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770152
    },
    {
        "content": "<p>There is also newer approach that now gets used pervasively, but which isn't public.</p>",
        "id": 228574944,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770181
    },
    {
        "content": "<p>It's a Guice based mechanism to actually eliminate all asynchronous code from business logic.</p>",
        "id": 228575483,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770495
    },
    {
        "content": "<p>Instead of writing futures, you more or less decoratively define a graph of synchronous nodes that gets executed asynchronously by a runtime.</p>",
        "id": 228575757,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770654
    },
    {
        "content": "<p>The general conclusion is that asynchronous code in Java is required for server-side development, but that it's too painful to use.</p>",
        "id": 228575867,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770723
    },
    {
        "content": "<p>It's important to understand that most server-side business logic is also heavily distributed. Having an RPC in the middle of processing, or stitching together dozens of RPC calls is the norm. And that gets out of hand pretty quickly when writing closures manually.</p>",
        "id": 228576038,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614770836
    },
    {
        "content": "<p>Found an example: <a href=\"https://github.com/bazelbuild/bazel/blob/master/src/main/java/com/google/devtools/build/lib/remote/GrpcCacheClient.java\">https://github.com/bazelbuild/bazel/blob/master/src/main/java/com/google/devtools/build/lib/remote/GrpcCacheClient.java</a></p>",
        "id": 228578661,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614772384
    },
    {
        "content": "<p>This is one of the more complex examples.</p>",
        "id": 228578732,
        "sender_full_name": "Michael Forster",
        "timestamp": 1614772440
    },
    {
        "content": "<p>I'm pretty ignorant of java in general, but I'm wondering if we do add a persona for this if we should expand to include kotlin as well, which AIUI has its own async/await primitives, separate from java's</p>",
        "id": 228654780,
        "sender_full_name": "tmandry",
        "timestamp": 1614800603
    }
]