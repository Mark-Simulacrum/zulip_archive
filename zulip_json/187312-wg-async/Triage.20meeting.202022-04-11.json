[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>! It's time for our triage meeting</p>",
        "id": 278571843,
        "sender_full_name": "eholk",
        "timestamp": 1649691133
    },
    {
        "content": "<p>Go ahead and leave a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here</p>",
        "id": 278571963,
        "sender_full_name": "eholk",
        "timestamp": 1649691186
    },
    {
        "content": "<p>We have the usual agenda this week:</p>\n<ul>\n<li>Announcements and introductions</li>\n<li>New issue <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">triage</a></li>\n<li>Discussion on progress/blockers around sprint bugs</li>\n</ul>",
        "id": 278572133,
        "sender_full_name": "eholk",
        "timestamp": 1649691261
    },
    {
        "content": "<p>Let's start off with announcements</p>",
        "id": 278572200,
        "sender_full_name": "eholk",
        "timestamp": 1649691295
    },
    {
        "content": "<p>The current sprint wraps up this week. We have our sprint planning meeting on Thursday. As a reminder, it'd be good to try and go over the <a href=\"https://hackmd.io/gPgXC4fsTZOgOnd-Bwhoag\">planning doc</a> ahead of time</p>",
        "id": 278572296,
        "sender_full_name": "eholk",
        "timestamp": 1649691343
    },
    {
        "content": "<p>That's all I have for announcements. Does anyone else have something?</p>",
        "id": 278572387,
        "sender_full_name": "eholk",
        "timestamp": 1649691370
    },
    {
        "content": "<p>None from me</p>",
        "id": 278572442,
        "sender_full_name": "tmandry",
        "timestamp": 1649691394
    },
    {
        "content": "<p>Sounds good, let's move on to triage then.<br>\n<span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-topic</p>",
        "id": 278572581,
        "sender_full_name": "eholk",
        "timestamp": 1649691464
    },
    {
        "content": "<p>Does anyone have something to add on the current topic?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if not.</p>",
        "id": 278572586,
        "sender_full_name": "triagebot",
        "timestamp": 1649691464
    },
    {
        "content": "<p>It looks like we have two issues this week</p>",
        "id": 278572692,
        "sender_full_name": "eholk",
        "timestamp": 1649691498
    },
    {
        "content": "<p><strong>Improve error message when trying to use ? in an async block that does not return a FromResidual type <a href=\"https://github.com/rust-lang/rust/issues/94944\">#94944</a></strong></p>",
        "id": 278572789,
        "sender_full_name": "eholk",
        "timestamp": 1649691544
    },
    {
        "content": "<p>Huh, this one is almost a month old, it's a shame we're just now seeing it.</p>",
        "id": 278572829,
        "sender_full_name": "eholk",
        "timestamp": 1649691563
    },
    {
        "content": "<p>that is a bad message, no doubt</p>",
        "id": 278572968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691610
    },
    {
        "content": "<p>I feel like I saw a similar error message once before and I basically gave up on using <code>?</code> because of it</p>",
        "id": 278573049,
        "sender_full_name": "eholk",
        "timestamp": 1649691648
    },
    {
        "content": "<p>is this true for <code>async fn</code></p>",
        "id": 278573093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691666
    },
    {
        "content": "<p>or just for <code>async move</code> blocks</p>",
        "id": 278573106,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691670
    },
    {
        "content": "<p>/me tests</p>",
        "id": 278573149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691691
    },
    {
        "content": "<p>Oh, right, the sync message is okay, the <code>async</code> version is bad</p>",
        "id": 278573165,
        "sender_full_name": "eholk",
        "timestamp": 1649691698
    },
    {
        "content": "<p>with <code>async fn</code>...</p>",
        "id": 278573191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691709
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0277</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">?</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">another</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">that</span><span class=\"w\"> </span><span class=\"n\">implements</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">FromResidual</span><span class=\"err\">`</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">________________</span><span class=\"o\">-</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"nb\">Result</span>::<span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                             </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">?</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">accept</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">?</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">FromResidual</span><span class=\"o\">&lt;</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Infallible</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 278573200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691712
    },
    {
        "content": "<p>the problem is specific to async blocks</p>",
        "id": 278573218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691719
    },
    {
        "content": "<p>which (somewhat) lowers the priority</p>",
        "id": 278573387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691767
    },
    {
        "content": "<p>but still a problem</p>",
        "id": 278573393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691769
    },
    {
        "content": "<p>This seems like a good (hopefully easy) polish bug</p>",
        "id": 278573423,
        "sender_full_name": "eholk",
        "timestamp": 1649691783
    },
    {
        "content": "<p>playground keeps timing out for me &gt;.&gt;</p>",
        "id": 278573425,
        "sender_full_name": "tmandry",
        "timestamp": 1649691784
    },
    {
        "content": "<p>Okay, I think we can move on to the next one</p>",
        "id": 278573739,
        "sender_full_name": "eholk",
        "timestamp": 1649691905
    },
    {
        "content": "<p><strong>Confusing error message with borrows and dyn Error <a href=\"https://github.com/rust-lang/rust/issues/95404\">#95404</a></strong></p>",
        "id": 278573782,
        "sender_full_name": "eholk",
        "timestamp": 1649691928
    },
    {
        "content": "<p>Oh, this looks like the one that intersection regions would solve!</p>",
        "id": 278573838,
        "sender_full_name": "eholk",
        "timestamp": 1649691958
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/63033\">#63033</a></p>",
        "id": 278573911,
        "sender_full_name": "eholk",
        "timestamp": 1649691974
    },
    {
        "content": "<p>(side note that I've been doing some theoretical work on that)</p>",
        "id": 278573957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649691994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-04-11/near/278573957\">said</a>:</p>\n<blockquote>\n<p>(side note that I've been doing some theoretical work on that)</p>\n</blockquote>\n<p>We should meet sometime to talk about that some more, since I keep signing up to work on it for the sprint and not doing anything</p>",
        "id": 278574035,
        "sender_full_name": "eholk",
        "timestamp": 1649692024
    },
    {
        "content": "<p>I'm readinv this issue</p>",
        "id": 278574265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692117
    },
    {
        "content": "<p>this isn't <em>really</em> intersecting regions I don't think</p>",
        "id": 278574300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692136
    },
    {
        "content": "<p>Interesting that adding a lifetime fixes it. Maybe that would work on <a href=\"https://github.com/rust-lang/rust/issues/63033\">#63033</a> as well? If so it might make sense to give a better error message here</p>",
        "id": 278574305,
        "sender_full_name": "eholk",
        "timestamp": 1649692138
    },
    {
        "content": "<p>I'm a bit confused what's going on here</p>",
        "id": 278574343,
        "sender_full_name": "tmandry",
        "timestamp": 1649692157
    },
    {
        "content": "<p>well</p>",
        "id": 278574344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692157
    },
    {
        "content": "<p>actually I have no idea what is happening :)</p>",
        "id": 278574417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692193
    },
    {
        "content": "<p>It looks to me like the compiler need to pick a lifetime for the <code>Box&lt;dyn std::error::Error&gt;</code>, since an explicit one isn't given</p>",
        "id": 278574427,
        "sender_full_name": "eholk",
        "timestamp": 1649692199
    },
    {
        "content": "<p>no</p>",
        "id": 278574471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692204
    },
    {
        "content": "<p>the default is <code>'static</code></p>",
        "id": 278574484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692208
    },
    {
        "content": "<p>in a case like that,anyway</p>",
        "id": 278574496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692215
    },
    {
        "content": "<p>unless maybe the desugaring is messing with it somehow</p>",
        "id": 278574509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692221
    },
    {
        "content": "<p>ah, nevermind then :)</p>",
        "id": 278574511,
        "sender_full_name": "eholk",
        "timestamp": 1649692221
    },
    {
        "content": "<p>It sounds like removing one of the <code>&amp;str</code> parameters fixes it, which is the part that sounds like <a href=\"https://github.com/rust-lang/rust/issues/63033\">#63033</a>. Since without that there's only one lifetime parameter to the functions, but having two <code>&amp;str</code>s means there are two otherwise equal lifetimes and so there's no minimal choice between the two</p>",
        "id": 278574672,
        "sender_full_name": "eholk",
        "timestamp": 1649692297
    },
    {
        "content": "<p>I don't get this error</p>",
        "id": 278574679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692303
    },
    {
        "content": "<p>so I think the async fn is going to return a future that captures all of the arguments (regardless of whether it <em>needs</em> to)</p>",
        "id": 278574705,
        "sender_full_name": "tmandry",
        "timestamp": 1649692312
    },
    {
        "content": "<p>oh, never mind, I do</p>",
        "id": 278574731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692321
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-04-11/near/278574705\">said</a>:</p>\n<blockquote>\n<p>so I think the async fn is going to return a future that captures all of the arguments (regardless of whether it <em>needs</em> to)</p>\n</blockquote>\n<p>yes</p>",
        "id": 278574813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692342
    },
    {
        "content": "<p>hmm</p>",
        "id": 278574823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692348
    },
    {
        "content": "<p>OH</p>",
        "id": 278574827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"421986\">@eholk</span> I think that I encountered this before---</p>",
        "id": 278574843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692357
    },
    {
        "content": "<p>I think the problem is this</p>",
        "id": 278574865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692366
    },
    {
        "content": "<p>the default is <code>Box&lt;dyn Error + 'static&gt;</code></p>",
        "id": 278574882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692371
    },
    {
        "content": "<p>but</p>",
        "id": 278574886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692373
    },
    {
        "content": "<p>the future identifies an opportunity for subtyping</p>",
        "id": 278574902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692381
    },
    {
        "content": "<p>and hence captures that as <code>Box&lt;dyn Error + 'x&gt;</code></p>",
        "id": 278574912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692387
    },
    {
        "content": "<p>and <em>then</em> there is no meaningful constraint</p>",
        "id": 278574933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692396
    },
    {
        "content": "<p>or no best one</p>",
        "id": 278574939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692399
    },
    {
        "content": "<p>so you were right to identify intersecting regions</p>",
        "id": 278574947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692403
    },
    {
        "content": "<p>i.e., the problem is we wind up not knowing what to pick for <code>'x</code></p>",
        "id": 278575008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692436
    },
    {
        "content": "<p>Yeah, that sounds reasonable</p>",
        "id": 278575094,
        "sender_full_name": "eholk",
        "timestamp": 1649692467
    },
    {
        "content": "<p>we should probably close as a dup</p>",
        "id": 278575140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692493
    },
    {
        "content": "<p>I think this is even the same example as the other issue</p>",
        "id": 278575174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692508
    },
    {
        "content": "<p>remind me.. do opaque types only get to capture a single lifetime in the rustc_middle representation?</p>",
        "id": 278575216,
        "sender_full_name": "tmandry",
        "timestamp": 1649692535
    },
    {
        "content": "<p>no, they can capture many</p>",
        "id": 278575241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692548
    },
    {
        "content": "<p>that's not the problem</p>",
        "id": 278575261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692553
    },
    {
        "content": "<p>the problem is that there is no \"best choice\"</p>",
        "id": 278575490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692641
    },
    {
        "content": "<p>in which stage?</p>",
        "id": 278575629,
        "sender_full_name": "tmandry",
        "timestamp": 1649692695
    },
    {
        "content": "<p>oh, I'm not sure I can close issues...</p>",
        "id": 278575796,
        "sender_full_name": "eholk",
        "timestamp": 1649692782
    },
    {
        "content": "<p>during region inference</p>",
        "id": 278575887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692806
    },
    {
        "content": "<p>I've prob got a write-up somewhere</p>",
        "id": 278575907,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649692812
    },
    {
        "content": "<p>Okay, I think that does it for triage</p>",
        "id": 278576248,
        "sender_full_name": "eholk",
        "timestamp": 1649692942
    },
    {
        "content": "<p>Normally we'd have some time for discussing sprint bugs, but we're a little over time and I need to run to another meeting, so I vote we skip that this week.</p>",
        "id": 278576302,
        "sender_full_name": "eholk",
        "timestamp": 1649692975
    },
    {
        "content": "<p>So, thanks everyone!</p>",
        "id": 278576362,
        "sender_full_name": "eholk",
        "timestamp": 1649693002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-meeting</p>",
        "id": 278576371,
        "sender_full_name": "eholk",
        "timestamp": 1649693007
    },
    {
        "content": "<p>Does anyone have something to bring up?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if you're ready to end the meeting.</p>",
        "id": 278576375,
        "sender_full_name": "triagebot",
        "timestamp": 1649693008
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span> for running the meeting</p>",
        "id": 278578686,
        "sender_full_name": "tmandry",
        "timestamp": 1649694053
    }
]