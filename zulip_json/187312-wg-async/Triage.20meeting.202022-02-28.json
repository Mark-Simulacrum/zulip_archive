[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span>! It's time for our weekly triage meeting</p>",
        "id": 273516249,
        "sender_full_name": "eholk",
        "timestamp": 1646065900
    },
    {
        "content": "<p>Go ahead and give a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> to show you're here</p>",
        "id": 273516372,
        "sender_full_name": "eholk",
        "timestamp": 1646065937
    },
    {
        "content": "<p>Here's the agenda for today:</p>\n<ul>\n<li>Announcements and introductions<br>\n    - Sprint planning meeting this week</li>\n<li>New issue <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">triage</a></li>\n<li>Discussion on progress/blockers around sprint bugs</li>\n</ul>",
        "id": 273516475,
        "sender_full_name": "eholk",
        "timestamp": 1646065982
    },
    {
        "content": "<p>Oh good, someone else it here :)</p>",
        "id": 273517014,
        "sender_full_name": "eholk",
        "timestamp": 1646066207
    },
    {
        "content": "<p>Hi :)</p>",
        "id": 273517075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066232
    },
    {
        "content": "<p>I don't have much in the way of announcements today, but I did want to remind people to check the <a href=\"https://hackmd.io/gPgXC4fsTZOgOnd-Bwhoag?both#2022-02-03\">sprint planning doc</a> before this week's sprint planning meeting.</p>",
        "id": 273517103,
        "sender_full_name": "eholk",
        "timestamp": 1646066250
    },
    {
        "content": "<p>If there are no other announcements, we can move on to triage.</p>",
        "id": 273517246,
        "sender_full_name": "eholk",
        "timestamp": 1646066287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-topic</p>",
        "id": 273517253,
        "sender_full_name": "eholk",
        "timestamp": 1646066291
    },
    {
        "content": "<p>Does anyone have something to add on the current topic?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if not.</p>",
        "id": 273517258,
        "sender_full_name": "triagebot",
        "timestamp": 1646066292
    },
    {
        "content": "<p>It looks like we have <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">no new issues</a>!</p>",
        "id": 273517314,
        "sender_full_name": "eholk",
        "timestamp": 1646066324
    },
    {
        "content": "<p>I was away wed-fri last week, so no real updates here</p>",
        "id": 273517325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066329
    },
    {
        "content": "<p>still catching up on the 222+ unread zulip messages and so forth</p>",
        "id": 273517353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066343
    },
    {
        "content": "<p>I'm impressed you only have 222+ :)</p>",
        "id": 273517380,
        "sender_full_name": "eholk",
        "timestamp": 1646066357
    },
    {
        "content": "<p>I have lots more, but if I read all of them then I'd have less...</p>",
        "id": 273517418,
        "sender_full_name": "eholk",
        "timestamp": 1646066380
    },
    {
        "content": "<p>Anyway, that does it for triage.<br>\n<span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-topic</p>",
        "id": 273517454,
        "sender_full_name": "eholk",
        "timestamp": 1646066397
    },
    {
        "content": "<p>Does anyone have something to add on the current topic?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if not.</p>",
        "id": 273517455,
        "sender_full_name": "triagebot",
        "timestamp": 1646066398
    },
    {
        "content": "<p>I made that number up</p>",
        "id": 273517456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066398
    },
    {
        "content": "<p>Ah</p>",
        "id": 273517510,
        "sender_full_name": "eholk",
        "timestamp": 1646066408
    },
    {
        "content": "<p>it is both too high (I don't actually have 222 privmsgs) and too low (streams I ostensibly track is more like thousands) =)</p>",
        "id": 273517557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066429
    },
    {
        "content": "<p>Ah, that's more like I would have expected :)</p>",
        "id": 273517628,
        "sender_full_name": "eholk",
        "timestamp": 1646066459
    },
    {
        "content": "<p>Anyway, the last topic is discussing progress on sprint bugs</p>",
        "id": 273517722,
        "sender_full_name": "eholk",
        "timestamp": 1646066507
    },
    {
        "content": "<p>I finished up the stuff we were doing on <a href=\"https://github.com/rust-lang/rust/issues/57017\">#57017</a> and put up a PR for it</p>",
        "id": 273517799,
        "sender_full_name": "eholk",
        "timestamp": 1646066527
    },
    {
        "content": "<p>oh, nice!</p>",
        "id": 273517811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066536
    },
    {
        "content": "<p>Let me find it...</p>",
        "id": 273517817,
        "sender_full_name": "eholk",
        "timestamp": 1646066539
    },
    {
        "content": "<p>I'm curious about the refactoring we were talking about</p>",
        "id": 273517825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066543
    },
    {
        "content": "<p>where we eliminate the \"visitor\" entirely in favor of the <code>ExprUseVisitor</code></p>",
        "id": 273517853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273517817\">said</a>:</p>\n<blockquote>\n<p>Let me find it...</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/94309\">https://github.com/rust-lang/rust/pull/94309</a></p>",
        "id": 273517882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066572
    },
    {
        "content": "<p>Yeah, I think that could clean things up a lot</p>",
        "id": 273517886,
        "sender_full_name": "eholk",
        "timestamp": 1646066575
    },
    {
        "content": "<p>Yup, that's it!</p>",
        "id": 273517893,
        "sender_full_name": "eholk",
        "timestamp": 1646066579
    },
    {
        "content": "<p>we should file an issue for that cleanup work</p>",
        "id": 273517905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066585
    },
    {
        "content": "<p>I think it would be a good goal</p>",
        "id": 273517914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066588
    },
    {
        "content": "<p>(but we should land the increment changes first, of course)</p>",
        "id": 273517926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066593
    },
    {
        "content": "<p>Good idea. I'll file an issue.</p>",
        "id": 273517942,
        "sender_full_name": "eholk",
        "timestamp": 1646066603
    },
    {
        "content": "<p>side note:</p>",
        "id": 273517981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066618
    },
    {
        "content": "<p>once this + the generator work lands</p>",
        "id": 273517989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066622
    },
    {
        "content": "<p>I think it'd be cool to write a blog post showcasing how things work better</p>",
        "id": 273518005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066630
    },
    {
        "content": "<p>I'd put it on <a href=\"http://blog.rust-lang.org\">blog.rust-lang.org</a> (not Inside Rust)</p>",
        "id": 273518026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066639
    },
    {
        "content": "<p>Ah, good idea!</p>",
        "id": 273518077,
        "sender_full_name": "eholk",
        "timestamp": 1646066645
    },
    {
        "content": "<p>giving some before/after examples and maybe \"just enough\" details about how the compiler works that people think they understand =)</p>",
        "id": 273518130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066668
    },
    {
        "content": "<p>I've been trying to get myself to blog more (read: at all), so this seems like a good way to do it.</p>",
        "id": 273518149,
        "sender_full_name": "eholk",
        "timestamp": 1646066678
    },
    {
        "content": "<p>(even though they don't)</p>",
        "id": 273518156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066680
    },
    {
        "content": "<p>So on <a href=\"https://github.com/rust-lang/rust/issues/94309\">#94309</a>, there were two changes I made to make things work but I'm not 100% sure about them.</p>",
        "id": 273518263,
        "sender_full_name": "eholk",
        "timestamp": 1646066742
    },
    {
        "content": "<p>The first was I added a separate <code>copy</code> callback to <code>expr_use_visitor::Delegate</code>, to distinguish borrows and copies treated as borrows. I added a default impl so most users can just use the borrow callback as before.</p>",
        "id": 273518411,
        "sender_full_name": "eholk",
        "timestamp": 1646066797
    },
    {
        "content": "<p>I seem to recall us deciding that was necessary, yes</p>",
        "id": 273518510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066838
    },
    {
        "content": "<p>In the generator_interior implementation of copy, it works just like borrow, but doesn't add the value to the borrowed_temporaries list.</p>",
        "id": 273518514,
        "sender_full_name": "eholk",
        "timestamp": 1646066840
    },
    {
        "content": "<p>I left a review suggestion for a comment</p>",
        "id": 273518521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066845
    },
    {
        "content": "<p>(Though writing it made me wonder if even the current code is being too conservative... but I think those changes can wait until the EUV. i.e., ideally, I think we would not care about \"temporaries\" except when we see the borrow callback)</p>",
        "id": 273518585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518521\">said</a>:</p>\n<blockquote>\n<p>I left a review suggestion for a comment</p>\n</blockquote>\n<p>Thanks!</p>",
        "id": 273518638,
        "sender_full_name": "eholk",
        "timestamp": 1646066886
    },
    {
        "content": "<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>",
        "id": 273518750,
        "sender_full_name": "tm",
        "timestamp": 1646066950
    },
    {
        "content": "<p>Do the \"temporaries\" matter if I do something like <code>foo(something, something_else.await)</code>?</p>",
        "id": 273518785,
        "sender_full_name": "eholk",
        "timestamp": 1646066970
    },
    {
        "content": "<p>I don't think temporaries ever matter unless they are borrowed-- it is the <em>borrowing</em> that creates the temporary, essentially</p>",
        "id": 273518844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066993
    },
    {
        "content": "<p>the borrow may be an auto-ref or an explicit <code>&amp;</code></p>",
        "id": 273518860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646066998
    },
    {
        "content": "<p>in the case of <code>foo(something, something_else.await)</code>, the value produced by <code>something</code> is considered by its parent (the call) -- and the <code>await</code> is within that parent</p>",
        "id": 273518944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518750\">said</a>:</p>\n<blockquote>\n<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>\n</blockquote>\n<p>sounds plausible</p>",
        "id": 273518960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067024
    },
    {
        "content": "<p>it seems like the \"next big thing\" to attack is distinguishing borrows a bit more to put a cap on how long they could possibly last, which unfortunately also intersects unsafe code rules and the like (but we can probably carve it up)</p>",
        "id": 273519078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067072
    },
    {
        "content": "<p>I would say it requires the EUV refactor too</p>",
        "id": 273519086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067077
    },
    {
        "content": "<p>In general the way we have to be conservative around borrows bothers me. I'd like to make that more precise. Bu yeah, hopefully we can do that with the EUV refactor.</p>",
        "id": 273519154,
        "sender_full_name": "eholk",
        "timestamp": 1646067104
    },
    {
        "content": "<p>EUV?</p>",
        "id": 273519283,
        "sender_full_name": "tmandry",
        "timestamp": 1646067152
    },
    {
        "content": "<p>also hi :)</p>",
        "id": 273519319,
        "sender_full_name": "tmandry",
        "timestamp": 1646067167
    },
    {
        "content": "<p>oh</p>",
        "id": 273519347,
        "sender_full_name": "tmandry",
        "timestamp": 1646067185
    },
    {
        "content": "<p>The other change I made in <a href=\"https://github.com/rust-lang/rust/issues/94309\">#94309</a> was to add an <code>is_autoref</code> flag to the borrow callback. I needed both of these to fully account for copies.</p>",
        "id": 273519362,
        "sender_full_name": "eholk",
        "timestamp": 1646067193
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519283\">said</a>:</p>\n<blockquote>\n<p>EUV?</p>\n</blockquote>\n<p><code>ExprUseVisitor</code></p>",
        "id": 273519373,
        "sender_full_name": "eholk",
        "timestamp": 1646067201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519319\">said</a>:</p>\n<blockquote>\n<p>also hi :)</p>\n</blockquote>\n<p>hi!</p>",
        "id": 273519385,
        "sender_full_name": "eholk",
        "timestamp": 1646067210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518750\">said</a>:</p>\n<blockquote>\n<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>\n</blockquote>\n<p>I'm a little surprised \"all locals are considered borrowed\" doesn't show up in the tests. We probably have some gaps here.</p>",
        "id": 273519558,
        "sender_full_name": "eholk",
        "timestamp": 1646067285
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519362\">said</a>:</p>\n<blockquote>\n<p>The other change I made in <a href=\"https://github.com/rust-lang/rust/issues/94309\">#94309</a> was to add an <code>is_autoref</code> flag to the borrow callback. I needed both of these to fully account for copies.</p>\n</blockquote>\n<p>I saw that and wondered about it</p>",
        "id": 273519591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067297
    },
    {
        "content": "<p>I presume it was triggered by test failures?</p>",
        "id": 273519636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067311
    },
    {
        "content": "<p><code>is_autoref</code> is the part I'm kind of unsure of...</p>",
        "id": 273519650,
        "sender_full_name": "eholk",
        "timestamp": 1646067316
    },
    {
        "content": "<p>ok, let me look more closely</p>",
        "id": 273519725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067354
    },
    {
        "content": "<p>Yeah, I couldn't get the issue-57017 test case we added to pass without it. There were two <code>&amp;Client</code> borrow events that showed up, so I needed to filter out both of them.</p>",
        "id": 273519738,
        "sender_full_name": "eholk",
        "timestamp": 1646067359
    },
    {
        "content": "<p>btw, last week I put in some time editing the <a href=\"https://hackmd.io/@tmandry/rJjUyZdJ9\">RPITIDT doc</a> -- RPIT in dyn trait</p>",
        "id": 273519818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 273519836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067381
    },
    {
        "content": "<p>I was trying to turn it into something readable</p>",
        "id": 273519873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067391
    },
    {
        "content": "<p>kind of forget how far I got</p>",
        "id": 273519897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067402
    },
    {
        "content": "<p>I've also been reading into CML and planning a blog post this week comparing it to async-await in rust :)</p>",
        "id": 273519985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519558\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518750\">said</a>:</p>\n<blockquote>\n<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>\n</blockquote>\n<p>I'm a little surprised \"all locals are considered borrowed\" doesn't show up in the tests. We probably have some gaps here.</p>\n</blockquote>\n<p>Test checking that drop tracking improves precision is still ignored (src/test/ui/generator/drop-control-flow.rs).</p>",
        "id": 273520000,
        "sender_full_name": "tm",
        "timestamp": 1646067445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273520000\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519558\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518750\">said</a>:</p>\n<blockquote>\n<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>\n</blockquote>\n<p>I'm a little surprised \"all locals are considered borrowed\" doesn't show up in the tests. We probably have some gaps here.</p>\n</blockquote>\n<p>Test checking that drop tracking improves precision is still ignored (src/test/ui/generator/drop-control-flow.rs).</p>\n</blockquote>\n<p>Oh, that explains it. I thought we had added the <code>-Zdrop-tracking</code> flag on that test.</p>",
        "id": 273520201,
        "sender_full_name": "eholk",
        "timestamp": 1646067511
    },
    {
        "content": "<p>Guess I'll add that today.</p>",
        "id": 273520214,
        "sender_full_name": "eholk",
        "timestamp": 1646067516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519985\">said</a>:</p>\n<blockquote>\n<p>I've also been reading into CML and planning a blog post this week comparing it to async-await in rust :)</p>\n</blockquote>\n<p>What's CML?</p>",
        "id": 273520286,
        "sender_full_name": "eholk",
        "timestamp": 1646067543
    },
    {
        "content": "<p>Ah, I have another meeting now, so I'm going to go ahead and wrap this one up.</p>",
        "id": 273520712,
        "sender_full_name": "eholk",
        "timestamp": 1646067641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-meeting</p>",
        "id": 273520717,
        "sender_full_name": "eholk",
        "timestamp": 1646067645
    },
    {
        "content": "<p>Does anyone have something to bring up?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if you're ready to end the meeting.</p>",
        "id": 273520720,
        "sender_full_name": "triagebot",
        "timestamp": 1646067645
    },
    {
        "content": "<p>CML= Concurrent ML</p>",
        "id": 273520728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067649
    },
    {
        "content": "<p>didn't you go to CMU, <span class=\"user-mention\" data-user-id=\"421986\">@eholk</span>? For shame!</p>",
        "id": 273520739,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273520739\">said</a>:</p>\n<blockquote>\n<p>didn't you go to CMU, <span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span>? For shame!</p>\n</blockquote>\n<p>I went to IU, most of the other Rust Interns went to CMU. Still, I feel bad I forgot what CML was already :)</p>",
        "id": 273520829,
        "sender_full_name": "eholk",
        "timestamp": 1646067695
    },
    {
        "content": "<p>Oh dear</p>",
        "id": 273520845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067699
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Concurrent_ML\">https://en.wikipedia.org/wiki/Concurrent_ML</a></p>",
        "id": 273520847,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067701
    },
    {
        "content": "<p>Anyway I happened to be reading one of the papers for fun and I thought it'd make a nice blog post to compare it to async-await</p>",
        "id": 273520940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067723
    },
    {
        "content": "<p>lots of similarities, some interesting differences</p>",
        "id": 273520952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646067728
    },
    {
        "content": "<p>Yeah, I'd be interested to see that</p>",
        "id": 273520978,
        "sender_full_name": "eholk",
        "timestamp": 1646067743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273517905\">said</a>:</p>\n<blockquote>\n<p>we should file an issue for that cleanup work</p>\n</blockquote>\n<p>I filed <a href=\"https://github.com/rust-lang/rust/issues/94463\">#94463</a> for this.</p>",
        "id": 273571409,
        "sender_full_name": "eholk",
        "timestamp": 1646092218
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273520201\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273520000\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"421986\">eholk</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273519558\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/187312-wg-async/topic/Triage.20meeting.202022-02-28/near/273518750\">said</a>:</p>\n<blockquote>\n<p>I didn't have time to write detailed comment, but I feel the changes that consider mutation as borrows in <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>, are somewhat too conservative. AFAIK ExprUseVisitor considers both assignments and let expressions to be mutations, so effectively all locals are considered borrowed now.</p>\n</blockquote>\n<p>I'm a little surprised \"all locals are considered borrowed\" doesn't show up in the tests. We probably have some gaps here.</p>\n</blockquote>\n<p>Test checking that drop tracking improves precision is still ignored (src/test/ui/generator/drop-control-flow.rs).</p>\n</blockquote>\n<p>Oh, that explains it. I thought we had added the <code>-Zdrop-tracking</code> flag on that test.</p>\n</blockquote>\n<p>I opened <a href=\"https://github.com/rust-lang/rust/issues/94460\">#94460</a> which re-enables the tests and fixes the regresses introduced by <a href=\"https://github.com/rust-lang/rust/issues/94068\">#94068</a>.</p>",
        "id": 273571484,
        "sender_full_name": "eholk",
        "timestamp": 1646092295
    }
]