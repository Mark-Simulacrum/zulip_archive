[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Test</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">is_some</span><span class=\"p\">(</span><span class=\"bp\">self</span>: <span class=\"nc\">T</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;Some&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p><code>RUSTC_LOG=rustc_typeck=debug rustc +dev issue-66312.rs --edtion 2018</code> triggers another earlier cycle error, prevents me get more debug info:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0391</span><span class=\"p\">]</span>: <span class=\"nc\">cycle</span><span class=\"w\"> </span><span class=\"n\">detected</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">processing</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">f</span>::<span class=\"p\">{{</span><span class=\"n\">opaque</span><span class=\"p\">}}</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">14</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">              </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"p\">...</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">requires</span><span class=\"w\"> </span><span class=\"n\">processing</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">f</span>::<span class=\"p\">{{</span><span class=\"n\">opaque</span><span class=\"p\">}}</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">14</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">              </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"p\">...</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">requires</span><span class=\"w\"> </span><span class=\"n\">processing</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">f</span>::<span class=\"p\">{{</span><span class=\"n\">opaque</span><span class=\"p\">}}</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">14</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">              </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"p\">...</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">again</span><span class=\"w\"> </span><span class=\"n\">requires</span><span class=\"w\"> </span><span class=\"n\">processing</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">f</span>::<span class=\"p\">{{</span><span class=\"n\">opaque</span><span class=\"p\">}}</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">completing</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">cycle</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">processing</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">f</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0391</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>but a narrowed path <code>RUSTC_LOG=rustc_typeck::check=debug</code> works as expected.</p>",
        "id": 180601841,
        "sender_full_name": "csmoe",
        "timestamp": 1573633005
    },
    {
        "content": "<p>oh, seems same as this issue <a href=\"https://github.com/rust-lang/rust/issues/61577\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61577\">https://github.com/rust-lang/rust/issues/61577</a></p>",
        "id": 180601951,
        "sender_full_name": "csmoe",
        "timestamp": 1573633180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> can you say a bit more about what's going wrong?</p>",
        "id": 181142051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1574189352
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116773\">csmoe</span> can you say a bit more about what's going wrong?</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Test</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"k\">fn</span> <span class=\"nf\">is_some</span><span class=\"p\">(</span><span class=\"bp\">self</span>: <span class=\"nc\">T</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>is malformed, should be rejected with <code>invalid </code>self<code> parameter type: T</code> by wf_check as the <a href=\"https://github.com/rust-lang/rust/issues/66312#issue-521183557\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312#issue-521183557\">non-async case</a>.<br>\nbut nothing about <code>wfcheck</code> was dumped for async case inside the debug log</p>",
        "id": 181142539,
        "sender_full_name": "csmoe",
        "timestamp": 1574189654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> Firstly, I printed out the debug log of <strong>non-async</strong> case  from this issue, found that expected error <code>E0307</code> was triggerred from <a href=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/lib.rs#L337\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/lib.rs#L337\">wf_check</a>. <br>\nBut for the <strong>async</strong> case, I noticed that rustc <a href=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/collect.rs#L1346-L1348\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/collect.rs#L1346-L1348\">branched out</a> to construct the <code>typeck_tables_of</code> generator while querying its <code>type_of</code>, the method lookup(before <code>Test</code> trait was wf_checked) happened inside <a href=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/check/mod.rs#L1022\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/c8ea4ace9213ae045123fdfeb59d1ac887656d31/src/librustc_typeck/check/mod.rs#L1022\">check_fn</a>, then unexpected type-mismatching error <code>E0308</code> emitted, the compiler bailed out before doing <code>wf_check</code>. <br>\ncc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 183450640,
        "sender_full_name": "csmoe",
        "timestamp": 1576345543
    },
    {
        "content": "<p>sorry for this abstract updating. I know nothing about typecking of generator, so could not debug on a more detailed level, like what was wrong inside <code>fn check_fn</code> or somewhere else.</p>",
        "id": 183451828,
        "sender_full_name": "csmoe",
        "timestamp": 1576347270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> can you collect a backtrace of the error using <code>-Z treat-err-as-bug</code>? I think it might be helpful for us to stare at that for a bit.</p>",
        "id": 183456582,
        "sender_full_name": "tmandry",
        "timestamp": 1576354328
    },
    {
        "content": "<p>it should contain the full query stack at that point too</p>",
        "id": 183456600,
        "sender_full_name": "tmandry",
        "timestamp": 1576354406
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> here it is:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0308]: mismatched types\n --&gt; v.rs:8:8\n  |\n8 |     if x.is_some() {\n  |        ^^^^^^^^^^^ expected `bool`, found `()`\n\nthread &#39;rustc&#39; panicked at &#39;aborting due to `-Z treat-err-as-bug=1`&#39;, src/librustc_errors/lib.rs:921:13\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print_fmt\n             at src/libstd/sys_common/backtrace.rs:84\n   3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n             at src/libstd/sys_common/backtrace.rs:61\n   4: core::fmt::write\n             at src/libcore/fmt/mod.rs:1025\n   5: std::io::Write::write_fmt\n             at src/libstd/io/mod.rs:1426\n   6: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:65\n   7: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:50\n   8: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:193\n   9: std::panicking::default_hook\n             at src/libstd/panicking.rs:210\n  10: rustc_driver::report_ice\n  11: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:475\n  12: std::panicking::begin_panic\n  13: rustc_errors::HandlerInner::emit_diagnostic\n  14: rustc_errors::diagnostic_builder::DiagnosticBuilder::emit_unless\n  15: rustc_typeck::check::_match::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_match\n  16: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  17: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  18: rustc_typeck::check::FnCtxt::check_block_with_expected\n  19: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  20: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  21: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  22: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  23: rustc_typeck::check::FnCtxt::check_block_with_expected\n  24: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  25: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  26: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_return_expr\n  27: rustc_typeck::check::check_fn\n  28: rustc_typeck::check::closure::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_closure\n  29: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  30: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  31: rustc_typeck::check::FnCtxt::check_argument_types\n  32: rustc_typeck::check::callee::&lt;impl rustc_typeck::check::FnCtxt&gt;::confirm_builtin_call\n  33: rustc_typeck::check::callee::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_call\n  34: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_kind\n  35: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_expr_with_expectation_and_needs\n  36: rustc_typeck::check::expr::&lt;impl rustc_typeck::check::FnCtxt&gt;::check_return_expr\n  37: rustc_typeck::check::check_fn\n  38: rustc::ty::context::tls::with_context::{{closure}}\n  39: rustc_typeck::check::typeck_tables_of\n  40: rustc::ty::query::__query_compute::typeck_tables_of\n  41: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of&gt;::compute\n  42: rustc::dep_graph::graph::DepGraph::with_task_impl\n  43: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::get_query\n  44: rustc::ty::query::__query_compute::typeck_tables_of\n  45: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of&gt;::compute\n  46: rustc::dep_graph::graph::DepGraph::with_task_impl\n  47: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::get_query\n  48: rustc_typeck::collect::type_of\n  49: rustc::ty::query::__query_compute::type_of\n  50: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of&gt;::compute\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\n  52: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::get_query\n  53: rustc::hir::intravisit::walk_expr\n  54: rustc::hir::intravisit::Visitor::visit_fn\n  55: rustc::hir::intravisit::walk_item\n  56: &lt;rustc_typeck::collect::CollectItemTypesVisitor as rustc::hir::intravisit::Visitor&gt;::visit_item\n  57: rustc::hir::map::Map::visit_item_likes_in_module\n  58: rustc_typeck::collect::collect_mod_item_types\n  59: rustc::ty::query::__query_compute::collect_mod_item_types\n  60: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types&gt;::compute\n  61: rustc::dep_graph::graph::DepGraph::with_task_impl\n  62: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::get_query\n  63: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::ensure_query\n  64: rustc_typeck::check_crate::{{closure}}::{{closure}}\n  65: rustc::util::common::time\n  66: rustc_typeck::check_crate\n  67: rustc_interface::passes::analysis\n  68: rustc::ty::query::__query_compute::analysis\n  69: rustc::dep_graph::graph::DepGraph::with_task_impl\n  70: rustc::ty::query::plumbing::&lt;impl rustc::ty::context::TyCtxt&gt;::get_query\n  71: rustc::ty::context::tls::enter_global\n  72: rustc_interface::interface::run_compiler_in_existing_thread_pool\n  73: std::thread::local::LocalKey&lt;T&gt;::with\n  74: scoped_tls::ScopedKey&lt;T&gt;::set\n  75: syntax::with_globals\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.41.0-nightly (3eeb8d4f2 2019-12-12) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z treat-err-as-bug\n\nquery stack during panic:\n#0 [typeck_tables_of] processing `async_f`\n#1 [typeck_tables_of] processing `async_f::{{closure}}#0`\n#2 [type_of] processing `async_f::{{closure}}#0`\n#3 [collect_mod_item_types] collecting item types in top-level module\n#4 [analysis] running analysis passes on this crate\nend of query stack\n</pre></div>",
        "id": 183516435,
        "sender_full_name": "csmoe",
        "timestamp": 1576466015
    }
]