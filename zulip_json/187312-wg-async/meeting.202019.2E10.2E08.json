[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> -- sync?</p>",
        "id": 177636137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554124
    },
    {
        "content": "<p>We've got a bunch of <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">uncategorized issues</a></p>",
        "id": 177636204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554167
    },
    {
        "content": "<blockquote>\n<p>Async-related type error messages defy expectations (in span location) <a href=\"https://github.com/rust-lang/rust/issues/65180\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65180\">#65180</a></p>\n</blockquote>",
        "id": 177636212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554176
    },
    {
        "content": "<p>going to tag as triaged</p>",
        "id": 177636238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554195
    },
    {
        "content": "<p>not sure if we want to put it \"on deck\"</p>",
        "id": 177636244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554199
    },
    {
        "content": "<blockquote>\n<p>Nightly async fn ICE <a href=\"https://github.com/rust-lang/rust/issues/65159\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65159\">#65159</a></p>\n</blockquote>",
        "id": 177636262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554211
    },
    {
        "content": "<p>seems to be my fault</p>",
        "id": 177636274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554222
    },
    {
        "content": "<p>I guess i'll self-assign and try to investigate tomorrow</p>",
        "id": 177636358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554258
    },
    {
        "content": "<blockquote>\n<p>check_mod_item_types query times regressed bigly <a href=\"https://github.com/rust-lang/rust/issues/65147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65147\">#65147</a></p>\n</blockquote>",
        "id": 177636399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554295
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> shall I assign this to you?</p>",
        "id": 177636443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554319
    },
    {
        "content": "<p>do you need assistance?</p>",
        "id": 177636462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554337
    },
    {
        "content": "<blockquote>\n<p>seems to be my fault</p>\n</blockquote>\n<p>Ostensibly this means that we don't backport <a href=\"https://github.com/rust-lang/rust/pull/64999\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64999\">https://github.com/rust-lang/rust/pull/64999</a> because \"risky\" ?</p>",
        "id": 177636505,
        "sender_full_name": "centril",
        "timestamp": 1570554363
    },
    {
        "content": "<p>plausibly, I was wondering the same</p>",
        "id": 177636573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554385
    },
    {
        "content": "<p>let's see what I come up with tomorrow I guess</p>",
        "id": 177636584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554390
    },
    {
        "content": "<p>sgtm; thanks</p>",
        "id": 177636619,
        "sender_full_name": "centril",
        "timestamp": 1570554415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> and I are both in a meeting at work, might be unresponsive</p>",
        "id": 177636661,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570554463
    },
    {
        "content": "<p>ok. the only other triaged issue is</p>\n<blockquote>\n<p>Cannot await in scope that contains call to format! <a href=\"https://github.com/rust-lang/rust/issues/64960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64960\">#64960</a></p>\n</blockquote>",
        "id": 177636726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554486
    },
    {
        "content": "<blockquote>\n<p>Attempting to mutate an argument to an async fn that was not marked mut results in this error message:<br>\ncannot borrow immutable captured outer variable in an <code>FnOnce</code> closure <code>sender</code> as mutable</p>\n</blockquote>",
        "id": 177636744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554502
    },
    {
        "content": "<p>I'm going to just leave that one as \"triaged\"</p>",
        "id": 177636752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554508
    },
    {
        "content": "<p>I'm happy to pick up another issue. I think my one's cooked.</p>",
        "id": 177636758,
        "sender_full_name": "Giles Cope",
        "timestamp": 1570554510
    },
    {
        "content": "<p>oh, great <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> -- well for now i'm going to assign <a href=\"https://github.com/rust-lang/rust/issues/65147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65147\">#65147</a> to <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> as a \"focus issue\"</p>",
        "id": 177636777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I happened by <a href=\"https://github.com/rust-lang/rust/issues/64692\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64692\">https://github.com/rust-lang/rust/issues/64692</a> just now... I wonder if we should heed <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>'s advice there and make it a hard error... tho I hear from <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> that the lint is overzealous?</p>",
        "id": 177636786,
        "sender_full_name": "centril",
        "timestamp": 1570554541
    },
    {
        "content": "<p>yeah, I don't know. in my opinion that rule should just go away altogether</p>",
        "id": 177636834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554569
    },
    {
        "content": "<p>(private-type-in-public-interface)</p>",
        "id": 177636853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554582
    },
    {
        "content": "<p>but that's a separate thing</p>",
        "id": 177636861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554588
    },
    {
        "content": "<p>Seems like a bigger discussion <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 177636925,
        "sender_full_name": "centril",
        "timestamp": 1570554604
    },
    {
        "content": "<p>Ostensibly it's easier to go from errors to not errors</p>",
        "id": 177636946,
        "sender_full_name": "centril",
        "timestamp": 1570554615
    },
    {
        "content": "<p>yes.</p>",
        "id": 177636955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554620
    },
    {
        "content": "<p>I guess we could adjust the lint to not be a FCW \"iff\" inside an async fn</p>",
        "id": 177636972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554632
    },
    {
        "content": "<p>not sure how hard that would be</p>",
        "id": 177636978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554635
    },
    {
        "content": "<p>I'll cc Vadim on the issue and maybe they have opinions</p>",
        "id": 177637000,
        "sender_full_name": "centril",
        "timestamp": 1570554656
    },
    {
        "content": "<p>ok let's check out the <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-Focus+is%3Aopen&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-Focus+is%3Aopen&amp;type=Issues\">focus issues</a> to start I guess</p>",
        "id": 177637031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554679
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/65159\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65159\">#65159</a> and <a href=\"https://github.com/rust-lang/rust/issues/65147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65147\">#65147</a> we just created</p>",
        "id": 177637067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554713
    },
    {
        "content": "<blockquote>\n<p>Consider async blocks on lifetime errors <a href=\"https://github.com/rust-lang/rust/issues/64382\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64382\">#64382</a></p>\n</blockquote>",
        "id": 177637080,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> opened <a href=\"https://github.com/rust-lang/rust/pull/65166\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65166\">https://github.com/rust-lang/rust/pull/65166</a></p>",
        "id": 177637128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554734
    },
    {
        "content": "<p>it's R+'d</p>",
        "id": 177637135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554736
    },
    {
        "content": "<p>awesome!</p>",
        "id": 177637138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554738
    },
    {
        "content": "<blockquote>\n<p>non-send futures error at point of use, but could cite point of definition in some cases <a href=\"https://github.com/rust-lang/rust/issues/64130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64130\">#64130</a></p>\n</blockquote>",
        "id": 177637154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> was doing some work I know</p>",
        "id": 177637166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554755
    },
    {
        "content": "<p>don't see a fresh PR yet</p>",
        "id": 177637172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554763
    },
    {
        "content": "<blockquote>\n<p>unused-lifetimes lint false-positives with async functions <a href=\"https://github.com/rust-lang/rust/issues/61115\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61115\">#61115</a></p>\n</blockquote>",
        "id": 177637195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554777
    },
    {
        "content": "<p>Didn't we already land an RFC to make private-in-public a lint rather than hard error?</p>",
        "id": 177637207,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570554783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> opened <a href=\"https://github.com/rust-lang/rust/issues/64603\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64603\">#64603</a></p>",
        "id": 177637220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554790
    },
    {
        "content": "<blockquote>\n<p>Didn't we already land an RFC to make private-in-public a lint rather than hard error?</p>\n</blockquote>\n<p>I feel like yes</p>",
        "id": 177637228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554796
    },
    {
        "content": "<p>It was one of <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> 's IIRC</p>",
        "id": 177637231,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570554799
    },
    {
        "content": "<p>we definitely talked about it</p>",
        "id": 177637243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554805
    },
    {
        "content": "<p>yep  <a href=\"https://github.com/rust-lang/rust/issues/64603\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64603\">#64603</a> is pending review.</p>",
        "id": 177637275,
        "sender_full_name": "Giles Cope",
        "timestamp": 1570554829
    },
    {
        "content": "<blockquote>\n<p>async/await: awaiting inside a match block captures borrow too eagerly <a href=\"https://github.com/rust-lang/rust/issues/57017\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57017\">#57017</a></p>\n</blockquote>",
        "id": 177637345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554853
    },
    {
        "content": "<p>yeah it's <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md\">https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md</a></p>",
        "id": 177637347,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570554854
    },
    {
        "content": "<p>so I had self-assigned this to do some prelim exploration; I didn't get to it last week, but could plausibly do it this week. I was basically going to try to insert a call to create the MIR at the point where we compute interior types and see how badly things break</p>",
        "id": 177637387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554883
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> was doing some work I know</p>\n</blockquote>\n<p>I hope to have it up tonight or tomorrow.</p>",
        "id": 177637417,
        "sender_full_name": "davidtwco",
        "timestamp": 1570554908
    },
    {
        "content": "<p>I could imagine handing off that exploration, but maybe better to look first at other on-deck issues</p>",
        "id": 177637437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554923
    },
    {
        "content": "<blockquote>\n<p>yeah it's <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md\">https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> not sure whether that means this whole FCW should just be removed or what</p>",
        "id": 177637448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554941
    },
    {
        "content": "<p>guess I need to re-read that RFC again</p>",
        "id": 177637521,
        "sender_full_name": "centril",
        "timestamp": 1570554966
    },
    {
        "content": "<p>maybe ping <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> to ask their opinion on the issue, they ought to know</p>",
        "id": 177637533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570554975
    },
    {
        "content": "<p>yea, we pinged them few times by now collectively :D</p>",
        "id": 177637560,
        "sender_full_name": "centril",
        "timestamp": 1570554997
    },
    {
        "content": "<p>(I thought it was just a partial relaxation...)</p>",
        "id": 177637586,
        "sender_full_name": "centril",
        "timestamp": 1570555016
    },
    {
        "content": "<p>current <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-OnDeck+is%3Aopen&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-OnDeck+is%3Aopen&amp;type=Issues\">on deck issues</a> are only 3:</p>\n<ul>\n<li>Cannot await in scope that contains call to format! <a href=\"https://github.com/rust-lang/rust/issues/64960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64960\">#64960</a></li>\n<li>Lifetime bounds in auto trait impls prevent trait from being implemented on generators  <a href=\"https://github.com/rust-lang/rust/issues/64552\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552\">#64552</a></li>\n<li>An async fn which isn't Send but which should be?  <a href=\"https://github.com/rust-lang/rust/issues/63768\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63768\">#63768</a></li>\n</ul>",
        "id": 177637587,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555019
    },
    {
        "content": "<p>The RFC was about removing the private-in-public lint, that's directly opposite to making it an error.</p>",
        "id": 177637589,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1570555020
    },
    {
        "content": "<p>exactly, <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> -- we are discussing if the FCW should just be removed entirely, rather than making it an error in the case of async fn</p>",
        "id": 177637633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555052
    },
    {
        "content": "<p>Right now it's generally an error and sometimes a lint, where \"sometimes\" == \"wasn't reported by an ancient version of the private-in-public checking pass\"</p>",
        "id": 177637657,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1570555073
    },
    {
        "content": "<p>heh yes</p>",
        "id": 177637709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555084
    },
    {
        "content": "<p>so maybe the proper fix is to implement <a href=\"https://github.com/rust-lang/rfcs/issues/2145\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/issues/2145\">rfc#2145</a>, basically</p>",
        "id": 177637725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555096
    },
    {
        "content": "<p>anyways, since it doesn't seem like it should be made an error I think we don't do anything special for async fn then</p>",
        "id": 177637746,
        "sender_full_name": "centril",
        "timestamp": 1570555110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> so you mentioned wanting some work to do :)</p>",
        "id": 177637843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555185
    },
    {
        "content": "<p>not sure <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> if you also are looking for things</p>",
        "id": 177637855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555193
    },
    {
        "content": "<blockquote>\n<p>we are discussing if the FCW should just be removed entirely</p>\n</blockquote>\n<p>Ah, ok, we can remove it any moment - functions with leaked private types will be unusable.<br>\nThe only drawback will be no linting at the definition site, so it will be pretty easy for library authors to produce unusable function.</p>",
        "id": 177637952,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1570555223
    },
    {
        "content": "<blockquote>\n<p>not sure <span class=\"user-mention silent\" data-user-id=\"116773\">csmoe</span> if you also are looking for things</p>\n</blockquote>\n<p>yep</p>",
        "id": 177637953,
        "sender_full_name": "csmoe",
        "timestamp": 1570555223
    },
    {
        "content": "<p>looking at the on-deck list, I kind of think we should remove \"Cannot await in scope that contains call to format! <a href=\"https://github.com/rust-lang/rust/issues/64960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64960\">#64960</a>\" from the list, mostly because I sort of have no idea how we are going to fix in short term?</p>",
        "id": 177637989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555247
    },
    {
        "content": "<p>Seems sensible</p>",
        "id": 177638047,
        "sender_full_name": "centril",
        "timestamp": 1570555281
    },
    {
        "content": "<p>Maybe <a href=\"https://github.com/rust-lang/rust/issues/62570\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62570\">https://github.com/rust-lang/rust/issues/62570</a> is a good issue to prioritize?</p>",
        "id": 177638071,
        "sender_full_name": "centril",
        "timestamp": 1570555305
    },
    {
        "content": "<p>Ah, I sort of remember -- I thought it <em>might</em> be the case that being more precise about what lives over an await might help with format in particular</p>",
        "id": 177638142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555328
    },
    {
        "content": "<p>(given the prevalence of <code>?</code> + async)</p>",
        "id": 177638143,
        "sender_full_name": "centril",
        "timestamp": 1570555329
    },
    {
        "content": "<p>that sounds reasonable, I'm not sure if we have a vague idea how to fix?</p>",
        "id": 177638194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555377
    },
    {
        "content": "<p>Basically I think we want to replace <code>a function</code> with <code>a closure</code>, <code>an async...</code></p>",
        "id": 177638214,
        "sender_full_name": "centril",
        "timestamp": 1570555393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span> or <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span>, either of you interested in <a href=\"https://github.com/rust-lang/rust/issues/62570\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62570\">#62570</a>? It sounded like <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> had some thoughts from the issue comments</p>",
        "id": 177638219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555394
    },
    {
        "content": "<p>ok, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I think it'd be helpful to post with what you would like error message to say</p>",
        "id": 177638245,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555412
    },
    {
        "content": "<p>will do</p>",
        "id": 177638256,
        "sender_full_name": "centril",
        "timestamp": 1570555421
    },
    {
        "content": "<p>if it's improved diagnostics that sounds cool with me</p>",
        "id": 177638258,
        "sender_full_name": "Giles Cope",
        "timestamp": 1570555423
    },
    {
        "content": "<p>from a quick read, I wasn't really clear on what the problem/fix was</p>",
        "id": 177638260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555424
    },
    {
        "content": "<p>ok, assigning to <span class=\"user-mention\" data-user-id=\"120134\">@Giles Cope</span></p>",
        "id": 177638323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555447
    },
    {
        "content": "<p>in for a penny :-)</p>",
        "id": 177638334,
        "sender_full_name": "Giles Cope",
        "timestamp": 1570555463
    },
    {
        "content": "<p>the current message originates from:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[rustc_on_unimplemented(</span>\n<span class=\"cp\">   on(all(</span>\n<span class=\"cp\">       any(from_method=</span><span class=\"s\">&quot;from_error&quot;</span><span class=\"cp\">, from_method=</span><span class=\"s\">&quot;from_ok&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">       from_desugaring=</span><span class=\"s\">&quot;QuestionMark&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">      message=</span><span class=\"s\">&quot;the `?` operator can only be used in a \\</span>\n<span class=\"s\">               function that returns `Result` or `Option` \\</span>\n<span class=\"s\">               (or another type that implements `{Try}`)&quot;</span><span class=\"cp\">,</span>\n<span class=\"cp\">      label=</span><span class=\"s\">&quot;cannot use the `?` operator in a function that returns `{Self}`&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">   on(all(from_method=</span><span class=\"s\">&quot;into_result&quot;</span><span class=\"cp\">, from_desugaring=</span><span class=\"s\">&quot;QuestionMark&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">      message=</span><span class=\"s\">&quot;the `?` operator can only be applied to values \\</span>\n<span class=\"s\">               that implement `{Try}`&quot;</span><span class=\"cp\">,</span>\n<span class=\"cp\">      label=</span><span class=\"s\">&quot;the `?` operator cannot be applied to type `{Self}`&quot;</span><span class=\"cp\">)</span>\n<span class=\"cp\">)]</span><span class=\"w\"></span>\n</pre></div>",
        "id": 177638353,
        "sender_full_name": "centril",
        "timestamp": 1570555487
    },
    {
        "content": "<p>I'm marking <a href=\"https://github.com/rust-lang/rust/issues/64960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64960\">https://github.com/rust-lang/rust/issues/64960</a> as assigned to me just to do a bit of digging</p>",
        "id": 177638380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555506
    },
    {
        "content": "<p>(the format! thing)</p>",
        "id": 177638391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555514
    },
    {
        "content": "<p>I don't think I'll have time to fix</p>",
        "id": 177638393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555516
    },
    {
        "content": "<p>and don't plan on it</p>",
        "id": 177638398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555520
    },
    {
        "content": "<p>I just want to evaluate what we <em>might</em> do</p>",
        "id": 177638404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555524
    },
    {
        "content": "<p>anyway we still need something for <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> :)</p>",
        "id": 177638426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555537
    },
    {
        "content": "<p>I think we want:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[rustc_on_unimplemented(</span>\n<span class=\"cp\">   on(all(</span>\n<span class=\"cp\">       any(from_method=</span><span class=\"s\">&quot;from_error&quot;</span><span class=\"cp\">, from_method=</span><span class=\"s\">&quot;from_ok&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">       from_desugaring=</span><span class=\"s\">&quot;QuestionMark&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">      message=</span><span class=\"s\">&quot;the `?` operator can only be used in {ctx} \\</span>\n<span class=\"s\">               that returns `Result` or `Option` \\</span>\n<span class=\"s\">               (or another type that implements `{Try}`)&quot;</span><span class=\"cp\">,</span>\n<span class=\"cp\">      label=</span><span class=\"s\">&quot;cannot use the `?` operator in {ctx} that returns `{Self}`&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">   on(all(from_method=</span><span class=\"s\">&quot;into_result&quot;</span><span class=\"cp\">, from_desugaring=</span><span class=\"s\">&quot;QuestionMark&quot;</span><span class=\"cp\">),</span>\n<span class=\"cp\">      message=</span><span class=\"s\">&quot;the `?` operator can only be applied to values \\</span>\n<span class=\"s\">               that implement `{Try}`&quot;</span><span class=\"cp\">,</span>\n<span class=\"cp\">      label=</span><span class=\"s\">&quot;the `?` operator cannot be applied to type `{Self}`&quot;</span><span class=\"cp\">)</span>\n<span class=\"cp\">)]</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>but I have no idea how we can magically make <code>ctx</code> say the right thing</p>",
        "id": 177638558,
        "sender_full_name": "centril",
        "timestamp": 1570555601
    },
    {
        "content": "<p>Here is a list of <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-Triaged+is%3Aopen+-label%3AAsyncAwait-OnDeck+-label%3AAsyncAwait-Focus&amp;type=Issues\" target=\"_blank\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AAsyncAwait-Triaged+is%3Aopen+-label%3AAsyncAwait-OnDeck+-label%3AAsyncAwait-Focus&amp;type=Issues\">other issues</a> that are neither on-deck nor focus</p>",
        "id": 177638645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555662
    },
    {
        "content": "<p>Oh I know... <code>ctx</code> would just be the item context converted to English</p>",
        "id": 177638655,
        "sender_full_name": "centril",
        "timestamp": 1570555667
    },
    {
        "content": "<p>I'm skimming over issues here</p>",
        "id": 177638868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555794
    },
    {
        "content": "<blockquote>\n<p>Async-related type error messages defy expectations (in span location) <a href=\"https://github.com/rust-lang/rust/issues/65180\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65180\">#65180</a></p>\n</blockquote>",
        "id": 177638873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555799
    },
    {
        "content": "<p>this might be a good one, <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> -- I don't really know what the problem is precisely, it'll take a little digging though</p>",
        "id": 177638933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555810
    },
    {
        "content": "<blockquote>\n<p>Unhelpful error message with async usage of Iterator <a href=\"https://github.com/rust-lang/rust/issues/63385\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63385\">#63385</a></p>\n</blockquote>",
        "id": 177638952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555817
    },
    {
        "content": "<p>similarly here I see a few like this</p>",
        "id": 177638965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555822
    },
    {
        "content": "<p>but it'll also take some digging :)</p>",
        "id": 177638974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555829
    },
    {
        "content": "<p>ok let's start with <a href=\"https://github.com/rust-lang/rust/issues/65180\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65180\">#65180</a> I guess</p>",
        "id": 177639043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555886
    },
    {
        "content": "<blockquote>\n<p>this might be a good one, <span class=\"user-mention silent\" data-user-id=\"116773\">csmoe</span> -- I don't really know what the problem is precisely, it'll take a little digging though</p>\n</blockquote>\n<p>thanks, I claim this <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 177639049,
        "sender_full_name": "csmoe",
        "timestamp": 1570555888
    },
    {
        "content": "<p>ok great, thanks all!</p>",
        "id": 177639138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555924
    },
    {
        "content": "<p>FIN</p>",
        "id": 177639140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570555931
    }
]