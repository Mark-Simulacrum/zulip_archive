[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting!</p>",
        "id": 197306450,
        "sender_full_name": "tmandry",
        "timestamp": 1589303008
    },
    {
        "content": "<p><a href=\"https://github.com/orgs/rust-lang/projects/2\">Project board</a></p>",
        "id": 197306557,
        "sender_full_name": "tmandry",
        "timestamp": 1589303062
    },
    {
        "content": "<p>We had one task marked as done this past week:</p>\n<ul>\n<li>Explain editions when trying to use async block in 2015 edition <a href=\"https://github.com/rust-lang/rust/issues/67204\">#67204</a></li>\n</ul>",
        "id": 197306637,
        "sender_full_name": "tmandry",
        "timestamp": 1589303103
    },
    {
        "content": "<p>lots are in progress</p>",
        "id": 197306681,
        "sender_full_name": "tmandry",
        "timestamp": 1589303130
    },
    {
        "content": "<p>One relevant thing:</p>",
        "id": 197306705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303144
    },
    {
        "content": "<p>We've been discussing the <code>#[must_use]</code> attribute and how it should work</p>",
        "id": 197306721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303156
    },
    {
        "content": "<p>e.g. see <a class=\"stream-topic\" data-stream-id=\"213817\" href=\"/#narrow/stream/213817-t-lang/topic/MustUse\">#t-lang &gt; MustUse</a></p>",
        "id": 197306785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303171
    },
    {
        "content": "<p>(seems also relevant to <span class=\"user-mention\" data-user-id=\"207781\">@Lucio Franco</span>'s \"yield safe\" lint ideas)</p>",
        "id": 197306839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303194
    },
    {
        "content": "<p>yeah</p>",
        "id": 197306918,
        "sender_full_name": "tmandry",
        "timestamp": 1589303224
    },
    {
        "content": "<p>I think there will be a need for someone to try and \"shepherd\" that conversation a bit, in terms of collecting the options and arguments pro/con.</p>",
        "id": 197306920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303226
    },
    {
        "content": "<p>I will probably mark \"Add a <code>MustUse</code> trait to complement <code>#[must_use]</code> <a href=\"https://github.com/rust-lang/rust/issues/71816\">#71816</a>\" as blocked for now, then</p>",
        "id": 197307060,
        "sender_full_name": "tmandry",
        "timestamp": 1589303284
    },
    {
        "content": "<p>oh, I added the PR and issue it fixes for some reason..</p>",
        "id": 197307235,
        "sender_full_name": "tmandry",
        "timestamp": 1589303334
    },
    {
        "content": "<p>/me is going through in progress issues to see if any need checking on</p>",
        "id": 197307317,
        "sender_full_name": "tmandry",
        "timestamp": 1589303378
    },
    {
        "content": "<h2>Lifetime bounds in auto trait impls prevent trait from being implemented on generators <a href=\"https://github.com/rust-lang/rust/issues/64552\">#64552</a></h2>",
        "id": 197307432,
        "sender_full_name": "tmandry",
        "timestamp": 1589303424
    },
    {
        "content": "<p>ah, just found the PR</p>",
        "id": 197307474,
        "sender_full_name": "tmandry",
        "timestamp": 1589303440
    },
    {
        "content": "<p>..okay, looks like I need to do some more reviews</p>",
        "id": 197307689,
        "sender_full_name": "tmandry",
        "timestamp": 1589303530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> has a lot of PRs up &lt;3</p>",
        "id": 197307748,
        "sender_full_name": "tmandry",
        "timestamp": 1589303552
    },
    {
        "content": "<p>I don't think there are updates on blocked issues, moving on</p>",
        "id": 197307829,
        "sender_full_name": "tmandry",
        "timestamp": 1589303600
    },
    {
        "content": "<p>any updates on claimed issues, are they in progress yet?</p>",
        "id": 197307855,
        "sender_full_name": "tmandry",
        "timestamp": 1589303616
    },
    {
        "content": "<p>mmmm</p>",
        "id": 197307894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303640
    },
    {
        "content": "<p>I didn't have time to investigate my issue yet :'(</p>",
        "id": 197307957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303656
    },
    {
        "content": "<p>not sure whether <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span> started work on <a href=\"https://github.com/rust-lang/rust/issues/69276\">#69276</a>?</p>",
        "id": 197307982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303672
    },
    {
        "content": "<p>I also have one I haven't made progress on, but it's not on the board for some reason :/</p>",
        "id": 197308014,
        "sender_full_name": "tmandry",
        "timestamp": 1589303689
    },
    {
        "content": "<p>I should have time to investigate mine starting next week</p>",
        "id": 197308015,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1589303689
    },
    {
        "content": "<p>same, I probably won't have time until next week</p>",
        "id": 197308062,
        "sender_full_name": "tmandry",
        "timestamp": 1589303717
    },
    {
        "content": "<p>Okay, let's look at <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">Uncategorized issues</a></p>",
        "id": 197308185,
        "sender_full_name": "tmandry",
        "timestamp": 1589303765
    },
    {
        "content": "<h2>confusing diagnostic for incorrect type parameter on BoxFuture <a href=\"https://github.com/rust-lang/rust/issues/72117\">#72117</a></h2>",
        "id": 197308260,
        "sender_full_name": "tmandry",
        "timestamp": 1589303800
    },
    {
        "content": "<p>hmm</p>",
        "id": 197308374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303859
    },
    {
        "content": "<p>lol at </p>\n<blockquote>\n<p>help: you need to pin and box this expression: <code>Box::pin(f.boxed())</code></p>\n</blockquote>",
        "id": 197308459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303887
    },
    {
        "content": "<p>yeah, that's not great</p>",
        "id": 197308538,
        "sender_full_name": "tmandry",
        "timestamp": 1589303930
    },
    {
        "content": "<p>it's trying so hard to be helpful</p>",
        "id": 197308560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303944
    },
    {
        "content": "<p>I was going to say this feels pretty niche, but I guess it comes up if you write combinators</p>",
        "id": 197308565,
        "sender_full_name": "tmandry",
        "timestamp": 1589303946
    },
    {
        "content": "<p>I'm trying to understand exactly what's going on I guess</p>",
        "id": 197308621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589303980
    },
    {
        "content": "<p>it seems like a more likely suggestion would be to change</p>",
        "id": 197308675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304002
    },
    {
        "content": "<p>to <code>BoxFuture&lt;'a, bool&gt;</code></p>",
        "id": 197308718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304008
    },
    {
        "content": "<p>then <code>F::Output</code></p>",
        "id": 197308724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304010
    },
    {
        "content": "<p>I don't <em>quite</em> get where that <code>help:</code> comes from</p>",
        "id": 197308748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304024
    },
    {
        "content": "<p>I think if we removed the help text in this case, the error would be much less confusing</p>",
        "id": 197308779,
        "sender_full_name": "tmandry",
        "timestamp": 1589304043
    },
    {
        "content": "<p>I guess I feel like the suggestion is sort of unlikely</p>",
        "id": 197308780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E12/near/197308779\">said</a>:</p>\n<blockquote>\n<p>I think if we removed the help text in this case, the error would be much less confusing</p>\n</blockquote>\n<p>yes</p>",
        "id": 197308785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304048
    },
    {
        "content": "<p>that was my suggestion, let's just remove the \"help\"</p>",
        "id": 197308812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304057
    },
    {
        "content": "<p>I think the other bit is kind of.. we generally \"trust\" declared field types over method bodies</p>",
        "id": 197308832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304070
    },
    {
        "content": "<p>in any case I don't think it's specific to futures</p>",
        "id": 197308845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304076
    },
    {
        "content": "<p>i.e., you might have <code>Option&lt;fn(F)&gt;</code> instead or something</p>",
        "id": 197308870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304086
    },
    {
        "content": "<p>and get a similar error when you tried to store a <code>Option&lt;fn(bool)&gt;</code></p>",
        "id": 197308897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304104
    },
    {
        "content": "<p>yeah, but the <code>Box::pin</code> suggestion is sort of targeted to async users</p>",
        "id": 197308908,
        "sender_full_name": "tmandry",
        "timestamp": 1589304110
    },
    {
        "content": "<p>yes, that suggestion is confusing</p>",
        "id": 197308935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304120
    },
    {
        "content": "<p>and I'm not sure what is prompting it</p>",
        "id": 197308984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304125
    },
    {
        "content": "<p>but it can clearly be targeted more tightly</p>",
        "id": 197308997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304132
    },
    {
        "content": "<p>I'll cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> on the issue</p>",
        "id": 197309006,
        "sender_full_name": "tmandry",
        "timestamp": 1589304140
    },
    {
        "content": "<p>as for triage, I'm not sure whether we should \"own\" the issue or not</p>",
        "id": 197309182,
        "sender_full_name": "tmandry",
        "timestamp": 1589304236
    },
    {
        "content": "<p>I'm marking \"triaged\" for now, but it would be nice to follow up</p>",
        "id": 197309381,
        "sender_full_name": "tmandry",
        "timestamp": 1589304310
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197309411,
        "sender_full_name": "tmandry",
        "timestamp": 1589304326
    },
    {
        "content": "<p>I would say that tracking it until the the \"remove the pin suggestion\" part is removed is good</p>",
        "id": 197309423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304331
    },
    {
        "content": "<p>otherwise I don't consider it super high priority or async specific</p>",
        "id": 197309447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304339
    },
    {
        "content": "<p>done</p>",
        "id": 197309652,
        "sender_full_name": "tmandry",
        "timestamp": 1589304413
    },
    {
        "content": "<h2>thread 'rustc' panicked at 'no label after fn', src/libcore/option.rs:1188:5 <a href=\"https://github.com/rust-lang/rust/issues/72095\">#72095</a></h2>",
        "id": 197309659,
        "sender_full_name": "tmandry",
        "timestamp": 1589304415
    },
    {
        "content": "<p>hmm</p>",
        "id": 197309883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304497
    },
    {
        "content": "<p>I wonder if we could get a non-async version out after minimizing the output of <code>#[async_trait]</code></p>",
        "id": 197309989,
        "sender_full_name": "tmandry",
        "timestamp": 1589304547
    },
    {
        "content": "<p>in any case, seems important to look into..</p>",
        "id": 197310086,
        "sender_full_name": "tmandry",
        "timestamp": 1589304585
    },
    {
        "content": "<h2>Diagnostics request: suggest a closure with an async block when an async closure is encountered <a href=\"https://github.com/rust-lang/rust/issues/71686\">#71686</a></h2>",
        "id": 197310187,
        "sender_full_name": "tmandry",
        "timestamp": 1589304612
    },
    {
        "content": "<p>time check: we're out of time, feel free to step away and I'll continue triaging the last issues here</p>",
        "id": 197310279,
        "sender_full_name": "tmandry",
        "timestamp": 1589304649
    },
    {
        "content": "<p>yeah sorry I got pulle away just now</p>",
        "id": 197310311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304661
    },
    {
        "content": "<p>I'll loop back</p>",
        "id": 197310504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589304727
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/71686\">#71686</a> seems like a very good suggestion and easy win</p>",
        "id": 197310536,
        "sender_full_name": "tmandry",
        "timestamp": 1589304741
    },
    {
        "content": "<p>marking \"On deck\"</p>",
        "id": 197310544,
        "sender_full_name": "tmandry",
        "timestamp": 1589304747
    },
    {
        "content": "<h2>Why implementation of iterator is not generic enough in async context? <a href=\"https://github.com/rust-lang/rust/issues/71671\">#71671</a></h2>",
        "id": 197310636,
        "sender_full_name": "tmandry",
        "timestamp": 1589304790
    },
    {
        "content": "<p>this \"one type is more general than the other\" error message again</p>",
        "id": 197310798,
        "sender_full_name": "tmandry",
        "timestamp": 1589304847
    },
    {
        "content": "<p>I'm trying to decide if this issue is the same as <a href=\"https://github.com/rust-lang/rust/issues/64552\">#64552</a></p>",
        "id": 197310921,
        "sender_full_name": "tmandry",
        "timestamp": 1589304929
    },
    {
        "content": "<p>ah no, the code is invalid but the error message regressed</p>",
        "id": 197311063,
        "sender_full_name": "tmandry",
        "timestamp": 1589304989
    },
    {
        "content": "<p>that's subjective, though</p>",
        "id": 197311198,
        "sender_full_name": "tmandry",
        "timestamp": 1589305050
    },
    {
        "content": "<p>see <a href=\"https://stackoverflow.com/questions/54341465/rust-expected-type-error-prints-mismatched-types-that-are-exactly-the-same/54344401#54344401\">this answer</a> on stackoverflow</p>",
        "id": 197311227,
        "sender_full_name": "tmandry",
        "timestamp": 1589305066
    },
    {
        "content": "<p>/me tries to figure out what's going on</p>",
        "id": 197311387,
        "sender_full_name": "tmandry",
        "timestamp": 1589305136
    },
    {
        "content": "<p>..yeah, I'm confused :D</p>",
        "id": 197312432,
        "sender_full_name": "tmandry",
        "timestamp": 1589305655
    },
    {
        "content": "<p>this error message is clearly not great</p>",
        "id": 197312443,
        "sender_full_name": "tmandry",
        "timestamp": 1589305660
    },
    {
        "content": "<p>the \"expected\" type often appears backwards to developers. I kind of wish it said something like \"$foo expected it to be $bar\"</p>",
        "id": 197312709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1589305748
    },
    {
        "content": "<p>that's an interesting idea, adding what \"perspective\" the compiler is looking at it from</p>",
        "id": 197312931,
        "sender_full_name": "tmandry",
        "timestamp": 1589305793
    },
    {
        "content": "<p>I'm going to mark this issue On Deck for now, but it's possible we can fold it into one of the other issues we have along this vein</p>",
        "id": 197313089,
        "sender_full_name": "tmandry",
        "timestamp": 1589305824
    },
    {
        "content": "<h2>rustc should suggest using async version of Mutex <a href=\"https://github.com/rust-lang/rust/issues/71072\">#71072</a></h2>",
        "id": 197313339,
        "sender_full_name": "tmandry",
        "timestamp": 1589305936
    },
    {
        "content": "<p>.. this is related to our discussion from last week, cc <span class=\"user-mention\" data-user-id=\"207781\">@Lucio Franco</span></p>",
        "id": 197313388,
        "sender_full_name": "tmandry",
        "timestamp": 1589305960
    },
    {
        "content": "<p>I think we should clearly be pushing on some form of this idea, maybe once we figure out the <code>MustUse</code> stuff, or maybe in tandem with it</p>",
        "id": 197313459,
        "sender_full_name": "tmandry",
        "timestamp": 1589305996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"207781\">@Lucio Franco</span> I think you said were interested in driving this forward, in which case you're more than welcome to</p>",
        "id": 197313737,
        "sender_full_name": "tmandry",
        "timestamp": 1589306146
    },
    {
        "content": "<p>This feels like more of a long term \"design\" type thing than some of the other things on our board, but I'm going to put it there anyway</p>",
        "id": 197313913,
        "sender_full_name": "tmandry",
        "timestamp": 1589306212
    },
    {
        "content": "<p>Yeah, I have not had time to dive into it yet but should have some time soon. I was thinking of making some sort of RFC for the lint. I don't think that issue correctly represents what we want nor should we be always suggesting to use an async mutex over a non async one.</p>",
        "id": 197325453,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1589311348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"207781\">Lucio Franco</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E12/near/197325453\">said</a>:</p>\n<blockquote>\n<p>should we be always suggesting to use an async mutex over a non async one.</p>\n</blockquote>\n<p>This was actually a very interesting point to me <a href=\"https://github.com/tokio-rs/mini-redis#using-a-stdsyncmutex-in-an-async-application\">about the mini-redis example</a> — that it <em>can</em> be fine to use \"normal\" mutexes in async code. In retrospect in might be \"obvious\", but it wasn't to me before I read that.</p>",
        "id": 197326040,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1589311616
    },
    {
        "content": "<p>good point, maybe that issue is not the best one to represent the work</p>",
        "id": 197341962,
        "sender_full_name": "tmandry",
        "timestamp": 1589318808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E05.2E12/near/197341962\">said</a>:</p>\n<blockquote>\n<p>good point, maybe that issue is not the best one to represent the work</p>\n</blockquote>\n<p>I think it should be closed, I don't think its a good thing to have tbh.</p>",
        "id": 197347262,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1589321839
    },
    {
        "content": "<p>with the lint I am proposing we would avoid the need to tell users that because we can detect when they do something bad.</p>",
        "id": 197347288,
        "sender_full_name": "Lucio Franco",
        "timestamp": 1589321857
    }
]