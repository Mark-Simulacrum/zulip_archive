[
    {
        "content": "<p>Hey all -- I might be a bit late today fyi</p>",
        "id": 176481374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569342637
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 176481666,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569342884
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> -- I'll be back in ~5 minutes -- but if somebody else wants to get started, seems good. We are basically on path to stabilization now. I'd say first sweep for priority issues but it'd also be good for us to discuss how to go forward.</p>",
        "id": 176484345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569344756
    },
    {
        "content": "<p>we've got a handful of open issues tagged with \"unclear\", so let's try and clean those up:<br>\n<a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Unclear\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Unclear\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Unclear</a></p>",
        "id": 176484561,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569344908
    },
    {
        "content": "<p>I'm still chewing the fat on <a href=\"https://github.com/rust-lang/rust/issues/64603\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64603\">#64603</a> looking at <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>  suggestion. Haven't quite got a fresh PR that passes all the tests yet.</p>",
        "id": 176484573,
        "sender_full_name": "Giles Cope",
        "timestamp": 1569344929
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/64692\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64692\">https://github.com/rust-lang/rust/issues/64692</a> seems a bit concerning-- we're missing a private-in-public error for <code>async fn</code> return types</p>",
        "id": 176484617,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569344980
    },
    {
        "content": "<p>Actually, it does give the error, but only as a future-compat warning</p>",
        "id": 176484712,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345039
    },
    {
        "content": "<p>that seems like not a big deal to me-- it seems somewhat unlikely that users will be writing lots of new code and leaving it as-is when given a future-compat warning.</p>",
        "id": 176484754,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345080
    },
    {
        "content": "<p>what do others think?</p>",
        "id": 176484765,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345091
    },
    {
        "content": "<p>be nice to turn it into a hard error if inside async func I guess?</p>",
        "id": 176484829,
        "sender_full_name": "Giles Cope",
        "timestamp": 1569345124
    },
    {
        "content": "<p>indeed, but I don't think it's blocking.</p>",
        "id": 176484840,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345139
    },
    {
        "content": "<p>agreed</p>",
        "id": 176484845,
        "sender_full_name": "Giles Cope",
        "timestamp": 1569345149
    },
    {
        "content": "<p>Okay, next one is <a href=\"https://github.com/rust-lang/rust/issues/64630\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64630\">https://github.com/rust-lang/rust/issues/64630</a></p>",
        "id": 176484893,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345199
    },
    {
        "content": "<p>matthew is assigned</p>",
        "id": 176484928,
        "sender_full_name": "centril",
        "timestamp": 1569345231
    },
    {
        "content": "<p>maybe backport if small-ish</p>",
        "id": 176484934,
        "sender_full_name": "centril",
        "timestamp": 1569345240
    },
    {
        "content": "<p>this is happening because the desugaring of <code>async fn</code> uses the <code>'_</code> lifetime. Good to know <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is assigned, but I also don't think this is a blocker.</p>",
        "id": 176484990,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345259
    },
    {
        "content": "<p>Okay, I'll leave a comment and switch the label.</p>",
        "id": 176485021,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345296
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/64552\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552\">https://github.com/rust-lang/rust/issues/64552</a></p>",
        "id": 176485118,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345366
    },
    {
        "content": "<p>\"Lifetime bounds in auto trait impls prevent trait from being implemented on generators\"</p>",
        "id": 176485124,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345373
    },
    {
        "content": "<p>I can't say I'd be happy to get <a href=\"https://github.com/rust-lang/rust/issues/64552\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552\">#64552</a>'s error message though I'm not sure how it could be made nicer...</p>",
        "id": 176485160,
        "sender_full_name": "Giles Cope",
        "timestamp": 1569345428
    },
    {
        "content": "<p>I mean, the real issue is that it causes an error at all, right?</p>",
        "id": 176485188,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> did some good investigation and wrote up implementation steps here: <a href=\"https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959\">https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959</a></p>",
        "id": 176485246,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345494
    },
    {
        "content": "<p>I don't have a good sense for whether or not this is a backcompat hazard-- perhaps <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can comment?</p>",
        "id": 176485288,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345553
    },
    {
        "content": "<p>Okay, let's move on and come back to it when <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is around.</p>",
        "id": 176485439,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345664
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/64433\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64433\">https://github.com/rust-lang/rust/issues/64433</a> I think we can close as fixed.</p>",
        "id": 176485466,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345689
    },
    {
        "content": "<p>(I'm back now)</p>",
        "id": 176485474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345701
    },
    {
        "content": "<p>sorry</p>",
        "id": 176485478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345703
    },
    {
        "content": "<p>oh hai</p>",
        "id": 176485481,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> have you looked at <a href=\"https://github.com/rust-lang/rust/issues/64552\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552\">https://github.com/rust-lang/rust/issues/64552</a> at all?</p>",
        "id": 176485486,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345722
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> did some good investigation and wrote up implementation steps here: <a href=\"https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959\">https://github.com/rust-lang/rust/issues/64552#issuecomment-533335959</a></p>\n</blockquote>\n<p>I saw <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>'s comment, but I didn't process it deeply yet. Let me go look. I didn't realize that there was a back-compat question at play here.</p>",
        "id": 176485540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I don't think there is, but I wanted to make sure before we tagged as \"deferred\"</p>",
        "id": 176485557,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345761
    },
    {
        "content": "<p>and I didn't have enough confidence in my understanding of the bug as it exists today to say that it wouldn't cause bad interactions (though I can't imagine what they would be)</p>",
        "id": 176485586,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345793
    },
    {
        "content": "<p>OK, yeah, this is tied in with the work around universes</p>",
        "id": 176485610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345819
    },
    {
        "content": "<p>I don't think there is. My change should only be able to make more auto-trait impls apply to generator types. You can't name a generator type, so I don't think there's any way for users to rely on it \"not* implementing an autontrait</p>",
        "id": 176485613,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1569345821
    },
    {
        "content": "<p>Okay, I'll tag as deferred then unless anyone objects.</p>",
        "id": 176485689,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345870
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I think we can defer it, but I also think we should sort of \"transfer\" the concern to <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> (which I am slowly attempting to revive)</p>",
        "id": 176485699,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345876
    },
    {
        "content": "<p>For now that probably just means me putting it on my list :)</p>",
        "id": 176485722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345898
    },
    {
        "content": "<p>Great, I've added the WG-compiler-traits label</p>",
        "id": 176485723,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345900
    },
    {
        "content": "<p>hokay: <a href=\"https://github.com/rust-lang/rust/issues/64382\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64382\">https://github.com/rust-lang/rust/issues/64382</a></p>",
        "id": 176485777,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345946
    },
    {
        "content": "<p>I don't think there's a back-compat hazard , specifically</p>",
        "id": 176485782,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1569345949
    },
    {
        "content": "<p>I don't think there's a back-compat hazard , specifically</p>",
        "id": 176485785,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1569345952
    },
    {
        "content": "<p>E.g the weird trick I do in pin-project won't work, since it relies on naming the type you're checking</p>",
        "id": 176485786,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1569345952
    },
    {
        "content": "<blockquote>\n<p>hokay: <a href=\"https://github.com/rust-lang/rust/issues/64382\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64382\">https://github.com/rust-lang/rust/issues/64382</a></p>\n</blockquote>\n<p>so this is basically a diagnostics fail, right?</p>",
        "id": 176485866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569345989
    },
    {
        "content": "<p>This is a diagnostics issue-- seems unfortunate, but not blocking.</p>",
        "id": 176485870,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569345995
    },
    {
        "content": "<p>it also seems like we could suggest using an <code>async move</code> block</p>",
        "id": 176485934,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346051
    },
    {
        "content": "<p>similar to what we do for closures</p>",
        "id": 176485954,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346068
    },
    {
        "content": "<p>yeah I was just going to say</p>",
        "id": 176485962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346078
    },
    {
        "content": "<p>maybe we can adapt that closure error message here</p>",
        "id": 176485997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346084
    },
    {
        "content": "<p>Cool, left a comment and tagged as deferred.</p>",
        "id": 176486022,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346095
    },
    {
        "content": "<p>next up: <a href=\"https://github.com/rust-lang/rust/issues/64176\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64176\">https://github.com/rust-lang/rust/issues/64176</a></p>",
        "id": 176486053,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346129
    },
    {
        "content": "<p>maybe related to <a href=\"https://github.com/rust-lang/rust/issues/64552\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64552\">https://github.com/rust-lang/rust/issues/64552</a></p>",
        "id": 176486103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346181
    },
    {
        "content": "<p>I was gonna say that, but then the comment below reproduces without lifetimes-- though there are trait objects, which makes me suspicious that I'm missing an implied lifetime somewhere</p>",
        "id": 176486198,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346221
    },
    {
        "content": "<p>In any case, not blocking</p>",
        "id": 176486306,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346315
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/63710\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63710\">https://github.com/rust-lang/rust/issues/63710</a> is tagged as blocking, but will be closed when <a href=\"https://github.com/rust-lang/rust/pull/64599\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64599\">https://github.com/rust-lang/rust/pull/64599</a> lands. It's beta-nominated, so that should be fine.</p>",
        "id": 176486399,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346354
    },
    {
        "content": "<p>Hokay, that's the end of the unclear list</p>",
        "id": 176486460,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346418
    },
    {
        "content": "<p>blocking: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Blocking\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Blocking\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AAsyncAwait-Blocking</a></p>",
        "id": 176486462,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346420
    },
    {
        "content": "<h1>Spurious new Send requirement in async block <a href=\"https://github.com/rust-lang/rust/issues/64477\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64477\">#64477</a></h1>",
        "id": 176486551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346467
    },
    {
        "content": "<p>So, the <code>format!</code> case still errors, but I didn't expect otherwise</p>",
        "id": 176486585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346489
    },
    {
        "content": "<p>I haven't however looked closely at what's going on there</p>",
        "id": 176486595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346499
    },
    {
        "content": "<p>There <em>may</em>  be a targeted way to fix it; or it may indeed just be <em>correct</em></p>",
        "id": 176486625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346511
    },
    {
        "content": "<p>(The playground doesn't have a way to view the \"expanded HIR\", right?)</p>",
        "id": 176486739,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346573
    },
    {
        "content": "<p>in any case I think we don't have to take immediate action here</p>",
        "id": 176486749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346580
    },
    {
        "content": "<p>I guess the only blocking decision point here would be if we decided we wanted to change our minds and not store temporaries across <code>.await</code>, right?</p>",
        "id": 176486799,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346620
    },
    {
        "content": "<p>Though I do think I would nominate the \"overapproximated Send\" as a plausible \"high priority fix candidate\". I was thinking recently that perhaps <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> was right and we <em>can</em> handle this just by building the MIR when we need to -- but that's probably worth resurrecting as an issue.</p>",
        "id": 176486811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346624
    },
    {
        "content": "<blockquote>\n<p>I guess the only blocking decision point here would be if we decided we wanted to change our minds and not store temporaries across <code>.await</code>, right?</p>\n</blockquote>\n<p>Right. And I think we don't.</p>",
        "id": 176486818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346631
    },
    {
        "content": "<p>Otherwise, it's either a bug that we can fix, or it's just legit.</p>",
        "id": 176486832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346638
    },
    {
        "content": "<p>way, way too late :P</p>",
        "id": 176486843,
        "sender_full_name": "centril",
        "timestamp": 1569346642
    },
    {
        "content": "<p>But let me try to double check :)</p>",
        "id": 176486845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346643
    },
    {
        "content": "<p>^^yup, I agree, just confirming</p>",
        "id": 176486855,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346650
    },
    {
        "content": "<p>(unfortunately I think the errors are just legit, will comment -- I think I'll close the issue at that point)</p>",
        "id": 176487007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346744
    },
    {
        "content": "<p>sg, though that's really too bad</p>",
        "id": 176487028,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346757
    },
    {
        "content": "<p>I kind of wonder whether that kind of thing will hinder the \"just add <code>.await</code> everywhere\" more than the temporary lifetimes changing</p>",
        "id": 176487067,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346799
    },
    {
        "content": "<p>I think the shorter-term fix would be to tweak the format desugaring to try and make its <code>dyn</code> values send</p>",
        "id": 176487129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346805
    },
    {
        "content": "<p>but, like <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> said, way too late and there are workarounds either way.</p>",
        "id": 176487134,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346809
    },
    {
        "content": "<blockquote>\n<p>I kind of wonder whether that kind of thing will hinder the \"just add <code>.await</code> everywhere\" more than the temporary lifetimes changing</p>\n</blockquote>\n<p>yeah idk but I think long term it's the right call :)</p>",
        "id": 176487147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346821
    },
    {
        "content": "<p>(Re. a different issue, I might try the \"insert coercion hack\" in HIR lowering for <code>async fn</code> to see if the<code>Box&lt;dyn ...&gt;</code>problem goes away)</p>",
        "id": 176487208,
        "sender_full_name": "centril",
        "timestamp": 1569346873
    },
    {
        "content": "<p>okay then that just leaves <a href=\"https://github.com/rust-lang/rust/issues/64130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64130\">https://github.com/rust-lang/rust/issues/64130</a> as the only one we haven't discussed</p>",
        "id": 176487211,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346875
    },
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> has been working on that here: <a href=\"#narrow/stream/187312-wg-async-foundations/topic/future-not-send.20diagnostic.20.2364130\" title=\"#narrow/stream/187312-wg-async-foundations/topic/future-not-send.20diagnostic.20.2364130\">https://rust-lang.zulipchat.com/#narrow/stream/187312-wg-async-foundations/topic/future-not-send.20diagnostic.20.2364130</a></p>",
        "id": 176487352,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> is working on it</p>",
        "id": 176487355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346953
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 176487357,
        "sender_full_name": "davidtwco",
        "timestamp": 1569346955
    },
    {
        "content": "<p>Is that something we're planning to backport?</p>",
        "id": 176487364,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569346963
    },
    {
        "content": "<p>I guess one question that I'd like to ask is people's take on backporting for things like this</p>",
        "id": 176487371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346968
    },
    {
        "content": "<p>Will continue tonight. Hopefully have something useful soon.</p>",
        "id": 176487372,
        "sender_full_name": "davidtwco",
        "timestamp": 1569346969
    },
    {
        "content": "<p>(jynx)</p>",
        "id": 176487377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346973
    },
    {
        "content": "<p>I think it depends on the PR size and confidence</p>",
        "id": 176487403,
        "sender_full_name": "centril",
        "timestamp": 1569346989
    },
    {
        "content": "<p>My take is: if it comes soon, and lands on nightly for a bit happily, and it's not <em>overly</em> intrusive, I'd be game to backport this one</p>",
        "id": 176487404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569346990
    },
    {
        "content": "<p>Though it's not the kind of thing I would ordinarily backport</p>",
        "id": 176487417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347002
    },
    {
        "content": "<p>Okay. Should I tag as deferred then, given that I don't think we'll lose track of it?</p>",
        "id": 176487426,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347008
    },
    {
        "content": "<p>(But I view this as something of a special case)</p>",
        "id": 176487427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347009
    },
    {
        "content": "<p>yeah I think that's fine</p>",
        "id": 176487433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347015
    },
    {
        "content": "<p>and that I don't think we actually want to stop stabilization for this?</p>",
        "id": 176487437,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347018
    },
    {
        "content": "<p>I've just been using blocking as \"things we're working on\"</p>",
        "id": 176487455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347028
    },
    {
        "content": "<p>it's forward compat, right?</p>",
        "id": 176487456,
        "sender_full_name": "centril",
        "timestamp": 1569347028
    },
    {
        "content": "<p>it's just a diagnostics change</p>",
        "id": 176487464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347035
    },
    {
        "content": "<p>Yes, just improved diagnostics</p>",
        "id": 176487472,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347040
    },
    {
        "content": "<p>then not a blocker</p>",
        "id": 176487485,
        "sender_full_name": "centril",
        "timestamp": 1569347042
    },
    {
        "content": "<p>well, \"just\"-- it's a massive improvement</p>",
        "id": 176487536,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347056
    },
    {
        "content": "<p>We can discuss how we manage priority going forward, but I think I'd like to propose we rename <code>AsyncAwait-Blocking</code> to <code>AsyncAwait-High</code></p>",
        "id": 176487540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347057
    },
    {
        "content": "<p>or perhaps <code>-Focus</code></p>",
        "id": 176487552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347066
    },
    {
        "content": "<p>-High/Medium/Low seems good</p>",
        "id": 176487566,
        "sender_full_name": "centril",
        "timestamp": 1569347079
    },
    {
        "content": "<p>After stabilization, I think that makes sense</p>",
        "id": 176487604,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> by after do you mean next week? :P</p>",
        "id": 176487627,
        "sender_full_name": "centril",
        "timestamp": 1569347112
    },
    {
        "content": "<p>before stabilization I think it was useful to know which things we absolutely had to land-- chiefly backcompat hazards</p>",
        "id": 176487630,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347114
    },
    {
        "content": "<p>^^ yup</p>",
        "id": 176487640,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347120
    },
    {
        "content": "<p>I guess it comes a bit to the question of how we're going to manage the group overall, but I think there's still a lot of \"improved quality\" work to be done, so i'd like us to try and keep a \"slow, steady\" progress thing going on</p>",
        "id": 176487642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347121
    },
    {
        "content": "<p>My basic view would be that, at any given time, we nominate ~2 or 3 issues as \"high\" -- those are the ones that (a) seem most urgent to us and (b) are actionable in a reasonable time frame, and we try to get them assigned. We can do more if we have more capacity, but that's also ok. If something has stayed high but made no progress for a week or two, we swap in something else. :)</p>",
        "id": 176487726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347169
    },
    {
        "content": "<p>Something like that</p>",
        "id": 176487745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347183
    },
    {
        "content": "<p>Agreed; I think finishing the existing open issues should be a prio before any new feature work</p>",
        "id": 176487746,
        "sender_full_name": "centril",
        "timestamp": 1569347184
    },
    {
        "content": "<p>yeah, I'll keep posting PRs and cc'ing you or asking questions here if I have plans to do something. Nominating issues makes sense, but I don't know that a weekly check-in is super necessary.</p>",
        "id": 176487760,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347192
    },
    {
        "content": "<p>(As I wrote earlier, I have blocked out a few hours of my own time per week, so I plan to try and tackle one issue per week also)</p>",
        "id": 176487772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347204
    },
    {
        "content": "<p>We need a new nomination label heh</p>",
        "id": 176487784,
        "sender_full_name": "centril",
        "timestamp": 1569347214
    },
    {
        "content": "<p>Hmm. I think a weekly check-in is kind of useful.</p>",
        "id": 176487789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347217
    },
    {
        "content": "<p>I-nominated would be too overloaded</p>",
        "id": 176487792,
        "sender_full_name": "centril",
        "timestamp": 1569347221
    },
    {
        "content": "<p>Well, maybe it's overkill, we just need some way to monitor things</p>",
        "id": 176487817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> okay, I guess I'm a bit confused then</p>",
        "id": 176487820,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347240
    },
    {
        "content": "<p>Possibly bi-weekly if not weekly</p>",
        "id": 176487822,
        "sender_full_name": "centril",
        "timestamp": 1569347242
    },
    {
        "content": "<p>I'm fine keeping the weekly meeting if others are planning to come</p>",
        "id": 176487837,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347248
    },
    {
        "content": "<p>If you think it's helpful, I'd be happy to continue doing it.</p>",
        "id": 176487858,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347261
    },
    {
        "content": "<p>I would imagine the goal would be :</p>\n<p>- check to see things are making progress<br>\n- consider what new things to nominate if stuff has landed</p>",
        "id": 176487869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347267
    },
    {
        "content": "<p>I imagine the weekly checkins as \"access to Niko-advice-on-compiler time\" :P</p>",
        "id": 176487933,
        "sender_full_name": "centril",
        "timestamp": 1569347285
    },
    {
        "content": "<p>I guess maybe if we find those things are working async that's ok too</p>",
        "id": 176487935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347286
    },
    {
        "content": "<p>ok well to start shall we rename the labels ?</p>",
        "id": 176487963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347304
    },
    {
        "content": "<p>yes, let's</p>",
        "id": 176487986,
        "sender_full_name": "centril",
        "timestamp": 1569347320
    },
    {
        "content": "<p>oh whoops</p>",
        "id": 176488008,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347335
    },
    {
        "content": "<p>I got myself all mixed up, sorry</p>",
        "id": 176488015,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347339
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> which is the issue about return coercion? if you want to put it as \"-high\" I'm game; I'd also be able to spend some time investigating tomorrow morning I think, though I'm happy to help mentor you through it if we find a good path</p>",
        "id": 176488021,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347343
    },
    {
        "content": "<p>-Unclear still makes sense as \"assign prio\"?</p>",
        "id": 176488027,
        "sender_full_name": "centril",
        "timestamp": 1569347344
    },
    {
        "content": "<p>I thought I was responding to the book chat</p>",
        "id": 176488029,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347345
    },
    {
        "content": "<p>lol :)</p>",
        "id": 176488033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347350
    },
    {
        "content": "<p>yes, parallel conversations...</p>",
        "id": 176488047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347355
    },
    {
        "content": "<p>where you said &gt; nikomatsakis: But I guess we don't need a meeting to do that</p>",
        "id": 176488054,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347361
    },
    {
        "content": "<p>sorry about that</p>",
        "id": 176488058,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347366
    },
    {
        "content": "<p>Yes, I agree we should keep this weekly meeting</p>",
        "id": 176488069,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347373
    },
    {
        "content": "<p>I think we can roll the book updates into this meeting, perhaps</p>",
        "id": 176488082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347381
    },
    {
        "content": "<p>mhm</p>",
        "id": 176488086,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1569347385
    },
    {
        "content": "<p>I consider the book part of our output :)</p>",
        "id": 176488092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sure; if initial experimentation pans out most of the work might be to fix <code>hir::ExprKind::Type</code> to behave correctly</p>",
        "id": 176488225,
        "sender_full_name": "centril",
        "timestamp": 1569347453
    },
    {
        "content": "<blockquote>\n<p>-Unclear still makes sense as \"assign prio\"?</p>\n</blockquote>\n<p>maybe <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> somehing like</p>\n<p>- AsyncAwait-Focus -- things we are doing now<br>\n- AsyncAwait-OnDeck -- things nominated as \"maybe do next\"<br>\n- AsyncAwait-Other -- other things :)</p>\n<p>That said, I wonder if we should try a github project for this.</p>",
        "id": 176488233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347460
    },
    {
        "content": "<p>I've traditionally been kind of down on them though and I still sort of feel like it'd be more annoying than issue lists :)</p>",
        "id": 176488276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347486
    },
    {
        "content": "<p>I like labels because they are not so mutually exclusive personally</p>",
        "id": 176488287,
        "sender_full_name": "centril",
        "timestamp": 1569347493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Yeah that labeling system works, it's basically high/med/low renamed :P</p>",
        "id": 176488351,
        "sender_full_name": "centril",
        "timestamp": 1569347523
    },
    {
        "content": "<p>yes but in particular most things are \"low\"</p>",
        "id": 176488399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347552
    },
    {
        "content": "<p>except i'm not calling it that</p>",
        "id": 176488406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347555
    },
    {
        "content": "<p>my vision would be that focus is like 2-5 items, focus is &lt; 1 page, and other is however big it has to be :)</p>",
        "id": 176488425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347570
    },
    {
        "content": "<p>makes sense</p>",
        "id": 176488438,
        "sender_full_name": "centril",
        "timestamp": 1569347580
    },
    {
        "content": "<p>I would also say do not add any label for new things</p>",
        "id": 176488444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347586
    },
    {
        "content": "<p>and thus unlabeled things are \"triage\"</p>",
        "id": 176488456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347597
    },
    {
        "content": "<p>(but will almost certainly go to other)</p>",
        "id": 176488469,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347609
    },
    {
        "content": "<p>ok, cool, let's see how this works out... :)</p>",
        "id": 176488500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347640
    },
    {
        "content": "<p>from a triage perspective it seems simplest to have an -Untriaged label sorta</p>",
        "id": 176488553,
        "sender_full_name": "centril",
        "timestamp": 1569347651
    },
    {
        "content": "<p>I think we can separate out things like async_closures that are not stable also</p>",
        "id": 176488576,
        "sender_full_name": "centril",
        "timestamp": 1569347663
    },
    {
        "content": "<p>as you choose. seems like strictly more work to me</p>",
        "id": 176488579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347667
    },
    {
        "content": "<p>focus on improving what is stable</p>",
        "id": 176488582,
        "sender_full_name": "centril",
        "timestamp": 1569347670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> maybe you're right</p>",
        "id": 176488608,
        "sender_full_name": "centril",
        "timestamp": 1569347689
    },
    {
        "content": "<p>the idea being \"asyncawait labels\" are things we add for our own purposes</p>",
        "id": 176488615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347691
    },
    {
        "content": "<p>( triage group adds \"area\" label )</p>",
        "id": 176488625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347700
    },
    {
        "content": "<p>my main concern is:</p>",
        "id": 176488645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347711
    },
    {
        "content": "<p>if you have a -Untriaged label</p>",
        "id": 176488652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347715
    },
    {
        "content": "<p>you have the potential for things to fall through the cracks</p>",
        "id": 176488656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347720
    },
    {
        "content": "<p>that never got any label at all</p>",
        "id": 176488660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347723
    },
    {
        "content": "<p>unless you also search for \"no label\"</p>",
        "id": 176488666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347731
    },
    {
        "content": "<p>at which point...</p>",
        "id": 176488669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347732
    },
    {
        "content": "<p>So you need <code>label:A-async-await -label:Async-Await-Focus -label:Async-Await-OnDeck -label:Async-Await-Other</code> right?</p>",
        "id": 176488687,
        "sender_full_name": "centril",
        "timestamp": 1569347747
    },
    {
        "content": "<p>(those being the untriaged ones)</p>",
        "id": 176488710,
        "sender_full_name": "centril",
        "timestamp": 1569347763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> right -- that's the link in <a href=\"https://rust-lang.github.io/compiler-team/working-groups/async-await/triage-links/\" target=\"_blank\" title=\"https://rust-lang.github.io/compiler-team/working-groups/async-await/triage-links/\">this page</a></p>",
        "id": 176488767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347790
    },
    {
        "content": "<p>(except with different label names)</p>",
        "id": 176488780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347799
    },
    {
        "content": "<p>that is, the \"uncategorized issues\"</p>",
        "id": 176488785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> excellent, so we remove -Unclear then</p>",
        "id": 176488805,
        "sender_full_name": "centril",
        "timestamp": 1569347820
    },
    {
        "content": "<p>OK, are you going to edit the labels? Shall I?</p>",
        "id": 176488846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347854
    },
    {
        "content": "<p>I can do it right now...</p>",
        "id": 176488859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569347865
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> feel free to it; I'll make some <span aria-label=\"tea\" class=\"emoji emoji-1f375\" role=\"img\" title=\"tea\">:tea:</span>  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 176488865,
        "sender_full_name": "centril",
        "timestamp": 1569347870
    },
    {
        "content": "<p>done</p>",
        "id": 176489146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569348009
    },
    {
        "content": "<p>I'll also update the compiler-team page</p>",
        "id": 176489155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569348013
    },
    {
        "content": "<p>Moved <a href=\"https://github.com/rust-lang/rust/issues/60424\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60424\">https://github.com/rust-lang/rust/issues/60424</a> to -Focus</p>",
        "id": 176489186,
        "sender_full_name": "centril",
        "timestamp": 1569348033
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/compiler-team/pull/183\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/pull/183\">https://github.com/rust-lang/compiler-team/pull/183</a> which desribes the new organization</p>",
        "id": 176493171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569350528
    },
    {
        "content": "<p>Spent..kind of way too long working on that</p>",
        "id": 176493175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569350533
    }
]