[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1172\">@WG-async-foundations</span> meeting time!</p>",
        "id": 192418508,
        "sender_full_name": "tmandry",
        "timestamp": 1585674034
    },
    {
        "content": "<p><a href=\"https://github.com/orgs/rust-lang/projects/2\" title=\"https://github.com/orgs/rust-lang/projects/2\">Project board</a></p>",
        "id": 192418566,
        "sender_full_name": "tmandry",
        "timestamp": 1585674062
    },
    {
        "content": "<p>One issue was closed this week:</p>\n<ul>\n<li>async fn presence affects an unrelated error message <a href=\"https://github.com/rust-lang/rust/issues/66312\" title=\"https://github.com/rust-lang/rust/issues/66312\">#66312</a></li>\n</ul>",
        "id": 192418625,
        "sender_full_name": "tmandry",
        "timestamp": 1585674091
    },
    {
        "content": "<p>In progress updates:</p>",
        "id": 192418674,
        "sender_full_name": "tmandry",
        "timestamp": 1585674111
    },
    {
        "content": "<h2>Bad error message with async main <a href=\"https://github.com/rust-lang/rust/issues/68523\" title=\"https://github.com/rust-lang/rust/issues/68523\">#68523</a></h2>",
        "id": 192418691,
        "sender_full_name": "tmandry",
        "timestamp": 1585674119
    },
    {
        "content": "<p>looks like there was some feedback left</p>",
        "id": 192418769,
        "sender_full_name": "tmandry",
        "timestamp": 1585674137
    },
    {
        "content": "<p>I'm not sure if the author is on zulip</p>",
        "id": 192418795,
        "sender_full_name": "tmandry",
        "timestamp": 1585674154
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"247082\">@Sebastian Malton</span></p>",
        "id": 192418866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674187
    },
    {
        "content": "<p>I was just about to say =)</p>",
        "id": 192418902,
        "sender_full_name": "tmandry",
        "timestamp": 1585674204
    },
    {
        "content": "<p>..feel free to leave any updates here</p>",
        "id": 192418919,
        "sender_full_name": "tmandry",
        "timestamp": 1585674215
    },
    {
        "content": "<p>(Side note that anonymizing people's e-mails on Zulip has made it a lot harder to tell who they are..)</p>",
        "id": 192418922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674217
    },
    {
        "content": "<p>Including the <code>Span</code> in the HIR Yes variant is a good idea</p>",
        "id": 192419011,
        "sender_full_name": "centril",
        "timestamp": 1585674242
    },
    {
        "content": "<p>okay, moving on for now</p>",
        "id": 192419071,
        "sender_full_name": "tmandry",
        "timestamp": 1585674279
    },
    {
        "content": "<h2>Explanation for why future is not Send is wrong <a href=\"https://github.com/rust-lang/rust/issues/68112\" title=\"https://github.com/rust-lang/rust/issues/68112\">#68112</a></h2>",
        "id": 192419075,
        "sender_full_name": "tmandry",
        "timestamp": 1585674282
    },
    {
        "content": "<p>..I started out trying to write mentoring instructions for this, but ended up fixing lots of it myself :)</p>",
        "id": 192419119,
        "sender_full_name": "tmandry",
        "timestamp": 1585674304
    },
    {
        "content": "<p>I needed a refresher of those parts of the compiler anyway</p>",
        "id": 192419158,
        "sender_full_name": "tmandry",
        "timestamp": 1585674319
    },
    {
        "content": "<p>today I'll either fix the rest or write up instructions for it</p>",
        "id": 192419177,
        "sender_full_name": "tmandry",
        "timestamp": 1585674329
    },
    {
        "content": "<p>the trickiest bit so far is that we need to know if an obligation comes from the awaited expression <em>itself</em> to give a good error message</p>",
        "id": 192419317,
        "sender_full_name": "tmandry",
        "timestamp": 1585674390
    },
    {
        "content": "<p>/me shows up to the meeting due to causing some regressions</p>",
        "id": 192419341,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585674407
    },
    {
        "content": "<p>I'm planning to stick that expr HirId inside <code>YieldSource</code> during lowering, and compare them by type, I think</p>",
        "id": 192419380,
        "sender_full_name": "tmandry",
        "timestamp": 1585674434
    },
    {
        "content": "<p>moving on?</p>",
        "id": 192419508,
        "sender_full_name": "tmandry",
        "timestamp": 1585674494
    },
    {
        "content": "<p>I don't quite understand that but ok :)</p>",
        "id": 192419523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674500
    },
    {
        "content": "<p>I would expect us to use a custom \"cause code\"</p>",
        "id": 192419542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674511
    },
    {
        "content": "<p>not sure if that's what you have in mind or not</p>",
        "id": 192419570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674522
    },
    {
        "content": "<p>or if that's for some reason inapplicable</p>",
        "id": 192419579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674527
    },
    {
        "content": "<p>(I didn't look too closely at the issue)</p>",
        "id": 192419590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674532
    },
    {
        "content": "<p>well.. I'm a little out of context and don't want to stall the meeting, but we can talk about it in another topic after</p>",
        "id": 192419705,
        "sender_full_name": "tmandry",
        "timestamp": 1585674590
    },
    {
        "content": "<p>it's possible that would work, I'm not sure</p>",
        "id": 192419776,
        "sender_full_name": "tmandry",
        "timestamp": 1585674606
    },
    {
        "content": "<h2>ICE: src/librustc/middle/region.rs:1037: Encountered greater count 28 <a href=\"https://github.com/rust-lang/rust/issues/69307\" title=\"https://github.com/rust-lang/rust/issues/69307\">#69307</a></h2>",
        "id": 192419788,
        "sender_full_name": "tmandry",
        "timestamp": 1585674614
    },
    {
        "content": "<p>has PR</p>",
        "id": 192419834,
        "sender_full_name": "tmandry",
        "timestamp": 1585674635
    },
    {
        "content": "<p>cool</p>",
        "id": 192419867,
        "sender_full_name": "tmandry",
        "timestamp": 1585674653
    },
    {
        "content": "<p>Any updates on blocked issues?</p>",
        "id": 192419898,
        "sender_full_name": "tmandry",
        "timestamp": 1585674669
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 192419938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674686
    },
    {
        "content": "<p>let me look quickly</p>",
        "id": 192419944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674688
    },
    {
        "content": "<p>not from me, anyway</p>",
        "id": 192420006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674714
    },
    {
        "content": "<p>yeah, same</p>",
        "id": 192420016,
        "sender_full_name": "tmandry",
        "timestamp": 1585674720
    },
    {
        "content": "<p>let's jump ahead to <a href=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\" title=\"https://github.com/search?q=org%3Arust-lang+is%3Aissue+label%3AA-async-await+is%3Aopen+-label%3AAsyncAwait-Triaged&amp;type=Issues\">Uncategorized issues</a> in case one is high-priority</p>",
        "id": 192420147,
        "sender_full_name": "tmandry",
        "timestamp": 1585674764
    },
    {
        "content": "<h2>internal compiler error: no type for local variable <a href=\"https://github.com/rust-lang/rust/issues/70594\" title=\"https://github.com/rust-lang/rust/issues/70594\">#70594</a></h2>",
        "id": 192420175,
        "sender_full_name": "tmandry",
        "timestamp": 1585674778
    },
    {
        "content": "<p>I guess that's the <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> regression :)</p>",
        "id": 192420239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674806
    },
    {
        "content": "<p>one of them, yeah :)</p>",
        "id": 192420285,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585674825
    },
    {
        "content": "<p>as promised <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 192420291,
        "sender_full_name": "tmandry",
        "timestamp": 1585674828
    },
    {
        "content": "<p>any idea what's the cause?</p>",
        "id": 192420310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674837
    },
    {
        "content": "<p>luckily only in diagnostics. haven't looked into it at all yet.</p>",
        "id": 192420318,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585674839
    },
    {
        "content": "<p>(how HIR lowering works really wasn't obvious to me, I've seen similar errors while working on the original PR though)</p>",
        "id": 192420446,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585674879
    },
    {
        "content": "<p>hmm, this was triaged as P-medium but given that it's an ICE, I think I'll add it to our \"To do\" column</p>",
        "id": 192420452,
        "sender_full_name": "tmandry",
        "timestamp": 1585674882
    },
    {
        "content": "<p>It's an ICE + regression</p>",
        "id": 192420511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674904
    },
    {
        "content": "<p>I'd call it P-high myself</p>",
        "id": 192420528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674914
    },
    {
        "content": "<p>I guess it's weird though</p>",
        "id": 192420543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674919
    },
    {
        "content": "<p>i.e., an erroneous program</p>",
        "id": 192420564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674925
    },
    {
        "content": "<p>yeah</p>",
        "id": 192420572,
        "sender_full_name": "tmandry",
        "timestamp": 1585674929
    },
    {
        "content": "<p>bit of a gray area</p>",
        "id": 192420591,
        "sender_full_name": "tmandry",
        "timestamp": 1585674936
    },
    {
        "content": "<p>anyway P-medium is maybe fine but I agree with To Do</p>",
        "id": 192420594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674937
    },
    {
        "content": "<p>P-medium tends to be used when there's still a useful diagnostic before the ICE, which is the case here</p>",
        "id": 192420602,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585674941
    },
    {
        "content": "<p>yeah</p>",
        "id": 192420623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585674948
    },
    {
        "content": "<p>ok, moving on</p>",
        "id": 192420718,
        "sender_full_name": "tmandry",
        "timestamp": 1585674972
    },
    {
        "content": "<h2>Async performance regression <a href=\"https://github.com/rust-lang/rust/issues/70488\" title=\"https://github.com/rust-lang/rust/issues/70488\">#70488</a></h2>",
        "id": 192420726,
        "sender_full_name": "tmandry",
        "timestamp": 1585674975
    },
    {
        "content": "<p>/me reads</p>",
        "id": 192420798,
        "sender_full_name": "tmandry",
        "timestamp": 1585675008
    },
    {
        "content": "<p>TL;DR: Lower alignment requirements in generators make a copy more expensive</p>",
        "id": 192420868,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585675042
    },
    {
        "content": "<p>hmm</p>",
        "id": 192420995,
        "sender_full_name": "tmandry",
        "timestamp": 1585675087
    },
    {
        "content": "<p>I guess LLVM can't help optimize our layouts, since we express them at the byte level iirc</p>",
        "id": 192421081,
        "sender_full_name": "tmandry",
        "timestamp": 1585675124
    },
    {
        "content": "<p>it would be nice if we could express a set of \"layout constraints\" instead</p>",
        "id": 192421119,
        "sender_full_name": "tmandry",
        "timestamp": 1585675148
    },
    {
        "content": "<p>I imagine that this regression has close to zero real-world impact though, the benchmark really <em>only</em> does a copy and nothing else</p>",
        "id": 192421130,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585675153
    },
    {
        "content": "<p>yes, that's a good point</p>",
        "id": 192421164,
        "sender_full_name": "tmandry",
        "timestamp": 1585675173
    },
    {
        "content": "<p>I'm inclined to close as won't fix</p>",
        "id": 192421198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675196
    },
    {
        "content": "<p>I'm not really sure what LLVM is doing there, it gets a <code>load volatile</code> with <code>align 8</code>, but chooses to copy the structure one byte at a time. Might be something for LLVM experts to look into.</p>",
        "id": 192421261,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585675208
    },
    {
        "content": "<p>unless we have evidence of impact for something more significant</p>",
        "id": 192421262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675210
    },
    {
        "content": "<p>that said</p>",
        "id": 192421281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675220
    },
    {
        "content": "<p>I don't <em>quite</em> understand the problem</p>",
        "id": 192421288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E03.2E31/near/192421261\" title=\"#narrow/stream/187312-wg-async-foundations/topic/meeting.202020.2E03.2E31/near/192421261\">said</a>:</p>\n<blockquote>\n<p>I'm not really sure what LLVM is doing there, it gets a <code>load volatile</code> with <code>align 8</code>, but chooses to copy the structure one byte at a time. Might be something for LLVM experts to look into.</p>\n</blockquote>\n<p>I guess this</p>",
        "id": 192421299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675228
    },
    {
        "content": "<p>i.e., it seems like this is a kind of failure of LLVM or our codegen or something,</p>",
        "id": 192421319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675245
    },
    {
        "content": "<p>if this is really just copying, couldn't we by copying the entire struct at once?</p>",
        "id": 192421364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675266
    },
    {
        "content": "<p>^ right, that's the part I don't understand</p>",
        "id": 192421407,
        "sender_full_name": "tmandry",
        "timestamp": 1585675295
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/70488#issuecomment-606296787\" title=\"https://github.com/rust-lang/rust/issues/70488#issuecomment-606296787\">this comment by <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> is helpful</a>:</p>\n<blockquote>\n<p>I haven't completely nailed down this issue yet as I'm not an LLVM expert, but it seems like it's caused by LLVM using only the LLVM type for alignment decisions, not the explicit alignment of the load (Presumably this doesn't always happen for loads or it would have been caught earlier? Are only volatile loads affected?).</p>\n</blockquote>",
        "id": 192421499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675330
    },
    {
        "content": "<p>I would also be inclined to close as won't fix btw</p>",
        "id": 192421541,
        "sender_full_name": "simulacrum",
        "timestamp": 1585675365
    },
    {
        "content": "<p>in the sense that we have no evidence of actual regressions</p>",
        "id": 192421562,
        "sender_full_name": "simulacrum",
        "timestamp": 1585675376
    },
    {
        "content": "<p>yeah that's fair. part of me wants to know why LLVM does this, but we could take a default stance that it probably doesn't actually matter</p>",
        "id": 192421636,
        "sender_full_name": "tmandry",
        "timestamp": 1585675421
    },
    {
        "content": "<p>We could ping the LLVM ICE-breakers group and see if they've any input</p>",
        "id": 192421738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675466
    },
    {
        "content": "<p>But I think we're unlikely to change the generator alignment absent a more compelling example</p>",
        "id": 192421775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675489
    },
    {
        "content": "<p>Pinging LLVM seems good though, in the sense that maybe it's some bug in LLVM</p>",
        "id": 192421790,
        "sender_full_name": "simulacrum",
        "timestamp": 1585675499
    },
    {
        "content": "<p>(might be nice to fix on the LLVM or codegen side)</p>",
        "id": 192421806,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675508
    },
    {
        "content": "<p>(to me it seems clear that the assembly generated is horrid)</p>",
        "id": 192421809,
        "sender_full_name": "simulacrum",
        "timestamp": 1585675512
    },
    {
        "content": "<p>I could see it being a problem where they don't realize they can use aligned loads</p>",
        "id": 192421848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675535
    },
    {
        "content": "<p>okay, I'm summarizing all of this in a comment</p>",
        "id": 192421921,
        "sender_full_name": "tmandry",
        "timestamp": 1585675564
    },
    {
        "content": "<p>how do we ping that group again?</p>",
        "id": 192421998,
        "sender_full_name": "tmandry",
        "timestamp": 1585675601
    },
    {
        "content": "<p><code>@rustbot ping llvm</code></p>",
        "id": 192422036,
        "sender_full_name": "simulacrum",
        "timestamp": 1585675621
    },
    {
        "content": "<p>ok, done</p>",
        "id": 192422119,
        "sender_full_name": "tmandry",
        "timestamp": 1585675665
    },
    {
        "content": "<p>I'm going to lower from P-high to.. P-low?</p>",
        "id": 192422156,
        "sender_full_name": "tmandry",
        "timestamp": 1585675680
    },
    {
        "content": "<p>that leaves us with a couple minutes to look at the <a href=\"https://github.com/orgs/rust-lang/projects/2\" title=\"https://github.com/orgs/rust-lang/projects/2\">project board</a> again</p>",
        "id": 192422277,
        "sender_full_name": "tmandry",
        "timestamp": 1585675722
    },
    {
        "content": "<p>we have 6 issues in To Do, if anyone wants to claim one</p>",
        "id": 192422305,
        "sender_full_name": "tmandry",
        "timestamp": 1585675737
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> -- are you claiming <a href=\"https://github.com/rust-lang/rust/issues/70594\" title=\"https://github.com/rust-lang/rust/issues/70594\">https://github.com/rust-lang/rust/issues/70594</a> ?</p>",
        "id": 192422340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675762
    },
    {
        "content": "<p>yeah, will look into that</p>",
        "id": 192422376,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585675781
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span>, regarding <a href=\"https://github.com/rust-lang/rust-clippy/issues/4226\" title=\"https://github.com/rust-lang/rust-clippy/issues/4226\">https://github.com/rust-lang/rust-clippy/issues/4226</a>, it seems like it'd be good to give a few more details of what is expected</p>",
        "id": 192422492,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675820
    },
    {
        "content": "<p>i.e., what are some examples that <em>don't</em> yield a compiler error?</p>",
        "id": 192422508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675828
    },
    {
        "content": "<p>and what precisely are we testing for?</p>",
        "id": 192422525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675834
    },
    {
        "content": "<p>just the types from the stdlib?</p>",
        "id": 192422533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675837
    },
    {
        "content": "<p>yeah, I specifically want to test for any kind of <code>MutexGuard</code> (in both stdlib and parking_lot if possible)</p>",
        "id": 192422575,
        "sender_full_name": "tmandry",
        "timestamp": 1585675860
    },
    {
        "content": "<p>I will claim <a href=\"https://github.com/rust-lang/rust/issues/66107\" title=\"https://github.com/rust-lang/rust/issues/66107\">https://github.com/rust-lang/rust/issues/66107</a> to leave some mentoring instructions</p>",
        "id": 192422603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675868
    },
    {
        "content": "<p>but yes, I'll leave some notes on the issue</p>",
        "id": 192422620,
        "sender_full_name": "tmandry",
        "timestamp": 1585675877
    },
    {
        "content": "<p>I spent some time on this during our \"focus day\" (we should probably schedule another... but not this week)</p>",
        "id": 192422626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675879
    },
    {
        "content": "<p>but I didn't quite figure out what to do :)</p>",
        "id": 192422649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585675886
    },
    {
        "content": "<p>yeah, I'm considering having a standing focus day every Tuesday</p>",
        "id": 192422704,
        "sender_full_name": "tmandry",
        "timestamp": 1585675906
    },
    {
        "content": "<p>I do want to <em>actually</em> bootstrap mentoring notes on a lot of issues :)</p>",
        "id": 192422852,
        "sender_full_name": "tmandry",
        "timestamp": 1585675952
    },
    {
        "content": "<p>anyway, we're at time, so</p>",
        "id": 192422875,
        "sender_full_name": "tmandry",
        "timestamp": 1585675964
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> thanks all for coming!</p>",
        "id": 192422889,
        "sender_full_name": "tmandry",
        "timestamp": 1585675970
    },
    {
        "content": "<p>Yeah it is me. I am still working on it, just a little busy the past few days.</p>",
        "id": 192470356,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1585700751
    }
]