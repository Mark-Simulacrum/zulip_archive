[
    {
        "content": "<p>I am reading over the async status quo stories and I have a question that perhaps illustrates my ignorance</p>",
        "id": 233920675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024362
    },
    {
        "content": "<p>I’m reading <a href=\"https://rust-lang.github.io/wg-async-foundations/vision/status_quo/barbara_wants_async_insights.html\">Barbara wants Async Insights</a></p>",
        "id": 233920687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024394
    },
    {
        "content": "<p>the story ends with:</p>\n<blockquote>\n<p>After hours of crawling through the code, she notices that her task is receiving a message from a bounded async channel. She changes this to be an unbounded channel and then things start working.</p>\n</blockquote>",
        "id": 233920697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024412
    },
    {
        "content": "<p>My question (whose answer doesn’t need to be part of the story itself): Why, in this scenario, does that fix things?</p>",
        "id": 233920758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024453
    },
    {
        "content": "<p>more specifically: I would understand if the problem here is that the bounded channel is filling up, and so the task calling <code>send</code> on the channel is being forced to wait at that point</p>",
        "id": 233920924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024664
    },
    {
        "content": "<p>but the way that the story is written, it sounds like Barbara is not seeing any output ever, at all. So chaning from a bounded to an unbounded channel in just one places just sounds like she will replace her blocked task with a task that is unblocked but is also filling up an unbounded channel that is never being emptied</p>",
        "id": 233921008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024757
    },
    {
        "content": "<p>(and thus she should see a subsequent memory leak, but no actual useful progress otherwise from her program, AFAICT)</p>",
        "id": 233921020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618024777
    },
    {
        "content": "<p>Or have I misinterpreted the story? I.e. is this something where there is a single-thread handling both the send's and the recv’s, and so if Barbara fails to process the queue fast enough, the bounded channel will fill up, and then the whole system comes to a halt as soon as a send fails?</p>",
        "id": 233921798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618025552
    },
    {
        "content": "<p>In <a href=\"https://ryhl.io/blog/actors-with-tokio/#beware-of-cycles\">my blogpost on actors</a> I mention one way that bounded channels can cause deadlocks, namely if you have a cycle of them, but I don't know whether this was the intended cause.</p>",
        "id": 233936056,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1618040990
    },
    {
        "content": "<p>I think that was written in one of <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span>'s sessions; I too assumed that the buffer filled up.</p>",
        "id": 233942871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618048619
    },
    {
        "content": "<p>The story was inspired by <span class=\"user-mention\" data-user-id=\"255022\">@Emmanuel Antony</span>’s experience which I believe reflected an issue similar to what <span class=\"user-mention\" data-user-id=\"218683\">@Alice Ryhl</span> just posted.</p>",
        "id": 233948425,
        "sender_full_name": "rylev",
        "timestamp": 1618054582
    },
    {
        "content": "<p>Right, the issue is that the buffer could be filling up due to a direct cycle. Or it could be that the receiver is just ... very ... slow...</p>",
        "id": 233951010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618057228
    },
    {
        "content": "<p>Anyway I ended up writing two narratives to work around this: <a href=\"https://github.com/rust-lang/wg-async-foundations/pull/138\">https://github.com/rust-lang/wg-async-foundations/pull/138</a></p>",
        "id": 233951028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618057244
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let me know if you would prefer a branching narrative like this to be presented as two distinct stories on two pull requests</p>",
        "id": 233960786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618066095
    }
]