[
    {
        "content": "<p>The \"Portable across runtimes\" milestone is marked as <span aria-label=\"zzz\" class=\"emoji emoji-1f4a4\" role=\"img\" title=\"zzz\">:zzz:</span> on the roadmap, what other work has to get done before this can be worked on?</p>",
        "id": 262518875,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637704397
    },
    {
        "content": "<p>Or is it more that it isn't a priority yet</p>",
        "id": 262518898,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637704409
    },
    {
        "content": "<p>I’m working on it! There is a repo and some issues, but not much of substance yet</p>",
        "id": 262524201,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1637707130
    },
    {
        "content": "<p>Would you like to be involved?</p>",
        "id": 262524212,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1637707144
    },
    {
        "content": "<p>Yes I would <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 262542070,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637723536
    },
    {
        "content": "<p>The roadmap should probably be updated then</p>",
        "id": 262542080,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637723548
    },
    {
        "content": "<p>I take it the provide_any RFC is part of the initiative?</p>",
        "id": 262542093,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637723572
    },
    {
        "content": "<p>It isn’t, it’s motivated by improving error handling, but it helps a little bit indirectly because it is a step towards moving Error into core which lets us put AsyncRead and AsyncWrite in core rather than std</p>",
        "id": 262556239,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1637741226
    },
    {
        "content": "<p>I think some solution for \"provide a unique impl of a Trait on a crate-graph-wide basis\" (don't remember what that was titled) would be needed for this, too.</p>",
        "id": 262556753,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637741649
    },
    {
        "content": "<p>So that there's a means of providing a global executor, or other global resources that might be needed.</p>",
        "id": 262556763,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637741667
    },
    {
        "content": "<blockquote>\n<p>It isn't, it's motivated by improving error handling</p>\n</blockquote>\n<p>I was thinking in terms of generic access to <code>Context</code></p>",
        "id": 262586851,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637759924
    },
    {
        "content": "<p>That is definitely a potential use case, but I'm not aware at the moment of any strong motivation for adding things to Context</p>",
        "id": 262587753,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1637760417
    },
    {
        "content": "<p>Things like spawners or timers</p>",
        "id": 262588411,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637760764
    },
    {
        "content": "<blockquote>\n<p>So that there's a means of providing a global executor, or other global resources that might be needed.</p>\n</blockquote>\n<p>There is also already the global allocator solution</p>",
        "id": 262589479,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1637761345
    },
    {
        "content": "<p>These are all important things to talk about, but they feel a bit to me like cart before horse</p>",
        "id": 263034778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1638204486
    },
    {
        "content": "<p>The most imminent issues that seem like they ought to be ironed out is an \"async fn\"-friendly version of the <code>AsyncRead</code> traits</p>",
        "id": 263034821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1638204508
    }
]