[
    {
        "content": "<p>Is there a good place to look for the status of async drop?</p>",
        "id": 230931463,
        "sender_full_name": "Patrick Walton",
        "timestamp": 1616098956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384014\">@Patrick Walton</span> I think that the most recent proposal was <a href=\"https://github.com/rust-lang/rfcs/pull/2958\">https://github.com/rust-lang/rfcs/pull/2958</a>, and that it is basically 'state of the art', but that there are some concerns. Why do you ask?</p>",
        "id": 230936890,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101276
    },
    {
        "content": "<p>I would encourage you to open an issue or a PR describing what problems you are encountering that motivated this question</p>",
        "id": 230936929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101294
    },
    {
        "content": "<p>There's no particular problem that motivates it, it's more just curiosity, wanting to understand the history of the async design in Rust better</p>",
        "id": 230937102,
        "sender_full_name": "Patrick Walton",
        "timestamp": 1616101358
    },
    {
        "content": "<p>Thanks for the pointer :)</p>",
        "id": 230937331,
        "sender_full_name": "Patrick Walton",
        "timestamp": 1616101452
    },
    {
        "content": "<p>Oh, I have an example of a motivation on this tho ^^</p>",
        "id": 230937347,
        "sender_full_name": "nagisa",
        "timestamp": 1616101458
    },
    {
        "content": "<p>Fooey. Well, then I encourage you to get folks in FB to participate regardless</p>",
        "id": 230937355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101464
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/187312-wg-async-foundations/topic/Async.20drop/near/230937347\">said</a>:</p>\n<blockquote>\n<p>Oh, I have an example of a motivation on this tho ^^</p>\n</blockquote>\n<p>now we're talking!</p>",
        "id": 230937361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101467
    },
    {
        "content": "<p>Where do I write it?</p>",
        "id": 230937383,
        "sender_full_name": "nagisa",
        "timestamp": 1616101482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <a href=\"https://nikomatsakis.github.io/wg-async-foundations/vision/how_to_vision/status_quo.html#tldr\">https://nikomatsakis.github.io/wg-async-foundations/vision/how_to_vision/status_quo.html#tldr</a></p>",
        "id": 230937423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101501
    },
    {
        "content": "<p>probably open an issue is the easiest way to start :)</p>",
        "id": 230937448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101509
    },
    {
        "content": "<p>the idea would be to describe the problem you are facing now</p>",
        "id": 230937472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101517
    },
    {
        "content": "<p>(not the <em>solution</em>, that comes later)</p>",
        "id": 230937495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1616101531
    },
    {
        "content": "<p>So this grew out of a question of trying to make C++ senders/receivers work well with Rust futures</p>",
        "id": 230939203,
        "sender_full_name": "Patrick Walton",
        "timestamp": 1616102233
    },
    {
        "content": "<p>Now I know the issue: we want to call APIs that use the C++ equivalent of futures from Rust programs, but C++ futures must be polled to completion (it's undefined behavior to drop them), while Rust futures can be dropped at any time.</p>",
        "id": 230973239,
        "sender_full_name": "Patrick Walton",
        "timestamp": 1616126868
    }
]