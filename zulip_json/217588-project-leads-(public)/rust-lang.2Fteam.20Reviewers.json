[
    {
        "content": "<p>Hey, in getting more people to sign up and use <code>rust-lang/team</code>, I've seen more and more people ask about who they should ping to merge the changes, because they'll ping their team leads who approved the PR, but they often aren't the same people who can merge it. Can we document who to ping? Right I think it's been defacto core (mainly pietro, &amp; niko afaik), and could we increase the bus factor of people with merge permissions?</p>",
        "id": 188494222,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582062008
    },
    {
        "content": "<p>hmm the people with review rights should all have merge permissions, no?</p>",
        "id": 188494271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582062070
    },
    {
        "content": "<p>Ideally maybe we could have a bot that merges when team lead(s) approve.</p>",
        "id": 188494280,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582062080
    },
    {
        "content": "<p>maybe I'm out of touch with the current setup of other teams.</p>",
        "id": 188494314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582062105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I mean the number of people who review <code>rust-lang/team</code> repo specifically, sorry if that was unclear.</p>",
        "id": 188494385,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582062137
    },
    {
        "content": "<p>oh oh</p>",
        "id": 188494436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582062183
    },
    {
        "content": "<p>sorry i get it now</p>",
        "id": 188494444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582062197
    },
    {
        "content": "<p>I think just core is fine for now. Once team lead approves (who realistically is likely at least somewhat on core).</p>",
        "id": 188495278,
        "sender_full_name": "simulacrum",
        "timestamp": 1582062728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Not working group leads, which are the larger amount of traffic on team.</p>",
        "id": 188495405,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582062814
    },
    {
        "content": "<p>I think the majority of traffic is from formation of the ice breaker and code cleanup WGs, and that'll (I suspect) die down to near-zero within days.</p>",
        "id": 188495654,
        "sender_full_name": "simulacrum",
        "timestamp": 1582062969
    },
    {
        "content": "<p>I personally believe that there is not enough reason to write a bot, and I would not be entirely comfortable with giving a bot that kind of power.</p>",
        "id": 188495690,
        "sender_full_name": "simulacrum",
        "timestamp": 1582063003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Well my preferred solution would be to just add more people who can merge. I don't think leaving it to core is any kind of solution, when core is already so overwhelmed. There are issues old enough to walk and talk blocked on core.</p>",
        "id": 188497282,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582064348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> the team repo is critical, because anyone with unconditional write access to it can escalate permissions up to core and infra-admins</p>",
        "id": 188497437,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064487
    },
    {
        "content": "<p>I had an idea to ease the problem, but I didn't have time to implement it yet</p>",
        "id": 188497451,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064503
    },
    {
        "content": "<p>basically what we want is:</p>\n<ul>\n<li>team leads can add new members to their team at will</li>\n<li>any other change (including permissions) requires approval from the core team, which is just a security review</li>\n</ul>",
        "id": 188497542,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064553
    },
    {
        "content": "<p>so my idea was to split the team files into two files, like:</p>\n<div class=\"codehilite\"><pre><span></span>teams/infra/people.toml\nteams/infra/meta.toml\n</pre></div>\n\n\n<p>and use github's code owners feature to make the relevant team leads and core the \"code owners\" of their team, and just core the \"code owners\" of any other file in the repo</p>",
        "id": 188497613,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064628
    },
    {
        "content": "<p>and configure github to require approval from code owners to allow merging changes</p>",
        "id": 188497622,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064639
    },
    {
        "content": "<p><em>if</em> github works the way we want (any change other than to a <code>people.toml</code> requires core team approval, even if the other file changed is a <code>people.toml</code>), that would allow us to safely give write access to all team and wg leads, while being assured that they can't escalate privileges</p>",
        "id": 188497749,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064714
    },
    {
        "content": "<p>this needs more testing in a dummy repo to make sure the feature works the way we expect (I don't have much experience with it, I mostly just read the docs) and then the actual implementation work</p>",
        "id": 188497773,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064747
    },
    {
        "content": "<p>let me know if something is not clear, and I'll try explain it better when it's not late here :)</p>",
        "id": 188497886,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I understand it's critical, I still think it's worth the potential risk.</p>",
        "id": 188497893,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582064859
    },
    {
        "content": "<p>I absolutely don't want any wg lead to be able to redirect <a href=\"mailto:admin@rust-lang.org\" title=\"mailto:admin@rust-lang.org\">admin@rust-lang.org</a> emails, that would be <em>horrible</em></p>",
        "id": 188497965,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064898
    },
    {
        "content": "<p>Like what you said you proposed is very complicated compared to just trusting someone.</p>",
        "id": 188497979,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582064908
    },
    {
        "content": "<p>it's not just trust in the leads themselves, but also in their security practices</p>",
        "id": 188497986,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064915
    },
    {
        "content": "<p>and limiting the attack surface of the project as a whole</p>",
        "id": 188497992,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582064924
    },
    {
        "content": "<p>I'd love to fix the problem, but the solution needs to avoid allowing leads to escalate privileges</p>",
        "id": 188498128,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582065043
    },
    {
        "content": "<p>if you have better ideas I'm all ears :D</p>",
        "id": 188498196,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582065113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Well we could have a train model, similar to the website or rust with master as a protected branch.</p>",
        "id": 188498513,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582065402
    },
    {
        "content": "<p>Have a new branch called <code>pending</code>, and leads can merge whatever into that, and then someone from core commits a block of changes at once instead of each one individually.</p>",
        "id": 188498622,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582065492
    },
    {
        "content": "<p>I'm not clear how that is better from a lot of small PRs getting merged as a batch</p>",
        "id": 188498681,
        "sender_full_name": "Lokathor",
        "timestamp": 1582065557
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> What you said is what I proposed so I'm not sure what you mean.</p>",
        "id": 188498725,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582065601
    },
    {
        "content": "<p>I mean I don't see how merging 5PRs to a pending branch and then merging that branch to master once is better than just merging 5PRs each to master</p>",
        "id": 188498839,
        "sender_full_name": "Lokathor",
        "timestamp": 1582065693
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> Because any lead could merge the 5 PRs, and then someone from core only has to merge and review one PR consisting of 5 commits.</p>",
        "id": 188498939,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582065753
    },
    {
        "content": "<p>It reduces the number of tasks required by someone in core from 5 to 1.</p>",
        "id": 188499103,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582065924
    },
    {
        "content": "<p>hmm</p>",
        "id": 188499467,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066195
    },
    {
        "content": "<p>the downside of that would be increased friction when someone from core wants to merge just a single PR</p>",
        "id": 188499544,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066233
    },
    {
        "content": "<p>as we would have to first merge into pending and then merge pending into master</p>",
        "id": 188499567,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066247
    },
    {
        "content": "<p>potentially having to review other changes in pending in the meantime, even though we only wanted to merge a single PR</p>",
        "id": 188499614,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066293
    },
    {
        "content": "<p>the way I see it we only have this problem if there is a large influx of new members</p>",
        "id": 188499634,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066320
    },
    {
        "content": "<p>so we could create tooling to easily rollup PRs, and the lead of a icebreakers crew could rollup the tens of PRs related to that into a single one for core to review</p>",
        "id": 188499711,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066369
    },
    {
        "content": "<p>like we've been doing manually these days</p>",
        "id": 188499717,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582066376
    },
    {
        "content": "<p>I feel like the increased friction is quite minimal, it's rare that any change to <code>rust-lang/team</code> is urgent, and it's fine if some of the time it's a bit harder for core, when it's easier for everyone else most of the time.</p>",
        "id": 188500035,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582066621
    },
    {
        "content": "<p>I don't feel like tooling will solve this problem, that's adding more dependencies, as the tooling needs to be maintained.</p>",
        "id": 188500466,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582066983
    },
    {
        "content": "<p>to be clear, I think if someone wants to create batch PRs then that'd be fine IMO, though it may not be that much easier than just individual PR review anyway</p>",
        "id": 188500497,
        "sender_full_name": "simulacrum",
        "timestamp": 1582067029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Well the main part of that is having master protected, and giving leads write permissions, which someone can't just do, it has be someone on core.</p>",
        "id": 188500692,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582067203
    },
    {
        "content": "<p>Just making batch PRs wouldn't make any sense.</p>",
        "id": 188500709,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582067222
    },
    {
        "content": "<p>batch PRs are equivalent to the staging branch?</p>",
        "id": 188500719,
        "sender_full_name": "simulacrum",
        "timestamp": 1582067236
    },
    {
        "content": "<p>I'm not opposed to having a staging branch that is periodically merged into master by someone from core, via a PR that pings someone on core</p>",
        "id": 188500740,
        "sender_full_name": "simulacrum",
        "timestamp": 1582067265
    },
    {
        "content": "<p>presuming we can do that in github without granting everyone write permissions</p>",
        "id": 188500753,
        "sender_full_name": "simulacrum",
        "timestamp": 1582067279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Yes equivalent to that.</p>",
        "id": 188500754,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582067281
    },
    {
        "content": "<p>Well I believe we already have that situation on other repos, e.g. I can write to the <code>master</code> branch of the website but not <code>deploy</code>.</p>",
        "id": 188500856,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582067333
    },
    {
        "content": "<p>hm, well, something to think about. I don't personally see current situation as a big problem.</p>",
        "id": 188502156,
        "sender_full_name": "simulacrum",
        "timestamp": 1582068552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm not saying it's a big problem. I don't know if we have any really big problems, we have a lot of little ones.</p>",
        "id": 188504886,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582071256
    },
    {
        "content": "<p>Sure. I guess something we could fix. Probably won't have time soon though :)</p>",
        "id": 188504994,
        "sender_full_name": "simulacrum",
        "timestamp": 1582071365
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 191471931,
        "sender_full_name": "spacekookie",
        "timestamp": 1584969930
    }
]